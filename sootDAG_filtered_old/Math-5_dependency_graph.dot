digraph G {
  "org.apache.commons.math3.complex$Complex#sqrt1z()" -> "org.apache.commons.math3.complex$Complex#multiply(org.apache.commons.math3.complex.Complex)";
  "org.apache.commons.math3.complex$Complex#sqrt1z()" -> "org.apache.commons.math3.complex$Complex#isInfinite()";
  "org.apache.commons.math3.complex$Complex#sqrt1z()" -> "org.apache.commons.math3.complex$Complex#subtract(org.apache.commons.math3.complex.Complex)";
  "org.apache.commons.math3.complex$Complex#sqrt1z()" -> "org.apache.commons.math3.complex$Complex#sqrt()";
  "org.apache.commons.math3.complex$Complex#sqrt1z()" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#sqrt1z()" -> "org.apache.commons.math3.complex$Complex#getReal()";
  "org.apache.commons.math3.complex$Complex#sqrt1z()" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#sqrt1z()" -> "org.apache.commons.math3.complex$Complex#getImaginary()";
  "org.apache.commons.math3.complex$Complex#sqrt1z()" -> "org.apache.commons.math3.complex$Complex#abs()";
  "org.apache.commons.math3.complex$Complex#multiply(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#multiply(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#subtract(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#subtract(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#getReal()";
  "org.apache.commons.math3.complex$Complex#subtract(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#subtract(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#getImaginary()";
  "org.apache.commons.math3.complex$Complex#sqrt()" -> "org.apache.commons.math3.complex$Complex#isInfinite()";
  "org.apache.commons.math3.complex$Complex#sqrt()" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#sqrt()" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#sqrt()" -> "org.apache.commons.math3.complex$Complex#abs()";
  "org.apache.commons.math3.complex$Complex#createComplex(double,double)" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#abs()" -> "org.apache.commons.math3.complex$Complex#isInfinite()";
  "org.apache.commons.math3.complex$Complex#sin()" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#sin()" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#cos()" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#cos()" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#valueOf(double)" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#divide(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#isInfinite()";
  "org.apache.commons.math3.complex$Complex#divide(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#divide(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#getReal()";
  "org.apache.commons.math3.complex$Complex#divide(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#divide(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#getImaginary()";
  "org.apache.commons.math3.complex$Complex#subtract(double)" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#subtract(double)" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#pow(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#multiply(org.apache.commons.math3.complex.Complex)";
  "org.apache.commons.math3.complex$Complex#pow(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#exp()";
  "org.apache.commons.math3.complex$Complex#pow(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#isInfinite()";
  "org.apache.commons.math3.complex$Complex#pow(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#pow(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#log()";
  "org.apache.commons.math3.complex$Complex#pow(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#pow(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#abs()";
  "org.apache.commons.math3.complex$Complex#exp()" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#exp()" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#log()" -> "org.apache.commons.math3.complex$Complex#isInfinite()";
  "org.apache.commons.math3.complex$Complex#log()" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#log()" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#log()" -> "org.apache.commons.math3.complex$Complex#abs()";
  "org.apache.commons.math3.complex$Complex#readResolve()" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#readResolve()" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#atan()" -> "org.apache.commons.math3.complex$Complex#divide(org.apache.commons.math3.complex.Complex)";
  "org.apache.commons.math3.complex$Complex#atan()" -> "org.apache.commons.math3.complex$Complex#multiply(org.apache.commons.math3.complex.Complex)";
  "org.apache.commons.math3.complex$Complex#atan()" -> "org.apache.commons.math3.complex$Complex#isInfinite()";
  "org.apache.commons.math3.complex$Complex#atan()" -> "org.apache.commons.math3.complex$Complex#subtract(org.apache.commons.math3.complex.Complex)";
  "org.apache.commons.math3.complex$Complex#atan()" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#atan()" -> "org.apache.commons.math3.complex$Complex#getReal()";
  "org.apache.commons.math3.complex$Complex#atan()" -> "org.apache.commons.math3.complex$Complex#log()";
  "org.apache.commons.math3.complex$Complex#atan()" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#atan()" -> "org.apache.commons.math3.complex$Complex#getImaginary()";
  "org.apache.commons.math3.complex$Complex#atan()" -> "org.apache.commons.math3.complex$Complex#add(org.apache.commons.math3.complex.Complex)";
  "org.apache.commons.math3.complex$Complex#atan()" -> "org.apache.commons.math3.complex$Complex#abs()";
  "org.apache.commons.math3.complex$Complex#add(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#add(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#getReal()";
  "org.apache.commons.math3.complex$Complex#add(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#add(org.apache.commons.math3.complex.Complex)" -> "org.apache.commons.math3.complex$Complex#getImaginary()";
  "org.apache.commons.math3.complex$Complex#tanh()" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#tanh()" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#nthRoot(int)" -> "org.apache.commons.math3.complex$Complex#isInfinite()";
  "org.apache.commons.math3.complex$Complex#nthRoot(int)" -> "org.apache.commons.math3.complex$Complex#getArgument()";
  "org.apache.commons.math3.complex$Complex#nthRoot(int)" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#nthRoot(int)" -> "org.apache.commons.math3.complex$Complex#getReal()";
  "org.apache.commons.math3.complex$Complex#nthRoot(int)" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#nthRoot(int)" -> "org.apache.commons.math3.complex$Complex#getImaginary()";
  "org.apache.commons.math3.complex$Complex#nthRoot(int)" -> "org.apache.commons.math3.complex$Complex#abs()";
  "org.apache.commons.math3.complex$Complex#getArgument()" -> "org.apache.commons.math3.complex$Complex#getReal()";
  "org.apache.commons.math3.complex$Complex#getArgument()" -> "org.apache.commons.math3.complex$Complex#getImaginary()";
  "org.apache.commons.math3.complex$Complex#tan()" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#tan()" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#multiply(double)" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#multiply(double)" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#negate()" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#negate()" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#valueOf(double,double)" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#cosh()" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#cosh()" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#conjugate()" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#conjugate()" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#divide(double)" -> "org.apache.commons.math3.complex$Complex#isInfinite()";
  "org.apache.commons.math3.complex$Complex#divide(double)" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#divide(double)" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#asin()" -> "org.apache.commons.math3.complex$Complex#sqrt1z()";
  "org.apache.commons.math3.complex$Complex#asin()" -> "org.apache.commons.math3.complex$Complex#multiply(org.apache.commons.math3.complex.Complex)";
  "org.apache.commons.math3.complex$Complex#asin()" -> "org.apache.commons.math3.complex$Complex#isInfinite()";
  "org.apache.commons.math3.complex$Complex#asin()" -> "org.apache.commons.math3.complex$Complex#subtract(org.apache.commons.math3.complex.Complex)";
  "org.apache.commons.math3.complex$Complex#asin()" -> "org.apache.commons.math3.complex$Complex#sqrt()";
  "org.apache.commons.math3.complex$Complex#asin()" -> "org.apache.commons.math3.complex$Complex#negate()";
  "org.apache.commons.math3.complex$Complex#asin()" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#asin()" -> "org.apache.commons.math3.complex$Complex#getReal()";
  "org.apache.commons.math3.complex$Complex#asin()" -> "org.apache.commons.math3.complex$Complex#log()";
  "org.apache.commons.math3.complex$Complex#asin()" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#asin()" -> "org.apache.commons.math3.complex$Complex#getImaginary()";
  "org.apache.commons.math3.complex$Complex#asin()" -> "org.apache.commons.math3.complex$Complex#add(org.apache.commons.math3.complex.Complex)";
  "org.apache.commons.math3.complex$Complex#asin()" -> "org.apache.commons.math3.complex$Complex#abs()";
  "org.apache.commons.math3.complex$Complex#reciprocal()" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#reciprocal()" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#acos()" -> "org.apache.commons.math3.complex$Complex#sqrt1z()";
  "org.apache.commons.math3.complex$Complex#acos()" -> "org.apache.commons.math3.complex$Complex#multiply(org.apache.commons.math3.complex.Complex)";
  "org.apache.commons.math3.complex$Complex#acos()" -> "org.apache.commons.math3.complex$Complex#isInfinite()";
  "org.apache.commons.math3.complex$Complex#acos()" -> "org.apache.commons.math3.complex$Complex#subtract(org.apache.commons.math3.complex.Complex)";
  "org.apache.commons.math3.complex$Complex#acos()" -> "org.apache.commons.math3.complex$Complex#sqrt()";
  "org.apache.commons.math3.complex$Complex#acos()" -> "org.apache.commons.math3.complex$Complex#negate()";
  "org.apache.commons.math3.complex$Complex#acos()" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#acos()" -> "org.apache.commons.math3.complex$Complex#getReal()";
  "org.apache.commons.math3.complex$Complex#acos()" -> "org.apache.commons.math3.complex$Complex#log()";
  "org.apache.commons.math3.complex$Complex#acos()" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#acos()" -> "org.apache.commons.math3.complex$Complex#getImaginary()";
  "org.apache.commons.math3.complex$Complex#acos()" -> "org.apache.commons.math3.complex$Complex#add(org.apache.commons.math3.complex.Complex)";
  "org.apache.commons.math3.complex$Complex#acos()" -> "org.apache.commons.math3.complex$Complex#abs()";
  "org.apache.commons.math3.complex$Complex#multiply(int)" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#multiply(int)" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#pow(double)" -> "org.apache.commons.math3.complex$Complex#exp()";
  "org.apache.commons.math3.complex$Complex#pow(double)" -> "org.apache.commons.math3.complex$Complex#isInfinite()";
  "org.apache.commons.math3.complex$Complex#pow(double)" -> "org.apache.commons.math3.complex$Complex#multiply(double)";
  "org.apache.commons.math3.complex$Complex#pow(double)" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#pow(double)" -> "org.apache.commons.math3.complex$Complex#log()";
  "org.apache.commons.math3.complex$Complex#pow(double)" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#pow(double)" -> "org.apache.commons.math3.complex$Complex#abs()";
  "org.apache.commons.math3.complex$Complex#sinh()" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#sinh()" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
  "org.apache.commons.math3.complex$Complex#add(double)" -> "org.apache.commons.math3.complex$Complex#createComplex(double,double)";
  "org.apache.commons.math3.complex$Complex#add(double)" -> "org.apache.commons.math3.complex$Complex#<clinit>()";
}
