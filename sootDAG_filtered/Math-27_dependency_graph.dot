digraph G {
  "org.apache.commons.math3.util$FastMath#tanh(double)" -> "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()";
  "org.apache.commons.math3.util$FastMath#tanh(double)" -> "org.apache.commons.math3.util$FastMath#exp(double,double,double[])";
  "org.apache.commons.math3.util$FastMath#tanh(double)" -> "org.apache.commons.math3.util$FastMath#expm1(double,double[])";
  "org.apache.commons.math3.util$FastMath#tanh(double)" -> "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()";
  "org.apache.commons.math3.util$FastMath#tanh(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#exp(double,double,double[])" -> "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()";
  "org.apache.commons.math3.util$FastMath#exp(double,double,double[])" -> "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()";
  "org.apache.commons.math3.util$FastMath#exp(double,double,double[])" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#expm1(double,double[])" -> "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()";
  "org.apache.commons.math3.util$FastMath#expm1(double,double[])" -> "org.apache.commons.math3.util$FastMath#exp(double,double,double[])";
  "org.apache.commons.math3.util$FastMath#expm1(double,double[])" -> "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()";
  "org.apache.commons.math3.util$FastMath#expm1(double,double[])" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#log1p(double)" -> "org.apache.commons.math3.util$FastMath#log(double,double[])";
  "org.apache.commons.math3.util$FastMath#log1p(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#log1p(double)" -> "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()";
  "org.apache.commons.math3.util$FastMath#log(double,double[])" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#log(double,double[])" -> "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()";
  "org.apache.commons.math3.util$FastMath#sin(double)" -> "org.apache.commons.math3.util$FastMath#polyCosine(double)";
  "org.apache.commons.math3.util$FastMath#sin(double)" -> "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()";
  "org.apache.commons.math3.util$FastMath#sin(double)" -> "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])";
  "org.apache.commons.math3.util$FastMath#sin(double)" -> "org.apache.commons.math3.util$FastMath#polySine(double)";
  "org.apache.commons.math3.util$FastMath#sin(double)" -> "org.apache.commons.math3.util$FastMath$CodyWaite#getK()";
  "org.apache.commons.math3.util$FastMath#sin(double)" -> "org.apache.commons.math3.util$FastMath#cosQ(double,double)";
  "org.apache.commons.math3.util$FastMath#sin(double)" -> "org.apache.commons.math3.util$FastMath#sinQ(double,double)";
  "org.apache.commons.math3.util$FastMath#sin(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#sin(double)" -> "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()";
  "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#cosQ(double,double)" -> "org.apache.commons.math3.util$FastMath#polyCosine(double)";
  "org.apache.commons.math3.util$FastMath#cosQ(double,double)" -> "org.apache.commons.math3.util$FastMath#polySine(double)";
  "org.apache.commons.math3.util$FastMath#cosQ(double,double)" -> "org.apache.commons.math3.util$FastMath#sinQ(double,double)";
  "org.apache.commons.math3.util$FastMath#cosQ(double,double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#sinQ(double,double)" -> "org.apache.commons.math3.util$FastMath#polyCosine(double)";
  "org.apache.commons.math3.util$FastMath#sinQ(double,double)" -> "org.apache.commons.math3.util$FastMath#polySine(double)";
  "org.apache.commons.math3.util$FastMath#sinQ(double,double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#subtract(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(int,int)";
  "org.apache.commons.math3.fraction$Fraction#subtract(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.fraction$Fraction#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#subtract(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(int,int)";
  "org.apache.commons.math3.fraction$Fraction#subtract(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.fraction$Fraction#negate()";
  "org.apache.commons.math3.fraction$Fraction#subtract(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#subtract(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)";
  "org.apache.commons.math3.fraction$Fraction#subtract(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(int,int)";
  "org.apache.commons.math3.fraction$Fraction#subtract(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$FastMath#abs(int)";
  "org.apache.commons.math3.fraction$Fraction#subtract(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.fraction$Fraction#addSub(org.apache.commons.math3.fraction.Fraction,boolean)";
  "org.apache.commons.math3.fraction$Fraction#subtract(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#negate()" -> "org.apache.commons.math3.fraction$Fraction#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)" -> "org.apache.commons.math3.util$FastMath#abs(int)";
  "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#addSub(org.apache.commons.math3.fraction.Fraction,boolean)" -> "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(int,int)";
  "org.apache.commons.math3.fraction$Fraction#addSub(org.apache.commons.math3.fraction.Fraction,boolean)" -> "org.apache.commons.math3.fraction$Fraction#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#addSub(org.apache.commons.math3.fraction.Fraction,boolean)" -> "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(int,int)";
  "org.apache.commons.math3.fraction$Fraction#addSub(org.apache.commons.math3.fraction.Fraction,boolean)" -> "org.apache.commons.math3.fraction$Fraction#negate()";
  "org.apache.commons.math3.fraction$Fraction#addSub(org.apache.commons.math3.fraction.Fraction,boolean)" -> "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#addSub(org.apache.commons.math3.fraction.Fraction,boolean)" -> "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)";
  "org.apache.commons.math3.fraction$Fraction#addSub(org.apache.commons.math3.fraction.Fraction,boolean)" -> "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(int,int)";
  "org.apache.commons.math3.fraction$Fraction#addSub(org.apache.commons.math3.fraction.Fraction,boolean)" -> "org.apache.commons.math3.util$FastMath#abs(int)";
  "org.apache.commons.math3.fraction$Fraction#addSub(org.apache.commons.math3.fraction.Fraction,boolean)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#tan(double)" -> "org.apache.commons.math3.util$FastMath#polyCosine(double)";
  "org.apache.commons.math3.util$FastMath#tan(double)" -> "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()";
  "org.apache.commons.math3.util$FastMath#tan(double)" -> "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])";
  "org.apache.commons.math3.util$FastMath#tan(double)" -> "org.apache.commons.math3.util$FastMath#polySine(double)";
  "org.apache.commons.math3.util$FastMath#tan(double)" -> "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)";
  "org.apache.commons.math3.util$FastMath#tan(double)" -> "org.apache.commons.math3.util$FastMath$CodyWaite#getK()";
  "org.apache.commons.math3.util$FastMath#tan(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#tan(double)" -> "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()";
  "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)" -> "org.apache.commons.math3.util$FastMath#polyCosine(double)";
  "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)" -> "org.apache.commons.math3.util$FastMath#polySine(double)";
  "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#getReducedFraction(int,int)" -> "org.apache.commons.math3.fraction$Fraction#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#getReducedFraction(int,int)" -> "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#getReducedFraction(int,int)" -> "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)";
  "org.apache.commons.math3.fraction$Fraction#getReducedFraction(int,int)" -> "org.apache.commons.math3.util$FastMath#abs(int)";
  "org.apache.commons.math3.fraction$Fraction#getReducedFraction(int,int)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientDouble(int,int)" -> "org.apache.commons.math3.util$ArithmeticUtils#checkBinomial(int,int)";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientDouble(int,int)" -> "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientDouble(int,int)" -> "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientDouble(int,int)" -> "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficient(int,int)";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientDouble(int,int)" -> "org.apache.commons.math3.util$FastMath#floor(double)";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientDouble(int,int)" -> "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(long,long)";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientDouble(int,int)" -> "org.apache.commons.math3.util$FastMath#abs(int)";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientDouble(int,int)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficient(int,int)" -> "org.apache.commons.math3.util$ArithmeticUtils#checkBinomial(int,int)";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficient(int,int)" -> "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficient(int,int)" -> "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficient(int,int)" -> "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(long,long)";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficient(int,int)" -> "org.apache.commons.math3.util$FastMath#abs(int)";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficient(int,int)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(long,long)" -> "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#multiply(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(int,int)";
  "org.apache.commons.math3.fraction$Fraction#multiply(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.fraction$Fraction#getReducedFraction(int,int)";
  "org.apache.commons.math3.fraction$Fraction#multiply(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.fraction$Fraction#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#multiply(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#multiply(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)";
  "org.apache.commons.math3.fraction$Fraction#multiply(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$FastMath#abs(int)";
  "org.apache.commons.math3.fraction$Fraction#multiply(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#cbrt(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#toDegrees(double)" -> "org.apache.commons.math3.util$FastMath#doubleHighPart(double)";
  "org.apache.commons.math3.util$FastMath#toDegrees(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#log(double,double)" -> "org.apache.commons.math3.util$FastMath#log(double)";
  "org.apache.commons.math3.util$FastMath#log(double,double)" -> "org.apache.commons.math3.util$FastMath#log(double,double[])";
  "org.apache.commons.math3.util$FastMath#log(double,double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#log(double,double)" -> "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()";
  "org.apache.commons.math3.util$FastMath#log(double)" -> "org.apache.commons.math3.util$FastMath#log(double,double[])";
  "org.apache.commons.math3.util$FastMath#log(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#log(double)" -> "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()";
  "org.apache.commons.math3.util$FastMath#cos(double)" -> "org.apache.commons.math3.util$FastMath#polyCosine(double)";
  "org.apache.commons.math3.util$FastMath#cos(double)" -> "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()";
  "org.apache.commons.math3.util$FastMath#cos(double)" -> "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])";
  "org.apache.commons.math3.util$FastMath#cos(double)" -> "org.apache.commons.math3.util$FastMath#polySine(double)";
  "org.apache.commons.math3.util$FastMath#cos(double)" -> "org.apache.commons.math3.util$FastMath$CodyWaite#getK()";
  "org.apache.commons.math3.util$FastMath#cos(double)" -> "org.apache.commons.math3.util$FastMath#cosQ(double,double)";
  "org.apache.commons.math3.util$FastMath#cos(double)" -> "org.apache.commons.math3.util$FastMath#sinQ(double,double)";
  "org.apache.commons.math3.util$FastMath#cos(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#cos(double)" -> "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()";
  "org.apache.commons.math3.util$FastMath#asin(double)" -> "org.apache.commons.math3.util$FastMath#sqrt(double)";
  "org.apache.commons.math3.util$FastMath#asin(double)" -> "org.apache.commons.math3.util$FastMath#copySign(double,double)";
  "org.apache.commons.math3.util$FastMath#asin(double)" -> "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)";
  "org.apache.commons.math3.util$FastMath#asin(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)" -> "org.apache.commons.math3.util$FastMath#copySign(double,double)";
  "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long)" -> "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long,org.apache.commons.math3.exception.util.Localizable)";
  "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long)" -> "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long,org.apache.commons.math3.exception.util.Localizable)" -> "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#intValue()" -> "org.apache.commons.math3.fraction$Fraction#doubleValue()";
  "org.apache.commons.math3.util$FastMath#atan(double)" -> "org.apache.commons.math3.util$FastMath#copySign(double,double)";
  "org.apache.commons.math3.util$FastMath#atan(double)" -> "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)";
  "org.apache.commons.math3.util$FastMath#atan(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#nextUp(double)" -> "org.apache.commons.math3.util$FastMath#nextAfter(double,double)";
  "org.apache.commons.math3.util$FastMath#nextUp(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#add(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(int,int)";
  "org.apache.commons.math3.fraction$Fraction#add(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.fraction$Fraction#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#add(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(int,int)";
  "org.apache.commons.math3.fraction$Fraction#add(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.fraction$Fraction#negate()";
  "org.apache.commons.math3.fraction$Fraction#add(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#add(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)";
  "org.apache.commons.math3.fraction$Fraction#add(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(int,int)";
  "org.apache.commons.math3.fraction$Fraction#add(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$FastMath#abs(int)";
  "org.apache.commons.math3.fraction$Fraction#add(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.fraction$Fraction#addSub(org.apache.commons.math3.fraction.Fraction,boolean)";
  "org.apache.commons.math3.fraction$Fraction#add(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#main(java.lang.String[])" -> "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()";
  "org.apache.commons.math3.util$FastMath#main(java.lang.String[])" -> "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()";
  "org.apache.commons.math3.util$FastMath#main(java.lang.String[])" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#main(java.lang.String[])" -> "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#longValue()" -> "org.apache.commons.math3.fraction$Fraction#doubleValue()";
  "org.apache.commons.math3.util$FastMath#acos(double)" -> "org.apache.commons.math3.util$FastMath#sqrt(double)";
  "org.apache.commons.math3.util$FastMath#acos(double)" -> "org.apache.commons.math3.util$FastMath#doubleHighPart(double)";
  "org.apache.commons.math3.util$FastMath#acos(double)" -> "org.apache.commons.math3.util$FastMath#copySign(double,double)";
  "org.apache.commons.math3.util$FastMath#acos(double)" -> "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)";
  "org.apache.commons.math3.util$FastMath#acos(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(long,long)" -> "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long,org.apache.commons.math3.exception.util.Localizable)";
  "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(long,long)" -> "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()";
  "org.apache.commons.math3.util$FastMath#exp(double)" -> "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()";
  "org.apache.commons.math3.util$FastMath#exp(double)" -> "org.apache.commons.math3.util$FastMath#exp(double,double,double[])";
  "org.apache.commons.math3.util$FastMath#exp(double)" -> "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()";
  "org.apache.commons.math3.util$FastMath#exp(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#lcm(long,long)" -> "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#lcm(long,long)" -> "org.apache.commons.math3.util$ArithmeticUtils#gcd(long,long)";
  "org.apache.commons.math3.util$ArithmeticUtils#lcm(long,long)" -> "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(long,long)";
  "org.apache.commons.math3.util$ArithmeticUtils#lcm(long,long)" -> "org.apache.commons.math3.util$FastMath#abs(long)";
  "org.apache.commons.math3.util$ArithmeticUtils#lcm(long,long)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#gcd(long,long)" -> "org.apache.commons.math3.util$FastMath#abs(long)";
  "org.apache.commons.math3.util$ArithmeticUtils#gcd(long,long)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#add(int)" -> "org.apache.commons.math3.fraction$Fraction#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)" -> "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientDouble(int,int)";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)" -> "org.apache.commons.math3.util$ArithmeticUtils#checkBinomial(int,int)";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)" -> "org.apache.commons.math3.util$FastMath#log(double)";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)" -> "org.apache.commons.math3.util$FastMath#log(double,double[])";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)" -> "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)" -> "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)" -> "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficient(int,int)";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)" -> "org.apache.commons.math3.util$FastMath#floor(double)";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)" -> "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(long,long)";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)" -> "org.apache.commons.math3.util$FastMath#abs(int)";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)" -> "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#factorial(int)" -> "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#abs()" -> "org.apache.commons.math3.fraction$Fraction#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#abs()" -> "org.apache.commons.math3.fraction$Fraction#negate()";
  "org.apache.commons.math3.util$FastMath#log10(double)" -> "org.apache.commons.math3.util$FastMath#log(double,double[])";
  "org.apache.commons.math3.util$FastMath#log10(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#log10(double)" -> "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()";
  "org.apache.commons.math3.util$FastMath#nextUp(float)" -> "org.apache.commons.math3.util$FastMath#nextAfter(float,double)";
  "org.apache.commons.math3.util$FastMath#nextUp(float)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#atanh(double)" -> "org.apache.commons.math3.util$FastMath#log(double)";
  "org.apache.commons.math3.util$FastMath#atanh(double)" -> "org.apache.commons.math3.util$FastMath#log(double,double[])";
  "org.apache.commons.math3.util$FastMath#atanh(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#atanh(double)" -> "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()";
  "org.apache.commons.math3.util$FastMath#cosh(double)" -> "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()";
  "org.apache.commons.math3.util$FastMath#cosh(double)" -> "org.apache.commons.math3.util$FastMath#exp(double,double,double[])";
  "org.apache.commons.math3.util$FastMath#cosh(double)" -> "org.apache.commons.math3.util$FastMath#exp(double)";
  "org.apache.commons.math3.util$FastMath#cosh(double)" -> "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()";
  "org.apache.commons.math3.util$FastMath#cosh(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#ulp(double)" -> "org.apache.commons.math3.util$FastMath#abs(double)";
  "org.apache.commons.math3.util$FastMath#ulp(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#round(double)" -> "org.apache.commons.math3.util$FastMath#floor(double)";
  "org.apache.commons.math3.util$FastMath#round(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#expm1(double)" -> "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()";
  "org.apache.commons.math3.util$FastMath#expm1(double)" -> "org.apache.commons.math3.util$FastMath#exp(double,double,double[])";
  "org.apache.commons.math3.util$FastMath#expm1(double)" -> "org.apache.commons.math3.util$FastMath#expm1(double,double[])";
  "org.apache.commons.math3.util$FastMath#expm1(double)" -> "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()";
  "org.apache.commons.math3.util$FastMath#expm1(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#percentageValue()" -> "org.apache.commons.math3.fraction$Fraction#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#percentageValue()" -> "org.apache.commons.math3.fraction$Fraction#doubleValue()";
  "org.apache.commons.math3.fraction$Fraction#percentageValue()" -> "org.apache.commons.math3.fraction$Fraction#multiply(int)";
  "org.apache.commons.math3.fraction$Fraction#multiply(int)" -> "org.apache.commons.math3.fraction$Fraction#<clinit>()";
  "org.apache.commons.math3.util$FastMath#hypot(double,double)" -> "org.apache.commons.math3.util$FastMath#scalb(double,int)";
  "org.apache.commons.math3.util$FastMath#hypot(double,double)" -> "org.apache.commons.math3.util$FastMath#abs(double)";
  "org.apache.commons.math3.util$FastMath#hypot(double,double)" -> "org.apache.commons.math3.util$FastMath#sqrt(double)";
  "org.apache.commons.math3.util$FastMath#hypot(double,double)" -> "org.apache.commons.math3.util$FastMath#getExponent(double)";
  "org.apache.commons.math3.util$FastMath#hypot(double,double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#toRadians(double)" -> "org.apache.commons.math3.util$FastMath#doubleHighPart(double)";
  "org.apache.commons.math3.util$FastMath#toRadians(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#rint(double)" -> "org.apache.commons.math3.util$FastMath#floor(double)";
  "org.apache.commons.math3.util$FastMath#rint(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#pow(double,double)" -> "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()";
  "org.apache.commons.math3.util$FastMath#pow(double,double)" -> "org.apache.commons.math3.util$FastMath#exp(double,double,double[])";
  "org.apache.commons.math3.util$FastMath#pow(double,double)" -> "org.apache.commons.math3.util$FastMath#log(double,double[])";
  "org.apache.commons.math3.util$FastMath#pow(double,double)" -> "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()";
  "org.apache.commons.math3.util$FastMath#pow(double,double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#pow(double,double)" -> "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#reciprocal()" -> "org.apache.commons.math3.fraction$Fraction#<clinit>()";
  "org.apache.commons.math3.util$FastMath#acosh(double)" -> "org.apache.commons.math3.util$FastMath#sqrt(double)";
  "org.apache.commons.math3.util$FastMath#acosh(double)" -> "org.apache.commons.math3.util$FastMath#log(double)";
  "org.apache.commons.math3.util$FastMath#acosh(double)" -> "org.apache.commons.math3.util$FastMath#log(double,double[])";
  "org.apache.commons.math3.util$FastMath#acosh(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#acosh(double)" -> "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()";
  "org.apache.commons.math3.util$FastMath#ceil(double)" -> "org.apache.commons.math3.util$FastMath#floor(double)";
  "org.apache.commons.math3.util$FastMath#ceil(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#asinh(double)" -> "org.apache.commons.math3.util$FastMath#sqrt(double)";
  "org.apache.commons.math3.util$FastMath#asinh(double)" -> "org.apache.commons.math3.util$FastMath#log(double)";
  "org.apache.commons.math3.util$FastMath#asinh(double)" -> "org.apache.commons.math3.util$FastMath#log(double,double[])";
  "org.apache.commons.math3.util$FastMath#asinh(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#asinh(double)" -> "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#divide(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(int,int)";
  "org.apache.commons.math3.fraction$Fraction#divide(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.fraction$Fraction#getReducedFraction(int,int)";
  "org.apache.commons.math3.fraction$Fraction#divide(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.fraction$Fraction#multiply(org.apache.commons.math3.fraction.Fraction)";
  "org.apache.commons.math3.fraction$Fraction#divide(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.fraction$Fraction#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#divide(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#divide(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)";
  "org.apache.commons.math3.fraction$Fraction#divide(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.fraction$Fraction#reciprocal()";
  "org.apache.commons.math3.fraction$Fraction#divide(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$FastMath#abs(int)";
  "org.apache.commons.math3.fraction$Fraction#divide(org.apache.commons.math3.fraction.Fraction)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#ulp(float)" -> "org.apache.commons.math3.util$FastMath#abs(float)";
  "org.apache.commons.math3.util$FastMath#ulp(float)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#floatValue()" -> "org.apache.commons.math3.fraction$Fraction#doubleValue()";
  "org.apache.commons.math3.util$FastMath#atan2(double,double)" -> "org.apache.commons.math3.util$FastMath#doubleHighPart(double)";
  "org.apache.commons.math3.util$FastMath#atan2(double,double)" -> "org.apache.commons.math3.util$FastMath#copySign(double,double)";
  "org.apache.commons.math3.util$FastMath#atan2(double,double)" -> "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)";
  "org.apache.commons.math3.util$FastMath#atan2(double,double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#subtract(int)" -> "org.apache.commons.math3.fraction$Fraction#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#lcm(int,int)" -> "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(int,int)";
  "org.apache.commons.math3.util$ArithmeticUtils#lcm(int,int)" -> "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#lcm(int,int)" -> "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)";
  "org.apache.commons.math3.util$ArithmeticUtils#lcm(int,int)" -> "org.apache.commons.math3.util$FastMath#abs(int)";
  "org.apache.commons.math3.util$ArithmeticUtils#lcm(int,int)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.fraction$Fraction#divide(int)" -> "org.apache.commons.math3.fraction$Fraction#<clinit>()";
  "org.apache.commons.math3.util$FastMath#round(float)" -> "org.apache.commons.math3.util$FastMath#floor(double)";
  "org.apache.commons.math3.util$FastMath#round(float)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$FastMath#sinh(double)" -> "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()";
  "org.apache.commons.math3.util$FastMath#sinh(double)" -> "org.apache.commons.math3.util$FastMath#exp(double,double,double[])";
  "org.apache.commons.math3.util$FastMath#sinh(double)" -> "org.apache.commons.math3.util$FastMath#exp(double)";
  "org.apache.commons.math3.util$FastMath#sinh(double)" -> "org.apache.commons.math3.util$FastMath#expm1(double,double[])";
  "org.apache.commons.math3.util$FastMath#sinh(double)" -> "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()";
  "org.apache.commons.math3.util$FastMath#sinh(double)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)" -> "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)" -> "org.apache.commons.math3.util$FastMath#exp(double,double,double[])";
  "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)" -> "org.apache.commons.math3.util$FastMath#log(double)";
  "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)" -> "org.apache.commons.math3.util$FastMath#log(double,double[])";
  "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)" -> "org.apache.commons.math3.util$FastMath#exp(double)";
  "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)" -> "org.apache.commons.math3.util$ArithmeticUtils#factorial(int)";
  "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)" -> "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)" -> "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)" -> "org.apache.commons.math3.util$FastMath#floor(double)";
  "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)" -> "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)" -> "org.apache.commons.math3.util$ArithmeticUtils#factorialLog(int)";
  "org.apache.commons.math3.util$ArithmeticUtils#factorialLog(int)" -> "org.apache.commons.math3.util$FastMath#log(double)";
  "org.apache.commons.math3.util$ArithmeticUtils#factorialLog(int)" -> "org.apache.commons.math3.util$FastMath#log(double,double[])";
  "org.apache.commons.math3.util$ArithmeticUtils#factorialLog(int)" -> "org.apache.commons.math3.util$ArithmeticUtils#factorial(int)";
  "org.apache.commons.math3.util$ArithmeticUtils#factorialLog(int)" -> "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#factorialLog(int)" -> "org.apache.commons.math3.util$FastMath#<clinit>()";
  "org.apache.commons.math3.util$ArithmeticUtils#factorialLog(int)" -> "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()";
}
