digraph G {
  "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)" -> "org.jfree.data.time$RegularTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)" -> "org.jfree.data.time$SimpleTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)" -> "org.jfree.data.time$TimePeriodValue#getPeriod()";
  "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)" -> "org.jfree.data.time$TimePeriodValues#getDataItem(int)";
  "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)" -> "org.jfree.data.time$SimpleTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$RegularTimePeriod#getEnd()" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getEnd()" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.data.time$Day#compareTo(java.lang.Object)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getStart()" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getStart()" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$TimePeriodValues#getDomainDescription()";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.general$Series#equals(java.lang.Object)";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$TimePeriodValues#getDataItem(int)";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$TimePeriodValues#getRangeDescription()";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$TimePeriodValues#getItemCount()";
  "org.jfree.data.time$Day#parseDay(java.lang.String)" -> "org.jfree.data.time$Day#<clinit>()";
  "org.jfree.data.time$Day#parseDay(java.lang.String)" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Day#<clinit>()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)" -> "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)" -> "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)" -> "org.jfree.data.time$TimePeriodValue#getPeriod()";
  "org.jfree.data.time$Year#previous()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$TimePeriodValues#getValue(int)" -> "org.jfree.data.time$TimePeriodValues#getDataItem(int)";
  "org.jfree.data.time$TimePeriodValues#getValue(int)" -> "org.jfree.data.time$TimePeriodValue#getValue()";
  "org.jfree.data.time$SimpleTimePeriod#equals(java.lang.Object)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$SimpleTimePeriod#equals(java.lang.Object)" -> "org.jfree.data.time$SimpleTimePeriod#getEnd()";
  "org.jfree.data.time$SimpleTimePeriod#equals(java.lang.Object)" -> "org.jfree.data.time$SimpleTimePeriod#getStart()";
  "org.jfree.data.time$SimpleTimePeriod#equals(java.lang.Object)" -> "org.jfree.data.time$RegularTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValue#hashCode()" -> "org.jfree.data.time$Year#hashCode()";
  "org.jfree.data.time$TimePeriodValue#hashCode()" -> "org.jfree.data.time$Day#hashCode()";
  "org.jfree.data.time$TimePeriodValue#hashCode()" -> "org.jfree.data.time$SimpleTimePeriod#hashCode()";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.data.time$Year#hashCode()";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.data.time$SimpleTimePeriod#hashCode()";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.data.time$Day#hashCode()";
  "org.jfree.data.time$TimePeriodValues#recalculateBounds()" -> "org.jfree.data.time$TimePeriodValue#getPeriod()";
  "org.jfree.data.time$TimePeriodValues#recalculateBounds()" -> "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)";
  "org.jfree.data.time$Year#parseYear(java.lang.String)" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Day#equals(java.lang.Object)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.time$TimePeriodValues#update(int,java.lang.Number)" -> "org.jfree.data.time$TimePeriodValues#getDataItem(int)";
  "org.jfree.data.time$TimePeriodValues#update(int,java.lang.Number)" -> "org.jfree.data.time$TimePeriodValue#setValue(java.lang.Number)";
  "org.jfree.data.time$TimePeriodValues#update(int,java.lang.Number)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimePeriodValues#createCopy(int,int)" -> "org.jfree.data.general$Series#clone()";
  "org.jfree.data.time$TimePeriodValues#createCopy(int,int)" -> "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)";
  "org.jfree.data.time$TimePeriodValues#createCopy(int,int)" -> "org.jfree.data.time$TimePeriodValue#clone()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$SimpleTimePeriod#equals(java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.general$Series#getKey()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.general$Series#getDescription()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.data.time$TimePeriodValues#clone()" -> "org.jfree.data.time$TimePeriodValues#getItemCount()";
  "org.jfree.data.time$TimePeriodValues#clone()" -> "org.jfree.data.time$TimePeriodValues#createCopy(int,int)";
  "org.jfree.data.time$Day#peg(java.util.Calendar)" -> "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#peg(java.util.Calendar)" -> "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#previous()" -> "org.jfree.data.time$Day#<clinit>()";
  "org.jfree.data.time$Day#previous()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)" -> "org.jfree.data.time$SimpleTimePeriod#equals(java.lang.Object)";
  "org.jfree.data.time$Year#equals(java.lang.Object)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.general$Series#setNotify(boolean)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.general$Series#fireSeriesChanged()" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$SimpleTimePeriod#compareTo(java.lang.Object)" -> "org.jfree.data.time$SimpleTimePeriod#getEnd()";
  "org.jfree.data.time$SimpleTimePeriod#compareTo(java.lang.Object)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$SimpleTimePeriod#compareTo(java.lang.Object)" -> "org.jfree.data.time$SimpleTimePeriod#getStart()";
  "org.jfree.data.time$SimpleTimePeriod#compareTo(java.lang.Object)" -> "org.jfree.data.time$RegularTimePeriod#getEnd()";
  "org.jfree.data.time$Day#next()" -> "org.jfree.data.time$Day#<clinit>()";
  "org.jfree.data.time$Day#next()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$TimePeriodValues#getTimePeriod(int)" -> "org.jfree.data.time$TimePeriodValue#getPeriod()";
  "org.jfree.data.time$TimePeriodValues#getTimePeriod(int)" -> "org.jfree.data.time$TimePeriodValues#getDataItem(int)";
  "org.jfree.data.general$Series#isEmpty()" -> "org.jfree.data.time$TimePeriodValues#getItemCount()";
  "org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$TimePeriodValues#delete(int,int)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimePeriodValues#delete(int,int)" -> "org.jfree.data.time$TimePeriodValues#recalculateBounds()";
  "org.jfree.data.time$TimePeriodValue#toString()" -> "org.jfree.data.time$TimePeriodValue#getValue()";
  "org.jfree.data.time$TimePeriodValue#toString()" -> "org.jfree.data.time$TimePeriodValue#getPeriod()";
  "org.jfree.data.time$TimePeriodValues#setRangeDescription(java.lang.String)" -> "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)";
  "org.jfree.data.time$Year#peg(java.util.Calendar)" -> "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Year#peg(java.util.Calendar)" -> "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Year#compareTo(java.lang.Object)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Year#next()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)";
  "org.jfree.data.time$RegularTimePeriod#toString()" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$RegularTimePeriod#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone)" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$TimePeriodValues#setDomainDescription(java.lang.String)" -> "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)";
}
