digraph G {
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#XYLineAndShapeRenderer(boolean,boolean)";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.XYURLGenerator)";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.urls$StandardXYURLGenerator#StandardXYURLGenerator()";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator()";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.renderer$AbstractRenderer#addChangeListener(org.jfree.chart.event.RendererChangeListener)";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$Plot#Plot()";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.axis$AxisLocation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.util$ObjectList#ObjectList()";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$XYPlot#mapDatasetToRangeAxis(int,int)";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$SeriesRenderingOrder#<clinit>()";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$DatasetRenderingOrder#<clinit>()";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$XYPlot#configureRangeAxes()";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$XYPlot#mapDatasetToDomainAxis(int,int)";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$XYPlot#configureDomainAxes()";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.renderer.xy$XYStepRenderer#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.entity$JFreeChartEntity#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.axis$NumberAxis#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.axis$AxisSpace#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.data$DefaultKeyedValues#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.plot$PolarPlot#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.plot$MultiplePiePlot#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.plot$PiePlot#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.data.general$DefaultPieDataset#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.plot$CombinedRangeXYPlot#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.plot$CategoryPlot#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.title$LegendGraphic#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.plot$Plot#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.entity$ChartEntity#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.util$Size2D#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.title$Title#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$StandardChartTheme#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.block$BlockContainer#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.entity$TitleEntity#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.data.xy$IntervalXYDelegate#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.block$LabelBlock#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.entity$AxisEntity#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.plot$XYPlot#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.renderer.xy$XYBarRenderer#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.entity$LegendItemEntity#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.entity$PlotEntity#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.data.xy$XYSeriesCollection#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.data.general$AbstractDataset#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.axis$DateAxis#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.axis$PeriodAxis#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.axis$ValueAxis#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.data.xy$DefaultXYDataset#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.util$StandardGradientPaintTransformer#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.title$TextTitle#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart.plot$CombinedDomainXYPlot#clone()";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#clone()" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#clone()";
  "org.jfree.chart.plot$Marker#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$Marker#equals(java.lang.Object)" -> "org.jfree.chart.util$LengthAdjustmentType#equals(java.lang.Object)";
  "org.jfree.chart.plot$Marker#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.plot$Marker#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.data.xy$XYSeries#updateByIndex(int,java.lang.Number)" -> "org.jfree.data.xy$XYSeries#getRawDataItem(int)";
  "org.jfree.data.xy$XYSeries#updateByIndex(int,java.lang.Number)" -> "org.jfree.data.xy$XYSeries#minIgnoreNaN(double,double)";
  "org.jfree.data.xy$XYSeries#updateByIndex(int,java.lang.Number)" -> "org.jfree.data.xy$XYSeries#maxIgnoreNaN(double,double)";
  "org.jfree.data.xy$XYSeries#updateByIndex(int,java.lang.Number)" -> "org.jfree.data.xy$XYDataItem#getYValue()";
  "org.jfree.data.xy$XYSeries#updateByIndex(int,java.lang.Number)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.xy$XYSeries#updateByIndex(int,java.lang.Number)" -> "org.jfree.data.xy$XYDataItem#setY(java.lang.Number)";
  "org.jfree.data.xy$XYSeries#updateByIndex(int,java.lang.Number)" -> "org.jfree.data.xy$XYSeries#findBoundsByIteration()";
  "org.jfree.chart.plot$CategoryPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$CategoryPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.general$Series#getDescription()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$Month#equals(java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.chart.axis$TickUnit#equals(java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.chart.axis$NumberTickUnit#equals(java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.xy$XYDataItem#equals(java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.chart.axis$DateTickUnit#equals(java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.general$Series#getKey()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#equals(java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)";
  "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.chart.renderer.category$GradientBarPainter#paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.category.BarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.renderer.category$BarRenderer#isDrawBarOutline()";
  "org.jfree.chart.renderer.category$GradientBarPainter#paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.category.BarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.renderer.category$GradientBarPainter#splitHorizontalBar(java.awt.geom.RectangularShape,double,double,double)";
  "org.jfree.chart.renderer.category$GradientBarPainter#paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.category.BarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemOutlineStroke(int,int,boolean)";
  "org.jfree.chart.renderer.category$GradientBarPainter#paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.category.BarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.renderer.category$GradientBarPainter#paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.category.BarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemOutlinePaint(int,int,boolean)";
  "org.jfree.chart.renderer.category$GradientBarPainter#paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.category.BarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemPaint(int,int,boolean)";
  "org.jfree.chart.renderer.category$GradientBarPainter#paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.category.BarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.renderer.category$GradientBarPainter#splitVerticalBar(java.awt.geom.RectangularShape,double,double,double)";
  "org.jfree.chart.ui$ProjectInfo#toString()" -> "org.jfree.chart.ui$Contributor#getEmail()";
  "org.jfree.chart.ui$ProjectInfo#toString()" -> "org.jfree.chart.ui$BasicProjectInfo#getLibraries()";
  "org.jfree.chart.ui$ProjectInfo#toString()" -> "org.jfree.chart.ui$ProjectInfo#getLicenceText()";
  "org.jfree.chart.ui$ProjectInfo#toString()" -> "org.jfree.chart.ui$BasicProjectInfo#getCopyright()";
  "org.jfree.chart.ui$ProjectInfo#toString()" -> "org.jfree.chart.ui$Library#getName()";
  "org.jfree.chart.ui$ProjectInfo#toString()" -> "org.jfree.chart.ui$Library#getInfo()";
  "org.jfree.chart.ui$ProjectInfo#toString()" -> "org.jfree.chart.ui$Library#getVersion()";
  "org.jfree.chart.ui$ProjectInfo#toString()" -> "org.jfree.chart.ui$Contributor#getName()";
  "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.event$ChartChangeEvent#setType(org.jfree.chart.event.ChartChangeEventType)";
  "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$XYPlot#configureRangeAxes()";
  "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.event$ChartChangeEventType#<clinit>()";
  "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$XYPlot#configureDomainAxes()";
  "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.event$ChartChangeEvent#setType(org.jfree.chart.event.ChartChangeEventType)";
  "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.event$ChartChangeEventType#<clinit>()";
  "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$SegmentedTimeline#toTimelineValue(long)";
  "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$DateRange#getLowerMillis()";
  "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#toTimelineValue(long)";
  "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$DateRange#getUpperMillis()";
  "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.axis$SegmentedTimeline#toTimelineValue(long)" -> "org.jfree.chart.axis$SegmentedTimeline#binarySearchExceptionSegments(org.jfree.chart.axis.SegmentedTimeline$Segment)";
  "org.jfree.chart.axis$SegmentedTimeline#toTimelineValue(long)" -> "org.jfree.chart.axis$SegmentedTimeline#getExceptionSegmentCount(long,long)";
  "org.jfree.chart.axis$SegmentedTimeline#toTimelineValue(long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#inExceptionSegments()";
  "org.jfree.chart.axis$SegmentedTimeline#toTimelineValue(long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentEnd()";
  "org.jfree.chart.axis$SegmentedTimeline#toTimelineValue(long)" -> "org.jfree.chart.axis$SegmentedTimeline#getSegment(long)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart.title$TextTitle#clone()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$JFreeChart#getSubtitleCount()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart.plot$Plot#clone()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart.plot$CombinedRangeXYPlot#clone()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart.title$Title#clone()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart.plot$MultiplePiePlot#clone()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart.plot$CombinedDomainXYPlot#clone()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart.plot$PolarPlot#clone()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart.title$Title#addChangeListener(org.jfree.chart.event.TitleChangeListener)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart.plot$XYPlot#clone()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart.plot$PiePlot#clone()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart.plot$CategoryPlot#clone()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart.plot$Plot#addChangeListener(org.jfree.chart.event.PlotChangeListener)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$JFreeChart#getSubtitle(int)";
  "org.jfree.chart.title$TextTitle#clone()" -> "org.jfree.chart.title$Title#clone()";
  "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)" -> "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart.title$Title#<clinit>()" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.title$Title#<clinit>()" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.title$Title#<clinit>()" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.title$Title#<clinit>()" -> "org.jfree.chart.util$VerticalAlignment#<clinit>()";
  "org.jfree.chart.title$Title#<clinit>()" -> "org.jfree.chart.util$HorizontalAlignment#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$RendererState#getEntityCollection()";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.category$BarRenderer#getShadowsVisible()";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.category$GradientBarPainter#paintBarShadow(java.awt.Graphics2D,org.jfree.chart.renderer.category.BarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge,boolean)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.category$BarRenderer#calculateBarW0(org.jfree.chart.plot.CategoryPlot,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.renderer.category.CategoryItemRendererState,int,int)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.category$GradientBarPainter#paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.category.BarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getItemLabelGenerator(int,int,boolean)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#updateCrosshairValues(org.jfree.chart.plot.CategoryCrosshairState,java.lang.Comparable,java.lang.Comparable,double,int,double,double,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#isItemLabelVisible(int,int,boolean)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.category$BarRenderer#getMinimumBarLength()";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$CategoryPlot#indexOf(org.jfree.data.category.CategoryDataset)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$CategoryPlot#getOrientation()";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.category$BarRenderer#calculateBarL0L1(double)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer$RendererState#getEntityCollection()" -> "org.jfree.chart$ChartRenderingInfo#getEntityCollection()";
  "org.jfree.chart.renderer$RendererState#getEntityCollection()" -> "org.jfree.chart.plot$PlotRenderingInfo#getOwner()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator,boolean)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator,boolean)" -> "org.jfree.chart.event$RendererChangeEvent#RendererChangeEvent(java.lang.Object)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#notifyListeners(org.jfree.chart.event.RendererChangeEvent)";
  "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.axis$PeriodAxis#configure()";
  "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.axis$LogAxis#configure()";
  "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$TimeSeriesCollection#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$BlockContainer#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$DateTickUnitType#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.text$TextBlockAnchor#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.data.xy$XYSeriesCollection#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$ValueTick#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.labels$ItemLabelPosition#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$ColumnArrangement#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$Month#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.category$BarRenderer#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.data.general$DatasetGroup#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$PiePlot3D#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.data.xy$IntervalXYDelegate#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$Plot#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer$AbstractRenderer#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$AxisSpace#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.entity$TitleEntity#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$LogAxis#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.entity$JFreeChartEntity#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$DateTickUnit#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.title$LegendGraphic#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$LabelBlock#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.xy$GradientXYBarPainter#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$TickUnit#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$ShapeList#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$Marker#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.data.general$Series#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$Axis#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.entity$XYItemEntity#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$StrokeList#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$LineBorder#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.text$TextAnchor#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.category$BarRenderer3D#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.title$PaintScaleLegend#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$RingPlot#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$DatasetRenderingOrder#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$PieLabelLinkStyle#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$PlotRenderingInfo#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$LengthAdjustmentType#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$StrokeMap#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$GradientPaintTransformType#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$Layer#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$AxisLocation#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$LogFormat#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$MarkerAxisBand#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$SymbolAxis#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.category$GradientBarPainter#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$NumberTickUnit#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$TimeSeries#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$PaintMap#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.labels$ItemLabelAnchor#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$StandardGradientPaintTransformer#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.text$TextFragment#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$DateAxis#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.ui$Library#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.data$RangeType#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$RectangleEdge#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$PaintList#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$TickType#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$BorderArrangement#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$Tick#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.title$TextTitle#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.text$TextLine#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$BlockBorder#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.data$DomainOrder#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$BooleanList#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$SeriesRenderingOrder#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.data.general$DefaultPieDataset#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.entity$PieSectionEntity#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.data.xy$DefaultXYDataset#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$PeriodAxis#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$DateTickMarkPosition#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.title$Title#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$HorizontalAlignment#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.entity$CategoryItemEntity#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$TimePeriodAnchor#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$Rotation#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.entity$LegendItemEntity#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.text$TextBlock#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$Size2D#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.urls$StandardXYURLGenerator#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$VerticalAlignment#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.xy$XYStepRenderer#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$RectangleAnchor#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$LengthConstraintType#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.data.xy$XYSeries#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$UnitType#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$PlotOrientation#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$TickUnits#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$FlowArrangement#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.data$Range#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.entity$AxisEntity#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$CenterArrangement#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$ValueMarker#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$IntervalMarker#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.event$ChartChangeEventType#equals(java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)" -> "org.jfree.data.xy$XYDataItem#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesCollection#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.data.time$TimeSeriesCollection#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator)";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis#setCategoryMargin(double)";
  "org.jfree.chart.plot$Plot#<clinit>()" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.plot$Plot#<clinit>()" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DefaultPieDataset#getItemCount()";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#setSectionPaint(java.lang.Comparable,java.awt.Paint)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.category.CategoryDataset)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.time$Year#toString()";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.time$SerialDate#toString()";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart$ChartRenderingInfo#getEntityCollection()";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.time$Day#toString()";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DefaultPieDataset#getKey(int)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateTickUnit#equals(java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart$ChartRenderingInfo#ChartRenderingInfo()";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.time$Month#equals(java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$TickUnit#equals(java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#setPieIndex(int)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$MultiplePiePlot#prefetchSectionPaints()";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#addSubplotInfo(org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.xy$XYDataItem#equals(java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.time$Month#toString()";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateTickUnit#toString()";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#equals(java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.time$RegularTimePeriod#toString()";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart$JFreeChart#getPlot()";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.xy$XYDataItem#toString()";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getInsets()";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.general.PieDataset,java.lang.Comparable,double)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#setDataset(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart$ChartRenderingInfo#getPlotInfo()";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberTickUnit#equals(java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberTickUnit#toString()";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#getOwner()";
  "org.jfree.data.general$DefaultPieDataset#getItemCount()" -> "org.jfree.data$DefaultKeyedValues#getItemCount()";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.renderer.category$BarRenderer3D#setWallPaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.renderer.category$BarRenderer#setBarPainter(org.jfree.chart.renderer.category.BarPainter)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.renderer.category$BarRenderer#setShadowVisible(boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelFont(java.awt.Font)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.renderer.category$BarRenderer#setShadowPaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelPaint(java.awt.Paint)";
  "org.jfree.chart.renderer.category$BarRenderer3D#setWallPaint(java.awt.Paint)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.labels$ItemLabelAnchor#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$ValueMarker#ValueMarker(double)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Marker#setPaint(java.awt.Paint)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$BarRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis#setCategoryMargin(double)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition(org.jfree.chart.labels.ItemLabelAnchor,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart.title$PaintScaleLegend#axisChanged(org.jfree.chart.event.AxisChangeEvent)" -> "org.jfree.chart.event$AxisChangeEvent#getAxis()";
  "org.jfree.chart.title$PaintScaleLegend#axisChanged(org.jfree.chart.event.AxisChangeEvent)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$PaintScaleLegend#axisChanged(org.jfree.chart.event.AxisChangeEvent)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.data.time$TimeSeriesCollection#getStartY(int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getY(int,int)";
  "org.jfree.data.time$TimeSeriesCollection#getY(int,int)" -> "org.jfree.data.time$TimeSeries#getValue(int)";
  "org.jfree.chart.plot$PieLabelDistributor#distributeLabels(double,double)" -> "org.jfree.chart.plot$PieLabelDistributor#adjustUpwards(double,double)";
  "org.jfree.chart.plot$PieLabelDistributor#distributeLabels(double,double)" -> "org.jfree.chart.plot$PieLabelDistributor#adjustDownwards(double,double)";
  "org.jfree.chart.plot$PieLabelDistributor#distributeLabels(double,double)" -> "org.jfree.chart.plot$PieLabelDistributor#sort()";
  "org.jfree.chart.plot$PieLabelDistributor#distributeLabels(double,double)" -> "org.jfree.chart.plot$PieLabelDistributor#isOverlap()";
  "org.jfree.chart.plot$PieLabelDistributor#distributeLabels(double,double)" -> "org.jfree.chart.plot$PieLabelDistributor#spreadEvenly(double,double)";
  "org.jfree.chart.plot$PieLabelDistributor#adjustUpwards(double,double)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PolarPlot#drawGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List,java.util.List)";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#setDataArea(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getInsets()";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#setPlotArea(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#getTicks()";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PolarPlot#refreshAngleTicks()";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getForegroundAlpha()";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PolarPlot#drawAxis(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PolarPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PolarPlot#drawCornerTextItems(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PolarPlot#drawGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List,java.util.List)" -> "org.jfree.chart.plot$PolarPlot#getRadiusGridlineStroke()";
  "org.jfree.chart.plot$PolarPlot#drawGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List,java.util.List)" -> "org.jfree.chart.plot$PolarPlot#getAngleGridlineStroke()";
  "org.jfree.chart.plot$PolarPlot#drawGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List,java.util.List)" -> "org.jfree.chart.plot$PolarPlot#isRadiusGridlinesVisible()";
  "org.jfree.chart.plot$PolarPlot#drawGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List,java.util.List)" -> "org.jfree.chart.plot$PolarPlot#getAngleGridlinePaint()";
  "org.jfree.chart.plot$PolarPlot#drawGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List,java.util.List)" -> "org.jfree.chart.plot$PolarPlot#getRadiusGridlinePaint()";
  "org.jfree.chart.plot$PolarPlot#drawGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List,java.util.List)" -> "org.jfree.chart.plot$PolarPlot#isAngleGridlinesVisible()";
  "org.jfree.chart.block$BorderArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeight()";
  "org.jfree.chart.block$BorderArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$BorderArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#setBounds(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$BorderArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.block$BorderArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$LabelBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.block$BorderArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidth()";
  "org.jfree.chart.block$BorderArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$BorderArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,double)";
  "org.jfree.chart.block$BorderArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data.time$TimeSeries#getValue(int)" -> "org.jfree.data.time$TimeSeries#getRawDataItem(int)";
  "org.jfree.data.time$TimeSeries#getValue(int)" -> "org.jfree.data.time$TimeSeriesDataItem#getValue()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#setTop(double)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#shrink(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#ensureAtLeast(org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getWeight()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#setBottom(double)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#getBottom()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisLocation()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#setLeft(double)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getFixedRangeAxisSpace()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#getTop()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#getLeft()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#setRight(double)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$PeriodAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#AxisSpace()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#getRight()";
  "org.jfree.chart.labels$AbstractPieItemLabelGenerator#createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)" -> "org.jfree.data.time$Day#toString()";
  "org.jfree.chart.labels$AbstractPieItemLabelGenerator#createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)" -> "org.jfree.data.time$Year#toString()";
  "org.jfree.chart.labels$AbstractPieItemLabelGenerator#createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)" -> "org.jfree.data.time$RegularTimePeriod#toString()";
  "org.jfree.chart.labels$AbstractPieItemLabelGenerator#createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)" -> "org.jfree.data.general$DatasetUtilities#calculatePieDatasetTotal(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.labels$AbstractPieItemLabelGenerator#createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)" -> "org.jfree.chart.axis$NumberTickUnit#toString()";
  "org.jfree.chart.labels$AbstractPieItemLabelGenerator#createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)" -> "org.jfree.data.xy$XYDataItem#toString()";
  "org.jfree.chart.labels$AbstractPieItemLabelGenerator#createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)" -> "org.jfree.chart.axis$DateTickUnit#toString()";
  "org.jfree.chart.labels$AbstractPieItemLabelGenerator#createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)" -> "org.jfree.data.time$SerialDate#toString()";
  "org.jfree.chart.labels$AbstractPieItemLabelGenerator#createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)" -> "org.jfree.data.time$Month#toString()";
  "org.jfree.chart.labels$AbstractPieItemLabelGenerator#createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)" -> "org.jfree.data.general$DefaultPieDataset#getValue(java.lang.Comparable)";
  "org.jfree.data.time$Day#toString()" -> "org.jfree.data.time$SerialDate#toString()";
  "org.jfree.chart.event$ChartChangeEventType#<clinit>()" -> "org.jfree.chart.event$ChartChangeEventType#ChartChangeEventType(java.lang.String)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$LabelBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$AbstractBlock#setBounds(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.util$HorizontalAlignment#<clinit>()";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$BlockContainer#getBlocks()";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$LabelBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.block$LabelBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.block$LabelBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)";
  "org.jfree.chart.block$LabelBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.block$LabelBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#calculateTotalWidth(double)";
  "org.jfree.chart.block$LabelBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#calculateTotalHeight(double)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart.plot$PiePlot#getAutoPopulateSectionOutlineStroke()";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart.plot$PiePlot#setLabelLinkStyle(org.jfree.chart.plot.PieLabelLinkStyle)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart.plot$PiePlot#clearSectionOutlineStrokes(boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart.plot$PiePlot#setLabelFont(java.awt.Font)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart.plot$PiePlot#setLabelLinkPaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart.plot$PiePlot#clearSectionPaints(boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart.plot$PiePlot#getAutoPopulateSectionOutlinePaint()";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart.plot$PiePlot#clearSectionOutlinePaints(boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart.plot$PiePlot#getAutoPopulateSectionPaint()";
  "org.jfree.chart.plot$XYPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.renderer$AbstractRenderer#addChangeListener(org.jfree.chart.event.RendererChangeListener)";
  "org.jfree.chart.plot$XYPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$XYPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPoint2D(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$XYPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$XYPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$XYPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.chart.plot$XYPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.renderer$AbstractRenderer#addChangeListener(org.jfree.chart.event.RendererChangeListener)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart.renderer$AbstractRenderer#notifyListeners(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.plot$PolarPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)";
  "org.jfree.chart.renderer$AbstractRenderer#notifyListeners(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.plot$CategoryPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)";
  "org.jfree.chart.renderer$AbstractRenderer#notifyListeners(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.plot$XYPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)";
  "org.jfree.chart.renderer$AbstractRenderer#notifyListeners(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block,java.lang.Object)" -> "org.jfree.chart.block$ColumnArrangement#add(org.jfree.chart.block.Block,java.lang.Object)";
  "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block,java.lang.Object)" -> "org.jfree.chart.block$FlowArrangement#add(org.jfree.chart.block.Block,java.lang.Object)";
  "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block,java.lang.Object)" -> "org.jfree.chart.block$CenterArrangement#add(org.jfree.chart.block.Block,java.lang.Object)";
  "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block,java.lang.Object)" -> "org.jfree.chart.block$BorderArrangement#add(org.jfree.chart.block.Block,java.lang.Object)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainGridLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.plot$XYPlot#getDomainGridlineStroke()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainGridLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainGridLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainGridLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainGridLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainGridLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainGridLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainGridLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.plot$XYPlot#getDomainGridlinePaint()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainGridLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainGridLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainGridLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainGridLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainGridLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#clone()" -> "org.jfree.chart.axis$LogAxis#configure()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#clone()" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#clone()" -> "org.jfree.chart.axis$PeriodAxis#configure()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#clone()" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#clone()" -> "org.jfree.chart.plot$XYPlot#clone()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#clone()" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#clone()" -> "org.jfree.chart.plot$Plot#setParent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.axis$LogAxis#configure()" -> "org.jfree.chart.axis$LogAxis#autoAdjustRange()";
  "org.jfree.chart.axis$LogAxis#configure()" -> "org.jfree.chart.axis$ValueAxis#isAutoRange()";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsUpperBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsUpperBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data.xy$DefaultXYDataset#getXValue(int,int)";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsUpperBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data.xy$AbstractXYDataset#getDomainOrder()";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsUpperBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsUpperBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data.xy$XYSeriesCollection#getItemCount(int)";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsUpperBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data$DomainOrder#<clinit>()";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsUpperBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data.xy$XYSeriesCollection#getDomainOrder()";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsUpperBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data.xy$DefaultXYDataset#getDomainOrder()";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsUpperBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data.time$TimeSeriesCollection#getDomainOrder()";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsUpperBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data.xy$DefaultXYDataset#getItemCount(int)";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsUpperBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data.time$TimeSeriesCollection#getItemCount(int)";
  "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)" -> "org.jfree.data.xy$XYSeriesCollection#getX(int,int)";
  "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getX(int,int)";
  "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)" -> "org.jfree.data.xy$DefaultXYDataset#getX(int,int)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setRangeCrosshairVisible(boolean)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator()";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.urls$StandardXYURLGenerator#StandardXYURLGenerator()";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#XYStepAreaRenderer(int,org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setDomainCrosshairVisible(boolean)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.plot$XYPlot#setRangeCrosshairVisible(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#datasetsMappedToRangeAxis(int)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#datasetsMappedToRangeAxis(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#datasetsMappedToRangeAxis(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#datasetsMappedToRangeAxis(int)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#<clinit>()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#<clinit>()" -> "org.jfree.chart.util$ResourceBundleWrapper#getBundle(java.lang.String)";
  "org.jfree.data.xy$XYSeries#add(double,double)" -> "org.jfree.data.xy$XYSeries#add(java.lang.Number,java.lang.Number,boolean)";
  "org.jfree.data.xy$XYSeries#add(java.lang.Number,java.lang.Number,boolean)" -> "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem,boolean)";
  "org.jfree.data.xy$XYSeries#add(java.lang.Number,java.lang.Number,boolean)" -> "org.jfree.data.xy$XYDataItem#XYDataItem(java.lang.Number,java.lang.Number)";
  "org.jfree.data.xy$XYSeries#clone()" -> "org.jfree.data.general$Series#clone()";
  "org.jfree.data.xy$XYSeries#clone()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.data.xy$XYSeries#clone()" -> "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#AbstractXYItemRenderer()" -> "org.jfree.chart.renderer$AbstractRenderer#AbstractRenderer()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#AbstractXYItemRenderer()" -> "org.jfree.chart.util$ObjectList#ObjectList()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#AbstractXYItemRenderer()" -> "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#StandardXYSeriesLabelGenerator(java.lang.String)";
  "org.jfree.chart.renderer$AbstractRenderer#AbstractRenderer()" -> "org.jfree.chart.util$ObjectList#ObjectList()";
  "org.jfree.chart.renderer$AbstractRenderer#AbstractRenderer()" -> "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition(org.jfree.chart.labels.ItemLabelAnchor,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.renderer$AbstractRenderer#AbstractRenderer()" -> "org.jfree.chart.labels$ItemLabelAnchor#<clinit>()";
  "org.jfree.chart.renderer$AbstractRenderer#AbstractRenderer()" -> "org.jfree.chart.util$ShapeList#ShapeList()";
  "org.jfree.chart.renderer$AbstractRenderer#AbstractRenderer()" -> "org.jfree.chart.util$BooleanList#BooleanList()";
  "org.jfree.chart.renderer$AbstractRenderer#AbstractRenderer()" -> "org.jfree.chart.util$StrokeList#StrokeList()";
  "org.jfree.chart.renderer$AbstractRenderer#AbstractRenderer()" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart.renderer$AbstractRenderer#AbstractRenderer()" -> "org.jfree.chart.util$PaintList#PaintList()";
  "org.jfree.chart.renderer$AbstractRenderer#AbstractRenderer()" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.axis$PeriodAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#getFixedDimension()";
  "org.jfree.chart.axis$PeriodAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#AxisSpace()";
  "org.jfree.chart.axis$PeriodAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$PeriodAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#isTickMarksVisible()";
  "org.jfree.chart.axis$PeriodAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$PeriodAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#ensureAtLeast(double,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$PeriodAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$PeriodAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#isVisible()";
  "org.jfree.chart.axis$PeriodAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$PeriodAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#add(double,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$PeriodAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleInsets#extendHeight(double)";
  "org.jfree.chart.axis$PeriodAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#getTickMarkOutsideLength()";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$LogAxis#configure()";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$PeriodAxis#configure()";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getSimpleLabels()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getDataset()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart$ChartRenderingInfo#getEntityCollection()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#setPlotArea(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DatasetUtilities#calculatePieDatasetTotal(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getSectionKey(int)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getPieIndex()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getMaximumExplodePercent()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot3D#drawSide(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Arc2D,java.awt.geom.Area,java.awt.geom.Area,java.awt.Paint,java.awt.Paint,java.awt.Stroke,boolean,boolean)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#setDataArea(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getDirection()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable,boolean)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getLabelLinkMargin()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#generateToolTip(org.jfree.data.general.PieDataset,java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getStartAngle()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getURLGenerator()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#getOwner()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getLabelGenerator()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getInteriorGap()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$Rotation#getFactor()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DefaultPieDataset#getKeys()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getLabelGap()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getMinimumArcAngleToDraw()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.entity$PieSectionEntity#PieSectionEntity(java.awt.Shape,org.jfree.data.general.PieDataset,int,int,java.lang.Comparable,java.lang.String,java.lang.String)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getMaximumLabelWidth()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getInsets()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getForegroundAlpha()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DefaultPieDataset#getValue(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getToolTipGenerator()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#isCircular()";
  "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)";
  "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)";
  "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)";
  "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)";
  "org.jfree.chart.axis$PeriodAxis#hashCode()" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean)" -> "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean,boolean)";
  "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean,boolean)" -> "org.jfree.chart.axis$LogAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean,boolean)" -> "org.jfree.chart.axis$PeriodAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean,boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean,boolean)" -> "org.jfree.chart.axis$SymbolAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean,boolean)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#autoAdjustRange()";
  "org.jfree.chart.title$LegendItemBlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.entity$LegendItemEntity#LegendItemEntity(java.awt.Shape)";
  "org.jfree.chart.title$LegendItemBlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#setToolTipText(java.lang.String)";
  "org.jfree.chart.title$LegendItemBlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.title$LegendItemBlockContainer#getURLText()";
  "org.jfree.chart.title$LegendItemBlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockParams#getGenerateEntities()";
  "org.jfree.chart.title$LegendItemBlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.entity$LegendItemEntity#setDataset(org.jfree.data.general.Dataset)";
  "org.jfree.chart.title$LegendItemBlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.entity$LegendItemEntity#setSeriesKey(java.lang.Comparable)";
  "org.jfree.chart.title$LegendItemBlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockResult#setEntityCollection(org.jfree.chart.entity.EntityCollection)";
  "org.jfree.chart.title$LegendItemBlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart.title$LegendItemBlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockResult#BlockResult()";
  "org.jfree.chart.title$LegendItemBlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#setURLText(java.lang.String)";
  "org.jfree.chart.title$LegendItemBlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.title$LegendItemBlockContainer#getToolTipText()";
  "org.jfree.chart.entity$LegendItemEntity#LegendItemEntity(java.awt.Shape)" -> "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape)";
  "org.jfree.chart.plot$PolarPlot#clone()" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$PolarPlot#clone()" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)";
  "org.jfree.chart.plot$PolarPlot#clone()" -> "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.chart.plot$PolarPlot#clone()" -> "org.jfree.chart.plot$Plot#clone()";
  "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.data.general$DatasetUtilities#iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)" -> "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)" -> "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)" -> "org.jfree.data.xy$AbstractIntervalXYDataset#getStartXValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)" -> "org.jfree.data.xy$DefaultXYDataset#getXValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)" -> "org.jfree.data.xy$DefaultXYDataset#indexOf(java.lang.Comparable)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)" -> "org.jfree.data.xy$AbstractIntervalXYDataset#getEndXValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)" -> "org.jfree.data.xy$DefaultXYDataset#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)";
  "org.jfree.chart.block$AbstractBlock#trimToContentHeight(org.jfree.data.Range)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.block$AbstractBlock#trimToContentHeight(org.jfree.data.Range)" -> "org.jfree.chart.block$AbstractBlock#trimToContentHeight(double)";
  "org.jfree.chart.block$AbstractBlock#trimToContentHeight(org.jfree.data.Range)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.block$AbstractBlock#trimToContentHeight(org.jfree.data.Range)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.block$BorderArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$BorderArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.block$BorderArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$AbstractBlock#setBounds(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$BorderArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$LabelBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#getHeight()";
  "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#getWidth()";
  "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#calculateConstrainedSize(org.jfree.chart.util.Size2D)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getTickMarkInsideLength()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isMinorTickMarksVisible()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Tick#getRotationAnchor()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$PeriodAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#setTicks(java.util.List)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getTickMarkStroke()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#cursorDown(double)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isTickMarksVisible()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Tick#getText()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$ValueTick#getValue()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$SymbolAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getMinorTickMarkOutsideLength()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Tick#getAngle()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#cursorUp(double)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#AxisState(double)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$LogAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$PeriodAxis#isMinorTickMarksVisible()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isAxisLineVisible()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isTickLabelsVisible()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$ValueAxis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getTickMarkOutsideLength()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$ValueTick#getTickType()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getMinorTickMarkInsideLength()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getTickMarkPaint()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$TickType#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$PeriodAxis#getMinorTickMarkOutsideLength()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#cursorRight(double)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#cursorLeft(double)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Tick#getTextAnchor()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$PeriodAxis#getMinorTickMarkInsideLength()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getTickLabelPaint()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$TickType#equals(java.lang.Object)";
  "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem,boolean)" -> "org.jfree.data.xy$XYDataItem#clone()";
  "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem,boolean)" -> "org.jfree.data.xy$XYDataItem#getX()";
  "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem,boolean)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem,boolean)" -> "org.jfree.data.xy$XYSeries#updateBoundsForRemovedItem(org.jfree.data.xy.XYDataItem)";
  "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem,boolean)" -> "org.jfree.data.xy$XYSeries#updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)";
  "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem,boolean)" -> "org.jfree.data.xy$XYDataItem#compareTo(java.lang.Object)";
  "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem,boolean)" -> "org.jfree.data.general$SeriesException#SeriesException(java.lang.String)";
  "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem,boolean)" -> "org.jfree.data.xy$XYSeries#indexOf(java.lang.Number)";
  "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem,boolean)" -> "org.jfree.data.xy$XYSeries#getItemCount()";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisCollection#getAxesAtBottom()";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisCollection#getAxesAtRight()";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisCollection#add(org.jfree.chart.axis.Axis,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$LogAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisCollection#getAxesAtLeft()";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisCollection#AxisCollection()";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#getCursor()";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$PeriodAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$SymbolAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisCollection#getAxesAtTop()";
  "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)";
  "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#deriveRotationAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisCollection#getAxesAtBottom()";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisCollection#AxisCollection()";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisCollection#add(org.jfree.chart.axis.Axis,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$SymbolAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$PeriodAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisCollection#getAxesAtLeft()";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisCollection#getAxesAtRight()";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$LogAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisCollection#getAxesAtTop()";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#getCursor()";
  "org.jfree.chart.axis$SymbolAxis#setGridBandsVisible(boolean)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$SymbolAxis#setGridBandsVisible(boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)" -> "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#<clinit>()" -> "org.jfree.chart.renderer.xy$GradientXYBarPainter#GradientXYBarPainter()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#<clinit>()" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart.renderer.xy$GradientXYBarPainter#GradientXYBarPainter()" -> "org.jfree.chart.renderer.xy$GradientXYBarPainter#GradientXYBarPainter(double,double,double)";
  "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" -> "org.jfree.chart.ui$BasicProjectInfo#setVersion(java.lang.String)";
  "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" -> "org.jfree.chart.ui$BasicProjectInfo#setInfo(java.lang.String)";
  "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" -> "org.jfree.chart.ui$BasicProjectInfo#setName(java.lang.String)";
  "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" -> "org.jfree.chart.ui$BasicProjectInfo#setLicenceName(java.lang.String)";
  "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" -> "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo()";
  "org.jfree.chart.ui$BasicProjectInfo#setVersion(java.lang.String)" -> "org.jfree.chart.ui$Library#setVersion(java.lang.String)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DefaultPieDataset#getValue(int)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DatasetUtilities#calculatePieDatasetTotal(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getMaximumExplodePercent()";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DefaultPieDataset#getKeys()";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$RingPlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DatasetUtilities#calculatePieDatasetTotal(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getStartAngle()";
  "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getDataset()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#setPositiveItemLabelPositionFallback(org.jfree.chart.labels.ItemLabelPosition)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()" -> "org.jfree.chart.event$RendererChangeEvent#RendererChangeEvent(java.lang.Object)";
  "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()" -> "org.jfree.chart.renderer$AbstractRenderer#notifyListeners(org.jfree.chart.event.RendererChangeEvent)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesKey(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getDataBoundsIncludesVisibleSeriesOnly()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisible(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.chart.plot$XYPlot#getIndexOf(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesKey(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisForDataset(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesKey(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getPlot()";
  "org.jfree.data.time$TimeSeriesCollection#getSeriesKey(int)" -> "org.jfree.data.time$TimeSeriesCollection#getSeries(int)";
  "org.jfree.data.time$TimeSeriesCollection#getSeriesKey(int)" -> "org.jfree.data.general$Series#getKey()";
  "org.jfree.chart.block$CenterArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$CenterArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$CenterArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$LabelBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$CenterArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.block$CenterArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$CenterArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$CenterArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$CenterArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#setBounds(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$CenterArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidth()";
  "org.jfree.chart.block$CenterArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BlockContainer#getBlocks()";
  "org.jfree.chart.block$CenterArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$CenterArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$DefaultXYDataset#getYValue(int,int)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$Plot#getOutlineStroke()";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemShape(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$DefaultXYDataset#getXValue(int,int)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$XYSeriesCollection#getItemCount(int)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$RendererState#getEntityCollection()";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.util$ShapeUtilities#createTranslatedShape(java.awt.Shape,double,double)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.time$TimeSeriesCollection#getItemCount(int)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemPaint(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$DefaultXYDataset#getItemCount(int)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYItemRendererState#getCrosshairState()";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#getShapesVisible()";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemStroke(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#restrictValueToDataArea(double,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$Plot#getOutlinePaint()";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#isOutline()";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#updateCrosshairValues(org.jfree.chart.plot.CrosshairState,double,double,int,int,double,double,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#isShapesFilled()";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#getRangeBase()";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#getPlotArea()";
  "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()" -> "org.jfree.chart.plot$XYPlot#getRangeAxisLocation()";
  "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()" -> "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.urls$StandardXYURLGenerator#StandardXYURLGenerator()";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator()";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart.title$TextTitle#setFont(java.awt.Font)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$JFreeChart#getTitle()";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$JFreeChart#getSubtitle(int)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart.title$TextTitle#setPaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$JFreeChart#getPlot()";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$JFreeChart#getSubtitleCount()";
  "org.jfree.chart.axis$DateAxis#previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateTickUnitType#<clinit>()";
  "org.jfree.chart.axis$DateAxis#previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.data.time$Month#peg(java.util.Calendar)";
  "org.jfree.chart.axis$DateAxis#previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateTickUnitType#equals(java.lang.Object)";
  "org.jfree.chart.axis$DateAxis#previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateTickUnit#getMultiple()";
  "org.jfree.chart.axis$DateAxis#previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.data.time$Month#Month(java.util.Date,java.util.TimeZone,java.util.Locale)";
  "org.jfree.chart.axis$DateAxis#previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.data.time$Month#previous()";
  "org.jfree.chart.axis$DateAxis#previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateTickUnit#getUnitType()";
  "org.jfree.chart.axis$DateAxis#previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateTickMarkPosition#<clinit>()";
  "org.jfree.chart.axis$DateAxis#previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateAxis#calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)";
  "org.jfree.chart.axis$DateAxis#previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateTickUnit#getCalendarField()";
  "org.jfree.chart.axis$DateTickUnitType#<clinit>()" -> "org.jfree.chart.axis$DateTickUnitType#DateTickUnitType(java.lang.String,int)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesPaint(int)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getPlot()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesKey(int)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#<clinit>()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)" -> "org.jfree.chart.plot$XYPlot#getDataset(int)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setSeriesIndex(int)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItemToolTipGenerator()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextPaint(int)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setDatasetIndex(int)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setLabelPaint(java.awt.Paint)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItemLabelGenerator()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextFont(int)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItemURLGenerator()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesKey(int)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setDataset(org.jfree.data.general.Dataset)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setSeriesKey(java.lang.Comparable)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)" -> "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#generateLabel(org.jfree.data.xy.XYDataset,int)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setLabelFont(java.awt.Font)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesKey(int)";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesPaint(int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getDrawingSupplier()";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesPaint(int)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#getNextPaint()";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesPaint(int)" -> "org.jfree.chart.renderer$AbstractRenderer#getSeriesPaint(int)";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesPaint(int)" -> "org.jfree.chart.renderer$AbstractRenderer#setSeriesPaint(int,java.awt.Paint,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesPaint(int)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getDrawingSupplier()";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator()";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setRangeCrosshairVisible(boolean)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.urls$StandardXYURLGenerator#StandardXYURLGenerator()";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#createIntegerTickUnits()";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setStandardTickUnits(org.jfree.chart.axis.TickUnitSource)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setDomainCrosshairVisible(boolean)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$XYStepRenderer#XYStepRenderer(org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart.plot$XYPlot#getRenderer(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#getRenderer(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.axis$ValueAxis#pan(double)" -> "org.jfree.chart.axis$ValueAxis#setRange(double,double)";
  "org.jfree.chart.axis$ValueAxis#pan(double)" -> "org.jfree.data$Range#getLength()";
  "org.jfree.chart.axis$ValueAxis#pan(double)" -> "org.jfree.chart.axis$DateAxis#setRange(double,double)";
  "org.jfree.chart.axis$ValueAxis#pan(double)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$ValueAxis#pan(double)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$ValueAxis#pan(double)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$ValueAxis#pan(double)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.axis$ValueAxis#setRange(double,double)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#setRange(double,double)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#setRange(double,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.XYURLGenerator)";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart.plot$XYPlot#<clinit>()" -> "org.jfree.chart.util$ResourceBundleWrapper#getBundle(java.lang.String)";
  "org.jfree.chart.plot$XYPlot#<clinit>()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.axis$SymbolAxis#<clinit>()" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.axis$SymbolAxis#<clinit>()" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart.axis$SymbolAxis#<clinit>()" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.axis$Axis#<clinit>()" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.axis$Axis#<clinit>()" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.Comparable,org.jfree.data.KeyedValues)" -> "org.jfree.data$DefaultKeyedValues#getValue(int)";
  "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.Comparable,org.jfree.data.KeyedValues)" -> "org.jfree.data$DefaultKeyedValues#getItemCount()";
  "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.Comparable,org.jfree.data.KeyedValues)" -> "org.jfree.data.general$DefaultPieDataset#getValue(int)";
  "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.Comparable,org.jfree.data.KeyedValues)" -> "org.jfree.data$DefaultKeyedValues#getKey(int)";
  "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.Comparable,org.jfree.data.KeyedValues)" -> "org.jfree.data.general$DefaultPieDataset#getKey(int)";
  "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.Comparable,org.jfree.data.KeyedValues)" -> "org.jfree.data.general$DefaultPieDataset#getItemCount()";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator()";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.util$Rotation#<clinit>()";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.plot$Plot#Plot()";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.plot$PieLabelDistributor#PieLabelDistributor(int)";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(org.jfree.chart.util.UnitType,double,double,double,double)";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.util$PaintMap#PaintMap()";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.plot$PieLabelLinkStyle#<clinit>()";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.util$StrokeMap#StrokeMap()";
  "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(org.jfree.chart.util.UnitType,double,double,double,double)";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$RectangleEdge#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.entity$TitleEntity#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.xy$DefaultXYDataset#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.xy$XYDataItem#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.entity$PlotEntity#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.title$Title#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.renderer.xy$XYStepRenderer#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.plot$PieLabelLinkStyle#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$RectangleInsets#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.renderer.xy$GradientXYBarPainter#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$PaintList#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.block$LengthConstraintType#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.plot$SeriesRenderingOrder#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.axis$DateTickUnit#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.title$TextTitle#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.axis$DateAxis#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$BooleanList#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.time$Year#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.xy$XYSeries#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$UnitType#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.axis$LogAxis#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.plot$PlotOrientation#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$VerticalAlignment#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data$RangeType#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.renderer.category$GradientBarPainter#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.entity$AxisEntity#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.time$TimeSeriesDataItem#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$HorizontalAlignment#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.axis$CategoryAxis#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data$Range#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.entity$PieSectionEntity#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.text$TextLine#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.renderer$AbstractRenderer#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$Layer#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.axis$TickUnit#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.general$DefaultPieDataset#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.text$TextBlock#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.entity$JFreeChartEntity#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$RectangleAnchor#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.time$TimeSeriesCollection#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.time$TimePeriodAnchor#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$StandardGradientPaintTransformer#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.text$TextBlockAnchor#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.general$Series#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.axis$AxisSpace#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.axis$MarkerAxisBand#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.ui$Library#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.axis$NumberTickUnit#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.text$TextFragment#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.plot$DatasetRenderingOrder#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.text$TextAnchor#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data$DefaultKeyedValues#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data$DomainOrder#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.event$ChartChangeEventType#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.xy$IntervalXYDelegate#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.title$LegendGraphic#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$Rotation#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.time$Month#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$LengthAdjustmentType#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.axis$NumberAxis#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.time$Day#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.xy$XYSeriesCollection#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.axis$PeriodAxis#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$GradientPaintTransformType#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$StrokeList#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$ShapeList#hashCode()";
  "org.jfree.chart.renderer.xy$XYStepRenderer#XYStepRenderer(org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.XYURLGenerator)";
  "org.jfree.chart.renderer.xy$XYStepRenderer#XYStepRenderer(org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#XYLineAndShapeRenderer()";
  "org.jfree.chart.renderer.xy$XYStepRenderer#XYStepRenderer(org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setBaseShapesVisible(boolean)";
  "org.jfree.chart.renderer.xy$XYStepRenderer#XYStepRenderer(org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.XYURLGenerator)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.XYURLGenerator,boolean)";
  "org.jfree.chart.axis$DateAxis#getMaximumDate()" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$DateAxis#getMaximumDate()" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$DateAxis#getMaximumDate()" -> "org.jfree.data.time$DateRange#getUpperDate()";
  "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#setTicks(java.util.List)";
  "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#AxisState(double)";
  "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isVisible()";
  "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#createStandardTickUnits(java.util.Locale)" -> "org.jfree.chart.axis$TickUnits#add(org.jfree.chart.axis.TickUnit)";
  "org.jfree.chart.axis$NumberAxis#createStandardTickUnits(java.util.Locale)" -> "org.jfree.chart.axis$TickUnits#TickUnits()";
  "org.jfree.chart.axis$NumberAxis#createStandardTickUnits(java.util.Locale)" -> "org.jfree.chart.axis$NumberTickUnit#NumberTickUnit(double,java.text.NumberFormat,int)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BlockContainer#getBlocks()";
  "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeight()";
  "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$LabelBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#setBounds(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.axis$LogAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$LogAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$LogAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$LogAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#calculateLog(double)";
  "org.jfree.chart.axis$LogAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.axis$LogAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$LogAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$LogAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$LogAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#calculateValue(double)";
  "org.jfree.data.xy$XYSeriesCollection#clearSelection()" -> "org.jfree.data.xy$XYSeriesCollection#setSelected(int,int,boolean,boolean)";
  "org.jfree.data.xy$XYSeriesCollection#clearSelection()" -> "org.jfree.data.xy$XYSeriesCollection#getItemCount(int)";
  "org.jfree.data.xy$XYSeriesCollection#clearSelection()" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.data.xy$XYSeriesCollection#setSelected(int,int,boolean,boolean)" -> "org.jfree.data.xy$XYSeries#getRawDataItem(int)";
  "org.jfree.data.xy$XYSeriesCollection#setSelected(int,int,boolean,boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getSeries(int)";
  "org.jfree.data.xy$XYSeriesCollection#setSelected(int,int,boolean,boolean)" -> "org.jfree.data.general$AbstractDataset#fireDatasetChanged()";
  "org.jfree.data.xy$XYSeriesCollection#setSelected(int,int,boolean,boolean)" -> "org.jfree.data.xy$XYDataItem#setSelected(boolean)";
  "org.jfree.chart.block$CenterArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#toFixedWidth(double)";
  "org.jfree.chart.block$CenterArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthRange()";
  "org.jfree.chart.block$CenterArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.block$CenterArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$CenterArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)";
  "org.jfree.chart.block$CenterArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.block$CenterArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$CenterArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$RectangleConstraint#toFixedWidth(double)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#toFixedWidth(double)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#toFixedWidth(double)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])" -> "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)";
  "org.jfree.chart.plot$Plot#fireChangeEvent()" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$Plot#fireChangeEvent()" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#setShapesVisible(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.event$RendererChangeEvent#RendererChangeEvent(java.lang.Object)" -> "org.jfree.chart.event$RendererChangeEvent#RendererChangeEvent(java.lang.Object,boolean)";
  "org.jfree.data.general$DefaultPieDataset#getKeys()" -> "org.jfree.data$DefaultKeyedValues#getKeys()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#LegendItemCollection()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItems()" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItems()" -> "org.jfree.chart.plot$CategoryPlot#getDataset(int)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItems()" -> "org.jfree.chart.plot$CategoryPlot#getIndexOf(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItems()" -> "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItems()" -> "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisibleInLegend(int)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart.axis$PeriodAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$PeriodAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$ValueAxis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$PeriodAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$PeriodAxis#drawTickMarks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$PeriodAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#AxisState(double)";
  "org.jfree.chart.axis$PeriodAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isTickLabelsVisible()";
  "org.jfree.chart.axis$PeriodAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$PeriodAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isTickMarksVisible()";
  "org.jfree.chart.axis$PeriodAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isAxisLineVisible()";
  "org.jfree.chart.axis$PeriodAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Year#next()";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Month#getLastMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Day#peg(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Month#getFirstMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Month#peg(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Year#peg(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$AxisState#moveCursor(double,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$AxisState#getCursor()";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextUtilities#drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Month#next()";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Day#next()";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator()" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.entity$CategoryItemEntity#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.text$TextBlock#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$SeriesRenderingOrder#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.xy$XYSeriesCollection#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$CenterArrangement#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$LengthConstraintType#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$Month#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data$DomainOrder#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$BooleanList#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$DateTickMarkPosition#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$PlotOrientation#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.xy$GradientXYBarPainter#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.category$GradientBarPainter#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$BorderArrangement#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$RingPlot#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.category$BarRenderer3D#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$TimeSeriesCollection#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.xy$XYDataItem#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.entity$PieSectionEntity#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$BlockContainer#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$RectangleAnchor#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.general$DatasetGroup#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.general$Series#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.text$TextAnchor#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$SymbolAxis#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.entity$JFreeChartEntity#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$VerticalAlignment#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.text$TextFragment#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$NumberTickUnit#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.category$BarRenderer#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.title$TextTitle#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.xy$XYStepRenderer#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer$AbstractRenderer#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$StrokeList#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.title$LegendGraphic#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$StrokeMap#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.labels$ItemLabelPosition#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$Marker#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$RectangleEdge#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$PaintList#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.ui$Library#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.xy$XYSeries#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$DateAxis#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.entity$TitleEntity#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.event$ChartChangeEventType#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$DateTickUnit#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.entity$XYItemEntity#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$PaintMap#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$PeriodAxis#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.labels$ItemLabelAnchor#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$MarkerAxisBand#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$TickType#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$ShapeList#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data$RangeType#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$LogFormat#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$LabelBlock#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$UnitType#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.entity$LegendItemEntity#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.entity$AxisEntity#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$BlockBorder#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$PiePlot3D#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$Rotation#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$StandardGradientPaintTransformer#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.urls$StandardXYURLGenerator#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$LineBorder#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.text$TextLine#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.title$Title#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$LengthAdjustmentType#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$Layer#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.title$PaintScaleLegend#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$TimePeriodAnchor#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$ValueMarker#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$DatasetRenderingOrder#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$TimeSeries#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$Plot#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$TickUnit#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$FlowArrangement#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$Tick#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$AxisLocation#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.xy$DefaultXYDataset#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$IntervalMarker#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$Axis#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$AxisSpace#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$Size2D#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.general$DefaultPieDataset#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.xy$IntervalXYDelegate#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data$Range#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$LogAxis#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$HorizontalAlignment#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$PieLabelLinkStyle#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$TickUnits#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$DateTickUnitType#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$ValueTick#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$GradientPaintTransformType#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$ColumnArrangement#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.text$TextBlockAnchor#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$PlotRenderingInfo#equals(java.lang.Object)";
  "org.jfree.chart.entity$CategoryItemEntity#equals(java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)";
  "org.jfree.chart.entity$CategoryItemEntity#equals(java.lang.Object)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.chart.entity$CategoryItemEntity#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)";
  "org.jfree.chart.entity$CategoryItemEntity#equals(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)";
  "org.jfree.chart.entity$CategoryItemEntity#equals(java.lang.Object)" -> "org.jfree.data.time$Month#equals(java.lang.Object)";
  "org.jfree.chart.entity$CategoryItemEntity#equals(java.lang.Object)" -> "org.jfree.data.xy$XYDataItem#equals(java.lang.Object)";
  "org.jfree.chart.entity$CategoryItemEntity#equals(java.lang.Object)" -> "org.jfree.chart.axis$TickUnit#equals(java.lang.Object)";
  "org.jfree.chart.entity$CategoryItemEntity#equals(java.lang.Object)" -> "org.jfree.chart.axis$NumberTickUnit#equals(java.lang.Object)";
  "org.jfree.chart.entity$CategoryItemEntity#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.entity$CategoryItemEntity#equals(java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#equals(java.lang.Object)";
  "org.jfree.chart.entity$CategoryItemEntity#equals(java.lang.Object)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.chart.entity$CategoryItemEntity#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.entity$CategoryItemEntity#equals(java.lang.Object)" -> "org.jfree.chart.axis$DateTickUnit#equals(java.lang.Object)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesNegativeItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesNegativeItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.util$RectangleEdge#<clinit>()" -> "org.jfree.chart.util$RectangleEdge#RectangleEdge(java.lang.String)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getRangeAxis(org.jfree.chart.plot.CategoryPlot,int)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getRangeAxis(org.jfree.chart.plot.CategoryPlot,int)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis()";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotState#getSharedAxisStates()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$SymbolAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#setPlotArea(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#getOwner()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#setFixedDomainAxisSpaceForSubplots(org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$PeriodAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getInsets()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#PlotRenderingInfo(org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisSpace#shrink(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#addSubplotInfo(org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#coordinate(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#setDataArea(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$LogAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotState#PlotState()";
  "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isAxisLineVisible()";
  "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isVisible()";
  "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#AxisState(double)";
  "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis#drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState)";
  "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isTickMarksVisible()";
  "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainLowerBound(boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(boolean)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainLowerBound(boolean)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(boolean)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getX(org.jfree.data.time.RegularTimePeriod)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(boolean)" -> "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(boolean)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(boolean)" -> "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(boolean)" -> "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(boolean)" -> "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(boolean)" -> "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(boolean)" -> "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(boolean)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(boolean)" -> "org.jfree.data.time$Month#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.category$BarRenderer3D#getXOffset()";
  "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getPlot()";
  "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer()";
  "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isVisible()";
  "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.category$BarRenderer3D#getYOffset()";
  "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#setTicks(java.util.List)";
  "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#AxisState(double)";
  "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#clearDomainAxes()" -> "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#clearDomainAxes()" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#clearDomainAxes()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#clearDomainAxes()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#clearDomainAxes()" -> "org.jfree.chart.util$AbstractObjectList#clear()";
  "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CrosshairState#getCrosshairY()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis(int)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CrosshairState#CrosshairState()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$DatasetRenderingOrder#<clinit>()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisForDataset(int)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CrosshairState#getRangeAxisIndex()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CrosshairState#setCrosshairX(double)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDatasetRenderingOrder()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CrosshairState#getCrosshairX()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double,boolean)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CrosshairState#setAnchorY(double)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CrosshairState#setAnchor(java.awt.geom.Point2D)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRenderer(int)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainCrosshairValue()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#createAndAddEntity(java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo,java.lang.String,java.lang.String)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawZeroDomainBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeCrosshairPaint()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CrosshairState#setAnchorX(double)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CrosshairState#setCrosshairY(double)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double,boolean)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeCrosshairValue()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#setDataArea(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getForegroundAlpha()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getInsets()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#isRangeCrosshairVisible()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$LogAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CrosshairState#setCrosshairDistance(double)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawDomainTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisForDataset(int)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CrosshairState#getDomainAxisIndex()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainCrosshairPaint()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisSpace#shrink(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#isDomainCrosshairVisible()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#setPlotArea(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis(int)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#getTicks()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainCrosshairStroke()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDatasetCount()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeCrosshairStroke()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotState#getSharedAxisStates()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawRangeTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)";
  "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)" -> "org.jfree.chart.axis$DateTickUnit#equals(java.lang.Object)";
  "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)" -> "org.jfree.chart.axis$TickUnit#equals(java.lang.Object)";
  "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)" -> "org.jfree.chart.axis$NumberTickUnit#equals(java.lang.Object)";
  "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)" -> "org.jfree.chart.plot$Plot#equals(java.lang.Object)";
  "org.jfree.chart.axis$DateTickUnit#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.axis$DateTickUnit#equals(java.lang.Object)" -> "org.jfree.chart.axis$DateTickUnitType#equals(java.lang.Object)";
  "org.jfree.chart.axis$DateTickUnit#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.axis$DateTickUnit#equals(java.lang.Object)" -> "org.jfree.chart.axis$TickUnit#equals(java.lang.Object)";
  "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)" -> "org.jfree.data$Range#getLength()";
  "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.util$VerticalAlignment#readResolve()" -> "org.jfree.chart.util$VerticalAlignment#<clinit>()";
  "org.jfree.chart.util$VerticalAlignment#readResolve()" -> "org.jfree.chart.util$VerticalAlignment#equals(java.lang.Object)";
  "org.jfree.chart.util$VerticalAlignment#<clinit>()" -> "org.jfree.chart.util$VerticalAlignment#VerticalAlignment(java.lang.String)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesStroke(int,java.awt.Stroke,boolean)" -> "org.jfree.chart.util$StrokeList#setStroke(int,java.awt.Stroke)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesStroke(int,java.awt.Stroke,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.util$StrokeList#setStroke(int,java.awt.Stroke)" -> "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#getLowerMargin()";
  "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.data$Range#expand(org.jfree.data.Range,double,double)";
  "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.chart.axis$PeriodAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#getUpperMargin()";
  "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.plot$Plot#clone()" -> "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)";
  "org.jfree.chart.plot$Plot#clone()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.plot$MultiplePiePlot#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.axis$NumberAxis#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.data.general$AbstractDataset#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.data.xy$IntervalXYDelegate#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.renderer.xy$XYStepRenderer#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.data.general$DefaultPieDataset#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.axis$AxisSpace#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.plot$XYPlot#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.data.xy$XYSeriesCollection#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.title$LegendGraphic#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.plot$CategoryPlot#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.entity$PlotEntity#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.plot$PiePlot#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.plot$Plot#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.axis$ValueAxis#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.entity$TitleEntity#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.data.xy$DefaultXYDataset#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.data$DefaultKeyedValues#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.util$StandardGradientPaintTransformer#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.entity$JFreeChartEntity#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.block$BlockContainer#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.title$TextTitle#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.title$Title#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.axis$DateAxis#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.util$Size2D#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.entity$LegendItemEntity#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.entity$AxisEntity#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.plot$PolarPlot#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.block$LabelBlock#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.axis$PeriodAxis#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#clone()";
  "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)" -> "org.jfree.data.xy$DefaultXYDataset#indexOf(java.lang.Comparable)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)" -> "org.jfree.data.xy$DefaultXYDataset#getXValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)" -> "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)" -> "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)" -> "org.jfree.data.xy$AbstractIntervalXYDataset#getStartYValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)" -> "org.jfree.data.xy$DefaultXYDataset#getYValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)" -> "org.jfree.data.xy$AbstractIntervalXYDataset#getEndYValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)" -> "org.jfree.data.xy$DefaultXYDataset#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)" -> "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeries#getRawDataItem(int)";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.general$Series#getKey()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable)";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeriesDataItem#getValue()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double)" -> "org.jfree.chart.renderer$AbstractRenderer#getDefaultEntityRadius()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getPlot()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemCreateEntity(int,int,boolean)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getToolTipGenerator(int,int,boolean)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getURLGenerator(int,int,boolean)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double)" -> "org.jfree.chart.plot$CategoryPlot#getOrientation()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double)" -> "org.jfree.chart.entity$CategoryItemEntity#CategoryItemEntity(java.awt.Shape,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,java.lang.Comparable,java.lang.Comparable)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$DefaultXYDataset#getYValue(int,int)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYItemRendererState#getCrosshairState()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlinePaint(int)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$RendererState#getEntityCollection()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#getPlotLines()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.time$TimeSeriesCollection#getItemCount(int)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$DefaultXYDataset#getXValue(int,int)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$DefaultXYDataset#getItemCount(int)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#isOutline()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemPaint(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#getPlotShapes()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.util$ShapeUtilities#createTranslatedShape(java.awt.Shape,double,double)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesFillPaint(int)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemVisible(int,int)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#updateCrosshairValues(org.jfree.chart.plot.CrosshairState,double,double,int,int,double,double,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#getPlotArea()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlineStroke(int)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemStroke(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.util$StandardGradientPaintTransformer#transform(java.awt.GradientPaint,java.awt.Shape)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemShape(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$XYSeriesCollection#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getRangeBounds(boolean)";
  "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)";
  "org.jfree.data.xy$XYSeriesCollection#getRangeBounds(boolean)" -> "org.jfree.data.xy$XYSeries#getMinY()";
  "org.jfree.data.xy$XYSeriesCollection#getRangeBounds(boolean)" -> "org.jfree.data.xy$XYSeries#getMaxY()";
  "org.jfree.data.xy$XYSeriesCollection#getRangeBounds(boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.data.xy$XYSeriesCollection#getRangeBounds(boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getSeries(int)";
  "org.jfree.data.xy$XYSeriesCollection#getRangeBounds(boolean)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator)";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#<clinit>()" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$ValueAxis#<clinit>()" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.data.time$Day#equals(java.lang.Object)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.time$Day#equals(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)";
  "org.jfree.chart.plot$Marker#Marker(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.plot$Marker#Marker(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.plot$Marker#Marker(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.plot$Marker#Marker(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)" -> "org.jfree.chart.util$LengthAdjustmentType#<clinit>()";
  "org.jfree.chart.plot$Marker#Marker(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.util$RectangleAnchor#<clinit>()" -> "org.jfree.chart.util$RectangleAnchor#RectangleAnchor(java.lang.String)";
  "org.jfree.chart.axis$LogAxis#zoomRange(double,double)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$LogAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$LogAxis#calculateLog(double)";
  "org.jfree.chart.axis$LogAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.axis$LogAxis#zoomRange(double,double)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$LogAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$LogAxis#calculateValue(double)";
  "org.jfree.chart.axis$LogAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$LogAxis#zoomRange(double,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$LogAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.entity$AxisLabelEntity#AxisLabelEntity(org.jfree.chart.axis.Axis,java.awt.Shape,java.lang.String,java.lang.String)";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#cursorLeft(double)";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#cursorRight(double)";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getLabelAngle()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#getLeft()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getLabelFont()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#getCursor()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#getBottom()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#cursorUp(double)";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#getOwner()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getLabelInsets()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart$ChartRenderingInfo#getEntityCollection()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#cursorDown(double)";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#getTop()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getLabelPaint()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#getRight()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.plot$XYPlot#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.title$LegendGraphic#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.util$StandardGradientPaintTransformer#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.util$AbstractObjectList#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.entity$LegendItemEntity#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.title$TextTitle#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.renderer$AbstractRenderer#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.entity$AxisEntity#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.util$Size2D#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.plot$PiePlot#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.data.general$AbstractDataset#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.plot$PolarPlot#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.entity$PlotEntity#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.axis$NumberAxis#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.data.xy$DefaultXYDataset#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.data$DefaultKeyedValues#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.plot$Plot#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.block$LabelBlock#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.plot$CategoryPlot#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.plot$CombinedDomainXYPlot#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.plot$CombinedRangeXYPlot#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.axis$PeriodAxis#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.plot$MultiplePiePlot#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.data.xy$XYSeriesCollection#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.title$Title#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.axis$ValueAxis#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.renderer.xy$XYBarRenderer#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.data.general$DefaultPieDataset#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.entity$JFreeChartEntity#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.renderer.xy$XYStepRenderer#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.axis$AxisSpace#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.block$BlockContainer#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.entity$ChartEntity#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.data.xy$IntervalXYDelegate#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.axis$DateAxis#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart.entity$TitleEntity#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()" -> "org.jfree.chart$StandardChartTheme#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.renderer.xy$XYBarRenderer#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$AbstractObjectList#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.data.general$Series#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$StrokeList#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.entity$ChartEntity#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.plot$Plot#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.data.xy$DefaultXYDataset#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.data.general$AbstractDataset#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.title$LegendGraphic#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.data$DefaultKeyedValues#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.data.time$TimeSeriesCollection#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.plot$CombinedDomainXYPlot#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.plot$PlotRenderingInfo#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$StrokeMap#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.axis$CategoryAxis#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.axis$TickUnits#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.axis$CategoryAxis3D#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.entity$PlotEntity#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.data.xy$XYDataItem#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.plot$CategoryPlot#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.entity$JFreeChartEntity#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.title$TextTitle#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$Size2D#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.axis$AxisSpace#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$StandardGradientPaintTransformer#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.block$AbstractBlock#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.block$BlockContainer#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.data.general$DatasetGroup#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$PaintMap#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.title$Title#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.data.xy$IntervalXYDelegate#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.renderer$AbstractRenderer#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.data.general$DefaultPieDataset#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.data.xy$XYSeriesCollection#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.axis$SegmentedTimeline#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$ShapeList#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.plot$Marker#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.plot$MultiplePiePlot#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.data.time$TimeSeriesDataItem#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.entity$AxisEntity#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.axis$ValueAxis#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.axis$DateAxis#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.data.xy$XYSeries#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.renderer.xy$XYStepRenderer#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$LogFormat#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.axis$Axis#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.axis$PeriodAxis#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.data.time$TimeSeries#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.axis$NumberAxis#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.plot$IntervalMarker#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.plot$PiePlot#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.plot$XYPlot#getDataset(int)";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.entity$TitleEntity#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.entity$LegendItemEntity#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.plot$CombinedRangeXYPlot#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.axis$Tick#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.block$LabelBlock#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.plot$PolarPlot#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart$StandardChartTheme#clone()";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$LogAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.entity$TitleEntity#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.block$BorderArrangement#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.data$Range#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.data.general$Series#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$DateTickUnit#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$VerticalAlignment#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.block$BlockBorder#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.data.time$Month#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.block$CenterArrangement#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$DateTickMarkPosition#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.entity$CategoryItemEntity#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.data.time$TimePeriodAnchor#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.text$TextAnchor#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.title$Title#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.entity$LegendItemEntity#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$PaintMap#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$LengthAdjustmentType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$BooleanList#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.block$FlowArrangement#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$StrokeMap#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$PiePlot3D#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$RectangleEdge#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.data.general$DatasetGroup#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.text$TextFragment#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$UnitType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.block$LineBorder#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$PlotRenderingInfo#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$Axis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$CombinedDomainXYPlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.data$RangeType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$ShapeList#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$Plot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$DateTickUnitType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$MarkerAxisBand#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.renderer.category$BarRenderer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$PaintList#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.urls$StandardXYURLGenerator#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$Size2D#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$Rotation#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.entity$AxisEntity#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.renderer$AbstractRenderer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.labels$ItemLabelPosition#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.entity$XYItemEntity#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.block$BlockContainer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.title$PaintScaleLegend#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.data.xy$XYSeriesCollection#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$Tick#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$LogFormat#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$DatasetRenderingOrder#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.text$TextBlockAnchor#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.data.time$TimeSeriesCollection#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$RingPlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$TickUnit#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.renderer.category$GradientBarPainter#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$CombinedRangeXYPlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.title$TextTitle#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.renderer.xy$XYStepRenderer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.renderer.xy$GradientXYBarPainter#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.data.xy$XYDataItem#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$SymbolAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.block$ColumnArrangement#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$PieLabelLinkStyle#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.title$LegendGraphic#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$Layer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.block$LabelBlock#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.data.xy$IntervalXYDelegate#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.event$ChartChangeEventType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$TickType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.data.xy$DefaultXYDataset#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$SeriesRenderingOrder#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$AxisSpace#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$NumberTickUnit#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.renderer.category$BarRenderer3D#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.labels$ItemLabelAnchor#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.renderer.xy$XYBarRenderer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$DateAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$TickUnits#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.block$LengthConstraintType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.data.general$DefaultPieDataset#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$RectangleAnchor#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$HorizontalAlignment#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$IntervalMarker#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.data$DomainOrder#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$PlotOrientation#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.entity$JFreeChartEntity#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$StandardGradientPaintTransformer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$GradientPaintTransformType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.ui$Library#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.text$TextLine#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.text$TextBlock#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$PeriodAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$Marker#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.data.xy$XYSeries#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$ValueTick#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.entity$PieSectionEntity#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.data.time$TimeSeries#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$AxisLocation#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$ValueMarker#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$StrokeList#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)";
  "org.jfree.chart.axis$LogAxis#equals(java.lang.Object)" -> "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawDomainGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.renderer.category$BarRenderer3D#getYOffset()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawDomainGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.plot$CategoryPlot#getOrientation()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawDomainGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.plot$CategoryPlot#getDomainGridlineStroke()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawDomainGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawDomainGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawDomainGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.plot$CategoryPlot#getDomainGridlinePaint()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawDomainGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.renderer.category$BarRenderer3D#getXOffset()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getDataset()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.util$Rotation#<clinit>()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getMinimumArcAngleToDraw()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getToolTipGenerator()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.data.general$DefaultPieDataset#getValue(int)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#generateToolTip(org.jfree.data.general.PieDataset,java.lang.Comparable)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.renderer$RendererState#getEntityCollection()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getSectionKey(int)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getArcBounds(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double,double)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.renderer$RendererState#getInfo()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getShadowYOffset()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.entity$PieSectionEntity#PieSectionEntity(java.awt.Shape,org.jfree.data.general.PieDataset,int,int,java.lang.Comparable,java.lang.String,java.lang.String)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getMaximumExplodePercent()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.util$ShapeUtilities#createTranslatedShape(java.awt.Shape,double,double)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(org.jfree.chart.util.UnitType,double,double,double,double)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getShadowPaint()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getExplodePercent(java.lang.Comparable)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$RingPlot#extendLine(java.awt.geom.Line2D,double,double)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getDirection()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getShadowXOffset()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getURLGenerator()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getPieIndex()";
  "org.jfree.chart.axis$CategoryAxis#drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState)" -> "org.jfree.chart.axis$AxisState#cursorDown(double)";
  "org.jfree.chart.axis$CategoryAxis#drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(java.lang.Comparable,java.util.List,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState)" -> "org.jfree.chart.axis$AxisState#cursorRight(double)";
  "org.jfree.chart.axis$CategoryAxis#drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState)" -> "org.jfree.chart.util$RectangleEdge#equals(java.lang.Object)";
  "org.jfree.chart.axis$CategoryAxis#drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState)" -> "org.jfree.chart.axis$Axis#getTickMarkStroke()";
  "org.jfree.chart.axis$CategoryAxis#drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState)" -> "org.jfree.chart.plot$CategoryPlot#getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)";
  "org.jfree.chart.axis$CategoryAxis#drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState)" -> "org.jfree.chart.axis$Axis#getTickMarkPaint()";
  "org.jfree.chart.axis$CategoryAxis#drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState)" -> "org.jfree.chart.axis$AxisState#cursorUp(double)";
  "org.jfree.chart.axis$CategoryAxis#drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState)" -> "org.jfree.chart.axis$Axis#getTickMarkInsideLength()";
  "org.jfree.chart.axis$CategoryAxis#drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState)" -> "org.jfree.chart.axis$Axis#getTickMarkOutsideLength()";
  "org.jfree.chart.axis$CategoryAxis#drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState)" -> "org.jfree.chart.axis$Axis#getPlot()";
  "org.jfree.chart.axis$CategoryAxis#drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState)" -> "org.jfree.chart.axis$AxisState#cursorLeft(double)";
  "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockParams#getGenerateEntities()";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#trimBorder(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockResult#getEntityCollection()";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#trimPadding(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$LabelBlock#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#getBounds()";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.title$LegendGraphic#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockResult#BlockResult()";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.title$LegendItemBlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockResult#setEntityCollection(org.jfree.chart.entity.EntityCollection)";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#trimMargin(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.axis$NumberTickUnit#NumberTickUnit(double,java.text.NumberFormat)" -> "org.jfree.chart.axis$TickUnit#TickUnit(double)";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#getRight()";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#AxisSpace()";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#getTop()";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$PeriodAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation()";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#ensureAtLeast(double,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#getBottom()";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxis()";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#getLeft()";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation(int)";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.util$RectangleEdge#opposite(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.XYURLGenerator)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#getTimeSeriesInstance()";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.urls$StandardXYURLGenerator#StandardXYURLGenerator()";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#XYLineAndShapeRenderer(boolean,boolean)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$StandardChartTheme#StandardChartTheme(java.lang.String)";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.urls$StandardXYURLGenerator#StandardXYURLGenerator()";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#XYAreaRenderer(int,org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setForegroundAlpha(float)";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator()";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart.axis$LogAxis#autoAdjustRange()" -> "org.jfree.chart.axis$LogAxis#calculateValue(double)";
  "org.jfree.chart.axis$LogAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getUpperMargin()";
  "org.jfree.chart.axis$LogAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$LogAxis#autoAdjustRange()" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$LogAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getFixedAutoRange()";
  "org.jfree.chart.axis$LogAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getAutoRangeMinimumSize()";
  "org.jfree.chart.axis$LogAxis#autoAdjustRange()" -> "org.jfree.chart.plot$CombinedRangeXYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$LogAxis#autoAdjustRange()" -> "org.jfree.chart.axis$LogAxis#calculateLog(double)";
  "org.jfree.chart.axis$LogAxis#autoAdjustRange()" -> "org.jfree.chart.plot$CombinedDomainXYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$LogAxis#autoAdjustRange()" -> "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$LogAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getDefaultAutoRange()";
  "org.jfree.chart.axis$LogAxis#autoAdjustRange()" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$LogAxis#autoAdjustRange()" -> "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$LogAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getLowerMargin()";
  "org.jfree.chart.axis$LogAxis#autoAdjustRange()" -> "org.jfree.chart.plot$PolarPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$LogAxis#autoAdjustRange()" -> "org.jfree.chart.axis$Axis#getPlot()";
  "org.jfree.chart.axis$LogAxis#autoAdjustRange()" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$Layer#equals(java.lang.Object)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#getSubplots()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#findSubplot(org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)";
  "org.jfree.data.xy$IntervalXYDelegate#getIntervalWidth()" -> "org.jfree.data.xy$IntervalXYDelegate#isAutoWidth()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.axis$DateAxis#setTimeline(org.jfree.chart.axis.Timeline)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.plot$CategoryPlot#getOrientation()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.util$GradientPaintTransformType#<clinit>()" -> "org.jfree.chart.util$GradientPaintTransformType#GradientPaintTransformType(java.lang.String)";
  "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)" -> "org.jfree.chart.title$PaintScaleLegend#axisChanged(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)" -> "org.jfree.chart.plot$Plot#axisChanged(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)" -> "org.jfree.chart.title$Title#removeChangeListener(org.jfree.chart.event.TitleChangeListener)";
  "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)" -> "org.jfree.chart.title$Title#addChangeListener(org.jfree.chart.event.TitleChangeListener)";
  "org.jfree.chart.title$Title#removeChangeListener(org.jfree.chart.event.TitleChangeListener)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.data.time$TimeSeriesCollection#clone()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.data.time$TimeSeriesCollection#clone()" -> "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)";
  "org.jfree.data.time$TimeSeriesCollection#clone()" -> "org.jfree.data.general$AbstractDataset#clone()";
  "org.jfree.data.xy$IntervalXYDelegate#getDomainBounds(boolean)" -> "org.jfree.data.xy$IntervalXYDelegate#getIntervalPositionFactor()";
  "org.jfree.data.xy$IntervalXYDelegate#getDomainBounds(boolean)" -> "org.jfree.data.xy$IntervalXYDelegate#getIntervalWidth()";
  "org.jfree.data.xy$IntervalXYDelegate#getDomainBounds(boolean)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.data.xy$IntervalXYDelegate#getDomainBounds(boolean)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.data.xy$IntervalXYDelegate#getDomainBounds(boolean)" -> "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)";
  "org.jfree.data.xy$IntervalXYDelegate#getDomainBounds(boolean)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.entity$TitleEntity#hashCode()" -> "org.jfree.chart.entity$ChartEntity#getURLText()";
  "org.jfree.chart.entity$TitleEntity#hashCode()" -> "org.jfree.chart.entity$ChartEntity#getToolTipText()";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.chart$LegendItem#setSeriesIndex(int)";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#LegendItemCollection()";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.data.time$Year#toString()";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.data.time$RegularTimePeriod#toString()";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.chart.axis$DateTickUnit#toString()";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.chart.plot$MultiplePiePlot#getLegendItemShape()";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.chart.axis$NumberTickUnit#toString()";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.data.time$Day#toString()";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.chart$LegendItem#<clinit>()";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.chart.plot$MultiplePiePlot#getDataset()";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.chart.plot$MultiplePiePlot#prefetchSectionPaints()";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.data.time$SerialDate#toString()";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.chart$LegendItem#setDataset(org.jfree.data.general.Dataset)";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.data.time$Month#toString()";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.chart$LegendItem#setSeriesKey(java.lang.Comparable)";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.data.xy$XYDataItem#toString()";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)";
  "org.jfree.chart.plot$PieLabelDistributor#adjustDownwards(double,double)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#clone()" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#clone()" -> "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#clone()" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#clone()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#clone()" -> "org.jfree.chart.util$ShapeUtilities#clone(java.awt.Shape)";
  "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextPaint(int)" -> "org.jfree.chart.renderer$AbstractRenderer#getLegendTextPaint(int)";
  "org.jfree.chart.renderer$AbstractRenderer#getLegendTextPaint(int)" -> "org.jfree.chart.util$PaintList#getPaint(int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setFillPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlineStroke(int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItemURLGenerator()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlinePaint(int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesPaint(int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#getGradientPaintTransformer()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesKey(int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItemToolTipGenerator()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#<clinit>()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setLabelFont(java.awt.Font)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setDataset(org.jfree.data.general.Dataset)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setSeriesIndex(int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setLabelPaint(java.awt.Paint)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextFont(int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setDatasetIndex(int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.plot$XYPlot#getDataset(int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesKey(int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getPlot()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setSeriesKey(java.lang.Comparable)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextPaint(int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItemLabelGenerator()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#generateLabel(org.jfree.data.xy.XYDataset,int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesKey(int)";
  "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint)" -> "org.jfree.chart$LegendItem#<clinit>()";
  "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint)" -> "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.plot$CombinedDomainXYPlot#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.plot$PolarPlot#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.util$Size2D#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.block$LabelBlock#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.title$LegendGraphic#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.plot$CombinedRangeXYPlot#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.axis$DateAxis#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.util$StandardGradientPaintTransformer#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.plot$PiePlot#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.axis$PeriodAxis#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.plot$XYPlot#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.entity$ChartEntity#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.data.general$AbstractDataset#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.data$DefaultKeyedValues#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.entity$TitleEntity#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart$StandardChartTheme#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.data.general$DefaultPieDataset#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.entity$JFreeChartEntity#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.renderer.xy$XYBarRenderer#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.plot$MultiplePiePlot#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.plot$CategoryPlot#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.entity$PlotEntity#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.title$TextTitle#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.axis$ValueAxis#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.util$ShapeUtilities#clone(java.awt.Shape)";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.renderer.xy$XYStepRenderer#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.data.xy$XYSeriesCollection#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.title$Title#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.block$BlockContainer#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.entity$LegendItemEntity#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.entity$AxisEntity#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.data.xy$IntervalXYDelegate#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.axis$NumberAxis#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.axis$AxisSpace#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.data.xy$DefaultXYDataset#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.plot$Plot#clone()";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#clone()" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#equals(java.lang.Object)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#equals(java.lang.Object)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)" -> "org.jfree.chart.plot$PieLabelLinkStyle#equals(java.lang.Object)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)" -> "org.jfree.chart.plot$PiePlot#getLabelLinkStyle()";
  "org.jfree.chart.plot$PiePlot#drawLeftLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)" -> "org.jfree.chart.plot$PieLabelLinkStyle#<clinit>()";
  "org.jfree.chart.plot$PiePlot#drawLeftLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.plot$PieLabelLinkStyle#equals(java.lang.Object)" -> "org.jfree.chart.plot$PieLabelLinkStyle#toString()";
  "org.jfree.chart.renderer.xy$XYStepRenderer#clone()" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#clone()";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#equals(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#equals(java.lang.Object)" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource)";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.block$LineBorder#LineBorder()";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.title$TextTitle#<clinit>()";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.title$Title#addChangeListener(org.jfree.chart.event.TitleChangeListener)";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.block$AbstractBlock#setFrame(org.jfree.chart.block.BlockFrame)";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.block$AbstractBlock#setMargin(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.title$LegendTitle#setBackgroundPaint(java.awt.Paint)";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.plot$Plot#addChangeListener(org.jfree.chart.event.PlotChangeListener)";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.title$LegendTitle#<clinit>()";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.title$Title#setPosition(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource)" -> "org.jfree.chart.block$ColumnArrangement#ColumnArrangement()";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource)" -> "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource)" -> "org.jfree.chart.block$FlowArrangement#FlowArrangement()";
  "org.jfree.chart.plot$CategoryPlot#setCrosshairDatasetIndex(int)" -> "org.jfree.chart.plot$CategoryPlot#setCrosshairDatasetIndex(int,boolean)";
  "org.jfree.chart.plot$CategoryPlot#setCrosshairDatasetIndex(int,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#getTickUnit()";
  "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnits#getCeilingTickUnit(org.jfree.chart.axis.TickUnit)";
  "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnit#getSize()";
  "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getStandardTickUnits()";
  "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnits#getCeilingTickUnit(double)";
  "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)";
  "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)";
  "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnits#getLargerTickUnit(org.jfree.chart.axis.TickUnit)";
  "org.jfree.chart.axis$LogAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#getTickUnit()";
  "org.jfree.chart.axis$LogAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)";
  "org.jfree.chart.axis$LogAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getStandardTickUnits()";
  "org.jfree.chart.axis$LogAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#exponentLengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$LogAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnits#getLargerTickUnit(org.jfree.chart.axis.TickUnit)";
  "org.jfree.chart.axis$LogAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)";
  "org.jfree.chart.axis$LogAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnits#getCeilingTickUnit(org.jfree.chart.axis.TickUnit)";
  "org.jfree.chart.axis$LogAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnits#getCeilingTickUnit(double)";
  "org.jfree.chart.axis$LogAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnit#getSize()";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$ChartRenderingInfo#getPlotInfo()";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#getBorderStroke()";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$ChartRenderingInfo#setChartArea(java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$ChartRenderingInfo#clear()";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$ChartRenderingInfo#getEntityCollection()";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.title$Title#isVisible()";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.entity$JFreeChartEntity#JFreeChartEntity(java.awt.Shape,org.jfree.chart.JFreeChart)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#isBorderVisible()";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#getBorderPaint()";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartProgressEvent)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.event$ChartProgressEvent#ChartProgressEvent(java.lang.Object,org.jfree.chart.JFreeChart,int,int)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$LogAxis#LogAxis(java.lang.String)" -> "org.jfree.chart.axis$ValueAxis#setDefaultAutoRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$LogAxis#LogAxis(java.lang.String)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.axis$LogAxis#LogAxis(java.lang.String)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$LogAxis#LogAxis(java.lang.String)" -> "org.jfree.chart.axis$LogAxis#createLogTickUnits(java.util.Locale)";
  "org.jfree.chart.axis$LogAxis#LogAxis(java.lang.String)" -> "org.jfree.chart.axis$ValueAxis#ValueAxis(java.lang.String,org.jfree.chart.axis.TickUnitSource)";
  "org.jfree.chart.axis$LogAxis#LogAxis(java.lang.String)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.axis$LogAxis#LogAxis(java.lang.String)" -> "org.jfree.chart.axis$NumberTickUnit#NumberTickUnit(double,java.text.NumberFormat,int)";
  "org.jfree.chart.axis$ValueAxis#setDefaultAutoRange(org.jfree.data.Range)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$ValueAxis#setDefaultAutoRange(org.jfree.data.Range)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.plot$CombinedRangeXYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.plot$PolarPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getDefaultAutoRange()";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.axis$Axis#getPlot()";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.data$RangeType#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getAutoRangeMinimumSize()";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.axis$NumberAxis#getAutoRangeIncludesZero()";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getFixedAutoRange()";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.axis$NumberAxis#getAutoRangeStickyZero()";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getUpperMargin()";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.plot$CombinedDomainXYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getLowerMargin()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)";
  "org.jfree.chart.block$RectangleConstraint#<clinit>()" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.block$RectangleConstraint#<clinit>()" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)" -> "org.jfree.data.time$Year#toString()";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)" -> "org.jfree.data.time$SerialDate#toString()";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)" -> "org.jfree.data.xy$DefaultXYDataset#getYValue(int,int)";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesKey(int)";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)" -> "org.jfree.data.xy$XYDataItem#toString()";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)" -> "org.jfree.chart.axis$DateTickUnit#toString()";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesKey(int)";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)" -> "org.jfree.data.xy$DefaultXYDataset#getXValue(int,int)";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)" -> "org.jfree.data.time$RegularTimePeriod#toString()";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getY(int,int)";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)" -> "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)" -> "org.jfree.data.xy$DefaultXYDataset#getY(int,int)";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)" -> "org.jfree.data.time$Day#toString()";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesKey(int)";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)" -> "org.jfree.chart.axis$NumberTickUnit#toString()";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)" -> "org.jfree.data.xy$XYSeriesCollection#getY(int,int)";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)" -> "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)" -> "org.jfree.data.time$Month#toString()";
  "org.jfree.data.general$DefaultPieDataset#DefaultPieDataset(org.jfree.data.KeyedValues)" -> "org.jfree.data.general$DefaultPieDataset#getKey(int)";
  "org.jfree.data.general$DefaultPieDataset#DefaultPieDataset(org.jfree.data.KeyedValues)" -> "org.jfree.data$DefaultKeyedValues#getKey(int)";
  "org.jfree.data.general$DefaultPieDataset#DefaultPieDataset(org.jfree.data.KeyedValues)" -> "org.jfree.data.general$AbstractDataset#AbstractDataset()";
  "org.jfree.data.general$DefaultPieDataset#DefaultPieDataset(org.jfree.data.KeyedValues)" -> "org.jfree.data$DefaultKeyedValues#getValue(int)";
  "org.jfree.data.general$DefaultPieDataset#DefaultPieDataset(org.jfree.data.KeyedValues)" -> "org.jfree.data$DefaultKeyedValues#DefaultKeyedValues()";
  "org.jfree.data.general$DefaultPieDataset#DefaultPieDataset(org.jfree.data.KeyedValues)" -> "org.jfree.data.general$DefaultPieDataset#getValue(int)";
  "org.jfree.data.general$DefaultPieDataset#DefaultPieDataset(org.jfree.data.KeyedValues)" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data.general$DefaultPieDataset#DefaultPieDataset(org.jfree.data.KeyedValues)" -> "org.jfree.data$DefaultKeyedValues#getItemCount()";
  "org.jfree.data.general$DefaultPieDataset#DefaultPieDataset(org.jfree.data.KeyedValues)" -> "org.jfree.data.general$DefaultPieDataset#getItemCount()";
  "org.jfree.data.general$DefaultPieDataset#getKey(int)" -> "org.jfree.data$DefaultKeyedValues#getKey(int)";
  "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getLowerMargin()";
  "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getUpperMargin()";
  "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryMargin()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getPlot()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setSeriesKey(java.lang.Comparable)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setLabelFont(java.awt.Font)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisibleInLegend(int)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextPaint(int)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlineStroke(int)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setDatasetIndex(int)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.plot$CategoryPlot#getDataset(int)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesPaint(int)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlinePaint(int)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setDataset(org.jfree.data.general.Dataset)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextFont(int)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisible(int)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setLabelPaint(java.awt.Paint)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setSeriesIndex(int)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupLegendShape(int)";
  "org.jfree.chart.plot$PolarPlot#PolarPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.PolarItemRenderer)" -> "org.jfree.chart.axis$NumberTickUnit#NumberTickUnit(double)";
  "org.jfree.chart.plot$PolarPlot#PolarPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.PolarItemRenderer)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#PolarPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.PolarItemRenderer)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$PolarPlot#PolarPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.PolarItemRenderer)" -> "org.jfree.chart.plot$PolarPlot#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#PolarPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.PolarItemRenderer)" -> "org.jfree.chart.plot$Plot#Plot()";
  "org.jfree.chart.plot$PolarPlot#PolarPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.PolarItemRenderer)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#PolarPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.PolarItemRenderer)" -> "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.chart.plot$PolarPlot#PolarPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.PolarItemRenderer)" -> "org.jfree.chart.renderer$AbstractRenderer#addChangeListener(org.jfree.chart.event.RendererChangeListener)";
  "org.jfree.chart.axis$NumberTickUnit#NumberTickUnit(double)" -> "org.jfree.chart.axis$NumberTickUnit#NumberTickUnit(double,java.text.NumberFormat)";
  "org.jfree.chart.entity$JFreeChartEntity#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.entity$ChartEntity#setArea(java.awt.Shape)";
  "org.jfree.chart.entity$JFreeChartEntity#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#calculateDomainMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#calculateDomainMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$LengthAdjustmentType#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#calculateDomainMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#calculateDomainMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$RectangleAnchor#coordinates(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleAnchor)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#calculateDomainMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)" -> "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)";
  "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)" -> "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)";
  "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)";
  "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)";
  "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)";
  "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)" -> "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)";
  "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)";
  "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)" -> "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)";
  "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)" -> "org.jfree.chart.util$LengthAdjustmentType#<clinit>()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.general$Series#clone()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$TimeSeriesDataItem#clone()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickType#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnit#getSize()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getMinorTickCount()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#calculateLowestVisibleTickValue()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isAutoTickUnitSelection()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberTick#NumberTick(org.jfree.chart.axis.TickType,double,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberTickUnit#valueToString(double)";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnit#getMinorTickCount()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberTick#NumberTick(java.lang.Number,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#calculateVisibleTickCount()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#getTickUnit()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#getNumberFormatOverride()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$SymbolAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.block$FlowArrangement#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$ShapeList#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.block$ColumnArrangement#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.entity$JFreeChartEntity#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.text$TextLine#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.title$Title#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.text$TextAnchor#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$BooleanList#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$StrokeList#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$PiePlot3D#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$StrokeMap#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.data$DomainOrder#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$PaintMap#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$SeriesRenderingOrder#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$DateAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$Plot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.event$ChartChangeEventType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$RectangleEdge#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.urls$StandardXYURLGenerator#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$PeriodAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$TickUnit#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$VerticalAlignment#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$LogFormat#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$PaintList#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$ValueMarker#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$DatasetRenderingOrder#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$HorizontalAlignment#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$NumberTickUnit#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$AxisLocation#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$StandardGradientPaintTransformer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$Tick#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$TickType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.entity$TitleEntity#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$Marker#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.renderer.category$BarRenderer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.data.xy$DefaultXYDataset#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.data.general$Series#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.data.general$DefaultPieDataset#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$SymbolAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$IntervalMarker#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$Layer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$RingPlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.data.time$TimeSeriesCollection#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.entity$XYItemEntity#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$PieLabelLinkStyle#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.block$LabelBlock#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.text$TextBlock#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$Axis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.entity$PieSectionEntity#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.block$LengthConstraintType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$TickUnits#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.data$RangeType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.title$TextTitle#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$DateTickUnitType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.data.time$TimePeriodAnchor#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.labels$ItemLabelAnchor#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.block$BorderArrangement#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.entity$LegendItemEntity#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$DateTickUnit#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.data.xy$IntervalXYDelegate#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.data.xy$XYSeries#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.block$CenterArrangement#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.title$LegendGraphic#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.title$PaintScaleLegend#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.data.xy$XYDataItem#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$PlotRenderingInfo#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.renderer.category$GradientBarPainter#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$LengthAdjustmentType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.block$LineBorder#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$Rotation#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.data.xy$XYSeriesCollection#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.data.time$TimeSeries#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.text$TextBlockAnchor#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.renderer.category$BarRenderer3D#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.block$BlockBorder#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.renderer.xy$XYStepRenderer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.data$Range#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.ui$Library#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$LogAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.entity$CategoryItemEntity#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$PlotOrientation#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.renderer.xy$GradientXYBarPainter#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.data.general$DatasetGroup#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$DateTickMarkPosition#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.entity$AxisEntity#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.data.time$Month#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$GradientPaintTransformType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$AxisSpace#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$Size2D#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$ValueTick#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$MarkerAxisBand#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.text$TextFragment#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$RectangleAnchor#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$UnitType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.block$BlockContainer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.labels$ItemLabelPosition#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)" -> "org.jfree.data.time$Month#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.chart.util$PaintMap#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.util$PaintMap#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$PaintMap#getPaint(java.lang.Comparable)";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator)";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$BarRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#<clinit>()" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#<clinit>()" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#<clinit>()" -> "org.jfree.chart.axis$NumberTickUnit#NumberTickUnit(double,java.text.NumberFormat)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelFont()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabel()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelTextAnchor()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$LengthAdjustmentType#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$IntervalMarker#getStartValue()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$IntervalMarker#getEndValue()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getAlpha()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelAnchor()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelPaint()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getStroke()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelOffset()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelOffsetType()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#calculateRangeMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$StandardGradientPaintTransformer#transform(java.awt.GradientPaint,java.awt.Shape)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getOutlinePaint()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$IntervalMarker#getGradientPaintTransformer()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$ValueMarker#getValue()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.data$Range#intersects(double,double)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getPaint()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getOutlineStroke()";
  "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Month#getFirstMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Month#getLastMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#calculateLowestVisibleTickValue()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberTick#NumberTick(java.lang.Number,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getMinorTickCount()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#calculateVisibleTickCount()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickType#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$SymbolAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#getTickUnit()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberTick#NumberTick(org.jfree.chart.axis.TickType,double,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isAutoTickUnitSelection()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#getNumberFormatOverride()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnit#getMinorTickCount()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberTickUnit#valueToString(double)";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnit#getSize()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#calculateLowestVisibleTickValue()" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$NumberAxis#calculateLowestVisibleTickValue()" -> "org.jfree.chart.axis$NumberAxis#getTickUnit()";
  "org.jfree.chart.axis$NumberAxis#calculateLowestVisibleTickValue()" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$NumberAxis#calculateLowestVisibleTickValue()" -> "org.jfree.chart.axis$TickUnit#getSize()";
  "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)" -> "org.jfree.chart$JFreeChart#setNotify(boolean)";
  "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)" -> "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#clearSubtitles()" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart$JFreeChart#clearSubtitles()" -> "org.jfree.chart.title$Title#removeChangeListener(org.jfree.chart.event.TitleChangeListener)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.renderer.xy$XYStepRenderer#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.data$DefaultKeyedValues#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.plot$PolarPlot#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.entity$ChartEntity#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.axis$AxisSpace#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.util$Size2D#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.data.xy$DefaultXYDataset#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.title$TextTitle#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.block$LabelBlock#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.data.general$DefaultPieDataset#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.entity$TitleEntity#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.plot$CombinedDomainXYPlot#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart$StandardChartTheme#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.plot$MultiplePiePlot#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.axis$ValueAxis#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.renderer$AbstractRenderer#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.axis$DateAxis#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.entity$PlotEntity#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.util$AbstractObjectList#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.plot$CategoryPlot#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.plot$XYPlot#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.util$StandardGradientPaintTransformer#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.axis$NumberAxis#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.plot$Plot#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.plot$PiePlot#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.title$Title#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.entity$AxisEntity#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.entity$JFreeChartEntity#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.data.xy$XYSeriesCollection#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.axis$PeriodAxis#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.renderer.xy$XYBarRenderer#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.block$BlockContainer#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.data.general$AbstractDataset#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.plot$CombinedRangeXYPlot#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.data.xy$IntervalXYDelegate#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.title$LegendGraphic#clone()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()" -> "org.jfree.chart.entity$LegendItemEntity#clone()";
  "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisLocation(int)";
  "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.util$RectangleEdge#opposite(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.data.time$TimeSeriesCollection#TimeSeriesCollection(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeriesCollection#TimeSeriesCollection(org.jfree.data.time.TimeSeries,java.util.TimeZone)";
  "org.jfree.data.time$TimeSeriesCollection#TimeSeriesCollection(org.jfree.data.time.TimeSeries,java.util.TimeZone)" -> "org.jfree.data.xy$AbstractIntervalXYDataset#AbstractIntervalXYDataset()";
  "org.jfree.data.time$TimeSeriesCollection#TimeSeriesCollection(org.jfree.data.time.TimeSeries,java.util.TimeZone)" -> "org.jfree.data.general$Series#addChangeListener(org.jfree.data.general.SeriesChangeListener)";
  "org.jfree.data.time$TimeSeriesCollection#TimeSeriesCollection(org.jfree.data.time.TimeSeries,java.util.TimeZone)" -> "org.jfree.data.time$TimePeriodAnchor#<clinit>()";
  "org.jfree.data.time$TimeSeriesCollection#TimeSeriesCollection(org.jfree.data.time.TimeSeries,java.util.TimeZone)" -> "org.jfree.data.xy$AbstractXYDataset#setSelectionState(org.jfree.data.xy.XYDatasetSelectionState)";
  "org.jfree.chart.renderer.category$BarRenderer#calculateBarWidth(org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,int,org.jfree.chart.renderer.category.CategoryItemRendererState)" -> "org.jfree.chart.renderer.category$BarRenderer#getMaximumBarWidth()";
  "org.jfree.chart.renderer.category$BarRenderer#calculateBarWidth(org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,int,org.jfree.chart.renderer.category.CategoryItemRendererState)" -> "org.jfree.chart.axis$CategoryAxis#getLowerMargin()";
  "org.jfree.chart.renderer.category$BarRenderer#calculateBarWidth(org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,int,org.jfree.chart.renderer.category.CategoryItemRendererState)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer#calculateBarWidth(org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,int,org.jfree.chart.renderer.category.CategoryItemRendererState)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryMargin()";
  "org.jfree.chart.renderer.category$BarRenderer#calculateBarWidth(org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,int,org.jfree.chart.renderer.category.CategoryItemRendererState)" -> "org.jfree.chart.axis$CategoryAxis#getUpperMargin()";
  "org.jfree.chart.renderer.category$BarRenderer#calculateBarWidth(org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,int,org.jfree.chart.renderer.category.CategoryItemRendererState)" -> "org.jfree.chart.plot$CategoryPlot#getDataset(int)";
  "org.jfree.chart.renderer.category$BarRenderer#calculateBarWidth(org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,int,org.jfree.chart.renderer.category.CategoryItemRendererState)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getDomainAxis(org.jfree.chart.plot.CategoryPlot,int)";
  "org.jfree.chart.renderer.category$BarRenderer#calculateBarWidth(org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,int,org.jfree.chart.renderer.category.CategoryItemRendererState)" -> "org.jfree.chart.plot$CategoryPlot#getOrientation()";
  "org.jfree.chart.renderer.category$BarRenderer#calculateBarWidth(org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,int,org.jfree.chart.renderer.category.CategoryItemRendererState)" -> "org.jfree.chart.renderer.category$BarRenderer#getItemMargin()";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.title$PaintScaleLegend#isStripOutlineVisible()";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.axis$SymbolAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$LineBorder#getInsets()";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockBorder#getInsets()";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#trimPadding(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.data$Range#getLength()";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.axis$PeriodAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#trimMargin(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.title$Title#getPosition()";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#getFrame()";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.axis$LogAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.axis$ValueAxis#getLowerBound()";
  "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#calculateLog(double)";
  "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)";
  "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$PlotRenderingInfo#getDataArea()";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$ValueAxis#resizeRange2(double,double)";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$LogAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$ValueAxis#resizeRange(double)";
  "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart.axis$CategoryAxis#configure()";
  "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart.axis$LogAxis#configure()";
  "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart.axis$PeriodAxis#configure()";
  "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#setPlotArea(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#setDataArea(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getInsets()";
  "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getForegroundAlpha()";
  "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.general.PieDataset)" -> "org.jfree.data.general$DefaultPieDataset#getItemCount()";
  "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.general.PieDataset)" -> "org.jfree.data.general$DefaultPieDataset#getValue(int)";
  "org.jfree.chart.plot$PiePlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$PiePlot#clone()" -> "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.chart.plot$PiePlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)";
  "org.jfree.chart.plot$PiePlot#clone()" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.plot$PiePlot#clone()" -> "org.jfree.chart.plot$Plot#clone()";
  "org.jfree.chart.plot$PiePlot#clone()" -> "org.jfree.chart.util$ShapeUtilities#clone(java.awt.Shape)";
  "org.jfree.chart.entity$JFreeChartEntity#clone()" -> "org.jfree.chart.entity$ChartEntity#clone()";
  "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)" -> "org.jfree.chart.plot$Plot#equals(java.lang.Object)";
  "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#equals(java.lang.Object)";
  "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#getToolTipText()";
  "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)" -> "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)";
  "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)" -> "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)";
  "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)" -> "org.jfree.chart.plot$PiePlot3D#equals(java.lang.Object)";
  "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#getURLText()";
  "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)" -> "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)";
  "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)" -> "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)";
  "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)" -> "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)";
  "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#equals(java.lang.Object)";
  "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#getArea()";
  "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)" -> "org.jfree.chart.plot$RingPlot#equals(java.lang.Object)";
  "org.jfree.chart.plot$Plot#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.plot$Plot#equals(java.lang.Object)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)";
  "org.jfree.chart.plot$Plot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$Plot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#addException(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline#addException(org.jfree.chart.axis.SegmentedTimeline$Segment)";
  "org.jfree.chart.axis$SegmentedTimeline#addException(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#SegmentedTimeline$SegmentRange(org.jfree.chart.axis.SegmentedTimeline,long,long)";
  "org.jfree.chart.axis$SegmentedTimeline#addException(org.jfree.chart.axis.SegmentedTimeline$Segment)" -> "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inIncludeSegments()";
  "org.jfree.chart.axis$SegmentedTimeline#addException(org.jfree.chart.axis.SegmentedTimeline$Segment)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#inIncludeSegments()";
  "org.jfree.chart.axis$SegmentedTimeline#addException(org.jfree.chart.axis.SegmentedTimeline$Segment)" -> "org.jfree.chart.axis$SegmentedTimeline#binarySearchExceptionSegments(org.jfree.chart.axis.SegmentedTimeline$Segment)";
  "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)" -> "org.jfree.chart.axis$NumberAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)" -> "org.jfree.chart.axis$DateAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)" -> "org.jfree.chart.axis$PeriodAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)" -> "org.jfree.chart.axis$LogAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)" -> "org.jfree.chart.axis$SymbolAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)" -> "org.jfree.chart.axis$ValueAxis#isAutoRange()";
  "org.jfree.data.xy$XYSeriesCollection#isSelected(int,int)" -> "org.jfree.data.xy$XYSeries#getRawDataItem(int)";
  "org.jfree.data.xy$XYSeriesCollection#isSelected(int,int)" -> "org.jfree.data.xy$XYDataItem#isSelected()";
  "org.jfree.data.xy$XYSeriesCollection#isSelected(int,int)" -> "org.jfree.data.xy$XYSeriesCollection#getSeries(int)";
  "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleInsets#getBottom()";
  "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueTick#getValue()";
  "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getTickLabelInsets()";
  "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleInsets#getLeft()";
  "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleInsets#getRight()";
  "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleInsets#getTop()";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable)" -> "org.jfree.chart.plot$PiePlot#getAutoPopulateSectionOutlinePaint()";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable)" -> "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable,boolean)";
  "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readAttributedString(java.io.ObjectInputStream)";
  "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)";
  "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)";
  "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#isSerializable(java.lang.Class)";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickType#<clinit>()";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#isHiddenValue(long)";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isAutoTickUnitSelection()";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#correctTickDateForPosition(java.util.Date,org.jfree.chart.axis.DateTickUnit,org.jfree.chart.axis.DateTickMarkPosition)";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getMinorTickCount()";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateTickUnit#addToDate(java.util.Date,java.util.TimeZone)";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateTickUnit#rollDate(java.util.Date,java.util.TimeZone)";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#calculateLowestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#getMaximumDate()";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#getDateFormatOverride()";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnit#getMinorTickCount()";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateTickUnit#dateToString(java.util.Date)";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#getTickUnit()";
  "org.jfree.data.time$TimeSeriesCollection#addSeries(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.general$AbstractDataset#fireDatasetChanged()";
  "org.jfree.data.time$TimeSeriesCollection#addSeries(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.general$Series#addChangeListener(org.jfree.data.general.SeriesChangeListener)";
  "org.jfree.data.general$AbstractDataset#fireDatasetChanged()" -> "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)";
  "org.jfree.data.general$AbstractDataset#fireDatasetChanged()" -> "org.jfree.data.general$AbstractDataset#notifyListeners(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone)" -> "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)";
  "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.category$BarRenderer#isDrawBarOutline()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemPaint(int,int,boolean)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemOutlineStroke(int,int,boolean)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.category$BarRenderer#calculateBarW0(org.jfree.chart.plot.CategoryPlot,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.renderer.category.CategoryItemRendererState,int,int)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getItemLabelGenerator(int,int,boolean)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$CategoryPlot#getOrientation()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$RendererState#getEntityCollection()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#isItemLabelVisible(int,int,boolean)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemOutlinePaint(int,int,boolean)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.category$BarRenderer#calculateBarL0L1(double)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.category$BarRenderer3D#getXOffset()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.category$BarRenderer3D#getYOffset()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)" -> "org.jfree.chart.axis$Axis#equals(java.lang.Object)";
  "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)" -> "org.jfree.chart.axis$CategoryAxis#equalPaintMaps(java.util.Map,java.util.Map)";
  "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getRangeAxisLocation()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxis(int,int)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$Plot#Plot()";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.util$ObjectList#ObjectList()";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxis(int,int)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$CategoryPlot#configureDomainAxes()";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.axis$AxisLocation#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.renderer$AbstractRenderer#addChangeListener(org.jfree.chart.event.RendererChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$DatasetRenderingOrder#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxis(int,int)" -> "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxes(int,java.util.List)";
  "org.jfree.data.general$AbstractDataset#notifyListeners(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.data.general$AbstractDataset#notifyListeners(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.data.xy$IntervalXYDelegate#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.data.general$AbstractDataset#notifyListeners(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.data.general$AbstractDataset#notifyListeners(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.data.general$AbstractDataset#notifyListeners(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisSpace#shrink(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#getOwner()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#setDataArea(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$PeriodAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$SymbolAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotState#getSharedAxisStates()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotState#PlotState()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getInsets()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$LogAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#setFixedRangeAxisSpaceForSubplots(org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#setPlotArea(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#PlotRenderingInfo(org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#addSubplotInfo(org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#coordinate(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$PeriodAxis#getRange()" -> "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#getRange()" -> "org.jfree.data.time$Month#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#getRange()" -> "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#getRange()" -> "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#getRange()" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$PeriodAxis#getRange()" -> "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#getRange()" -> "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawBackground(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.renderer.category$BarRenderer3D#getXOffset()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawBackground(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#getBackgroundImage()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawBackground(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#getBackgroundPaint()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawBackground(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.renderer.category$BarRenderer3D#getYOffset()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawBackground(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawBackground(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.renderer.category$BarRenderer3D#getWallPaint()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawBackground(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#getBackgroundAlpha()";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.axis$ValueAxis#getUpperBound()";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.data.xy$XYSeriesCollection#isSelected(int,int)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.renderer.xy$XYItemRendererState#getProcessVisibleItemsOnly()";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.renderer.xy$XYItemRendererState#startSeriesPass(org.jfree.data.xy.XYDataset,int,int,int,int,int)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.data.xy$XYSeriesCollection#getItemCount(int)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.plot$XYPlot#getDataset(int)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.data.time$TimeSeriesCollection#getItemCount(int)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.renderer$RendererUtilities#findLiveItems(org.jfree.data.xy.XYDataset,int,double,double)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.data.xy$DefaultXYDataset#getItemCount(int)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.plot$XYPlot#getSeriesRenderingOrder()";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getPassCount()";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.plot$XYPlot#getRenderer()";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.data.time$TimeSeriesCollection#isSelected(int,int)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisForDataset(int)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisForDataset(int)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.renderer.xy$XYItemRendererState#endSeriesPass(org.jfree.data.xy.XYDataset,int,int,int,int,int)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer$State#startSeriesPass(org.jfree.data.xy.XYDataset,int,int,int,int,int)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.xy.XYDataset)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.renderer.xy$XYItemRendererState#getSelectionState()";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.plot$XYPlot#getRenderer(int)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.plot$SeriesRenderingOrder#<clinit>()";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.axis$ValueAxis#getLowerBound()";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getPassCount()";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$ValueAxis#getUpperBound()" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.data.time$Day#Day()" -> "org.jfree.data.time$Day#Day(java.util.Date)";
  "org.jfree.data.time$Day#Day(java.util.Date)" -> "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)";
  "org.jfree.chart.entity$PieSectionEntity#toString()" -> "org.jfree.data.time$Month#toString()";
  "org.jfree.chart.entity$PieSectionEntity#toString()" -> "org.jfree.data.time$SerialDate#toString()";
  "org.jfree.chart.entity$PieSectionEntity#toString()" -> "org.jfree.data.xy$XYDataItem#toString()";
  "org.jfree.chart.entity$PieSectionEntity#toString()" -> "org.jfree.data.time$Year#toString()";
  "org.jfree.chart.entity$PieSectionEntity#toString()" -> "org.jfree.chart.axis$NumberTickUnit#toString()";
  "org.jfree.chart.entity$PieSectionEntity#toString()" -> "org.jfree.data.time$Day#toString()";
  "org.jfree.chart.entity$PieSectionEntity#toString()" -> "org.jfree.chart.axis$DateTickUnit#toString()";
  "org.jfree.chart.entity$PieSectionEntity#toString()" -> "org.jfree.data.time$RegularTimePeriod#toString()";
  "org.jfree.data.time$Month#toString()" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$Month#toString()" -> "org.jfree.data.time$SerialDate#monthCodeToString(int)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.renderer.category$BarRenderer#getPositiveItemLabelPositionFallback()";
  "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.plot$CategoryPlot#getOrientation()";
  "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.labels$ItemLabelPosition#getTextAnchor()";
  "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemLabelPaint(int,int,boolean)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.renderer.category$BarRenderer#getNegativeItemLabelPositionFallback()";
  "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.renderer.category$BarRenderer#isInternalAnchor(org.jfree.chart.labels.ItemLabelAnchor)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getPositiveItemLabelPosition(int,int,boolean)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.labels$ItemLabelPosition#getItemLabelAnchor()";
  "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.labels$ItemLabelPosition#getAngle()";
  "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getNegativeItemLabelPosition(int,int,boolean)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.renderer.category$BarRenderer#calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemLabelFont(int,int,boolean)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.labels$ItemLabelPosition#getRotationAnchor()";
  "org.jfree.chart.entity$AxisLabelEntity#AxisLabelEntity(org.jfree.chart.axis.Axis,java.awt.Shape,java.lang.String,java.lang.String)" -> "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String,java.lang.String)";
  "org.jfree.data.time$SerialDate#monthCodeToString(int)" -> "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)";
  "org.jfree.data.time$SerialDate#monthCodeToString(int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)" -> "org.jfree.data.time$SerialDate#isValidMonthCode(int)";
  "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)" -> "org.jfree.chart.block$CenterArrangement#equals(java.lang.Object)";
  "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)" -> "org.jfree.chart.block$BorderArrangement#equals(java.lang.Object)";
  "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)" -> "org.jfree.chart.block$FlowArrangement#equals(java.lang.Object)";
  "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)" -> "org.jfree.chart.title$Title#equals(java.lang.Object)";
  "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)" -> "org.jfree.chart.block$ColumnArrangement#equals(java.lang.Object)";
  "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$SegmentedTimeline#getStartTime()";
  "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnits#getLargerTickUnit(org.jfree.chart.axis.TickUnit)";
  "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnits#getCeilingTickUnit(org.jfree.chart.axis.TickUnit)";
  "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnit#getSize()";
  "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)";
  "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#getTickUnit()";
  "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnits#getCeilingTickUnit(double)";
  "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getStandardTickUnits()";
  "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)";
  "org.jfree.data.general$DefaultPieDataset#DefaultPieDataset()" -> "org.jfree.data.general$AbstractDataset#AbstractDataset()";
  "org.jfree.data.general$DefaultPieDataset#DefaultPieDataset()" -> "org.jfree.data$DefaultKeyedValues#DefaultKeyedValues()";
  "org.jfree.data.general$AbstractDataset#AbstractDataset()" -> "org.jfree.data.general$DatasetGroup#DatasetGroup()";
  "org.jfree.data.xy$AbstractIntervalXYDataset#getEndYValue(int,int)" -> "org.jfree.data.xy$XYSeriesCollection#getEndY(int,int)";
  "org.jfree.data.xy$AbstractIntervalXYDataset#getEndYValue(int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getEndY(int,int)";
  "org.jfree.data.xy$XYSeriesCollection#getEndY(int,int)" -> "org.jfree.data.xy$XYSeriesCollection#getY(int,int)";
  "org.jfree.chart.entity$TitleEntity#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.entity$TitleEntity#equals(java.lang.Object)" -> "org.jfree.chart.title$PaintScaleLegend#equals(java.lang.Object)";
  "org.jfree.chart.entity$TitleEntity#equals(java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#getArea()";
  "org.jfree.chart.entity$TitleEntity#equals(java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#getToolTipText()";
  "org.jfree.chart.entity$TitleEntity#equals(java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#getURLText()";
  "org.jfree.chart.entity$TitleEntity#equals(java.lang.Object)" -> "org.jfree.chart.title$TextTitle#equals(java.lang.Object)";
  "org.jfree.chart.entity$TitleEntity#equals(java.lang.Object)" -> "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)";
  "org.jfree.chart.entity$TitleEntity#equals(java.lang.Object)" -> "org.jfree.chart.title$Title#equals(java.lang.Object)";
  "org.jfree.chart.entity$TitleEntity#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#calculateTotalHeight(double)";
  "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#calculateTotalWidth(double)";
  "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#Size2D()";
  "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BlockContainer#isEmpty()";
  "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$LegendTitle#fetchLegendItems()";
  "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$CenterArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.plot$PiePlot#setSectionPaint(java.lang.Comparable,java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$PiePlot#setSectionPaint(java.lang.Comparable,java.awt.Paint)" -> "org.jfree.chart.util$PaintMap#put(java.lang.Comparable,java.awt.Paint)";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#XYBarRenderer()";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.urls$StandardXYURLGenerator#StandardXYURLGenerator()";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.XYURLGenerator)";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#getTimeSeriesInstance()";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator()";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart.plot$PiePlot3D#PiePlot3D(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.plot$PiePlot3D#PiePlot3D(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.plot$PiePlot#setCircular(boolean,boolean)";
  "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double)";
  "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double)";
  "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$LogAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#getDataArea()";
  "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$DateRange#getUpperMillis()";
  "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$SegmentedTimeline#toTimelineValue(long)";
  "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#toTimelineValue(long)";
  "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#toMillisecond(long)";
  "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$DateRange#getLowerMillis()";
  "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$SegmentedTimeline#toMillisecond(long)";
  "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.util$ShapeList#equals(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.util$ShapeList#equals(java.lang.Object)" -> "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)";
  "org.jfree.chart.util$ShapeList#equals(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#get(int)";
  "org.jfree.chart.util$ShapeList#equals(java.lang.Object)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#getRendererForDataset(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#getRendererForDataset(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.text$TextBlock#calculateBounds(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.text$TextBlock#calculateBounds(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.text$TextBlock#calculateOffsets(org.jfree.chart.text.TextBlockAnchor,double,double)";
  "org.jfree.chart.text$TextBlock#calculateBounds(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)";
  "org.jfree.chart.text$TextBlock#calculateBounds(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.text$TextBlock#calculateBounds(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.util$ShapeUtilities#rotateShape(java.awt.Shape,double,float,float)";
  "org.jfree.chart.text$TextBlock#calculateBounds(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$LogAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$ValueAxis#resizeRange2(double,double)";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$PlotRenderingInfo#getDataArea()";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$ValueAxis#resizeRange(double)";
  "org.jfree.chart.plot$PlotOrientation#<clinit>()" -> "org.jfree.chart.plot$PlotOrientation#PlotOrientation(java.lang.String)";
  "org.jfree.chart.renderer.category$BarRenderer3D#<clinit>()" -> "org.jfree.chart.renderer.category$BarRenderer#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer3D#<clinit>()" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer#<clinit>()" -> "org.jfree.chart.renderer.category$GradientBarPainter#GradientBarPainter()";
  "org.jfree.chart.renderer.category$BarRenderer#<clinit>()" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getUseOutlinePaint()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.renderer$AbstractRenderer#isItemLabelVisible(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.util$ShapeUtilities#isPointInRect(double,double,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getItemShapeVisible(int,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemOutlinePaint(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.data.xy$DefaultXYDataset#getYValue(int,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemPaint(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.data.xy$DefaultXYDataset#getXValue(int,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemShape(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemOutlineStroke(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.util$ShapeUtilities#createTranslatedShape(java.awt.Shape,double,double)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemFillPaint(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.xy.XYDataset,int,int,boolean,double,double,boolean)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getItemShapeFilled(int,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#updateCrosshairValues(org.jfree.chart.plot.CrosshairState,double,double,int,int,double,double,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getDrawingSupplier()" -> "org.jfree.chart.plot$Plot#getDrawingSupplier()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getDrawingSupplier()" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getPlot()";
  "org.jfree.chart.plot$Plot#getDrawingSupplier()" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean,boolean)";
  "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.axis$ValueTick#getTickType()";
  "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.axis$TickType#<clinit>()";
  "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.axis$ValueTick#getValue()";
  "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#isRangeGridlinesVisible()";
  "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getRangeMinorGridlineStroke()";
  "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getRangeGridlineStroke()";
  "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)";
  "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getRangeMinorGridlinePaint()";
  "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getRangeGridlinePaint()";
  "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getRenderer()";
  "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#isRangeMinorGridlinesVisible()";
  "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#isRangeZeroBaselineVisible()";
  "org.jfree.chart.plot$PiePlot#setLabelLinksVisible(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$PolarPlot#setAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$PeriodAxis#configure()";
  "org.jfree.chart.plot$PolarPlot#setAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$PolarPlot#setAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$PolarPlot#setAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$PolarPlot#setAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#setAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$PolarPlot#setAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$LogAxis#configure()";
  "org.jfree.chart.plot$PolarPlot#setAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.axis$PeriodAxis#configure()" -> "org.jfree.chart.axis$PeriodAxis#autoAdjustRange()";
  "org.jfree.chart.axis$PeriodAxis#configure()" -> "org.jfree.chart.axis$ValueAxis#isAutoRange()";
  "org.jfree.chart.util$BooleanList#setBoolean(int,java.lang.Boolean)" -> "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxes(int,java.util.List)" -> "org.jfree.chart.plot$CategoryPlot#checkAxisIndices(java.util.List)";
  "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxes(int,java.util.List)" -> "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)";
  "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxes(int,java.util.List)" -> "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxes(int,java.util.List)" -> "org.jfree.chart.plot$CategoryPlot#getDataset(int)";
  "org.jfree.data.general$DefaultPieDataset#remove(java.lang.Comparable)" -> "org.jfree.data.general$AbstractDataset#fireDatasetChanged()";
  "org.jfree.data.general$DefaultPieDataset#remove(java.lang.Comparable)" -> "org.jfree.data$DefaultKeyedValues#removeValue(java.lang.Comparable)";
  "org.jfree.chart.axis$NumberAxis#clone()" -> "org.jfree.chart.util$LogFormat#clone()";
  "org.jfree.chart.axis$NumberAxis#clone()" -> "org.jfree.chart.axis$ValueAxis#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator,boolean)" -> "org.jfree.chart.event$RendererChangeEvent#RendererChangeEvent(java.lang.Object)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#notifyListeners(org.jfree.chart.event.RendererChangeEvent)";
  "org.jfree.chart.title$LegendTitle#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.block$BorderArrangement#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.block$BorderArrangement#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$ValueMarker#setValue(double)" -> "org.jfree.chart.event$MarkerChangeEvent#MarkerChangeEvent(org.jfree.chart.plot.Marker)";
  "org.jfree.chart.plot$ValueMarker#setValue(double)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.event$MarkerChangeEvent#MarkerChangeEvent(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.block$CenterArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$CenterArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthConstraintType()";
  "org.jfree.chart.block$CenterArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightConstraintType()";
  "org.jfree.chart.block$CenterArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$CenterArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$CenterArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$CenterArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)";
  "org.jfree.chart.block$CenterArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$CenterArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$CenterArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$CenterArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$CenterArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$CenterArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$LengthConstraintType#<clinit>()" -> "org.jfree.chart.block$LengthConstraintType#LengthConstraintType(java.lang.String)";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.event$ChartChangeEventType#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.event$ChartChangeEvent#setType(org.jfree.chart.event.ChartChangeEventType)";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.axis$LogAxis#configure()";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.axis$PeriodAxis#configure()";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.data.time$DateRange#getUpperDate()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.data.time$DateRange#getLowerDate()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateAxis#getDateFormatOverride()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateTickUnit#dateToString(java.util.Date)";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.util$RectangleInsets#getLeft()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$Axis#getTickLabelInsets()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.util$RectangleInsets#getRight()";
  "org.jfree.chart.plot$CategoryPlot#indexOf(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#indexOf(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.util$ObjectList#get(int)" -> "org.jfree.chart.util$AbstractObjectList#get(int)";
  "org.jfree.chart.plot$Plot#Plot()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier()";
  "org.jfree.chart.plot$Plot#Plot()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$Plot#Plot()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.plot$CombinedRangeXYPlot#getLegendItems()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.plot$Plot#getLegendItems()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.title$Title#getPosition()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItems()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart$LegendItemCollection#get(int)";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.plot$PolarPlot#getLegendItems()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.block$BlockContainer#clear()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.plot$PiePlot#getLegendItems()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block)";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.block$BlockContainer#setArrangement(org.jfree.chart.block.Arrangement)";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.plot$CategoryPlot#getLegendItems()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart$LegendItemCollection#getItemCount()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItems()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.plot$CombinedDomainXYPlot#getLegendItems()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.plot$XYPlot#getLegendItems()";
  "org.jfree.chart.util$StrokeList#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)";
  "org.jfree.chart.util$StrokeList#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$StrokeList#setStroke(int,java.awt.Stroke)";
  "org.jfree.chart.axis$Axis#setLabelInsets(org.jfree.chart.util.RectangleInsets,boolean)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.chart.axis$Axis#setLabelInsets(org.jfree.chart.util.RectangleInsets,boolean)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart.axis$Axis#fireChangeEvent()" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$Axis#fireChangeEvent()" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$XYPlot#mapDatasetToRangeAxes(int,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getDataset(int)";
  "org.jfree.chart.plot$XYPlot#mapDatasetToRangeAxes(int,java.util.List)" -> "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)";
  "org.jfree.chart.plot$XYPlot#mapDatasetToRangeAxes(int,java.util.List)" -> "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$XYPlot#mapDatasetToRangeAxes(int,java.util.List)" -> "org.jfree.chart.plot$XYPlot#checkAxisIndices(java.util.List)";
  "org.jfree.chart.plot$XYPlot#getDataset(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#getDataset(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.renderer.xy$XYItemRendererState#getLastItemIndex()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer$State#setLastPointGood(boolean)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.data.xy$DefaultXYDataset#getYValue(int,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape1(java.awt.Graphics2D,int,int,int,boolean,java.awt.Shape)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer$State#isLastPointGood()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.data.xy$DefaultXYDataset#getXValue(int,int)";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getTickMarkStroke()";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$AxisState#getCursor()";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$PeriodAxis#getFirst()";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Month#peg(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Day#next()";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$AxisState#setTicks(java.util.List)";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$PeriodAxis#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone,java.util.Locale)";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Year#next()";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberTick#NumberTick(java.lang.Number,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Year#peg(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$AxisState#cursorDown(double)";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Month#next()";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Month#getLastMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$PeriodAxis#getTimeZone()";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$PeriodAxis#getLast()";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getTickMarkOutsideLength()";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getTickMarkInsideLength()";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Day#peg(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$AxisState#cursorUp(double)";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getTickMarkPaint()";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Month#getFirstMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$ValueAxis#getLowerBound()";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.data$Range#constrain(double)";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#getBackgroundAlpha()";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$ValueAxis#getUpperBound()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.data.general$DefaultPieDataset#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.axis$ValueAxis#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.plot$PolarPlot#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.plot$CombinedRangeXYPlot#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.util$Size2D#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.title$LegendGraphic#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.entity$LegendItemEntity#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.entity$AxisEntity#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.plot$Plot#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.axis$NumberAxis#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.util$StandardGradientPaintTransformer#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.entity$PlotEntity#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.data.xy$XYSeriesCollection#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.axis$PeriodAxis#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.block$BlockContainer#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.data.xy$DefaultXYDataset#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.renderer.xy$XYBarRenderer#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.axis$DateAxis#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.entity$ChartEntity#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.data.xy$IntervalXYDelegate#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.title$Title#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.plot$PiePlot#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.data$DefaultKeyedValues#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.entity$JFreeChartEntity#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.plot$CombinedDomainXYPlot#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.util$ShapeUtilities#clone(java.awt.Shape)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.plot$CategoryPlot#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.title$TextTitle#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.plot$MultiplePiePlot#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.renderer.xy$XYStepRenderer#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.axis$AxisSpace#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.entity$TitleEntity#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$StandardChartTheme#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.data.general$AbstractDataset#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.plot$XYPlot#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart.block$LabelBlock#clone()";
  "org.jfree.data.general$DefaultPieDataset#clone()" -> "org.jfree.data$DefaultKeyedValues#clone()";
  "org.jfree.data.general$DefaultPieDataset#clone()" -> "org.jfree.data.general$AbstractDataset#clone()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setURLGenerator(org.jfree.chart.urls.PieURLGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator()" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator(java.lang.String)";
  "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()" -> "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()" -> "org.jfree.chart.plot$XYPlot#getDomainAxisLocation()";
  "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)" -> "org.jfree.chart.axis$NumberTickUnit#equals(java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)";
  "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)" -> "org.jfree.chart.axis$TickUnit#equals(java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)" -> "org.jfree.chart.plot$Plot#equals(java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#equals(java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)" -> "org.jfree.data.time$Month#equals(java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)" -> "org.jfree.data.xy$XYDataItem#equals(java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)" -> "org.jfree.chart.axis$DateTickUnit#equals(java.lang.Object)";
  "org.jfree.chart.axis$NumberTickUnit#equals(java.lang.Object)" -> "org.jfree.chart.axis$TickUnit#equals(java.lang.Object)";
  "org.jfree.chart.axis$NumberTickUnit#equals(java.lang.Object)" -> "org.jfree.chart.util$LogFormat#equals(java.lang.Object)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$ValueMarker#getValue()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getOutlinePaint()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelFont()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$IntervalMarker#getEndValue()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelTextAnchor()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getStroke()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelOffsetType()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#calculateDomainMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getAlpha()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabel()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$LengthAdjustmentType#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelOffset()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getOutlineStroke()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$IntervalMarker#getGradientPaintTransformer()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getPaint()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$StandardGradientPaintTransformer#transform(java.awt.GradientPaint,java.awt.Shape)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.data$Range#intersects(double,double)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelAnchor()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelPaint()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$IntervalMarker#getStartValue()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#calculateVisibleTickCount()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#calculateLowestVisibleTickValue()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#getNumberFormatOverride()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#getTickUnit()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnit#getSize()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$SymbolAxis#valueToString(double)";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberTick#NumberTick(java.lang.Number,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)";
  "org.jfree.chart.text$TextAnchor#<clinit>()" -> "org.jfree.chart.text$TextAnchor#TextAnchor(java.lang.String)";
  "org.jfree.data.general$DatasetUtilities#sampleFunction2D(org.jfree.data.function.Function2D,double,double,int,java.lang.Comparable)" -> "org.jfree.data.general$DatasetUtilities#sampleFunction2DToSeries(org.jfree.data.function.Function2D,double,double,int,java.lang.Comparable)";
  "org.jfree.data.general$DatasetUtilities#sampleFunction2D(org.jfree.data.function.Function2D,double,double,int,java.lang.Comparable)" -> "org.jfree.data.xy$XYSeriesCollection#XYSeriesCollection(org.jfree.data.xy.XYSeries)";
  "org.jfree.data.general$DatasetUtilities#sampleFunction2DToSeries(org.jfree.data.function.Function2D,double,double,int,java.lang.Comparable)" -> "org.jfree.data.xy$XYSeries#XYSeries(java.lang.Comparable)";
  "org.jfree.data.general$DatasetUtilities#sampleFunction2DToSeries(org.jfree.data.function.Function2D,double,double,int,java.lang.Comparable)" -> "org.jfree.data.xy$XYSeries#add(double,double)";
  "org.jfree.chart.plot$XYPlot#getDomainAxis(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#getDomainAxis(int)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.plot$XYPlot#getDomainAxis(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#setRenderers(org.jfree.chart.renderer.xy.XYItemRenderer[])" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#setRenderers(org.jfree.chart.renderer.xy.XYItemRenderer[])" -> "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)";
  "org.jfree.chart.axis$LogAxis#createLogTickUnits(java.util.Locale)" -> "org.jfree.chart.axis$TickUnits#TickUnits()";
  "org.jfree.chart.axis$LogAxis#createLogTickUnits(java.util.Locale)" -> "org.jfree.chart.util$LogFormat#LogFormat()";
  "org.jfree.chart.axis$LogAxis#createLogTickUnits(java.util.Locale)" -> "org.jfree.chart.axis$NumberTickUnit#NumberTickUnit(double,java.text.NumberFormat)";
  "org.jfree.chart.axis$LogAxis#createLogTickUnits(java.util.Locale)" -> "org.jfree.chart.axis$TickUnits#add(org.jfree.chart.axis.TickUnit)";
  "org.jfree.chart.axis$LogAxis#createLogTickUnits(java.util.Locale)" -> "org.jfree.chart.axis$NumberTickUnit#NumberTickUnit(double,java.text.NumberFormat,int)";
  "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)" -> "org.jfree.chart.plot$Marker#addChangeListener(org.jfree.chart.event.MarkerChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxis(int)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxis(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxis(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#getLegendItems()" -> "org.jfree.chart.plot$XYPlot#getFixedLegendItems()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#getLegendItems()" -> "org.jfree.chart.plot$XYPlot#getLegendItems()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#addAll(org.jfree.chart.LegendItemCollection)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#LegendItemCollection()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#getLegendItems()" -> "org.jfree.chart.plot$CombinedRangeXYPlot#getLegendItems()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.data.general$DefaultPieDataset#setValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.data.general$DefaultPieDataset#getKeys()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.data.general$DefaultPieDataset#getValue(java.lang.Comparable)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setSectionPaint(java.lang.Comparable,java.awt.Paint)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setURLGenerator(org.jfree.chart.urls.PieURLGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.title$TextTitle#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setDataset(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.data.general$DefaultPieDataset#DefaultPieDataset()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#removeAnnotations()" -> "org.jfree.chart.renderer$AbstractRenderer#notifyListeners(org.jfree.chart.event.RendererChangeEvent)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#removeAnnotations()" -> "org.jfree.chart.event$RendererChangeEvent#RendererChangeEvent(java.lang.Object)";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable)" -> "org.jfree.chart.plot$PiePlot#getAutoPopulateSectionOutlineStroke()";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable)" -> "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable,boolean)";
  "org.jfree.chart.plot$XYPlot#getRendererForDataset(org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#getRendererForDataset(org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#getRendererForDataset(org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.plot$XYPlot#getRenderer()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesLinesVisible(int,java.lang.Boolean)" -> "org.jfree.chart.util$BooleanList#setBoolean(int,java.lang.Boolean)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesLinesVisible(int,java.lang.Boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getExplodePercent(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.util$Rotation#<clinit>()";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.util$ShapeUtilities#createTranslatedShape(java.awt.Shape,double,double)";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.renderer$RendererState#getInfo()";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getMaximumExplodePercent()";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getArcBounds(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double,double)";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.renderer$RendererState#getEntityCollection()";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#generateToolTip(org.jfree.data.general.PieDataset,java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getMinimumArcAngleToDraw()";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getSectionKey(int)";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.entity$PieSectionEntity#PieSectionEntity(java.awt.Shape,org.jfree.data.general.PieDataset,int,int,java.lang.Comparable,java.lang.String,java.lang.String)";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.data.general$DefaultPieDataset#getValue(int)";
  "org.jfree.chart.util$Rotation#<clinit>()" -> "org.jfree.chart.util$Rotation#Rotation(java.lang.String,double)";
  "org.jfree.data.time$TimeSeries#getNextTimePeriod()" -> "org.jfree.data.time$Day#next()";
  "org.jfree.data.time$TimeSeries#getNextTimePeriod()" -> "org.jfree.data.time$Month#next()";
  "org.jfree.data.time$TimeSeries#getNextTimePeriod()" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#getNextTimePeriod()" -> "org.jfree.data.time$Year#next()";
  "org.jfree.data.time$TimeSeries#getNextTimePeriod()" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$Day#next()" -> "org.jfree.data.time$Day#<clinit>()";
  "org.jfree.data.time$Day#next()" -> "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$Day#next()" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$Day#next()" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$Day#next()" -> "org.jfree.data.time$SerialDate#createInstance(int)";
  "org.jfree.chart.axis$TickType#<clinit>()" -> "org.jfree.chart.axis$TickType#TickType(java.lang.String)";
  "org.jfree.chart.block$BlockContainer#equals(java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)";
  "org.jfree.chart.block$BlockContainer#equals(java.lang.Object)" -> "org.jfree.chart.block$CenterArrangement#equals(java.lang.Object)";
  "org.jfree.chart.block$BlockContainer#equals(java.lang.Object)" -> "org.jfree.chart.block$FlowArrangement#equals(java.lang.Object)";
  "org.jfree.chart.block$BlockContainer#equals(java.lang.Object)" -> "org.jfree.chart.block$BorderArrangement#equals(java.lang.Object)";
  "org.jfree.chart.block$BlockContainer#equals(java.lang.Object)" -> "org.jfree.chart.block$ColumnArrangement#equals(java.lang.Object)";
  "org.jfree.chart.renderer.category$BarRenderer#getDefaultShadowsVisible()" -> "org.jfree.chart.renderer.category$BarRenderer#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer#getDefaultShadowsVisible()" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)" -> "org.jfree.chart.axis$PeriodAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$DateTickUnitType#equals(java.lang.Object)" -> "org.jfree.chart.axis$DateTickUnitType#toString()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Day#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#createCopy(int,int)";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Month#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Year#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.general$Series#clone()";
  "org.jfree.data.time$Day#compareTo(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$Day#compareTo(java.lang.Object)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#getPlot()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setOutlineStroke(java.awt.Stroke)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$MultiplePiePlot#setDataExtractOrder(org.jfree.chart.util.TableOrder)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setURLGenerator(org.jfree.chart.urls.PieURLGenerator)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$MultiplePiePlot#getPieChart()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setBackgroundPaint(java.awt.Paint)";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.data.time$SpreadsheetDate#hashCode()";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.data.time$Month#hashCode()";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.chart.axis$NumberTickUnit#hashCode()";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.chart.axis$TickUnit#hashCode()";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.chart.axis$DateTickUnit#hashCode()";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.data.time$Day#hashCode()";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.data.time$Year#hashCode()";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.data.xy$XYDataItem#hashCode()";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.data.time$TimeSeriesDataItem#hashCode()";
  "org.jfree.data.time$SpreadsheetDate#hashCode()" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.chart$StandardChartTheme#createJFreeTheme()" -> "org.jfree.chart$StandardChartTheme#StandardChartTheme(java.lang.String)";
  "org.jfree.chart$StandardChartTheme#StandardChartTheme(java.lang.String)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier()";
  "org.jfree.chart$StandardChartTheme#StandardChartTheme(java.lang.String)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart$StandardChartTheme#StandardChartTheme(java.lang.String)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()";
  "org.jfree.chart$StandardChartTheme#StandardChartTheme(java.lang.String)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$StandardChartTheme#StandardChartTheme(java.lang.String)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$StandardChartTheme#StandardChartTheme(java.lang.String)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart$StandardChartTheme#StandardChartTheme(java.lang.String)" -> "org.jfree.chart.renderer.xy$GradientXYBarPainter#GradientXYBarPainter()";
  "org.jfree.chart$StandardChartTheme#StandardChartTheme(java.lang.String)" -> "org.jfree.chart.plot$PieLabelLinkStyle#<clinit>()";
  "org.jfree.chart$StandardChartTheme#StandardChartTheme(java.lang.String)" -> "org.jfree.chart.renderer.category$BarRenderer#<clinit>()";
  "org.jfree.chart$StandardChartTheme#StandardChartTheme(java.lang.String)" -> "org.jfree.chart.axis$SymbolAxis#<clinit>()";
  "org.jfree.chart$StandardChartTheme#StandardChartTheme(java.lang.String)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$StandardChartTheme#StandardChartTheme(java.lang.String)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$StandardChartTheme#StandardChartTheme(java.lang.String)" -> "org.jfree.chart.renderer.category$GradientBarPainter#GradientBarPainter()";
  "org.jfree.chart$StandardChartTheme#StandardChartTheme(java.lang.String)" -> "org.jfree.chart.renderer.category$BarRenderer3D#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$PeriodAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#ensureAtLeast(double,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#AxisSpace()";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#add(double,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$LogAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#getFixedDimension()";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#isVisible()";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$SymbolAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#isTickLabelsVisible()";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisState#AxisState()";
  "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation(int)" -> "org.jfree.chart.axis$AxisLocation#getOpposite(org.jfree.chart.axis.AxisLocation)";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation(int)" -> "org.jfree.chart.axis$AxisLocation#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.xy.XYDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.labels$ItemLabelPosition#getItemLabelAnchor()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.xy.XYDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.labels$ItemLabelPosition#getRotationAnchor()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.xy.XYDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,double,double,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.xy.XYDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.labels$ItemLabelPosition#getAngle()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.xy.XYDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemLabelPaint(int,int,boolean)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.xy.XYDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getNegativeItemLabelPosition(int,int,boolean)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.xy.XYDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.xy.XYDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getItemLabelGenerator(int,int,boolean)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.xy.XYDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getPositiveItemLabelPosition(int,int,boolean)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.xy.XYDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.labels$ItemLabelPosition#getTextAnchor()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.xy.XYDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemLabelFont(int,int,boolean)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.xy.XYDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#setFixedDomainAxisSpaceForSubplots(org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$XYPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)";
  "org.jfree.chart.plot$XYPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.axis$PeriodAxis#autoAdjustRange()" -> "org.jfree.chart.axis$PeriodAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$PeriodAxis#autoAdjustRange()" -> "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$PeriodAxis#autoAdjustRange()" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$PeriodAxis#autoAdjustRange()" -> "org.jfree.chart.plot$PolarPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$PeriodAxis#autoAdjustRange()" -> "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$PeriodAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getDefaultAutoRange()";
  "org.jfree.chart.axis$PeriodAxis#autoAdjustRange()" -> "org.jfree.chart.axis$PeriodAxis#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone,java.util.Locale)";
  "org.jfree.chart.axis$PeriodAxis#autoAdjustRange()" -> "org.jfree.chart.axis$Axis#getPlot()";
  "org.jfree.chart.axis$PeriodAxis#autoAdjustRange()" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$PeriodAxis#autoAdjustRange()" -> "org.jfree.chart.plot$CombinedDomainXYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$PeriodAxis#autoAdjustRange()" -> "org.jfree.chart.plot$CombinedRangeXYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$PeriodAxis#setRange(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$PeriodAxis#setRange(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#setRange(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.data.time$Month#getFirstMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#setRange(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$PeriodAxis#setRange(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.chart.axis$PeriodAxis#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone,java.util.Locale)";
  "org.jfree.chart.axis$PeriodAxis#setRange(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#setRange(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#setRange(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$PeriodAxis#setRange(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$PeriodAxis#setRange(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.data.time$Month#getLastMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#setRange(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.chart.title$LegendGraphic#clone()" -> "org.jfree.chart.block$AbstractBlock#clone()";
  "org.jfree.chart.title$LegendGraphic#clone()" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.title$LegendGraphic#clone()" -> "org.jfree.chart.util$ShapeUtilities#clone(java.awt.Shape)";
  "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)" -> "org.jfree.chart.axis$Axis#Axis(java.lang.String)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxes(int,java.util.List)" -> "org.jfree.chart.plot$CategoryPlot#checkAxisIndices(java.util.List)";
  "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxes(int,java.util.List)" -> "org.jfree.chart.plot$CategoryPlot#getDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxes(int,java.util.List)" -> "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxes(int,java.util.List)" -> "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.axis$PeriodAxis#configure()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.plot$XYPlot#setWeight(int)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.plot$Plot#setParent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.plot$XYPlot#setDomainAxis(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets,boolean)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.plot$Plot#addChangeListener(org.jfree.chart.event.PlotChangeListener)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.axis$LogAxis#configure()";
  "org.jfree.chart.axis$NumberAxis#configure()" -> "org.jfree.chart.axis$SymbolAxis#autoAdjustRange()";
  "org.jfree.chart.axis$NumberAxis#configure()" -> "org.jfree.chart.axis$ValueAxis#isAutoRange()";
  "org.jfree.chart.axis$NumberAxis#configure()" -> "org.jfree.chart.axis$NumberAxis#autoAdjustRange()";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$LabelBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.util$VerticalAlignment#<clinit>()";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$AbstractBlock#setBounds(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$BlockContainer#getBlocks()";
  "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])";
  "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()";
  "org.jfree.chart.title$TextTitle#setMaximumLinesToDisplay(int)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$TextTitle#setMaximumLinesToDisplay(int)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setLabelFont(java.awt.Font)";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.category$BarRenderer#isDrawBarOutline()";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupLegendShape(int)";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisible(int)";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextPaint(int)";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getPlot()";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisibleInLegend(int)";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlinePaint(int)";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItemURLGenerator()";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItemLabelGenerator()";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setDataset(org.jfree.data.general.Dataset)";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextFont(int)";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.plot$CategoryPlot#getDataset(int)";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItemToolTipGenerator()";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setFillPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesPaint(int)";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlineStroke(int)";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setDatasetIndex(int)";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setLabelPaint(java.awt.Paint)";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setSeriesKey(java.lang.Comparable)";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setSeriesIndex(int)";
  "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#<clinit>()";
  "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.util$StandardGradientPaintTransformer#StandardGradientPaintTransformer()";
  "org.jfree.chart.block$LabelBlock#clone()" -> "org.jfree.chart.block$AbstractBlock#clone()";
  "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.category$BarRenderer3D#getYOffset()";
  "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isVisible()";
  "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer()";
  "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#AxisState(double)";
  "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getPlot()";
  "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis#drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState)";
  "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isAxisLineVisible()";
  "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.category$BarRenderer3D#getXOffset()";
  "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isTickMarksVisible()";
  "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.data.xy$IntervalXYDelegate#getEndXValue(int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)";
  "org.jfree.data.xy$IntervalXYDelegate#getEndXValue(int,int)" -> "org.jfree.data.xy$DefaultXYDataset#getXValue(int,int)";
  "org.jfree.data.xy$IntervalXYDelegate#getEndXValue(int,int)" -> "org.jfree.data.xy$IntervalXYDelegate#getIntervalWidth()";
  "org.jfree.data.xy$IntervalXYDelegate#getEndXValue(int,int)" -> "org.jfree.data.xy$IntervalXYDelegate#getIntervalPositionFactor()";
  "org.jfree.data.xy$IntervalXYDelegate#getEndXValue(int,int)" -> "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)";
  "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getX(org.jfree.data.time.RegularTimePeriod)";
  "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.chart.renderer.category$BarRenderer3D#equals(java.lang.Object)" -> "org.jfree.chart.renderer.category$BarRenderer#equals(java.lang.Object)";
  "org.jfree.chart.renderer.category$BarRenderer3D#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.renderer.category$BarRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.renderer.category$BarRenderer#equals(java.lang.Object)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#equals(java.lang.Object)";
  "org.jfree.chart.renderer.category$BarRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.renderer.category$BarRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer#equals(java.lang.Object)" -> "org.jfree.chart.renderer.category$GradientBarPainter#equals(java.lang.Object)";
  "org.jfree.chart.entity$PlotEntity#clone()" -> "org.jfree.chart.entity$ChartEntity#clone()";
  "org.jfree.data.xy$XYSeriesCollection#getItemCount(int)" -> "org.jfree.data.xy$XYSeriesCollection#getSeries(int)";
  "org.jfree.data.xy$XYSeriesCollection#getItemCount(int)" -> "org.jfree.data.xy$XYSeries#getItemCount()";
  "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)" -> "org.jfree.chart.util$RectangleInsets#getBottom()";
  "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)" -> "org.jfree.chart.axis$Axis#getTickLabelInsets()";
  "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)" -> "org.jfree.chart.util$RectangleInsets#getTop()";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYItemRendererState#getCrosshairState()";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$DefaultXYDataset#getYValue(int,int)";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemStroke(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$DefaultXYDataset#getXValue(int,int)";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemVisible(int,int)";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#isItemLabelVisible(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYStepRenderer#drawLine(java.awt.Graphics2D,java.awt.geom.Line2D,double,double,double,double)";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYStepRenderer#getStepPoint()";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemPaint(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$RendererState#getEntityCollection()";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.xy.XYDataset,int,int,boolean,double,double,boolean)";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#updateCrosshairValues(org.jfree.chart.plot.CrosshairState,double,double,int,int,double,double,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.general.PieDataset,java.lang.Comparable,double,int)" -> "org.jfree.data.general$DefaultPieDataset#getKeys()";
  "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.general.PieDataset,java.lang.Comparable,double,int)" -> "org.jfree.data.general$DefaultPieDataset#setValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.general.PieDataset,java.lang.Comparable,double,int)" -> "org.jfree.data.general$DefaultPieDataset#DefaultPieDataset()";
  "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.general.PieDataset,java.lang.Comparable,double,int)" -> "org.jfree.data.general$DefaultPieDataset#getValue(java.lang.Comparable)";
  "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.general.PieDataset,java.lang.Comparable,double,int)" -> "org.jfree.data.general$DatasetUtilities#calculatePieDatasetTotal(org.jfree.data.general.PieDataset)";
  "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.general.PieDataset,java.lang.Comparable,double,int)" -> "org.jfree.data.general$DefaultPieDataset#setValue(java.lang.Comparable,double)";
  "org.jfree.chart.renderer$AbstractRenderer#lookupLegendShape(int)" -> "org.jfree.chart.renderer$AbstractRenderer#getLegendShape(int)";
  "org.jfree.chart.renderer$AbstractRenderer#lookupLegendShape(int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesShape(int)";
  "org.jfree.chart.renderer$AbstractRenderer#getLegendShape(int)" -> "org.jfree.chart.util$ShapeList#getShape(int)";
  "org.jfree.chart.axis$DateAxis#setMaximumDate(java.util.Date)" -> "org.jfree.chart.axis$DateAxis#getMinimumDate()";
  "org.jfree.chart.axis$DateAxis#setMaximumDate(java.util.Date)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$DateAxis#setMaximumDate(java.util.Date)" -> "org.jfree.data.time$DateRange#DateRange(java.util.Date,java.util.Date)";
  "org.jfree.chart.axis$DateAxis#setMaximumDate(java.util.Date)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$DateAxis#setMaximumDate(java.util.Date)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$DateAxis#setMaximumDate(java.util.Date)" -> "org.jfree.chart.axis$DateAxis#getMaximumDate()";
  "org.jfree.chart.axis$DateAxis#getMinimumDate()" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$DateAxis#getMinimumDate()" -> "org.jfree.data.time$DateRange#getLowerDate()";
  "org.jfree.chart.axis$DateAxis#getMinimumDate()" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.plot$XYPlot#drawZeroDomainBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.plot$XYPlot#drawZeroDomainBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)";
  "org.jfree.chart.plot$XYPlot#drawZeroDomainBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getRenderer()";
  "org.jfree.chart.plot$XYPlot#drawZeroDomainBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#isDomainZeroBaselineVisible()";
  "org.jfree.chart.plot$XYPlot#getDomainAxis()" -> "org.jfree.chart.plot$XYPlot#getDomainAxis(int)";
  "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$XYSeriesCollection#getRangeUpperBound(boolean)";
  "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$XYSeriesCollection#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$AbstractIntervalXYDataset#getEndYValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.time$TimeSeriesCollection#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()";
  "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$DefaultXYDataset#getYValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()";
  "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$DefaultXYDataset#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)" -> "org.jfree.data.xy$DefaultXYDataset#getY(int,int)";
  "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getY(int,int)";
  "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)" -> "org.jfree.data.xy$XYSeriesCollection#getY(int,int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)";
  "org.jfree.chart.util$HorizontalAlignment#<clinit>()" -> "org.jfree.chart.util$HorizontalAlignment#HorizontalAlignment(java.lang.String)";
  "org.jfree.data.time$TimeSeriesCollection#getEndY(int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getY(int,int)";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis3D#NumberAxis3D(java.lang.String)";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator)";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis3D#CategoryAxis3D(java.lang.String)";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setColumnRenderingOrder(org.jfree.chart.util.SortOrder)";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$BarRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$BarRenderer3D#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.data.xy$XYSeries#updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYSeries#maxIgnoreNaN(double,double)";
  "org.jfree.data.xy$XYSeries#updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYSeries#minIgnoreNaN(double,double)";
  "org.jfree.data.xy$XYSeries#updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYDataItem#getY()";
  "org.jfree.data.xy$XYSeries#updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYDataItem#getXValue()";
  "org.jfree.data.xy$XYSeries#updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYDataItem#getYValue()";
  "org.jfree.data.general$DefaultPieDataset#sortByValues(org.jfree.chart.util.SortOrder)" -> "org.jfree.data.general$AbstractDataset#fireDatasetChanged()";
  "org.jfree.data.general$DefaultPieDataset#sortByValues(org.jfree.chart.util.SortOrder)" -> "org.jfree.data$DefaultKeyedValues#sortByValues(org.jfree.chart.util.SortOrder)";
  "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.data.general$DefaultPieDataset#equals(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)";
  "org.jfree.data.general$DefaultPieDataset#equals(java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#equals(java.lang.Object)";
  "org.jfree.data.general$DefaultPieDataset#equals(java.lang.Object)" -> "org.jfree.data.time$Month#equals(java.lang.Object)";
  "org.jfree.data.general$DefaultPieDataset#equals(java.lang.Object)" -> "org.jfree.data.general$DefaultPieDataset#getItemCount()";
  "org.jfree.data.general$DefaultPieDataset#equals(java.lang.Object)" -> "org.jfree.data.xy$XYDataItem#equals(java.lang.Object)";
  "org.jfree.data.general$DefaultPieDataset#equals(java.lang.Object)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.data.general$DefaultPieDataset#equals(java.lang.Object)" -> "org.jfree.chart.axis$NumberTickUnit#equals(java.lang.Object)";
  "org.jfree.data.general$DefaultPieDataset#equals(java.lang.Object)" -> "org.jfree.chart.axis$DateTickUnit#equals(java.lang.Object)";
  "org.jfree.data.general$DefaultPieDataset#equals(java.lang.Object)" -> "org.jfree.data.general$DefaultPieDataset#getValue(int)";
  "org.jfree.data.general$DefaultPieDataset#equals(java.lang.Object)" -> "org.jfree.data.general$DefaultPieDataset#getKey(int)";
  "org.jfree.data.general$DefaultPieDataset#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)";
  "org.jfree.data.general$DefaultPieDataset#equals(java.lang.Object)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.data.general$DefaultPieDataset#equals(java.lang.Object)" -> "org.jfree.chart.axis$TickUnit#equals(java.lang.Object)";
  "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#calculateTotalWidth(double)";
  "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightRange()";
  "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthRange()";
  "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$PaintScaleLegend#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)";
  "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#calculateTotalHeight(double)";
  "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#getHeight()";
  "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#getWidth()";
  "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightConstraintType()";
  "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthConstraintType()";
  "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$AbstractBlock#calculateTotalWidth(double)" -> "org.jfree.chart.util$RectangleInsets#extendWidth(double)";
  "org.jfree.chart.block$AbstractBlock#calculateTotalWidth(double)" -> "org.jfree.chart.block$BlockBorder#getInsets()";
  "org.jfree.chart.block$AbstractBlock#calculateTotalWidth(double)" -> "org.jfree.chart.block$LineBorder#getInsets()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)" -> "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getDataBoundsIncludesVisibleSeriesOnly()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisible(int)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)" -> "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)";
  "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)" -> "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)";
  "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getRangeBounds(boolean)";
  "org.jfree.data.time$SerialDate#getEndOfCurrentMonth(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)";
  "org.jfree.data.time$SerialDate#getEndOfCurrentMonth(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#getEndOfCurrentMonth(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#createInstance(int,int,int)";
  "org.jfree.data.time$SerialDate#getEndOfCurrentMonth(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$SerialDate#getEndOfCurrentMonth(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)" -> "org.jfree.data.time$SerialDate#isLeapYear(int)";
  "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.chart.axis$DateAxis#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.axis$DateAxis#equals(java.lang.Object)" -> "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)";
  "org.jfree.chart.axis$DateAxis#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.data.time$DateRange#DateRange(org.jfree.data.Range)";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PolarPlot#setDataset(org.jfree.data.xy.XYDataset)";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis()";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#setTickMarksVisible(boolean)";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#setAxisLineVisible(boolean)";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#setTickLabelInsets(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PolarPlot#setAxis(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PolarPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PolarPlot#setRenderer(org.jfree.chart.renderer.PolarItemRenderer)";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PolarPlot#PolarPlot()";
  "org.jfree.chart.plot$CrosshairState#CrosshairState()" -> "org.jfree.chart.plot$CrosshairState#CrosshairState(boolean)";
  "org.jfree.chart.block$BorderArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,org.jfree.data.Range,org.jfree.data.Range,java.awt.Graphics2D)" -> "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,org.jfree.data.Range,org.jfree.data.Range,java.awt.Graphics2D)" -> "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,org.jfree.data.Range,org.jfree.data.Range,java.awt.Graphics2D)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(org.jfree.data.Range,org.jfree.data.Range)";
  "org.jfree.chart.block$BorderArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,org.jfree.data.Range,org.jfree.data.Range,java.awt.Graphics2D)" -> "org.jfree.data$Range#shift(org.jfree.data.Range,double)";
  "org.jfree.chart.block$BorderArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,org.jfree.data.Range,org.jfree.data.Range,java.awt.Graphics2D)" -> "org.jfree.chart.block$LabelBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,org.jfree.data.Range,org.jfree.data.Range,java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.block$BorderArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,org.jfree.data.Range,org.jfree.data.Range,java.awt.Graphics2D)" -> "org.jfree.chart.block$AbstractBlock#setBounds(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$BorderArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,org.jfree.data.Range,org.jfree.data.Range,java.awt.Graphics2D)" -> "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)";
  "org.jfree.chart.block$BorderArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,org.jfree.data.Range,org.jfree.data.Range,java.awt.Graphics2D)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$BorderArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,org.jfree.data.Range,org.jfree.data.Range,java.awt.Graphics2D)" -> "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,org.jfree.data.Range,org.jfree.data.Range,java.awt.Graphics2D)" -> "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,org.jfree.data.Range,org.jfree.data.Range,java.awt.Graphics2D)" -> "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,org.jfree.data.Range,org.jfree.data.Range,java.awt.Graphics2D)" -> "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#calculateTotalHeight(double)";
  "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#calculateTotalWidth(double)";
  "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightConstraintType()";
  "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$LegendGraphic#arrangeNN(java.awt.Graphics2D)";
  "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthConstraintType()";
  "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidth()";
  "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeight()";
  "org.jfree.chart.plot$PieLabelDistributor#isOverlap()" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#setBase(double)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)" -> "org.jfree.chart.axis$ValueAxis#ValueAxis(java.lang.String,org.jfree.chart.axis.TickUnitSource)";
  "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)" -> "org.jfree.chart.axis$NumberAxis#createStandardTickUnits()";
  "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)" -> "org.jfree.data$RangeType#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart.block$AbstractBlock#trimToContentWidth(org.jfree.data.Range)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.block$AbstractBlock#trimToContentWidth(org.jfree.data.Range)" -> "org.jfree.chart.block$AbstractBlock#trimToContentWidth(double)";
  "org.jfree.chart.block$AbstractBlock#trimToContentWidth(org.jfree.data.Range)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.block$AbstractBlock#trimToContentWidth(org.jfree.data.Range)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data.xy$XYSeriesCollection#getSeriesKey(int)" -> "org.jfree.data.xy$XYSeriesCollection#getSeries(int)";
  "org.jfree.data.xy$XYSeriesCollection#getSeriesKey(int)" -> "org.jfree.data.general$Series#getKey()";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineException(long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentStart()";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineException(long)" -> "org.jfree.chart.axis$SegmentedTimeline#getSegment(long)";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineException(long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentEnd()";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineException(long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#inIncludeSegments()";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineException(long)" -> "org.jfree.chart.axis$SegmentedTimeline#addException(long,long)";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineException(long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#inc()";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineException(long)" -> "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inIncludeSegments()";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.title$PaintScaleLegend#equals(java.lang.Object)" -> "org.jfree.chart.axis$LogAxis#equals(java.lang.Object)";
  "org.jfree.chart.title$PaintScaleLegend#equals(java.lang.Object)" -> "org.jfree.chart.axis$PeriodAxis#equals(java.lang.Object)";
  "org.jfree.chart.title$PaintScaleLegend#equals(java.lang.Object)" -> "org.jfree.chart.title$Title#equals(java.lang.Object)";
  "org.jfree.chart.title$PaintScaleLegend#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.title$PaintScaleLegend#equals(java.lang.Object)" -> "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)";
  "org.jfree.chart.title$PaintScaleLegend#equals(java.lang.Object)" -> "org.jfree.chart.axis$DateAxis#equals(java.lang.Object)";
  "org.jfree.chart.title$PaintScaleLegend#equals(java.lang.Object)" -> "org.jfree.chart.axis$SymbolAxis#equals(java.lang.Object)";
  "org.jfree.chart.title$PaintScaleLegend#equals(java.lang.Object)" -> "org.jfree.chart.axis$AxisLocation#equals(java.lang.Object)";
  "org.jfree.chart.title$PaintScaleLegend#equals(java.lang.Object)" -> "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$Axis#setTickLabelFont(java.awt.Font)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$Axis#setLabelPaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$Axis#setLabelFont(java.awt.Font)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$Axis#setTickLabelPaint(java.awt.Paint)";
  "org.jfree.chart.axis$Axis#setTickLabelFont(java.awt.Font)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.data.xy$XYDataItem#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.data.xy$XYDataItem#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getSeriesItemLabelGenerator(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlinePaint(int)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlinePaint()";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlinePaint(int)" -> "org.jfree.chart.renderer$AbstractRenderer#getSeriesOutlinePaint(int)";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlinePaint(int)" -> "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlinePaint(int,java.awt.Paint,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlinePaint(int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getDrawingSupplier()";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlinePaint(int)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getDrawingSupplier()";
  "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelLines(int)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelLines(int)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot3D#PiePlot3D(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator()";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setURLGenerator(org.jfree.chart.urls.PieURLGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#setBarPainter(org.jfree.chart.renderer.xy.XYBarPainter)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$DatasetRenderingOrder#<clinit>()" -> "org.jfree.chart.plot$DatasetRenderingOrder#DatasetRenderingOrder(java.lang.String)";
  "org.jfree.chart.block$CenterArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$CenterArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$CenterArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$AbstractBlock#setBounds(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$CenterArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$CenterArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.block$CenterArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$CenterArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$CenterArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$LabelBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$CenterArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$CenterArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$CenterArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$BlockContainer#getBlocks()";
  "org.jfree.chart.title$Title#setNotify(boolean)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$Title#setNotify(boolean)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.data.time$SerialDate#toString()" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$SerialDate#toString()" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#toString()" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$SerialDate#toString()" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$SerialDate#toString()" -> "org.jfree.data.time$SerialDate#monthCodeToString(int)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$PiePlot#setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator(java.util.Locale)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.util.Locale)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$RingPlot#RingPlot(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BorderArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)";
  "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightRange()";
  "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthConstraintType()";
  "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BorderArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BorderArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,double)";
  "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BorderArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#calculateTotalHeight(double)";
  "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#calculateTotalWidth(double)";
  "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthRange()";
  "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BorderArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,org.jfree.data.Range,org.jfree.data.Range,java.awt.Graphics2D)";
  "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidth()";
  "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightConstraintType()";
  "org.jfree.chart.plot$XYPlot#convertToDataSpace(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#convertToDataSpace(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.axis$LogAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#convertToDataSpace(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.plot$XYPlot#convertToDataSpace(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#convertToDataSpace(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.plot$XYPlot#convertToDataSpace(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisForDataset(int)";
  "org.jfree.chart.plot$XYPlot#convertToDataSpace(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.plot$XYPlot#indexOf(org.jfree.data.xy.XYDataset)";
  "org.jfree.chart.plot$XYPlot#convertToDataSpace(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#convertToDataSpace(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisForDataset(int)";
  "org.jfree.chart.plot$PolarPlot#setDataset(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.general$AbstractDataset#getGroup()";
  "org.jfree.chart.plot$PolarPlot#setDataset(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)";
  "org.jfree.chart.plot$PolarPlot#setDataset(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.general$AbstractDataset#removeChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.chart.plot$PolarPlot#setDataset(org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.plot$Plot#setDatasetGroup(org.jfree.data.general.DatasetGroup)";
  "org.jfree.chart.plot$PolarPlot#setDataset(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.chart.plot$PolarPlot#setDataset(org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setRangeGridlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setColumnRenderingOrder(org.jfree.chart.util.SortOrder)";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis3D#NumberAxis3D(java.lang.String)";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$BarRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setForegroundAlpha(float)";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator)";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$BarRenderer3D#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis3D#CategoryAxis3D(java.lang.String)";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setRowRenderingOrder(org.jfree.chart.util.SortOrder)";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$BarRenderer3D#BarRenderer3D()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getDirection()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.util$ShapeUtilities#createTranslatedShape(java.awt.Shape,double,double)";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getIgnoreNullValues()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.data.general$DefaultPieDataset#getValue(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getIgnoreZeroValues()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getLabelGenerator()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.text$TextUtilities#drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.util$Rotation#getFactor()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getStartAngle()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(org.jfree.chart.util.UnitType,double,double,double,double)";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getDataset()";
  "org.jfree.chart.text$TextUtilities#<clinit>()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#<clinit>()" -> "org.jfree.chart.util$ObjectUtilities#isJDK14()";
  "org.jfree.chart.plot$XYPlot#select(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.chart.plot$XYPlot#select(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()";
  "org.jfree.chart.plot$XYPlot#select(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)" -> "org.jfree.data.xy$XYSeriesCollection#setSelected(int,int,boolean)";
  "org.jfree.chart.plot$XYPlot#select(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)" -> "org.jfree.data.xy$XYSeriesCollection#getItemCount(int)";
  "org.jfree.chart.plot$XYPlot#select(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)" -> "org.jfree.data.xy$DefaultXYDataset#getYValue(int,int)";
  "org.jfree.chart.plot$XYPlot#select(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)" -> "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)";
  "org.jfree.chart.plot$XYPlot#select(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#select(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)" -> "org.jfree.data.xy$DefaultXYDataset#getXValue(int,int)";
  "org.jfree.chart.plot$XYPlot#select(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#select(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)" -> "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)";
  "org.jfree.chart.plot$XYPlot#select(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)" -> "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)";
  "org.jfree.chart.plot$XYPlot#select(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)" -> "org.jfree.chart.plot$XYPlot#findSelectionStateForDataset(org.jfree.data.xy.XYDataset,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#select(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()";
  "org.jfree.chart.plot$XYPlot#select(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)" -> "org.jfree.data.time$TimeSeriesCollection#setSelected(int,int,boolean)";
  "org.jfree.chart.plot$XYPlot#select(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)" -> "org.jfree.data.xy$DefaultXYDataset#getItemCount(int)";
  "org.jfree.chart.plot$XYPlot#select(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)" -> "org.jfree.data.time$TimeSeriesCollection#getItemCount(int)";
  "org.jfree.chart.plot$XYPlot#select(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)" -> "org.jfree.chart.plot$XYPlot#convertToDataSpace(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.data.xy.XYDataset)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.data.time$Month#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.data.xy$XYDataItem#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart.axis$NumberTickUnit#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart.axis$DateTickUnit#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.data.general$DefaultPieDataset#getValue(int)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.data$DefaultKeyedValues#getValue(int)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.data$DefaultKeyedValues#getItemCount()";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart.axis$TickUnit#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.data.general$DefaultPieDataset#getItemCount()";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.data.general$DefaultPieDataset#getKey(int)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.data$DefaultKeyedValues#getKey(int)";
  "org.jfree.chart$JFreeChart#setTextAntiAlias(boolean)" -> "org.jfree.chart$JFreeChart#setTextAntiAlias(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setTextAntiAlias(java.lang.Object)" -> "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setTextAntiAlias(java.lang.Object)" -> "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)";
  "org.jfree.chart.axis$SegmentedTimeline#containsDomainRange(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#contains(long)";
  "org.jfree.chart.axis$SegmentedTimeline#containsDomainRange(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#inIncludeSegments()";
  "org.jfree.chart.axis$SegmentedTimeline#containsDomainRange(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#inc()";
  "org.jfree.chart.axis$SegmentedTimeline#containsDomainRange(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inIncludeSegments()";
  "org.jfree.chart.axis$SegmentedTimeline#containsDomainRange(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline#getSegment(long)";
  "org.jfree.chart.axis$NumberAxis#calculateHighestVisibleTickValue()" -> "org.jfree.chart.axis$NumberAxis#getTickUnit()";
  "org.jfree.chart.axis$NumberAxis#calculateHighestVisibleTickValue()" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$NumberAxis#calculateHighestVisibleTickValue()" -> "org.jfree.chart.axis$TickUnit#getSize()";
  "org.jfree.chart.axis$NumberAxis#calculateHighestVisibleTickValue()" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#isItemLabelVisible(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$RendererState#getEntityCollection()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#getMargin()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYItemRendererState#getCrosshairState()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$AbstractIntervalXYDataset#getStartXValue(int,int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data$Range#intersects(double,double)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$AbstractIntervalXYDataset#getEndXValue(int,int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemVisible(int,int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$AbstractIntervalXYDataset#getStartYValue(int,int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#updateCrosshairValues(org.jfree.chart.plot.CrosshairState,double,double,int,int,double,double,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,boolean,org.jfree.chart.labels.XYItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getItemLabelGenerator(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$GradientXYBarPainter#paintBarShadow(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYBarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge,boolean)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$DefaultXYDataset#getYValue(int,int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$GradientXYBarPainter#paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYBarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.data.xy$AbstractIntervalXYDataset#getEndYValue(int,int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#getShadowsVisible()";
  "org.jfree.chart.util$BooleanList#hashCode()" -> "org.jfree.chart.util$AbstractObjectList#hashCode()";
  "org.jfree.chart.util$AbstractObjectList#hashCode()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.axis$PeriodAxis#setFirst(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$PeriodAxis#setFirst(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Year#peg(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#setFirst(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Month#peg(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#setFirst(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Day#peg(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#setFirst(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$DateAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#toTimelineValue(long)";
  "org.jfree.chart.axis$DateAxis#zoomRange(double,double)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$DateAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$SegmentedTimeline#toMillisecond(long)";
  "org.jfree.chart.axis$DateAxis#zoomRange(double,double)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$DateAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$SegmentedTimeline#toTimelineValue(long)";
  "org.jfree.chart.axis$DateAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$DateAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$DateAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.axis$DateAxis#zoomRange(double,double)" -> "org.jfree.data.time$DateRange#DateRange(double,double)";
  "org.jfree.chart.axis$DateAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#toMillisecond(long)";
  "org.jfree.chart.plot$XYPlot#mapDatasetToRangeAxis(int,int)" -> "org.jfree.chart.plot$XYPlot#mapDatasetToRangeAxes(int,java.util.List)";
  "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$AbstractIntervalXYDataset#getStartYValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()";
  "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$DefaultXYDataset#getYValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()";
  "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$DefaultXYDataset#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.time$TimeSeriesCollection#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$XYSeriesCollection#getRangeLowerBound(boolean)";
  "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$XYSeriesCollection#getItemCount(int)";
  "org.jfree.data.xy$AbstractIntervalXYDataset#getStartYValue(int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getStartY(int,int)";
  "org.jfree.data.xy$AbstractIntervalXYDataset#getStartYValue(int,int)" -> "org.jfree.data.xy$XYSeriesCollection#getStartY(int,int)";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.axis$NumberAxis#clone()";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.plot$Plot#clone()";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.util$ObjectList#ObjectList()";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.plot$CategoryPlot#getDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.axis$PeriodAxis#clone()";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.plot$CategoryPlot#cloneMarkerMap(java.util.Map)";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis)";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.axis$ValueAxis#clone()";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.util$AbstractObjectList#clone()";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.axis$DateAxis#clone()";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.axis$CategoryAxis#clone()";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.axis$CategoryAxis3D#clone()";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart.plot$MultiplePiePlot#getPieChart()";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart.plot$XYPlot#clearRangeAxes()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#clearRangeAxes()" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#clearRangeAxes()" -> "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$XYPlot#clearRangeAxes()" -> "org.jfree.chart.util$AbstractObjectList#clear()";
  "org.jfree.chart.plot$XYPlot#clearRangeAxes()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)" -> "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Arc2D,java.awt.geom.Arc2D)";
  "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)" -> "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.GeneralPath,java.awt.geom.GeneralPath)";
  "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)" -> "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Polygon,java.awt.Polygon)";
  "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)" -> "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Line2D,java.awt.geom.Line2D)";
  "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)" -> "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Ellipse2D,java.awt.geom.Ellipse2D)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)" -> "org.jfree.chart.urls$StandardXYURLGenerator#generateURL(org.jfree.data.xy.XYDataset,int,int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemCreateEntity(int,int,boolean)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#generateToolTip(org.jfree.data.xy.XYDataset,int,int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getURLGenerator(int,int,boolean)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)" -> "org.jfree.chart.renderer$AbstractRenderer#getDefaultEntityRadius()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getToolTipGenerator(int,int,boolean)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)" -> "org.jfree.chart.entity$XYItemEntity#XYItemEntity(java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,java.lang.String,java.lang.String)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getPlot()";
  "org.jfree.chart.entity$AxisLabelEntity#toString()" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.chart.labels$StandardPieToolTipGenerator#generateToolTip(org.jfree.data.general.PieDataset,java.lang.Comparable)" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)";
  "org.jfree.chart.labels$AbstractPieItemLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getSeriesShapesFilled(int)" -> "org.jfree.chart.util$BooleanList#getBoolean(int)";
  "org.jfree.chart.util$BooleanList#getBoolean(int)" -> "org.jfree.chart.util$AbstractObjectList#get(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#equals(java.lang.Object)" -> "org.jfree.chart.renderer$AbstractRenderer#equals(java.lang.Object)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#get(int)";
  "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getLabelLinkDepth()";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.data$DefaultKeyedValues#getKey(int)";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.data$DefaultKeyedValues#getValue(int)";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,org.jfree.chart.text.TextMeasurer)";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getExplodePercent(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#getItemCount()";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getInteriorGap()";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$RingPlot#getLabelLinkDepth()";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.data.general$DefaultPieDataset#getItemCount()";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.data$DefaultKeyedValues#getItemCount()";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#addPieLabelRecord(org.jfree.chart.plot.PieLabelRecord)";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.text$G2TextMeasurer#G2TextMeasurer(java.awt.Graphics2D)";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PieLabelDistributor#distributeLabels(double,double)";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.data.general$DefaultPieDataset#getValue(int)";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#clear()";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#drawRightLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.data.general$DefaultPieDataset#getKey(int)";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)";
  "org.jfree.chart.axis$NumberTick#NumberTick(java.lang.Number,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)" -> "org.jfree.chart.axis$ValueTick#ValueTick(double,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)";
  "org.jfree.chart.plot$PieLabelDistributor#spreadEvenly(double,double)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)";
  "org.jfree.chart.plot$XYPlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)";
  "org.jfree.chart.plot$XYPlot#getLegendItems()" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.chart.plot$XYPlot#getLegendItems()" -> "org.jfree.chart.plot$XYPlot#getDataset(int)";
  "org.jfree.chart.plot$XYPlot#getLegendItems()" -> "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisibleInLegend(int)";
  "org.jfree.chart.plot$XYPlot#getLegendItems()" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)";
  "org.jfree.chart.plot$XYPlot#getLegendItems()" -> "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisible(int)";
  "org.jfree.chart.plot$XYPlot#getLegendItems()" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)";
  "org.jfree.chart.plot$XYPlot#getLegendItems()" -> "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)";
  "org.jfree.chart.plot$XYPlot#getLegendItems()" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()";
  "org.jfree.chart.plot$XYPlot#getLegendItems()" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)";
  "org.jfree.chart.plot$XYPlot#getLegendItems()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#LegendItemCollection()";
  "org.jfree.chart.plot$XYPlot#getLegendItems()" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()";
  "org.jfree.chart.plot$XYPlot#getLegendItems()" -> "org.jfree.chart.plot$XYPlot#getRenderer(int)";
  "org.jfree.chart.plot$XYPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)";
  "org.jfree.chart.plot$XYPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)" -> "org.jfree.chart.plot$Marker#addChangeListener(org.jfree.chart.event.MarkerChangeListener)";
  "org.jfree.chart.plot$XYPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.plot$XYPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$XYPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)";
  "org.jfree.chart.axis$ValueAxis#centerRange(double)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$ValueAxis#centerRange(double)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#centerRange(double)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$ValueAxis#centerRange(double)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#centerRange(double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$ValueAxis#centerRange(double)" -> "org.jfree.data$Range#getCentralValue()";
  "org.jfree.chart.block$ColumnArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.block$ColumnArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.block$ColumnArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#toFixedHeight(double)";
  "org.jfree.chart.block$ColumnArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)";
  "org.jfree.chart.block$ColumnArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightRange()";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#getSubplots()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#findSubplot(org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator()";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.urls$StandardXYURLGenerator#StandardXYURLGenerator()";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#XYBarRenderer()";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.XYURLGenerator)";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.category.CategoryDataset)" -> "org.jfree.data.xy$XYSeriesCollection#getRangeLowerBound(boolean)";
  "org.jfree.data.xy$XYSeriesCollection#getRangeLowerBound(boolean)" -> "org.jfree.data.xy$XYSeries#getMinY()";
  "org.jfree.data.xy$XYSeriesCollection#getRangeLowerBound(boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.data.xy$XYSeriesCollection#getRangeLowerBound(boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getSeries(int)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.plot$XYPlot#configureRangeAxes()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.plot$Plot#setParent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.plot$Plot#addChangeListener(org.jfree.chart.event.PlotChangeListener)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#add(org.jfree.chart.plot.XYPlot,int)" -> "org.jfree.chart.plot$XYPlot#setWeight(int)";
  "org.jfree.chart.plot$XYPlot#configureRangeAxes()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#configureRangeAxes()" -> "org.jfree.chart.axis$PeriodAxis#configure()";
  "org.jfree.chart.plot$XYPlot#configureRangeAxes()" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$XYPlot#configureRangeAxes()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#configureRangeAxes()" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.plot$XYPlot#configureRangeAxes()" -> "org.jfree.chart.axis$LogAxis#configure()";
  "org.jfree.chart.block$BorderArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidth()";
  "org.jfree.chart.block$BorderArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#toFixedHeight(double)";
  "org.jfree.chart.block$BorderArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BorderArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,double)";
  "org.jfree.chart.block$BorderArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.block$BorderArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.block$BorderArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightRange()";
  "org.jfree.chart.block$BorderArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#constrain(double)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation)" -> "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.data.general$DefaultPieDataset#getValue(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.data$DefaultKeyedValues#DefaultKeyedValues()";
  "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getLabelFont()";
  "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)";
  "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)";
  "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.util$Rotation#getFactor()";
  "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.util$RectangleInsets#trimWidth(double)";
  "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.chart.title$LegendGraphic#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)";
  "org.jfree.chart.title$LegendGraphic#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.title$LegendGraphic#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator)";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$BarRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.axis$TickType#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$CategoryPlot#isRangeMinorGridlinesVisible()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$CategoryPlot#getRangeMinorGridlineStroke()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$CategoryPlot#isRangeGridlinesVisible()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$CategoryPlot#getRangeGridlineStroke()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$CategoryPlot#getRangeMinorGridlinePaint()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.axis$ValueTick#getTickType()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$CategoryPlot#isRangeZeroBaselineVisible()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.axis$ValueTick#getValue()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$CategoryPlot#getRangeGridlinePaint()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer()";
  "org.jfree.chart.axis$SegmentedTimeline#containsDomainValue(java.util.Date)" -> "org.jfree.chart.axis$SegmentedTimeline#containsDomainValue(long)";
  "org.jfree.chart.axis$SegmentedTimeline#containsDomainValue(java.util.Date)" -> "org.jfree.chart.axis$SegmentedTimeline#getTime(java.util.Date)";
  "org.jfree.chart.axis$SegmentedTimeline#containsDomainValue(long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#inIncludeSegments()";
  "org.jfree.chart.axis$SegmentedTimeline#containsDomainValue(long)" -> "org.jfree.chart.axis$SegmentedTimeline#getSegment(long)";
  "org.jfree.chart.axis$SegmentedTimeline#containsDomainValue(long)" -> "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inIncludeSegments()";
  "org.jfree.chart.entity$JFreeChartEntity#hashCode()" -> "org.jfree.chart.entity$ChartEntity#getURLText()";
  "org.jfree.chart.entity$JFreeChartEntity#hashCode()" -> "org.jfree.chart.entity$ChartEntity#getToolTipText()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.plot$CategoryPlot#getOrientation()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesStroke(int)" -> "org.jfree.chart.renderer$AbstractRenderer#setSeriesStroke(int,java.awt.Stroke,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesStroke(int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getDrawingSupplier()";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesStroke(int)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getDrawingSupplier()";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesStroke(int)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#getNextStroke()";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesStroke(int)" -> "org.jfree.chart.renderer$AbstractRenderer#getSeriesStroke(int)";
  "org.jfree.data.time$Day#parseDay(java.lang.String)" -> "org.jfree.data.time$Day#<clinit>()";
  "org.jfree.data.time$Day#parseDay(java.lang.String)" -> "org.jfree.data.time$Day#Day(java.util.Date)";
  "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.axis$NumberTickUnit#valueToString(double)";
  "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.axis$Axis#getTickLabelInsets()";
  "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.util$RectangleInsets#getLeft()";
  "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()";
  "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.axis$DateTickUnit#valueToString(double)";
  "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.axis$LogAxis#getNumberFormatOverride()";
  "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.util$RectangleInsets#getRight()";
  "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.axis$TickUnit#valueToString(double)";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#equals(java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#getMillisecond()";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#equals(java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentNumber()";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#equals(java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentEnd()";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#equals(java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentStart()";
  "org.jfree.chart.axis$AxisCollection#add(org.jfree.chart.axis.Axis,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightConstraintType()";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthConstraintType()";
  "org.jfree.chart.labels$ItemLabelAnchor#readResolve()" -> "org.jfree.chart.labels$ItemLabelAnchor#equals(java.lang.Object)";
  "org.jfree.chart.labels$ItemLabelAnchor#readResolve()" -> "org.jfree.chart.labels$ItemLabelAnchor#<clinit>()";
  "org.jfree.chart.labels$ItemLabelAnchor#equals(java.lang.Object)" -> "org.jfree.chart.labels$ItemLabelAnchor#toString()";
  "org.jfree.chart.util$StrokeList#clone()" -> "org.jfree.chart.util$AbstractObjectList#clone()";
  "org.jfree.chart.plot$PiePlot#setLabelPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)" -> "org.jfree.chart.axis$DateTickUnitType#<clinit>()";
  "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)" -> "org.jfree.chart.axis$TickUnits#add(org.jfree.chart.axis.TickUnit)";
  "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)" -> "org.jfree.chart.axis$TickUnits#TickUnits()";
  "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)" -> "org.jfree.chart.axis$DateTickUnit#DateTickUnit(org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)";
  "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)" -> "org.jfree.chart.axis$DateTickUnit#DateTickUnit(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)";
  "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets,boolean)";
  "org.jfree.chart.axis$NumberAxis#createIntegerTickUnits()" -> "org.jfree.chart.axis$TickUnits#add(org.jfree.chart.axis.TickUnit)";
  "org.jfree.chart.axis$NumberAxis#createIntegerTickUnits()" -> "org.jfree.chart.axis$NumberTickUnit#NumberTickUnit(double,java.text.NumberFormat,int)";
  "org.jfree.chart.axis$NumberAxis#createIntegerTickUnits()" -> "org.jfree.chart.axis$TickUnits#TickUnits()";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.title$TextTitle#<clinit>()";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.plot$Plot#Plot()";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.title$Title#setPosition(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.plot$PiePlot#setIgnoreNullValues(boolean)";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart$JFreeChart#JFreeChart(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.plot$MultiplePiePlot#setDataset(org.jfree.data.category.CategoryDataset)";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart.entity$AxisEntity#equals(java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#getURLText()";
  "org.jfree.chart.entity$AxisEntity#equals(java.lang.Object)" -> "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)";
  "org.jfree.chart.entity$AxisEntity#equals(java.lang.Object)" -> "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)";
  "org.jfree.chart.entity$AxisEntity#equals(java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#getArea()";
  "org.jfree.chart.entity$AxisEntity#equals(java.lang.Object)" -> "org.jfree.chart.axis$PeriodAxis#equals(java.lang.Object)";
  "org.jfree.chart.entity$AxisEntity#equals(java.lang.Object)" -> "org.jfree.chart.axis$DateAxis#equals(java.lang.Object)";
  "org.jfree.chart.entity$AxisEntity#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.entity$AxisEntity#equals(java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#getToolTipText()";
  "org.jfree.chart.entity$AxisEntity#equals(java.lang.Object)" -> "org.jfree.chart.axis$SymbolAxis#equals(java.lang.Object)";
  "org.jfree.chart.entity$AxisEntity#equals(java.lang.Object)" -> "org.jfree.chart.axis$LogAxis#equals(java.lang.Object)";
  "org.jfree.chart.entity$AxisEntity#equals(java.lang.Object)" -> "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)";
  "org.jfree.chart.entity$AxisEntity#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.entity$AxisEntity#equals(java.lang.Object)" -> "org.jfree.chart.axis$Axis#equals(java.lang.Object)";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis3D#CategoryAxis3D(java.lang.String)";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator)";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis3D#NumberAxis3D(java.lang.String)";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart.axis$CategoryAxis3D#CategoryAxis3D(java.lang.String)" -> "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)";
  "org.jfree.chart.title$TextTitle#setURLText(java.lang.String)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$TextTitle#setURLText(java.lang.String)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)" -> "org.jfree.chart.axis$SymbolAxis#autoAdjustRange()";
  "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)" -> "org.jfree.chart.axis$NumberAxis#autoAdjustRange()";
  "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)" -> "org.jfree.chart.axis$ValueAxis#isAutoRange()";
  "org.jfree.chart.renderer$AbstractRenderer#getItemPaint(int,int,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesPaint(int)";
  "org.jfree.chart.plot$XYPlot#getRangeAxisForDataset(int)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis(int)";
  "org.jfree.chart.plot$XYPlot#getRangeAxisForDataset(int)" -> "org.jfree.chart.plot$XYPlot#getRendererCount()";
  "org.jfree.chart.plot$XYPlot#getRangeAxisForDataset(int)" -> "org.jfree.chart.plot$XYPlot#getDatasetCount()";
  "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$ValueAxis#resizeRange(double)";
  "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)";
  "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$PlotRenderingInfo#getDataArea()";
  "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$LogAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#resizeRange(double)" -> "org.jfree.data$Range#getCentralValue()";
  "org.jfree.chart.axis$ValueAxis#resizeRange(double)" -> "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLine(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLine(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$LineUtilities#clipLine(java.awt.geom.Line2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLine(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLine(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLine(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLine(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLine(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLine(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLine(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.data.xy$DefaultXYDataset#getYValue(int,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLine(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLine(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.data.xy$DefaultXYDataset#getXValue(int,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLine(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLine(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLine(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape1(java.awt.Graphics2D,int,int,int,boolean,java.awt.Shape)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLine(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.entity$JFreeChartEntity#equals(java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#getArea()";
  "org.jfree.chart.entity$JFreeChartEntity#equals(java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#getToolTipText()";
  "org.jfree.chart.entity$JFreeChartEntity#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.entity$JFreeChartEntity#equals(java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#getURLText()";
  "org.jfree.chart.entity$JFreeChartEntity#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.entity$JFreeChartEntity#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.data.xy$XYSeries#updateBoundsForRemovedItem(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYDataItem#getXValue()";
  "org.jfree.data.xy$XYSeries#updateBoundsForRemovedItem(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYDataItem#getYValue()";
  "org.jfree.data.xy$XYSeries#updateBoundsForRemovedItem(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYSeries#getX(int)";
  "org.jfree.data.xy$XYSeries#updateBoundsForRemovedItem(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYDataItem#getY()";
  "org.jfree.data.xy$XYSeries#updateBoundsForRemovedItem(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYSeries#getAutoSort()";
  "org.jfree.data.xy$XYSeries#updateBoundsForRemovedItem(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYSeries#getItemCount()";
  "org.jfree.data.xy$XYSeries#updateBoundsForRemovedItem(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYSeries#findBoundsByIteration()";
  "org.jfree.chart.renderer$AbstractRenderer#isItemLabelVisible(int,int,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#isSeriesItemLabelsVisible(int)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotState#getSharedAxisStates()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getDomainCrosshairStroke()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CrosshairState#setAnchorY(double)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairColumnKey(java.lang.Comparable,boolean)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.category$BarRenderer3D#drawBackground(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CrosshairState#setAnchor(java.awt.geom.Point2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#setCrosshairDatasetIndex(int,boolean)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#getTicks()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawBackground(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#isDomainCrosshairVisible()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawOutline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double,boolean)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairValue()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getDatasetRenderingOrder()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getDomainCrosshairPaint()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisForDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$ShapeUtilities#getPointInRectangle(double,double,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CategoryCrosshairState)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getDomainCrosshairColumnKey()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairRowKey(java.lang.Comparable,boolean)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getDomainCrosshairRowKey()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CrosshairState#setCrosshairY(double)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisSpace#shrink(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairPaint()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer(int)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#setDataArea(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.category$BarRenderer3D#drawOutline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#isOutlineVisible()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#PlotRenderingInfo(org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getForegroundAlpha()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$LogAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CrosshairState#setCrosshairDistance(double)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getInsets()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CrosshairState#getCrosshairY()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,int,java.lang.Comparable,java.lang.Comparable,java.awt.Stroke,java.awt.Paint)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairStroke()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CrosshairState#getDatasetIndex()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#createAndAddEntity(java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo,java.lang.String,java.lang.String)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#isRangeCrosshairVisible()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$DatasetRenderingOrder#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CrosshairState#setAnchorX(double)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisForDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getOrientation()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#setPlotArea(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.axis$SegmentedTimeline#getSegment(long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#SegmentedTimeline$Segment(org.jfree.chart.axis.SegmentedTimeline,long)";
  "org.jfree.chart.renderer.xy$GradientXYBarPainter#paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYBarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.renderer.xy$GradientXYBarPainter#splitHorizontalBar(java.awt.geom.RectangularShape,double,double,double)";
  "org.jfree.chart.renderer.xy$GradientXYBarPainter#paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYBarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemOutlinePaint(int,int,boolean)";
  "org.jfree.chart.renderer.xy$GradientXYBarPainter#paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYBarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.renderer.xy$GradientXYBarPainter#splitVerticalBar(java.awt.geom.RectangularShape,double,double,double)";
  "org.jfree.chart.renderer.xy$GradientXYBarPainter#paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYBarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemOutlineStroke(int,int,boolean)";
  "org.jfree.chart.renderer.xy$GradientXYBarPainter#paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYBarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemPaint(int,int,boolean)";
  "org.jfree.chart.renderer.xy$GradientXYBarPainter#paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYBarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.renderer.xy$GradientXYBarPainter#paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYBarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#isDrawBarOutline()";
  "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisState#getMax()";
  "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#isTickLabelsVisible()";
  "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#add(double,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#AxisSpace()";
  "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#isVisible()";
  "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisState#AxisState()";
  "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$Plot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$ChartRenderingInfo#getPlotInfo()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#getDataArea()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#getSubplotInfo(int)";
  "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.text$TextBlock#setLineAlignment(org.jfree.chart.util.HorizontalAlignment)";
  "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)";
  "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.title$Title#getPosition()";
  "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.text$G2TextMeasurer#G2TextMeasurer(java.awt.Graphics2D)";
  "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)";
  "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#isHiddenValue(long)";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#getDateFormatOverride()";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateTickUnit#addToDate(java.util.Date,java.util.TimeZone)";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateTickUnit#rollDate(java.util.Date,java.util.TimeZone)";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnit#getMinorTickCount()";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#getTickUnit()";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#calculateLowestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#getMaximumDate()";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateTickUnit#dateToString(java.util.Date)";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#correctTickDateForPosition(java.util.Date,org.jfree.chart.axis.DateTickUnit,org.jfree.chart.axis.DateTickMarkPosition)";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isAutoTickUnitSelection()";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getMinorTickCount()";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickType#<clinit>()";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.labels$ItemLabelAnchor#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$BarRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition(org.jfree.chart.labels.ItemLabelAnchor,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$BarRenderer#BarRenderer()";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition)";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition)";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator)";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.labels$ItemLabelAnchor#<clinit>()" -> "org.jfree.chart.labels$ItemLabelAnchor#ItemLabelAnchor(java.lang.String)";
  "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findDomainBounds(org.jfree.data.xy.XYDataset)";
  "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset)";
  "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getAnnotations()";
  "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#getDatasetsMappedToRangeAxis(java.lang.Integer)";
  "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)";
  "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset)";
  "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset)";
  "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#findDomainBounds(org.jfree.data.xy.XYDataset)";
  "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#getRendererForDataset(org.jfree.data.xy.XYDataset)";
  "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#findRangeBounds(org.jfree.data.xy.XYDataset)";
  "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#getDatasetsMappedToDomainAxis(java.lang.Integer)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findDomainBounds(org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)";
  "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsLowerBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data.time$TimeSeriesCollection#getDomainOrder()";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsLowerBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsLowerBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data.xy$DefaultXYDataset#getItemCount(int)";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsLowerBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data.xy$DefaultXYDataset#getXValue(int,int)";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsLowerBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data.xy$XYSeriesCollection#getItemCount(int)";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsLowerBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsLowerBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data.xy$XYSeriesCollection#getDomainOrder()";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsLowerBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data.xy$AbstractXYDataset#getDomainOrder()";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsLowerBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data.xy$DefaultXYDataset#getDomainOrder()";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsLowerBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data.time$TimeSeriesCollection#getItemCount(int)";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItemsLowerBound(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.data$DomainOrder#<clinit>()";
  "org.jfree.data.time$TimeSeriesCollection#getDomainOrder()" -> "org.jfree.data$DomainOrder#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.axis$Axis#getTickLabelInsets()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.util$RectangleInsets#getLeft()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.util$RectangleInsets#getBottom()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.axis$Tick#getText()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.util$RectangleInsets#getTop()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.util$RectangleInsets#getRight()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator(java.util.Locale)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$PiePlot#setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.util.Locale)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#XYBarRenderer()" -> "org.jfree.chart.renderer.xy$XYBarRenderer#XYBarRenderer(double)";
  "org.jfree.chart.util$PaintList#hashCode()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.util$PaintList#hashCode()" -> "org.jfree.chart.util$PaintList#getPaint(int)";
  "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePosition(org.jfree.chart.axis.CategoryAnchor)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#panDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$XYPlot#isDomainPannable()";
  "org.jfree.chart.plot$XYPlot#panDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis(int)";
  "org.jfree.chart.plot$XYPlot#panDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.plot$XYPlot#panDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$LogAxis#pan(double)";
  "org.jfree.chart.plot$XYPlot#panDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$ValueAxis#pan(double)";
  "org.jfree.chart.plot$XYPlot#panDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisCount()";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart.plot$PolarPlot#setAngleLabelPaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart.plot$PolarPlot#getAxis()";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart.plot$PolarPlot#setAngleGridlinePaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart.plot$PolarPlot#setRadiusGridlinePaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart.plot$PolarPlot#setAngleLabelFont(java.awt.Font)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart.axis$PeriodAxis#setLabelInfo(org.jfree.chart.axis.PeriodAxisLabelInfo[])";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart.axis$PeriodAxis#getLabelInfo()";
  "org.jfree.chart.axis$PeriodAxis#setLabelInfo(org.jfree.chart.axis.PeriodAxisLabelInfo[])" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$PeriodAxis#setLabelInfo(org.jfree.chart.axis.PeriodAxisLabelInfo[])" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$DateAxis#setRange(java.util.Date,java.util.Date)" -> "org.jfree.data.time$DateRange#DateRange(java.util.Date,java.util.Date)";
  "org.jfree.chart.axis$DateAxis#setRange(java.util.Date,java.util.Date)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)";
  "org.jfree.data.time$DateRange#DateRange(java.util.Date,java.util.Date)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$DateAxis#calculateHighestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateAxis#previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)";
  "org.jfree.chart.axis$DateAxis#calculateHighestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateAxis#getMaximumDate()";
  "org.jfree.chart.plot$XYPlot#getPlotType()" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getPlotType()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.axis$DateAxis#configure()" -> "org.jfree.chart.axis$DateAxis#autoAdjustRange()";
  "org.jfree.chart.axis$DateAxis#configure()" -> "org.jfree.chart.axis$ValueAxis#isAutoRange()";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.axis$SegmentedTimeline#toMillisecond(long)";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.data.time$DateRange#DateRange()";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.axis$SegmentedTimeline#toTimelineValue(long)";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#toMillisecond(long)";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.plot$PolarPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.axis$SegmentedTimeline#getStartTime()";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.plot$CombinedDomainXYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getAutoRangeMinimumSize()";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.data.time$DateRange#DateRange(java.util.Date,java.util.Date)";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.axis$Axis#getPlot()";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getFixedAutoRange()";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.data.time$DateRange#DateRange(double,double)";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getLowerMargin()";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#toTimelineValue(long)";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getUpperMargin()";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.plot$CombinedRangeXYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)" -> "org.jfree.chart.event$ChartChangeEventType#<clinit>()";
  "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)" -> "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart,org.jfree.chart.event.ChartChangeEventType)";
  "org.jfree.chart.util$BooleanList#BooleanList()" -> "org.jfree.chart.util$AbstractObjectList#AbstractObjectList()";
  "org.jfree.chart.util$AbstractObjectList#AbstractObjectList()" -> "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisLocation()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#AxisSpace()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#getTop()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#setTop(double)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$PeriodAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#setRight(double)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#getBottom()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#setLeft(double)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#ensureAtLeast(org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#setBottom(double)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#getLeft()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#getRight()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getFixedDomainAxisSpace()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#shrink(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getWeight()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.axis$SymbolAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isVisible()";
  "org.jfree.chart.axis$SymbolAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#AxisState(double)";
  "org.jfree.chart.axis$SymbolAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$SymbolAxis#drawGridBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,java.util.List)";
  "org.jfree.chart.axis$SymbolAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#getTicks()";
  "org.jfree.chart.axis$SymbolAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$RingPlot#RingPlot(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setURLGenerator(org.jfree.chart.urls.PieURLGenerator)";
  "org.jfree.data$Range#expand(org.jfree.data.Range,double,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data$Range#expand(org.jfree.data.Range,double,double)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.data$Range#expand(org.jfree.data.Range,double,double)" -> "org.jfree.data$Range#getLength()";
  "org.jfree.data$Range#expand(org.jfree.data.Range,double,double)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.renderer.category$BarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.renderer.category$BarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisForDataset(int)";
  "org.jfree.chart.renderer.category$BarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.renderer.category$BarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.renderer.category$BarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.category$BarRenderer#calculateBarWidth(org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,int,org.jfree.chart.renderer.category.CategoryItemRendererState)";
  "org.jfree.chart.renderer.category$BarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.plot$XYPlot#setRangeGridlinesVisible(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.xy$XYSeriesCollection#getY(int,int)" -> "org.jfree.data.xy$XYSeries#getY(int)";
  "org.jfree.data.xy$XYSeries#getY(int)" -> "org.jfree.data.xy$XYSeries#getRawDataItem(int)";
  "org.jfree.data.xy$XYSeries#getY(int)" -> "org.jfree.data.xy$XYDataItem#getY()";
  "org.jfree.data.general$DefaultPieDataset#setValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.data.general$AbstractDataset#fireDatasetChanged()";
  "org.jfree.data.general$DefaultPieDataset#setValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.chart.plot$IntervalMarker#clone()" -> "org.jfree.chart.plot$Marker#clone()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.general$Series#clone()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)";
  "org.jfree.data.xy$XYSeries#XYSeries(java.lang.Comparable,boolean)" -> "org.jfree.data.xy$XYSeries#XYSeries(java.lang.Comparable,boolean,boolean)";
  "org.jfree.data.xy$XYSeries#XYSeries(java.lang.Comparable,boolean,boolean)" -> "org.jfree.data.general$Series#Series(java.lang.Comparable)";
  "org.jfree.chart.plot$CategoryPlot#setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)";
  "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#removeChangeListener(org.jfree.chart.event.RendererChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#addChangeListener(org.jfree.chart.event.RendererChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)" -> "org.jfree.chart.plot$CategoryPlot#configureDomainAxes()";
  "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)" -> "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()";
  "org.jfree.chart.block$AbstractBlock#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)";
  "org.jfree.chart.axis$SymbolAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$SymbolAxis#autoAdjustRange()" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$SymbolAxis#autoAdjustRange()" -> "org.jfree.chart.axis$NumberAxis#getAutoRangeIncludesZero()";
  "org.jfree.chart.axis$SymbolAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getAutoRangeMinimumSize()";
  "org.jfree.chart.axis$SymbolAxis#autoAdjustRange()" -> "org.jfree.chart.axis$NumberAxis#getAutoRangeStickyZero()";
  "org.jfree.chart.axis$SymbolAxis#autoAdjustRange()" -> "org.jfree.chart.axis$Axis#getPlot()";
  "org.jfree.chart$JFreeChart#main(java.lang.String[])" -> "org.jfree.chart.ui$ProjectInfo#toString()";
  "org.jfree.chart$JFreeChart#main(java.lang.String[])" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator,boolean)";
  "org.jfree.chart.axis$PeriodAxis#setLast(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$PeriodAxis#setLast(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$PeriodAxis#setLast(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Day#peg(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#setLast(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Year#peg(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#setLast(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Month#peg(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#setMajorTickTimePeriodClass(java.lang.Class)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$PeriodAxis#setMajorTickTimePeriodClass(java.lang.Class)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#ensureAtLeast(double,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)";
  "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#getTop()";
  "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#getRight()";
  "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$PeriodAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#getLeft()";
  "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#AxisSpace()";
  "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#getBottom()";
  "org.jfree.chart.axis$AxisSpace#ensureAtLeast(double,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition(org.jfree.chart.labels.ItemLabelAnchor,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition(org.jfree.chart.labels.ItemLabelAnchor,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)";
  "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition(org.jfree.chart.labels.ItemLabelAnchor,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.xy$XYBarRenderer$XYBarRendererState#setG2Base(double)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisForDataset(int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#indexOf(org.jfree.data.xy.XYDataset)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.xy$XYBarRenderer$XYBarRendererState#XYBarRenderer$XYBarRendererState(org.jfree.chart.renderer.xy.XYBarRenderer,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxis()" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.data.general$DefaultPieDataset#getValue(java.lang.Comparable)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setSectionPaint(java.lang.Comparable,java.awt.Paint)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator(java.util.Locale)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setDataset(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.data.general$DefaultPieDataset#DefaultPieDataset()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.title$TextTitle#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.data.general$DefaultPieDataset#getKeys()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.data.general$DefaultPieDataset#setValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.util.Locale)";
  "org.jfree.chart.plot$PiePlot#<clinit>()" -> "org.jfree.chart.util$ResourceBundleWrapper#getBundle(java.lang.String)";
  "org.jfree.chart.plot$PiePlot#<clinit>()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.axis$Axis#createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$Axis#createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#getCursor()";
  "org.jfree.chart.axis$Axis#createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart$ChartRenderingInfo#getEntityCollection()";
  "org.jfree.chart.axis$Axis#createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#getOwner()";
  "org.jfree.chart.axis$Axis#createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.entity$AxisEntity#AxisEntity(java.awt.Shape,org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$Axis#createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#equals(java.lang.Object)";
  "org.jfree.chart.axis$LogAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.chart.axis$LogAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$LogAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isVisible()";
  "org.jfree.chart.axis$LogAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$LogAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#setTicks(java.util.List)";
  "org.jfree.chart.axis$LogAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$LogAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$LogAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$LogAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#AxisState(double)";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.util$RectangleInsets#getTop()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$Axis#getTickLabelInsets()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.data.time$DateRange#getUpperDate()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateTickUnit#dateToString(java.util.Date)";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.util$RectangleInsets#getBottom()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.data.time$DateRange#getLowerDate()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateAxis#getDateFormatOverride()";
  "org.jfree.chart.plot$Marker#setLabelFont(java.awt.Font)" -> "org.jfree.chart.event$MarkerChangeEvent#MarkerChangeEvent(org.jfree.chart.plot.Marker)";
  "org.jfree.chart.plot$Marker#setLabelFont(java.awt.Font)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.data.xy$XYSeriesCollection#getRangeUpperBound(boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getSeries(int)";
  "org.jfree.data.xy$XYSeriesCollection#getRangeUpperBound(boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.data.xy$XYSeriesCollection#getRangeUpperBound(boolean)" -> "org.jfree.data.xy$XYSeries#getMaxY()";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthConstraintType()";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#trimToContentWidth(double)";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeight()";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidth()";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightConstraintType()";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightRange()";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthRange()";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#trimToContentHeight(double)";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#trimToContentWidth(org.jfree.data.Range)";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#trimToContentHeight(org.jfree.data.Range)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#XYBarRenderer(double)" -> "org.jfree.chart.util$StandardGradientPaintTransformer#StandardGradientPaintTransformer()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#XYBarRenderer(double)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#XYBarRenderer(double)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#<clinit>()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#XYBarRenderer(double)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#getDefaultBarPainter()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#XYBarRenderer(double)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#AbstractXYItemRenderer()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#XYBarRenderer(double)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#getDefaultShadowsVisible()";
  "org.jfree.chart.util$StandardGradientPaintTransformer#StandardGradientPaintTransformer()" -> "org.jfree.chart.util$GradientPaintTransformType#<clinit>()";
  "org.jfree.chart.util$StandardGradientPaintTransformer#StandardGradientPaintTransformer()" -> "org.jfree.chart.util$StandardGradientPaintTransformer#StandardGradientPaintTransformer(org.jfree.chart.util.GradientPaintTransformType)";
  "org.jfree.data$DefaultKeyedValues#sortByValues(org.jfree.chart.util.SortOrder)" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$DefaultKeyedValues#sortByValues(org.jfree.chart.util.SortOrder)" -> "org.jfree.data$DefaultKeyedValues#clear()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesKey(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getDataBoundsIncludesVisibleSeriesOnly()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisible(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesKey(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesKey(int)";
  "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getDomainBounds(boolean)";
  "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)";
  "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(boolean)";
  "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$IntervalXYDelegate#getDomainBounds(boolean)";
  "org.jfree.chart.plot$SeriesRenderingOrder#equals(java.lang.Object)" -> "org.jfree.chart.plot$SeriesRenderingOrder#toString()";
  "org.jfree.chart.plot$PiePlot#drawRightLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)" -> "org.jfree.chart.plot$PieLabelLinkStyle#<clinit>()";
  "org.jfree.chart.plot$PiePlot#drawRightLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)" -> "org.jfree.chart.plot$PiePlot#getLabelLinkStyle()";
  "org.jfree.chart.plot$PiePlot#drawRightLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.plot$PiePlot#drawRightLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)" -> "org.jfree.chart.plot$PieLabelLinkStyle#equals(java.lang.Object)";
  "org.jfree.chart.plot$PieLabelLinkStyle#<clinit>()" -> "org.jfree.chart.plot$PieLabelLinkStyle#PieLabelLinkStyle(java.lang.String)";
  "org.jfree.data.time$TimeSeriesCollection#getX(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeriesCollection#getX(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeriesCollection#getX(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeriesCollection#getX(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Month#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeriesCollection#getX(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimePeriodAnchor#<clinit>()";
  "org.jfree.data.time$TimeSeriesCollection#getX(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeriesCollection#getX(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeriesCollection#getX(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,double,float,float)" -> "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)";
  "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,double,float,float)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.chart$LegendItem#setDataset(org.jfree.data.general.Dataset)";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.chart$LegendItem#<clinit>()";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.data.general$DefaultPieDataset#getKeys()";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.chart$LegendItem#setSeriesIndex(int)";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.data.general$DefaultPieDataset#getValue(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.data.general$DefaultPieDataset#getIndex(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.chart.plot$PiePlot#getLegendItemShape()";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#LegendItemCollection()";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.chart.plot$PiePlot#getDataset()";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.chart$LegendItem#setSeriesKey(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.block$BlockResult#getEntityCollection()";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.util$HorizontalAlignment#<clinit>()";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.title$Title#getHorizontalAlignment()";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.block$BlockParams#BlockParams()";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.util$VerticalAlignment#<clinit>()";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.block$BlockParams#setGenerateEntities(boolean)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart$JFreeChart#createAlignedRectangle2D(org.jfree.chart.util.Size2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.title$Title#getPosition()";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.title$Title#getVerticalAlignment()";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.axis$DateAxis#setTimeZone(java.util.TimeZone)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$DateAxis#setTimeZone(java.util.TimeZone)" -> "org.jfree.chart.axis$ValueAxis#setStandardTickUnits(org.jfree.chart.axis.TickUnitSource)";
  "org.jfree.chart.axis$DateAxis#setTimeZone(java.util.TimeZone)" -> "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)";
  "org.jfree.chart.axis$DateAxis#setTimeZone(java.util.TimeZone)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$DateAxis#setTimeZone(java.util.TimeZone)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.axis$DateAxis#setTimeZone(java.util.TimeZone)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart.axis$DateAxis#setTimeZone(java.util.TimeZone)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)" -> "org.jfree.chart.axis$Axis#equals(java.lang.Object)";
  "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)" -> "org.jfree.data$Range#equals(java.lang.Object)";
  "org.jfree.chart.axis$Axis#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.axis$Axis#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.axis$Axis#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesShape(int,java.awt.Shape,boolean)" -> "org.jfree.chart.util$ShapeList#setShape(int,java.awt.Shape)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesShape(int,java.awt.Shape,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.util$ShapeList#setShape(int,java.awt.Shape)" -> "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#clearAnnotations()" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$IntervalMarker#IntervalMarker(double,double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)" -> "org.jfree.chart.util$LengthAdjustmentType#<clinit>()";
  "org.jfree.chart.plot$IntervalMarker#IntervalMarker(double,double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)" -> "org.jfree.chart.plot$Marker#Marker(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)";
  "org.jfree.chart.plot$IntervalMarker#IntervalMarker(double,double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)" -> "org.jfree.chart.plot$Marker#setLabelOffsetType(org.jfree.chart.util.LengthAdjustmentType)";
  "org.jfree.chart.util$LengthAdjustmentType#<clinit>()" -> "org.jfree.chart.util$LengthAdjustmentType#LengthAdjustmentType(java.lang.String)";
  "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,java.lang.Number)" -> "org.jfree.data$DefaultKeyedValues#getItemCount()";
  "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,java.lang.Number)" -> "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)";
  "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,java.lang.Number)" -> "org.jfree.data$DefaultKeyedValues#rebuildIndex()";
  "org.jfree.data.general$DatasetUtilities#calculatePieDatasetTotal(org.jfree.data.general.PieDataset)" -> "org.jfree.data.general$DefaultPieDataset#getValue(java.lang.Comparable)";
  "org.jfree.data.general$DatasetUtilities#calculatePieDatasetTotal(org.jfree.data.general.PieDataset)" -> "org.jfree.data.general$DefaultPieDataset#getKeys()";
  "org.jfree.chart.plot$XYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart$JFreeChart#createAlignedRectangle2D(org.jfree.chart.util.Size2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)" -> "org.jfree.chart.util$VerticalAlignment#<clinit>()";
  "org.jfree.chart$JFreeChart#createAlignedRectangle2D(org.jfree.chart.util.Size2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)" -> "org.jfree.chart.util$HorizontalAlignment#<clinit>()";
  "org.jfree.data.time$TimeSeries#update(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimeSeries#update(int,java.lang.Number)";
  "org.jfree.data.time$TimeSeries#update(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,java.lang.Number)";
  "org.jfree.data.time$TimeSeries#update(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.general$SeriesException#SeriesException(java.lang.String)";
  "org.jfree.data.time$TimeSeries#update(int,java.lang.Number)" -> "org.jfree.data.time$TimeSeries#maxIgnoreNaN(double,double)";
  "org.jfree.data.time$TimeSeries#update(int,java.lang.Number)" -> "org.jfree.data.time$TimeSeriesDataItem#getValue()";
  "org.jfree.data.time$TimeSeries#update(int,java.lang.Number)" -> "org.jfree.data.time$TimeSeries#findBoundsByIteration()";
  "org.jfree.data.time$TimeSeries#update(int,java.lang.Number)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#update(int,java.lang.Number)" -> "org.jfree.data.time$TimeSeries#minIgnoreNaN(double,double)";
  "org.jfree.data.time$TimeSeries#update(int,java.lang.Number)" -> "org.jfree.data.time$TimeSeriesDataItem#setValue(java.lang.Number)";
  "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape)" -> "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String)";
  "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String)" -> "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String,java.lang.String)";
  "org.jfree.chart.plot$XYPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.entity$PlotEntity#hashCode()" -> "org.jfree.chart.entity$ChartEntity#getURLText()";
  "org.jfree.chart.entity$PlotEntity#hashCode()" -> "org.jfree.chart.entity$ChartEntity#getToolTipText()";
  "org.jfree.chart.title$TextTitle#arrangeRN(java.awt.Graphics2D,org.jfree.data.Range)" -> "org.jfree.chart.title$TextTitle#arrangeNN(java.awt.Graphics2D)";
  "org.jfree.chart.title$TextTitle#arrangeRN(java.awt.Graphics2D,org.jfree.data.Range)" -> "org.jfree.chart.title$TextTitle#arrangeFN(java.awt.Graphics2D,double)";
  "org.jfree.chart.title$TextTitle#arrangeRN(java.awt.Graphics2D,org.jfree.data.Range)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.title$TextTitle#arrangeRN(java.awt.Graphics2D,org.jfree.data.Range)" -> "org.jfree.data$Range#constrain(double)";
  "org.jfree.chart.title$TextTitle#arrangeRN(java.awt.Graphics2D,org.jfree.data.Range)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.title$TextTitle#arrangeNN(java.awt.Graphics2D)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.title$TextTitle#arrangeNN(java.awt.Graphics2D)" -> "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)";
  "org.jfree.data.xy$XYDataItem#compareTo(java.lang.Object)" -> "org.jfree.data.xy$XYDataItem#getX()";
  "org.jfree.chart.plot$CategoryPlot#setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)";
  "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,float,float)" -> "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,float,float)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,float,float)" -> "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)";
  "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.axis$NumberAxis3D#NumberAxis3D(java.lang.String)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart.title$LegendTitle#setLegendItemGraphicEdge(org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$LegendTitle#setLegendItemGraphicEdge(org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItemURLGenerator()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getItemShapeVisible(int,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesFillPaint(int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#generateLabel(org.jfree.data.xy.XYDataset,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItemLabelGenerator()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesPaint(int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesKey(int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setLabelPaint(java.awt.Paint)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setDatasetIndex(int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getItemShapeFilled(int,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesKey(int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setLabelFont(java.awt.Font)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlinePaint(int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setSeriesKey(java.lang.Comparable)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlineStroke(int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#<clinit>()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextPaint(int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextFont(int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItemToolTipGenerator()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesStroke(int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupLegendShape(int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setDataset(org.jfree.data.general.Dataset)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemVisible(int,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getPlot()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setSeriesIndex(int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesKey(int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart.plot$XYPlot#getDataset(int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getItemLineVisible(int,int)";
  "org.jfree.chart.axis$NumberAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getStandardTickUnits()";
  "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#getTickUnit()";
  "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnits#getCeilingTickUnit(double)";
  "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnit#getSize()";
  "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnits#getCeilingTickUnit(org.jfree.chart.axis.TickUnit)";
  "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnits#getLargerTickUnit(org.jfree.chart.axis.TickUnit)";
  "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)";
  "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)";
  "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)" -> "org.jfree.data.time$Month#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)" -> "org.jfree.data.time$Day#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)" -> "org.jfree.data.time$Year#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$Month#compareTo(java.lang.Object)" -> "org.jfree.data.time$Month#getMonth()";
  "org.jfree.data.time$Month#compareTo(java.lang.Object)" -> "org.jfree.data.time$Month#getYearValue()";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.xy$XYItemRendererState#setProcessVisibleItemsOnly(boolean)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#plotChanged(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#plotChanged(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.block$BlockContainer#BlockContainer()" -> "org.jfree.chart.block$BlockContainer#BlockContainer(org.jfree.chart.block.Arrangement)";
  "org.jfree.chart.block$BlockContainer#BlockContainer()" -> "org.jfree.chart.block$BorderArrangement#BorderArrangement()";
  "org.jfree.chart.block$BlockContainer#BlockContainer(org.jfree.chart.block.Arrangement)" -> "org.jfree.chart.block$AbstractBlock#AbstractBlock()";
  "org.jfree.chart.title$Title#equals(java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#generateLabelString(org.jfree.data.xy.XYDataset,int,int)" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.plot$XYPlot#setDataset(int,org.jfree.data.xy.XYDataset)" -> "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)";
  "org.jfree.chart.plot$XYPlot#setDataset(int,org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#setDataset(int,org.jfree.data.xy.XYDataset)" -> "org.jfree.data.general$AbstractDataset#removeChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.chart.plot$XYPlot#setDataset(int,org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.plot$XYPlot#getDataset(int)";
  "org.jfree.chart.plot$XYPlot#setDataset(int,org.jfree.data.xy.XYDataset)" -> "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.chart.plot$XYPlot#setDataset(int,org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.axis$DateAxis#correctTickDateForPosition(java.util.Date,org.jfree.chart.axis.DateTickUnit,org.jfree.chart.axis.DateTickMarkPosition)" -> "org.jfree.chart.axis$DateTickUnitType#<clinit>()";
  "org.jfree.chart.axis$DateAxis#correctTickDateForPosition(java.util.Date,org.jfree.chart.axis.DateTickUnit,org.jfree.chart.axis.DateTickMarkPosition)" -> "org.jfree.chart.axis$DateAxis#calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)";
  "org.jfree.chart.axis$DateAxis#correctTickDateForPosition(java.util.Date,org.jfree.chart.axis.DateTickUnit,org.jfree.chart.axis.DateTickMarkPosition)" -> "org.jfree.chart.axis$DateTickUnitType#equals(java.lang.Object)";
  "org.jfree.chart.axis$DateAxis#correctTickDateForPosition(java.util.Date,org.jfree.chart.axis.DateTickUnit,org.jfree.chart.axis.DateTickMarkPosition)" -> "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone,java.util.Locale)";
  "org.jfree.chart.axis$DateAxis#correctTickDateForPosition(java.util.Date,org.jfree.chart.axis.DateTickUnit,org.jfree.chart.axis.DateTickMarkPosition)" -> "org.jfree.data.time$Month#Month(java.util.Date,java.util.TimeZone,java.util.Locale)";
  "org.jfree.chart.axis$DateAxis#correctTickDateForPosition(java.util.Date,org.jfree.chart.axis.DateTickUnit,org.jfree.chart.axis.DateTickMarkPosition)" -> "org.jfree.chart.axis$DateTickUnit#getUnitType()";
  "org.jfree.chart.plot$PolarPlot#refreshAngleTicks()" -> "org.jfree.chart.axis$TickUnit#valueToString(double)";
  "org.jfree.chart.plot$PolarPlot#refreshAngleTicks()" -> "org.jfree.chart.axis$TickUnit#getSize()";
  "org.jfree.chart.plot$PolarPlot#refreshAngleTicks()" -> "org.jfree.chart.axis$NumberTickUnit#valueToString(double)";
  "org.jfree.chart.plot$PolarPlot#refreshAngleTicks()" -> "org.jfree.chart.axis$NumberTick#NumberTick(java.lang.Number,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)";
  "org.jfree.chart.plot$PolarPlot#refreshAngleTicks()" -> "org.jfree.chart.axis$DateTickUnit#valueToString(double)";
  "org.jfree.chart.plot$PolarPlot#refreshAngleTicks()" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart$JFreeChart#getSubtitle(int)";
  "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)";
  "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.plot$Plot#addChangeListener(org.jfree.chart.event.PlotChangeListener)";
  "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart$JFreeChart#getSubtitleCount()";
  "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.title$Title#addChangeListener(org.jfree.chart.event.TitleChangeListener)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$JFreeChart#getSubtitleCount()";
  "org.jfree.chart.title$LegendGraphic#equals(java.lang.Object)" -> "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)";
  "org.jfree.chart.title$LegendGraphic#equals(java.lang.Object)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.title$LegendGraphic#equals(java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)";
  "org.jfree.chart.title$LegendGraphic#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.title$LegendGraphic#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.title$LegendGraphic#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$ValueAxis#resizeRange2(double,double)";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$ValueAxis#resizeRange(double)";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$PlotRenderingInfo#getDataArea()";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$LogAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#resizeRange2(double,double)" -> "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean)";
  "org.jfree.chart.axis$ValueAxis#resizeRange2(double,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$ValueAxis#resizeRange2(double,double)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#resizeRange2(double,double)" -> "org.jfree.chart.axis$ValueAxis#getUpperBound()";
  "org.jfree.chart.axis$ValueAxis#resizeRange2(double,double)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#resizeRange2(double,double)" -> "org.jfree.chart.axis$ValueAxis#getLowerBound()";
  "org.jfree.chart.plot$PiePlot#setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$Month#getLastMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$Month#getFirstMillisecond()";
  "org.jfree.data.general$DefaultPieDataset#getValue(java.lang.Comparable)" -> "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)";
  "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$CategoryPlot#datasetsMappedToRangeAxis(int)";
  "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$CategoryPlot#getRendererForDataset(org.jfree.data.category.CategoryDataset)";
  "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis()";
  "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)";
  "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset)";
  "org.jfree.chart.axis$PeriodAxis#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.axis$PeriodAxis#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)";
  "org.jfree.data.general$AbstractSeriesDataset#AbstractSeriesDataset()" -> "org.jfree.data.general$AbstractDataset#AbstractDataset()";
  "org.jfree.chart.axis$ValueAxis#lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.util$StrokeList#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.util$StrokeList#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)";
  "org.jfree.chart.util$StrokeList#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$StrokeList#getStroke(int)";
  "org.jfree.chart.axis$ValueAxis#clone()" -> "org.jfree.chart.axis$Axis#clone()";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart.plot$Plot#setBackgroundPaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart.plot$Plot#setOutlinePaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart.plot$Plot#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart.plot$Plot#getBackgroundPaint()";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart.plot$Plot#getDrawingSupplier()";
  "org.jfree.chart.axis$Axis#setVisible(boolean)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.data.xy$XYSeriesCollection#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.data.xy$XYSeriesCollection#equals(java.lang.Object)" -> "org.jfree.data.xy$IntervalXYDelegate#equals(java.lang.Object)";
  "org.jfree.data.xy$XYSeriesCollection#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.renderer$AbstractRenderer#getSeriesNegativeItemLabelPosition(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#getSubplotInfo(int)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#getDataArea()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$XYPlot#getRangeAxis()" -> "org.jfree.chart.plot$XYPlot#getRangeAxis(int)";
  "org.jfree.chart.renderer$AbstractRenderer#getItemOutlinePaint(int,int,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlinePaint(int)";
  "org.jfree.chart.util$LengthAdjustmentType#readResolve()" -> "org.jfree.chart.util$LengthAdjustmentType#equals(java.lang.Object)";
  "org.jfree.chart.util$LengthAdjustmentType#readResolve()" -> "org.jfree.chart.util$LengthAdjustmentType#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer#calculateBarW0(org.jfree.chart.plot.CategoryPlot,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.renderer.category.CategoryItemRendererState,int,int)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer#calculateBarW0(org.jfree.chart.plot.CategoryPlot,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.renderer.category.CategoryItemRendererState,int,int)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer#calculateBarW0(org.jfree.chart.plot.CategoryPlot,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.renderer.category.CategoryItemRendererState,int,int)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getColumnCount()";
  "org.jfree.chart.renderer.category$BarRenderer#calculateBarW0(org.jfree.chart.plot.CategoryPlot,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.renderer.category.CategoryItemRendererState,int,int)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer#calculateBarW0(org.jfree.chart.plot.CategoryPlot,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.renderer.category.CategoryItemRendererState,int,int)" -> "org.jfree.chart.renderer.category$BarRenderer#calculateSeriesWidth(double,org.jfree.chart.axis.CategoryAxis,int,int)";
  "org.jfree.chart.renderer.category$BarRenderer#calculateBarW0(org.jfree.chart.plot.CategoryPlot,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.renderer.category.CategoryItemRendererState,int,int)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getRowCount()";
  "org.jfree.chart.renderer.category$BarRenderer#calculateBarW0(org.jfree.chart.plot.CategoryPlot,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.renderer.category.CategoryItemRendererState,int,int)" -> "org.jfree.chart.renderer.category$BarRenderer#getItemMargin()";
  "org.jfree.chart.renderer.category$BarRenderer#calculateBarW0(org.jfree.chart.plot.CategoryPlot,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.renderer.category.CategoryItemRendererState,int,int)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge()";
  "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.data.time$Month#Month(int,int)" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.data.time$Month#Month(int,int)" -> "org.jfree.data.time$Month#peg(java.util.Calendar)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#XYAreaRenderer(int)" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#XYAreaRenderer(int,org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#XYAreaRenderer(int,org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)" -> "org.jfree.chart.util$StandardGradientPaintTransformer#StandardGradientPaintTransformer()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#XYAreaRenderer(int,org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#AbstractXYItemRenderer()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#XYAreaRenderer(int,org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.XYURLGenerator)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#XYAreaRenderer(int,org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator)";
  "org.jfree.chart.plot$MultiplePiePlot#prefetchSectionPaints()" -> "org.jfree.chart.plot$Plot#getDrawingSupplier()";
  "org.jfree.chart.plot$MultiplePiePlot#prefetchSectionPaints()" -> "org.jfree.chart.plot$PiePlot#getSectionPaint(java.lang.Comparable)";
  "org.jfree.chart.plot$MultiplePiePlot#prefetchSectionPaints()" -> "org.jfree.chart$JFreeChart#getPlot()";
  "org.jfree.chart.plot$MultiplePiePlot#prefetchSectionPaints()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#getNextPaint()";
  "org.jfree.chart.plot$MultiplePiePlot#prefetchSectionPaints()" -> "org.jfree.chart.plot$MultiplePiePlot#getPieChart()";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$LogAxis#configure()";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$PeriodAxis#configure()";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis(int)";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#addException(java.util.Date)" -> "org.jfree.chart.axis$SegmentedTimeline#getTime(java.util.Date)";
  "org.jfree.chart.axis$SegmentedTimeline#addException(java.util.Date)" -> "org.jfree.chart.axis$SegmentedTimeline#addException(long)";
  "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int,int,int)" -> "org.jfree.data.time$SpreadsheetDate#calcSerial(int,int,int)";
  "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int,int,int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int,int,int)" -> "org.jfree.data.time$SerialDate#SerialDate()";
  "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int,int,int)" -> "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)";
  "org.jfree.data.time$SpreadsheetDate#calcSerial(int,int,int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SpreadsheetDate#calcSerial(int,int,int)" -> "org.jfree.data.time$SerialDate#isLeapYear(int)";
  "org.jfree.data.time$SpreadsheetDate#calcSerial(int,int,int)" -> "org.jfree.data.time$SerialDate#leapYearCount(int)";
  "org.jfree.chart.plot$PolarPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset)";
  "org.jfree.chart.plot$PolarPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)";
  "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor)";
  "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$G2TextMeasurer#G2TextMeasurer(java.awt.Graphics2D)";
  "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,org.jfree.chart.text.TextMeasurer)";
  "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextBlockAnchor#<clinit>()";
  "org.jfree.data$Range#scale(org.jfree.data.Range,double)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.data$Range#scale(org.jfree.data.Range,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data$Range#scale(org.jfree.data.Range,double)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$PeriodAxis#PeriodAxis(java.lang.String,org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod,java.util.TimeZone,java.util.Locale)" -> "org.jfree.data.time$Year#peg(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#PeriodAxis(java.lang.String,org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod,java.util.TimeZone,java.util.Locale)" -> "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean)";
  "org.jfree.chart.axis$PeriodAxis#PeriodAxis(java.lang.String,org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod,java.util.TimeZone,java.util.Locale)" -> "org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)";
  "org.jfree.chart.axis$PeriodAxis#PeriodAxis(java.lang.String,org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod,java.util.TimeZone,java.util.Locale)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.axis$PeriodAxis#PeriodAxis(java.lang.String,org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod,java.util.TimeZone,java.util.Locale)" -> "org.jfree.data.time$Day#peg(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#PeriodAxis(java.lang.String,org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod,java.util.TimeZone,java.util.Locale)" -> "org.jfree.data.time$Month#peg(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#PeriodAxis(java.lang.String,org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod,java.util.TimeZone,java.util.Locale)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.axis$PeriodAxis#PeriodAxis(java.lang.String,org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod,java.util.TimeZone,java.util.Locale)" -> "org.jfree.chart.axis$ValueAxis#ValueAxis(java.lang.String,org.jfree.chart.axis.TickUnitSource)";
  "org.jfree.data.time$Year#peg(java.util.Calendar)" -> "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Year#peg(java.util.Calendar)" -> "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.xy$DefaultXYDataset#addSeries(java.lang.Comparable,double[][])" -> "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)";
  "org.jfree.data.xy$DefaultXYDataset#addSeries(java.lang.Comparable,double[][])" -> "org.jfree.data.general$AbstractDataset#notifyListeners(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.data.xy$DefaultXYDataset#addSeries(java.lang.Comparable,double[][])" -> "org.jfree.data.xy$DefaultXYDataset#indexOf(java.lang.Comparable)";
  "org.jfree.chart.axis$SegmentedTimeline#containsDomainRange(java.util.Date,java.util.Date)" -> "org.jfree.chart.axis$SegmentedTimeline#getTime(java.util.Date)";
  "org.jfree.chart.axis$SegmentedTimeline#containsDomainRange(java.util.Date,java.util.Date)" -> "org.jfree.chart.axis$SegmentedTimeline#containsDomainRange(long,long)";
  "org.jfree.data.time$TimePeriodAnchor#readResolve()" -> "org.jfree.data.time$TimePeriodAnchor#<clinit>()";
  "org.jfree.data.time$TimePeriodAnchor#readResolve()" -> "org.jfree.data.time$TimePeriodAnchor#equals(java.lang.Object)";
  "org.jfree.data.time$TimePeriodAnchor#<clinit>()" -> "org.jfree.data.time$TimePeriodAnchor#TimePeriodAnchor(java.lang.String)";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlineStroke(int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getDrawingSupplier()";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlineStroke(int)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlineStroke()";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlineStroke(int)" -> "org.jfree.chart.renderer$AbstractRenderer#getSeriesOutlineStroke(int)";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlineStroke(int)" -> "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlineStroke(int,java.awt.Stroke,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlineStroke(int)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getDrawingSupplier()";
  "org.jfree.chart.plot$XYPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.plot$XYPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.plot$XYPlot#getRangeAxisLocation(int)" -> "org.jfree.chart.axis$AxisLocation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getRangeAxisLocation(int)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisLocation()";
  "org.jfree.chart.plot$XYPlot#getRangeAxisLocation(int)" -> "org.jfree.chart.axis$AxisLocation#getOpposite(org.jfree.chart.axis.AxisLocation)";
  "org.jfree.chart.plot$XYPlot#getRangeAxisLocation(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#getRangeAxisLocation(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.axis$AxisLocation#<clinit>()" -> "org.jfree.chart.axis$AxisLocation#AxisLocation(java.lang.String)";
  "org.jfree.data.xy$XYSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)";
  "org.jfree.data.xy$XYSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.data.xy$XYDataItem#equals(java.lang.Object)";
  "org.jfree.data.xy$XYSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.data.xy$XYSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)";
  "org.jfree.data.xy$XYSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.data$UnknownKeyException#UnknownKeyException(java.lang.String)";
  "org.jfree.data.xy$XYSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.chart.axis$NumberTickUnit#equals(java.lang.Object)";
  "org.jfree.data.xy$XYSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.data.general$Series#getKey()";
  "org.jfree.data.xy$XYSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#equals(java.lang.Object)";
  "org.jfree.data.xy$XYSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.data.xy$XYSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.chart.axis$DateTickUnit#equals(java.lang.Object)";
  "org.jfree.data.xy$XYSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.chart.axis$TickUnit#equals(java.lang.Object)";
  "org.jfree.data.xy$XYSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.data.time$Month#equals(java.lang.Object)";
  "org.jfree.chart.block$RectangleConstraint#toFixedHeight(double)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#toFixedHeight(double)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.block$RectangleConstraint#toFixedHeight(double)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getSeriesToolTipGenerator(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.axis$ValueTick#equals(java.lang.Object)" -> "org.jfree.chart.axis$Tick#equals(java.lang.Object)";
  "org.jfree.chart.axis$ValueTick#equals(java.lang.Object)" -> "org.jfree.chart.axis$TickType#equals(java.lang.Object)";
  "org.jfree.chart.util$BooleanList#equals(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)";
  "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()";
  "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)" -> "org.jfree.chart.axis$TickUnit#equals(java.lang.Object)";
  "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)" -> "org.jfree.chart.axis$NumberTickUnit#equals(java.lang.Object)";
  "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)" -> "org.jfree.data.xy$XYDataItem#equals(java.lang.Object)";
  "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)" -> "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)";
  "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesKey(int)";
  "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)" -> "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)";
  "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesKey(int)";
  "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesKey(int)";
  "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)" -> "org.jfree.data.time$Month#equals(java.lang.Object)";
  "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()";
  "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#equals(java.lang.Object)";
  "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)" -> "org.jfree.chart.axis$DateTickUnit#equals(java.lang.Object)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart$LegendItem#getToolTipText()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.title$LegendGraphic#setLine(java.awt.Shape)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.title$LegendGraphic#setShapeFilled(boolean)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.block$BlockContainer#BlockContainer(org.jfree.chart.block.Arrangement)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.title$LegendGraphic#setLinePaint(java.awt.Paint)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.title$LegendItemBlockContainer#LegendItemBlockContainer(org.jfree.chart.block.Arrangement,org.jfree.data.general.Dataset,java.lang.Comparable)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block,java.lang.Object)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.title$LegendGraphic#setShapeAnchor(org.jfree.chart.util.RectangleAnchor)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart$LegendItem#getLineStroke()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart$LegendItem#getURLText()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart$LegendItem#isShapeVisible()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart$LegendItem#getDataset()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.title$LegendTitle#getLegendItemGraphicAnchor()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.block$BorderArrangement#BorderArrangement()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart$LegendItem#getSeriesKey()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.title$LegendGraphic#setOutlinePaint(java.awt.Paint)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.title$LegendGraphic#setLineVisible(boolean)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.title$LegendGraphic#setShapeVisible(boolean)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart$LegendItem#getLabel()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.title$LegendTitle#getLegendItemGraphicLocation()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.title$LegendGraphic#setOutlineStroke(java.awt.Stroke)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.block$LabelBlock#<clinit>()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.title$LegendGraphic#setFillPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart$LegendItem#getFillPaint()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart$LegendItem#getOutlinePaint()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.title$LegendItemBlockContainer#setURLText(java.lang.String)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.block$AbstractBlock#setPadding(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart$LegendItem#getLabelPaint()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart$LegendItem#getOutlineStroke()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.title$LegendItemBlockContainer#setToolTipText(java.lang.String)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.block$LabelBlock#LabelBlock(java.lang.String,java.awt.Font,java.awt.Paint)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart$LegendItem#isLineVisible()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart$LegendItem#isShapeOutlineVisible()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart$LegendItem#getFillPaintTransformer()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart$LegendItem#isShapeFilled()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.block$CenterArrangement#CenterArrangement()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.title$LegendGraphic#setShapeLocation(org.jfree.chart.util.RectangleAnchor)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart$LegendItem#getLabelFont()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart$LegendItem#getLine()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.title$LegendGraphic#setShapeOutlineVisible(boolean)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.title$LegendGraphic#setLineStroke(java.awt.Stroke)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.title$LegendGraphic#LegendGraphic(java.awt.Shape,java.awt.Paint)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart$LegendItem#getShape()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart$LegendItem#getLinePaint()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#calculateRangeMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$LengthAdjustmentType#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelPaint()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelTextAnchor()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.renderer.category$BarRenderer3D#getXOffset()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getOutlinePaint()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelAnchor()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getPaint()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabel()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelFont()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$ValueMarker#getValue()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelOffset()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getOrientation()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.renderer.category$BarRenderer3D#getYOffset()";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#getLegendItems()" -> "org.jfree.chart.plot$CategoryPlot#getDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)";
  "org.jfree.chart.plot$CategoryPlot#getLegendItems()" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)";
  "org.jfree.chart.plot$CategoryPlot#getLegendItems()" -> "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)";
  "org.jfree.chart.plot$CategoryPlot#getLegendItems()" -> "org.jfree.chart.plot$CategoryPlot#getRenderer(int)";
  "org.jfree.chart.plot$CategoryPlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#LegendItemCollection()";
  "org.jfree.chart.plot$CategoryPlot#getLegendItems()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#getDataset(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#getDataset(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositionOffset(int)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositionOffset(int)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.entity$LegendItemEntity#clone()" -> "org.jfree.chart.entity$ChartEntity#clone()";
  "org.jfree.chart.util$PaintList#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.util$PaintList#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.util$PaintList#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$PaintList#getPaint(int)";
  "org.jfree.chart.util$StrokeList#equals(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation,org.jfree.chart.util.Layer)" -> "org.jfree.chart.event$RendererChangeEvent#RendererChangeEvent(java.lang.Object)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation,org.jfree.chart.util.Layer)" -> "org.jfree.chart.util$Layer#equals(java.lang.Object)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation,org.jfree.chart.util.Layer)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation,org.jfree.chart.util.Layer)" -> "org.jfree.chart.renderer$AbstractRenderer#notifyListeners(org.jfree.chart.event.RendererChangeEvent)";
  "org.jfree.chart.title$LegendGraphic#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$ShapeUtilities#createTranslatedShape(java.awt.Shape,org.jfree.chart.util.RectangleAnchor,double,double)";
  "org.jfree.chart.title$LegendGraphic#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.block$AbstractBlock#trimBorder(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$LegendGraphic#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.title$LegendGraphic#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.block$AbstractBlock#trimMargin(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$LegendGraphic#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleAnchor#coordinates(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleAnchor)";
  "org.jfree.chart.title$LegendGraphic#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.block$AbstractBlock#drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$LegendGraphic#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.title$LegendGraphic#getLine()";
  "org.jfree.chart.title$LegendGraphic#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$StandardGradientPaintTransformer#transform(java.awt.GradientPaint,java.awt.Shape)";
  "org.jfree.chart.title$LegendGraphic#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.block$AbstractBlock#trimPadding(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$LegendGraphic#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.util$ShapeUtilities#createTranslatedShape(java.awt.Shape,org.jfree.chart.util.RectangleAnchor,double,double)" -> "org.jfree.chart.util$RectangleAnchor#coordinates(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleAnchor)";
  "org.jfree.chart.util$ShapeUtilities#createTranslatedShape(java.awt.Shape,org.jfree.chart.util.RectangleAnchor,double,double)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.data.xy$XYSeries#addOrUpdate(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.xy$XYSeries#addOrUpdate(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYDataItem#getX()";
  "org.jfree.data.xy$XYSeries#addOrUpdate(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem)";
  "org.jfree.data.xy$XYSeries#addOrUpdate(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYSeries#findBoundsByIteration()";
  "org.jfree.data.xy$XYSeries#addOrUpdate(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYSeries#updateBoundsForRemovedItem(org.jfree.data.xy.XYDataItem)";
  "org.jfree.data.xy$XYSeries#addOrUpdate(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYSeries#updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)";
  "org.jfree.data.xy$XYSeries#addOrUpdate(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYDataItem#clone()";
  "org.jfree.data.xy$XYSeries#addOrUpdate(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYSeries#getItemCount()";
  "org.jfree.data.xy$XYSeries#addOrUpdate(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYDataItem#getYValue()";
  "org.jfree.data.xy$XYSeries#addOrUpdate(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYSeries#minIgnoreNaN(double,double)";
  "org.jfree.data.xy$XYSeries#addOrUpdate(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYDataItem#setY(java.lang.Number)";
  "org.jfree.data.xy$XYSeries#addOrUpdate(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYSeries#indexOf(java.lang.Number)";
  "org.jfree.data.xy$XYSeries#addOrUpdate(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYDataItem#getY()";
  "org.jfree.data.general$Series#fireSeriesChanged()" -> "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)";
  "org.jfree.data.general$Series#fireSeriesChanged()" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)" -> "org.jfree.data.time$SerialDate#createInstance(int,int,int)";
  "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)" -> "org.jfree.data.time$Day#peg(java.util.Calendar)";
  "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#createInstance(int,int,int)" -> "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int,int,int)";
  "org.jfree.data.time$SerialDate#createInstance(int,int,int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.axis$AxisSpace#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$StandardChartTheme#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.entity$JFreeChartEntity#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.plot$PolarPlot#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.entity$PlotEntity#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.plot$CategoryPlot#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.entity$ChartEntity#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.title$TextTitle#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.block$LabelBlock#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.data.xy$DefaultXYDataset#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.data.xy$IntervalXYDelegate#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.title$LegendGraphic#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.plot$MultiplePiePlot#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.plot$XYPlot#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.data.general$DefaultPieDataset#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.data.xy$XYSeriesCollection#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.util$StandardGradientPaintTransformer#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.renderer.xy$XYStepRenderer#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.axis$DateAxis#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.plot$PiePlot#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.axis$PeriodAxis#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.plot$CombinedDomainXYPlot#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.plot$CombinedRangeXYPlot#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.block$BlockContainer#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.entity$AxisEntity#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.entity$TitleEntity#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.plot$Plot#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.title$Title#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.data$DefaultKeyedValues#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.axis$ValueAxis#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.axis$NumberAxis#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.data.general$AbstractDataset#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.util$Size2D#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.renderer.xy$XYBarRenderer#clone()";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart.entity$LegendItemEntity#clone()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#setShadowVisible(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelOffsetType()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$IntervalMarker#getEndValue()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelFont()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelPaint()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$IntervalMarker#getGradientPaintTransformer()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$LengthAdjustmentType#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.data$Range#intersects(double,double)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$ValueMarker#getValue()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#calculateRangeMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getOrientation()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelTextAnchor()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelOffset()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getStroke()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelAnchor()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$IntervalMarker#getStartValue()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getPaint()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getOutlineStroke()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getOutlinePaint()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$StandardGradientPaintTransformer#transform(java.awt.GradientPaint,java.awt.Shape)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getAlpha()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabel()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.data.time$Month#peg(java.util.Calendar)" -> "org.jfree.data.time$Month#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Month#peg(java.util.Calendar)" -> "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeries#delete(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#delete(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)";
  "org.jfree.data.time$TimeSeries#delete(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#updateBoundsForRemovedItem(org.jfree.data.time.TimeSeriesDataItem)";
  "org.jfree.chart.block$LineBorder#LineBorder()" -> "org.jfree.chart.block$LineBorder#LineBorder(java.awt.Paint,java.awt.Stroke,org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart.block$LineBorder#LineBorder()" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.block$LineBorder#LineBorder()" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.title$Title#hashCode()" -> "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)";
  "org.jfree.chart.title$Title#hashCode()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$RectangleEdge#coordinate(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.text$TextLine#calculateDimensions(java.awt.Graphics2D)";
  "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#equals(java.lang.Object)" -> "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$Plot#getRectX(double,double,double,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$XYPlot#addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)";
  "org.jfree.chart.plot$XYPlot#addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)" -> "org.jfree.chart.plot$Marker#addChangeListener(org.jfree.chart.event.MarkerChangeListener)";
  "org.jfree.chart.plot$XYPlot#addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.axis$DateAxis#setDateFormatOverride(java.text.DateFormat)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$DateAxis#setDateFormatOverride(java.text.DateFormat)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$XYPlot#getDomainAxisLocation()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.axis$SegmentedTimeline#toMillisecond(long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#inExcludeSegments()";
  "org.jfree.chart.axis$SegmentedTimeline#toMillisecond(long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#inExceptionSegments()";
  "org.jfree.chart.axis$SegmentedTimeline#toMillisecond(long)" -> "org.jfree.chart.axis$SegmentedTimeline#getTimeFromLong(long)";
  "org.jfree.chart.axis$SegmentedTimeline#toMillisecond(long)" -> "org.jfree.chart.axis$SegmentedTimeline#getExceptionSegmentCount(long,long)";
  "org.jfree.chart.axis$SegmentedTimeline#toMillisecond(long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#SegmentedTimeline$Segment(org.jfree.chart.axis.SegmentedTimeline,long)";
  "org.jfree.chart.axis$SegmentedTimeline#toMillisecond(long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#inc()";
  "org.jfree.chart.axis$SegmentedTimeline#toMillisecond(long)" -> "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inExcludeSegments()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#clone()" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#clone()" -> "org.jfree.chart.axis$PeriodAxis#configure()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#clone()" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#clone()" -> "org.jfree.chart.axis$LogAxis#configure()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#clone()" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#clone()" -> "org.jfree.chart.plot$Plot#setParent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#clone()" -> "org.jfree.chart.plot$XYPlot#clone()";
  "org.jfree.chart.plot$CategoryPlot#clearAnnotations()" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#setDataset(int,org.jfree.data.category.CategoryDataset)" -> "org.jfree.data.general$AbstractDataset#removeChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#setDataset(int,org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setDataset(int,org.jfree.data.category.CategoryDataset)" -> "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)";
  "org.jfree.chart.plot$CategoryPlot#setDataset(int,org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#setDataset(int,org.jfree.data.category.CategoryDataset)" -> "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#setDataset(int,org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.data.xy$XYSeriesCollection#removeAllSeries()" -> "org.jfree.data.general$Series#removeChangeListener(org.jfree.data.general.SeriesChangeListener)";
  "org.jfree.data.xy$XYSeriesCollection#removeAllSeries()" -> "org.jfree.data.general$AbstractDataset#fireDatasetChanged()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)";
  "org.jfree.data.xy$XYSeriesCollection#setSelected(int,int,boolean)" -> "org.jfree.data.xy$XYSeriesCollection#setSelected(int,int,boolean,boolean)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$PiePlot3D#PiePlot3D(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator(java.util.Locale)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#inExcludeSegments()" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentNumberRelativeToGroup()";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#inExcludeSegments()" -> "org.jfree.chart.axis$SegmentedTimeline#<clinit>()";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentNumberRelativeToGroup()" -> "org.jfree.chart.axis$SegmentedTimeline#<clinit>()";
  "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesKey(int)";
  "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesKey(int)";
  "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int)" -> "org.jfree.chart.axis$DateTickUnit#toString()";
  "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int)" -> "org.jfree.data.time$Day#toString()";
  "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesKey(int)";
  "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int)" -> "org.jfree.data.xy$XYDataItem#toString()";
  "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int)" -> "org.jfree.chart.axis$NumberTickUnit#toString()";
  "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int)" -> "org.jfree.data.time$Month#toString()";
  "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int)" -> "org.jfree.data.time$Year#toString()";
  "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int)" -> "org.jfree.data.time$RegularTimePeriod#toString()";
  "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int)" -> "org.jfree.data.time$SerialDate#toString()";
  "org.jfree.data.xy$DefaultXYDataset#getSeriesKey(int)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getDrawingSupplier()" -> "org.jfree.chart.plot$Plot#getDrawingSupplier()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getDrawingSupplier()" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getPlot()";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)" -> "org.jfree.chart.block$BlockContainer#BlockContainer(org.jfree.chart.block.Arrangement)";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)" -> "org.jfree.chart.title$LegendTitle#<clinit>()";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)" -> "org.jfree.chart.title$Title#Title()";
  "org.jfree.chart.plot$CategoryPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.plot$XYPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.plot$CategoryPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()";
  "org.jfree.chart.plot$CategoryPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.plot$PolarPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)";
  "org.jfree.chart.plot$XYPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.plot$XYPlot#configureDomainAxes()";
  "org.jfree.chart.plot$XYPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.event$RendererChangeEvent#getSeriesVisibilityChanged()";
  "org.jfree.chart.plot$XYPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.plot$XYPlot#configureRangeAxes()";
  "org.jfree.chart.axis$ValueTick#ValueTick(double,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)" -> "org.jfree.chart.axis$TickType#<clinit>()";
  "org.jfree.chart.axis$ValueTick#ValueTick(double,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)" -> "org.jfree.chart.axis$ValueTick#ValueTick(org.jfree.chart.axis.TickType,double,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$Month#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeriesCollection#clearSelection()" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()";
  "org.jfree.data.time$TimeSeriesCollection#clearSelection()" -> "org.jfree.data.time$TimeSeriesCollection#setSelected(int,int,boolean,boolean)";
  "org.jfree.data.time$TimeSeriesCollection#clearSelection()" -> "org.jfree.data.time$TimeSeriesCollection#getItemCount(int)";
  "org.jfree.chart.plot$SeriesRenderingOrder#readResolve()" -> "org.jfree.chart.plot$SeriesRenderingOrder#<clinit>()";
  "org.jfree.chart.plot$SeriesRenderingOrder#readResolve()" -> "org.jfree.chart.plot$SeriesRenderingOrder#equals(java.lang.Object)";
  "org.jfree.chart.plot$SeriesRenderingOrder#<clinit>()" -> "org.jfree.chart.plot$SeriesRenderingOrder#SeriesRenderingOrder(java.lang.String)";
  "org.jfree.chart.plot$PlotRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$PlotRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#findSubplot(org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#getSubplots()";
  "org.jfree.chart.labels$ItemLabelPosition#equals(java.lang.Object)" -> "org.jfree.chart.labels$ItemLabelAnchor#equals(java.lang.Object)";
  "org.jfree.chart.labels$ItemLabelPosition#equals(java.lang.Object)" -> "org.jfree.chart.text$TextAnchor#equals(java.lang.Object)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseItemLabelGenerator(org.jfree.chart.labels.CategoryItemLabelGenerator,boolean)" -> "org.jfree.chart.event$RendererChangeEvent#RendererChangeEvent(java.lang.Object)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseItemLabelGenerator(org.jfree.chart.labels.CategoryItemLabelGenerator,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#notifyListeners(org.jfree.chart.event.RendererChangeEvent)";
  "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisible(int)" -> "org.jfree.chart.util$BooleanList#getBoolean(int)";
  "org.jfree.chart.axis$PeriodAxis#setMinorTickMarkStroke(java.awt.Stroke)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$PeriodAxis#setMinorTickMarkStroke(java.awt.Stroke)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.renderer.category$BarRenderer3D#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.category$BarRenderer3D#getYOffset()";
  "org.jfree.chart.renderer.category$BarRenderer3D#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.category$BarRenderer3D#getXOffset()";
  "org.jfree.chart.renderer.category$BarRenderer3D#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.category$BarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.block$LengthConstraintType#equals(java.lang.Object)" -> "org.jfree.chart.block$LengthConstraintType#toString()";
  "org.jfree.chart.plot$PiePlot#getMaximumExplodePercent()" -> "org.jfree.data.general$DefaultPieDataset#getKeys()";
  "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$DefaultXYDataset#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$AbstractIntervalXYDataset#getStartXValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()";
  "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()";
  "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$AbstractIntervalXYDataset#getEndXValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$DefaultXYDataset#getXValue(int,int)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getDomainAxis(org.jfree.chart.plot.CategoryPlot,int)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxis(int)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getDomainAxis(org.jfree.chart.plot.CategoryPlot,int)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxis()";
  "org.jfree.chart.renderer$AbstractRenderer#calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,double,double,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart.renderer$AbstractRenderer#calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,double,double,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.labels$ItemLabelAnchor#<clinit>()";
  "org.jfree.chart.labels$StandardXYToolTipGenerator#clone()" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#clone()";
  "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#getLeft()";
  "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)";
  "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#getBottom()";
  "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#ensureAtLeast(double,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#getTop()";
  "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#AxisSpace()";
  "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#getRight()";
  "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$PeriodAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$XYPlot#setDomainCrosshairStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelsVisible(int,java.lang.Boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelsVisible(int,java.lang.Boolean,boolean)" -> "org.jfree.chart.util$BooleanList#setBoolean(int,java.lang.Boolean)";
  "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#clearRangeAxes()" -> "org.jfree.chart.util$AbstractObjectList#clear()";
  "org.jfree.chart.plot$CategoryPlot#clearRangeAxes()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#clearRangeAxes()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#clearRangeAxes()" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#clearRangeAxes()" -> "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis#setCategoryMargin(double)";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator)";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)" -> "org.jfree.data.xy$XYDataItem#toString()";
  "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)" -> "org.jfree.data.time$RegularTimePeriod#toString()";
  "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)" -> "org.jfree.data.time$Day#toString()";
  "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)" -> "org.jfree.chart.text$G2TextMeasurer#G2TextMeasurer(java.awt.Graphics2D)";
  "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)" -> "org.jfree.data.time$SerialDate#toString()";
  "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)" -> "org.jfree.data.time$Month#toString()";
  "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)" -> "org.jfree.chart.axis$CategoryAxis#getTickLabelFont(java.lang.Comparable)";
  "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)" -> "org.jfree.chart.axis$DateTickUnit#toString()";
  "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)" -> "org.jfree.data.time$Year#toString()";
  "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)" -> "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)";
  "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)" -> "org.jfree.chart.axis$NumberTickUnit#toString()";
  "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)" -> "org.jfree.chart.axis$CategoryAxis#getTickLabelPaint(java.lang.Comparable)";
  "org.jfree.data.xy$XYDataItem#toString()" -> "org.jfree.data.xy$XYDataItem#getXValue()";
  "org.jfree.data.xy$XYDataItem#toString()" -> "org.jfree.data.xy$XYDataItem#getYValue()";
  "org.jfree.chart.plot$XYPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)";
  "org.jfree.chart.plot$XYPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.plot$XYPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.title$TextTitle#drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.entity$TitleEntity#TitleEntity(java.awt.Shape,org.jfree.chart.title.Title,java.lang.String,java.lang.String)";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#trimMargin(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockResult#BlockResult()";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockResult#setEntityCollection(org.jfree.chart.entity.EntityCollection)";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#trimPadding(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.title$TextTitle#drawVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#trimBorder(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockParams#getGenerateEntities()";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.title$Title#getPosition()";
  "org.jfree.chart.axis$DateAxis#isHiddenValue(long)" -> "org.jfree.chart.axis$SegmentedTimeline#containsDomainValue(java.util.Date)";
  "org.jfree.chart.axis$DateAxis#isHiddenValue(long)" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainValue(java.util.Date)";
  "org.jfree.data.xy$AbstractXYDataset#getDomainOrder()" -> "org.jfree.data$DomainOrder#<clinit>()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot3D#PiePlot3D(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$MultiplePiePlot#setPieChart(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.title$TextTitle#<clinit>()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setOutlineStroke(java.awt.Stroke)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$MultiplePiePlot#setDataExtractOrder(org.jfree.chart.util.TableOrder)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.title$Title#setPosition(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setURLGenerator(org.jfree.chart.urls.PieURLGenerator)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setBackgroundPaint(java.awt.Paint)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$MultiplePiePlot#getPieChart()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#getPlot()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.data.xy$DefaultXYDataset#clone()" -> "org.jfree.data.general$AbstractDataset#clone()";
  "org.jfree.chart.util$RectangleInsets#<clinit>()" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(org.jfree.chart.util.UnitType,double,double,double,double)";
  "org.jfree.chart.util$RectangleInsets#<clinit>()" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.event$RendererChangeEvent#RendererChangeEvent(java.lang.Object,boolean)" -> "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)";
  "org.jfree.chart.plot$IntervalMarker#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$IntervalMarker#equals(java.lang.Object)" -> "org.jfree.chart.plot$Marker#equals(java.lang.Object)";
  "org.jfree.chart.plot$IntervalMarker#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.axis$Axis#Axis(java.lang.String)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.entity$AxisEntity#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.entity$ChartEntity#setArea(java.awt.Shape)";
  "org.jfree.chart.entity$AxisEntity#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setShapeVisible(boolean)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupLegendShape(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setLine(java.awt.Shape)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesKey(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setSeriesKey(java.lang.Comparable)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setLabelFont(java.awt.Font)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#generateLabel(org.jfree.data.xy.XYDataset,int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItemURLGenerator()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setSeriesIndex(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextFont(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesPaint(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlineStroke(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setDatasetIndex(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesKey(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setDataset(org.jfree.data.general.Dataset)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.awt.Paint)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setLineVisible(boolean)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItemToolTipGenerator()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setOutlinePaint(java.awt.Paint)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setURLText(java.lang.String)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextPaint(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setOutlineStroke(java.awt.Stroke)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setLinePaint(java.awt.Paint)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#getTreatLegendShapeAsLine()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setLabelPaint(java.awt.Paint)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.plot$XYPlot#getDataset(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart$LegendItem#setToolTipText(java.lang.String)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesKey(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlinePaint(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getPlot()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#LegendItemCollection()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#getLegendItems()" -> "org.jfree.chart.plot$XYPlot#getLegendItems()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#addAll(org.jfree.chart.LegendItemCollection)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#getLegendItems()" -> "org.jfree.chart.plot$XYPlot#getFixedLegendItems()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#getLegendItems()" -> "org.jfree.chart.plot$CombinedDomainXYPlot#getLegendItems()";
  "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)";
  "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.plot$CategoryPlot#getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)";
  "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getPlot()";
  "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getTickLabelFont(java.lang.Comparable)";
  "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)";
  "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$AxisState#setMax(double)";
  "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)";
  "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.urls$StandardXYURLGenerator#StandardXYURLGenerator()" -> "org.jfree.chart.urls$StandardXYURLGenerator#StandardXYURLGenerator(java.lang.String,java.lang.String,java.lang.String)";
  "org.jfree.data$DefaultKeyedValues#removeValue(java.lang.Comparable)" -> "org.jfree.data$DefaultKeyedValues#removeValue(int)";
  "org.jfree.data$DefaultKeyedValues#removeValue(java.lang.Comparable)" -> "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)";
  "org.jfree.data$DefaultKeyedValues#removeValue(java.lang.Comparable)" -> "org.jfree.data$UnknownKeyException#UnknownKeyException(java.lang.String)";
  "org.jfree.data$DefaultKeyedValues#removeValue(int)" -> "org.jfree.data$DefaultKeyedValues#rebuildIndex()";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$LogAxis#configure()";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$PeriodAxis#configure()";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$TimeSeries#updateBoundsForAddedItem(org.jfree.data.time.TimeSeriesDataItem)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$TimeSeries#updateBoundsForRemovedItem(org.jfree.data.time.TimeSeriesDataItem)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$RegularTimePeriod#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Month#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.general$SeriesException#SeriesException(java.lang.String)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Year#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Day#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$TimeSeriesDataItem#clone()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Day#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Month#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Year#toString()";
  "org.jfree.data.time$TimeSeries#updateBoundsForAddedItem(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeries#maxIgnoreNaN(double,double)";
  "org.jfree.data.time$TimeSeries#updateBoundsForAddedItem(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeriesDataItem#getValue()";
  "org.jfree.data.time$TimeSeries#updateBoundsForAddedItem(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeries#minIgnoreNaN(double,double)";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.XYURLGenerator)";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator()";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.urls$StandardXYURLGenerator#StandardXYURLGenerator()";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setRange(double,double)";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart.renderer.category$BarRenderer#getDefaultBarPainter()" -> "org.jfree.chart.renderer.category$BarRenderer#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer#getDefaultBarPainter()" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.util.Locale)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.util.Locale)";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.util.Locale)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)";
  "org.jfree.chart.axis$MarkerAxisBand#drawStringInRect(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.Font,java.lang.String)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$MarkerAxisBand#drawStringInRect(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.Font,java.lang.String)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlinePaint(java.awt.Paint,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$DefaultXYDataset#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()";
  "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$AbstractIntervalXYDataset#getEndYValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()";
  "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$DefaultXYDataset#getYValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.xy$AbstractIntervalXYDataset#getStartYValue(int,int)";
  "org.jfree.data.xy$DefaultXYDataset#getItemCount(int)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,boolean,org.jfree.chart.labels.XYItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,boolean,org.jfree.chart.labels.XYItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.labels$ItemLabelPosition#getRotationAnchor()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,boolean,org.jfree.chart.labels.XYItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.labels$ItemLabelPosition#getAngle()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,boolean,org.jfree.chart.labels.XYItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#getNegativeItemLabelPositionFallback()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,boolean,org.jfree.chart.labels.XYItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#getPositiveItemLabelPositionFallback()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,boolean,org.jfree.chart.labels.XYItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getNegativeItemLabelPosition(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,boolean,org.jfree.chart.labels.XYItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,boolean,org.jfree.chart.labels.XYItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,boolean,org.jfree.chart.labels.XYItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemLabelFont(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,boolean,org.jfree.chart.labels.XYItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.labels$ItemLabelPosition#getTextAnchor()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,boolean,org.jfree.chart.labels.XYItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#isInternalAnchor(org.jfree.chart.labels.ItemLabelAnchor)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,boolean,org.jfree.chart.labels.XYItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,boolean,org.jfree.chart.labels.XYItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getPositiveItemLabelPosition(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,boolean,org.jfree.chart.labels.XYItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemLabelPaint(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,boolean,org.jfree.chart.labels.XYItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.labels$ItemLabelPosition#getItemLabelAnchor()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,boolean,org.jfree.chart.labels.XYItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.labels$ItemLabelAnchor#<clinit>()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemLabelAnchorOffset()";
  "org.jfree.chart.title$PaintScaleLegend#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.title$PaintScaleLegend#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.title$PaintScaleLegend#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.axis$AxisSpace#getBottom()";
  "org.jfree.chart.title$PaintScaleLegend#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.title$Title#getPosition()";
  "org.jfree.chart.title$PaintScaleLegend#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.axis$AxisSpace#getRight()";
  "org.jfree.chart.title$PaintScaleLegend#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.axis$PeriodAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.title$PaintScaleLegend#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.axis$AxisSpace#getTop()";
  "org.jfree.chart.title$PaintScaleLegend#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.title$PaintScaleLegend#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.title$PaintScaleLegend#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.axis$AxisSpace#getLeft()";
  "org.jfree.chart.renderer$AbstractRenderer#getSeriesItemLabelFont(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(java.util.List,boolean)" -> "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(java.util.List,boolean)" -> "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(java.util.List,boolean)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(java.util.List,boolean)" -> "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(java.util.List,boolean)" -> "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(java.util.List,boolean)" -> "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(java.util.List,boolean)" -> "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(java.util.List,boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getX(org.jfree.data.time.RegularTimePeriod)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(java.util.List,boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getSeries(java.lang.Comparable)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(java.util.List,boolean)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(java.util.List,boolean)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(java.util.List,boolean)" -> "org.jfree.data.time$Month#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.chart.axis$CategoryAxis#setCategoryMargin(double)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$CategoryAxis#setCategoryMargin(double)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$DateAxis#calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.chart.axis$DateAxis#calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)" -> "org.jfree.data.time$Month#getFirstMillisecond()";
  "org.jfree.chart.axis$DateAxis#calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.chart.axis$DateAxis#calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.chart.axis$DateAxis#calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)" -> "org.jfree.chart.axis$DateTickMarkPosition#<clinit>()";
  "org.jfree.chart.axis$DateAxis#calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)" -> "org.jfree.data.time$Month#getLastMillisecond()";
  "org.jfree.chart.axis$DateAxis#calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)" -> "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()";
  "org.jfree.chart.axis$DateAxis#calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#CombinedDomainXYPlot()" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#CombinedDomainXYPlot()" -> "org.jfree.chart.plot$CombinedDomainXYPlot#CombinedDomainXYPlot(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#CombinedDomainXYPlot()" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#CombinedDomainXYPlot()" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#CombinedDomainXYPlot()" -> "org.jfree.chart.axis$NumberAxis#NumberAxis()";
  "org.jfree.data.time$TimeSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.data.general$Series#getKey()";
  "org.jfree.data.time$TimeSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.data.xy$XYDataItem#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.data.time$Month#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.chart.axis$DateTickUnit#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.chart.axis$TickUnit#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesCollection#getSeries(java.lang.Comparable)" -> "org.jfree.chart.axis$NumberTickUnit#equals(java.lang.Object)";
  "org.jfree.chart.block$RectangleConstraint#toUnconstrainedHeight()" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#toUnconstrainedHeight()" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.block$RectangleConstraint#toUnconstrainedHeight()" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#LegendItemCollection()";
  "org.jfree.chart.plot$PolarPlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)";
  "org.jfree.chart.plot$PolarPlot#getLegendItems()" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()";
  "org.jfree.chart.plot$PolarPlot#getLegendItems()" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.chart.plot$PolarPlot#getLegendItems()" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()";
  "org.jfree.chart.axis$LogAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#createTickLabel(double)";
  "org.jfree.chart.axis$LogAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$LogAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnit#getMinorTickCount()";
  "org.jfree.chart.axis$LogAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#calculateValue(double)";
  "org.jfree.chart.axis$LogAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$LogAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberTick#NumberTick(org.jfree.chart.axis.TickType,double,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)";
  "org.jfree.chart.axis$LogAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#calculateLog(double)";
  "org.jfree.chart.axis$LogAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isAutoTickUnitSelection()";
  "org.jfree.chart.axis$LogAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getLowerBound()";
  "org.jfree.chart.axis$LogAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.axis$LogAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$LogAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getUpperBound()";
  "org.jfree.chart.axis$LogAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickType#<clinit>()";
  "org.jfree.chart.axis$LogAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnit#getSize()";
  "org.jfree.chart.axis$LogAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.axis$LogAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$LogAxis#createTickLabel(double)" -> "org.jfree.chart.axis$NumberTickUnit#valueToString(double)";
  "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#SegmentedTimeline$SegmentRange(org.jfree.chart.axis.SegmentedTimeline,long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#calculateSegmentNumber(long)";
  "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#SegmentedTimeline$SegmentRange(org.jfree.chart.axis.SegmentedTimeline,long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#SegmentedTimeline$Segment(org.jfree.chart.axis.SegmentedTimeline)";
  "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#SegmentedTimeline$SegmentRange(org.jfree.chart.axis.SegmentedTimeline,long,long)" -> "org.jfree.chart.axis$SegmentedTimeline#getSegment(long)";
  "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#SegmentedTimeline$SegmentRange(org.jfree.chart.axis.SegmentedTimeline,long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentNumber()";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#calculateSegmentNumber(long)" -> "org.jfree.chart.axis$SegmentedTimeline#<clinit>()";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart.title$PaintScaleLegend#getAxis()";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart.title$TextTitle#setFont(java.awt.Font)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart.title$LegendTitle#getBackgroundPaint()";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart.block$BlockContainer#getBlocks()";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart.title$LegendTitle#setBackgroundPaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart.title$LegendTitle#getWrapper()";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart.title$TextTitle#setPaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart.title$LegendTitle#setItemFont(java.awt.Font)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart.title$PaintScaleLegend#setBackgroundPaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart.title$LegendTitle#setItemPaint(java.awt.Paint)";
  "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator()" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)";
  "org.jfree.data.xy$IntervalXYDelegate#calculateIntervalForSeries(int)" -> "org.jfree.data.xy$DefaultXYDataset#getItemCount(int)";
  "org.jfree.data.xy$IntervalXYDelegate#calculateIntervalForSeries(int)" -> "org.jfree.data.xy$XYSeriesCollection#getItemCount(int)";
  "org.jfree.data.xy$IntervalXYDelegate#calculateIntervalForSeries(int)" -> "org.jfree.data.time$TimeSeriesCollection#getItemCount(int)";
  "org.jfree.data.xy$IntervalXYDelegate#calculateIntervalForSeries(int)" -> "org.jfree.data.xy$DefaultXYDataset#getXValue(int,int)";
  "org.jfree.data.xy$IntervalXYDelegate#calculateIntervalForSeries(int)" -> "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)";
  "org.jfree.data.xy$IntervalXYDelegate#calculateIntervalForSeries(int)" -> "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.data$DomainOrder#toString()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesItemLabelGenerator(int,org.jfree.chart.labels.CategoryItemLabelGenerator,boolean)" -> "org.jfree.chart.event$RendererChangeEvent#RendererChangeEvent(java.lang.Object)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesItemLabelGenerator(int,org.jfree.chart.labels.CategoryItemLabelGenerator,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#notifyListeners(org.jfree.chart.event.RendererChangeEvent)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesItemLabelGenerator(int,org.jfree.chart.labels.CategoryItemLabelGenerator,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#newFifteenMinuteTimeline()" -> "org.jfree.chart.axis$SegmentedTimeline#setBaseTimeline(org.jfree.chart.axis.SegmentedTimeline)";
  "org.jfree.chart.axis$SegmentedTimeline#newFifteenMinuteTimeline()" -> "org.jfree.chart.axis$SegmentedTimeline#firstMondayAfter1900()";
  "org.jfree.chart.axis$SegmentedTimeline#newFifteenMinuteTimeline()" -> "org.jfree.chart.axis$SegmentedTimeline#getSegmentSize()";
  "org.jfree.chart.axis$SegmentedTimeline#newFifteenMinuteTimeline()" -> "org.jfree.chart.axis$SegmentedTimeline#SegmentedTimeline(long,int,int)";
  "org.jfree.chart.axis$SegmentedTimeline#newFifteenMinuteTimeline()" -> "org.jfree.chart.axis$SegmentedTimeline#newMondayThroughFridayTimeline()";
  "org.jfree.chart.axis$SegmentedTimeline#newFifteenMinuteTimeline()" -> "org.jfree.chart.axis$SegmentedTimeline#setStartTime(long)";
  "org.jfree.chart.axis$SegmentedTimeline#newFifteenMinuteTimeline()" -> "org.jfree.chart.axis$SegmentedTimeline#<clinit>()";
  "org.jfree.chart.axis$SegmentedTimeline#setBaseTimeline(org.jfree.chart.axis.SegmentedTimeline)" -> "org.jfree.chart.axis$SegmentedTimeline#getStartTime()";
  "org.jfree.chart.axis$SegmentedTimeline#setBaseTimeline(org.jfree.chart.axis.SegmentedTimeline)" -> "org.jfree.chart.axis$SegmentedTimeline#getSegmentSize()";
  "org.jfree.chart.plot$PolarPlot#<clinit>()" -> "org.jfree.chart.util$ResourceBundleWrapper#getBundle(java.lang.String)";
  "org.jfree.chart.plot$PolarPlot#<clinit>()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisCount()";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer(int)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart.plot$CategoryPlot#getRendererCount()";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart.plot$CategoryPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxis(int)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart.plot$CategoryPlot#setRangeGridlinePaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisCount()";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart.plot$CategoryPlot#setRangeZeroBaselinePaint(java.awt.Paint)";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisCount()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#updateCrosshairValues(org.jfree.chart.plot.CrosshairState,double,double,int,int,double,double,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$XYPlot#isRangeCrosshairLockedOnData()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#updateCrosshairValues(org.jfree.chart.plot.CrosshairState,double,double,int,int,double,double,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$CrosshairState#updateCrosshairPoint(double,double,int,int,double,double,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#updateCrosshairValues(org.jfree.chart.plot.CrosshairState,double,double,int,int,double,double,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$XYPlot#isDomainCrosshairLockedOnData()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#updateCrosshairValues(org.jfree.chart.plot.CrosshairState,double,double,int,int,double,double,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$CrosshairState#updateCrosshairY(double,int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#updateCrosshairValues(org.jfree.chart.plot.CrosshairState,double,double,int,int,double,double,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$CrosshairState#updateCrosshairX(double,int)";
  "org.jfree.chart.block$AbstractBlock#calculateTotalHeight(double)" -> "org.jfree.chart.util$RectangleInsets#extendHeight(double)";
  "org.jfree.chart.block$AbstractBlock#calculateTotalHeight(double)" -> "org.jfree.chart.block$LineBorder#getInsets()";
  "org.jfree.chart.block$AbstractBlock#calculateTotalHeight(double)" -> "org.jfree.chart.block$BlockBorder#getInsets()";
  "org.jfree.chart.axis$ValueAxis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getAxisLinePaint()";
  "org.jfree.chart.axis$ValueAxis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getAxisLineStroke()";
  "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$SymbolAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$SymbolAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.data.general$DefaultPieDataset#sortByKeys(org.jfree.chart.util.SortOrder)" -> "org.jfree.data$DefaultKeyedValues#sortByKeys(org.jfree.chart.util.SortOrder)";
  "org.jfree.data.general$DefaultPieDataset#sortByKeys(org.jfree.chart.util.SortOrder)" -> "org.jfree.data.general$AbstractDataset#fireDatasetChanged()";
  "org.jfree.data$DefaultKeyedValues#sortByKeys(org.jfree.chart.util.SortOrder)" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$DefaultKeyedValues#sortByKeys(org.jfree.chart.util.SortOrder)" -> "org.jfree.data$DefaultKeyedValues#clear()";
  "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)";
  "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelFont(java.awt.Font)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#setShadowVisible(boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#setBarPainter(org.jfree.chart.renderer.xy.XYBarPainter)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelPaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesPaint()";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesStroke()";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart.renderer$AbstractRenderer#clearSeriesStrokes(boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart.renderer$AbstractRenderer#clearSeriesPaints(boolean)";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#inIncludeSegments()" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentNumberRelativeToGroup()";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#inIncludeSegments()" -> "org.jfree.chart.axis$SegmentedTimeline#<clinit>()";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#inIncludeSegments()" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#inExceptionSegments()";
  "org.jfree.chart.util$Rotation#readResolve()" -> "org.jfree.chart.util$Rotation#equals(java.lang.Object)";
  "org.jfree.chart.util$Rotation#readResolve()" -> "org.jfree.chart.util$Rotation#<clinit>()";
  "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.axis$AxisLocation#<clinit>()";
  "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.urls$StandardXYURLGenerator#StandardXYURLGenerator()";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.XYURLGenerator)";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#XYLineAndShapeRenderer(boolean,boolean)";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator()";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#calculateRangeMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#calculateRangeMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$LengthAdjustmentType#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#calculateRangeMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#calculateRangeMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$RectangleAnchor#coordinates(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleAnchor)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#calculateRangeMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.plot$XYPlot#setRangeZeroBaselineVisible(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)" -> "org.jfree.chart.plot$Plot#equals(java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits()" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits()" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits()" -> "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)";
  "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits()" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart.axis$NumberTickUnit#hashCode()" -> "org.jfree.chart.axis$TickUnit#hashCode()";
  "org.jfree.chart.axis$DateTickUnit#rollDate(java.util.Date,java.util.TimeZone)" -> "org.jfree.chart.axis$DateTickUnitType#getCalendarField()";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineExclusions(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inc(long)";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineExclusions(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline#getSegmentsExcluded()";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineExclusions(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$BaseTimelineSegmentRange#SegmentedTimeline$BaseTimelineSegmentRange(org.jfree.chart.axis.SegmentedTimeline,long,long)";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineExclusions(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentEnd()";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineExclusions(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentStart()";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineExclusions(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inIncludeSegments()";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineExclusions(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#inc()";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineExclusions(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline#addException(org.jfree.chart.axis.SegmentedTimeline$Segment)";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineExclusions(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline#getSegmentSize()";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineExclusions(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inExcludeSegments()";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineExclusions(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#inc(long)";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineExclusions(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#inIncludeSegments()";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineExclusions(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#inExcludeSegments()";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineExclusions(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline#getGroupSegmentCount()";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineExclusions(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline#getSegment(long)";
  "org.jfree.chart.axis$ValueTick#ValueTick(org.jfree.chart.axis.TickType,double,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)" -> "org.jfree.chart.axis$Tick#Tick(java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)";
  "org.jfree.data.time$TimeSeriesCollection#getSurroundingItems(int,long)" -> "org.jfree.data.time$TimeSeriesCollection#getX(int,int)";
  "org.jfree.data.time$TimeSeriesCollection#getSurroundingItems(int,long)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeriesCollection#getSurroundingItems(int,long)" -> "org.jfree.data.time$TimeSeriesCollection#getSeries(int)";
  "org.jfree.data.time$TimeSeriesCollection#getX(int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getX(org.jfree.data.time.RegularTimePeriod)";
  "org.jfree.data.time$TimeSeriesCollection#getX(int,int)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesShape(int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getDrawingSupplier()";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesShape(int)" -> "org.jfree.chart.renderer$AbstractRenderer#getSeriesShape(int)";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesShape(int)" -> "org.jfree.chart.renderer$AbstractRenderer#setSeriesShape(int,java.awt.Shape,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesShape(int)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#getNextShape()";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesShape(int)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getDrawingSupplier()";
  "org.jfree.chart.plot$MultiplePiePlot#clone()" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.plot$MultiplePiePlot#clone()" -> "org.jfree.chart.util$ShapeUtilities#clone(java.awt.Shape)";
  "org.jfree.chart.plot$MultiplePiePlot#clone()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.chart.plot$MultiplePiePlot#clone()" -> "org.jfree.chart.plot$Plot#clone()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.renderer.category$BarRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)";
  "org.jfree.chart.plot$PolarPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$PolarPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$PolarPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.chart.plot$PolarPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)";
  "org.jfree.data.time$Day#previous()" -> "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$Day#previous()" -> "org.jfree.data.time$Day#<clinit>()";
  "org.jfree.data.time$Day#previous()" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$Day#previous()" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$Day#previous()" -> "org.jfree.data.time$SerialDate#createInstance(int)";
  "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$Day#peg(java.util.Calendar)";
  "org.jfree.chart$JFreeChart#getLegend()" -> "org.jfree.chart$JFreeChart#getLegend(int)";
  "org.jfree.chart.renderer.category$BarRenderer#BarRenderer()" -> "org.jfree.chart.renderer.category$BarRenderer#getDefaultBarPainter()";
  "org.jfree.chart.renderer.category$BarRenderer#BarRenderer()" -> "org.jfree.chart.renderer$AbstractRenderer#setBaseLegendShape(java.awt.Shape)";
  "org.jfree.chart.renderer.category$BarRenderer#BarRenderer()" -> "org.jfree.chart.util$StandardGradientPaintTransformer#StandardGradientPaintTransformer()";
  "org.jfree.chart.renderer.category$BarRenderer#BarRenderer()" -> "org.jfree.chart.renderer.category$BarRenderer#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer#BarRenderer()" -> "org.jfree.chart.renderer.category$BarRenderer#getDefaultShadowsVisible()";
  "org.jfree.chart.renderer.category$BarRenderer#BarRenderer()" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#AbstractCategoryItemRenderer()";
  "org.jfree.chart.renderer.category$BarRenderer#BarRenderer()" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart.axis$LogAxis#exponentLengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#calculateValue(double)";
  "org.jfree.chart.axis$LogAxis#exponentLengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$PolarPlot#getPlotType()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#getPlotType()" -> "org.jfree.chart.plot$PolarPlot#<clinit>()";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getMaximumItemCount()";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getDomainDescription()";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.general$Series#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getMaximumItemAge()";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getRangeDescription()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer$XYAreaRendererState#XYAreaRenderer$XYAreaRendererState(org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.xy$XYItemRendererState#XYItemRendererState(org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.renderer.xy$XYItemRendererState#XYItemRendererState(org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer$RendererState#RendererState(org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.title$TextTitle#drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor)";
  "org.jfree.chart.title$TextTitle#drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$HorizontalAlignment#<clinit>()";
  "org.jfree.chart.title$TextTitle#drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.title$Title#getHorizontalAlignment()";
  "org.jfree.chart.title$TextTitle#drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.title$Title#getPosition()";
  "org.jfree.chart.title$TextTitle#drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.title$TextTitle#drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextBlockAnchor#<clinit>()";
  "org.jfree.chart.axis$DateAxis#nextStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateTickUnit#getCalendarField()";
  "org.jfree.chart.axis$DateAxis#nextStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateTickUnit#getMultiple()";
  "org.jfree.chart.axis$DateAxis#nextStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateAxis#previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)";
  "org.jfree.chart.axis$DateTickUnit#getCalendarField()" -> "org.jfree.chart.axis$DateTickUnitType#getCalendarField()";
  "org.jfree.chart.title$PaintScaleLegend#setStripOutlineVisible(boolean)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$PaintScaleLegend#setStripOutlineVisible(boolean)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)" -> "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)";
  "org.jfree.chart.axis$SymbolAxis#drawGridBandsHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,boolean,java.util.List)" -> "org.jfree.chart.axis$Axis#getPlot()";
  "org.jfree.chart.axis$SymbolAxis#drawGridBandsHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,boolean,java.util.List)" -> "org.jfree.chart.axis$ValueTick#getValue()";
  "org.jfree.chart.axis$SymbolAxis#drawGridBandsHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,boolean,java.util.List)" -> "org.jfree.chart.plot$Plot#getOutlineStroke()";
  "org.jfree.chart.axis$SymbolAxis#drawGridBandsHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,boolean,java.util.List)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$SymbolAxis#drawGridBandsHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,boolean,java.util.List)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.util$LogFormat#format(double,java.lang.StringBuffer,java.text.FieldPosition)" -> "org.jfree.chart.util$LogFormat#calculateLog(double)";
  "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)" -> "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)";
  "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getPaint()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getStroke()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelAnchor()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getAlpha()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelPaint()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelOffsetType()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getDataset(int)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#calculateDomainMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabel()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getOrientation()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelFont()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelOffset()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Marker#getLabelTextAnchor()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getIndexOf(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#calculateCategoryGapSize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getLowerMargin()";
  "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getLabelInsets()";
  "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getLabelFont()";
  "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getLabelAngle()";
  "org.jfree.chart.plot$PolarPlot#getSeriesCount()" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()";
  "org.jfree.chart.plot$PolarPlot#getSeriesCount()" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()";
  "org.jfree.chart.plot$PolarPlot#getSeriesCount()" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.chart.renderer$AbstractRenderer#getItemLabelPaint(int,int,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getSeriesItemLabelPaint(int)";
  "org.jfree.chart.renderer$AbstractRenderer#getSeriesItemLabelPaint(int)" -> "org.jfree.chart.util$PaintList#getPaint(int)";
  "org.jfree.chart.plot$PiePlot#setInteriorGap(double)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.block$FlowArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthRange()";
  "org.jfree.chart.block$FlowArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)";
  "org.jfree.chart.block$FlowArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.block$FlowArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.block$FlowArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#toFixedWidth(double)";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextFragment#getText()";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font,java.awt.Paint)";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextBlock#getLastLine()";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextFragment#getFont()";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextLine#getLastTextFragment()";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextFragment#getPaint()";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextFragment#<clinit>()";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextUtilities#nextLineBreak(java.lang.String,int,float,java.text.BreakIterator,org.jfree.chart.text.TextMeasurer)";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextLine#addFragment(org.jfree.chart.text.TextFragment)";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextBlock#TextBlock()";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextLine#removeFragment(org.jfree.chart.text.TextFragment)";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextBlock#addLine(java.lang.String,java.awt.Font,java.awt.Paint)";
  "org.jfree.chart.axis$LogAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#getTickUnit()";
  "org.jfree.chart.axis$LogAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnits#getCeilingTickUnit(double)";
  "org.jfree.chart.axis$LogAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnits#getLargerTickUnit(org.jfree.chart.axis.TickUnit)";
  "org.jfree.chart.axis$LogAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getStandardTickUnits()";
  "org.jfree.chart.axis$LogAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#exponentLengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$LogAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnits#getCeilingTickUnit(org.jfree.chart.axis.TickUnit)";
  "org.jfree.chart.axis$LogAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)";
  "org.jfree.chart.axis$LogAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)";
  "org.jfree.chart.axis$LogAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnit#getSize()";
  "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfWeek()";
  "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#isValidWeekdayCode(int)";
  "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#createInstance(int)";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockResult#getEntityCollection()";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#trimPadding(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.entity$TitleEntity#TitleEntity(java.awt.Shape,org.jfree.chart.title.Title)";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockBorder#getInsets()";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$LineBorder#getInsets()";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#getFrame()";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockParams#getGenerateEntities()";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.title$LegendItemBlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#trimMargin(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockResult#setEntityCollection(org.jfree.chart.entity.EntityCollection)";
  "org.jfree.chart.renderer.category$BarRenderer#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#createStandardSeriesShapes()";
  "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()" -> "org.jfree.chart$ChartColor#<clinit>()";
  "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()" -> "org.jfree.chart$ChartColor#createDefaultPaintArray()";
  "org.jfree.chart.plot$DefaultDrawingSupplier#createStandardSeriesShapes()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double)";
  "org.jfree.chart.plot$DefaultDrawingSupplier#createStandardSeriesShapes()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()";
  "org.jfree.chart.plot$DefaultDrawingSupplier#createStandardSeriesShapes()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double,double)";
  "org.jfree.data.xy$IntervalXYDelegate#getStartX(int,int)" -> "org.jfree.data.xy$IntervalXYDelegate#getIntervalWidth()";
  "org.jfree.data.xy$IntervalXYDelegate#getStartX(int,int)" -> "org.jfree.data.xy$XYSeriesCollection#getX(int,int)";
  "org.jfree.data.xy$IntervalXYDelegate#getStartX(int,int)" -> "org.jfree.data.xy$DefaultXYDataset#getX(int,int)";
  "org.jfree.data.xy$IntervalXYDelegate#getStartX(int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getX(int,int)";
  "org.jfree.data.xy$IntervalXYDelegate#getStartX(int,int)" -> "org.jfree.data.xy$IntervalXYDelegate#getIntervalPositionFactor()";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$XYPlot#setDomainCrosshairPaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$XYPlot#setDomainZeroBaselinePaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis(int)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisCount()";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$XYPlot#setRangeGridlinePaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$XYPlot#setRangeCrosshairPaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$XYPlot#getRenderer(int)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$XYPlot#getRendererCount()";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisCount()";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#getSubplots()";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$XYPlot#getAnnotations()";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$XYPlot#setDomainGridlinePaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis(int)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$XYPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$XYPlot#setRangeZeroBaselinePaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#getSubplots()";
  "org.jfree.chart.plot$XYPlot#getDomainAxisLocation(int)" -> "org.jfree.chart.axis$AxisLocation#getOpposite(org.jfree.chart.axis.AxisLocation)";
  "org.jfree.chart.plot$XYPlot#getDomainAxisLocation(int)" -> "org.jfree.chart.axis$AxisLocation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getDomainAxisLocation(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#getDomainAxisLocation(int)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisLocation()";
  "org.jfree.chart.plot$XYPlot#getDomainAxisLocation(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.axis$AxisLocation#getOpposite(org.jfree.chart.axis.AxisLocation)" -> "org.jfree.chart.axis$AxisLocation#<clinit>()";
  "org.jfree.chart.block$BlockContainer#clear()" -> "org.jfree.chart.block$BorderArrangement#clear()";
  "org.jfree.chart.block$BlockContainer#clear()" -> "org.jfree.chart.block$FlowArrangement#clear()";
  "org.jfree.chart.block$BlockContainer#clear()" -> "org.jfree.chart.block$CenterArrangement#clear()";
  "org.jfree.chart.block$BlockContainer#clear()" -> "org.jfree.chart.block$ColumnArrangement#clear()";
  "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker)" -> "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.util$Layer#<clinit>()" -> "org.jfree.chart.util$Layer#Layer(java.lang.String)";
  "org.jfree.data.xy$IntervalXYDelegate#getDomainUpperBound(boolean)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.data.xy$IntervalXYDelegate#getDomainUpperBound(boolean)" -> "org.jfree.data.xy$IntervalXYDelegate#getDomainBounds(boolean)";
  "org.jfree.chart.block$BorderArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,double)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,double)";
  "org.jfree.chart.block$BorderArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,double)" -> "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,double)" -> "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,double)" -> "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.block$BorderArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,double)" -> "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,double)" -> "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,double)" -> "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,double)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$BorderArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,double)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$BorderArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,double)" -> "org.jfree.chart.block$LabelBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,double)" -> "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BorderArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,double)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,double)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,double)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.data.general$DatasetUtilities#findMinimumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$XYSeriesCollection#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#findMinimumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$IntervalXYDelegate#getDomainLowerBound(boolean)";
  "org.jfree.data.general$DatasetUtilities#findMinimumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$DefaultXYDataset#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#findMinimumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$DefaultXYDataset#getXValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#findMinimumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()";
  "org.jfree.data.general$DatasetUtilities#findMinimumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.time$TimeSeriesCollection#getDomainLowerBound(boolean)";
  "org.jfree.data.general$DatasetUtilities#findMinimumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$AbstractIntervalXYDataset#getStartXValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#findMinimumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$XYSeriesCollection#getDomainLowerBound(boolean)";
  "org.jfree.data.general$DatasetUtilities#findMinimumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#findMinimumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()";
  "org.jfree.data.general$DatasetUtilities#findMinimumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#findMinimumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.data.general$DatasetUtilities#findMinimumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.time$TimeSeriesCollection#getItemCount(int)";
  "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition()" -> "org.jfree.chart.labels$ItemLabelAnchor#<clinit>()";
  "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition()" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition()" -> "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition(org.jfree.chart.labels.ItemLabelAnchor,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)";
  "org.jfree.chart.title$TextTitle#arrangeFN(java.awt.Graphics2D,double)" -> "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)";
  "org.jfree.chart.title$TextTitle#arrangeFN(java.awt.Graphics2D,double)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.title$TextTitle#arrangeFN(java.awt.Graphics2D,double)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.title$TextTitle#arrangeFN(java.awt.Graphics2D,double)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.title$TextTitle#arrangeFN(java.awt.Graphics2D,double)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.title$TextTitle#arrangeFN(java.awt.Graphics2D,double)" -> "org.jfree.chart.title$Title#getPosition()";
  "org.jfree.chart.title$TextTitle#arrangeFN(java.awt.Graphics2D,double)" -> "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)";
  "org.jfree.chart.title$TextTitle#arrangeFN(java.awt.Graphics2D,double)" -> "org.jfree.chart.text$G2TextMeasurer#G2TextMeasurer(java.awt.Graphics2D)";
  "org.jfree.chart.title$TextTitle#arrangeFN(java.awt.Graphics2D,double)" -> "org.jfree.chart.text$TextBlock#setLineAlignment(org.jfree.chart.util.HorizontalAlignment)";
  "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Month#getFirstMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data.time$Month#getLastMillisecond()";
  "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#clone()" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#clone()" -> "org.jfree.chart.util$ShapeUtilities#clone(java.awt.Shape)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#clone()" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()";
  "org.jfree.chart$JFreeChart#setNotify(boolean)" -> "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)";
  "org.jfree.chart$JFreeChart#setNotify(boolean)" -> "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)";
  "org.jfree.data.general$DefaultPieDataset#insertValue(int,java.lang.Comparable,java.lang.Number)" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,java.lang.Number)";
  "org.jfree.data.general$DefaultPieDataset#insertValue(int,java.lang.Comparable,java.lang.Number)" -> "org.jfree.data.general$AbstractDataset#fireDatasetChanged()";
  "org.jfree.chart.plot$Plot#axisChanged(org.jfree.chart.event.AxisChangeEvent)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.title$PaintScaleLegend#PaintScaleLegend(org.jfree.chart.renderer.PaintScale,org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$ValueAxis#setRange(double,double)";
  "org.jfree.chart.title$PaintScaleLegend#PaintScaleLegend(org.jfree.chart.renderer.PaintScale,org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$DateAxis#setRange(double,double)";
  "org.jfree.chart.title$PaintScaleLegend#PaintScaleLegend(org.jfree.chart.renderer.PaintScale,org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.title$PaintScaleLegend#PaintScaleLegend(org.jfree.chart.renderer.PaintScale,org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.title$Title#Title()";
  "org.jfree.chart.title$PaintScaleLegend#PaintScaleLegend(org.jfree.chart.renderer.PaintScale,org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$AxisLocation#<clinit>()";
  "org.jfree.chart.entity$AxisEntity#clone()" -> "org.jfree.chart.entity$ChartEntity#clone()";
  "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)";
  "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getDataset()";
  "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getDomainGridlinePaint()";
  "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxis()";
  "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge()";
  "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getDomainGridlinePosition()";
  "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$CategoryAxis3D#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#isDomainGridlinesVisible()";
  "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getDomainGridlineStroke()";
  "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer()";
  "org.jfree.chart.axis$SegmentedTimeline#binarySearchExceptionSegments(org.jfree.chart.axis.SegmentedTimeline$Segment)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#after(org.jfree.chart.axis.SegmentedTimeline$Segment)";
  "org.jfree.chart.axis$SegmentedTimeline#binarySearchExceptionSegments(org.jfree.chart.axis.SegmentedTimeline$Segment)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#before(org.jfree.chart.axis.SegmentedTimeline$Segment)";
  "org.jfree.chart.axis$SegmentedTimeline#binarySearchExceptionSegments(org.jfree.chart.axis.SegmentedTimeline$Segment)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#contains(org.jfree.chart.axis.SegmentedTimeline$Segment)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesPositiveItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition)" -> "org.jfree.chart.renderer$AbstractRenderer#setSeriesPositiveItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesPositiveItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesPositiveItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getItemShapeVisible(int,int)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getSeriesShapesVisible(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#calculateRangeMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$LengthAdjustmentType#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#calculateRangeMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#calculateRangeMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#calculateRangeMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$RectangleAnchor#coordinates(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleAnchor)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#calculateRangeMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillDomainGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillDomainGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillDomainGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillDomainGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillDomainGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillDomainGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillDomainGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillDomainGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.plot$XYPlot#getDomainTickBandPaint()";
  "org.jfree.chart.renderer.category$BarRenderer#calculateSeriesWidth(double,org.jfree.chart.axis.CategoryAxis,int,int)" -> "org.jfree.chart.renderer.category$BarRenderer#getItemMargin()";
  "org.jfree.chart.renderer.category$BarRenderer#calculateSeriesWidth(double,org.jfree.chart.axis.CategoryAxis,int,int)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryMargin()";
  "org.jfree.chart.renderer.category$BarRenderer#calculateSeriesWidth(double,org.jfree.chart.axis.CategoryAxis,int,int)" -> "org.jfree.chart.axis$CategoryAxis#getLowerMargin()";
  "org.jfree.chart.renderer.category$BarRenderer#calculateSeriesWidth(double,org.jfree.chart.axis.CategoryAxis,int,int)" -> "org.jfree.chart.axis$CategoryAxis#getUpperMargin()";
  "org.jfree.chart.entity$PieSectionEntity#hashCode()" -> "org.jfree.chart.entity$ChartEntity#hashCode()";
  "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis3D#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis3D#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis3D#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getPlot()";
  "org.jfree.chart.axis$CategoryAxis3D#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.renderer.category$BarRenderer3D#getYOffset()";
  "org.jfree.chart.axis$CategoryAxis3D#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis3D#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis3D#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer()";
  "org.jfree.chart.axis$CategoryAxis3D#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.renderer.category$BarRenderer3D#getXOffset()";
  "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable,boolean)" -> "org.jfree.chart.util$PaintMap#getPaint(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable,boolean)" -> "org.jfree.chart.plot$Plot#getDrawingSupplier()";
  "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable,boolean)" -> "org.jfree.chart.util$PaintMap#put(java.lang.Comparable,java.awt.Paint)";
  "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable,boolean)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#getNextPaint()";
  "org.jfree.chart.renderer$AbstractRenderer#clearSeriesPaints(boolean)" -> "org.jfree.chart.util$AbstractObjectList#clear()";
  "org.jfree.chart.renderer$AbstractRenderer#clearSeriesPaints(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.axis$AxisLocation#<clinit>()";
  "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double)" -> "org.jfree.chart.block$BlockBorder#BlockBorder(org.jfree.chart.util.RectangleInsets,java.awt.Paint)";
  "org.jfree.chart.axis$AxisLocation#getOpposite()" -> "org.jfree.chart.axis$AxisLocation#getOpposite(org.jfree.chart.axis.AxisLocation)";
  "org.jfree.chart.axis$AxisLocation#getOpposite()" -> "org.jfree.chart.axis$AxisLocation#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisible(int)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#createState(org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getDataset(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItems()" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItems()" -> "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisibleInLegend(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItems()" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItems()" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItems()" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItems()" -> "org.jfree.chart.plot$XYPlot#getDataset(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItems()" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#LegendItemCollection()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItems()" -> "org.jfree.chart.plot$XYPlot#getIndexOf(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItems()" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItems()" -> "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)";
  "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$PolarPlot#zoom(double)";
  "org.jfree.chart.plot$PolarPlot#zoom(double)" -> "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean)";
  "org.jfree.chart.plot$PolarPlot#zoom(double)" -> "org.jfree.chart.axis$ValueAxis#setUpperBound(double)";
  "org.jfree.chart.plot$PolarPlot#zoom(double)" -> "org.jfree.chart.plot$PolarPlot#getMaxRadius()";
  "org.jfree.chart.plot$PolarPlot#zoom(double)" -> "org.jfree.chart.plot$PolarPlot#getAxis()";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation(int)";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.util$RectangleEdge#opposite(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setDrawOutlines(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$PolarPlot#PolarPlot()" -> "org.jfree.chart.plot$PolarPlot#PolarPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.PolarItemRenderer)";
  "org.jfree.chart.renderer.xy$XYStepRenderer#XYStepRenderer()" -> "org.jfree.chart.renderer.xy$XYStepRenderer#XYStepRenderer(org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseLegendShape(java.awt.Shape)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#setFixedRangeAxisSpaceForSubplots(org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$XYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)";
  "org.jfree.chart.plot$PiePlot#setAutoPopulateSectionOutlinePaint(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.chart.plot$Plot#setBackgroundImageAlpha(float)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.title$TextTitle#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$TextTitle#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#createBufferedImage(int,int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data.time$TimeSeriesCollection#getStartX(int,int)" -> "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeriesCollection#getStartX(int,int)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$TimeSeriesCollection#getStartX(int,int)" -> "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeriesCollection#getStartX(int,int)" -> "org.jfree.data.time$Month#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.data.general$DefaultPieDataset#getValue(int)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getLabelLinkDepth()";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.data$DefaultKeyedValues#getItemCount()";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.data.general$DefaultPieDataset#getItemCount()";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.data.general$DefaultPieDataset#getKey(int)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$RingPlot#getLabelLinkDepth()";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.text$G2TextMeasurer#G2TextMeasurer(java.awt.Graphics2D)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.data$DefaultKeyedValues#getKey(int)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PieLabelDistributor#distributeLabels(double,double)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#clear()";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#addPieLabelRecord(org.jfree.chart.plot.PieLabelRecord)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#getItemCount()";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#drawLeftLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,org.jfree.chart.text.TextMeasurer)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getInteriorGap()";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.data$DefaultKeyedValues#getValue(int)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getExplodePercent(java.lang.Comparable)";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)";
  "org.jfree.chart.axis$NumberAxis#calculateVisibleTickCount()" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$NumberAxis#calculateVisibleTickCount()" -> "org.jfree.chart.axis$TickUnit#getSize()";
  "org.jfree.chart.axis$NumberAxis#calculateVisibleTickCount()" -> "org.jfree.chart.axis$NumberAxis#getTickUnit()";
  "org.jfree.chart.axis$NumberAxis#calculateVisibleTickCount()" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$NumberAxis#calculateVisibleTickCount()" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$DateTickUnit#toString()" -> "org.jfree.chart.axis$DateTickUnitType#toString()";
  "org.jfree.chart.block$LabelBlock#setPaint(java.awt.Paint)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.block$LabelBlock#setPaint(java.awt.Paint)" -> "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint)";
  "org.jfree.data.time$DateRange#DateRange()" -> "org.jfree.data.time$DateRange#DateRange(java.util.Date,java.util.Date)";
  "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisLocation(int)";
  "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.util$RectangleEdge#opposite(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#calculateDomainMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#calculateDomainMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#calculateDomainMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$RectangleAnchor#coordinates(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleAnchor)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#calculateDomainMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$LengthAdjustmentType#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#calculateDomainMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.xy$XYStepRenderer#hashCode()" -> "org.jfree.chart.renderer$AbstractRenderer#hashCode()";
  "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#AxisState(double)";
  "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$SymbolAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isVisible()";
  "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#setTicks(java.util.List)";
  "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.renderer$AbstractRenderer#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)";
  "org.jfree.chart.renderer$AbstractRenderer#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)";
  "org.jfree.chart.renderer$AbstractRenderer#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.axis$DateTickMarkPosition#equals(java.lang.Object)" -> "org.jfree.chart.axis$DateTickMarkPosition#toString()";
  "org.jfree.chart.axis$ValueAxis#setLowerBound(double)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#setLowerBound(double)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$ValueAxis#setLowerBound(double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$ValueAxis#setLowerBound(double)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.renderer$AbstractRenderer#getItemOutlineStroke(int,int,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlineStroke(int)";
  "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)";
  "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getRenderer()";
  "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getDomainMinorGridlineStroke()";
  "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.axis$ValueTick#getValue()";
  "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getDomainGridlineStroke()";
  "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getDomainGridlinePaint()";
  "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.axis$TickType#<clinit>()";
  "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.axis$ValueTick#getTickType()";
  "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getDomainMinorGridlinePaint()";
  "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#isDomainGridlinesVisible()";
  "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#isDomainMinorGridlinesVisible()";
  "org.jfree.chart.plot$CategoryPlot#getDataset()" -> "org.jfree.chart.plot$CategoryPlot#getDataset(int)";
  "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)" -> "org.jfree.chart.block$BlockBorder#equals(java.lang.Object)";
  "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)" -> "org.jfree.chart.block$LineBorder#equals(java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)";
  "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)" -> "org.jfree.chart.plot$XYPlot#configureRangeAxes()";
  "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#removeChangeListener(org.jfree.chart.event.RendererChangeListener)";
  "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)" -> "org.jfree.chart.plot$XYPlot#getRenderer(int)";
  "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)" -> "org.jfree.chart.plot$XYPlot#configureDomainAxes()";
  "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#addChangeListener(org.jfree.chart.event.RendererChangeListener)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.labels$ItemLabelPosition#getItemLabelAnchor()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.labels$ItemLabelPosition#getAngle()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,double,double,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getPositiveItemLabelPosition(int,int,boolean)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.labels$ItemLabelPosition#getRotationAnchor()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getNegativeItemLabelPosition(int,int,boolean)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.labels$ItemLabelPosition#getTextAnchor()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemLabelPaint(int,int,boolean)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getItemLabelGenerator(int,int,boolean)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemLabelFont(int,int,boolean)";
  "org.jfree.chart.entity$AxisEntity#hashCode()" -> "org.jfree.chart.entity$ChartEntity#getToolTipText()";
  "org.jfree.chart.entity$AxisEntity#hashCode()" -> "org.jfree.chart.entity$ChartEntity#getURLText()";
  "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font,java.awt.Paint)" -> "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font,java.awt.Paint,float)";
  "org.jfree.chart.text$TextLine#TextLine(java.lang.String)" -> "org.jfree.chart.text$TextFragment#<clinit>()";
  "org.jfree.chart.text$TextLine#TextLine(java.lang.String)" -> "org.jfree.chart.text$TextLine#TextLine(java.lang.String,java.awt.Font)";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis(int)";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$PeriodAxis#configure()";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$LogAxis#configure()";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$PiePlot3D#equals(java.lang.Object)" -> "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)";
  "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D)" -> "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D)" -> "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D)" -> "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D)" -> "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D)" -> "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D)" -> "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D)" -> "org.jfree.chart.block$LabelBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.axis$ValueAxis#setFixedAutoRange(double)" -> "org.jfree.chart.axis$PeriodAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setFixedAutoRange(double)" -> "org.jfree.chart.axis$DateAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setFixedAutoRange(double)" -> "org.jfree.chart.axis$SymbolAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setFixedAutoRange(double)" -> "org.jfree.chart.axis$ValueAxis#isAutoRange()";
  "org.jfree.chart.axis$ValueAxis#setFixedAutoRange(double)" -> "org.jfree.chart.axis$NumberAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setFixedAutoRange(double)" -> "org.jfree.chart.axis$LogAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setFixedAutoRange(double)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$ValueAxis#setFixedAutoRange(double)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.plot$PlotRenderingInfo#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.entity$PlotEntity#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)";
  "org.jfree.chart.entity$PlotEntity#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.entity$ChartEntity#getArea()";
  "org.jfree.chart.axis$LogAxis#setBase(double)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$LogAxis#setBase(double)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)" -> "org.jfree.data$RangeType#equals(java.lang.Object)";
  "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)" -> "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)";
  "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.data$RangeType#toString()";
  "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)";
  "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeAttributedString(java.text.AttributedString,java.io.ObjectOutputStream)";
  "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)";
  "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#convertName(java.lang.String,java.lang.Class)";
  "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart$LegendItem#<clinit>()";
  "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)";
  "org.jfree.chart.plot$PlotOrientation#equals(java.lang.Object)" -> "org.jfree.chart.plot$PlotOrientation#toString()";
  "org.jfree.chart.util$StrokeMap#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.util$StrokeMap#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$StrokeMap#equals(java.lang.Object)" -> "org.jfree.chart.util$StrokeMap#getStroke(java.lang.Comparable)";
  "org.jfree.chart.renderer$AbstractRenderer#setBasePaint(java.awt.Paint)" -> "org.jfree.chart.renderer$AbstractRenderer#setBasePaint(java.awt.Paint,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setBasePaint(java.awt.Paint,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.data.time$Month#next()" -> "org.jfree.data.time$Month#Month(int,int)";
  "org.jfree.chart.axis$PeriodAxis#setMinorTickTimePeriodClass(java.lang.Class)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$PeriodAxis#setMinorTickTimePeriodClass(java.lang.Class)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$LogAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.axis$LogAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.axis$LogAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#createTickLabel(double)";
  "org.jfree.chart.axis$LogAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getLowerBound()";
  "org.jfree.chart.axis$LogAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getUpperBound()";
  "org.jfree.chart.axis$LogAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$LogAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnit#getSize()";
  "org.jfree.chart.axis$LogAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$LogAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isAutoTickUnitSelection()";
  "org.jfree.chart.axis$LogAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberTick#NumberTick(org.jfree.chart.axis.TickType,double,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)";
  "org.jfree.chart.axis$LogAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$LogAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickType#<clinit>()";
  "org.jfree.chart.axis$LogAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnit#getMinorTickCount()";
  "org.jfree.chart.axis$LogAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#calculateLog(double)";
  "org.jfree.chart.axis$LogAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$LogAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#calculateValue(double)";
  "org.jfree.chart.axis$DateAxis#<clinit>()" -> "org.jfree.chart.axis$DateTickUnitType#<clinit>()";
  "org.jfree.chart.axis$DateAxis#<clinit>()" -> "org.jfree.data.time$DateRange#DateRange()";
  "org.jfree.chart.axis$DateAxis#<clinit>()" -> "org.jfree.chart.axis$DateTickUnit#DateTickUnit(org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)";
  "org.jfree.chart.axis$DateAxis#<clinit>()" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.axis$DateAxis#<clinit>()" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.renderer$AbstractRenderer#removeChangeListener(org.jfree.chart.event.RendererChangeListener)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor)" -> "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)";
  "org.jfree.chart.axis$DateAxis#setRange(double,double)" -> "org.jfree.data.time$DateRange#DateRange(double,double)";
  "org.jfree.chart.axis$DateAxis#setRange(double,double)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)";
  "org.jfree.data.time$DateRange#DateRange(double,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getDefaultBarPainter()" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getDefaultBarPainter()" -> "org.jfree.chart.renderer.xy$XYBarRenderer#<clinit>()";
  "org.jfree.chart.axis$SegmentedTimeline#newMondayThroughFridayTimeline()" -> "org.jfree.chart.axis$SegmentedTimeline#setStartTime(long)";
  "org.jfree.chart.axis$SegmentedTimeline#newMondayThroughFridayTimeline()" -> "org.jfree.chart.axis$SegmentedTimeline#SegmentedTimeline(long,int,int)";
  "org.jfree.chart.axis$SegmentedTimeline#newMondayThroughFridayTimeline()" -> "org.jfree.chart.axis$SegmentedTimeline#<clinit>()";
  "org.jfree.chart.axis$SegmentedTimeline#newMondayThroughFridayTimeline()" -> "org.jfree.chart.axis$SegmentedTimeline#firstMondayAfter1900()";
  "org.jfree.chart.plot$Plot#createAndAddEntity(java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo,java.lang.String,java.lang.String)" -> "org.jfree.chart.entity$PlotEntity#PlotEntity(java.awt.Shape,org.jfree.chart.plot.Plot,java.lang.String,java.lang.String)";
  "org.jfree.chart.plot$Plot#createAndAddEntity(java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo,java.lang.String,java.lang.String)" -> "org.jfree.chart$ChartRenderingInfo#getEntityCollection()";
  "org.jfree.chart.plot$Plot#createAndAddEntity(java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo,java.lang.String,java.lang.String)" -> "org.jfree.chart.plot$PlotRenderingInfo#getOwner()";
  "org.jfree.chart.entity$PlotEntity#PlotEntity(java.awt.Shape,org.jfree.chart.plot.Plot,java.lang.String,java.lang.String)" -> "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String,java.lang.String)";
  "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int)" -> "org.jfree.data.time$SerialDate#SerialDate()";
  "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int)" -> "org.jfree.data.time$SpreadsheetDate#calcSerial(int,int,int)";
  "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int)" -> "org.jfree.data.time$SerialDate#leapYearCount(int)";
  "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int)" -> "org.jfree.data.time$SerialDate#isLeapYear(int)";
  "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#getRenderer(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#getRenderer(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()";
  "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$XYSeriesCollection#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$DefaultXYDataset#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.time$TimeSeriesCollection#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()";
  "org.jfree.chart.plot$XYPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisCount()";
  "org.jfree.chart.plot$XYPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.plot$XYPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$XYPlot#isRangePannable()";
  "org.jfree.chart.plot$XYPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis(int)";
  "org.jfree.chart.plot$XYPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$LogAxis#pan(double)";
  "org.jfree.chart.plot$XYPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$ValueAxis#pan(double)";
  "org.jfree.chart.plot$XYPlot#getRangeAxisCount()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelsVisible(int,java.lang.Boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelsVisible(int,java.lang.Boolean,boolean)";
  "org.jfree.chart.axis$SegmentedTimeline#getSegment(java.util.Date)" -> "org.jfree.chart.axis$SegmentedTimeline#getTime(java.util.Date)";
  "org.jfree.chart.axis$SegmentedTimeline#getSegment(java.util.Date)" -> "org.jfree.chart.axis$SegmentedTimeline#getSegment(long)";
  "org.jfree.chart.plot$RingPlot#setSeparatorsVisible(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.text$TextFragment#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$XYPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#indexOf(java.lang.Object)";
  "org.jfree.data.general$DefaultPieDataset#clear()" -> "org.jfree.data.general$AbstractDataset#fireDatasetChanged()";
  "org.jfree.data.general$DefaultPieDataset#clear()" -> "org.jfree.data$DefaultKeyedValues#clear()";
  "org.jfree.data.general$DefaultPieDataset#clear()" -> "org.jfree.data.general$DefaultPieDataset#getItemCount()";
  "org.jfree.chart.util$LogFormat#format(long,java.lang.StringBuffer,java.text.FieldPosition)" -> "org.jfree.chart.util$LogFormat#calculateLog(double)";
  "org.jfree.chart.axis$PeriodAxis#setMinorTickMarksVisible(boolean)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$PeriodAxis#setMinorTickMarksVisible(boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#clone()" -> "org.jfree.chart.util$LogFormat#clone()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#XYLineAndShapeRenderer(boolean,boolean)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#AbstractXYItemRenderer()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#XYLineAndShapeRenderer(boolean,boolean)" -> "org.jfree.chart.util$BooleanList#BooleanList()";
  "org.jfree.data.time$Month#Month(int,org.jfree.data.time.Year)" -> "org.jfree.data.time$Month#peg(java.util.Calendar)";
  "org.jfree.data.time$Month#Month(int,org.jfree.data.time.Year)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.time$Month#Month(int,org.jfree.data.time.Year)" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.chart.plot$PolarPlot#setRenderer(org.jfree.chart.renderer.PolarItemRenderer)" -> "org.jfree.chart.renderer$AbstractRenderer#removeChangeListener(org.jfree.chart.event.RendererChangeListener)";
  "org.jfree.chart.plot$PolarPlot#setRenderer(org.jfree.chart.renderer.PolarItemRenderer)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#mapDatasetToDomainAxes(int,java.util.List)" -> "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)";
  "org.jfree.chart.plot$XYPlot#mapDatasetToDomainAxes(int,java.util.List)" -> "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$XYPlot#mapDatasetToDomainAxes(int,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getDataset(int)";
  "org.jfree.chart.plot$XYPlot#mapDatasetToDomainAxes(int,java.util.List)" -> "org.jfree.chart.plot$XYPlot#checkAxisIndices(java.util.List)";
  "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis()";
  "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation()";
  "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$LogAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#getDataArea()";
  "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double)";
  "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double)";
  "org.jfree.chart.axis$DateAxis#calculateLowestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateAxis#nextStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)";
  "org.jfree.chart.axis$DateAxis#calculateLowestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateAxis#getMinimumDate()";
  "org.jfree.chart.text$TextUtilities#drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.util$ObjectUtilities#setClassLoaderSource(java.lang.String)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)" -> "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean)";
  "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)" -> "org.jfree.data$Range#getLength()";
  "org.jfree.chart.plot$CategoryPlot#setColumnRenderingOrder(org.jfree.chart.util.SortOrder)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.time$TimeSeriesDataItem#hashCode()" -> "org.jfree.data.time$Month#hashCode()";
  "org.jfree.data.time$TimeSeriesDataItem#hashCode()" -> "org.jfree.data.time$Day#hashCode()";
  "org.jfree.data.time$TimeSeriesDataItem#hashCode()" -> "org.jfree.data.time$Year#hashCode()";
  "org.jfree.chart.axis$Axis#setLabelFont(java.awt.Font)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.chart.renderer.category$GradientBarPainter#GradientBarPainter()" -> "org.jfree.chart.renderer.category$GradientBarPainter#GradientBarPainter(double,double,double)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart.renderer.xy$GradientXYBarPainter#equals(java.lang.Object)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart.renderer.category$GradientBarPainter#equals(java.lang.Object)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart.plot$PieLabelLinkStyle#equals(java.lang.Object)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#configureDomainAxes()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#configureDomainAxes()" -> "org.jfree.chart.axis$LogAxis#configure()";
  "org.jfree.chart.plot$XYPlot#configureDomainAxes()" -> "org.jfree.chart.axis$PeriodAxis#configure()";
  "org.jfree.chart.plot$XYPlot#configureDomainAxes()" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.plot$XYPlot#configureDomainAxes()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#configureDomainAxes()" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.renderer$AbstractRenderer#getItemShape(int,int,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesShape(int)";
  "org.jfree.data.time$TimeSeriesCollection#getItemCount(int)" -> "org.jfree.data.time$TimeSeriesCollection#getSeries(int)";
  "org.jfree.data.time$TimeSeriesCollection#getItemCount(int)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairColumnKey(java.lang.Comparable,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.block$CenterArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.block$CenterArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$CenterArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$CenterArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#toFixedWidth(double)";
  "org.jfree.chart.block$CenterArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.block$CenterArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthRange()";
  "org.jfree.chart.block$CenterArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$CenterArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#remove(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#remove(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.axis$PeriodAxis#configure()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#remove(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#remove(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#remove(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#remove(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.axis$LogAxis#configure()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#remove(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$Plot#removeChangeListener(org.jfree.chart.event.PlotChangeListener)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#remove(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$Plot#setParent(org.jfree.chart.plot.Plot)";
  "org.jfree.data.xy$XYSeries#indexOf(java.lang.Number)" -> "org.jfree.data.xy$XYDataItem#XYDataItem(java.lang.Number,java.lang.Number)";
  "org.jfree.data.xy$XYSeries#indexOf(java.lang.Number)" -> "org.jfree.data.xy$XYDataItem#getX()";
  "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block)" -> "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block,java.lang.Object)";
  "org.jfree.data.general$DefaultPieDataset#getValue(int)" -> "org.jfree.data.general$DefaultPieDataset#getItemCount()";
  "org.jfree.data.general$DefaultPieDataset#getValue(int)" -> "org.jfree.data$DefaultKeyedValues#getValue(int)";
  "org.jfree.data.xy$XYSeries#addOrUpdate(java.lang.Number,java.lang.Number)" -> "org.jfree.data.xy$XYSeries#addOrUpdate(org.jfree.data.xy.XYDataItem)";
  "org.jfree.data.xy$XYSeries#addOrUpdate(java.lang.Number,java.lang.Number)" -> "org.jfree.data.xy$XYDataItem#XYDataItem(java.lang.Number,java.lang.Number)";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$PeriodAxis#drawTickMarks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$PeriodAxis#drawTickMarksVertical(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$SymbolAxis#drawGridBandsVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,boolean,java.util.List)" -> "org.jfree.chart.axis$ValueTick#getValue()";
  "org.jfree.chart.axis$SymbolAxis#drawGridBandsVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,boolean,java.util.List)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$SymbolAxis#drawGridBandsVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,boolean,java.util.List)" -> "org.jfree.chart.axis$Axis#getPlot()";
  "org.jfree.chart.axis$SymbolAxis#drawGridBandsVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,boolean,java.util.List)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$SymbolAxis#drawGridBandsVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,boolean,java.util.List)" -> "org.jfree.chart.plot$Plot#getOutlineStroke()";
  "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.renderer.category$BarRenderer3D#getXOffset()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.plot$CategoryPlot#getRangeGridlineStroke()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.plot$CategoryPlot#getRangeGridlinePaint()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.plot$CategoryPlot#getOrientation()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)" -> "org.jfree.chart.renderer.category$BarRenderer3D#getYOffset()";
  "org.jfree.data.time$TimeSeriesCollection#getSeries(int)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()";
  "org.jfree.chart.util$LogFormat#getExponentFormat()" -> "org.jfree.chart.util$LogFormat#clone()";
  "org.jfree.chart.text$TextFragment#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.block$LineBorder#getPaint()";
  "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)";
  "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)";
  "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)";
  "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)";
  "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.block$LineBorder#getStroke()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setLegendItemURLGenerator(org.jfree.chart.labels.CategorySeriesLabelGenerator)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.data.general$DatasetUtilities#createPieDatasetForColumn(org.jfree.data.category.CategoryDataset,java.lang.Comparable)" -> "org.jfree.data.general$DatasetUtilities#createPieDatasetForColumn(org.jfree.data.category.CategoryDataset,int)";
  "org.jfree.data.general$DatasetUtilities#createPieDatasetForColumn(org.jfree.data.category.CategoryDataset,int)" -> "org.jfree.data.general$DefaultPieDataset#setValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data.general$DatasetUtilities#createPieDatasetForColumn(org.jfree.data.category.CategoryDataset,int)" -> "org.jfree.data.general$DefaultPieDataset#DefaultPieDataset()";
  "org.jfree.chart.plot$XYPlot#getRenderer()" -> "org.jfree.chart.plot$XYPlot#getRenderer(int)";
  "org.jfree.data.time$Year#parseYear(java.lang.String)" -> "org.jfree.data.time$Year#Year(int)";
  "org.jfree.data.time$Year#Year(int)" -> "org.jfree.data.time$Year#peg(java.util.Calendar)";
  "org.jfree.data.time$Year#Year(int)" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.chart.plot$MultiplePiePlot#setPieChart(org.jfree.chart.JFreeChart)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$MultiplePiePlot#setPieChart(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$JFreeChart#getPlot()";
  "org.jfree.chart.block$CenterArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthRange()";
  "org.jfree.chart.block$CenterArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.block$CenterArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.block$CenterArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#toFixedWidth(double)";
  "org.jfree.chart.block$CenterArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$CenterArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$CenterArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#constrain(double)";
  "org.jfree.chart.block$CenterArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$CenterArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation)" -> "org.jfree.chart.renderer$AbstractRenderer#notifyListeners(org.jfree.chart.event.RendererChangeEvent)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation)" -> "org.jfree.chart.event$RendererChangeEvent#RendererChangeEvent(java.lang.Object)";
  "org.jfree.chart.util$PaintMap#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.util$PaintMap#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintMap#getPaint(java.lang.Comparable)";
  "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)" -> "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)";
  "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)" -> "org.jfree.data.time$TimeSeries#findBoundsByIteration()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)" -> "org.jfree.data.time$Month#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)" -> "org.jfree.data.time$Day#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)" -> "org.jfree.data.time$Year#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.chart.entity$CategoryItemEntity#CategoryItemEntity(java.awt.Shape,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,java.lang.Comparable,java.lang.Comparable)" -> "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String,java.lang.String)";
  "org.jfree.data.time$RegularTimePeriod#toString()" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.chart.util$RectangleInsets#extendHeight(double)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)";
  "org.jfree.chart.util$RectangleInsets#extendHeight(double)" -> "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)";
  "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.block$LabelBlock#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockResult#setEntityCollection(org.jfree.chart.entity.EntityCollection)";
  "org.jfree.chart.block$LabelBlock#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.util$RectangleAnchor#coordinates(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleAnchor)";
  "org.jfree.chart.block$LabelBlock#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockParams#getGenerateEntities()";
  "org.jfree.chart.block$LabelBlock#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockResult#BlockResult()";
  "org.jfree.chart.block$LabelBlock#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#trimMargin(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$LabelBlock#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String,java.lang.String)";
  "org.jfree.chart.block$LabelBlock#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$LabelBlock#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#trimPadding(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$LabelBlock#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.block$LabelBlock#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#trimBorder(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$LabelBlock#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor)";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.title$LegendItemBlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart.util$RectangleInsets#hashCode()" -> "org.jfree.chart.util$UnitType#hashCode()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.data.time$TimeSeries#hashCode()" -> "org.jfree.data.time$TimeSeries#getRawDataItem(int)";
  "org.jfree.data.time$TimeSeries#hashCode()" -> "org.jfree.data.general$Series#hashCode()";
  "org.jfree.data.time$TimeSeries#hashCode()" -> "org.jfree.data.time$TimeSeriesDataItem#hashCode()";
  "org.jfree.data.time$TimeSeries#hashCode()" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.chart.renderer$AbstractRenderer#getSeriesOutlinePaint(int)" -> "org.jfree.chart.util$PaintList#getPaint(int)";
  "org.jfree.data.general$DatasetUtilities#findMaximumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$DefaultXYDataset#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#findMaximumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$XYSeriesCollection#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#findMaximumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$IntervalXYDelegate#getDomainUpperBound(boolean)";
  "org.jfree.data.general$DatasetUtilities#findMaximumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$DefaultXYDataset#getXValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#findMaximumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$AbstractIntervalXYDataset#getEndXValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#findMaximumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.data.general$DatasetUtilities#findMaximumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.time$TimeSeriesCollection#getItemCount(int)";
  "org.jfree.data.general$DatasetUtilities#findMaximumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$XYSeriesCollection#getDomainUpperBound(boolean)";
  "org.jfree.data.general$DatasetUtilities#findMaximumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()";
  "org.jfree.data.general$DatasetUtilities#findMaximumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#findMaximumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()";
  "org.jfree.data.general$DatasetUtilities#findMaximumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#findMaximumDomainValue(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.time$TimeSeriesCollection#getDomainUpperBound(boolean)";
  "org.jfree.chart.block$RectangleConstraint#calculateConstrainedSize(org.jfree.chart.util.Size2D)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#calculateConstrainedSize(org.jfree.chart.util.Size2D)" -> "org.jfree.data$Range#constrain(double)";
  "org.jfree.chart.block$RectangleConstraint#calculateConstrainedSize(org.jfree.chart.util.Size2D)" -> "org.jfree.chart.util$Size2D#Size2D()";
  "org.jfree.chart.plot$XYPlot#setDomainCrosshairLockedOnData(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.block$RectangleConstraint#toUnconstrainedWidth()" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#toUnconstrainedWidth()" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#toUnconstrainedWidth()" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.axis$DateTickMarkPosition#readResolve()" -> "org.jfree.chart.axis$DateTickMarkPosition#<clinit>()";
  "org.jfree.chart.axis$DateTickMarkPosition#readResolve()" -> "org.jfree.chart.axis$DateTickMarkPosition#equals(java.lang.Object)";
  "org.jfree.chart.axis$DateTickMarkPosition#<clinit>()" -> "org.jfree.chart.axis$DateTickMarkPosition#DateTickMarkPosition(java.lang.String)";
  "org.jfree.chart.plot$PiePlot#setShadowPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$PiePlot#setDataset(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setDataset(org.jfree.data.general.PieDataset)" -> "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)";
  "org.jfree.chart.plot$PiePlot#setDataset(org.jfree.data.general.PieDataset)" -> "org.jfree.data.general$AbstractDataset#removeChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.chart.plot$PiePlot#setDataset(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.plot$Plot#setDatasetGroup(org.jfree.data.general.DatasetGroup)";
  "org.jfree.chart.plot$PiePlot#setDataset(org.jfree.data.general.PieDataset)" -> "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.chart.plot$PiePlot#setDataset(org.jfree.data.general.PieDataset)" -> "org.jfree.data.general$AbstractDataset#getGroup()";
  "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone,java.util.Locale)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone,java.util.Locale)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone,java.util.Locale)" -> "org.jfree.chart.axis$DateTickMarkPosition#<clinit>()";
  "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone,java.util.Locale)" -> "org.jfree.chart.axis$ValueAxis#ValueAxis(java.lang.String,org.jfree.chart.axis.TickUnitSource)";
  "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone,java.util.Locale)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone,java.util.Locale)" -> "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)";
  "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone,java.util.Locale)" -> "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)";
  "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone,java.util.Locale)" -> "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double)";
  "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone,java.util.Locale)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisForDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer(int)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisForDataset(int)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)";
  "org.jfree.chart.plot$CategoryPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CategoryPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CategoryPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#AxisSpace()";
  "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CategoryCrosshairState)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getPassCount()";
  "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CategoryCrosshairState)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CategoryCrosshairState)" -> "org.jfree.chart.renderer.category$BarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CategoryCrosshairState)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisForDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CategoryCrosshairState)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisForDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CategoryCrosshairState)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer(int)";
  "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CategoryCrosshairState)" -> "org.jfree.chart.renderer.category$BarRenderer3D#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CategoryCrosshairState)" -> "org.jfree.chart.plot$CategoryPlot#getDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CategoryCrosshairState)" -> "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)";
  "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CategoryCrosshairState)" -> "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.category.CategoryDataset)";
  "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CategoryCrosshairState)" -> "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseItemLabelGenerator(org.jfree.chart.labels.XYItemLabelGenerator,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.labels$StandardPieToolTipGenerator#clone()" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#clone()";
  "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.xy.TableXYDataset)" -> "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)";
  "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)" -> "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)";
  "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.util$StandardGradientPaintTransformer#transform(java.awt.GradientPaint,java.awt.Shape)" -> "org.jfree.chart.util$GradientPaintTransformType#<clinit>()";
  "org.jfree.chart.util$StandardGradientPaintTransformer#transform(java.awt.GradientPaint,java.awt.Shape)" -> "org.jfree.chart.util$GradientPaintTransformType#equals(java.lang.Object)";
  "org.jfree.data.time$SerialDate#addMonths(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$SerialDate#addMonths(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#addMonths(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$SerialDate#addMonths(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$SerialDate#addMonths(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#createInstance(int,int,int)";
  "org.jfree.data.time$SerialDate#addMonths(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator,boolean)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.data.time$Month#parseMonth(java.lang.String)" -> "org.jfree.data.time$Month#evaluateAsYear(java.lang.String)";
  "org.jfree.data.time$Month#parseMonth(java.lang.String)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$Month#parseMonth(java.lang.String)" -> "org.jfree.data.time$Month#findSeparator(java.lang.String)";
  "org.jfree.data.time$Month#parseMonth(java.lang.String)" -> "org.jfree.data.time$SerialDate#stringToMonthCode(java.lang.String)";
  "org.jfree.data.time$Month#parseMonth(java.lang.String)" -> "org.jfree.data.time$Month#Month(int,org.jfree.data.time.Year)";
  "org.jfree.data.time$Month#evaluateAsYear(java.lang.String)" -> "org.jfree.data.time$Year#parseYear(java.lang.String)";
  "org.jfree.chart.plot$CategoryPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.axis$ValueAxis#getLowerBound()" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$CategoryAxis#clone()" -> "org.jfree.chart.axis$Axis#clone()";
  "org.jfree.chart.plot$RingPlot#RingPlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#Size2D()";
  "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$ColumnArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightConstraintType()";
  "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthConstraintType()";
  "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)";
  "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$ColumnArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.util$Size2D#Size2D()" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)";
  "org.jfree.chart.axis$ValueAxis#setUpperBound(double)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#setUpperBound(double)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$ValueAxis#setUpperBound(double)" -> "org.jfree.chart.axis$ValueAxis#setRange(double,double)";
  "org.jfree.chart.axis$ValueAxis#setUpperBound(double)" -> "org.jfree.chart.axis$DateAxis#setRange(double,double)";
  "org.jfree.chart.axis$ValueAxis#setUpperBound(double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$ValueAxis#setUpperBound(double)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.renderer$AbstractRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)";
  "org.jfree.chart.renderer$AbstractRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$BooleanList#equals(java.lang.Object)";
  "org.jfree.chart.renderer$AbstractRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.renderer$AbstractRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.renderer$AbstractRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.renderer$AbstractRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#createStandardTickUnits()" -> "org.jfree.chart.axis$TickUnits#TickUnits()";
  "org.jfree.chart.axis$NumberAxis#createStandardTickUnits()" -> "org.jfree.chart.axis$TickUnits#add(org.jfree.chart.axis.TickUnit)";
  "org.jfree.chart.axis$NumberAxis#createStandardTickUnits()" -> "org.jfree.chart.axis$NumberTickUnit#NumberTickUnit(double,java.text.NumberFormat,int)";
  "org.jfree.chart.util$ShapeList#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)";
  "org.jfree.chart.util$ShapeList#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.util$ShapeList#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$ShapeList#getShape(int)";
  "org.jfree.chart.axis$NumberAxis#setAutoRangeStickyZero(boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$NumberAxis#setAutoRangeStickyZero(boolean)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$NumberAxis#setAutoRangeStickyZero(boolean)" -> "org.jfree.chart.axis$ValueAxis#isAutoRange()";
  "org.jfree.chart.axis$NumberAxis#setAutoRangeStickyZero(boolean)" -> "org.jfree.chart.axis$SymbolAxis#autoAdjustRange()";
  "org.jfree.chart.axis$NumberAxis#setAutoRangeStickyZero(boolean)" -> "org.jfree.chart.axis$NumberAxis#autoAdjustRange()";
  "org.jfree.chart.renderer.category$BarRenderer#calculateBarL0L1(double)" -> "org.jfree.chart.renderer.category$BarRenderer#getLowerClip()";
  "org.jfree.chart.renderer.category$BarRenderer#calculateBarL0L1(double)" -> "org.jfree.chart.renderer.category$BarRenderer#getUpperClip()";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)" -> "org.jfree.data$Range#shiftWithNoZeroCrossing(double,double)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getSeriesLinesVisible(int)" -> "org.jfree.chart.util$BooleanList#getBoolean(int)";
  "org.jfree.chart.plot$XYPlot#addAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart.plot$XYPlot#addAnnotation(org.jfree.chart.annotations.XYAnnotation,boolean)";
  "org.jfree.chart.plot$XYPlot#addAnnotation(org.jfree.chart.annotations.XYAnnotation,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#clearSelection()" -> "org.jfree.data.time$TimeSeriesCollection#clearSelection()";
  "org.jfree.chart.plot$XYPlot#clearSelection()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#clearSelection()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#clearSelection()" -> "org.jfree.data.xy$AbstractXYDataset#getSelectionState()";
  "org.jfree.chart.plot$XYPlot#clearSelection()" -> "org.jfree.data.xy$XYSeriesCollection#clearSelection()";
  "org.jfree.chart.axis$LogAxis#LogAxis()" -> "org.jfree.chart.axis$LogAxis#LogAxis(java.lang.String)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getItemLabelGenerator(int,int,boolean)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#equalShapes(java.awt.Shape[],java.awt.Shape[])";
  "org.jfree.data.xy$DefaultXYDataset#getY(int,int)" -> "org.jfree.data.xy$DefaultXYDataset#getYValue(int,int)";
  "org.jfree.chart.plot$XYPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#isRangeZeroBaselineVisible()";
  "org.jfree.chart.plot$XYPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getRenderer()";
  "org.jfree.chart.plot$XYPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.plot$XYPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)";
  "org.jfree.chart$JFreeChart#removeLegend()" -> "org.jfree.chart$JFreeChart#getLegend()";
  "org.jfree.chart$JFreeChart#removeLegend()" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart.util$StrokeList#StrokeList()" -> "org.jfree.chart.util$AbstractObjectList#AbstractObjectList()";
  "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)";
  "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#XYLineAndShapeRenderer()" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#XYLineAndShapeRenderer(boolean,boolean)";
  "org.jfree.chart.axis$CategoryAxis#setUpperMargin(double)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$CategoryAxis#setUpperMargin(double)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#equals(java.lang.Object)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#equals(java.lang.Object)";
  "org.jfree.chart.block$AbstractBlock#trimPadding(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesFillPaint(int)" -> "org.jfree.chart.renderer$AbstractRenderer#getSeriesFillPaint(int)";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesFillPaint(int)" -> "org.jfree.chart.renderer$AbstractRenderer#setSeriesFillPaint(int,java.awt.Paint,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesFillPaint(int)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getDrawingSupplier()";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesFillPaint(int)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#getNextFillPaint()";
  "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesFillPaint(int)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getDrawingSupplier()";
  "org.jfree.chart.title$LegendTitle#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.renderer$AbstractRenderer#getItemCreateEntity(int,int,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getSeriesCreateEntities(int)";
  "org.jfree.chart.block$BlockBorder#equals(java.lang.Object)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart.block$BlockBorder#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseShape(java.awt.Shape)" -> "org.jfree.chart.renderer$AbstractRenderer#setBaseShape(java.awt.Shape,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseShape(java.awt.Shape,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.util$RectangleAnchor#coordinates(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.util$RectangleEdge#readResolve()" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.util$RectangleEdge#readResolve()" -> "org.jfree.chart.util$RectangleEdge#equals(java.lang.Object)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#setLegendArea(java.awt.Shape)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.data.time$SerialDate#addYears(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#addYears(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$SerialDate#addYears(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$SerialDate#addYears(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)";
  "org.jfree.data.time$SerialDate#addYears(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#createInstance(int,int,int)";
  "org.jfree.data.time$SerialDate#addYears(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets,boolean)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$DateAxis#zoomRange(double,double)";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$LogAxis#zoomRange(double,double)";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.axis$SegmentedTimeline#toTimelineValue(java.util.Date)" -> "org.jfree.chart.axis$SegmentedTimeline#toTimelineValue(long)";
  "org.jfree.chart.axis$SegmentedTimeline#toTimelineValue(java.util.Date)" -> "org.jfree.chart.axis$SegmentedTimeline#getTime(java.util.Date)";
  "org.jfree.chart.axis$NumberTickUnit#toString()" -> "org.jfree.chart.axis$NumberTickUnit#valueToString(double)";
  "org.jfree.chart.axis$NumberTickUnit#toString()" -> "org.jfree.chart.axis$TickUnit#getSize()";
  "org.jfree.data.time$TimeSeriesCollection#removeSeries(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.general$AbstractDataset#fireDatasetChanged()";
  "org.jfree.data.time$TimeSeriesCollection#removeSeries(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.general$Series#removeChangeListener(org.jfree.data.general.SeriesChangeListener)";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.axis$NumberTickUnit#valueToString(double)";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.util$RectangleInsets#getRight()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.axis$DateTickUnit#valueToString(double)";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.util$RectangleInsets#getLeft()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.axis$TickUnit#valueToString(double)";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.axis$NumberAxis#getNumberFormatOverride()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.axis$Axis#getTickLabelInsets()";
  "org.jfree.chart.entity$JFreeChartEntity#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)";
  "org.jfree.chart.entity$JFreeChartEntity#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.entity$ChartEntity#getArea()";
  "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)";
  "org.jfree.chart.plot$MultiplePiePlot#setDataset(org.jfree.data.category.CategoryDataset)" -> "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)";
  "org.jfree.chart.plot$MultiplePiePlot#setDataset(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$MultiplePiePlot#setDataset(org.jfree.data.category.CategoryDataset)" -> "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.chart.plot$MultiplePiePlot#setDataset(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.plot$Plot#setDatasetGroup(org.jfree.data.general.DatasetGroup)";
  "org.jfree.chart.plot$MultiplePiePlot#setDataset(org.jfree.data.category.CategoryDataset)" -> "org.jfree.data.general$AbstractDataset#removeChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.chart.plot$MultiplePiePlot#setDataset(org.jfree.data.category.CategoryDataset)" -> "org.jfree.data.general$AbstractDataset#getGroup()";
  "org.jfree.chart.plot$PiePlot#setLabelPadding(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#setPlotArea(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.entity$TitleEntity#TitleEntity(java.awt.Shape,org.jfree.chart.title.Title,java.lang.String,java.lang.String)" -> "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String,java.lang.String)";
  "org.jfree.chart.plot$XYPlot#getDomainAxisForDataset(int)" -> "org.jfree.chart.plot$XYPlot#getDatasetCount()";
  "org.jfree.chart.plot$XYPlot#getDomainAxisForDataset(int)" -> "org.jfree.chart.plot$XYPlot#getRendererCount()";
  "org.jfree.chart.plot$XYPlot#getDomainAxisForDataset(int)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis(int)";
  "org.jfree.chart.plot$XYPlot#getDatasetCount()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.text$G2TextMeasurer#getStringWidth(java.lang.String,int,int)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$G2TextMeasurer#getStringWidth(java.lang.String,int,int)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.block$AbstractBlock#trimBorder(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$AbstractBlock#trimBorder(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.block$BlockBorder#getInsets()";
  "org.jfree.chart.block$AbstractBlock#trimBorder(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.block$LineBorder#getInsets()";
  "org.jfree.chart.util$ObjectList#ObjectList()" -> "org.jfree.chart.util$AbstractObjectList#AbstractObjectList()";
  "org.jfree.chart.renderer.category$BarRenderer#setDefaultShadowsVisible(boolean)" -> "org.jfree.chart.renderer.category$BarRenderer#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer#setDefaultShadowsVisible(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.data.time$Day#hashCode()" -> "org.jfree.data.time$SpreadsheetDate#hashCode()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#CombinedDomainXYPlot(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#generateLabel(org.jfree.data.xy.XYDataset,int)" -> "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int)";
  "org.jfree.chart.axis$CategoryAxis#getTickLabelFont(java.lang.Comparable)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.util$ShapeUtilities#clone(java.awt.Shape)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ShapeUtilities#clone(java.awt.Shape)" -> "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)";
  "org.jfree.chart.plot$RingPlot#getLabelLinkDepth()" -> "org.jfree.chart.plot$PiePlot#getLabelLinkDepth()";
  "org.jfree.chart.plot$RingPlot#getLabelLinkDepth()" -> "org.jfree.chart.plot$RingPlot#getSectionDepth()";
  "org.jfree.chart.plot$PiePlot#setLabelLinkStyle(org.jfree.chart.plot.PieLabelLinkStyle)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()" -> "org.jfree.chart.axis$PeriodAxis#configure()";
  "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()" -> "org.jfree.chart.axis$LogAxis#configure()";
  "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)" -> "org.jfree.chart.title$TextTitle#<clinit>()";
  "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)" -> "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font,java.awt.Paint,org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart.axis$DateTickUnit#DateTickUnit(org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)" -> "org.jfree.chart.axis$DateTickUnit#DateTickUnit(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)";
  "org.jfree.data.time$TimeSeries#delete(int,int,boolean)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#delete(int,int,boolean)" -> "org.jfree.data.time$TimeSeries#findBoundsByIteration()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesToolTipGenerator(int,org.jfree.chart.labels.XYToolTipGenerator,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesToolTipGenerator(int,org.jfree.chart.labels.XYToolTipGenerator,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.data.time$Day#peg(java.util.Calendar)" -> "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#peg(java.util.Calendar)" -> "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#equals(java.lang.Object)" -> "org.jfree.chart.renderer$AbstractRenderer#equals(java.lang.Object)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#inExceptionSegments()" -> "org.jfree.chart.axis$SegmentedTimeline#<clinit>()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#hashCode()" -> "org.jfree.chart.renderer$AbstractRenderer#hashCode()";
  "org.jfree.chart.text$TextLine#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)" -> "org.jfree.chart.text$TextFragment#calculateDimensions(java.awt.Graphics2D)";
  "org.jfree.chart.text$TextLine#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.text$TextLine#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)" -> "org.jfree.chart.text$TextFragment#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)";
  "org.jfree.chart.text$TextLine#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)" -> "org.jfree.chart.text$TextLine#calculateBaselineOffset(java.awt.Graphics2D,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.text$TextLine#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.text$TextFragment#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextFragment#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.text$TextFragment#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.labels$AbstractPieItemLabelGenerator#clone()" -> "org.jfree.chart.util$LogFormat#clone()";
  "org.jfree.data.xy$XYSeriesCollection#getX(int,int)" -> "org.jfree.data.xy$XYSeries#getX(int)";
  "org.jfree.data.xy$IntervalXYDelegate#getDomainLowerBound(boolean)" -> "org.jfree.data.xy$IntervalXYDelegate#getDomainBounds(boolean)";
  "org.jfree.data.xy$IntervalXYDelegate#getDomainLowerBound(boolean)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.renderer$AbstractRenderer#isSeriesItemLabelsVisible(int)" -> "org.jfree.chart.util$BooleanList#getBoolean(int)";
  "org.jfree.chart.block$LabelBlock#LabelBlock(java.lang.String,java.awt.Font,java.awt.Paint)" -> "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint)";
  "org.jfree.chart.block$LabelBlock#LabelBlock(java.lang.String,java.awt.Font,java.awt.Paint)" -> "org.jfree.chart.block$AbstractBlock#AbstractBlock()";
  "org.jfree.chart.block$LabelBlock#LabelBlock(java.lang.String,java.awt.Font,java.awt.Paint)" -> "org.jfree.chart.text$TextBlockAnchor#<clinit>()";
  "org.jfree.chart.block$LabelBlock#LabelBlock(java.lang.String,java.awt.Font,java.awt.Paint)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.block$LabelBlock#LabelBlock(java.lang.String,java.awt.Font,java.awt.Paint)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint)" -> "org.jfree.chart.text$TextBlock#addLine(java.lang.String,java.awt.Font,java.awt.Paint)";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint)" -> "org.jfree.chart.text$TextBlock#TextBlock()";
  "org.jfree.chart.renderer$AbstractRenderer#setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition)" -> "org.jfree.chart.renderer$AbstractRenderer#setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.plot$CategoryPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$CategoryPlot#isRangePannable()";
  "org.jfree.chart.plot$CategoryPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.plot$CategoryPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.data$Range#getLength()";
  "org.jfree.chart.plot$CategoryPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)";
  "org.jfree.chart.plot$CategoryPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$ValueAxis#getUpperBound()";
  "org.jfree.chart.plot$CategoryPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$ValueAxis#getLowerBound()";
  "org.jfree.chart.plot$CategoryPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$DateAxis#setRange(double,double)";
  "org.jfree.chart.plot$CategoryPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisCount()";
  "org.jfree.chart.plot$CategoryPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.plot$CategoryPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$ValueAxis#setRange(double,double)";
  "org.jfree.chart.axis$SymbolAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$SymbolAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$SymbolAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$SymbolAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$SymbolAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$SymbolAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.title$LegendTitle#setItemFont(java.awt.Font)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$LegendTitle#setItemFont(java.awt.Font)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.plot$RingPlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.renderer$AbstractRenderer#clone()" -> "org.jfree.chart.util$StrokeList#clone()";
  "org.jfree.chart.renderer$AbstractRenderer#clone()" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.renderer$AbstractRenderer#clone()" -> "org.jfree.chart.util$ShapeList#clone()";
  "org.jfree.chart.renderer$AbstractRenderer#clone()" -> "org.jfree.chart.util$AbstractObjectList#clone()";
  "org.jfree.chart.renderer$AbstractRenderer#clone()" -> "org.jfree.chart.util$ShapeUtilities#clone(java.awt.Shape)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.axis$LogAxis#setSmallestValue(double)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$LogAxis#setSmallestValue(double)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#zoom(double)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.plot$CategoryPlot#zoom(double)" -> "org.jfree.chart.axis$ValueAxis#setRange(double,double)";
  "org.jfree.chart.plot$CategoryPlot#zoom(double)" -> "org.jfree.data$Range#getLength()";
  "org.jfree.chart.plot$CategoryPlot#zoom(double)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.plot$CategoryPlot#zoom(double)" -> "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean)";
  "org.jfree.chart.plot$CategoryPlot#zoom(double)" -> "org.jfree.chart.axis$DateAxis#setRange(double,double)";
  "org.jfree.chart.plot$CategoryPlot#zoom(double)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis()";
  "org.jfree.chart.title$LegendItemBlockContainer#LegendItemBlockContainer(org.jfree.chart.block.Arrangement,org.jfree.data.general.Dataset,java.lang.Comparable)" -> "org.jfree.chart.block$BlockContainer#BlockContainer(org.jfree.chart.block.Arrangement)";
  "org.jfree.chart.plot$XYPlot#getRangeAxis(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#getRangeAxis(int)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.plot$XYPlot#getRangeAxis(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeries#minIgnoreNaN(double,double)";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeries#findBoundsByIteration()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.general$SeriesException#SeriesException(java.lang.String)";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeries#updateBoundsForAddedItem(org.jfree.data.time.TimeSeriesDataItem)";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeriesDataItem#clone()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeriesDataItem#getValue()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeriesDataItem#setValue(java.lang.Number)";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeries#updateBoundsForRemovedItem(org.jfree.data.time.TimeSeriesDataItem)";
  "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(org.jfree.data.Range,double)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(org.jfree.data.Range,double)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightConstraintType()";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidth()";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#calculateTotalHeight(double)";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightRange()";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$TextTitle#arrangeRN(java.awt.Graphics2D,org.jfree.data.Range)";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#calculateTotalWidth(double)";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$TextTitle#arrangeNN(java.awt.Graphics2D)";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthRange()";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthConstraintType()";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$TextTitle#arrangeFN(java.awt.Graphics2D,double)";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)";
  "org.jfree.chart.entity$JFreeChartEntity#JFreeChartEntity(java.awt.Shape,org.jfree.chart.JFreeChart,java.lang.String,java.lang.String)" -> "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String,java.lang.String)";
  "org.jfree.chart.axis$PeriodAxis#setAutoRangeTimePeriodClass(java.lang.Class)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$PeriodAxis#setAutoRangeTimePeriodClass(java.lang.Class)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisibleInLegend(int)" -> "org.jfree.chart.util$BooleanList#getBoolean(int)";
  "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.util$HorizontalAlignment#<clinit>()";
  "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.text$TextLine#calculateDimensions(java.awt.Graphics2D)";
  "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.text$TextBlock#calculateOffsets(org.jfree.chart.text.TextBlockAnchor,double,double)";
  "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.text$TextLine#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)";
  "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)";
  "org.jfree.data.xy$XYSeriesCollection#setIntervalWidth(double)" -> "org.jfree.data.xy$IntervalXYDelegate#setFixedIntervalWidth(double)";
  "org.jfree.data.xy$XYSeriesCollection#setIntervalWidth(double)" -> "org.jfree.data.general$AbstractDataset#fireDatasetChanged()";
  "org.jfree.chart.plot$RingPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.plot$RingPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$RingPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$RingPlot#equals(java.lang.Object)" -> "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#removeAnnotations()" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.axis$ValueAxis#setRightArrow(java.awt.Shape)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$ValueAxis#setRightArrow(java.awt.Shape)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberTick#NumberTick(java.lang.Number,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#calculateLowestVisibleTickValue()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#calculateVisibleTickCount()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#getNumberFormatOverride()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnit#getSize()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#getTickUnit()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$SymbolAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$SymbolAxis#valueToString(double)";
  "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.plot$PiePlot#getSectionKey(int)" -> "org.jfree.data.general$DefaultPieDataset#getItemCount()";
  "org.jfree.chart.plot$PiePlot#getSectionKey(int)" -> "org.jfree.data.general$DefaultPieDataset#getKey(int)";
  "org.jfree.chart.plot$CategoryPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#isRangeZeroBaselineVisible()";
  "org.jfree.chart.plot$CategoryPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis()";
  "org.jfree.chart.plot$CategoryPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)";
  "org.jfree.chart.plot$CategoryPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer()";
  "org.jfree.chart.plot$CategoryPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)";
  "org.jfree.chart.axis$Axis#setTickLabelPaint(java.awt.Paint)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int)" -> "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int,int)";
  "org.jfree.data.xy$XYSeries#XYSeries(java.lang.Comparable)" -> "org.jfree.data.xy$XYSeries#XYSeries(java.lang.Comparable,boolean,boolean)";
  "org.jfree.chart.plot$CategoryPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$CategoryPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.renderer$AbstractRenderer#addChangeListener(org.jfree.chart.event.RendererChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$CategoryPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.text$TextUtilities#nextLineBreak(java.lang.String,int,float,java.text.BreakIterator,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$G2TextMeasurer#getStringWidth(java.lang.String,int,int)";
  "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double,boolean)" -> "org.jfree.chart.plot$XYPlot#isDomainCrosshairVisible()";
  "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.ui$BasicProjectInfo#setInfo(java.lang.String)" -> "org.jfree.chart.ui$Library#setInfo(java.lang.String)";
  "org.jfree.chart.plot$Plot#setBackgroundAlpha(float)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotRenderingInfo#getOwner()";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#cursorDown(double)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#cursorLeft(double)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#getCursor()";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleAnchor#coordinates(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleAnchor)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#cursorUp(double)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryLabelToolTip(java.lang.Comparable)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis#getTickLabelPaint(java.lang.Comparable)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart$ChartRenderingInfo#getEntityCollection()";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis#getTickLabelFont(java.lang.Comparable)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#getMax()";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#equals(java.lang.Object)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#setTicks(java.util.List)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.text$TextBlock#calculateBounds(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isTickLabelsVisible()";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$AxisState#cursorRight(double)";
  "org.jfree.chart.plot$PiePlot3D#setDarkerSides(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#setRangeBase(double)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLine(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemVisible(int,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart$ChartRenderingInfo#getEntityCollection()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.plot$PlotRenderingInfo#getOwner()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#isLinePass(int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getItemLineVisible(int,int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer$RendererState#getInfo()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#isItemPass(int)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#findSubplot(org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$PlotRenderingInfo#getSubplotIndex(java.awt.geom.Point2D)";
  "org.jfree.chart.entity$AxisEntity#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.entity$ChartEntity#getArea()";
  "org.jfree.chart.entity$AxisEntity#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)";
  "org.jfree.data.xy$AbstractIntervalXYDataset#getStartXValue(int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getStartX(int,int)";
  "org.jfree.data.xy$AbstractIntervalXYDataset#getStartXValue(int,int)" -> "org.jfree.data.xy$XYSeriesCollection#getStartX(int,int)";
  "org.jfree.chart.plot$PiePlot#PiePlot()" -> "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone)";
  "org.jfree.chart.plot$PiePlot#clearSectionPaints(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$PiePlot#clearSectionPaints(boolean)" -> "org.jfree.chart.util$PaintMap#clear()";
  "org.jfree.chart.plot$RingPlot#setSeparatorStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.entity$LegendItemEntity#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.entity$LegendItemEntity#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.entity$LegendItemEntity#equals(java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)";
  "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font,java.awt.Paint,org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.block$AbstractBlock#setPadding(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.block$AbstractBlock#AbstractBlock()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.util$RectangleInsets#getBottom()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.axis$Axis#getTickLabelInsets()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.util$RectangleInsets#getTop()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.axis$Tick#getText()";
  "org.jfree.data.xy$IntervalXYDelegate#setAutoWidth(boolean)" -> "org.jfree.data.xy$IntervalXYDelegate#recalculateInterval()";
  "org.jfree.data.xy$IntervalXYDelegate#recalculateInterval()" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()";
  "org.jfree.data.xy$IntervalXYDelegate#recalculateInterval()" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.data.xy$IntervalXYDelegate#recalculateInterval()" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()";
  "org.jfree.data.xy$IntervalXYDelegate#recalculateInterval()" -> "org.jfree.data.xy$IntervalXYDelegate#calculateIntervalForSeries(int)";
  "org.jfree.chart.renderer.xy$GradientXYBarPainter#paintBarShadow(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYBarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemPaint(int,int,boolean)";
  "org.jfree.chart.renderer.xy$GradientXYBarPainter#paintBarShadow(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYBarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge,boolean)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#getShadowYOffset()";
  "org.jfree.chart.renderer.xy$GradientXYBarPainter#paintBarShadow(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYBarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge,boolean)" -> "org.jfree.chart.renderer.xy$GradientXYBarPainter#createShadow(java.awt.geom.RectangularShape,double,double,org.jfree.chart.util.RectangleEdge,boolean)";
  "org.jfree.chart.renderer.xy$GradientXYBarPainter#paintBarShadow(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYBarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge,boolean)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#getShadowXOffset()";
  "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.title$LegendGraphic#LegendGraphic(java.awt.Shape,java.awt.Paint)" -> "org.jfree.chart.block$AbstractBlock#AbstractBlock()";
  "org.jfree.chart.title$LegendGraphic#LegendGraphic(java.awt.Shape,java.awt.Paint)" -> "org.jfree.chart.block$AbstractBlock#setPadding(double,double,double,double)";
  "org.jfree.chart.title$LegendGraphic#LegendGraphic(java.awt.Shape,java.awt.Paint)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.title$LegendGraphic#LegendGraphic(java.awt.Shape,java.awt.Paint)" -> "org.jfree.chart.util$StandardGradientPaintTransformer#StandardGradientPaintTransformer()";
  "org.jfree.chart.block$AbstractBlock#AbstractBlock()" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.block$AbstractBlock#AbstractBlock()" -> "org.jfree.chart.block$BlockBorder#<clinit>()";
  "org.jfree.chart.util$UnitType#<clinit>()" -> "org.jfree.chart.util$UnitType#UnitType(java.lang.String)";
  "org.jfree.chart.event$ChartChangeEventType#equals(java.lang.Object)" -> "org.jfree.chart.event$ChartChangeEventType#toString()";
  "org.jfree.chart.axis$PeriodAxis#equals(java.lang.Object)" -> "org.jfree.data.time$Month#equals(java.lang.Object)";
  "org.jfree.chart.axis$PeriodAxis#equals(java.lang.Object)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.chart.axis$PeriodAxis#equals(java.lang.Object)" -> "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)";
  "org.jfree.chart.axis$PeriodAxis#equals(java.lang.Object)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.chart.axis$PeriodAxis#equals(java.lang.Object)" -> "org.jfree.chart.axis$PeriodAxis#isMinorTickMarksVisible()";
  "org.jfree.chart$ChartFactory#setChartTheme(org.jfree.chart.ChartTheme)" -> "org.jfree.chart.renderer.xy$GradientXYBarPainter#GradientXYBarPainter()";
  "org.jfree.chart$ChartFactory#setChartTheme(org.jfree.chart.ChartTheme)" -> "org.jfree.chart.renderer.category$BarRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#setChartTheme(org.jfree.chart.ChartTheme)" -> "org.jfree.chart$StandardChartTheme#getName()";
  "org.jfree.chart$ChartFactory#setChartTheme(org.jfree.chart.ChartTheme)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#setChartTheme(org.jfree.chart.ChartTheme)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#setDefaultBarPainter(org.jfree.chart.renderer.xy.XYBarPainter)";
  "org.jfree.chart$ChartFactory#setChartTheme(org.jfree.chart.ChartTheme)" -> "org.jfree.chart.renderer.category$BarRenderer#setDefaultBarPainter(org.jfree.chart.renderer.category.BarPainter)";
  "org.jfree.chart$ChartFactory#setChartTheme(org.jfree.chart.ChartTheme)" -> "org.jfree.chart.renderer.category$GradientBarPainter#GradientBarPainter()";
  "org.jfree.chart$ChartFactory#setChartTheme(org.jfree.chart.ChartTheme)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#setChartTheme(org.jfree.chart.ChartTheme)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.axis$CategoryAxis#readPaintMap(java.io.ObjectInputStream)";
  "org.jfree.chart.axis$CategoryAxis#readPaintMap(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.title$LegendGraphic#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.title$LegendGraphic#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)";
  "org.jfree.chart.title$LegendGraphic#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)";
  "org.jfree.chart.block$AbstractBlock#trimToContentWidth(double)" -> "org.jfree.chart.util$RectangleInsets#trimWidth(double)";
  "org.jfree.chart.block$AbstractBlock#trimToContentWidth(double)" -> "org.jfree.chart.block$BlockBorder#getInsets()";
  "org.jfree.chart.block$AbstractBlock#trimToContentWidth(double)" -> "org.jfree.chart.block$LineBorder#getInsets()";
  "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnits#getCeilingTickUnit(double)";
  "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnits#getLargerTickUnit(org.jfree.chart.axis.TickUnit)";
  "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data$Range#getLength()";
  "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$TickUnit#getSize()";
  "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)";
  "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getStandardTickUnits()";
  "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)";
  "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$TickUnits#getCeilingTickUnit(double)" -> "org.jfree.chart.axis$TickUnits#getCeilingTickUnit(org.jfree.chart.axis.TickUnit)";
  "org.jfree.chart.axis$TickUnits#getCeilingTickUnit(double)" -> "org.jfree.chart.axis$NumberTickUnit#NumberTickUnit(double,java.text.NumberFormat)";
  "org.jfree.chart.axis$DateAxis#clone()" -> "org.jfree.chart.axis$ValueAxis#clone()";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#after(org.jfree.chart.axis.SegmentedTimeline$Segment)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentEnd()";
  "org.jfree.chart.renderer$AbstractRenderer#setDataBoundsIncludesVisibleSeriesOnly(boolean)" -> "org.jfree.chart.event$RendererChangeEvent#RendererChangeEvent(java.lang.Object,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setDataBoundsIncludesVisibleSeriesOnly(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#notifyListeners(org.jfree.chart.event.RendererChangeEvent)";
  "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlinePaint(java.awt.Paint)" -> "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlinePaint(java.awt.Paint,boolean)";
  "org.jfree.chart.block$BlockBorder#BlockBorder(java.awt.Paint)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.block$BlockBorder#BlockBorder(java.awt.Paint)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.block$BlockBorder#BlockBorder(java.awt.Paint)" -> "org.jfree.chart.block$BlockBorder#BlockBorder(org.jfree.chart.util.RectangleInsets,java.awt.Paint)";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#compareTo(java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#after(org.jfree.chart.axis.SegmentedTimeline$Segment)";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#compareTo(java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#before(org.jfree.chart.axis.SegmentedTimeline$Segment)";
  "org.jfree.chart.title$TextTitle#hashCode()" -> "org.jfree.chart.title$Title#hashCode()";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#getAttributedLabel(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)" -> "org.jfree.chart.axis$LogAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)" -> "org.jfree.chart.axis$DateAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)" -> "org.jfree.chart.axis$ValueAxis#isAutoRange()";
  "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)" -> "org.jfree.chart.axis$SymbolAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)" -> "org.jfree.chart.axis$PeriodAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)" -> "org.jfree.chart.axis$NumberAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setWeight(int)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$MultiplePiePlot#setLimit(double)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.time$TimeSeries#updateBoundsForRemovedItem(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeries#findBoundsByIteration()";
  "org.jfree.data.time$TimeSeries#updateBoundsForRemovedItem(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeriesDataItem#getValue()";
  "org.jfree.data.xy$XYSeriesCollection#getDomainOrder()" -> "org.jfree.data.xy$XYSeries#getAutoSort()";
  "org.jfree.data.xy$XYSeriesCollection#getDomainOrder()" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.data.xy$XYSeriesCollection#getDomainOrder()" -> "org.jfree.data$DomainOrder#<clinit>()";
  "org.jfree.data.xy$XYSeriesCollection#getDomainOrder()" -> "org.jfree.data.xy$XYSeriesCollection#getSeries(int)";
  "org.jfree.chart$JFreeChart#addSubtitle(int,org.jfree.chart.title.Title)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart$JFreeChart#addSubtitle(int,org.jfree.chart.title.Title)" -> "org.jfree.chart.title$Title#addChangeListener(org.jfree.chart.event.TitleChangeListener)";
  "org.jfree.chart$JFreeChart#addSubtitle(int,org.jfree.chart.title.Title)" -> "org.jfree.chart$JFreeChart#getSubtitleCount()";
  "org.jfree.chart.axis$SegmentedTimeline#addException(long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#SegmentedTimeline$Segment(org.jfree.chart.axis.SegmentedTimeline,long)";
  "org.jfree.chart.axis$SegmentedTimeline#addException(long)" -> "org.jfree.chart.axis$SegmentedTimeline#addException(org.jfree.chart.axis.SegmentedTimeline$Segment)";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#SegmentedTimeline$Segment(org.jfree.chart.axis.SegmentedTimeline,long)" -> "org.jfree.chart.axis$SegmentedTimeline#<clinit>()";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#SegmentedTimeline$Segment(org.jfree.chart.axis.SegmentedTimeline,long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#calculateSegmentNumber(long)";
  "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)";
  "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)";
  "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)";
  "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)";
  "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#setStandardTickUnits(org.jfree.chart.axis.TickUnitSource)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$ValueAxis#setStandardTickUnits(org.jfree.chart.axis.TickUnitSource)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#AbstractCategoryItemRenderer()" -> "org.jfree.chart.util$ObjectList#ObjectList()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#AbstractCategoryItemRenderer()" -> "org.jfree.chart.renderer$AbstractRenderer#AbstractRenderer()";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation(int)" -> "org.jfree.chart.axis$AxisLocation#getOpposite(org.jfree.chart.axis.AxisLocation)";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation(int)" -> "org.jfree.chart.axis$AxisLocation#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#hashCode()" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.chart.plot$CategoryPlot#getPlotType()" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#getPlotType()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart.event$ChartChangeEvent#setChart(org.jfree.chart.JFreeChart)";
  "org.jfree.chart.renderer.category$BarRenderer#setMinimumBarLength(double)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$CategoryPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisForDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer(int)";
  "org.jfree.chart.block$FlowArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart)" -> "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart,org.jfree.chart.event.ChartChangeEventType)";
  "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart)" -> "org.jfree.chart.event$ChartChangeEventType#<clinit>()";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline#getExceptionSegments()";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline#getSegmentSize()";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline#getStartTime()";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline#getSegmentsIncluded()";
  "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object)" -> "org.jfree.chart.axis$SegmentedTimeline#getSegmentsExcluded()";
  "org.jfree.data.time$DateRange#DateRange(org.jfree.data.Range)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.data.time$DateRange#DateRange(org.jfree.data.Range)" -> "org.jfree.data.time$DateRange#DateRange(double,double)";
  "org.jfree.data.time$DateRange#DateRange(org.jfree.data.Range)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getSeriesURLGenerator(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double,boolean)" -> "org.jfree.chart.plot$XYPlot#isRangeCrosshairVisible()";
  "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)";
  "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.data.xy$IntervalXYDelegate#getEndX(int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getX(int,int)";
  "org.jfree.data.xy$IntervalXYDelegate#getEndX(int,int)" -> "org.jfree.data.xy$DefaultXYDataset#getX(int,int)";
  "org.jfree.data.xy$IntervalXYDelegate#getEndX(int,int)" -> "org.jfree.data.xy$IntervalXYDelegate#getIntervalPositionFactor()";
  "org.jfree.data.xy$IntervalXYDelegate#getEndX(int,int)" -> "org.jfree.data.xy$IntervalXYDelegate#getIntervalWidth()";
  "org.jfree.data.xy$IntervalXYDelegate#getEndX(int,int)" -> "org.jfree.data.xy$XYSeriesCollection#getX(int,int)";
  "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator(java.util.Locale)" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator(java.lang.String,java.util.Locale)";
  "org.jfree.chart.util$StrokeList#hashCode()" -> "org.jfree.chart.util$AbstractObjectList#hashCode()";
  "org.jfree.chart$StandardChartTheme#createDarknessTheme()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])";
  "org.jfree.chart$StandardChartTheme#createDarknessTheme()" -> "org.jfree.chart$StandardChartTheme#StandardChartTheme(java.lang.String)";
  "org.jfree.chart$StandardChartTheme#createDarknessTheme()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()";
  "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])" -> "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()";
  "org.jfree.data$DomainOrder#<clinit>()" -> "org.jfree.data$DomainOrder#DomainOrder(java.lang.String)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesShapesVisible(int,boolean)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesShapesVisible(int,java.lang.Boolean)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesShapesVisible(int,java.lang.Boolean)" -> "org.jfree.chart.util$BooleanList#setBoolean(int,java.lang.Boolean)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesShapesVisible(int,java.lang.Boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.data.time$TimeSeriesCollection#getRangeBounds(java.util.List,org.jfree.data.Range,boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getSeries(java.lang.Comparable)";
  "org.jfree.data.time$TimeSeriesCollection#getRangeBounds(java.util.List,org.jfree.data.Range,boolean)" -> "org.jfree.data.time$TimeSeries#getMaxY()";
  "org.jfree.data.time$TimeSeriesCollection#getRangeBounds(java.util.List,org.jfree.data.Range,boolean)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data.time$TimeSeriesCollection#getRangeBounds(java.util.List,org.jfree.data.Range,boolean)" -> "org.jfree.data.time$TimeSeries#getMinY()";
  "org.jfree.data.time$TimeSeriesCollection#getRangeBounds(java.util.List,org.jfree.data.Range,boolean)" -> "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)";
  "org.jfree.chart.plot$Marker#setAlpha(float)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.plot$Marker#setAlpha(float)" -> "org.jfree.chart.event$MarkerChangeEvent#MarkerChangeEvent(org.jfree.chart.plot.Marker)";
  "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)" -> "org.jfree.chart.plot$Plot#markerChanged(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.axis$SymbolAxis#setGridBandPaint(java.awt.Paint)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$SymbolAxis#setGridBandPaint(java.awt.Paint)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart.plot$CategoryPlot#datasetsMappedToDomainAxis(int)";
  "org.jfree.chart$ChartRenderingInfo#ChartRenderingInfo()" -> "org.jfree.chart$ChartRenderingInfo#ChartRenderingInfo(org.jfree.chart.entity.EntityCollection)";
  "org.jfree.chart.util$RectangleInsets#RectangleInsets()" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.util$RectangleInsets#getRight()";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.util$ShapeUtilities#rotateShape(java.awt.Shape,double,float,float)";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.axis$Axis#getTickLabelInsets()";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.util$RectangleInsets#getLeft()";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#calculateCategoryGapSize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryMargin()";
  "org.jfree.chart.axis$CategoryAxis#calculateCategoryGapSize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#setRowRenderingOrder(org.jfree.chart.util.SortOrder)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)" -> "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#getTimePeriod(int)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#getTimePeriod(int)" -> "org.jfree.data.time$TimeSeries#getRawDataItem(int)";
  "org.jfree.chart.renderer$AbstractRenderer#getItemStroke(int,int,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesStroke(int)";
  "org.jfree.chart.axis$PeriodAxis#clone()" -> "org.jfree.chart.axis$ValueAxis#clone()";
  "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)";
  "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double,boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double,boolean)" -> "org.jfree.chart.axis$SymbolAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double,boolean)" -> "org.jfree.chart.axis$DateAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double,boolean)" -> "org.jfree.chart.axis$PeriodAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double,boolean)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double,boolean)" -> "org.jfree.chart.axis$NumberAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double,boolean)" -> "org.jfree.chart.axis$LogAxis#autoAdjustRange()";
  "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)" -> "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)";
  "org.jfree.chart.plot$Plot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$Plot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.renderer.category$BarRenderer3D#getXOffset()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.plot$CategoryPlot#getOrientation()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.renderer.category$BarRenderer3D#getYOffset()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.data.time$TimeSeries#getTimePeriodsUniqueToOtherSeries(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#getTimePeriodsUniqueToOtherSeries(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)";
  "org.jfree.data.time$TimeSeries#getTimePeriodsUniqueToOtherSeries(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.chart.plot$XYPlot#getIndexOf(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)";
  "org.jfree.chart.axis$LogAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$LogAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$LogAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$LogAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$LogAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$PiePlot#setMaximumLabelWidth(double)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#setShadowYOffset(double)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.block$AbstractBlock#trimToContentHeight(double)" -> "org.jfree.chart.block$BlockBorder#getInsets()";
  "org.jfree.chart.block$AbstractBlock#trimToContentHeight(double)" -> "org.jfree.chart.block$LineBorder#getInsets()";
  "org.jfree.chart.block$AbstractBlock#trimToContentHeight(double)" -> "org.jfree.chart.util$RectangleInsets#trimHeight(double)";
  "org.jfree.chart.util$PaintMap#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addAnnotation(org.jfree.chart.annotations.XYAnnotation,org.jfree.chart.util.Layer)" -> "org.jfree.chart.util$Layer#equals(java.lang.Object)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addAnnotation(org.jfree.chart.annotations.XYAnnotation,org.jfree.chart.util.Layer)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addAnnotation(org.jfree.chart.annotations.XYAnnotation,org.jfree.chart.util.Layer)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#setMarkerBand(org.jfree.chart.axis.MarkerAxisBand)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$NumberAxis#setMarkerBand(org.jfree.chart.axis.MarkerAxisBand)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(java.lang.Comparable,java.util.List,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.category$BarRenderer3D#BarRenderer3D(double,double)" -> "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition(org.jfree.chart.labels.ItemLabelAnchor,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.renderer.category$BarRenderer3D#BarRenderer3D(double,double)" -> "org.jfree.chart.renderer.category$BarRenderer#BarRenderer()";
  "org.jfree.chart.renderer.category$BarRenderer3D#BarRenderer3D(double,double)" -> "org.jfree.chart.renderer.category$BarRenderer3D#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer3D#BarRenderer3D(double,double)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer3D#BarRenderer3D(double,double)" -> "org.jfree.chart.renderer$AbstractRenderer#setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition)";
  "org.jfree.chart.renderer.category$BarRenderer3D#BarRenderer3D(double,double)" -> "org.jfree.chart.renderer$AbstractRenderer#setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition)";
  "org.jfree.chart.renderer.category$BarRenderer3D#BarRenderer3D(double,double)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer3D#BarRenderer3D(double,double)" -> "org.jfree.chart.renderer.category$BarRenderer#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer3D#BarRenderer3D(double,double)" -> "org.jfree.chart.labels$ItemLabelAnchor#<clinit>()";
  "org.jfree.chart.block$AbstractBlock#getContentXOffset()" -> "org.jfree.chart.util$RectangleInsets#getLeft()";
  "org.jfree.chart.block$AbstractBlock#getContentXOffset()" -> "org.jfree.chart.block$BlockBorder#getInsets()";
  "org.jfree.chart.block$AbstractBlock#getContentXOffset()" -> "org.jfree.chart.block$LineBorder#getInsets()";
  "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range)" -> "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.plot$RingPlot#setInnerSeparatorExtension(double)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.axis$SegmentedTimeline$BaseTimelineSegmentRange#SegmentedTimeline$BaseTimelineSegmentRange(org.jfree.chart.axis.SegmentedTimeline,long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#SegmentedTimeline$SegmentRange(org.jfree.chart.axis.SegmentedTimeline,long,long)";
  "org.jfree.chart.axis$CategoryAxis#getCategorySeriesMiddle(java.lang.Comparable,java.lang.Comparable,org.jfree.data.category.CategoryDataset,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#getCategorySeriesMiddle(java.lang.Comparable,java.lang.Comparable,org.jfree.data.category.CategoryDataset,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.data.time$Year#next()" -> "org.jfree.data.time$Year#Year(int)";
  "org.jfree.chart.plot$PiePlot#setLegendLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.title$PaintScaleLegend#setStripOutlinePaint(java.awt.Paint)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$PaintScaleLegend#setStripOutlinePaint(java.awt.Paint)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.plot$MultiplePiePlot#setLegendItemShape(java.awt.Shape)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)";
  "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)" -> "org.jfree.chart.plot$Plot#equals(java.lang.Object)";
  "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)" -> "org.jfree.chart.plot$PieLabelLinkStyle#equals(java.lang.Object)";
  "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double,java.awt.Paint)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double,java.awt.Paint)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double,java.awt.Paint)" -> "org.jfree.chart.block$BlockBorder#BlockBorder(org.jfree.chart.util.RectangleInsets,java.awt.Paint)";
  "org.jfree.chart.block$CenterArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$CenterArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$CenterArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightRange()";
  "org.jfree.chart.block$CenterArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#toFixedHeight(double)";
  "org.jfree.chart.block$CenterArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.block$CenterArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$CenterArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$CenterArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.block$CenterArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#constrain(double)";
  "org.jfree.chart.block$CenterArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$CenterArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlinePaint(int,java.awt.Paint,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlinePaint(int,java.awt.Paint,boolean)" -> "org.jfree.chart.util$PaintList#setPaint(int,java.awt.Paint)";
  "org.jfree.chart.renderer$AbstractRenderer#getSeriesOutlineStroke(int)" -> "org.jfree.chart.util$StrokeList#getStroke(int)";
  "org.jfree.chart.util$StrokeList#getStroke(int)" -> "org.jfree.chart.util$AbstractObjectList#get(int)";
  "org.jfree.chart.renderer.category$GradientBarPainter#paintBarShadow(java.awt.Graphics2D,org.jfree.chart.renderer.category.BarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge,boolean)" -> "org.jfree.chart.renderer.category$BarRenderer#getShadowPaint()";
  "org.jfree.chart.renderer.category$GradientBarPainter#paintBarShadow(java.awt.Graphics2D,org.jfree.chart.renderer.category.BarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge,boolean)" -> "org.jfree.chart.renderer.category$BarRenderer#getShadowXOffset()";
  "org.jfree.chart.renderer.category$GradientBarPainter#paintBarShadow(java.awt.Graphics2D,org.jfree.chart.renderer.category.BarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge,boolean)" -> "org.jfree.chart.renderer.category$GradientBarPainter#createShadow(java.awt.geom.RectangularShape,double,double,org.jfree.chart.util.RectangleEdge,boolean)";
  "org.jfree.chart.renderer.category$GradientBarPainter#paintBarShadow(java.awt.Graphics2D,org.jfree.chart.renderer.category.BarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemPaint(int,int,boolean)";
  "org.jfree.chart.renderer.category$GradientBarPainter#paintBarShadow(java.awt.Graphics2D,org.jfree.chart.renderer.category.BarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge,boolean)" -> "org.jfree.chart.renderer.category$BarRenderer#getShadowYOffset()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getDefaultShadowsVisible()" -> "org.jfree.chart.renderer.xy$XYBarRenderer#<clinit>()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#getDefaultShadowsVisible()" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart.text$TextLine#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.text$TextLine#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.text$TextLine#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.text$TextFragment#calculateDimensions(java.awt.Graphics2D)";
  "org.jfree.chart.text$TextLine#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.data.xy$XYSeriesCollection#removeSeries(org.jfree.data.xy.XYSeries)" -> "org.jfree.data.general$AbstractDataset#fireDatasetChanged()";
  "org.jfree.data.xy$XYSeriesCollection#removeSeries(org.jfree.data.xy.XYSeries)" -> "org.jfree.data.general$Series#removeChangeListener(org.jfree.data.general.SeriesChangeListener)";
  "org.jfree.chart.title$TextTitle#<clinit>()" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart.renderer$AbstractRenderer#getSeriesFillPaint(int)" -> "org.jfree.chart.util$PaintList#getPaint(int)";
  "org.jfree.chart$JFreeChart#setTitle(java.lang.String)" -> "org.jfree.chart.title$TextTitle#<clinit>()";
  "org.jfree.chart$JFreeChart#setTitle(java.lang.String)" -> "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)";
  "org.jfree.chart$JFreeChart#setTitle(java.lang.String)" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.chart$JFreeChart#setTitle(java.lang.String)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart$JFreeChart#setTitle(java.lang.String)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$JFreeChart#setTitle(java.lang.String)" -> "org.jfree.chart.title$TextTitle#setText(java.lang.String)";
  "org.jfree.chart.plot$PiePlot#clearSectionOutlineStrokes(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$PiePlot#clearSectionOutlineStrokes(boolean)" -> "org.jfree.chart.util$StrokeMap#clear()";
  "org.jfree.chart.axis$CategoryAxis#writePaintMap(java.util.Map,java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.urls$StandardXYURLGenerator#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.urls$StandardXYURLGenerator#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.renderer.category$BarRenderer3D#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$CrosshairState#updateCrosshairX(double)" -> "org.jfree.chart.plot$CrosshairState#updateCrosshairX(double,int)";
  "org.jfree.chart.block$ColumnArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.axis$PeriodAxis#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.axis$PeriodAxis#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)";
  "org.jfree.chart.axis$DateAxis#hashCode()" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.entity$TitleEntity#TitleEntity(java.awt.Shape,org.jfree.chart.title.Title)" -> "org.jfree.chart.entity$TitleEntity#TitleEntity(java.awt.Shape,org.jfree.chart.title.Title,java.lang.String)";
  "org.jfree.chart.entity$TitleEntity#TitleEntity(java.awt.Shape,org.jfree.chart.title.Title,java.lang.String)" -> "org.jfree.chart.entity$TitleEntity#TitleEntity(java.awt.Shape,org.jfree.chart.title.Title,java.lang.String,java.lang.String)";
  "org.jfree.chart.util$PaintList#setPaint(int,java.awt.Paint)" -> "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.axis$DateTickUnit#DateTickUnit(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)" -> "org.jfree.chart.axis$DateTickUnit#getMillisecondCount(org.jfree.chart.axis.DateTickUnitType,int)";
  "org.jfree.chart.axis$DateTickUnit#DateTickUnit(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)" -> "org.jfree.chart.axis$TickUnit#TickUnit(double)";
  "org.jfree.chart.axis$DateTickUnit#getMillisecondCount(org.jfree.chart.axis.DateTickUnitType,int)" -> "org.jfree.chart.axis$DateTickUnitType#<clinit>()";
  "org.jfree.chart.axis$DateTickUnit#getMillisecondCount(org.jfree.chart.axis.DateTickUnitType,int)" -> "org.jfree.chart.axis$DateTickUnitType#equals(java.lang.Object)";
  "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BlockContainer#getBlocks()";
  "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$LabelBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#setBounds(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidth()";
  "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inExcludeSegments()" -> "org.jfree.chart.axis$SegmentedTimeline#getSegment(long)";
  "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inExcludeSegments()" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentStart()";
  "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inExcludeSegments()" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#inExceptionSegments()";
  "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inExcludeSegments()" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#inc()";
  "org.jfree.chart.block$AbstractBlock#trimMargin(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.util$ShapeList#getShape(int)" -> "org.jfree.chart.util$AbstractObjectList#get(int)";
  "org.jfree.chart.axis$CategoryAxis3D#clone()" -> "org.jfree.chart.axis$CategoryAxis#clone()";
  "org.jfree.chart.axis$PeriodAxis#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone,java.util.Locale)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.axis$PeriodAxis#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone,java.util.Locale)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.axis$Axis#setAxisLineStroke(java.awt.Stroke)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.chart.entity$TitleEntity#clone()" -> "org.jfree.chart.entity$ChartEntity#clone()";
  "org.jfree.chart.axis$PeriodAxis#setTimeZone(java.util.TimeZone)" -> "org.jfree.data.time$Year#peg(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#setTimeZone(java.util.TimeZone)" -> "org.jfree.data.time$Day#peg(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#setTimeZone(java.util.TimeZone)" -> "org.jfree.data.time$Month#peg(java.util.Calendar)";
  "org.jfree.chart.axis$PeriodAxis#setTimeZone(java.util.TimeZone)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$PeriodAxis#setTimeZone(java.util.TimeZone)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.plot$CategoryPlot#setDataset(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.plot$CategoryPlot#setDataset(int,org.jfree.data.category.CategoryDataset)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillRangeGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillRangeGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillRangeGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillRangeGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.plot$XYPlot#getRangeTickBandPaint()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillRangeGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillRangeGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillRangeGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillRangeGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$DateAxis#zoomRange(double,double)";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$LogAxis#zoomRange(double,double)";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)";
  "org.jfree.chart.plot$RingPlot#RingPlot()" -> "org.jfree.chart.plot$RingPlot#RingPlot(org.jfree.data.general.PieDataset)";
  "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)" -> "org.jfree.data$DefaultKeyedValues#getValue(int)";
  "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)" -> "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)";
  "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)" -> "org.jfree.data$UnknownKeyException#UnknownKeyException(java.lang.String)";
  "org.jfree.data.xy$XYSeries#hashCode()" -> "org.jfree.data.xy$XYDataItem#hashCode()";
  "org.jfree.data.xy$XYSeries#hashCode()" -> "org.jfree.data.xy$XYSeries#getRawDataItem(int)";
  "org.jfree.data.xy$XYSeries#hashCode()" -> "org.jfree.data.general$Series#hashCode()";
  "org.jfree.data.xy$XYSeries#hashCode()" -> "org.jfree.data.xy$XYSeries#getItemCount()";
  "org.jfree.data.xy$XYSeriesCollection#getStartY(int,int)" -> "org.jfree.data.xy$XYSeriesCollection#getY(int,int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#setDefaultBarPainter(org.jfree.chart.renderer.xy.XYBarPainter)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#setDefaultBarPainter(org.jfree.chart.renderer.xy.XYBarPainter)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#<clinit>()";
  "org.jfree.chart.plot$Marker#setOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.plot$Marker#setOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart.event$MarkerChangeEvent#MarkerChangeEvent(org.jfree.chart.plot.Marker)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesToolTipGenerator(int,org.jfree.chart.labels.CategoryToolTipGenerator,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesToolTipGenerator(int,org.jfree.chart.labels.CategoryToolTipGenerator,boolean)" -> "org.jfree.chart.event$RendererChangeEvent#RendererChangeEvent(java.lang.Object)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesToolTipGenerator(int,org.jfree.chart.labels.CategoryToolTipGenerator,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#notifyListeners(org.jfree.chart.event.RendererChangeEvent)";
  "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator(java.lang.String,java.text.NumberFormat,java.text.DateFormat)" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.DateFormat)";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.DateFormat)" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)";
  "org.jfree.chart.entity$PieSectionEntity#equals(java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)";
  "org.jfree.chart.entity$PieSectionEntity#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.entity$PieSectionEntity#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#setDrawBarOutline(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$Marker#setLabelTextAnchor(org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.plot$Marker#setLabelTextAnchor(org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.event$MarkerChangeEvent#MarkerChangeEvent(org.jfree.chart.plot.Marker)";
  "org.jfree.chart.plot$PiePlot#setStartAngle(double)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesURLGenerator(int,org.jfree.chart.urls.CategoryURLGenerator,boolean)" -> "org.jfree.chart.event$RendererChangeEvent#RendererChangeEvent(java.lang.Object)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesURLGenerator(int,org.jfree.chart.urls.CategoryURLGenerator,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#notifyListeners(org.jfree.chart.event.RendererChangeEvent)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesURLGenerator(int,org.jfree.chart.urls.CategoryURLGenerator,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.axis$SymbolAxis#SymbolAxis(java.lang.String,java.lang.String[])" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart.axis$SymbolAxis#SymbolAxis(java.lang.String,java.lang.String[])" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.axis$SymbolAxis#SymbolAxis(java.lang.String,java.lang.String[])" -> "org.jfree.chart.axis$SymbolAxis#<clinit>()";
  "org.jfree.chart.axis$SymbolAxis#SymbolAxis(java.lang.String,java.lang.String[])" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeStickyZero(boolean)";
  "org.jfree.chart.axis$SymbolAxis#SymbolAxis(java.lang.String,java.lang.String[])" -> "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean,boolean)";
  "org.jfree.chart.axis$SymbolAxis#SymbolAxis(java.lang.String,java.lang.String[])" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.axis$SymbolAxis#SymbolAxis(java.lang.String,java.lang.String[])" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart.util$RectangleInsets#trimWidth(double)" -> "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)";
  "org.jfree.chart.util$RectangleInsets#trimWidth(double)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)";
  "org.jfree.chart.plot$PiePlot#setLabelBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.time$TimeSeriesCollection#isSelected(int,int)" -> "org.jfree.data.time$TimeSeries#getRawDataItem(int)";
  "org.jfree.data.time$TimeSeriesCollection#isSelected(int,int)" -> "org.jfree.data.time$TimeSeriesDataItem#isSelected()";
  "org.jfree.data.time$TimeSeriesCollection#isSelected(int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getSeries(int)";
  "org.jfree.data.general$AbstractSeriesDataset#seriesChanged(org.jfree.data.general.SeriesChangeEvent)" -> "org.jfree.data.general$AbstractDataset#fireDatasetChanged()";
  "org.jfree.chart.plot$CategoryPlot#setRangeMinorGridlinesVisible(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$CategoryPlot#setRangeGridlinesVisible(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#getRenderer(int)";
  "org.jfree.chart.plot$XYPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#getDatasetCount()";
  "org.jfree.chart.plot$XYPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$XYPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisForDataset(int)";
  "org.jfree.chart.axis$CategoryAxis3D#CategoryAxis3D()" -> "org.jfree.chart.axis$CategoryAxis3D#CategoryAxis3D(java.lang.String)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#equals(java.lang.Object)" -> "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)";
  "org.jfree.chart$LegendItem#LegendItem(java.lang.String)" -> "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.awt.Paint)";
  "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.awt.Paint)" -> "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint)";
  "org.jfree.data.xy$XYSeries#getX(int)" -> "org.jfree.data.xy$XYDataItem#getX()";
  "org.jfree.data.xy$XYSeries#getX(int)" -> "org.jfree.data.xy$XYSeries#getRawDataItem(int)";
  "org.jfree.chart.text$TextFragment#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)" -> "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,float,float)";
  "org.jfree.chart.text$TextFragment#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#setMinorTickCount(int)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$ValueAxis#setMinorTickCount(int)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseLegendTextFont(java.awt.Font)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#removeAnnotation(org.jfree.chart.annotations.XYAnnotation,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer$AbstractRenderer#getSeriesShape(int)" -> "org.jfree.chart.util$ShapeList#getShape(int)";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseLegendTextPaint(java.awt.Paint)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#drawDomainTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.axis$ValueAxis#getLowerBound()";
  "org.jfree.chart.plot$XYPlot#drawDomainTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getDomainTickBandPaint()";
  "org.jfree.chart.plot$XYPlot#drawDomainTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.axis$ValueTick#getValue()";
  "org.jfree.chart.plot$XYPlot#drawDomainTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.axis$ValueAxis#getUpperBound()";
  "org.jfree.chart.plot$XYPlot#drawDomainTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getRenderer()";
  "org.jfree.chart.plot$XYPlot#drawDomainTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillDomainGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)";
  "org.jfree.chart.plot$XYPlot#drawDomainTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.title$PaintScaleLegend#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)";
  "org.jfree.chart.title$PaintScaleLegend#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.entity$AxisEntity#toString()" -> "org.jfree.chart.entity$ChartEntity#getToolTipText()";
  "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.data.time$TimeSeries#getTimePeriods()" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$TimeSeries#getTimePeriods()" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeriesCollection#setSelected(int,int,boolean,boolean)" -> "org.jfree.data.time$TimeSeriesDataItem#setSelected(boolean)";
  "org.jfree.data.time$TimeSeriesCollection#setSelected(int,int,boolean,boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getSeries(int)";
  "org.jfree.data.time$TimeSeriesCollection#setSelected(int,int,boolean,boolean)" -> "org.jfree.data.general$AbstractDataset#fireDatasetChanged()";
  "org.jfree.data.time$TimeSeriesCollection#setSelected(int,int,boolean,boolean)" -> "org.jfree.data.time$TimeSeries#getRawDataItem(int)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#add(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#add(org.jfree.chart.plot.XYPlot,int)";
  "org.jfree.chart.util$ShapeList#hashCode()" -> "org.jfree.chart.util$AbstractObjectList#hashCode()";
  "org.jfree.chart.plot$Plot#setNotify(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$Plot#setNotify(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart$LegendItem#<clinit>()";
  "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#remove(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$Plot#removeChangeListener(org.jfree.chart.event.PlotChangeListener)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#remove(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$XYPlot#configureRangeAxes()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#remove(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$Plot#setParent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#remove(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$Plot#removeChangeListener(org.jfree.chart.event.PlotChangeListener)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$ValueMarker#ValueMarker(double)" -> "org.jfree.chart.plot$Marker#Marker()";
  "org.jfree.chart.plot$PieLabelDistributor#PieLabelDistributor(int)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#AbstractPieLabelDistributor()";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge()" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)";
  "org.jfree.chart.axis$CategoryAxis#setLowerMargin(double)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$CategoryAxis#setLowerMargin(double)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.data.time$TimeSeriesCollection#hashCode()" -> "org.jfree.data.time$TimePeriodAnchor#hashCode()";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesStroke(int,java.awt.Stroke)" -> "org.jfree.chart.renderer$AbstractRenderer#setSeriesStroke(int,java.awt.Stroke,boolean)";
  "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$PeriodAxis#getRange()";
  "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseCreateEntities(boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.renderer$AbstractRenderer#getItemVisible(int,int)" -> "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisible(int)";
  "org.jfree.chart.axis$SymbolAxis#drawGridBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,java.util.List)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$SymbolAxis#drawGridBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,java.util.List)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$SymbolAxis#drawGridBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,java.util.List)" -> "org.jfree.chart.axis$SymbolAxis#drawGridBandsVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,boolean,java.util.List)";
  "org.jfree.chart.axis$SymbolAxis#drawGridBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,java.util.List)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$SymbolAxis#drawGridBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,java.util.List)" -> "org.jfree.chart.axis$SymbolAxis#drawGridBandsHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,boolean,java.util.List)";
  "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)";
  "org.jfree.chart.plot$Marker#setOutlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.plot$Marker#setOutlinePaint(java.awt.Paint)" -> "org.jfree.chart.event$MarkerChangeEvent#MarkerChangeEvent(org.jfree.chart.plot.Marker)";
  "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#toFixedWidth(double)";
  "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$ColumnArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthRange()";
  "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#constrain(double)";
  "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#restrictValueToDataArea(double,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#restrictValueToDataArea(double,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.block$LabelBlock#equals(java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)";
  "org.jfree.chart.block$LabelBlock#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.block$LabelBlock#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.block$LabelBlock#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.block$LabelBlock#equals(java.lang.Object)" -> "org.jfree.chart.text$TextBlockAnchor#equals(java.lang.Object)";
  "org.jfree.chart.block$LabelBlock#equals(java.lang.Object)" -> "org.jfree.chart.util$RectangleAnchor#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#findBoundsByIteration()" -> "org.jfree.data.time$TimeSeries#updateBoundsForAddedItem(org.jfree.data.time.TimeSeriesDataItem)";
  "org.jfree.chart.axis$Axis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#setAngleTickUnit(org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.xy$XYSeriesCollection#getDomainBounds(boolean)" -> "org.jfree.data.xy$XYSeries#getMinX()";
  "org.jfree.data.xy$XYSeriesCollection#getDomainBounds(boolean)" -> "org.jfree.data.xy$IntervalXYDelegate#getDomainBounds(boolean)";
  "org.jfree.data.xy$XYSeriesCollection#getDomainBounds(boolean)" -> "org.jfree.data.xy$XYSeries#getMaxX()";
  "org.jfree.data.xy$XYSeriesCollection#getDomainBounds(boolean)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data.xy$XYSeriesCollection#getDomainBounds(boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getSeries(int)";
  "org.jfree.data.xy$XYSeriesCollection#getDomainBounds(boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#clone()" -> "org.jfree.chart.util$ShapeUtilities#clone(java.awt.Shape)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#clone()" -> "org.jfree.chart.util$AbstractObjectList#clone()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#clone()" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#clone()" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.data.time$RegularTimePeriod#getEnd()" -> "org.jfree.data.time$Month#getLastMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getEnd()" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getEnd()" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.data.xy$XYSeries#add(double,double,boolean)" -> "org.jfree.data.xy$XYSeries#add(java.lang.Number,java.lang.Number,boolean)";
  "org.jfree.chart.plot$CategoryPlot#setFixedLegendItems(org.jfree.chart.LegendItemCollection)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$PiePlot#setLabelFont(java.awt.Font)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.axis$LogAxis#hashCode()" -> "org.jfree.chart.axis$NumberTickUnit#hashCode()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$Layer#equals(java.lang.Object)";
  "org.jfree.chart.axis$NumberTick#NumberTick(org.jfree.chart.axis.TickType,double,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)" -> "org.jfree.chart.axis$ValueTick#ValueTick(org.jfree.chart.axis.TickType,double,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)";
  "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.plot$XYPlot#drawRangeTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.axis$ValueAxis#getUpperBound()";
  "org.jfree.chart.plot$XYPlot#drawRangeTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getRenderer()";
  "org.jfree.chart.plot$XYPlot#drawRangeTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillRangeGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)";
  "org.jfree.chart.plot$XYPlot#drawRangeTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getRangeTickBandPaint()";
  "org.jfree.chart.plot$XYPlot#drawRangeTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.axis$ValueAxis#getLowerBound()";
  "org.jfree.chart.plot$XYPlot#drawRangeTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.plot$XYPlot#drawRangeTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.axis$ValueTick#getValue()";
  "org.jfree.chart.axis$AxisLocation#readResolve()" -> "org.jfree.chart.axis$AxisLocation#equals(java.lang.Object)";
  "org.jfree.chart.axis$AxisLocation#readResolve()" -> "org.jfree.chart.axis$AxisLocation#<clinit>()";
  "org.jfree.chart.axis$AxisLocation#equals(java.lang.Object)" -> "org.jfree.chart.axis$AxisLocation#toString()";
  "org.jfree.chart.plot$PiePlot3D#drawSide(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Arc2D,java.awt.geom.Area,java.awt.geom.Area,java.awt.Paint,java.awt.Paint,java.awt.Stroke,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot3D#isAngleAtBack(double)";
  "org.jfree.chart.plot$PiePlot3D#drawSide(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Arc2D,java.awt.geom.Area,java.awt.geom.Area,java.awt.Paint,java.awt.Paint,java.awt.Stroke,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot3D#getDarkerSides()";
  "org.jfree.chart.plot$PiePlot3D#drawSide(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Arc2D,java.awt.geom.Area,java.awt.geom.Area,java.awt.Paint,java.awt.Paint,java.awt.Stroke,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot3D#isAngleAtFront(double)";
  "org.jfree.chart.title$Title#clone()" -> "org.jfree.chart.block$AbstractBlock#clone()";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.util$ShapeUtilities#rotateShape(java.awt.Shape,double,float,float)";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.axis$Axis#getTickLabelInsets()";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.util$RectangleInsets#getTop()";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.util$RectangleInsets#getBottom()";
  "org.jfree.chart.renderer.category$BarRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)" -> "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)";
  "org.jfree.chart.renderer.category$BarRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)";
  "org.jfree.chart.text$TextBlockAnchor#readResolve()" -> "org.jfree.chart.text$TextBlockAnchor#<clinit>()";
  "org.jfree.chart.text$TextBlockAnchor#readResolve()" -> "org.jfree.chart.text$TextBlockAnchor#equals(java.lang.Object)";
  "org.jfree.chart.text$TextBlockAnchor#<clinit>()" -> "org.jfree.chart.text$TextBlockAnchor#TextBlockAnchor(java.lang.String)";
  "org.jfree.chart.renderer.category$BarRenderer#setShadowVisible(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.data.general$DatasetUtilities#createPieDatasetForRow(org.jfree.data.category.CategoryDataset,java.lang.Comparable)" -> "org.jfree.data.general$DatasetUtilities#createPieDatasetForRow(org.jfree.data.category.CategoryDataset,int)";
  "org.jfree.data.general$DatasetUtilities#createPieDatasetForRow(org.jfree.data.category.CategoryDataset,int)" -> "org.jfree.data.general$DefaultPieDataset#setValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data.general$DatasetUtilities#createPieDatasetForRow(org.jfree.data.category.CategoryDataset,int)" -> "org.jfree.data.general$DefaultPieDataset#DefaultPieDataset()";
  "org.jfree.chart.block$LineBorder#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.block$LineBorder#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)";
  "org.jfree.chart.util$PaintList#getPaint(int)" -> "org.jfree.chart.util$AbstractObjectList#get(int)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelFont(int,java.awt.Font)" -> "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelFont(int,java.awt.Font,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelFont(int,java.awt.Font,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelFont(int,java.awt.Font,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.plot$XYPlot#setSeriesRenderingOrder(org.jfree.chart.plot.SeriesRenderingOrder)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#getRenderer()" -> "org.jfree.chart.plot$CategoryPlot#getRenderer(int)";
  "org.jfree.chart.axis$NumberAxis#NumberAxis()" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart.block$BlockContainer#getBlocks()";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.xy$XYItemRendererState#setProcessVisibleItemsOnly(boolean)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.xy$XYAreaRenderer$XYAreaRendererState#XYAreaRenderer$XYAreaRendererState(org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$LogAxis#setNumberFormatOverride(java.text.NumberFormat)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$LogAxis#setNumberFormatOverride(java.text.NumberFormat)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.data.general$Series#Series(java.lang.Comparable)" -> "org.jfree.data.general$Series#Series(java.lang.Comparable,java.lang.String)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisible(int,java.lang.Boolean,boolean)" -> "org.jfree.chart.util$BooleanList#setBoolean(int,java.lang.Boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisible(int,java.lang.Boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#notifyListeners(org.jfree.chart.event.RendererChangeEvent)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisible(int,java.lang.Boolean,boolean)" -> "org.jfree.chart.event$RendererChangeEvent#RendererChangeEvent(java.lang.Object,boolean)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$DefaultDrawingSupplier#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$DefaultDrawingSupplier#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$DefaultDrawingSupplier#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$Plot#setOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.entity$PlotEntity#PlotEntity(java.awt.Shape,org.jfree.chart.plot.Plot)" -> "org.jfree.chart.entity$PlotEntity#PlotEntity(java.awt.Shape,org.jfree.chart.plot.Plot,java.lang.String)";
  "org.jfree.chart.entity$PlotEntity#PlotEntity(java.awt.Shape,org.jfree.chart.plot.Plot,java.lang.String)" -> "org.jfree.chart.entity$PlotEntity#PlotEntity(java.awt.Shape,org.jfree.chart.plot.Plot,java.lang.String,java.lang.String)";
  "org.jfree.chart.title$PaintScaleLegend#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$PaintScaleLegend#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setRangeGridlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart$JFreeChart#setPadding(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)";
  "org.jfree.chart$JFreeChart#setPadding(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)";
  "org.jfree.chart$JFreeChart#JFreeChart(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart.axis$NumberAxis#createIntegerTickUnits(java.util.Locale)" -> "org.jfree.chart.axis$TickUnits#TickUnits()";
  "org.jfree.chart.axis$NumberAxis#createIntegerTickUnits(java.util.Locale)" -> "org.jfree.chart.axis$NumberTickUnit#NumberTickUnit(double,java.text.NumberFormat,int)";
  "org.jfree.chart.axis$NumberAxis#createIntegerTickUnits(java.util.Locale)" -> "org.jfree.chart.axis$TickUnits#add(org.jfree.chart.axis.TickUnit)";
  "org.jfree.chart.axis$SegmentedTimeline#getExceptionSegmentCount(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#getSegmentCount()";
  "org.jfree.chart.axis$SegmentedTimeline#getExceptionSegmentCount(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentCount()";
  "org.jfree.chart.axis$SegmentedTimeline#getExceptionSegmentCount(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#intersect(long,long)";
  "org.jfree.chart.axis$SegmentedTimeline#getExceptionSegmentCount(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#intersect(long,long)";
  "org.jfree.chart.util$PaintList#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.util$PaintList#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintList#getPaint(int)";
  "org.jfree.chart.util$PaintList#equals(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesURLGenerator(int,org.jfree.chart.urls.XYURLGenerator,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesURLGenerator(int,org.jfree.chart.urls.XYURLGenerator,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$PolarPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PolarPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()";
  "org.jfree.chart.plot$PolarPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()";
  "org.jfree.chart.plot$PolarPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.xy.XYDataset)";
  "org.jfree.chart.plot$PolarPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.chart.plot$XYPlot#setRangeCrosshairLockedOnData(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.xy$IntervalXYDelegate#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.data.xy$IntervalXYDelegate#recalculateInterval()";
  "org.jfree.chart.axis$LogAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$LogAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$LogAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$LogAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$LogAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$LogAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.data$Range#constrain(double)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.data.time$Month#previous()" -> "org.jfree.data.time$Month#Month(int,int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.xy$XYItemRendererState#XYItemRendererState(org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$Axis#setTickLabelsVisible(boolean)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart$LegendItem#characterIteratorToString(java.text.CharacterIterator)";
  "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.util$StandardGradientPaintTransformer#StandardGradientPaintTransformer()";
  "org.jfree.chart.plot$ValueMarker#equals(java.lang.Object)" -> "org.jfree.chart.plot$Marker#equals(java.lang.Object)";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelFont(java.awt.Font)" -> "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelFont(java.awt.Font,boolean)";
  "org.jfree.chart.labels$StandardXYToolTipGenerator#generateToolTip(org.jfree.data.xy.XYDataset,int,int)" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#generateLabelString(org.jfree.data.xy.XYDataset,int,int)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.title$PaintScaleLegend#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.title$PaintScaleLegend#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)";
  "org.jfree.chart.entity$AxisEntity#AxisEntity(java.awt.Shape,org.jfree.chart.axis.Axis,java.lang.String)" -> "org.jfree.chart.entity$AxisEntity#AxisEntity(java.awt.Shape,org.jfree.chart.axis.Axis,java.lang.String,java.lang.String)";
  "org.jfree.chart.entity$AxisEntity#AxisEntity(java.awt.Shape,org.jfree.chart.axis.Axis,java.lang.String,java.lang.String)" -> "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String,java.lang.String)";
  "org.jfree.chart.entity$TitleEntity#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)";
  "org.jfree.chart.entity$TitleEntity#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.entity$ChartEntity#getArea()";
  "org.jfree.chart.renderer$AbstractRenderer#getSeriesPositiveItemLabelPosition(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.data.xy$XYSeries#toArray()" -> "org.jfree.data.xy$XYSeries#getY(int)";
  "org.jfree.data.xy$XYSeries#toArray()" -> "org.jfree.data.xy$XYSeries#getItemCount()";
  "org.jfree.data.xy$XYSeries#toArray()" -> "org.jfree.data.xy$XYSeries#getX(int)";
  "org.jfree.chart.axis$CategoryAxis#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.axis$CategoryAxis#writePaintMap(java.util.Map,java.io.ObjectOutputStream)";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseStroke(java.awt.Stroke)" -> "org.jfree.chart.renderer$AbstractRenderer#setBaseStroke(java.awt.Stroke,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseStroke(java.awt.Stroke,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.data.xy$XYSeriesCollection#clone()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.data.xy$XYSeriesCollection#clone()" -> "org.jfree.data.general$AbstractDataset#clone()";
  "org.jfree.data.xy$XYSeriesCollection#clone()" -> "org.jfree.data.xy$IntervalXYDelegate#clone()";
  "org.jfree.data.xy$XYSeriesCollection#clone()" -> "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)";
  "org.jfree.chart$JFreeChart#addChangeListener(org.jfree.chart.event.ChartChangeListener)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation()" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation(int)";
  "org.jfree.chart.ui$BasicProjectInfo#setName(java.lang.String)" -> "org.jfree.chart.ui$Library#setName(java.lang.String)";
  "org.jfree.chart.title$Title#setHorizontalAlignment(org.jfree.chart.util.HorizontalAlignment)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$Title#setHorizontalAlignment(org.jfree.chart.util.HorizontalAlignment)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.plot$XYPlot#setDataset(org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.plot$XYPlot#setDataset(int,org.jfree.data.xy.XYDataset)";
  "org.jfree.chart.title$Title#setVisible(boolean)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$Title#setVisible(boolean)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inIncludeSegments()" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#inc()";
  "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inIncludeSegments()" -> "org.jfree.chart.axis$SegmentedTimeline#getSegment(long)";
  "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inIncludeSegments()" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentStart()";
  "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inIncludeSegments()" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#inIncludeSegments()";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#inc()" -> "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inc(long)";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#inc()" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#inc(long)";
  "org.jfree.data.time$SerialDate#createInstance(java.util.Date)" -> "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int,int,int)";
  "org.jfree.data.time$SerialDate#createInstance(java.util.Date)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$TimeSeriesCollection#removeAllSeries()" -> "org.jfree.data.general$Series#removeChangeListener(org.jfree.data.general.SeriesChangeListener)";
  "org.jfree.data.time$TimeSeriesCollection#removeAllSeries()" -> "org.jfree.data.general$AbstractDataset#fireDatasetChanged()";
  "org.jfree.chart.axis$Axis#setTickLabelInsets(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart.axis$Axis#setTickLabelInsets(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)";
  "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(double,double)" -> "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(double,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)" -> "org.jfree.chart.plot$Plot#equals(java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#equals(java.lang.Object)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#equals(java.lang.Object)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#equals(java.lang.Object)" -> "org.jfree.chart.renderer.xy$GradientXYBarPainter#equals(java.lang.Object)";
  "org.jfree.chart.axis$SymbolAxis#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.axis$SymbolAxis#equals(java.lang.Object)" -> "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)";
  "org.jfree.chart.title$PaintScaleLegend#setAxisOffset(double)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$PaintScaleLegend#setAxisOffset(double)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setRangeZeroBaselineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#getRenderer(int)";
  "org.jfree.chart.plot$XYPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$XYPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#getDatasetCount()";
  "org.jfree.chart.plot$XYPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisForDataset(int)";
  "org.jfree.data.xy$AbstractIntervalXYDataset#getEndXValue(int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getEndX(int,int)";
  "org.jfree.data.xy$AbstractIntervalXYDataset#getEndXValue(int,int)" -> "org.jfree.data.xy$XYSeriesCollection#getEndX(int,int)";
  "org.jfree.data.time$TimeSeriesCollection#getEndX(int,int)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$TimeSeriesCollection#getEndX(int,int)" -> "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeriesCollection#getEndX(int,int)" -> "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimeSeriesCollection#getEndX(int,int)" -> "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.general$AbstractDataset#validateObject()" -> "org.jfree.data.general$AbstractDataset#fireDatasetChanged()";
  "org.jfree.chart.plot$RingPlot#setOuterSeparatorExtension(double)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.axis$DateAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)";
  "org.jfree.data.time$SpreadsheetDate#isBefore(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlineStroke(int,java.awt.Stroke)" -> "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlineStroke(int,java.awt.Stroke,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlineStroke(int,java.awt.Stroke,boolean)" -> "org.jfree.chart.util$StrokeList#setStroke(int,java.awt.Stroke)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlineStroke(int,java.awt.Stroke,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#contains(org.jfree.chart.axis.SegmentedTimeline$Segment)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentStart()";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#contains(org.jfree.chart.axis.SegmentedTimeline$Segment)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentEnd()";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#contains(org.jfree.chart.axis.SegmentedTimeline$Segment)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#contains(long,long)";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)" -> "org.jfree.chart.axis$Axis#getTickLabelInsets()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)" -> "org.jfree.chart.util$RectangleInsets#getTop()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)" -> "org.jfree.chart.util$RectangleInsets#getBottom()";
  "org.jfree.chart.renderer.category$BarRenderer#setShadowPaint(java.awt.Paint)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.data.xy$XYSeriesCollection#addSeries(org.jfree.data.xy.XYSeries)" -> "org.jfree.data.general$AbstractDataset#fireDatasetChanged()";
  "org.jfree.data.xy$XYSeriesCollection#addSeries(org.jfree.data.xy.XYSeries)" -> "org.jfree.data.general$Series#addChangeListener(org.jfree.data.general.SeriesChangeListener)";
  "org.jfree.chart.plot$PolarPlot#setAngleLabelFont(java.awt.Font)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#setDomainTickBandPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double)" -> "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)";
  "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation)" -> "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable,boolean)" -> "org.jfree.chart.util$StrokeMap#getStroke(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable,boolean)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlineStroke()";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable,boolean)" -> "org.jfree.chart.plot$Plot#getDrawingSupplier()";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable,boolean)" -> "org.jfree.chart.util$StrokeMap#put(java.lang.Comparable,java.awt.Stroke)";
  "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem)" -> "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem,boolean)";
  "org.jfree.chart.plot$DatasetRenderingOrder#equals(java.lang.Object)" -> "org.jfree.chart.plot$DatasetRenderingOrder#toString()";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightRange()";
  "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#constrain(double)";
  "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#toFixedHeight(double)";
  "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.plot$XYPlot#setDomainCrosshairPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.axis$CategoryAxis#CategoryAxis()" -> "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)";
  "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable)" -> "org.jfree.chart.plot$PiePlot#getAutoPopulateSectionPaint()";
  "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable)" -> "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable,boolean)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawBackground(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.labels$StandardXYToolTipGenerator#getTimeSeriesInstance()" -> "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator(java.lang.String,java.text.DateFormat,java.text.NumberFormat)";
  "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$CategoryPlot#setDomainGridlinesVisible(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double,boolean)" -> "org.jfree.chart.plot$CategoryPlot#isRangeCrosshairVisible()";
  "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxis(int,int)" -> "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxes(int,java.util.List)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart.axis$SymbolAxis#setGridBandAlternatePaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart.axis$SymbolAxis#setGridBandPaint(java.awt.Paint)";
  "org.jfree.chart.plot$PiePlot#setLegendLabelURLGenerator(org.jfree.chart.urls.PieURLGenerator)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.time$SerialDate#stringToMonthCode(java.lang.String)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.chart.axis$MarkerAxisBand#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$MarkerAxisBand#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.plot$Marker#getOutlinePaint()";
  "org.jfree.chart.axis$MarkerAxisBand#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.plot$Marker#getAlpha()";
  "org.jfree.chart.axis$MarkerAxisBand#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.plot$IntervalMarker#getEndValue()";
  "org.jfree.chart.axis$MarkerAxisBand#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.plot$IntervalMarker#getStartValue()";
  "org.jfree.chart.axis$MarkerAxisBand#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.axis$MarkerAxisBand#drawStringInRect(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.Font,java.lang.String)";
  "org.jfree.chart.axis$MarkerAxisBand#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$MarkerAxisBand#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$MarkerAxisBand#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$MarkerAxisBand#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.plot$Marker#getLabel()";
  "org.jfree.chart.axis$MarkerAxisBand#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$MarkerAxisBand#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.axis$MarkerAxisBand#getHeight(java.awt.Graphics2D)";
  "org.jfree.chart.axis$MarkerAxisBand#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double)" -> "org.jfree.chart.plot$Marker#getPaint()";
  "org.jfree.chart.plot$PiePlot3D#getPlotType()" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart.plot$PiePlot3D#getPlotType()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.util$StrokeMap#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.data$RangeType#RangeType(java.lang.String)";
  "org.jfree.chart.plot$Marker#setLabel(java.lang.String)" -> "org.jfree.chart.event$MarkerChangeEvent#MarkerChangeEvent(org.jfree.chart.plot.Marker)";
  "org.jfree.chart.plot$Marker#setLabel(java.lang.String)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.block$AbstractBlock#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$CategoryPlot#setRenderers(org.jfree.chart.renderer.category.CategoryItemRenderer[])" -> "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)";
  "org.jfree.chart.plot$CategoryPlot#setRenderers(org.jfree.chart.renderer.category.CategoryItemRenderer[])" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$DateAxis#zoomRange(double,double)";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$LogAxis#zoomRange(double,double)";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getSeriesURLGenerator(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#setDomainZeroBaselinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.entity$XYItemEntity#toString()" -> "org.jfree.chart.entity$XYItemEntity#getDataset()";
  "org.jfree.chart.entity$XYItemEntity#toString()" -> "org.jfree.chart.entity$XYItemEntity#getItem()";
  "org.jfree.chart.entity$XYItemEntity#toString()" -> "org.jfree.chart.entity$XYItemEntity#getSeriesIndex()";
  "org.jfree.chart.title$LegendTitle#setLegendItemGraphicPadding(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$LegendTitle#setLegendItemGraphicPadding(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.plot$DefaultDrawingSupplier#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$DefaultDrawingSupplier#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$DefaultDrawingSupplier#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.renderer$AbstractRenderer#getNegativeItemLabelPosition(int,int,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getSeriesNegativeItemLabelPosition(int)";
  "org.jfree.chart.title$LegendTitle#setItemPaint(java.awt.Paint)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$LegendTitle#setItemPaint(java.awt.Paint)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.axis$Axis#setLabelToolTip(java.lang.String)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#getRendererCount()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.renderer.category$BarRenderer#isInternalAnchor(org.jfree.chart.labels.ItemLabelAnchor)" -> "org.jfree.chart.labels$ItemLabelAnchor#<clinit>()";
  "org.jfree.data.xy$XYSeries#delete(int,int)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.xy$XYSeries#delete(int,int)" -> "org.jfree.data.xy$XYSeries#findBoundsByIteration()";
  "org.jfree.chart.block$BlockBorder#BlockBorder()" -> "org.jfree.chart.block$BlockBorder#BlockBorder(java.awt.Paint)";
  "org.jfree.chart.plot$PlotOrientation#readResolve()" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$PlotOrientation#readResolve()" -> "org.jfree.chart.plot$PlotOrientation#equals(java.lang.Object)";
  "org.jfree.chart.axis$ValueAxis#ValueAxis(java.lang.String,org.jfree.chart.axis.TickUnitSource)" -> "org.jfree.chart.axis$Axis#Axis(java.lang.String)";
  "org.jfree.chart.axis$ValueAxis#ValueAxis(java.lang.String,org.jfree.chart.axis.TickUnitSource)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#ValueAxis(java.lang.String,org.jfree.chart.axis.TickUnitSource)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.renderer.xy$XYBarRenderer$XYBarRendererState#XYBarRenderer$XYBarRendererState(org.jfree.chart.renderer.xy.XYBarRenderer,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.xy$XYItemRendererState#XYItemRendererState(org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.entity$XYItemEntity#equals(java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)";
  "org.jfree.chart.axis$CategoryAxis#hashCode()" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisible(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisible(boolean,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisible(boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#notifyListeners(org.jfree.chart.event.RendererChangeEvent)";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisible(boolean,boolean)" -> "org.jfree.chart.event$RendererChangeEvent#RendererChangeEvent(java.lang.Object,boolean)";
  "org.jfree.chart.block$LengthConstraintType#readResolve()" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$LengthConstraintType#readResolve()" -> "org.jfree.chart.block$LengthConstraintType#equals(java.lang.Object)";
  "org.jfree.chart.plot$Plot#setForegroundAlpha(float)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)";
  "org.jfree.chart$ChartRenderingInfo#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$PiePlot#setCircular(boolean)" -> "org.jfree.chart.plot$PiePlot#setCircular(boolean,boolean)";
  "org.jfree.chart.plot$PiePlot#setCircular(boolean,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot()" -> "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)";
  "org.jfree.chart.renderer.category$GradientBarPainter#createShadow(java.awt.geom.RectangularShape,double,double,org.jfree.chart.util.RectangleEdge,boolean)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#setRangeGridlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getAnnotations()";
  "org.jfree.chart.plot$CategoryPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis()";
  "org.jfree.chart.plot$CategoryPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxis()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getURLGenerator(int,int,boolean)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$PieLabelLinkStyle#readResolve()" -> "org.jfree.chart.plot$PieLabelLinkStyle#<clinit>()";
  "org.jfree.chart.plot$PieLabelLinkStyle#readResolve()" -> "org.jfree.chart.plot$PieLabelLinkStyle#equals(java.lang.Object)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelPaint(int,java.awt.Paint,boolean)" -> "org.jfree.chart.util$PaintList#setPaint(int,java.awt.Paint)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelPaint(int,java.awt.Paint,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator(java.lang.String,java.text.DateFormat,java.text.DateFormat)" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator(java.lang.String,java.text.DateFormat,java.text.DateFormat)";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator(java.lang.String,java.text.DateFormat,java.text.DateFormat)" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawOutline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxis()" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxis(int)";
  "org.jfree.chart.util$UnitType#readResolve()" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.util$UnitType#readResolve()" -> "org.jfree.chart.util$UnitType#equals(java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)" -> "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)" -> "org.jfree.chart.axis$CategoryAxis#configure()";
  "org.jfree.chart.title$TextTitle#drawVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.title$Title#getVerticalAlignment()";
  "org.jfree.chart.title$TextTitle#drawVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextBlockAnchor#<clinit>()";
  "org.jfree.chart.title$TextTitle#drawVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.title$Title#getPosition()";
  "org.jfree.chart.title$TextTitle#drawVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$VerticalAlignment#<clinit>()";
  "org.jfree.chart.title$TextTitle#drawVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)";
  "org.jfree.chart.title$TextTitle#drawVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#equals(java.lang.Object)" -> "org.jfree.chart.util$StandardGradientPaintTransformer#equals(java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,int,java.lang.Comparable,java.lang.Comparable,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getItemMiddle(java.lang.Comparable,java.lang.Comparable,org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,int,java.lang.Comparable,java.lang.Comparable,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisForDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,int,java.lang.Comparable,java.lang.Comparable,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,int,java.lang.Comparable,java.lang.Comparable,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$CategoryPlot#getDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,int,java.lang.Comparable,java.lang.Comparable,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer(int)";
  "org.jfree.chart.plot$CategoryPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,int,java.lang.Comparable,java.lang.Comparable,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getItemMiddle(java.lang.Comparable,java.lang.Comparable,org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(java.lang.Comparable,java.util.List,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelFont(java.awt.Font,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.data.time$TimeSeries#setDomainDescription(java.lang.String)" -> "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getSeriesItemLabelGenerator(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.axis$LogAxis#pan(double)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$LogAxis#pan(double)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$LogAxis#pan(double)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$LogAxis#pan(double)" -> "org.jfree.chart.axis$ValueAxis#setRange(double,double)";
  "org.jfree.chart.axis$LogAxis#pan(double)" -> "org.jfree.chart.axis$LogAxis#calculateLog(double)";
  "org.jfree.chart.axis$LogAxis#pan(double)" -> "org.jfree.chart.axis$LogAxis#calculateValue(double)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#findRangeBounds(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)";
  "org.jfree.data$Range#intersects(org.jfree.data.Range)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.data$Range#intersects(org.jfree.data.Range)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.data$Range#intersects(org.jfree.data.Range)" -> "org.jfree.data$Range#intersects(double,double)";
  "org.jfree.chart.axis$CategoryAxis#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable,boolean)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlinePaint()";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable,boolean)" -> "org.jfree.chart.util$PaintMap#put(java.lang.Comparable,java.awt.Paint)";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable,boolean)" -> "org.jfree.chart.util$PaintMap#getPaint(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable,boolean)" -> "org.jfree.chart.plot$Plot#getDrawingSupplier()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator(java.lang.String)" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator(java.lang.String,java.util.Locale)";
  "org.jfree.chart.title$LegendTitle#setItemLabelPadding(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$LegendTitle#setItemLabelPadding(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.plot$Plot#setOutlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#getRight()";
  "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$PeriodAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#getLeft()";
  "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#getTop()";
  "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)";
  "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#AxisSpace()";
  "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#ensureAtLeast(double,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$AxisSpace#getBottom()";
  "org.jfree.chart.labels$StandardXYToolTipGenerator#equals(java.lang.Object)" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesCollection#setXPosition(org.jfree.data.time.TimePeriodAnchor)" -> "org.jfree.data.general$AbstractDataset#notifyListeners(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.data.time$TimeSeriesCollection#setXPosition(org.jfree.data.time.TimePeriodAnchor)" -> "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesNegativeItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition)" -> "org.jfree.chart.renderer$AbstractRenderer#setSeriesNegativeItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition,boolean)";
  "org.jfree.chart.plot$CategoryPlot#cloneMarkerMap(java.util.Map)" -> "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)";
  "org.jfree.chart.plot$CategoryPlot#cloneMarkerMap(java.util.Map)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double)";
  "org.jfree.chart.axis$TickUnit#compareTo(java.lang.Object)" -> "org.jfree.chart.axis$TickUnit#getSize()";
  "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)" -> "org.jfree.chart.title$Title#addChangeListener(org.jfree.chart.event.TitleChangeListener)";
  "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart.axis$Axis#setTickLabelFont(java.awt.Font)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart.axis$Axis#setTickLabelPaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart.axis$Axis#setLabelPaint(java.awt.Paint)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart.axis$Axis#setLabelFont(java.awt.Font)";
  "org.jfree.data.time$TimeSeries#delete(int,int)" -> "org.jfree.data.time$TimeSeries#delete(int,int,boolean)";
  "org.jfree.data.time$Year#compareTo(java.lang.Object)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.chart.plot$CategoryPlot#configureDomainAxes()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#configureDomainAxes()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#configureDomainAxes()" -> "org.jfree.chart.axis$CategoryAxis#configure()";
  "org.jfree.chart.axis$CategoryAxis#removeCategoryLabelToolTip(java.lang.Comparable)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$CategoryAxis#removeCategoryLabelToolTip(java.lang.Comparable)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.title$TextTitle#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.title$TextTitle#equals(java.lang.Object)" -> "org.jfree.chart.title$Title#equals(java.lang.Object)";
  "org.jfree.chart.title$TextTitle#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.title$TextTitle#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.plot$CategoryPlot#getRendererCount()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$MultiplePiePlot#setDataExtractOrder(org.jfree.chart.util.TableOrder)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#getDomainMarkers(org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$XYPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.entity$JFreeChartEntity#JFreeChartEntity(java.awt.Shape,org.jfree.chart.JFreeChart,java.lang.String)" -> "org.jfree.chart.entity$JFreeChartEntity#JFreeChartEntity(java.awt.Shape,org.jfree.chart.JFreeChart,java.lang.String,java.lang.String)";
  "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation)" -> "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.renderer.category$BarRenderer#setBarPainter(org.jfree.chart.renderer.category.BarPainter)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getSeriesToolTipGenerator(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.axis$ValueAxis#setInverted(boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$ValueAxis#setInverted(boolean)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean,boolean)";
  "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairLockedOnData(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$Plot#markerChanged(org.jfree.chart.event.MarkerChangeEvent)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.renderer$AbstractRenderer#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.renderer$AbstractRenderer#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)";
  "org.jfree.chart.renderer$AbstractRenderer#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)";
  "org.jfree.data.xy$XYSeriesCollection#removeSeries(int)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.data.xy$XYSeriesCollection#removeSeries(int)" -> "org.jfree.data.general$AbstractDataset#fireDatasetChanged()";
  "org.jfree.data.xy$XYSeriesCollection#removeSeries(int)" -> "org.jfree.data.general$Series#removeChangeListener(org.jfree.data.general.SeriesChangeListener)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$XYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#setFixedRangeAxisSpaceForSubplots(org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$XYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$XYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)";
  "org.jfree.chart.block$LineBorder#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.block$LineBorder#equals(java.lang.Object)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart.block$LineBorder#equals(java.lang.Object)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.block$LineBorder#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$PiePlot#setAutoPopulateSectionOutlineStroke(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfWeek()";
  "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#isValidWeekdayCode(int)";
  "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.chart.title$TextTitle#setPaint(java.awt.Paint)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$TextTitle#setPaint(java.awt.Paint)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.axis$NumberTickUnit#NumberTickUnit(double,java.text.NumberFormat,int)" -> "org.jfree.chart.axis$TickUnit#TickUnit(double,int)";
  "org.jfree.chart.block$LabelBlock#LabelBlock(java.lang.String)" -> "org.jfree.chart.block$LabelBlock#LabelBlock(java.lang.String,java.awt.Font,java.awt.Paint)";
  "org.jfree.chart.block$LabelBlock#LabelBlock(java.lang.String)" -> "org.jfree.chart.block$LabelBlock#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.labels$AbstractPieItemLabelGenerator#equals(java.lang.Object)" -> "org.jfree.chart.util$LogFormat#equals(java.lang.Object)";
  "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextFont(int)" -> "org.jfree.chart.renderer$AbstractRenderer#getLegendTextFont(int)";
  "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double)" -> "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double,boolean)";
  "org.jfree.chart.util$LogFormat#LogFormat()" -> "org.jfree.chart.util$LogFormat#LogFormat(double,java.lang.String,boolean)";
  "org.jfree.chart.block$AbstractBlock#getContentYOffset()" -> "org.jfree.chart.block$BlockBorder#getInsets()";
  "org.jfree.chart.block$AbstractBlock#getContentYOffset()" -> "org.jfree.chart.util$RectangleInsets#getTop()";
  "org.jfree.chart.block$AbstractBlock#getContentYOffset()" -> "org.jfree.chart.block$LineBorder#getInsets()";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateAttributedSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#getAttributedLabel(int)";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateAttributedSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)" -> "org.jfree.data.general$DefaultPieDataset#getIndex(java.lang.Comparable)";
  "org.jfree.chart.axis$LogAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$LogAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$LogAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean,boolean)";
  "org.jfree.chart.plot$XYPlot#removeDomainMarker(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.plot$XYPlot#removeDomainMarker(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.plot$XYPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.axis$CategoryAxis#setTickLabelPaint(java.lang.Comparable,java.awt.Paint)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$CategoryAxis#setTickLabelPaint(java.lang.Comparable,java.awt.Paint)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.util$ShapeList#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$ShapeList#setShape(int,java.awt.Shape)";
  "org.jfree.chart.util$ShapeList#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawOutline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#getOutlineStroke()";
  "org.jfree.chart.renderer.category$BarRenderer3D#drawOutline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#getOutlinePaint()";
  "org.jfree.chart.plot$XYPlot#getDatasetsMappedToRangeAxis(java.lang.Integer)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#getDatasetsMappedToRangeAxis(java.lang.Integer)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getDatasetsMappedToRangeAxis(java.lang.Integer)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getDatasetsMappedToRangeAxis(java.lang.Integer)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.title$LegendTitle#<clinit>()" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart.plot$Marker#setLabelOffsetType(org.jfree.chart.util.LengthAdjustmentType)" -> "org.jfree.chart.event$MarkerChangeEvent#MarkerChangeEvent(org.jfree.chart.plot.Marker)";
  "org.jfree.chart.plot$Marker#setLabelOffsetType(org.jfree.chart.util.LengthAdjustmentType)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.plot$XYPlot#clearDomainAxes()" -> "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$XYPlot#clearDomainAxes()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#clearDomainAxes()" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#clearDomainAxes()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#clearDomainAxes()" -> "org.jfree.chart.util$AbstractObjectList#clear()";
  "org.jfree.chart.title$Title#Title()" -> "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart.title$Title#Title()" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart.block$LabelBlock#setFont(java.awt.Font)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart.block$LabelBlock#setPaint(java.awt.Paint)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getItemLineVisible(int,int)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getSeriesLinesVisible(int)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addAnnotation(org.jfree.chart.annotations.XYAnnotation,org.jfree.chart.util.Layer)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.axis$SymbolAxis#setGridBandAlternatePaint(java.awt.Paint)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$SymbolAxis#setGridBandAlternatePaint(java.awt.Paint)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double)" -> "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double,boolean)";
  "org.jfree.data.time$TimeSeries#getDataItem(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#getDataItem(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)";
  "org.jfree.data.time$TimeSeries#getDataItem(int)" -> "org.jfree.data.time$TimeSeriesDataItem#clone()";
  "org.jfree.chart.axis$Axis#setLabelInsets(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.axis$Axis#setLabelInsets(org.jfree.chart.util.RectangleInsets,boolean)";
  "org.jfree.chart.entity$PlotEntity#toString()" -> "org.jfree.chart.entity$ChartEntity#getToolTipText()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesItemLabelGenerator(int,org.jfree.chart.labels.XYItemLabelGenerator)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesItemLabelGenerator(int,org.jfree.chart.labels.XYItemLabelGenerator)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.axis$CategoryAxis#clearCategoryLabelToolTips()" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$CategoryAxis#clearCategoryLabelToolTips()" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.title$LegendGraphic#hashCode()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.title$LegendGraphic#hashCode()" -> "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)";
  "org.jfree.chart.plot$Plot#addChangeListener(org.jfree.chart.event.PlotChangeListener)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$MultiplePiePlot#setAggregatedItemsKey(java.lang.Comparable)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.xy$XYSeriesCollection#XYSeriesCollection(org.jfree.data.xy.XYSeries)" -> "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)";
  "org.jfree.data.xy$XYSeriesCollection#XYSeriesCollection(org.jfree.data.xy.XYSeries)" -> "org.jfree.data.xy$IntervalXYDelegate#IntervalXYDelegate(org.jfree.data.xy.XYDataset,boolean)";
  "org.jfree.data.xy$XYSeriesCollection#XYSeriesCollection(org.jfree.data.xy.XYSeries)" -> "org.jfree.data.xy$AbstractXYDataset#setSelectionState(org.jfree.data.xy.XYDatasetSelectionState)";
  "org.jfree.data.xy$XYSeriesCollection#XYSeriesCollection(org.jfree.data.xy.XYSeries)" -> "org.jfree.data.general$Series#addChangeListener(org.jfree.data.general.SeriesChangeListener)";
  "org.jfree.data.xy$XYSeriesCollection#XYSeriesCollection(org.jfree.data.xy.XYSeries)" -> "org.jfree.data.xy$AbstractIntervalXYDataset#AbstractIntervalXYDataset()";
  "org.jfree.chart.renderer$AbstractRenderer#setLegendShape(int,java.awt.Shape)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.renderer$AbstractRenderer#setLegendShape(int,java.awt.Shape)" -> "org.jfree.chart.util$ShapeList#setShape(int,java.awt.Shape)";
  "org.jfree.chart.plot$CategoryPlot#setRangeMinorGridlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.entity$ChartEntity#getShapeCoords()" -> "org.jfree.chart.entity$ChartEntity#getPolyCoords(java.awt.Shape)";
  "org.jfree.chart.entity$ChartEntity#getShapeCoords()" -> "org.jfree.chart.entity$ChartEntity#getRectCoords(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PolarPlot#drawCornerTextItems(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#drawCornerTextItems(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,double)";
  "org.jfree.chart.plot$XYPlot#getDataset()" -> "org.jfree.chart.plot$XYPlot#getDataset(int)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape1(java.awt.Graphics2D,int,int,int,boolean,java.awt.Shape)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemPaint(int,int,boolean)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape1(java.awt.Graphics2D,int,int,int,boolean,java.awt.Shape)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemStroke(int,int,boolean)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#add(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart.plot$CombinedRangeXYPlot#add(org.jfree.chart.plot.XYPlot,int)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getToolTipGenerator(int,int,boolean)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getSeriesToolTipGenerator(int)";
  "org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,double)";
  "org.jfree.chart.text$TextBlock#calculateOffsets(org.jfree.chart.text.TextBlockAnchor,double,double)" -> "org.jfree.chart.text$TextBlockAnchor#<clinit>()";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#before(org.jfree.chart.axis.SegmentedTimeline$Segment)" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentStart()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#setUseYInterval(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.block$BlockContainer#clone()" -> "org.jfree.chart.block$AbstractBlock#clone()";
  "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer,boolean)";
  "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer,boolean)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer,boolean)" -> "org.jfree.chart.plot$Marker#addChangeListener(org.jfree.chart.event.MarkerChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,double)" -> "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.chart.renderer.category$BarRenderer#setDefaultBarPainter(org.jfree.chart.renderer.category.BarPainter)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer#setDefaultBarPainter(org.jfree.chart.renderer.category.BarPainter)" -> "org.jfree.chart.renderer.category$BarRenderer#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesItemLabelGenerator(int,org.jfree.chart.labels.CategoryItemLabelGenerator)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesItemLabelGenerator(int,org.jfree.chart.labels.CategoryItemLabelGenerator,boolean)";
  "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" -> "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String)";
  "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" -> "org.jfree.chart.ui$BasicProjectInfo#setCopyright(java.lang.String)";
  "org.jfree.chart.plot$RingPlot#setSectionDepth(double)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$XYStepRenderer#equals(java.lang.Object)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#equals(java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#setRangeMinorGridlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.axis$NumberAxis#setRangeType(org.jfree.data.RangeType)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$NumberAxis#setRangeType(org.jfree.data.RangeType)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.block$BlockBorder#<clinit>()" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.block$BlockBorder#<clinit>()" -> "org.jfree.chart.block$BlockBorder#BlockBorder(org.jfree.chart.util.RectangleInsets,java.awt.Paint)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#setShapesFilled(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#shrink(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$XYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$AxisSpace#AxisSpace()";
  "org.jfree.chart.plot$XYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.axis$DateTickUnit#addToDate(java.util.Date,java.util.TimeZone)" -> "org.jfree.chart.axis$DateTickUnitType#getCalendarField()";
  "org.jfree.chart.plot$DefaultDrawingSupplier#equalShapes(java.awt.Shape[],java.awt.Shape[])" -> "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)";
  "org.jfree.chart.plot$DefaultDrawingSupplier#equalShapes(java.awt.Shape[],java.awt.Shape[])" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#setVerticalTickLabels(boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$ValueAxis#setVerticalTickLabels(boolean)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.util$RectangleInsets#trimHeight(double)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)";
  "org.jfree.chart.util$RectangleInsets#trimHeight(double)" -> "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)";
  "org.jfree.chart.plot$PiePlot#setSectionOutlineStroke(java.lang.Comparable,java.awt.Stroke)" -> "org.jfree.chart.util$StrokeMap#put(java.lang.Comparable,java.awt.Stroke)";
  "org.jfree.chart.plot$PiePlot#setSectionOutlineStroke(java.lang.Comparable,java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#setAttributedLabel(int,java.text.AttributedString)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.data.time$SerialDate#stringToWeekdayCode(java.lang.String)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#addCornerTextItem(java.lang.String)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setBaseShapesFilled(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.axis$Axis#setLabelPaint(java.awt.Paint)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,java.lang.Number)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)";
  "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$PolarPlot#zoom(double)";
  "org.jfree.chart.axis$PeriodAxis#PeriodAxis(java.lang.String)" -> "org.jfree.chart.axis$PeriodAxis#PeriodAxis(java.lang.String,org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)";
  "org.jfree.chart.axis$PeriodAxis#PeriodAxis(java.lang.String)" -> "org.jfree.data.time$Day#<clinit>()";
  "org.jfree.chart.axis$PeriodAxis#PeriodAxis(java.lang.String)" -> "org.jfree.data.time$Day#Day()";
  "org.jfree.chart.axis$PeriodAxis#PeriodAxis(java.lang.String,org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.chart.axis$PeriodAxis#PeriodAxis(java.lang.String,org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod,java.util.TimeZone,java.util.Locale)";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisForDataset(int)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxis(int)";
  "org.jfree.chart.renderer$AbstractRenderer#setLegendTextPaint(int,java.awt.Paint)" -> "org.jfree.chart.util$PaintList#setPaint(int,java.awt.Paint)";
  "org.jfree.chart.renderer$AbstractRenderer#setLegendTextPaint(int,java.awt.Paint)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#hashCode()" -> "org.jfree.chart.renderer$AbstractRenderer#hashCode()";
  "org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate,int)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.chart.plot$PieLabelDistributor#adjustInwards()" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)";
  "org.jfree.chart$ChartRenderingInfo#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)";
  "org.jfree.chart.block$AbstractBlock#setPadding(double,double,double,double)" -> "org.jfree.chart.block$AbstractBlock#setPadding(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart.block$AbstractBlock#setPadding(double,double,double,double)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.block$AbstractBlock#setPadding(double,double,double,double)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.plot$XYPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint)" -> "org.jfree.chart$LegendItem#<clinit>()";
  "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint)" -> "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)";
  "org.jfree.chart.axis$Tick#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.axis$Tick#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.data.xy$XYSeries#createCopy(int,int)" -> "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem)";
  "org.jfree.data.xy$XYSeries#createCopy(int,int)" -> "org.jfree.data.general$Series#clone()";
  "org.jfree.data.xy$XYSeries#createCopy(int,int)" -> "org.jfree.data.xy$XYDataItem#clone()";
  "org.jfree.chart.util$LogFormat#LogFormat(double,java.lang.String,boolean)" -> "org.jfree.chart.util$LogFormat#LogFormat(double,java.lang.String,java.lang.String,boolean)";
  "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart$LegendItem#<clinit>()";
  "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)";
  "org.jfree.chart.util$ObjectUtilities#setClassLoader(java.lang.ClassLoader)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.data.xy$XYSeriesCollection#getSeries(int)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.chart.block$FlowArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisIndex(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)";
  "org.jfree.chart.plot$CrosshairState#updateCrosshairPoint(double,double,int,int,double,double,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#XYAreaRenderer()" -> "org.jfree.chart.renderer.xy$XYAreaRenderer#XYAreaRenderer(int)";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#dec(long)" -> "org.jfree.chart.axis$SegmentedTimeline#<clinit>()";
  "org.jfree.data.time$Month#getYear()" -> "org.jfree.data.time$Year#Year(int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)";
  "org.jfree.chart.renderer$AbstractRenderer#getPositiveItemLabelPosition(int,int,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getSeriesPositiveItemLabelPosition(int)";
  "org.jfree.chart.text$TextLine#TextLine(java.lang.String,java.awt.Font)" -> "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font)";
  "org.jfree.chart.text$TextLine#TextLine(java.lang.String,java.awt.Font)" -> "org.jfree.chart.text$TextFragment#<clinit>()";
  "org.jfree.chart.plot$PiePlot#setLegendLabelToolTipGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.title$TextTitle#setTextAlignment(org.jfree.chart.util.HorizontalAlignment)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$TextTitle#setTextAlignment(org.jfree.chart.util.HorizontalAlignment)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#toFixedWidth(double)";
  "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthRange()";
  "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#constrain(double)";
  "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.axis$AxisState#moveCursor(double,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$AxisState#cursorRight(double)";
  "org.jfree.chart.axis$AxisState#moveCursor(double,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$AxisState#moveCursor(double,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$AxisState#cursorUp(double)";
  "org.jfree.chart.axis$AxisState#moveCursor(double,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$AxisState#cursorLeft(double)";
  "org.jfree.chart.axis$AxisState#moveCursor(double,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$AxisState#cursorDown(double)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getItemShapeFilled(int,int)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getSeriesShapesFilled(int)";
  "org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.chart.title$Title#addChangeListener(org.jfree.chart.event.TitleChangeListener)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.data.time$SerialDate#getMonths()" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#getMonths()" -> "org.jfree.data.time$SerialDate#getMonths(boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlineStroke(java.awt.Stroke,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlineStroke(java.awt.Stroke,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$IntervalMarker#IntervalMarker(double,double,java.awt.Paint)" -> "org.jfree.chart.plot$IntervalMarker#IntervalMarker(double,double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelsVisible(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelsVisible(boolean,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelsVisible(boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$PolarPlot#setAngleLabelsVisible(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#removeRangeMarker(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.plot$XYPlot#removeRangeMarker(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.plot$XYPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getRangeBounds(java.util.List,org.jfree.data.Range,boolean)";
  "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)" -> "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)";
  "org.jfree.chart.block$AbstractBlock#drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.block$BlockBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$AbstractBlock#drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.util$RectangleInsets#extendWidth(double)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)";
  "org.jfree.chart.util$RectangleInsets#extendWidth(double)" -> "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation)" -> "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)";
  "org.jfree.data.xy$DefaultXYDataset#getDomainOrder()" -> "org.jfree.data$DomainOrder#<clinit>()";
  "org.jfree.chart.plot$RingPlot#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$RingPlot#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)";
  "org.jfree.data.general$DatasetUtilities#iterateCategoryRangeBounds(org.jfree.data.category.CategoryDataset,boolean)" -> "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)";
  "org.jfree.chart.plot$XYPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers()" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers()" -> "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers(int)";
  "org.jfree.data.xy$AbstractIntervalXYDataset#AbstractIntervalXYDataset()" -> "org.jfree.data.xy$AbstractXYDataset#AbstractXYDataset()";
  "org.jfree.chart.plot$IntervalMarker#setStartValue(double)" -> "org.jfree.chart.event$MarkerChangeEvent#MarkerChangeEvent(org.jfree.chart.plot.Marker)";
  "org.jfree.chart.plot$IntervalMarker#setStartValue(double)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesFillPaint(int,java.awt.Paint,boolean)" -> "org.jfree.chart.util$PaintList#setPaint(int,java.awt.Paint)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesFillPaint(int,java.awt.Paint,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$Marker#Marker()" -> "org.jfree.chart.plot$Marker#Marker(java.awt.Paint)";
  "org.jfree.chart.title$TextTitle#setText(java.lang.String)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$TextTitle#setText(java.lang.String)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean)" -> "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean,boolean)";
  "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean,boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean,boolean)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.data.time$SpreadsheetDate#toDate()" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$SpreadsheetDate#toDate()" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$SpreadsheetDate#toDate()" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseItemLabelGenerator(org.jfree.chart.labels.CategoryItemLabelGenerator)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseItemLabelGenerator(org.jfree.chart.labels.CategoryItemLabelGenerator,boolean)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)";
  "org.jfree.data.xy$XYSeries#add(java.lang.Number,java.lang.Number)" -> "org.jfree.data.xy$XYSeries#add(java.lang.Number,java.lang.Number,boolean)";
  "org.jfree.data.xy$XYSeries#findBoundsByIteration()" -> "org.jfree.data.xy$XYSeries#updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)";
  "org.jfree.data.time$RegularTimePeriod#getStart()" -> "org.jfree.data.time$Month#getFirstMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getStart()" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getStart()" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.chart.plot$RingPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$RingPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#setOutline(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$PolarPlot#removeCornerTextItem(java.lang.String)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseFillPaint(java.awt.Paint)" -> "org.jfree.chart.renderer$AbstractRenderer#setBaseFillPaint(java.awt.Paint,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseFillPaint(java.awt.Paint,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#findDomainBounds(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)";
  "org.jfree.data.xy$DefaultXYDataset#getX(int,int)" -> "org.jfree.data.xy$DefaultXYDataset#getXValue(int,int)";
  "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double)" -> "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double,boolean)";
  "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart.event$ChartChangeEvent#setChart(org.jfree.chart.JFreeChart)";
  "org.jfree.data.xy$XYSeries#remove(java.lang.Number)" -> "org.jfree.data.xy$XYSeries#remove(int)";
  "org.jfree.data.xy$XYSeries#remove(java.lang.Number)" -> "org.jfree.data.xy$XYSeries#indexOf(java.lang.Number)";
  "org.jfree.data.xy$XYSeries#remove(int)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.xy$XYSeries#remove(int)" -> "org.jfree.data.xy$XYSeries#updateBoundsForRemovedItem(org.jfree.data.xy.XYDataItem)";
  "org.jfree.data.time$Month#Month(java.util.Date,java.util.TimeZone,java.util.Locale)" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.data.time$Month#Month(java.util.Date,java.util.TimeZone,java.util.Locale)" -> "org.jfree.data.time$Month#peg(java.util.Calendar)";
  "org.jfree.data.xy$IntervalXYDelegate#getStartXValue(int,int)" -> "org.jfree.data.xy$IntervalXYDelegate#getIntervalWidth()";
  "org.jfree.data.xy$IntervalXYDelegate#getStartXValue(int,int)" -> "org.jfree.data.xy$DefaultXYDataset#getXValue(int,int)";
  "org.jfree.data.xy$IntervalXYDelegate#getStartXValue(int,int)" -> "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)";
  "org.jfree.data.xy$IntervalXYDelegate#getStartXValue(int,int)" -> "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)";
  "org.jfree.data.xy$IntervalXYDelegate#getStartXValue(int,int)" -> "org.jfree.data.xy$IntervalXYDelegate#getIntervalPositionFactor()";
  "org.jfree.chart.renderer$AbstractRenderer#getSeriesCreateEntities(int)" -> "org.jfree.chart.util$BooleanList#getBoolean(int)";
  "org.jfree.chart.plot$XYPlot#getSeriesCount()" -> "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()";
  "org.jfree.chart.plot$XYPlot#getSeriesCount()" -> "org.jfree.chart.plot$XYPlot#getDataset()";
  "org.jfree.chart.plot$XYPlot#getSeriesCount()" -> "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()";
  "org.jfree.chart.plot$XYPlot#getSeriesCount()" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.chart.axis$AxisSpace#add(double,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$MarkerAxisBand#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.axis$MarkerAxisBand#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#findSelectionStateForDataset(org.jfree.data.xy.XYDataset,java.lang.Object)" -> "org.jfree.data.xy$AbstractXYDataset#getSelectionState()";
  "org.jfree.data.time$SerialDate#getMonths(boolean)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers()" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers()" -> "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers(int)";
  "org.jfree.chart.title$Title#setPosition(org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$Title#setPosition(org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.data.general$DefaultPieDataset#hashCode()" -> "org.jfree.data$DefaultKeyedValues#hashCode()";
  "org.jfree.chart.plot$PiePlot#setLabelLinkPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.chart.plot$PiePlot#setIgnoreNullValues(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setDrawSeriesLineAsPath(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#addDomainMarker(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.plot$XYPlot#addDomainMarker(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.plot$XYPlot#addDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#findSubplot(org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#getSubplots()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#findSubplot(org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$PlotRenderingInfo#getSubplotIndex(java.awt.geom.Point2D)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#removeAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.data.time$Day#getSerialIndex()" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer$State#startSeriesPass(org.jfree.data.xy.XYDataset,int,int,int,int,int)" -> "org.jfree.chart.renderer.xy$XYItemRendererState#startSeriesPass(org.jfree.data.xy.XYDataset,int,int,int,int,int)";
  "org.jfree.chart.axis$Axis#setMinorTickMarkOutsideLength(float)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#StandardXYSeriesLabelGenerator()" -> "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#StandardXYSeriesLabelGenerator(java.lang.String)";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation()" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation(int)";
  "org.jfree.chart.plot$Plot#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.axis$NumberAxis3D#NumberAxis3D()" -> "org.jfree.chart.axis$NumberAxis3D#NumberAxis3D(java.lang.String)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#setGradientTransformer(org.jfree.chart.util.GradientPaintTransformer)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesToolTipGenerator(int,org.jfree.chart.labels.XYToolTipGenerator)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesToolTipGenerator(int,org.jfree.chart.labels.XYToolTipGenerator,boolean)";
  "org.jfree.chart.plot$PolarPlot#translateValueThetaRadiusToJava2D(double,double,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$ValueAxis#getLowerBound()";
  "org.jfree.chart.plot$PolarPlot#translateValueThetaRadiusToJava2D(double,double,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$PolarPlot#getMaxRadius()";
  "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers(int)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers(int)" -> "org.jfree.chart.plot$Marker#removeChangeListener(org.jfree.chart.event.MarkerChangeListener)";
  "org.jfree.data.general$DefaultPieDataset#getIndex(java.lang.Comparable)" -> "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)";
  "org.jfree.chart.renderer$AbstractRenderer#getSeriesStroke(int)" -> "org.jfree.chart.util$StrokeList#getStroke(int)";
  "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.axis$Axis#setTickMarksVisible(boolean)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.chart.block$LabelBlock#LabelBlock(java.lang.String,java.awt.Font)" -> "org.jfree.chart.block$LabelBlock#LabelBlock(java.lang.String,java.awt.Font,java.awt.Paint)";
  "org.jfree.chart.block$LabelBlock#LabelBlock(java.lang.String,java.awt.Font)" -> "org.jfree.chart.block$LabelBlock#<clinit>()";
  "org.jfree.data.general$Series#isEmpty()" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.general$Series#isEmpty()" -> "org.jfree.data.xy$XYSeries#getItemCount()";
  "org.jfree.chart$JFreeChart#setBackgroundImage(java.awt.Image)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)";
  "org.jfree.chart$JFreeChart#setBorderVisible(boolean)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart.plot$PiePlot#setURLGenerator(org.jfree.chart.urls.PieURLGenerator)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)";
  "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator(java.lang.String,java.util.Locale)" -> "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)";
  "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#AbstractPieItemLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)";
  "org.jfree.data.xy$XYSeriesCollection#setIntervalPositionFactor(double)" -> "org.jfree.data.xy$IntervalXYDelegate#setIntervalPositionFactor(double)";
  "org.jfree.data.xy$XYSeriesCollection#setIntervalPositionFactor(double)" -> "org.jfree.data.general$AbstractDataset#fireDatasetChanged()";
  "org.jfree.chart.renderer.xy$XYStepRenderer#setStepPoint(double)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#setShadowXOffset(double)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)" -> "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)";
  "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data.xy$DefaultXYDataset#removeSeries(java.lang.Comparable)" -> "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)";
  "org.jfree.data.xy$DefaultXYDataset#removeSeries(java.lang.Comparable)" -> "org.jfree.data.xy$DefaultXYDataset#indexOf(java.lang.Comparable)";
  "org.jfree.data.xy$DefaultXYDataset#removeSeries(java.lang.Comparable)" -> "org.jfree.data.general$AbstractDataset#notifyListeners(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$ValueMarker#ValueMarker(double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)" -> "org.jfree.chart.plot$Marker#Marker(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseItemLabelGenerator(org.jfree.chart.labels.XYItemLabelGenerator)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseItemLabelGenerator(org.jfree.chart.labels.XYItemLabelGenerator,boolean)";
  "org.jfree.chart.renderer.category$BarRenderer#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$XYPlot#addRangeMarker(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.plot$XYPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$XYPlot#addRangeMarker(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.util$AbstractObjectList#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.util$AbstractObjectList#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$AbstractObjectList#get(int)";
  "org.jfree.chart.util$AbstractObjectList#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart$ChartRenderingInfo#ChartRenderingInfo(org.jfree.chart.entity.EntityCollection)" -> "org.jfree.chart.plot$PlotRenderingInfo#PlotRenderingInfo(org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data.xy$XYSeriesCollection#getDomainLowerBound(boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getSeries(int)";
  "org.jfree.data.xy$XYSeriesCollection#getDomainLowerBound(boolean)" -> "org.jfree.data.xy$XYSeries#getMinX()";
  "org.jfree.data.xy$XYSeriesCollection#getDomainLowerBound(boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.data.xy$XYSeriesCollection#getDomainLowerBound(boolean)" -> "org.jfree.data.xy$IntervalXYDelegate#getDomainLowerBound(boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setTreatLegendShapeAsLine(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#getDatasetsMappedToDomainAxis(java.lang.Integer)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getDatasetsMappedToDomainAxis(java.lang.Integer)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#getDatasetsMappedToDomainAxis(java.lang.Integer)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#getDatasetsMappedToDomainAxis(java.lang.Integer)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart.renderer$AbstractRenderer#setLegendTextFont(int,java.awt.Font)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.renderer$AbstractRenderer#setLegendTextFont(int,java.awt.Font)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesShapesFilled(int,java.lang.Boolean)" -> "org.jfree.chart.util$BooleanList#setBoolean(int,java.lang.Boolean)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesShapesFilled(int,java.lang.Boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.block$BlockBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)";
  "org.jfree.chart.block$BlockBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)";
  "org.jfree.chart.block$BlockBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)";
  "org.jfree.chart.block$BlockBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)";
  "org.jfree.chart.plot$PiePlot#setLabelLinkMargin(double)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getURLGenerator(int,int,boolean)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int)" -> "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int,org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#setGradientPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairRowKey(java.lang.Comparable,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.time$Day#Day(int,int,int)" -> "org.jfree.data.time$SerialDate#createInstance(int,int,int)";
  "org.jfree.data.time$Day#Day(int,int,int)" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.data.time$Day#Day(int,int,int)" -> "org.jfree.data.time$Day#peg(java.util.Calendar)";
  "org.jfree.data.time$Day#Day(int,int,int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#setLeftArrow(java.awt.Shape)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$ValueAxis#setLeftArrow(java.awt.Shape)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.plot$XYPlot#setFixedLegendItems(org.jfree.chart.LegendItemCollection)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.util$ShapeList#clone()" -> "org.jfree.chart.util$AbstractObjectList#clone()";
  "org.jfree.data.xy$XYSeries#getDataItem(int)" -> "org.jfree.data.xy$XYDataItem#clone()";
  "org.jfree.chart.renderer.xy$GradientXYBarPainter#createShadow(java.awt.geom.RectangularShape,double,double,org.jfree.chart.util.RectangleEdge,boolean)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.data$RangeType#readResolve()" -> "org.jfree.data$RangeType#<clinit>()";
  "org.jfree.data$RangeType#readResolve()" -> "org.jfree.data$RangeType#equals(java.lang.Object)";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)" -> "org.jfree.chart.util$ObjectList#ObjectList()";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#AbstractPieItemLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)";
  "org.jfree.chart.plot$XYPlot#setQuadrantOrigin(java.awt.geom.Point2D)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.time$Year#previous()" -> "org.jfree.data.time$Year#Year(int)";
  "org.jfree.chart.plot$XYPlot#addDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart$LegendItem#<clinit>()";
  "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)";
  "org.jfree.data.xy$AbstractXYDataset#setSelectionState(org.jfree.data.xy.XYDatasetSelectionState)" -> "org.jfree.data.general$AbstractDataset#fireDatasetChanged()";
  "org.jfree.chart.plot$PlotRenderingInfo#getSubplotIndex(java.awt.geom.Point2D)" -> "org.jfree.chart.plot$PlotRenderingInfo#getSubplotCount()";
  "org.jfree.chart.plot$PlotRenderingInfo#getSubplotIndex(java.awt.geom.Point2D)" -> "org.jfree.chart.plot$PlotRenderingInfo#getDataArea()";
  "org.jfree.chart.plot$PlotRenderingInfo#getSubplotIndex(java.awt.geom.Point2D)" -> "org.jfree.chart.plot$PlotRenderingInfo#getSubplotInfo(int)";
  "org.jfree.data.xy$XYSeriesCollection#getStartX(int,int)" -> "org.jfree.data.xy$IntervalXYDelegate#getStartX(int,int)";
  "org.jfree.chart.entity$ChartEntity#getImageMapAreaTag(org.jfree.chart.imagemap.ToolTipTagFragmentGenerator,org.jfree.chart.imagemap.URLTagFragmentGenerator)" -> "org.jfree.chart.entity$ChartEntity#getShapeCoords()";
  "org.jfree.chart.entity$ChartEntity#getImageMapAreaTag(org.jfree.chart.imagemap.ToolTipTagFragmentGenerator,org.jfree.chart.imagemap.URLTagFragmentGenerator)" -> "org.jfree.chart.entity$ChartEntity#getShapeType()";
  "org.jfree.chart$ChartFactory#getChartTheme()" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.data.xy$XYSeries#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.data.xy$XYSeries#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.data.xy$XYSeries#equals(java.lang.Object)" -> "org.jfree.data.general$Series#equals(java.lang.Object)";
  "org.jfree.chart.plot$PolarPlot#drawAxis(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$PolarPlot#drawAxis(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$PolarPlot#drawAxis(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#drawAxis(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$LogAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$PolarPlot#drawAxis(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$PeriodAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$PolarPlot#drawAxis(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$PolarPlot#drawAxis(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$SymbolAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.renderer.category$BarRenderer#calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.renderer$AbstractRenderer#getItemLabelAnchorOffset()";
  "org.jfree.chart.renderer.category$BarRenderer#calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.labels$ItemLabelAnchor#<clinit>()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#CombinedRangeXYPlot()" -> "org.jfree.chart.plot$CombinedRangeXYPlot#CombinedRangeXYPlot(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.plot$CombinedRangeXYPlot#CombinedRangeXYPlot()" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#CombinedRangeXYPlot()" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#CombinedRangeXYPlot()" -> "org.jfree.chart.axis$NumberAxis#NumberAxis()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#CombinedRangeXYPlot()" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#CombinedRangeXYPlot(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart.title$PaintScaleLegend#setAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.title$PaintScaleLegend#setAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$PaintScaleLegend#setAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.title$PaintScaleLegend#setAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)";
  "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)";
  "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)";
  "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)";
  "org.jfree.chart.text$TextUtilities#isUseDrawRotatedStringWorkaround()" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#deriveRotationAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.text$TextUtilities#deriveRotationAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#deriveRotationAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.plot$PiePlot#clearSectionOutlinePaints(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$PiePlot#clearSectionOutlinePaints(boolean)" -> "org.jfree.chart.util$PaintMap#clear()";
  "org.jfree.chart.title$TextTitle#setFont(java.awt.Font)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$TextTitle#setFont(java.awt.Font)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.entity$AxisEntity#AxisEntity(java.awt.Shape,org.jfree.chart.axis.Axis)" -> "org.jfree.chart.entity$AxisEntity#AxisEntity(java.awt.Shape,org.jfree.chart.axis.Axis,java.lang.String)";
  "org.jfree.chart.block$BlockBorder#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$PiePlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$PiePlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$PiePlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$XYPlot#setDomainMinorGridlinesVisible(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clear()" -> "org.jfree.chart.plot$PlotRenderingInfo#PlotRenderingInfo(org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart.axis$PeriodAxis#setMinorTickMarkInsideLength(float)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$PeriodAxis#setMinorTickMarkInsideLength(float)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesShapesFilled(int,boolean)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesShapesFilled(int,java.lang.Boolean)";
  "org.jfree.chart.plot$IntervalMarker#IntervalMarker(double,double)" -> "org.jfree.chart.plot$IntervalMarker#IntervalMarker(double,double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getItemLabelGenerator(int,int,boolean)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.title$PaintScaleLegend#setSubdivisionCount(int)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$PaintScaleLegend#setSubdivisionCount(int)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.axis$Axis#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.axis$Axis#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)";
  "org.jfree.chart.util$ShapeUtilities#createDiagonalCross(float,float)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.axis$DateTickUnitType#readResolve()" -> "org.jfree.chart.axis$DateTickUnitType#equals(java.lang.Object)";
  "org.jfree.chart.axis$DateTickUnitType#readResolve()" -> "org.jfree.chart.axis$DateTickUnitType#<clinit>()";
  "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#inc(long)" -> "org.jfree.chart.axis$SegmentedTimeline#<clinit>()";
  "org.jfree.chart.util$StrokeMap#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)";
  "org.jfree.chart.util$StrokeMap#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$StrokeMap#getStroke(java.lang.Comparable)";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,java.lang.Number)";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.TimeSeriesDataItem)";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItems(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.chart.renderer$RendererUtilities#findLiveItemsUpperBound(org.jfree.data.xy.XYDataset,int,double,double)";
  "org.jfree.chart.renderer$RendererUtilities#findLiveItems(org.jfree.data.xy.XYDataset,int,double,double)" -> "org.jfree.chart.renderer$RendererUtilities#findLiveItemsLowerBound(org.jfree.data.xy.XYDataset,int,double,double)";
  "org.jfree.chart.plot$PolarPlot#setAngleLabelPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getSeriesShapesVisible(int)" -> "org.jfree.chart.util$BooleanList#getBoolean(int)";
  "org.jfree.chart.plot$XYPlot#setRangeCrosshairPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.block$FlowArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.block$FlowArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#toFixedWidth(double)";
  "org.jfree.chart.block$FlowArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthRange()";
  "org.jfree.chart.block$FlowArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.block$FlowArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseCreateEntities(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#setBaseCreateEntities(boolean,boolean)";
  "org.jfree.chart.plot$CategoryPlot#datasetsMappedToDomainAxis(int)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#datasetsMappedToDomainAxis(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#datasetsMappedToDomainAxis(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#datasetsMappedToDomainAxis(int)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#setMargin(double)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#removeAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart.plot$XYPlot#removeAnnotation(org.jfree.chart.annotations.XYAnnotation,boolean)";
  "org.jfree.chart.util$StandardGradientPaintTransformer#hashCode()" -> "org.jfree.chart.util$GradientPaintTransformType#hashCode()";
  "org.jfree.data.xy$XYSeriesCollection#getEndX(int,int)" -> "org.jfree.data.xy$IntervalXYDelegate#getEndX(int,int)";
  "org.jfree.chart.plot$XYPlot#setRangeZeroBaselinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.axis$Axis#setMinorTickMarkInsideLength(float)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisibleInLegend(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisibleInLegend(boolean,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisibleInLegend(boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$PiePlot#setLabelDistributor(org.jfree.chart.plot.AbstractPieLabelDistributor)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.util$ShapeList#ShapeList()" -> "org.jfree.chart.util$AbstractObjectList#AbstractObjectList()";
  "org.jfree.chart.block$LabelBlock#setFont(java.awt.Font)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.block$LabelBlock#setFont(java.awt.Font)" -> "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setLegendItemToolTipGenerator(org.jfree.chart.labels.XYSeriesLabelGenerator)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$Marker#setPaint(java.awt.Paint)" -> "org.jfree.chart.event$MarkerChangeEvent#MarkerChangeEvent(org.jfree.chart.plot.Marker)";
  "org.jfree.chart.plot$Marker#setPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int)" -> "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int,org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setUseOutlinePaint(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#setLegendBar(java.awt.Shape)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$Marker#Marker(java.awt.Paint)" -> "org.jfree.chart.plot$Marker#Marker(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)";
  "org.jfree.chart.plot$PolarPlot#setAngleGridlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairVisible(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.time$TimeSeriesCollection#setSelected(int,int,boolean)" -> "org.jfree.data.time$TimeSeriesCollection#setSelected(int,int,boolean,boolean)";
  "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)" -> "org.jfree.data.time$Month#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)" -> "org.jfree.data.time$TimeSeries#findBoundsByIteration()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)" -> "org.jfree.data.time$Year#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)" -> "org.jfree.data.time$Day#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#getPlotType()" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart.plot$CombinedRangeXYPlot#getPlotType()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#getResourceAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#getResourceAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)";
  "org.jfree.data.xy$XYSeriesCollection#getDomainUpperBound(boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()";
  "org.jfree.data.xy$XYSeriesCollection#getDomainUpperBound(boolean)" -> "org.jfree.data.xy$IntervalXYDelegate#getDomainUpperBound(boolean)";
  "org.jfree.data.xy$XYSeriesCollection#getDomainUpperBound(boolean)" -> "org.jfree.data.xy$XYSeries#getMaxX()";
  "org.jfree.data.xy$XYSeriesCollection#getDomainUpperBound(boolean)" -> "org.jfree.data.xy$XYSeriesCollection#getSeries(int)";
  "org.jfree.chart.axis$DateTickUnit#DateTickUnit(org.jfree.chart.axis.DateTickUnitType,int)" -> "org.jfree.chart.axis$DateTickUnit#DateTickUnit(org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)";
  "org.jfree.chart.entity$PieSectionEntity#PieSectionEntity(java.awt.Shape,org.jfree.data.general.PieDataset,int,int,java.lang.Comparable,java.lang.String,java.lang.String)" -> "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String,java.lang.String)";
  "org.jfree.chart.renderer$AbstractRenderer#getSeriesItemLabelsVisible(int)" -> "org.jfree.chart.util$BooleanList#getBoolean(int)";
  "org.jfree.data.xy$XYSeries#update(java.lang.Number,java.lang.Number)" -> "org.jfree.data.xy$XYSeries#updateByIndex(int,java.lang.Number)";
  "org.jfree.data.xy$XYSeries#update(java.lang.Number,java.lang.Number)" -> "org.jfree.data.general$SeriesException#SeriesException(java.lang.String)";
  "org.jfree.data.xy$XYSeries#update(java.lang.Number,java.lang.Number)" -> "org.jfree.data.xy$XYSeries#indexOf(java.lang.Number)";
  "org.jfree.chart.axis$DateAxis#setTimeline(org.jfree.chart.axis.Timeline)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$DateAxis#setTimeline(org.jfree.chart.axis.Timeline)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.text$TextLine#TextLine(java.lang.String,java.awt.Font,java.awt.Paint)" -> "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font,java.awt.Paint)";
  "org.jfree.chart.text$TextLine#TextLine(java.lang.String,java.awt.Font,java.awt.Paint)" -> "org.jfree.chart.text$TextFragment#<clinit>()";
  "org.jfree.chart.title$LegendGraphic#arrangeNN(java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.plot$XYPlot#clearDomainMarkers(int)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#clearDomainMarkers(int)" -> "org.jfree.chart.plot$Marker#removeChangeListener(org.jfree.chart.event.MarkerChangeListener)";
  "org.jfree.chart.plot$Marker#setStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.plot$Marker#setStroke(java.awt.Stroke)" -> "org.jfree.chart.event$MarkerChangeEvent#MarkerChangeEvent(org.jfree.chart.plot.Marker)";
  "org.jfree.chart.plot$XYPlot#clearDomainMarkers()" -> "org.jfree.chart.plot$XYPlot#clearDomainMarkers(int)";
  "org.jfree.chart.plot$XYPlot#clearDomainMarkers()" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer.category$BarRenderer#setPositiveItemLabelPositionFallback(org.jfree.chart.labels.ItemLabelPosition)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.block$FlowArrangement#FlowArrangement()" -> "org.jfree.chart.util$VerticalAlignment#<clinit>()";
  "org.jfree.chart.block$FlowArrangement#FlowArrangement()" -> "org.jfree.chart.block$FlowArrangement#FlowArrangement(org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,double,double)";
  "org.jfree.chart.block$FlowArrangement#FlowArrangement()" -> "org.jfree.chart.util$HorizontalAlignment#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelWidthRatio(float)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelWidthRatio(float)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.ui$ProjectInfo#ProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.awt.Image,java.lang.String,java.lang.String,java.lang.String)" -> "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)";
  "org.jfree.chart.plot$PolarPlot#clearCornerTextItems()" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer.category$BarRenderer#setBase(double)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.text$TextLine#calculateBaselineOffset(java.awt.Graphics2D,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextFragment#calculateBaselineOffset(java.awt.Graphics2D,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.plot$Plot#setNoDataMessagePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo()" -> "org.jfree.chart.ui$Library#Library()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setLegendItemURLGenerator(org.jfree.chart.labels.XYSeriesLabelGenerator)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$Plot#getRootPlot()" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairColumnKey(java.lang.Comparable)" -> "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairColumnKey(java.lang.Comparable,boolean)";
  "org.jfree.chart.util$RectangleEdge#opposite(org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.title$LegendTitle#setSources(org.jfree.chart.LegendItemSource[])" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$LegendTitle#setSources(org.jfree.chart.LegendItemSource[])" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.data.general$DatasetUtilities#calculateStackTotal(org.jfree.data.xy.TableXYDataset,int)" -> "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)";
  "org.jfree.data.time$Month#Month(java.util.Date,java.util.TimeZone)" -> "org.jfree.data.time$Month#Month(java.util.Date,java.util.TimeZone,java.util.Locale)";
  "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)";
  "org.jfree.chart.axis$Axis#setLabelURL(java.lang.String)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$CategoryPlot#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$XYPlot#indexOf(org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#indexOf(org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.axis$ValueAxis#setRangeAboutValue(double,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$ValueAxis#setRangeAboutValue(double,double)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#setRangeAboutValue(double,double)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.plot$PiePlot#setBaseSectionOutlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.title$PaintScaleLegend#setScale(org.jfree.chart.renderer.PaintScale)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$PaintScaleLegend#setScale(org.jfree.chart.renderer.PaintScale)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.plot$DatasetRenderingOrder#readResolve()" -> "org.jfree.chart.plot$DatasetRenderingOrder#<clinit>()";
  "org.jfree.chart.plot$DatasetRenderingOrder#readResolve()" -> "org.jfree.chart.plot$DatasetRenderingOrder#equals(java.lang.Object)";
  "org.jfree.chart.entity$ChartEntity#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$PiePlot#getSectionPaint(java.lang.Comparable)" -> "org.jfree.chart.util$PaintMap#getPaint(java.lang.Comparable)";
  "org.jfree.chart.util$RectangleAnchor#createRectangle(org.jfree.chart.util.Size2D,double,double,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.util$RectangleAnchor#createRectangle(org.jfree.chart.util.Size2D,double,double,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.util$RectangleAnchor#createRectangle(org.jfree.chart.util.Size2D,double,double,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.data.general$DatasetUtilities#iterateXYRangeBounds(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset)";
  "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)";
  "org.jfree.chart.entity$JFreeChartEntity#toString()" -> "org.jfree.chart.entity$ChartEntity#getToolTipText()";
  "org.jfree.chart.block$RectangleConstraint#toRangeHeight(org.jfree.data.Range)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.block$RectangleConstraint#toRangeHeight(org.jfree.data.Range)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#toRangeHeight(org.jfree.data.Range)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.block$RectangleConstraint#toRangeHeight(org.jfree.data.Range)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setLegendItemToolTipGenerator(org.jfree.chart.labels.CategorySeriesLabelGenerator)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.block$RectangleConstraint#toRangeWidth(org.jfree.data.Range)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.block$RectangleConstraint#toRangeWidth(org.jfree.data.Range)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#toRangeWidth(org.jfree.data.Range)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#toRangeWidth(org.jfree.data.Range)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.data.time$SerialDate#createInstance(int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#createInstance(int)" -> "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int)";
  "org.jfree.chart.plot$XYPlot#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePoint2D(java.awt.geom.Point2D,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$XYPlot#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$XYPlot#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$Marker#setLabelOffset(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.plot$Marker#setLabelOffset(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.event$MarkerChangeEvent#MarkerChangeEvent(org.jfree.chart.plot.Marker)";
  "org.jfree.chart.plot$XYPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesCreateEntities(int,java.lang.Boolean,boolean)" -> "org.jfree.chart.util$BooleanList#setBoolean(int,java.lang.Boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesCreateEntities(int,java.lang.Boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartColor#<clinit>()";
  "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,double)" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,java.lang.Number)";
  "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone,java.util.Locale)" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone,java.util.Locale)" -> "org.jfree.data.time$Year#peg(java.util.Calendar)";
  "org.jfree.chart.plot$PolarPlot#setRadiusGridlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesFillPaint(int,java.awt.Paint)" -> "org.jfree.chart.renderer$AbstractRenderer#setSeriesFillPaint(int,java.awt.Paint,boolean)";
  "org.jfree.chart.plot$XYPlot#setRangeMinorGridlinesVisible(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer.category$BarRenderer3D#BarRenderer3D()" -> "org.jfree.chart.renderer.category$BarRenderer3D#BarRenderer3D(double,double)";
  "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset)" -> "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)";
  "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String)" -> "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font,java.awt.Paint,org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String)" -> "org.jfree.chart.title$TextTitle#<clinit>()";
  "org.jfree.chart.title$LegendTitle#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$LegendTitle#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.plot$PolarPlot#setAngleGridlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$Marker#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$Marker#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#XYStepAreaRenderer()" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#XYStepAreaRenderer(int)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#XYStepAreaRenderer(int)" -> "org.jfree.chart.renderer.xy$XYStepAreaRenderer#XYStepAreaRenderer(int,org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#XYStepAreaRenderer(int,org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#AbstractXYItemRenderer()";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#XYStepAreaRenderer(int,org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.XYURLGenerator)";
  "org.jfree.chart.renderer.xy$XYStepAreaRenderer#XYStepAreaRenderer(int,org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator)";
  "org.jfree.chart.renderer.category$BarRenderer3D#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$PiePlot#getSectionOutlineStroke(java.lang.Comparable)" -> "org.jfree.chart.util$StrokeMap#getStroke(java.lang.Comparable)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesPaint(int,java.awt.Paint)" -> "org.jfree.chart.renderer$AbstractRenderer#setSeriesPaint(int,java.awt.Paint,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesPaint(int,java.awt.Paint,boolean)" -> "org.jfree.chart.util$PaintList#setPaint(int,java.awt.Paint)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesPaint(int,java.awt.Paint,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.data.time$DateRange#toString()" -> "org.jfree.data.time$DateRange#getLowerDate()";
  "org.jfree.data.time$DateRange#toString()" -> "org.jfree.data.time$DateRange#getUpperDate()";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition)" -> "org.jfree.chart.renderer$AbstractRenderer#setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)";
  "org.jfree.chart.text$TextUtilities#getUseFontMetricsGetStringBounds()" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.plot$XYPlot#setDomainCrosshairVisible(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.axis$CategoryAxis#equalPaintMaps(java.util.Map,java.util.Map)" -> "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)";
  "org.jfree.chart.plot$PiePlot#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$PiePlot#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$PiePlot#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.renderer$AbstractRenderer#getItemLabelFont(int,int,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#getSeriesItemLabelFont(int)";
  "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.general.PieDataset,java.lang.Comparable,double)" -> "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.general.PieDataset,java.lang.Comparable,double,int)";
  "org.jfree.chart.plot$XYPlot#setDatasetRenderingOrder(org.jfree.chart.plot.DatasetRenderingOrder)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.entity$TitleEntity#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)";
  "org.jfree.chart.entity$TitleEntity#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.entity$ChartEntity#setArea(java.awt.Shape)";
  "org.jfree.chart.event$ChartChangeEventType#readResolve()" -> "org.jfree.chart.event$ChartChangeEventType#equals(java.lang.Object)";
  "org.jfree.chart.event$ChartChangeEventType#readResolve()" -> "org.jfree.chart.event$ChartChangeEventType#<clinit>()";
  "org.jfree.chart.axis$Axis#setTickMarkInsideLength(float)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#setDrawSharedDomainAxis(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)";
  "org.jfree.chart.axis$DateAxis#setMinimumDate(java.util.Date)" -> "org.jfree.chart.axis$DateAxis#getMinimumDate()";
  "org.jfree.chart.axis$DateAxis#setMinimumDate(java.util.Date)" -> "org.jfree.data.time$DateRange#DateRange(java.util.Date,java.util.Date)";
  "org.jfree.chart.axis$DateAxis#setMinimumDate(java.util.Date)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$DateAxis#setMinimumDate(java.util.Date)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$DateAxis#setMinimumDate(java.util.Date)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$DateAxis#setMinimumDate(java.util.Date)" -> "org.jfree.chart.axis$DateAxis#getMaximumDate()";
  "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#deriveRotationAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)";
  "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisibleInLegend(int,java.lang.Boolean,boolean)" -> "org.jfree.chart.util$BooleanList#setBoolean(int,java.lang.Boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisibleInLegend(int,java.lang.Boolean,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font)" -> "org.jfree.chart.text$TextFragment#<clinit>()";
  "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font)" -> "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font,java.awt.Paint)";
  "org.jfree.chart.util$ObjectUtilities#isJDK14()" -> "org.jfree.chart.util$ObjectUtilities#parseVersions(java.lang.String)";
  "org.jfree.chart.util$ObjectUtilities#isJDK14()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#isJDK14()" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.chart.plot$XYPlot#setRangeMinorGridlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.axis$Axis#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)";
  "org.jfree.chart.axis$Axis#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$XYPlot#setDomainAxes(org.jfree.chart.axis.ValueAxis[])" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#setDomainAxes(org.jfree.chart.axis.ValueAxis[])" -> "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)";
  "org.jfree.data.xy$XYSeries#addOrUpdate(double,double)" -> "org.jfree.data.xy$XYSeries#addOrUpdate(java.lang.Number,java.lang.Number)";
  "org.jfree.data.general$Series#setNotify(boolean)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.chart.plot$CrosshairState#updateCrosshairY(double)" -> "org.jfree.chart.plot$CrosshairState#updateCrosshairY(double,int)";
  "org.jfree.data.time$SpreadsheetDate#compareTo(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)";
  "org.jfree.chart.text$TextFragment#calculateBaselineOffset(java.awt.Graphics2D,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.data.time$TimeSeries#getValue(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)";
  "org.jfree.data.time$TimeSeries#getValue(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#getValue(int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#isInternalAnchor(org.jfree.chart.labels.ItemLabelAnchor)" -> "org.jfree.chart.labels$ItemLabelAnchor#<clinit>()";
  "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation)" -> "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.plot$XYPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.util$AbstractObjectList#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.util$AbstractObjectList#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)";
  "org.jfree.chart.plot$PiePlot#setLabelLinkStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$Plot#getRectY(double,double,double,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#setTickLabelFont(java.lang.Comparable,java.awt.Font)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$CategoryAxis#setTickLabelFont(java.lang.Comparable,java.awt.Font)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.title$TextTitle#TextTitle()" -> "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String)";
  "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset)" -> "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)";
  "org.jfree.data.time$TimeSeriesCollection#getDomainUpperBound(boolean)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.data.time$TimeSeriesCollection#getDomainUpperBound(boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(boolean)";
  "org.jfree.chart.axis$CategoryAxis#getCategorySeriesMiddle(int,int,int,int,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#getCategorySeriesMiddle(int,int,int,int,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.data.xy$XYSeries#setMaximumItemCount(int)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.xy$XYSeries#setMaximumItemCount(int)" -> "org.jfree.data.xy$XYSeries#findBoundsByIteration()";
  "org.jfree.chart.renderer$AbstractRenderer#setItemLabelAnchorOffset(double)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$Marker#setLabelPaint(java.awt.Paint)" -> "org.jfree.chart.event$MarkerChangeEvent#MarkerChangeEvent(org.jfree.chart.plot.Marker)";
  "org.jfree.chart.plot$Marker#setLabelPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)";
  "org.jfree.chart.text$TextAnchor#readResolve()" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.text$TextAnchor#readResolve()" -> "org.jfree.chart.text$TextAnchor#equals(java.lang.Object)";
  "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone)" -> "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone,java.util.Locale)";
  "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double)" -> "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double,boolean)";
  "org.jfree.chart.title$PaintScaleLegend#setAxisLocation(org.jfree.chart.axis.AxisLocation)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$PaintScaleLegend#setAxisLocation(org.jfree.chart.axis.AxisLocation)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String)" -> "org.jfree.chart.text$TextFragment#<clinit>()";
  "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String)" -> "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font,java.awt.Paint)";
  "org.jfree.chart.plot$XYPlot#setRangeGridlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.entity$XYItemEntity#XYItemEntity(java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,java.lang.String,java.lang.String)" -> "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String,java.lang.String)";
  "org.jfree.chart.plot$CategoryPlot#setDatasetRenderingOrder(org.jfree.chart.plot.DatasetRenderingOrder)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.general$DefaultPieDataset#insertValue(int,java.lang.Comparable,double)" -> "org.jfree.data.general$DefaultPieDataset#insertValue(int,java.lang.Comparable,java.lang.Number)";
  "org.jfree.chart.plot$CombinedDomainXYPlot#setGap(double)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesLinesVisible(int,boolean)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesLinesVisible(int,java.lang.Boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisible(int,java.lang.Boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisible(int,java.lang.Boolean,boolean)";
  "org.jfree.chart.text$TextBlock#addLine(java.lang.String,java.awt.Font,java.awt.Paint)" -> "org.jfree.chart.text$TextBlock#addLine(org.jfree.chart.text.TextLine)";
  "org.jfree.chart.text$TextBlock#addLine(java.lang.String,java.awt.Font,java.awt.Paint)" -> "org.jfree.chart.text$TextLine#TextLine(java.lang.String,java.awt.Font,java.awt.Paint)";
  "org.jfree.chart.plot$ValueMarker#ValueMarker(double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.plot$ValueMarker#ValueMarker(double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)";
  "org.jfree.chart.plot$CategoryPlot#getDatasetCount()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation)" -> "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)" -> "org.jfree.data.general$AbstractSeriesDataset#seriesChanged(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.category.CategoryDataset)" -> "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundImageAlpha(float)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer$State#XYLineAndShapeRenderer$State(org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.xy$XYItemRendererState#XYItemRendererState(org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.util$PaintList#PaintList()" -> "org.jfree.chart.util$AbstractObjectList#AbstractObjectList()";
  "org.jfree.chart.axis$SymbolAxis#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.renderer$AbstractRenderer#clearSeriesStrokes(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.renderer$AbstractRenderer#clearSeriesStrokes(boolean)" -> "org.jfree.chart.util$AbstractObjectList#clear()";
  "org.jfree.chart.renderer$AbstractRenderer#getItemFillPaint(int,int,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesFillPaint(int)";
  "org.jfree.chart.entity$JFreeChartEntity#JFreeChartEntity(java.awt.Shape,org.jfree.chart.JFreeChart)" -> "org.jfree.chart.entity$JFreeChartEntity#JFreeChartEntity(java.awt.Shape,org.jfree.chart.JFreeChart,java.lang.String)";
  "org.jfree.chart.plot$CategoryPlot#getIndexOf(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)";
  "org.jfree.chart$StandardChartTheme#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.axis$ValueAxis#setNegativeArrowVisible(boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$ValueAxis#setNegativeArrowVisible(boolean)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.title$TextTitle#setToolTipText(java.lang.String)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$TextTitle#setToolTipText(java.lang.String)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.plot$CategoryPlot#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation)" -> "org.jfree.chart.plot$CategoryPlot#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation,boolean)";
  "org.jfree.chart.plot$CategoryPlot#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart$JFreeChart#setBackgroundImageAlignment(int)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart.axis$AxisState#AxisState()" -> "org.jfree.chart.axis$AxisState#AxisState(double)";
  "org.jfree.chart.block$LineBorder#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)";
  "org.jfree.chart.block$LineBorder#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#setNumberFormatOverride(java.text.NumberFormat)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$NumberAxis#setNumberFormatOverride(java.text.NumberFormat)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.data.time$Month#Month(java.util.Date)" -> "org.jfree.data.time$Month#Month(java.util.Date,java.util.TimeZone)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getToolTipGenerator(int,int,boolean)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#getDomainAxisCount()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$Plot#setNoDataMessageFont(java.awt.Font)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelPaint(java.awt.Paint)" -> "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelPaint(java.awt.Paint,boolean)";
  "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#isValidWeekdayCode(int)";
  "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfWeek()";
  "org.jfree.chart.plot$PolarPlot#getMaxRadius()" -> "org.jfree.chart.axis$ValueAxis#getUpperBound()";
  "org.jfree.chart.axis$ValueAxis#setUpArrow(java.awt.Shape)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$ValueAxis#setUpArrow(java.awt.Shape)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$CategoryPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)";
  "org.jfree.chart.plot$CategoryPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairRowKey(java.lang.Comparable)" -> "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairRowKey(java.lang.Comparable,boolean)";
  "org.jfree.chart.plot$XYPlot#setQuadrantPaint(int,java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.data.general$DefaultPieDataset#setValue(java.lang.Comparable,double)" -> "org.jfree.data.general$DefaultPieDataset#setValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.chart.plot$PlotRenderingInfo#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)";
  "org.jfree.chart.entity$TitleEntity#toString()" -> "org.jfree.chart.entity$ChartEntity#getToolTipText()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#updateCrosshairValues(org.jfree.chart.plot.CategoryCrosshairState,java.lang.Comparable,java.lang.Comparable,double,int,double,double,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$CategoryPlot#isRangeCrosshairLockedOnData()";
  "org.jfree.data.time$TimeSeriesCollection#TimeSeriesCollection()" -> "org.jfree.data.time$TimeSeriesCollection#TimeSeriesCollection(org.jfree.data.time.TimeSeries,java.util.TimeZone)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#setUseFillPaint(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#setNegativeItemLabelPositionFallback(org.jfree.chart.labels.ItemLabelPosition)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.axis$DateTickUnit#rollDate(java.util.Date)" -> "org.jfree.chart.axis$DateTickUnit#rollDate(java.util.Date,java.util.TimeZone)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setBaseLinesVisible(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.axis$ValueAxis#setDownArrow(java.awt.Shape)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$ValueAxis#setDownArrow(java.awt.Shape)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$PeriodAxis#setMinorTickMarkOutsideLength(float)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$PeriodAxis#setMinorTickMarkOutsideLength(float)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.data.time$TimeSeriesCollection#removeSeries(int)" -> "org.jfree.data.time$TimeSeriesCollection#getSeries(int)";
  "org.jfree.data.time$TimeSeriesCollection#removeSeries(int)" -> "org.jfree.data.time$TimeSeriesCollection#removeSeries(org.jfree.data.time.TimeSeries)";
  "org.jfree.chart.plot$XYPlot#setDomainZeroBaselineVisible(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.axis$DateAxis#setTickMarkPosition(org.jfree.chart.axis.DateTickMarkPosition)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$DateAxis#setTickMarkPosition(org.jfree.chart.axis.DateTickMarkPosition)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.title$Title#setVerticalAlignment(org.jfree.chart.util.VerticalAlignment)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$Title#setVerticalAlignment(org.jfree.chart.util.VerticalAlignment)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int)" -> "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int,org.jfree.data.time.SerialDate)";
  "org.jfree.chart.title$TextTitle#setExpandToFitSpace(boolean)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$TextTitle#setExpandToFitSpace(boolean)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.plot$XYPlot#setRangeZeroBaselineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelPaint(java.awt.Paint,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.axis$CategoryAxis#getTickLabelPaint(java.lang.Comparable)" -> "org.jfree.chart.axis$Axis#getTickLabelPaint()";
  "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$Marker#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$Marker#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.data.time$Day#getYear()" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.chart.plot$XYPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])" -> "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)";
  "org.jfree.chart.plot$XYPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxes(org.jfree.chart.axis.CategoryAxis[])" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxes(org.jfree.chart.axis.CategoryAxis[])" -> "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)";
  "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,java.lang.Number)";
  "org.jfree.chart.renderer$AbstractRenderer#getSeriesPaint(int)" -> "org.jfree.chart.util$PaintList#getPaint(int)";
  "org.jfree.chart.entity$PlotEntity#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.entity$ChartEntity#setArea(java.awt.Shape)";
  "org.jfree.chart.entity$PlotEntity#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineException(java.util.Date)" -> "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineException(long)";
  "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineException(java.util.Date)" -> "org.jfree.chart.axis$SegmentedTimeline#getTime(java.util.Date)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesCreateEntities(int,java.lang.Boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#setSeriesCreateEntities(int,java.lang.Boolean,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesShape(int,java.awt.Shape)" -> "org.jfree.chart.renderer$AbstractRenderer#setSeriesShape(int,java.awt.Shape,boolean)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesURLGenerator(int,org.jfree.chart.urls.XYURLGenerator)" -> "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesURLGenerator(int,org.jfree.chart.urls.XYURLGenerator,boolean)";
  "org.jfree.data.time$SpreadsheetDate#isAfter(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$PiePlot#getPlotType()" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart.plot$PiePlot#getPlotType()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setBaseShapesVisible(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairVisible(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.axis$PeriodAxis#setMinorTickMarkPaint(java.awt.Paint)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$PeriodAxis#setMinorTickMarkPaint(java.awt.Paint)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.block$LabelBlock#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.block$LabelBlock#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart.axis$AxisSpace#reserved(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$PiePlot#setAutoPopulateSectionPaint(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelsVisible(int,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelsVisible(int,java.lang.Boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisibleInLegend(int,java.lang.Boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisibleInLegend(int,java.lang.Boolean,boolean)";
  "org.jfree.chart.axis$Axis#setTickMarkOutsideLength(float)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.chart.util$RectangleAnchor#readResolve()" -> "org.jfree.chart.util$RectangleAnchor#equals(java.lang.Object)";
  "org.jfree.chart.util$RectangleAnchor#readResolve()" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.data.xy$XYDataItem#XYDataItem(double,double)" -> "org.jfree.data.xy$XYDataItem#XYDataItem(java.lang.Number,java.lang.Number)";
  "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double)" -> "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double,boolean)";
  "org.jfree.data.xy$XYSeriesCollection#setAutoWidth(boolean)" -> "org.jfree.data.general$AbstractDataset#fireDatasetChanged()";
  "org.jfree.data.xy$XYSeriesCollection#setAutoWidth(boolean)" -> "org.jfree.data.xy$IntervalXYDelegate#setAutoWidth(boolean)";
  "org.jfree.chart.axis$TickType#readResolve()" -> "org.jfree.chart.axis$TickType#<clinit>()";
  "org.jfree.chart.axis$TickType#readResolve()" -> "org.jfree.chart.axis$TickType#equals(java.lang.Object)";
  "org.jfree.chart.block$CenterArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$CenterArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)";
  "org.jfree.data.time$Year#Year(java.util.Date)" -> "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone)";
  "org.jfree.chart.renderer.category$BarRenderer#setShadowXOffset(double)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.ui$BasicProjectInfo#setLicenceName(java.lang.String)" -> "org.jfree.chart.ui$Library#setLicenceName(java.lang.String)";
  "org.jfree.chart.plot$PiePlot#setIgnoreZeroValues(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$IntervalMarker#setGradientPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.plot$IntervalMarker#setGradientPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)" -> "org.jfree.chart.event$MarkerChangeEvent#MarkerChangeEvent(org.jfree.chart.plot.Marker)";
  "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$MultiplePiePlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$MultiplePiePlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)";
  "org.jfree.data.time$SerialDate#weekdayCodeToString(int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#getDate()" -> "org.jfree.chart.axis$SegmentedTimeline#getDate(long)";
  "org.jfree.chart.plot$PiePlot#setSectionOutlinePaint(java.lang.Comparable,java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$PiePlot#setSectionOutlinePaint(java.lang.Comparable,java.awt.Paint)" -> "org.jfree.chart.util$PaintMap#put(java.lang.Comparable,java.awt.Paint)";
  "org.jfree.chart.title$PaintScaleLegend#setStripWidth(double)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$PaintScaleLegend#setStripWidth(double)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setDomainMinorGridlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator(java.lang.String,java.text.DateFormat,java.text.NumberFormat)" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)";
  "org.jfree.chart.axis$ValueAxis#setPositiveArrowVisible(boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$ValueAxis#setPositiveArrowVisible(boolean)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$Axis#setLabelAngle(double)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.chart.plot$PiePlot#setExplodePercent(java.lang.Comparable,double)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.axis$Axis#setAxisLineVisible(boolean)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.chart.renderer$AbstractRenderer#getSeriesVisibleInLegend(int)" -> "org.jfree.chart.util$BooleanList#getBoolean(int)";
  "org.jfree.chart.renderer.category$BarRenderer#setMaximumBarWidth(double)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.block$BorderArrangement#add(org.jfree.chart.block.Block,java.lang.Object)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#intersect(long,long)" -> "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#SegmentedTimeline$SegmentRange(org.jfree.chart.axis.SegmentedTimeline,long,long)";
  "org.jfree.chart.axis$CategoryAxis#addCategoryLabelToolTip(java.lang.Comparable,java.lang.String)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$CategoryAxis#addCategoryLabelToolTip(java.lang.Comparable,java.lang.String)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$XYPlot#setRangeMinorGridlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$PiePlot#setShadowYOffset(double)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.util$ObjectUtilities#getClassLoader()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.title$LegendGraphic#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.title$LegendGraphic#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#setDomainGridlinesVisible(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$Plot#setBackgroundImageAlignment(int)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$PiePlot#setSimpleLabels(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable)" -> "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable,java.lang.String,java.lang.String)";
  "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable,java.lang.String,java.lang.String)" -> "org.jfree.data.general$Series#Series(java.lang.Comparable)";
  "org.jfree.chart.plot$IntervalMarker#setEndValue(double)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.plot$IntervalMarker#setEndValue(double)" -> "org.jfree.chart.event$MarkerChangeEvent#MarkerChangeEvent(org.jfree.chart.plot.Marker)";
  "org.jfree.data.xy$XYSeries#add(double,java.lang.Number,boolean)" -> "org.jfree.data.xy$XYSeries#add(java.lang.Number,java.lang.Number,boolean)";
  "org.jfree.chart.util$Layer#readResolve()" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.util$Layer#readResolve()" -> "org.jfree.chart.util$Layer#equals(java.lang.Object)";
  "org.jfree.chart.renderer$AbstractRenderer#getLegendTextFont(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.renderer.xy$XYBarRenderer#setBarAlignmentFactor(double)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.title$TextTitle#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone)" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone,java.util.Locale)";
  "org.jfree.chart.plot$XYPlot#mapDatasetToDomainAxis(int,int)" -> "org.jfree.chart.plot$XYPlot#mapDatasetToDomainAxes(int,java.util.List)";
  "org.jfree.chart.plot$Plot#setNoDataMessage(java.lang.String)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#clearRangeMarkers(int)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#clearRangeMarkers(int)" -> "org.jfree.chart.plot$Marker#removeChangeListener(org.jfree.chart.event.MarkerChangeListener)";
  "org.jfree.chart.plot$MultiplePiePlot#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$MultiplePiePlot#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$PiePlot3D#setDepthFactor(double)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart$StandardChartTheme#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.data.time$TimeSeries#getRawDataItem(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)";
  "org.jfree.chart.plot$XYPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$XYPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)";
  "org.jfree.chart.axis$SegmentedTimeline#addExceptions(java.util.List)" -> "org.jfree.chart.axis$SegmentedTimeline#addException(java.util.Date)";
  "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.util$Layer#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$MultiplePiePlot#setAggregatedItemsPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.time$TimeSeries#setRangeDescription(java.lang.String)" -> "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$Plot#setOutlineVisible(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart$JFreeChart#addProgressListener(org.jfree.chart.event.ChartProgressListener)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart.util$PaintList#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.util$PaintList#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$PaintList#setPaint(int,java.awt.Paint)";
  "org.jfree.chart.plot$CategoryPlot#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation)" -> "org.jfree.chart.plot$CategoryPlot#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation,boolean)";
  "org.jfree.chart.plot$CategoryPlot#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$PiePlot#setSimpleLabelOffset(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$Marker#setLabelAnchor(org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.plot$Marker#setLabelAnchor(org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.event$MarkerChangeEvent#MarkerChangeEvent(org.jfree.chart.plot.Marker)";
  "org.jfree.chart$JFreeChart#addLegend(org.jfree.chart.title.LegendTitle)" -> "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$PaintScaleLegend#setStripOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$PaintScaleLegend#setStripOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.plot$XYPlot#setDomainZeroBaselineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.time$SpreadsheetDate#isOnOrBefore(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.chart.util$GradientPaintTransformType#readResolve()" -> "org.jfree.chart.util$GradientPaintTransformType#equals(java.lang.Object)";
  "org.jfree.chart.util$GradientPaintTransformType#readResolve()" -> "org.jfree.chart.util$GradientPaintTransformType#<clinit>()";
  "org.jfree.chart.plot$PiePlot#setSectionOutlinesVisible(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$Plot#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$Plot#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator(java.lang.String,java.text.DateFormat,java.text.NumberFormat)" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator(java.lang.String,java.text.DateFormat,java.text.NumberFormat)";
  "org.jfree.chart.plot$PiePlot#setBaseSectionOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$PolarPlot#getOrientation()" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#setRangeTickBandPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.axis$DateAxis#dateToJava2D(java.util.Date,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$Plot#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.block$BlockBorder#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.data.time$TimeSeries#clear()" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.chart.axis$Axis#setLabel(java.lang.String)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#setWeight(int)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.xy$XYSeriesCollection#getIntervalWidth()" -> "org.jfree.data.xy$IntervalXYDelegate#getIntervalWidth()";
  "org.jfree.chart.plot$XYPlot#XYPlot()" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data.xy$AbstractXYDataset#AbstractXYDataset()" -> "org.jfree.data.general$AbstractSeriesDataset#AbstractSeriesDataset()";
  "org.jfree.chart.plot$PolarPlot#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.plot$PolarPlot#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)";
  "org.jfree.data.xy$XYSeriesCollection#isAutoWidth()" -> "org.jfree.data.xy$IntervalXYDelegate#isAutoWidth()";
  "org.jfree.chart.plot$CrosshairState#updateCrosshairPoint(double,double,double,double,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$CrosshairState#updateCrosshairPoint(double,double,int,int,double,double,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$PiePlot#setDirection(org.jfree.chart.util.Rotation)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit)" -> "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.XYURLGenerator,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#setDomainGridlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.block$AbstractBlock#setMargin(double,double,double,double)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.block$AbstractBlock#setMargin(double,double,double,double)" -> "org.jfree.chart.block$AbstractBlock#setMargin(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart.block$AbstractBlock#setMargin(double,double,double,double)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.data.general$DatasetUtilities#findCumulativeRangeBounds(org.jfree.data.category.CategoryDataset)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data.xy$XYDataItem#setY(double)" -> "org.jfree.data.xy$XYDataItem#setY(java.lang.Number)";
  "org.jfree.chart.renderer.xy$XYAreaRenderer#setOutline(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.data$DomainOrder#readResolve()" -> "org.jfree.data$DomainOrder#equals(java.lang.Object)";
  "org.jfree.data$DomainOrder#readResolve()" -> "org.jfree.data$DomainOrder#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#setRadiusGridlinesVisible(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers(int)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers(int)" -> "org.jfree.chart.plot$Marker#removeChangeListener(org.jfree.chart.event.MarkerChangeListener)";
  "org.jfree.chart.renderer.category$BarRenderer#setIncludeBaseInRange(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.block$RectangleConstraint#toString()" -> "org.jfree.chart.block$LengthConstraintType#toString()";
  "org.jfree.chart.plot$XYPlot#getRangeMarkers(org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,org.jfree.chart.plot.Plot)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,org.jfree.chart.plot.Plot)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator()" -> "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)";
  "org.jfree.data.time$SpreadsheetDate#isOnOrAfter(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.chart.entity$ChartEntity#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$CategoryPlot#getCategories()" -> "org.jfree.chart.plot$CategoryPlot#getDataset()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#setDefaultShadowsVisible(boolean)" -> "org.jfree.chart.renderer.xy$XYBarRenderer#<clinit>()";
  "org.jfree.chart.renderer.xy$XYBarRenderer#setDefaultShadowsVisible(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#<clinit>()";
  "org.jfree.chart.util$HorizontalAlignment#readResolve()" -> "org.jfree.chart.util$HorizontalAlignment#equals(java.lang.Object)";
  "org.jfree.chart.util$HorizontalAlignment#readResolve()" -> "org.jfree.chart.util$HorizontalAlignment#<clinit>()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setLegendItemLabelGenerator(org.jfree.chart.labels.CategorySeriesLabelGenerator)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)" -> "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object,org.jfree.data.general.SeriesChangeInfo)";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.axis$DateAxis#DateAxis()" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)";
  "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)" -> "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(java.util.List,boolean)";
  "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)" -> "org.jfree.data.general$DatasetUtilities#iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisCount()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelPaint(int,java.awt.Paint)" -> "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelPaint(int,java.awt.Paint,boolean)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot()" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer$State#XYLineAndShapeRenderer$State(org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$Axis#setTickMarkStroke(java.awt.Stroke)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartProgressEvent)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#setAngleGridlinesVisible(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesItemLabelGenerator(int,org.jfree.chart.labels.XYItemLabelGenerator,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesItemLabelGenerator(int,org.jfree.chart.labels.XYItemLabelGenerator,boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$CombinedDomainXYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$CombinedDomainXYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)";
  "org.jfree.chart.plot$CategoryPlot#setRangeZeroBaselinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$PiePlot#setLabelShadowPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.time$Day#getMonth()" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.chart.ui$ProjectInfo#ProjectInfo()" -> "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo()";
  "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.data.time$Year#Year()" -> "org.jfree.data.time$Year#Year(java.util.Date)";
  "org.jfree.chart.plot$XYPlot#setDomainGridlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.xy$DefaultXYDataset#DefaultXYDataset()" -> "org.jfree.data.xy$AbstractXYDataset#AbstractXYDataset()";
  "org.jfree.chart.text$TextUtilities#setUseFontMetricsGetStringBounds(boolean)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setLegendItemLabelGenerator(org.jfree.chart.labels.XYSeriesLabelGenerator)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.data.xy$XYSeriesCollection#getIntervalPositionFactor()" -> "org.jfree.data.xy$IntervalXYDelegate#getIntervalPositionFactor()";
  "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.category.CategoryDataset)" -> "org.jfree.data.xy$XYSeriesCollection#getRangeUpperBound(boolean)";
  "org.jfree.chart.urls$StandardXYURLGenerator#StandardXYURLGenerator(java.lang.String)" -> "org.jfree.chart.urls$StandardXYURLGenerator#StandardXYURLGenerator(java.lang.String,java.lang.String,java.lang.String)";
  "org.jfree.chart.plot$PiePlot#setShadowXOffset(double)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer.category$BarRenderer#setNegativeItemLabelPositionFallback(org.jfree.chart.labels.ItemLabelPosition)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$Plot#setBackgroundImage(java.awt.Image)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.xy$IntervalXYDelegate#IntervalXYDelegate(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.xy$IntervalXYDelegate#IntervalXYDelegate(org.jfree.data.xy.XYDataset,boolean)";
  "org.jfree.data.xy$XYSeriesCollection#XYSeriesCollection()" -> "org.jfree.data.xy$XYSeriesCollection#XYSeriesCollection(org.jfree.data.xy.XYSeries)";
  "org.jfree.data.time$TimeSeries#setMaximumItemCount(int)" -> "org.jfree.data.time$TimeSeries#delete(int,int)";
  "org.jfree.chart.axis$Axis#setTickMarkPaint(java.awt.Paint)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$CategoryPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)";
  "org.jfree.chart.axis$LogAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit)" -> "org.jfree.chart.axis$LogAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)";
  "org.jfree.chart.plot$XYPlot#setDomainGridlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.title$TextTitle#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.ui$Licences#getInstance()" -> "org.jfree.chart.ui$Licences#Licences()";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesToolTipGenerator(int,org.jfree.chart.labels.CategoryToolTipGenerator)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesToolTipGenerator(int,org.jfree.chart.labels.CategoryToolTipGenerator,boolean)";
  "org.jfree.chart.renderer$AbstractRenderer#getSeriesVisible(int)" -> "org.jfree.chart.util$BooleanList#getBoolean(int)";
  "org.jfree.chart.plot$XYPlot#clearRangeMarkers()" -> "org.jfree.chart.plot$XYPlot#clearRangeMarkers(int)";
  "org.jfree.chart.plot$XYPlot#clearRangeMarkers()" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$PiePlot#setLabelGap(double)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$Plot#isSubplot()" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)";
  "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesURLGenerator(int,org.jfree.chart.urls.CategoryURLGenerator)" -> "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesURLGenerator(int,org.jfree.chart.urls.CategoryURLGenerator,boolean)";
  "org.jfree.chart.text$TextBlock#TextBlock()" -> "org.jfree.chart.util$HorizontalAlignment#<clinit>()";
  "org.jfree.chart$JFreeChart#setBorderPaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)";
  "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlinePaint(int,java.awt.Paint)" -> "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlinePaint(int,java.awt.Paint,boolean)";
  "org.jfree.chart.plot$PieLabelDistributor#toString()" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)";
  "org.jfree.data.time$Month#Month()" -> "org.jfree.data.time$Month#Month(java.util.Date)";
  "org.jfree.chart.axis$SymbolAxis#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.data.xy$XYSeries#add(double,java.lang.Number)" -> "org.jfree.data.xy$XYSeries#add(java.lang.Number,java.lang.Number)";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)";
  "org.jfree.data.xy$XYSeries#clear()" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.chart.plot$CategoryPlot#setRangeZeroBaselineVisible(boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$RingPlot#setSeparatorPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$PiePlot#setLabelOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.data.time$SpreadsheetDate#isOn(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.chart.block$LabelBlock#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)";
  "org.jfree.chart.block$LabelBlock#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis)";
  "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)";
  "org.jfree.chart$StandardChartTheme#createLegacyTheme()" -> "org.jfree.chart$StandardChartTheme#StandardChartTheme(java.lang.String)";
  "org.jfree.chart.renderer.category$BarRenderer#setGradientPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.axis$Axis#setMinorTickMarksVisible(boolean)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.chart.plot$PolarPlot#setRadiusGridlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$PiePlot#setBaseSectionPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$PiePlot3D#PiePlot3D()" -> "org.jfree.chart.plot$PiePlot3D#PiePlot3D(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.plot$PiePlot#setLabelOutlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation)" -> "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.axis$SegmentedTimeline$Segment#dec()" -> "org.jfree.chart.axis$SegmentedTimeline$Segment#dec(long)";
  "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositions(org.jfree.chart.axis.CategoryLabelPositions)" -> "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)";
  "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositions(org.jfree.chart.axis.CategoryLabelPositions)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)";
  "org.jfree.chart.plot$XYPlot#setRangeCrosshairStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#setDomainMinorGridlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setLegendLine(java.awt.Shape)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,double)" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate,int)";
  "org.jfree.chart.util$ObjectUtilities#getClassLoaderSource()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.renderer.category$BarRenderer#setShadowYOffset(double)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart$JFreeChart#setRenderingHints(java.awt.RenderingHints)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart$JFreeChart#setBorderStroke(java.awt.Stroke)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart.util$ObjectList#ObjectList(int)" -> "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int)";
  "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.data.time$TimeSeriesCollection#TimeSeriesCollection(java.util.TimeZone)" -> "org.jfree.data.time$TimeSeriesCollection#TimeSeriesCollection(org.jfree.data.time.TimeSeries,java.util.TimeZone)";
  "org.jfree.chart.text$TextUtilities#setUseDrawRotatedStringWorkaround(boolean)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setUseFillPaint(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$PiePlot#setLegendItemShape(java.awt.Shape)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.renderer.category$BarRenderer#setDrawBarOutline(boolean)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.plot$Plot#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier,boolean)" -> "org.jfree.chart.plot$Plot#fireChangeEvent()";
  "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation)" -> "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.data.time$Day#getDayOfMonth()" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.chart.plot$PiePlot#getSectionOutlinePaint(java.lang.Comparable)" -> "org.jfree.chart.util$PaintMap#getPaint(java.lang.Comparable)";
  "org.jfree.chart.axis$Axis#setAxisLinePaint(java.awt.Paint)" -> "org.jfree.chart.axis$Axis#fireChangeEvent()";
  "org.jfree.chart.renderer.category$BarRenderer#setItemMargin(double)" -> "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()";
  "org.jfree.chart.resources$JFreeChartResources#getContents()" -> "org.jfree.chart.resources$JFreeChartResources#<clinit>()";
}
