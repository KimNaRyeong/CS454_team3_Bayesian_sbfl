digraph G {
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$Plot#Plot()";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.util$ObjectList#ObjectList()";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$XYPlot#mapDatasetToRangeAxis(int,int)";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$XYPlot#configureRangeAxes()";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$XYPlot#mapDatasetToDomainAxis(int,int)";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$XYPlot#configureDomainAxes()";
  "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)" -> "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)";
  "org.jfree.chart.plot$Marker#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$Marker#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$CategoryPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.ui$ProjectInfo#toString()" -> "org.jfree.chart.ui$Contributor#getEmail()";
  "org.jfree.chart.ui$ProjectInfo#toString()" -> "org.jfree.chart.ui$BasicProjectInfo#getLibraries()";
  "org.jfree.chart.ui$ProjectInfo#toString()" -> "org.jfree.chart.ui$ProjectInfo#getLicenceText()";
  "org.jfree.chart.ui$ProjectInfo#toString()" -> "org.jfree.chart.ui$BasicProjectInfo#getCopyright()";
  "org.jfree.chart.ui$ProjectInfo#toString()" -> "org.jfree.chart.ui$Library#getName()";
  "org.jfree.chart.ui$ProjectInfo#toString()" -> "org.jfree.chart.ui$Library#getInfo()";
  "org.jfree.chart.ui$ProjectInfo#toString()" -> "org.jfree.chart.ui$Library#getVersion()";
  "org.jfree.chart.ui$ProjectInfo#toString()" -> "org.jfree.chart.ui$Contributor#getName()";
  "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.event$ChartChangeEvent#setType(org.jfree.chart.event.ChartChangeEventType)";
  "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$XYPlot#configureRangeAxes()";
  "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.event$ChartChangeEventType#<clinit>()";
  "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$XYPlot#configureDomainAxes()";
  "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.event$ChartChangeEvent#setType(org.jfree.chart.event.ChartChangeEventType)";
  "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.event$ChartChangeEventType#<clinit>()";
  "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart.title$TextTitle#clone()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$JFreeChart#getSubtitleCount()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart.plot$Plot#clone()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart.title$Title#clone()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart.plot$PolarPlot#clone()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart.title$Title#addChangeListener(org.jfree.chart.event.TitleChangeListener)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart.plot$XYPlot#clone()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart.plot$PiePlot#clone()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart.plot$CategoryPlot#clone()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart.plot$Plot#addChangeListener(org.jfree.chart.event.PlotChangeListener)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$JFreeChart#getSubtitle(int)";
  "org.jfree.chart.title$TextTitle#clone()" -> "org.jfree.chart.title$Title#clone()";
  "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)" -> "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart.title$Title#<clinit>()" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.title$Title#<clinit>()" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.title$Title#<clinit>()" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.title$Title#<clinit>()" -> "org.jfree.chart.util$VerticalAlignment#<clinit>()";
  "org.jfree.chart.title$Title#<clinit>()" -> "org.jfree.chart.util$HorizontalAlignment#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis#setCategoryMargin(double)";
  "org.jfree.chart.plot$Plot#<clinit>()" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.plot$Plot#<clinit>()" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$ValueMarker#ValueMarker(double)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Marker#setPaint(java.awt.Paint)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis#setCategoryMargin(double)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers()";
  "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart.plot$PieLabelDistributor#distributeLabels(double,double)" -> "org.jfree.chart.plot$PieLabelDistributor#adjustUpwards(double,double)";
  "org.jfree.chart.plot$PieLabelDistributor#distributeLabels(double,double)" -> "org.jfree.chart.plot$PieLabelDistributor#adjustDownwards(double,double)";
  "org.jfree.chart.plot$PieLabelDistributor#distributeLabels(double,double)" -> "org.jfree.chart.plot$PieLabelDistributor#sort()";
  "org.jfree.chart.plot$PieLabelDistributor#distributeLabels(double,double)" -> "org.jfree.chart.plot$PieLabelDistributor#isOverlap()";
  "org.jfree.chart.plot$PieLabelDistributor#distributeLabels(double,double)" -> "org.jfree.chart.plot$PieLabelDistributor#adjustInwards()";
  "org.jfree.chart.plot$PieLabelDistributor#distributeLabels(double,double)" -> "org.jfree.chart.plot$PieLabelDistributor#spreadEvenly(double,double)";
  "org.jfree.chart.plot$PieLabelDistributor#adjustUpwards(double,double)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PolarPlot#drawGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List,java.util.List)";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getInsets()";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PolarPlot#refreshAngleTicks()";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getForegroundAlpha()";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PolarPlot#drawAxis(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PolarPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PolarPlot#drawCornerTextItems(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PolarPlot#drawGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List,java.util.List)" -> "org.jfree.chart.plot$PolarPlot#getRadiusGridlineStroke()";
  "org.jfree.chart.plot$PolarPlot#drawGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List,java.util.List)" -> "org.jfree.chart.plot$PolarPlot#getAngleGridlineStroke()";
  "org.jfree.chart.plot$PolarPlot#drawGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List,java.util.List)" -> "org.jfree.chart.plot$PolarPlot#isRadiusGridlinesVisible()";
  "org.jfree.chart.plot$PolarPlot#drawGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List,java.util.List)" -> "org.jfree.chart.plot$PolarPlot#getAngleGridlinePaint()";
  "org.jfree.chart.plot$PolarPlot#drawGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List,java.util.List)" -> "org.jfree.chart.plot$PolarPlot#getRadiusGridlinePaint()";
  "org.jfree.chart.plot$PolarPlot#drawGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List,java.util.List)" -> "org.jfree.chart.plot$PolarPlot#isAngleGridlinesVisible()";
  "org.jfree.chart.event$ChartChangeEventType#<clinit>()" -> "org.jfree.chart.event$ChartChangeEventType#ChartChangeEventType(java.lang.String)";
  "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block,java.lang.Object)" -> "org.jfree.chart.block$ColumnArrangement#add(org.jfree.chart.block.Block,java.lang.Object)";
  "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block,java.lang.Object)" -> "org.jfree.chart.block$FlowArrangement#add(org.jfree.chart.block.Block,java.lang.Object)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setRangeCrosshairVisible(boolean)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setDomainCrosshairVisible(boolean)";
  "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.plot$XYPlot#setRangeCrosshairVisible(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setRangeCrosshairVisible(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PiePlot#setLabelPadding(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setLabelPadding(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getSimpleLabels()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getDataset()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DatasetUtilities#calculatePieDatasetTotal(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlotState#setPieCenterY(double)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getSectionKey(int)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getPieIndex()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getMaximumExplodePercent()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot3D#drawSide(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Arc2D,java.awt.geom.Area,java.awt.geom.Area,java.awt.Paint,java.awt.Paint,java.awt.Stroke,boolean,boolean)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getDirection()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable,boolean)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getLabelLinkMargin()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlotState#setPieArea(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlotState#setPieWRadius(double)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getStartAngle()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getURLGenerator()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getLabelGenerator()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlotState#setPieCenterX(double)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getInteriorGap()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$Rotation#getFactor()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlotState#setLinkArea(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlotState#setPieHRadius(double)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getLabelGap()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getMinimumArcAngleToDraw()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.entity$PieSectionEntity#PieSectionEntity(java.awt.Shape,org.jfree.data.general.PieDataset,int,int,java.lang.Comparable,java.lang.String,java.lang.String)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getMaximumLabelWidth()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getInsets()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getForegroundAlpha()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlotState#setExplodedPieArea(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getToolTipGenerator()";
  "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#isCircular()";
  "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)";
  "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)";
  "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)";
  "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)";
  "org.jfree.chart.plot$XYPlot#setDomainGridlineStroke(java.awt.Stroke)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setDomainGridlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean)" -> "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean,boolean)";
  "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean,boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#autoAdjustRange()";
  "org.jfree.chart.plot$XYPlot#setDomainZeroBaselineVisible(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setDomainZeroBaselineVisible(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PolarPlot#clone()" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$PolarPlot#clone()" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)";
  "org.jfree.chart.plot$PolarPlot#clone()" -> "org.jfree.chart.plot$Plot#clone()";
  "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.block$AbstractBlock#trimToContentHeight(org.jfree.data.Range)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.block$AbstractBlock#trimToContentHeight(org.jfree.data.Range)" -> "org.jfree.chart.block$AbstractBlock#trimToContentHeight(double)";
  "org.jfree.chart.block$AbstractBlock#trimToContentHeight(org.jfree.data.Range)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.block$AbstractBlock#trimToContentHeight(org.jfree.data.Range)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getTickMarkInsideLength()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getTickMarkStroke()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isTickMarksVisible()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isAxisLineVisible()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isTickLabelsVisible()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$ValueAxis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getTickMarkOutsideLength()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getTickMarkPaint()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getTickLabelPaint()";
  "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)";
  "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#deriveRotationAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" -> "org.jfree.chart.ui$BasicProjectInfo#setVersion(java.lang.String)";
  "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" -> "org.jfree.chart.ui$BasicProjectInfo#setInfo(java.lang.String)";
  "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" -> "org.jfree.chart.ui$BasicProjectInfo#setName(java.lang.String)";
  "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" -> "org.jfree.chart.ui$BasicProjectInfo#setLicenceName(java.lang.String)";
  "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" -> "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo()";
  "org.jfree.chart.ui$BasicProjectInfo#setVersion(java.lang.String)" -> "org.jfree.chart.ui$Library#setVersion(java.lang.String)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlotState#setPieCenterY(double)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlotState#setPieHRadius(double)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlotState#setPieCenterX(double)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DatasetUtilities#calculatePieDatasetTotal(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlotState#setPieArea(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getMaximumExplodePercent()";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlotState#setLinkArea(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlotState#setExplodedPieArea(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlotState#getPassesRequired()";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlotState#setPieWRadius(double)";
  "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$RingPlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlotState#setPassesRequired(int)";
  "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DatasetUtilities#calculatePieDatasetTotal(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlotState#setLatestAngle(double)";
  "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getStartAngle()";
  "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlotState#setTotal(double)";
  "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#getDataset()";
  "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlotState#PiePlotState(org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$XYPlot#getRenderer(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#getRenderer(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart.plot$XYPlot#<clinit>()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#setQuadrantOrigin(java.awt.geom.Point2D)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setQuadrantOrigin(java.awt.geom.Point2D)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator()";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart$PaintMap#PaintMap()";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.util$Rotation#<clinit>()";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.plot$Plot#Plot()";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.plot$PieLabelDistributor#PieLabelDistributor(int)";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart$StrokeMap#StrokeMap()";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(org.jfree.chart.util.UnitType,double,double,double,double)";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(org.jfree.chart.util.UnitType,double,double,double,double)";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$RectangleEdge#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.title$Title#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$RectangleInsets#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.block$LengthConstraintType#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.title$TextTitle#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.axis$DateAxis#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$UnitType#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.plot$PlotOrientation#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$VerticalAlignment#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$HorizontalAlignment#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.axis$CategoryAxis#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data$Range#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.text$TextLine#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.text$TextBlock#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$RectangleAnchor#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.text$TextBlockAnchor#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.ui$Library#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.text$TextFragment#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.text$TextAnchor#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.event$ChartChangeEventType#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$Rotation#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.axis$NumberAxis#hashCode()";
  "org.jfree.chart.axis$DateAxis#getMaximumDate()" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$DateAxis#getMaximumDate()" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isVisible()";
  "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BlockContainer#getBlocks()";
  "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeight()";
  "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#setBounds(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#<clinit>()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$PiePlot#setSectionOutlinesVisible(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setSectionOutlinesVisible(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#toTimelineValue(java.util.Date)";
  "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#toTimelineValue(long)";
  "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.util$RectangleEdge#<clinit>()" -> "org.jfree.chart.util$RectangleEdge#RectangleEdge(java.lang.String)";
  "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isAxisLineVisible()";
  "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isVisible()";
  "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$PolarPlot#setAngleGridlinePaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#setAngleGridlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#clearDomainAxes()" -> "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#clearDomainAxes()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#clearDomainAxes()" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#clearDomainAxes()" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#clearDomainAxes()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#clearDomainAxes()" -> "org.jfree.chart.util$AbstractObjectList#clear()";
  "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)" -> "org.jfree.data$Range#getLength()";
  "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.util$VerticalAlignment#readResolve()" -> "org.jfree.chart.util$VerticalAlignment#<clinit>()";
  "org.jfree.chart.util$VerticalAlignment#readResolve()" -> "org.jfree.chart.util$VerticalAlignment#equals(java.lang.Object)";
  "org.jfree.chart.util$VerticalAlignment#<clinit>()" -> "org.jfree.chart.util$VerticalAlignment#VerticalAlignment(java.lang.String)";
  "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#getLowerMargin()";
  "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.data$Range#expand(org.jfree.data.Range,double,double)";
  "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#getUpperMargin()";
  "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.plot$Plot#clone()" -> "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)";
  "org.jfree.chart.plot$Plot#clone()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.axis$NumberAxis#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.plot$XYPlot#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.plot$CategoryPlot#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.plot$PiePlot#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.plot$Plot#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.axis$ValueAxis#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.block$BlockContainer#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.title$TextTitle#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.title$Title#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.axis$DateAxis#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.util$Size2D#clone()";
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" -> "org.jfree.chart.plot$PolarPlot#clone()";
  "org.jfree.chart.axis$Axis#setTickMarkInsideLength(float)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)" -> "org.jfree.chart.plot$Plot#axisChanged(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#<clinit>()" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$ValueAxis#<clinit>()" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.plot$Marker#Marker(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.plot$Marker#Marker(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.plot$Marker#Marker(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.plot$Marker#Marker(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.util$RectangleAnchor#<clinit>()" -> "org.jfree.chart.util$RectangleAnchor#RectangleAnchor(java.lang.String)";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getLabelAngle()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#getLeft()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getLabelFont()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#getBottom()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getLabelInsets()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#getTop()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getLabelPaint()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#getRight()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getDataset()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.util$Rotation#<clinit>()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getMinimumArcAngleToDraw()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlotState#getLatestAngle()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getToolTipGenerator()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlotState#getPieArea()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.renderer$RendererState#getEntityCollection()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getSectionKey(int)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getArcBounds(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double,double)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.renderer$RendererState#getInfo()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getShadowYOffset()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.entity$PieSectionEntity#PieSectionEntity(java.awt.Shape,org.jfree.data.general.PieDataset,int,int,java.lang.Comparable,java.lang.String,java.lang.String)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable,boolean)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getMaximumExplodePercent()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(org.jfree.chart.util.UnitType,double,double,double,double)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getShadowPaint()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getExplodePercent(java.lang.Comparable)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlotState#getTotal()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$RingPlot#extendLine(java.awt.geom.Line2D,double,double)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getDirection()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlotState#getExplodedPieArea()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getShadowXOffset()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getURLGenerator()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlotState#setLatestAngle(double)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getPieIndex()";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockParams#getGenerateEntities()";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#trimBorder(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockResult#getEntityCollection()";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#trimPadding(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#getBounds()";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockResult#BlockResult()";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockResult#setEntityCollection(org.jfree.chart.entity.EntityCollection)";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#trimMargin(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation()";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxis()";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation(int)";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.util$RectangleEdge#opposite(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setForegroundAlpha(float)";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart.plot$PolarPlot#setAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#setAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$PolarPlot#setAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$PolarPlot#setAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#setAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$PolarPlot#setAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PolarPlot#setAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.axis$DateAxis#setTimeline(org.jfree.chart.axis.Timeline)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)" -> "org.jfree.chart.title$Title#removeChangeListener(org.jfree.chart.event.TitleChangeListener)";
  "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)" -> "org.jfree.chart.title$Title#addChangeListener(org.jfree.chart.event.TitleChangeListener)";
  "org.jfree.chart.title$Title#removeChangeListener(org.jfree.chart.event.TitleChangeListener)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart.plot$PieLabelDistributor#adjustDownwards(double,double)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.data$Range#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$VerticalAlignment#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.block$BlockBorder#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.text$TextAnchor#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.title$Title#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.block$FlowArrangement#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$PiePlot3D#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$RectangleEdge#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.text$TextFragment#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$UnitType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.block$LineBorder#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$Axis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$Plot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart$PaintMap#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$Size2D#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$Rotation#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.block$BlockContainer#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart$StrokeMap#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.text$TextBlockAnchor#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$RingPlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.title$TextTitle#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.block$ColumnArrangement#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.event$ChartChangeEventType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$DateAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.block$LengthConstraintType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$RectangleAnchor#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$HorizontalAlignment#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$PlotOrientation#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.ui$Library#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.text$TextLine#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.text$TextBlock#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$Marker#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.plot$ValueMarker#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getAntiAlias()" -> "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#equals(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#equals(java.lang.Object)" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource)";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.block$LineBorder#LineBorder()";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.title$TextTitle#<clinit>()";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.title$Title#addChangeListener(org.jfree.chart.event.TitleChangeListener)";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.block$AbstractBlock#setFrame(org.jfree.chart.block.BlockFrame)";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.block$AbstractBlock#setMargin(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.title$LegendTitle#setBackgroundPaint(java.awt.Paint)";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.plot$Plot#addChangeListener(org.jfree.chart.event.PlotChangeListener)";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.title$LegendTitle#<clinit>()";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)" -> "org.jfree.chart.title$Title#setPosition(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource)" -> "org.jfree.chart.block$ColumnArrangement#ColumnArrangement()";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource)" -> "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource)" -> "org.jfree.chart.block$FlowArrangement#FlowArrangement()";
  "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#getTickUnit()";
  "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getStandardTickUnits()";
  "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)";
  "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#getBorderStroke()";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#isBorderVisible()";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#getBorderPaint()";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartProgressEvent)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.event$ChartProgressEvent#ChartProgressEvent(java.lang.Object,org.jfree.chart.JFreeChart,int,int)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#setSectionPaint(java.lang.Comparable,java.awt.Paint)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.category.CategoryDataset)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#setPieIndex(int)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$MultiplePiePlot#prefetchSectionPaints()";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart$JFreeChart#getPlot()";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getInsets()";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.general.PieDataset,java.lang.Comparable,double)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#setDataset(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairLockedOnData(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairLockedOnData(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getLowerMargin()";
  "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getUpperMargin()";
  "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryMargin()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#calculateLowestVisibleTickValue()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isAutoTickUnitSelection()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#calculateVisibleTickCount()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#getTickUnit()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#getNumberFormatOverride()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#<clinit>()" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#<clinit>()" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#calculateLowestVisibleTickValue()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#calculateVisibleTickCount()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#getTickUnit()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isAutoTickUnitSelection()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#getNumberFormatOverride()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#calculateLowestVisibleTickValue()" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$NumberAxis#calculateLowestVisibleTickValue()" -> "org.jfree.chart.axis$NumberAxis#getTickUnit()";
  "org.jfree.chart.axis$NumberAxis#calculateLowestVisibleTickValue()" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)" -> "org.jfree.chart$JFreeChart#setNotify(boolean)";
  "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)" -> "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#clearSubtitles()" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart$JFreeChart#clearSubtitles()" -> "org.jfree.chart.title$Title#removeChangeListener(org.jfree.chart.event.TitleChangeListener)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis(int)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisForDataset(int)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDatasetRenderingOrder()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double,boolean)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRenderer(int)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainCrosshairValue()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawZeroDomainBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeCrosshairPaint()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double,boolean)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeCrosshairValue()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getForegroundAlpha()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getInsets()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#isRangeCrosshairVisible()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawDomainTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisForDataset(int)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainCrosshairPaint()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#isDomainCrosshairVisible()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis(int)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainCrosshairStroke()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDatasetCount()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeCrosshairStroke()";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)";
  "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#drawRangeTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)";
  "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisLocation(int)";
  "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.util$RectangleEdge#opposite(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)" -> "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$ValueAxis#resizeRange(double)";
  "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$PiePlot#setSectionOutlinePaint(java.lang.Comparable,java.awt.Paint)" -> "org.jfree.chart$PaintMap#put(java.lang.Comparable,java.awt.Paint)";
  "org.jfree.chart.plot$PiePlot#setSectionOutlinePaint(java.lang.Comparable,java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PiePlot#setSectionOutlinePaint(java.lang.Comparable,java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PolarPlot#PolarPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.PolarItemRenderer)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#PolarPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.PolarItemRenderer)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$PolarPlot#PolarPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.PolarItemRenderer)" -> "org.jfree.chart.plot$PolarPlot#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#PolarPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.PolarItemRenderer)" -> "org.jfree.chart.plot$Plot#Plot()";
  "org.jfree.chart.plot$PolarPlot#PolarPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.PolarItemRenderer)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart.axis$CategoryAxis#configure()";
  "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getInsets()";
  "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getForegroundAlpha()";
  "org.jfree.chart.plot$PiePlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$PiePlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)";
  "org.jfree.chart.plot$PiePlot#clone()" -> "org.jfree.chart.plot$Plot#clone()";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)" -> "org.jfree.chart.axis$NumberAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)" -> "org.jfree.chart.axis$DateAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)" -> "org.jfree.chart.axis$ValueAxis#isAutoRange()";
  "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleInsets#getBottom()";
  "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getTickLabelInsets()";
  "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleInsets#getLeft()";
  "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleInsets#getRight()";
  "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleInsets#getTop()";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable)" -> "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable,boolean)";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#isHiddenValue(long)";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isAutoTickUnitSelection()";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#calculateLowestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#getMaximumDate()";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#getDateFormatOverride()";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#getTickUnit()";
  "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()" -> "org.jfree.chart.plot$XYPlot#getRangeAxisLocation()";
  "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()" -> "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getRangeAxisLocation()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxis(int,int)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$Plot#Plot()";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.util$ObjectList#ObjectList()";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxis(int,int)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$CategoryPlot#configureDomainAxes()";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$ValueMarker#ValueMarker(double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxis(int,int)" -> "org.jfree.chart.plot$CategoryPlot#getDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxis(int,int)" -> "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxis(int,int)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#setRangeGridlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setRangeGridlinePaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.axis$ValueAxis#getUpperBound()";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.plot$XYPlot#getDataset(int)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.plot$XYPlot#getSeriesRenderingOrder()";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.plot$XYPlot#getRenderer()";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisForDataset(int)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisForDataset(int)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.xy.XYDataset)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.plot$XYPlot#getRenderer(int)";
  "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)" -> "org.jfree.chart.axis$ValueAxis#getLowerBound()";
  "org.jfree.chart.axis$ValueAxis#getUpperBound()" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.plot$XYPlot#clearAnnotations()" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#clearAnnotations()" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.block$FlowArrangement#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.block$ColumnArrangement#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.text$TextLine#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.title$Title#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.text$TextAnchor#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$PiePlot3D#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$DateAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart$StrokeMap#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$Plot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.event$ChartChangeEventType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart$PaintMap#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$RectangleEdge#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$VerticalAlignment#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$ValueMarker#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$HorizontalAlignment#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$Marker#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$RingPlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.text$TextBlock#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$Axis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.block$LengthConstraintType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.title$TextTitle#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.block$LineBorder#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$Rotation#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.text$TextBlockAnchor#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.block$BlockBorder#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.data$Range#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.ui$Library#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$PlotOrientation#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$Size2D#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.text$TextFragment#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$RectangleAnchor#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.util$UnitType#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setAntiAlias(boolean)" -> "org.jfree.chart.block$BlockContainer#equals(java.lang.Object)";
  "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)" -> "org.jfree.chart.block$FlowArrangement#equals(java.lang.Object)";
  "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)" -> "org.jfree.chart.title$Title#equals(java.lang.Object)";
  "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)" -> "org.jfree.chart.block$ColumnArrangement#equals(java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$Marker#addChangeListener(org.jfree.chart.event.MarkerChangeListener)";
  "org.jfree.chart.plot$XYPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#calculateTotalHeight(double)";
  "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#calculateTotalWidth(double)";
  "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#Size2D()";
  "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BlockContainer#isEmpty()";
  "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$LegendTitle#fetchLegendItems()";
  "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.plot$PiePlot#setSectionPaint(java.lang.Comparable,java.awt.Paint)" -> "org.jfree.chart$PaintMap#put(java.lang.Comparable,java.awt.Paint)";
  "org.jfree.chart.plot$PiePlot#setSectionPaint(java.lang.Comparable,java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setSectionPaint(java.lang.Comparable,java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PiePlot3D#PiePlot3D(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.plot$PiePlot3D#PiePlot3D(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.plot$PiePlot#setCircular(boolean,boolean)";
  "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double)";
  "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double)";
  "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#toMillisecond(long)";
  "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#toTimelineValue(java.util.Date)";
  "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#getRendererForDataset(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#getRendererForDataset(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.text$TextBlock#calculateBounds(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.text$TextBlock#calculateBounds(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.text$TextBlock#calculateOffsets(org.jfree.chart.text.TextBlockAnchor,double,double)";
  "org.jfree.chart.text$TextBlock#calculateBounds(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)";
  "org.jfree.chart.text$TextBlock#calculateBounds(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$AbstractObjectList#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.entity$ChartEntity#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.plot$Plot#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.axis$CategoryAxis#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart$PaintMap#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.axis$CategoryAxis3D#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.plot$CategoryPlot#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.title$TextTitle#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$Size2D#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.block$AbstractBlock#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.block$BlockContainer#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.title$Title#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart$StrokeMap#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.plot$Marker#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.axis$ValueAxis#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.axis$DateAxis#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.axis$Axis#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.axis$NumberAxis#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.plot$PiePlot#clone()";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.plot$XYPlot#getDataset(int)";
  "org.jfree.chart.plot$XYPlot#clone()" -> "org.jfree.chart.plot$PolarPlot#clone()";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$ValueAxis#resizeRange(double)";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)";
  "org.jfree.chart.plot$PlotOrientation#<clinit>()" -> "org.jfree.chart.plot$PlotOrientation#PlotOrientation(java.lang.String)";
  "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.event$ChartChangeEventType#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.event$ChartChangeEvent#setType(org.jfree.chart.event.ChartChangeEventType)";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)" -> "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.axis$Axis#setTickLabelPaint(java.awt.Paint)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.plot$PolarPlot#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.util$Size2D#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.axis$DateAxis#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.plot$PiePlot#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.plot$XYPlot#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.entity$ChartEntity#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.plot$CategoryPlot#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.title$TextTitle#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.axis$ValueAxis#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.title$Title#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.block$BlockContainer#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.axis$NumberAxis#clone()";
  "org.jfree.chart.block$AbstractBlock#clone()" -> "org.jfree.chart.plot$Plot#clone()";
  "org.jfree.chart.plot$Plot#Plot()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier()";
  "org.jfree.chart.plot$Plot#Plot()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$Plot#Plot()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.plot$Plot#getLegendItems()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.title$Title#getPosition()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart$LegendItemCollection#get(int)";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.plot$PolarPlot#getLegendItems()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.block$BlockContainer#clear()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.plot$PiePlot#getLegendItems()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block)";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.block$BlockContainer#setArrangement(org.jfree.chart.block.Arrangement)";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.plot$CategoryPlot#getLegendItems()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart$LegendItemCollection#getItemCount()";
  "org.jfree.chart.title$LegendTitle#fetchLegendItems()" -> "org.jfree.chart.plot$XYPlot#getLegendItems()";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#LegendItemCollection()";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.chart.plot$MultiplePiePlot#getDataset()";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.chart.plot$MultiplePiePlot#prefetchSectionPaints()";
  "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)";
  "org.jfree.chart.plot$XYPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$XYPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$ValueAxis#getLowerBound()";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#getBackgroundAlpha()";
  "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$ValueAxis#getUpperBound()";
  "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()" -> "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()" -> "org.jfree.chart.plot$XYPlot#getDomainAxisLocation()";
  "org.jfree.chart.plot$XYPlot#getDomainAxis(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#getDomainAxis(int)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.plot$XYPlot#getDomainAxis(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxis(int)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxis(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxis(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable)" -> "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable,boolean)";
  "org.jfree.chart.plot$XYPlot#getRendererForDataset(org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#getRendererForDataset(org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#getRendererForDataset(org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.plot$XYPlot#getRenderer()";
  "org.jfree.chart.util$ObjectList#get(int)" -> "org.jfree.chart.util$AbstractObjectList#get(int)";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getExplodePercent(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.util$Rotation#<clinit>()";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.renderer$RendererState#getInfo()";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable,boolean)";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlotState#getTotal()";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getMaximumExplodePercent()";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlotState#setLatestAngle(double)";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlotState#getExplodedPieArea()";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getArcBounds(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double,double)";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.renderer$RendererState#getEntityCollection()";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlotState#getPieArea()";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getMinimumArcAngleToDraw()";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlot#getSectionKey(int)";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.entity$PieSectionEntity#PieSectionEntity(java.awt.Shape,org.jfree.data.general.PieDataset,int,int,java.lang.Comparable,java.lang.String,java.lang.String)";
  "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)" -> "org.jfree.chart.plot$PiePlotState#getLatestAngle()";
  "org.jfree.chart.util$Rotation#<clinit>()" -> "org.jfree.chart.util$Rotation#Rotation(java.lang.String,double)";
  "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#getPlot()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setOutlineStroke(java.awt.Stroke)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$MultiplePiePlot#setDataExtractOrder(org.jfree.chart.util.TableOrder)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setURLGenerator(org.jfree.chart.urls.PieURLGenerator)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$MultiplePiePlot#getPieChart()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setBackgroundPaint(java.awt.Paint)";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#getFixedDimension()";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#isVisible()";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#isTickLabelsVisible()";
  "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)" -> "org.jfree.chart.axis$Axis#Axis(java.lang.String)";
  "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)" -> "org.jfree.chart.axis$Axis#setTickMarksVisible(boolean)";
  "org.jfree.chart.plot$Plot#setBackgroundImageAlpha(float)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$Plot#setBackgroundImageAlpha(float)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.axis$Axis#setLabelFont(java.awt.Font)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.util$VerticalAlignment#<clinit>()";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$AbstractBlock#setBounds(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$BlockContainer#getBlocks()";
  "org.jfree.chart.axis$NumberAxis#configure()" -> "org.jfree.chart.axis$ValueAxis#isAutoRange()";
  "org.jfree.chart.axis$NumberAxis#configure()" -> "org.jfree.chart.axis$NumberAxis#autoAdjustRange()";
  "org.jfree.chart.axis$DateAxis#setMaximumDate(java.util.Date)" -> "org.jfree.chart.axis$DateAxis#getMinimumDate()";
  "org.jfree.chart.axis$DateAxis#setMaximumDate(java.util.Date)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$DateAxis#setMaximumDate(java.util.Date)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$DateAxis#setMaximumDate(java.util.Date)" -> "org.jfree.chart.axis$DateAxis#getMaximumDate()";
  "org.jfree.chart.axis$DateAxis#getMinimumDate()" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$DateAxis#getMinimumDate()" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.plot$XYPlot#drawZeroDomainBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.plot$XYPlot#drawZeroDomainBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getRenderer()";
  "org.jfree.chart.plot$XYPlot#drawZeroDomainBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#isDomainZeroBaselineVisible()";
  "org.jfree.chart.plot$XYPlot#getDomainAxis()" -> "org.jfree.chart.plot$XYPlot#getDomainAxis(int)";
  "org.jfree.chart.util$HorizontalAlignment#<clinit>()" -> "org.jfree.chart.util$HorizontalAlignment#HorizontalAlignment(java.lang.String)";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis3D#NumberAxis3D(java.lang.String)";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis3D#CategoryAxis3D(java.lang.String)";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setColumnRenderingOrder(org.jfree.chart.util.SortOrder)";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)" -> "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)";
  "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)" -> "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)";
  "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)";
  "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)";
  "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)";
  "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)" -> "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)";
  "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)";
  "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)" -> "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)";
  "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double,boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double,boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.axis$DateAxis#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.axis$DateAxis#equals(java.lang.Object)" -> "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)";
  "org.jfree.chart.axis$DateAxis#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.plot$PieLabelDistributor#isOverlap()" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setRangeCrosshairVisible(boolean)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#createIntegerTickUnits()";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setStandardTickUnits(org.jfree.chart.axis.TickUnitSource)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setDomainCrosshairVisible(boolean)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)" -> "org.jfree.chart.axis$ValueAxis#ValueAxis(java.lang.String,org.jfree.chart.axis.TickUnitSource)";
  "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)" -> "org.jfree.chart.axis$NumberAxis#createStandardTickUnits()";
  "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart.block$AbstractBlock#trimToContentWidth(org.jfree.data.Range)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.block$AbstractBlock#trimToContentWidth(org.jfree.data.Range)" -> "org.jfree.chart.block$AbstractBlock#trimToContentWidth(double)";
  "org.jfree.chart.block$AbstractBlock#trimToContentWidth(org.jfree.data.Range)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.block$AbstractBlock#trimToContentWidth(org.jfree.data.Range)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelLines(int)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot3D#PiePlot3D(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setURLGenerator(org.jfree.chart.urls.PieURLGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.plot$XYPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.title$Title#setNotify(boolean)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$Title#setNotify(boolean)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$PiePlot#setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.util.Locale)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$RingPlot#RingPlot(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PolarPlot#setDataset(org.jfree.data.xy.XYDataset)";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis()";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#setTickMarksVisible(boolean)";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#setAxisLineVisible(boolean)";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#setTickLabelInsets(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PolarPlot#setAxis(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PolarPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PolarPlot#setRenderer(org.jfree.chart.renderer.PolarItemRenderer)";
  "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PolarPlot#PolarPlot()";
  "org.jfree.chart.plot$PolarPlot#setDataset(org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.plot$Plot#setDatasetGroup(org.jfree.data.general.DatasetGroup)";
  "org.jfree.chart.plot$PolarPlot#setDataset(org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setColumnRenderingOrder(org.jfree.chart.util.SortOrder)";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis3D#NumberAxis3D(java.lang.String)";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setForegroundAlpha(float)";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis3D#CategoryAxis3D(java.lang.String)";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setRowRenderingOrder(org.jfree.chart.util.SortOrder)";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#mapDatasetToDomainAxis(int,int)" -> "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$XYPlot#mapDatasetToDomainAxis(int,int)" -> "org.jfree.chart.plot$XYPlot#getDataset(int)";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getDirection()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getIgnoreNullValues()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getIgnoreZeroValues()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getLabelGenerator()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.text$TextUtilities#drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.util$Rotation#getFactor()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getStartAngle()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(org.jfree.chart.util.UnitType,double,double,double,double)";
  "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getDataset()";
  "org.jfree.chart.text$TextUtilities#<clinit>()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#<clinit>()" -> "org.jfree.chart.util$ObjectUtilities#isJDK14()";
  "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$JFreeChart#setTextAntiAlias(boolean)" -> "org.jfree.chart$JFreeChart#setTextAntiAlias(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setTextAntiAlias(java.lang.Object)" -> "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)";
  "org.jfree.chart$JFreeChart#setTextAntiAlias(java.lang.Object)" -> "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)";
  "org.jfree.chart.axis$NumberAxis#calculateHighestVisibleTickValue()" -> "org.jfree.chart.axis$NumberAxis#getTickUnit()";
  "org.jfree.chart.axis$NumberAxis#calculateHighestVisibleTickValue()" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$NumberAxis#calculateHighestVisibleTickValue()" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$DateAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#toTimelineValue(long)";
  "org.jfree.chart.axis$DateAxis#zoomRange(double,double)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$DateAxis#zoomRange(double,double)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$DateAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$DateAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$DateAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.axis$DateAxis#zoomRange(double,double)" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#toMillisecond(long)";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.axis$NumberAxis#clone()";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.plot$Plot#clone()";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.util$ObjectList#ObjectList()";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.plot$CategoryPlot#getDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis)";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.axis$ValueAxis#clone()";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.util$AbstractObjectList#clone()";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.axis$DateAxis#clone()";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.axis$CategoryAxis#clone()";
  "org.jfree.chart.plot$CategoryPlot#clone()" -> "org.jfree.chart.axis$CategoryAxis3D#clone()";
  "org.jfree.chart.axis$NumberAxis#clone()" -> "org.jfree.chart.axis$ValueAxis#clone()";
  "org.jfree.chart.plot$XYPlot#clearRangeAxes()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#clearRangeAxes()" -> "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$XYPlot#clearRangeAxes()" -> "org.jfree.chart.util$AbstractObjectList#clear()";
  "org.jfree.chart.plot$XYPlot#clearRangeAxes()" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#clearRangeAxes()" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#clearRangeAxes()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$PieLabelDistributor#spreadEvenly(double,double)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)";
  "org.jfree.chart.plot$XYPlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)";
  "org.jfree.chart.plot$XYPlot#getLegendItems()" -> "org.jfree.chart.plot$XYPlot#getDataset(int)";
  "org.jfree.chart.plot$XYPlot#getLegendItems()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#LegendItemCollection()";
  "org.jfree.chart.plot$XYPlot#getLegendItems()" -> "org.jfree.chart.plot$XYPlot#getRenderer(int)";
  "org.jfree.chart.plot$XYPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$XYPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.axis$ValueAxis#centerRange(double)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$ValueAxis#centerRange(double)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#centerRange(double)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$ValueAxis#centerRange(double)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#centerRange(double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$ValueAxis#centerRange(double)" -> "org.jfree.data$Range#getCentralValue()";
  "org.jfree.chart.block$ColumnArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.block$ColumnArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.block$ColumnArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#toFixedHeight(double)";
  "org.jfree.chart.block$ColumnArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)";
  "org.jfree.chart.block$ColumnArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightRange()";
  "org.jfree.chart.plot$XYPlot#setRangeCrosshairLockedOnData(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setRangeCrosshairLockedOnData(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#clearDomainMarkers(int)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#clearDomainMarkers(int)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#clearDomainMarkers(int)" -> "org.jfree.chart.plot$Marker#removeChangeListener(org.jfree.chart.event.MarkerChangeListener)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.text$TextBlock#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$LengthConstraintType#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$PlotOrientation#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$RingPlot#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$BlockContainer#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$RectangleAnchor#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.text$TextAnchor#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart$PaintMap#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$VerticalAlignment#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.text$TextFragment#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.title$TextTitle#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$Marker#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$RectangleEdge#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.ui$Library#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$DateAxis#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.event$ChartChangeEventType#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$UnitType#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$BlockBorder#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$PiePlot3D#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$Rotation#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$LineBorder#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.text$TextLine#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.title$Title#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$ValueMarker#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.plot$Plot#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$FlowArrangement#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$Axis#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$Size2D#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data$Range#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$HorizontalAlignment#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart$StrokeMap#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.block$ColumnArrangement#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.text$TextBlockAnchor#equals(java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation)" -> "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightConstraintType()";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthConstraintType()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setURLGenerator(org.jfree.chart.urls.PieURLGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart.plot$XYPlot#setDomainCrosshairPaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setDomainCrosshairPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setDomainGridlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setDomainGridlinePaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.title$TextTitle#<clinit>()";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.plot$Plot#Plot()";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.title$Title#setPosition(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart$JFreeChart#JFreeChart(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis3D#CategoryAxis3D(java.lang.String)";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis3D#NumberAxis3D(java.lang.String)";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart.axis$CategoryAxis3D#CategoryAxis3D(java.lang.String)" -> "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)";
  "org.jfree.chart.title$TextTitle#setURLText(java.lang.String)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$TextTitle#setURLText(java.lang.String)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.plot$XYPlot#getRangeAxisForDataset(int)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis(int)";
  "org.jfree.chart.plot$XYPlot#getRangeAxisForDataset(int)" -> "org.jfree.chart.plot$XYPlot#getDatasetCount()";
  "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$ValueAxis#resizeRange(double)";
  "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)";
  "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#resizeRange(double)" -> "org.jfree.data$Range#getCentralValue()";
  "org.jfree.chart.axis$ValueAxis#resizeRange(double)" -> "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)";
  "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.text$TextBlock#setLineAlignment(org.jfree.chart.util.HorizontalAlignment)";
  "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)";
  "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.title$Title#getPosition()";
  "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.text$G2TextMeasurer#G2TextMeasurer(java.awt.Graphics2D)";
  "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,org.jfree.chart.text.TextMeasurer)";
  "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)" -> "org.jfree.chart.plot$Plot#equals(java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#isHiddenValue(long)";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#getDateFormatOverride()";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#getTickUnit()";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#calculateLowestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#getMaximumDate()";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isAutoTickUnitSelection()";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.axis$Axis#getTickLabelInsets()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.util$RectangleInsets#getLeft()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.util$RectangleInsets#getBottom()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.util$RectangleInsets#getTop()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.util$RectangleInsets#getRight()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$PiePlot#setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.util.Locale)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.axis$DateAxis#calculateHighestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateAxis#previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)";
  "org.jfree.chart.axis$DateAxis#calculateHighestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateAxis#getMaximumDate()";
  "org.jfree.chart.axis$DateAxis#previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateAxis#calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)";
  "org.jfree.chart.plot$XYPlot#getPlotType()" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getPlotType()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.axis$DateAxis#configure()" -> "org.jfree.chart.axis$DateAxis#autoAdjustRange()";
  "org.jfree.chart.axis$DateAxis#configure()" -> "org.jfree.chart.axis$ValueAxis#isAutoRange()";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#toMillisecond(long)";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.plot$PolarPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getAutoRangeMinimumSize()";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.axis$Axis#getPlot()";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getFixedAutoRange()";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getLowerMargin()";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#toTimelineValue(long)";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$DateAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getUpperMargin()";
  "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)" -> "org.jfree.chart.event$ChartChangeEventType#<clinit>()";
  "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)" -> "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart,org.jfree.chart.event.ChartChangeEventType)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$RingPlot#RingPlot(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)";
  "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setURLGenerator(org.jfree.chart.urls.PieURLGenerator)";
  "org.jfree.data$Range#expand(org.jfree.data.Range,double,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data$Range#expand(org.jfree.data.Range,double,double)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.data$Range#expand(org.jfree.data.Range,double,double)" -> "org.jfree.data$Range#getLength()";
  "org.jfree.data$Range#expand(org.jfree.data.Range,double,double)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.plot$XYPlot#setDomainAxes(org.jfree.chart.axis.ValueAxis[])" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setDomainAxes(org.jfree.chart.axis.ValueAxis[])" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setDomainAxes(org.jfree.chart.axis.ValueAxis[])" -> "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$AbstractBlock#setBounds(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.util$HorizontalAlignment#<clinit>()";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$BlockContainer#getBlocks()";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)" -> "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#getHeight()";
  "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#getWidth()";
  "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#calculateConstrainedSize(org.jfree.chart.util.Size2D)";
  "org.jfree.chart.plot$CategoryPlot#setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)";
  "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)" -> "org.jfree.chart.plot$CategoryPlot#configureDomainAxes()";
  "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)" -> "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()";
  "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$JFreeChart#main(java.lang.String[])" -> "org.jfree.chart.ui$ProjectInfo#toString()";
  "org.jfree.chart$JFreeChart#main(java.lang.String[])" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxis()" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setSectionPaint(java.lang.Comparable,java.awt.Paint)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setDataset(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.title$TextTitle#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.util.Locale)";
  "org.jfree.chart.plot$PiePlot#<clinit>()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.util$RectangleInsets#getTop()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$Axis#getTickLabelInsets()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.util$RectangleInsets#getBottom()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateAxis#getDateFormatOverride()";
  "org.jfree.chart.plot$PiePlot#setShadowYOffset(double)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setShadowYOffset(double)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthConstraintType()";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#trimToContentWidth(double)";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeight()";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidth()";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightConstraintType()";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightRange()";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthRange()";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#trimToContentHeight(double)";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#trimToContentWidth(org.jfree.data.Range)";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#trimToContentHeight(org.jfree.data.Range)";
  "org.jfree.chart.plot$PolarPlot#setAngleLabelsVisible(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PolarPlot#setAngleLabelsVisible(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,double,float,float)" -> "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)";
  "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,double,float,float)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)" -> "org.jfree.chart.axis$Axis#equals(java.lang.Object)";
  "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)" -> "org.jfree.data$Range#equals(java.lang.Object)";
  "org.jfree.chart.axis$Axis#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.axis$Axis#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart$JFreeChart#createAlignedRectangle2D(org.jfree.chart.util.Size2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)" -> "org.jfree.chart.util$VerticalAlignment#<clinit>()";
  "org.jfree.chart$JFreeChart#createAlignedRectangle2D(org.jfree.chart.util.Size2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)" -> "org.jfree.chart.util$HorizontalAlignment#<clinit>()";
  "org.jfree.chart.plot$RingPlot#setSeparatorsVisible(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$RingPlot#setSeparatorsVisible(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape)" -> "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String)";
  "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String)" -> "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String,java.lang.String)";
  "org.jfree.chart.axis$Axis#<clinit>()" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.axis$Axis#<clinit>()" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.plot$XYPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$CategoryPlot#setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)";
  "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,float,float)" -> "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,float,float)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,float,float)" -> "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)";
  "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.plot$CategoryPlot#setDomainGridlinesVisible(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setDomainGridlinesVisible(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.axis$NumberAxis3D#NumberAxis3D(java.lang.String)" -> "org.jfree.chart.axis$Axis#setAxisLineVisible(boolean)";
  "org.jfree.chart.axis$NumberAxis3D#NumberAxis3D(java.lang.String)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart.title$LegendTitle#setLegendItemGraphicEdge(org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$LegendTitle#setLegendItemGraphicEdge(org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.axis$NumberAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getStandardTickUnits()";
  "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#getTickUnit()";
  "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)";
  "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)";
  "org.jfree.chart.block$BlockContainer#BlockContainer()" -> "org.jfree.chart.block$BlockContainer#BlockContainer(org.jfree.chart.block.Arrangement)";
  "org.jfree.chart.block$BlockContainer#BlockContainer(org.jfree.chart.block.Arrangement)" -> "org.jfree.chart.block$AbstractBlock#AbstractBlock()";
  "org.jfree.chart.title$Title#equals(java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart$JFreeChart#getSubtitle(int)";
  "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.plot$Plot#addChangeListener(org.jfree.chart.event.PlotChangeListener)";
  "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart$JFreeChart#getSubtitleCount()";
  "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.title$Title#addChangeListener(org.jfree.chart.event.TitleChangeListener)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$JFreeChart#getSubtitleCount()";
  "org.jfree.chart.plot$PiePlot#setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getRangeAxis()" -> "org.jfree.chart.plot$XYPlot#getRangeAxis(int)";
  "org.jfree.chart.plot$MultiplePiePlot#prefetchSectionPaints()" -> "org.jfree.chart.plot$Plot#getDrawingSupplier()";
  "org.jfree.chart.plot$MultiplePiePlot#prefetchSectionPaints()" -> "org.jfree.chart.plot$PiePlot#getSectionPaint(java.lang.Comparable)";
  "org.jfree.chart.plot$MultiplePiePlot#prefetchSectionPaints()" -> "org.jfree.chart$JFreeChart#getPlot()";
  "org.jfree.chart.plot$MultiplePiePlot#prefetchSectionPaints()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#getNextPaint()";
  "org.jfree.chart.plot$MultiplePiePlot#prefetchSectionPaints()" -> "org.jfree.chart.plot$MultiplePiePlot#getPieChart()";
  "org.jfree.chart.plot$Plot#getDrawingSupplier()" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis(int)";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.plot$PolarPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getDefaultAutoRange()";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.axis$Axis#getPlot()";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getAutoRangeMinimumSize()";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.axis$NumberAxis#getAutoRangeIncludesZero()";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getFixedAutoRange()";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.axis$NumberAxis#getAutoRangeStickyZero()";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getUpperMargin()";
  "org.jfree.chart.axis$NumberAxis#autoAdjustRange()" -> "org.jfree.chart.axis$ValueAxis#getLowerMargin()";
  "org.jfree.chart.plot$PolarPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset)";
  "org.jfree.chart.plot$PolarPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)";
  "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor)";
  "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$G2TextMeasurer#G2TextMeasurer(java.awt.Graphics2D)";
  "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,org.jfree.chart.text.TextMeasurer)";
  "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextBlockAnchor#<clinit>()";
  "org.jfree.chart.plot$Plot#setBackgroundAlpha(float)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$Plot#setBackgroundAlpha(float)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.plot$XYPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.block$RectangleConstraint#toFixedHeight(double)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#toFixedHeight(double)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.block$RectangleConstraint#toFixedHeight(double)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$LengthConstraintType#<clinit>()" -> "org.jfree.chart.block$LengthConstraintType#LengthConstraintType(java.lang.String)";
  "org.jfree.chart.plot$CategoryPlot#getLegendItems()" -> "org.jfree.chart.plot$CategoryPlot#getDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)";
  "org.jfree.chart.plot$CategoryPlot#getLegendItems()" -> "org.jfree.chart.plot$CategoryPlot#getRenderer(int)";
  "org.jfree.chart.plot$CategoryPlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#LegendItemCollection()";
  "org.jfree.chart.plot$CategoryPlot#getLegendItems()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#getDataset(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#getDataset(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositionOffset(int)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone)" -> "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double)";
  "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone)" -> "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)";
  "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone)" -> "org.jfree.chart.axis$ValueAxis#ValueAxis(java.lang.String,org.jfree.chart.axis.TickUnitSource)";
  "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone)" -> "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone)";
  "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.plot$XYPlot#addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$Marker#addChangeListener(org.jfree.chart.event.MarkerChangeListener)";
  "org.jfree.chart.plot$XYPlot#addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.block$LineBorder#LineBorder()" -> "org.jfree.chart.block$LineBorder#LineBorder(java.awt.Paint,java.awt.Stroke,org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart.block$LineBorder#LineBorder()" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.block$LineBorder#LineBorder()" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.title$Title#hashCode()" -> "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)";
  "org.jfree.chart.title$Title#hashCode()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$RectangleEdge#coordinate(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.text$TextLine#calculateDimensions(java.awt.Graphics2D)";
  "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.plot$Plot#getRectX(double,double,double,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlotState#getPieCenterY()";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlotState#getLinkArea()";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.text$G2TextMeasurer#G2TextMeasurer(java.awt.Graphics2D)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PieLabelDistributor#distributeLabels(double,double)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#clear()";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#addPieLabelRecord(org.jfree.chart.plot.PieLabelRecord)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#getItemCount()";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#drawLeftLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,org.jfree.chart.text.TextMeasurer)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getExplodePercent(java.lang.Comparable)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)";
  "org.jfree.chart.block$RectangleConstraint#<clinit>()" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.block$RectangleConstraint#<clinit>()" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.plot$XYPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.plot$CategoryPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()";
  "org.jfree.chart.plot$CategoryPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.plot$PolarPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)";
  "org.jfree.chart.plot$XYPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)" -> "org.jfree.chart.block$BlockContainer#BlockContainer(org.jfree.chart.block.Arrangement)";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)" -> "org.jfree.chart.title$LegendTitle#<clinit>()";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)" -> "org.jfree.chart.title$Title#Title()";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable,boolean)";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.chart.plot$PiePlot#getLegendItemShape()";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#LegendItemCollection()";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.chart.plot$PiePlot#getDataset()";
  "org.jfree.chart.plot$PiePlot#getLegendItems()" -> "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable,boolean)" -> "org.jfree.chart.plot$Plot#getDrawingSupplier()";
  "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable,boolean)" -> "org.jfree.chart$PaintMap#put(java.lang.Comparable,java.awt.Paint)";
  "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable,boolean)" -> "org.jfree.chart$PaintMap#getPaint(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable,boolean)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#getNextPaint()";
  "org.jfree.chart.block$LengthConstraintType#equals(java.lang.Object)" -> "org.jfree.chart.block$LengthConstraintType#toString()";
  "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#clearRangeAxes()" -> "org.jfree.chart.util$AbstractObjectList#clear()";
  "org.jfree.chart.plot$CategoryPlot#clearRangeAxes()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#clearRangeAxes()" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#clearRangeAxes()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#clearRangeAxes()" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#clearRangeAxes()" -> "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart.plot$PiePlot#drawLeftLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)" -> "org.jfree.chart.plot$PiePlotState#getPieWRadius()";
  "org.jfree.chart.plot$PiePlot#drawLeftLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)" -> "org.jfree.chart.plot$PiePlotState#getPieCenterX()";
  "org.jfree.chart.plot$PiePlot#drawLeftLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)" -> "org.jfree.chart.plot$PiePlotState#getLinkArea()";
  "org.jfree.chart.plot$PiePlot#drawLeftLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)" -> "org.jfree.chart.plot$PiePlotState#getPieCenterY()";
  "org.jfree.chart.plot$PiePlot#drawLeftLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.plot$PiePlot#drawLeftLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)" -> "org.jfree.chart.plot$PiePlotState#getPieHRadius()";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.title$TextTitle#drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#trimMargin(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockResult#BlockResult()";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockResult#setEntityCollection(org.jfree.chart.entity.EntityCollection)";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#trimPadding(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.title$TextTitle#drawVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String,java.lang.String)";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#trimBorder(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockParams#getGenerateEntities()";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.title$Title#getPosition()";
  "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot3D#PiePlot3D(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$MultiplePiePlot#setPieChart(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.title$TextTitle#<clinit>()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setOutlineStroke(java.awt.Stroke)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$MultiplePiePlot#setDataExtractOrder(org.jfree.chart.util.TableOrder)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.title$Title#setPosition(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setURLGenerator(org.jfree.chart.urls.PieURLGenerator)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setBackgroundPaint(java.awt.Paint)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$MultiplePiePlot#getPieChart()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#getPlot()";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)";
  "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$PolarPlot#setRenderer(org.jfree.chart.renderer.PolarItemRenderer)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PolarPlot#setRenderer(org.jfree.chart.renderer.PolarItemRenderer)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double,boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double,boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double,boolean)" -> "org.jfree.chart.plot$XYPlot#isDomainCrosshairVisible()";
  "org.jfree.chart.util$RectangleInsets#<clinit>()" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(org.jfree.chart.util.UnitType,double,double,double,double)";
  "org.jfree.chart.util$RectangleInsets#<clinit>()" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.axis$Axis#Axis(java.lang.String)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#setRadiusGridlinePaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#setRadiusGridlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)";
  "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.plot$CategoryPlot#getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)";
  "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getPlot()";
  "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)";
  "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)";
  "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setRange(double,double)";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.util.Locale)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.util.Locale)";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.util.Locale)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)";
  "org.jfree.chart.plot$PolarPlot#setRadiusGridlineStroke(java.awt.Stroke)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#setRadiusGridlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$PolarPlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#LegendItemCollection()";
  "org.jfree.chart.plot$PolarPlot#getLegendItems()" -> "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)";
  "org.jfree.chart.block$RectangleConstraint#toUnconstrainedHeight()" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#toUnconstrainedHeight()" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.block$RectangleConstraint#toUnconstrainedHeight()" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateAxis#getDateFormatOverride()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.util$RectangleInsets#getLeft()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$Axis#getTickLabelInsets()";
  "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.util$RectangleInsets#getRight()";
  "org.jfree.chart.plot$CategoryPlot#setDatasetRenderingOrder(org.jfree.chart.plot.DatasetRenderingOrder)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setDatasetRenderingOrder(org.jfree.chart.plot.DatasetRenderingOrder)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator()" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)";
  "org.jfree.chart.plot$XYPlot#getRangeAxisLocation(int)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisLocation()";
  "org.jfree.chart.plot$XYPlot#getRangeAxisLocation(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#getRangeAxisLocation(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$PolarPlot#<clinit>()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getPlot()";
  "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer()";
  "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isVisible()";
  "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.block$AbstractBlock#calculateTotalHeight(double)" -> "org.jfree.chart.util$RectangleInsets#extendHeight(double)";
  "org.jfree.chart.block$AbstractBlock#calculateTotalHeight(double)" -> "org.jfree.chart.block$LineBorder#getInsets()";
  "org.jfree.chart.block$AbstractBlock#calculateTotalHeight(double)" -> "org.jfree.chart.block$BlockBorder#getInsets()";
  "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$PiePlot#setLabelLinksVisible(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PiePlot#setLabelLinksVisible(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setWeight(int)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setWeight(int)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.util$Rotation#readResolve()" -> "org.jfree.chart.util$Rotation#equals(java.lang.Object)";
  "org.jfree.chart.util$Rotation#readResolve()" -> "org.jfree.chart.util$Rotation#<clinit>()";
  "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)" -> "org.jfree.chart.plot$Plot#equals(java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits()" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits()" -> "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone)";
  "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits()" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits()" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart.plot$PiePlot#setBaseSectionOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setBaseSectionOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart$JFreeChart#getLegend()" -> "org.jfree.chart$JFreeChart#getLegend(int)";
  "org.jfree.chart.plot$PiePlot#setLabelLinkMargin(double)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setLabelLinkMargin(double)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#getPlotType()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#getPlotType()" -> "org.jfree.chart.plot$PolarPlot#<clinit>()";
  "org.jfree.chart.title$TextTitle#drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor)";
  "org.jfree.chart.title$TextTitle#drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$HorizontalAlignment#<clinit>()";
  "org.jfree.chart.title$TextTitle#drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.title$Title#getHorizontalAlignment()";
  "org.jfree.chart.title$TextTitle#drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.title$Title#getPosition()";
  "org.jfree.chart.title$TextTitle#drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.title$TextTitle#drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextBlockAnchor#<clinit>()";
  "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)" -> "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)";
  "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.plot$XYPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.block$FlowArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthRange()";
  "org.jfree.chart.block$FlowArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)";
  "org.jfree.chart.block$FlowArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.block$FlowArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.block$FlowArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#toFixedWidth(double)";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextFragment#getText()";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font,java.awt.Paint)";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextBlock#getLastLine()";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextFragment#getFont()";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextLine#getLastTextFragment()";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextFragment#getPaint()";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextFragment#<clinit>()";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextUtilities#nextLineBreak(java.lang.String,int,float,java.text.BreakIterator,org.jfree.chart.text.TextMeasurer)";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextLine#addFragment(org.jfree.chart.text.TextFragment)";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextBlock#TextBlock()";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextLine#removeFragment(org.jfree.chart.text.TextFragment)";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextBlock#addLine(java.lang.String,java.awt.Font,java.awt.Paint)";
  "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#createStandardSeriesShapes()";
  "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()" -> "org.jfree.chart$ChartColor#<clinit>()";
  "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()" -> "org.jfree.chart$ChartColor#createDefaultPaintArray()";
  "org.jfree.chart.plot$DefaultDrawingSupplier#createStandardSeriesShapes()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double)";
  "org.jfree.chart.plot$DefaultDrawingSupplier#createStandardSeriesShapes()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()";
  "org.jfree.chart.plot$DefaultDrawingSupplier#createStandardSeriesShapes()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double,double)";
  "org.jfree.chart.plot$PiePlot#setBaseSectionOutlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setBaseSectionOutlinePaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$JFreeChart#setNotify(boolean)" -> "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)";
  "org.jfree.chart$JFreeChart#setNotify(boolean)" -> "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)";
  "org.jfree.chart.plot$PiePlot#setLegendLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setLegendLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$Plot#axisChanged(org.jfree.chart.event.AxisChangeEvent)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$Plot#axisChanged(org.jfree.chart.event.AxisChangeEvent)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)" -> "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)";
  "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)" -> "org.jfree.chart.plot$Plot#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#setColumnRenderingOrder(org.jfree.chart.util.SortOrder)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#setColumnRenderingOrder(org.jfree.chart.util.SortOrder)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.axis$CategoryAxis3D#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis3D#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis3D#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getPlot()";
  "org.jfree.chart.axis$CategoryAxis3D#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis3D#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis3D#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer()";
  "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#calculateCategoryGapSize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getLowerMargin()";
  "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double)" -> "org.jfree.chart.block$BlockBorder#BlockBorder(org.jfree.chart.util.RectangleInsets,java.awt.Paint)";
  "org.jfree.chart.plot$PiePlot#setLabelOutlinePaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PiePlot#setLabelOutlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$PolarPlot#zoom(double)";
  "org.jfree.chart.plot$PolarPlot#zoom(double)" -> "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean)";
  "org.jfree.chart.plot$PolarPlot#zoom(double)" -> "org.jfree.chart.axis$ValueAxis#setUpperBound(double)";
  "org.jfree.chart.plot$PolarPlot#zoom(double)" -> "org.jfree.chart.plot$PolarPlot#getMaxRadius()";
  "org.jfree.chart.plot$PolarPlot#zoom(double)" -> "org.jfree.chart.plot$PolarPlot#getAxis()";
  "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)";
  "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation(int)";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.util$RectangleEdge#opposite(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#PolarPlot()" -> "org.jfree.chart.plot$PolarPlot#PolarPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.PolarItemRenderer)";
  "org.jfree.chart.title$TextTitle#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$TextTitle#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#createBufferedImage(int,int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$ValueAxis#resizeRange(double)";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)" -> "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisLocation(int)";
  "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()";
  "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)" -> "org.jfree.chart.util$RectangleEdge#opposite(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isVisible()";
  "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$ValueAxis#setLowerBound(double)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#setLowerBound(double)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$ValueAxis#setLowerBound(double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$ValueAxis#setLowerBound(double)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.plot$RingPlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlotState#setPassesRequired(int)";
  "org.jfree.chart.plot$RingPlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)" -> "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean)";
  "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)" -> "org.jfree.data$Range#getLength()";
  "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getDataset()";
  "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getDomainGridlinePaint()";
  "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxis()";
  "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge()";
  "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getDomainGridlinePosition()";
  "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$CategoryAxis3D#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#isDomainGridlinesVisible()";
  "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getDomainGridlineStroke()";
  "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer()";
  "org.jfree.chart.plot$CategoryPlot#getDataset()" -> "org.jfree.chart.plot$CategoryPlot#getDataset(int)";
  "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)";
  "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)" -> "org.jfree.chart.plot$XYPlot#configureRangeAxes()";
  "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)" -> "org.jfree.chart.plot$XYPlot#getRenderer(int)";
  "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)" -> "org.jfree.chart.plot$XYPlot#configureDomainAxes()";
  "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.axis$ValueAxis#lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$ValueAxis#lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font,java.awt.Paint)" -> "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font,java.awt.Paint,float)";
  "org.jfree.chart.axis$Axis#setVisible(boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.text$TextLine#TextLine(java.lang.String)" -> "org.jfree.chart.text$TextFragment#<clinit>()";
  "org.jfree.chart.text$TextLine#TextLine(java.lang.String)" -> "org.jfree.chart.text$TextLine#TextLine(java.lang.String,java.awt.Font)";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis(int)";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$Marker#addChangeListener(org.jfree.chart.event.MarkerChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot3D#equals(java.lang.Object)" -> "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)";
  "org.jfree.chart.plot$PiePlot#drawRightLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)" -> "org.jfree.chart.plot$PiePlotState#getPieHRadius()";
  "org.jfree.chart.plot$PiePlot#drawRightLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)" -> "org.jfree.chart.plot$PiePlotState#getLinkArea()";
  "org.jfree.chart.plot$PiePlot#drawRightLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)" -> "org.jfree.chart.plot$PiePlotState#getPieCenterY()";
  "org.jfree.chart.plot$PiePlot#drawRightLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)" -> "org.jfree.chart.plot$PiePlotState#getPieWRadius()";
  "org.jfree.chart.plot$PiePlot#drawRightLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)" -> "org.jfree.chart.plot$PiePlotState#getPieCenterX()";
  "org.jfree.chart.plot$PiePlot#drawRightLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D)" -> "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D)" -> "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D)" -> "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D)" -> "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#convertName(java.lang.String,java.lang.Class)";
  "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)" -> "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)";
  "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$PlotOrientation#equals(java.lang.Object)" -> "org.jfree.chart.plot$PlotOrientation#toString()";
  "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double)" -> "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double,boolean)";
  "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor)" -> "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.block$BlockContainer#BlockContainer(org.jfree.chart.block.Arrangement)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block,java.lang.Object)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.title$LegendTitle#getLegendItemGraphicAnchor()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block)";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.title$LegendTitle#getLegendItemGraphicLocation()";
  "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)" -> "org.jfree.chart.block$AbstractBlock#setPadding(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart.plot$XYPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#indexOf(java.lang.Object)";
  "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.plot$CategoryPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart.axis$DateAxis#calculateLowestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateAxis#nextStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)";
  "org.jfree.chart.axis$DateAxis#calculateLowestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateAxis#getMinimumDate()";
  "org.jfree.chart.axis$DateAxis#nextStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateAxis#previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)";
  "org.jfree.chart.block$BlockContainer#clear()" -> "org.jfree.chart.block$FlowArrangement#clear()";
  "org.jfree.chart.block$BlockContainer#clear()" -> "org.jfree.chart.block$ColumnArrangement#clear()";
  "org.jfree.chart.util$ObjectUtilities#setClassLoaderSource(java.lang.String)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.labels$AbstractPieItemLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.block$BlockResult#getEntityCollection()";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.util$HorizontalAlignment#<clinit>()";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.title$Title#getHorizontalAlignment()";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.block$BlockParams#BlockParams()";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.util$VerticalAlignment#<clinit>()";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.block$BlockParams#setGenerateEntities(boolean)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart$JFreeChart#createAlignedRectangle2D(org.jfree.chart.util.Size2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.title$Title#getPosition()";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.title$Title#getVerticalAlignment()";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#trimPadding(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockBorder#getInsets()";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$LineBorder#getInsets()";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#getFrame()";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$BlockBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#trimMargin(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block)" -> "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.block$LineBorder#getPaint()";
  "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)";
  "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)";
  "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)";
  "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)";
  "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.block$LineBorder#getStroke()";
  "org.jfree.data.general$DatasetUtilities#createPieDatasetForColumn(org.jfree.data.category.CategoryDataset,java.lang.Comparable)" -> "org.jfree.data.general$DatasetUtilities#createPieDatasetForColumn(org.jfree.data.category.CategoryDataset,int)";
  "org.jfree.chart.plot$XYPlot#getRenderer()" -> "org.jfree.chart.plot$XYPlot#getRenderer(int)";
  "org.jfree.chart.plot$MultiplePiePlot#setPieChart(org.jfree.chart.JFreeChart)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$MultiplePiePlot#setPieChart(org.jfree.chart.JFreeChart)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$MultiplePiePlot#setPieChart(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$JFreeChart#getPlot()";
  "org.jfree.chart.util$RectangleInsets#extendHeight(double)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)";
  "org.jfree.chart.util$RectangleInsets#extendHeight(double)" -> "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)";
  "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.plot$PiePlot#setInteriorGap(double)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setInteriorGap(double)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)";
  "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart.plot$PiePlot#setURLGenerator(org.jfree.chart.urls.PieURLGenerator)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setURLGenerator(org.jfree.chart.urls.PieURLGenerator)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.util$RectangleInsets#hashCode()" -> "org.jfree.chart.util$UnitType#hashCode()";
  "org.jfree.chart.block$RectangleConstraint#calculateConstrainedSize(org.jfree.chart.util.Size2D)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#calculateConstrainedSize(org.jfree.chart.util.Size2D)" -> "org.jfree.data$Range#constrain(double)";
  "org.jfree.chart.block$RectangleConstraint#calculateConstrainedSize(org.jfree.chart.util.Size2D)" -> "org.jfree.chart.util$Size2D#Size2D()";
  "org.jfree.chart.block$RectangleConstraint#toUnconstrainedWidth()" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#toUnconstrainedWidth()" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#toUnconstrainedWidth()" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.plot$PiePlot#setLabelFont(java.awt.Font)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PiePlot#setLabelFont(java.awt.Font)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setDataset(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setDataset(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.plot$Plot#setDatasetGroup(org.jfree.data.general.DatasetGroup)";
  "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart.plot$PiePlot#setLegendItemShape(java.awt.Shape)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setLegendItemShape(java.awt.Shape)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisForDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer(int)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisForDataset(int)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis()";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisForDataset(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisForDataset(int)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)";
  "org.jfree.chart.plot$CategoryPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CategoryPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis()";
  "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation()";
  "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double)";
  "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double)";
  "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.xy.TableXYDataset)" -> "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)";
  "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])" -> "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$Plot#setOutlineVisible(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$Plot#setOutlineVisible(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.axis$NumberAxis#calculateVisibleTickCount()" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$NumberAxis#calculateVisibleTickCount()" -> "org.jfree.chart.axis$NumberAxis#getTickUnit()";
  "org.jfree.chart.axis$NumberAxis#calculateVisibleTickCount()" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$NumberAxis#calculateVisibleTickCount()" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.plot$CategoryPlot#setDomainGridlineStroke(java.awt.Stroke)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#setDomainGridlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.axis$ValueAxis#getLowerBound()" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$CategoryAxis#clone()" -> "org.jfree.chart.axis$Axis#clone()";
  "org.jfree.chart.plot$RingPlot#RingPlot(org.jfree.data.general.PieDataset)" -> "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#Size2D()";
  "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$ColumnArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightConstraintType()";
  "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthConstraintType()";
  "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)";
  "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$ColumnArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.util$Size2D#Size2D()" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)";
  "org.jfree.chart.axis$ValueAxis#setUpperBound(double)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#setUpperBound(double)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$ValueAxis#setUpperBound(double)" -> "org.jfree.chart.axis$ValueAxis#setRange(double,double)";
  "org.jfree.chart.axis$ValueAxis#setUpperBound(double)" -> "org.jfree.chart.axis$DateAxis#setRange(double,double)";
  "org.jfree.chart.axis$ValueAxis#setUpperBound(double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$ValueAxis#setUpperBound(double)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)" -> "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)" -> "org.jfree.chart.axis$CategoryAxis#configure()";
  "org.jfree.chart.axis$NumberAxis#setAutoRangeStickyZero(boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$NumberAxis#setAutoRangeStickyZero(boolean)" -> "org.jfree.chart.axis$ValueAxis#isAutoRange()";
  "org.jfree.chart.axis$NumberAxis#setAutoRangeStickyZero(boolean)" -> "org.jfree.chart.axis$NumberAxis#autoAdjustRange()";
  "org.jfree.chart$StrokeMap#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart$StrokeMap#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart$StrokeMap#equals(java.lang.Object)" -> "org.jfree.chart$StrokeMap#getStroke(java.lang.Comparable)";
  "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isVisible()";
  "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer()";
  "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getPlot()";
  "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)" -> "org.jfree.data$Range#shiftWithNoZeroCrossing(double,double)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getLabelFont()";
  "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)";
  "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)";
  "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.util$Rotation#getFactor()";
  "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.util$RectangleInsets#trimWidth(double)";
  "org.jfree.chart.plot$PiePlot#setLabelPaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PiePlot#setLabelPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#equalShapes(java.awt.Shape[],java.awt.Shape[])";
  "org.jfree.chart.plot$XYPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#isRangeZeroBaselineVisible()";
  "org.jfree.chart.plot$XYPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getRenderer()";
  "org.jfree.chart.plot$XYPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart$JFreeChart#removeLegend()" -> "org.jfree.chart$JFreeChart#getLegend()";
  "org.jfree.chart$JFreeChart#removeLegend()" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart.block$AbstractBlock#trimPadding(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairVisible(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairVisible(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#clearDomainAxes()" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#clearDomainAxes()" -> "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$XYPlot#clearDomainAxes()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#clearDomainAxes()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#clearDomainAxes()" -> "org.jfree.chart.util$AbstractObjectList#clear()";
  "org.jfree.chart.plot$XYPlot#clearDomainAxes()" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.block$BlockBorder#equals(java.lang.Object)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart.util$RectangleEdge#readResolve()" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.util$RectangleEdge#readResolve()" -> "org.jfree.chart.util$RectangleEdge#equals(java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairValue()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getDatasetRenderingOrder()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisForDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairPaint()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer(int)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getForegroundAlpha()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#getInsets()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairStroke()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#isRangeCrosshairVisible()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisForDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getOrientation()";
  "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)";
  "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)";
  "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets,boolean)";
  "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets,boolean)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets,boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets,boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$DateAxis#zoomRange(double,double)";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.util$RectangleInsets#getRight()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.util$RectangleInsets#getLeft()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.axis$NumberAxis#getNumberFormatOverride()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.axis$Axis#getTickLabelInsets()";
  "org.jfree.chart.plot$XYPlot#getDomainAxisForDataset(int)" -> "org.jfree.chart.plot$XYPlot#getDatasetCount()";
  "org.jfree.chart.plot$XYPlot#getDomainAxisForDataset(int)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis(int)";
  "org.jfree.chart.plot$XYPlot#getDatasetCount()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisForDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisForDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.category.CategoryDataset)";
  "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer(int)";
  "org.jfree.chart.text$G2TextMeasurer#getStringWidth(java.lang.String,int,int)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$G2TextMeasurer#getStringWidth(java.lang.String,int,int)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.util$ObjectList#ObjectList()" -> "org.jfree.chart.util$AbstractObjectList#AbstractObjectList()";
  "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)" -> "org.jfree.chart.block$BlockBorder#equals(java.lang.Object)";
  "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)" -> "org.jfree.chart.block$LineBorder#equals(java.lang.Object)";
  "org.jfree.chart.plot$PolarPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.axis$CategoryAxis#getTickLabelFont(java.lang.Comparable)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.plot$Plot#equals(java.lang.Object)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)";
  "org.jfree.chart.plot$Plot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$Plot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#setRangeTickBandPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setRangeTickBandPaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset)";
  "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#getDatasetsMappedToRangeAxis(java.lang.Integer)";
  "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)";
  "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset)";
  "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#getRendererForDataset(org.jfree.data.xy.XYDataset)";
  "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#getDatasetsMappedToDomainAxis(java.lang.Integer)";
  "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)" -> "org.jfree.chart.title$TextTitle#<clinit>()";
  "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)" -> "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font,java.awt.Paint,org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart.plot$XYPlot#configureRangeAxes()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#configureRangeAxes()" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.plot$XYPlot#configureRangeAxes()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#configureRangeAxes()" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.text$TextLine#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)" -> "org.jfree.chart.text$TextFragment#calculateDimensions(java.awt.Graphics2D)";
  "org.jfree.chart.text$TextLine#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.text$TextLine#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)" -> "org.jfree.chart.text$TextFragment#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)";
  "org.jfree.chart.text$TextLine#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)" -> "org.jfree.chart.text$TextLine#calculateBaselineOffset(java.awt.Graphics2D,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.text$TextLine#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.text$TextFragment#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextFragment#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.text$TextFragment#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.plot$CategoryPlot#getRenderer(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#getRenderer(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#clone()" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#clone()";
  "org.jfree.chart.plot$PolarPlot#setAngleGridlineStroke(java.awt.Stroke)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#setAngleGridlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.title$LegendTitle#setItemFont(java.awt.Font)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$LegendTitle#setItemFont(java.awt.Font)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#get(int)";
  "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#getRangeAxis(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#getRangeAxis(int)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.plot$XYPlot#getRangeAxis(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(org.jfree.data.Range,double)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(org.jfree.data.Range,double)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightConstraintType()";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#calculateTotalHeight(double)";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightRange()";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#calculateTotalWidth(double)";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthRange()";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthConstraintType()";
  "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.util$HorizontalAlignment#<clinit>()";
  "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.text$TextLine#calculateDimensions(java.awt.Graphics2D)";
  "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.text$TextBlock#calculateOffsets(org.jfree.chart.text.TextBlockAnchor,double,double)";
  "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.text$TextLine#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)";
  "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)" -> "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)";
  "org.jfree.chart.plot$RingPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$RingPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$RingPlot#equals(java.lang.Object)" -> "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setSectionPaint(java.lang.Comparable,java.awt.Paint)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setURLGenerator(org.jfree.chart.urls.PieURLGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.title$TextTitle#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setDataset(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot#setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.util$AbstractObjectList#AbstractObjectList()" -> "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int)";
  "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int)" -> "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int,int)";
  "org.jfree.chart.text$TextAnchor#<clinit>()" -> "org.jfree.chart.text$TextAnchor#TextAnchor(java.lang.String)";
  "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$Marker#addChangeListener(org.jfree.chart.event.MarkerChangeListener)";
  "org.jfree.chart.text$TextUtilities#nextLineBreak(java.lang.String,int,float,java.text.BreakIterator,org.jfree.chart.text.TextMeasurer)" -> "org.jfree.chart.text$G2TextMeasurer#getStringWidth(java.lang.String,int,int)";
  "org.jfree.chart.ui$BasicProjectInfo#setInfo(java.lang.String)" -> "org.jfree.chart.ui$Library#setInfo(java.lang.String)";
  "org.jfree.chart.plot$XYPlot#configureDomainAxes()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#configureDomainAxes()" -> "org.jfree.chart.axis$DateAxis#configure()";
  "org.jfree.chart.plot$XYPlot#configureDomainAxes()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#configureDomainAxes()" -> "org.jfree.chart.axis$NumberAxis#configure()";
  "org.jfree.chart.axis$ValueAxis#clone()" -> "org.jfree.chart.axis$Axis#clone()";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleAnchor#coordinates(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleAnchor)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryLabelToolTip(java.lang.Comparable)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis#getTickLabelPaint(java.lang.Comparable)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis#getTickLabelFont(java.lang.Comparable)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#equals(java.lang.Object)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.text$TextBlock#calculateBounds(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)";
  "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$Axis#isTickLabelsVisible()";
  "org.jfree.chart.text$TextUtilities#drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#mapDatasetToRangeAxis(int,int)" -> "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$XYPlot#mapDatasetToRangeAxis(int,int)" -> "org.jfree.chart.plot$XYPlot#getDataset(int)";
  "org.jfree.chart.plot$PiePlot#PiePlot()" -> "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone)";
  "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font,java.awt.Paint,org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.block$AbstractBlock#setPadding(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.block$AbstractBlock#AbstractBlock()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.util$RectangleInsets#getBottom()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.axis$Axis#getTickLabelInsets()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.util$RectangleInsets#getTop()";
  "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxis(int,int)" -> "org.jfree.chart.plot$CategoryPlot#getDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxis(int,int)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxis(int,int)" -> "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.util$UnitType#<clinit>()" -> "org.jfree.chart.util$UnitType#UnitType(java.lang.String)";
  "org.jfree.chart.event$ChartChangeEventType#equals(java.lang.Object)" -> "org.jfree.chart.event$ChartChangeEventType#toString()";
  "org.jfree.chart.axis$CategoryAxis#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.axis$CategoryAxis#readPaintMap(java.io.ObjectInputStream)";
  "org.jfree.chart.block$AbstractBlock#trimToContentWidth(double)" -> "org.jfree.chart.util$RectangleInsets#trimWidth(double)";
  "org.jfree.chart.block$AbstractBlock#trimToContentWidth(double)" -> "org.jfree.chart.block$BlockBorder#getInsets()";
  "org.jfree.chart.block$AbstractBlock#trimToContentWidth(double)" -> "org.jfree.chart.block$LineBorder#getInsets()";
  "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.axis$DateAxis#clone()" -> "org.jfree.chart.axis$ValueAxis#clone()";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)";
  "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.block$BlockBorder#BlockBorder(java.awt.Paint)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.block$BlockBorder#BlockBorder(java.awt.Paint)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.block$BlockBorder#BlockBorder(java.awt.Paint)" -> "org.jfree.chart.block$BlockBorder#BlockBorder(org.jfree.chart.util.RectangleInsets,java.awt.Paint)";
  "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getRenderer()";
  "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getDomainGridlineStroke()";
  "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getDomainGridlinePaint()";
  "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#isDomainGridlinesVisible()";
  "org.jfree.chart.title$TextTitle#hashCode()" -> "org.jfree.chart.title$Title#hashCode()";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#getAttributedLabel(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#setRangeCrosshairPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setRangeCrosshairPaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$JFreeChart#addSubtitle(int,org.jfree.chart.title.Title)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart$JFreeChart#addSubtitle(int,org.jfree.chart.title.Title)" -> "org.jfree.chart.title$Title#addChangeListener(org.jfree.chart.event.TitleChangeListener)";
  "org.jfree.chart$JFreeChart#addSubtitle(int,org.jfree.chart.title.Title)" -> "org.jfree.chart$JFreeChart#getSubtitleCount()";
  "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)";
  "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)";
  "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)";
  "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)";
  "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.axis$DateAxis#setTimeZone(java.util.TimeZone)" -> "org.jfree.chart.axis$ValueAxis#setStandardTickUnits(org.jfree.chart.axis.TickUnitSource)";
  "org.jfree.chart.axis$DateAxis#setTimeZone(java.util.TimeZone)" -> "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone)";
  "org.jfree.chart.axis$DateAxis#setTimeZone(java.util.TimeZone)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$DateAxis#setTimeZone(java.util.TimeZone)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.axis$DateAxis#setTimeZone(java.util.TimeZone)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart.axis$DateAxis#setTimeZone(java.util.TimeZone)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#setStandardTickUnits(org.jfree.chart.axis.TickUnitSource)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.axis$NumberAxis#hashCode()" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,org.jfree.chart.text.TextMeasurer)";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#getExplodePercent(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#getItemCount()";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#addPieLabelRecord(org.jfree.chart.plot.PieLabelRecord)";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.text$G2TextMeasurer#G2TextMeasurer(java.awt.Graphics2D)";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PieLabelDistributor#distributeLabels(double,double)";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlotState#getLinkArea()";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlotState#getPieCenterY()";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#clear()";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$PiePlot#drawRightLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)";
  "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)";
  "org.jfree.chart.plot$CategoryPlot#getPlotType()" -> "org.jfree.chart.plot$CategoryPlot#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#getPlotType()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart.event$ChartChangeEvent#setChart(org.jfree.chart.JFreeChart)";
  "org.jfree.chart.block$RectangleConstraint#toFixedWidth(double)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#toFixedWidth(double)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#toFixedWidth(double)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.plot$CategoryPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$CategoryPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisForDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer(int)";
  "org.jfree.chart.block$FlowArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart)" -> "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart,org.jfree.chart.event.ChartChangeEventType)";
  "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart)" -> "org.jfree.chart.event$ChartChangeEventType#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double,boolean)" -> "org.jfree.chart.plot$XYPlot#isRangeCrosshairVisible()";
  "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double,boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double,boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#setFixedAutoRange(double)" -> "org.jfree.chart.axis$DateAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setFixedAutoRange(double)" -> "org.jfree.chart.axis$ValueAxis#isAutoRange()";
  "org.jfree.chart.axis$ValueAxis#setFixedAutoRange(double)" -> "org.jfree.chart.axis$NumberAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setFixedAutoRange(double)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$Marker#setAlpha(float)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)" -> "org.jfree.chart.plot$Plot#markerChanged(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart.plot$CategoryPlot#datasetsMappedToDomainAxis(int)";
  "org.jfree.chart.util$RectangleInsets#RectangleInsets()" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.plot$CategoryPlot#zoom(double)" -> "org.jfree.chart.axis$ValueAxis#setRange(double,double)";
  "org.jfree.chart.plot$CategoryPlot#zoom(double)" -> "org.jfree.data$Range#getLength()";
  "org.jfree.chart.plot$CategoryPlot#zoom(double)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.plot$CategoryPlot#zoom(double)" -> "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean)";
  "org.jfree.chart.plot$CategoryPlot#zoom(double)" -> "org.jfree.chart.axis$DateAxis#setRange(double,double)";
  "org.jfree.chart.plot$CategoryPlot#zoom(double)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis()";
  "org.jfree.chart.axis$ValueAxis#setRange(double,double)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#setRange(double,double)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#setRange(double,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)" -> "org.jfree.chart.text$G2TextMeasurer#G2TextMeasurer(java.awt.Graphics2D)";
  "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)" -> "org.jfree.chart.axis$CategoryAxis#getTickLabelFont(java.lang.Comparable)";
  "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)" -> "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)";
  "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)" -> "org.jfree.chart.axis$CategoryAxis#getTickLabelPaint(java.lang.Comparable)";
  "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#calculateCategoryGapSize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryMargin()";
  "org.jfree.chart.axis$CategoryAxis#calculateCategoryGapSize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)" -> "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)";
  "org.jfree.chart.plot$PiePlot#setIgnoreZeroValues(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PiePlot#setIgnoreZeroValues(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)";
  "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double,boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double,boolean)" -> "org.jfree.chart.axis$DateAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double,boolean)" -> "org.jfree.chart.axis$NumberAxis#autoAdjustRange()";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable,boolean)" -> "org.jfree.chart$PaintMap#put(java.lang.Comparable,java.awt.Paint)";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable,boolean)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlinePaint()";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable,boolean)" -> "org.jfree.chart$PaintMap#getPaint(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable,boolean)" -> "org.jfree.chart.plot$Plot#getDrawingSupplier()";
  "org.jfree.chart$PaintMap#equals(java.lang.Object)" -> "org.jfree.chart$PaintMap#getPaint(java.lang.Comparable)";
  "org.jfree.chart.plot$Plot#setNoDataMessagePaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$Plot#setNoDataMessagePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.block$AbstractBlock#trimToContentHeight(double)" -> "org.jfree.chart.block$BlockBorder#getInsets()";
  "org.jfree.chart.block$AbstractBlock#trimToContentHeight(double)" -> "org.jfree.chart.block$LineBorder#getInsets()";
  "org.jfree.chart.block$AbstractBlock#trimToContentHeight(double)" -> "org.jfree.chart.util$RectangleInsets#trimHeight(double)";
  "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#setMarkerBand(org.jfree.chart.axis.MarkerAxisBand)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.block$AbstractBlock#getContentXOffset()" -> "org.jfree.chart.util$RectangleInsets#getLeft()";
  "org.jfree.chart.block$AbstractBlock#getContentXOffset()" -> "org.jfree.chart.block$BlockBorder#getInsets()";
  "org.jfree.chart.block$AbstractBlock#getContentXOffset()" -> "org.jfree.chart.block$LineBorder#getInsets()";
  "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range)" -> "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)";
  "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#getCategorySeriesMiddle(java.lang.Comparable,java.lang.Comparable,org.jfree.data.category.CategoryDataset,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#getCategorySeriesMiddle(java.lang.Comparable,java.lang.Comparable,org.jfree.data.category.CategoryDataset,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double,java.awt.Paint)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double,java.awt.Paint)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double,java.awt.Paint)" -> "org.jfree.chart.block$BlockBorder#BlockBorder(org.jfree.chart.util.RectangleInsets,java.awt.Paint)";
  "org.jfree.chart.block$AbstractBlock#trimBorder(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$AbstractBlock#trimBorder(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.block$BlockBorder#getInsets()";
  "org.jfree.chart.block$AbstractBlock#trimBorder(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.block$LineBorder#getInsets()";
  "org.jfree.chart.text$TextLine#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.text$TextLine#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.text$TextLine#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.text$TextFragment#calculateDimensions(java.awt.Graphics2D)";
  "org.jfree.chart.text$TextLine#calculateDimensions(java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.title$TextTitle#<clinit>()" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart$JFreeChart#setTitle(java.lang.String)" -> "org.jfree.chart.title$TextTitle#<clinit>()";
  "org.jfree.chart$JFreeChart#setTitle(java.lang.String)" -> "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)";
  "org.jfree.chart$JFreeChart#setTitle(java.lang.String)" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.chart$JFreeChart#setTitle(java.lang.String)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart$JFreeChart#setTitle(java.lang.String)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$JFreeChart#setTitle(java.lang.String)" -> "org.jfree.chart.title$TextTitle#setText(java.lang.String)";
  "org.jfree.chart.block$ColumnArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.axis$DateAxis#hashCode()" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)" -> "org.jfree.chart.axis$DateAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)" -> "org.jfree.chart.axis$ValueAxis#isAutoRange()";
  "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)" -> "org.jfree.chart.axis$NumberAxis#autoAdjustRange()";
  "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#isInverted()";
  "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data$Range#getLowerBound()";
  "org.jfree.chart.plot$ValueMarker#setValue(double)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#isTickLabelsVisible()";
  "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#isVisible()";
  "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.block$AbstractBlock#trimMargin(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PiePlot3D#setDarkerSides(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot3D#setDarkerSides(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.data.general$DatasetUtilities#iterateXYRangeBounds(org.jfree.data.xy.XYDataset)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$CategoryAxis3D#clone()" -> "org.jfree.chart.axis$CategoryAxis#clone()";
  "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BlockContainer#getBlocks()";
  "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#setBounds(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidth()";
  "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#Size2D(double,double)";
  "org.jfree.chart.plot$CategoryPlot#setDataset(int,org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setDataset(int,org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#setDataset(int,org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#setDataset(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.plot$CategoryPlot#setDataset(int,org.jfree.data.category.CategoryDataset)";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$DateAxis#zoomRange(double,double)";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)";
  "org.jfree.chart.plot$RingPlot#RingPlot()" -> "org.jfree.chart.plot$RingPlot#RingPlot(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.data$Range#getLength()";
  "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)";
  "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getStandardTickUnits()";
  "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)";
  "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.plot$PiePlot#setShadowPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setShadowPaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.axis$ValueAxis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getAxisLinePaint()";
  "org.jfree.chart.axis$ValueAxis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getAxisLineStroke()";
  "org.jfree.chart.plot$MultiplePiePlot#setAggregatedItemsKey(java.lang.Comparable)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$MultiplePiePlot#setAggregatedItemsKey(java.lang.Comparable)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$Marker#setOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$NumberAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$DateAxis#<clinit>()";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)";
  "org.jfree.chart.plot$Marker#setLabelTextAnchor(org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.plot$Plot#setNoDataMessage(java.lang.String)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$Plot#setNoDataMessage(java.lang.String)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)" -> "org.jfree.chart.axis$Axis#equals(java.lang.Object)";
  "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)" -> "org.jfree.chart.axis$CategoryAxis#equalPaintMaps(java.util.Map,java.util.Map)";
  "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$RectangleInsets#trimWidth(double)" -> "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)";
  "org.jfree.chart.util$RectangleInsets#trimWidth(double)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)";
  "org.jfree.chart.plot$Plot#setBackgroundImage(java.awt.Image)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$Plot#setBackgroundImage(java.awt.Image)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.util$RectangleInsets#getBottom()";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.axis$Axis#getTickLabelInsets()";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.util$RectangleInsets#getTop()";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.axis$CategoryAxis3D#CategoryAxis3D()" -> "org.jfree.chart.axis$CategoryAxis3D#CategoryAxis3D(java.lang.String)";
  "org.jfree.chart.plot$CategoryPlot#setFixedLegendItems(org.jfree.chart.LegendItemCollection)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setFixedLegendItems(org.jfree.chart.LegendItemCollection)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.text$TextFragment#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)" -> "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,float,float)";
  "org.jfree.chart.text$TextFragment#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)" -> "org.jfree.chart.axis$NumberAxis#autoAdjustRange()";
  "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)" -> "org.jfree.chart.axis$ValueAxis#isAutoRange()";
  "org.jfree.chart.plot$Plot#setForegroundAlpha(float)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$Plot#setForegroundAlpha(float)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#drawDomainTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.axis$ValueAxis#getLowerBound()";
  "org.jfree.chart.plot$XYPlot#drawDomainTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getDomainTickBandPaint()";
  "org.jfree.chart.plot$XYPlot#drawDomainTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.axis$ValueAxis#getUpperBound()";
  "org.jfree.chart.plot$XYPlot#drawDomainTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getRenderer()";
  "org.jfree.chart.plot$XYPlot#drawDomainTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,double)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,double)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getLabelInsets()";
  "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getLabelFont()";
  "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$Axis#getLabelAngle()";
  "org.jfree.chart.block$BlockContainer#equals(java.lang.Object)" -> "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)";
  "org.jfree.chart.block$BlockContainer#equals(java.lang.Object)" -> "org.jfree.chart.block$FlowArrangement#equals(java.lang.Object)";
  "org.jfree.chart.block$BlockContainer#equals(java.lang.Object)" -> "org.jfree.chart.block$ColumnArrangement#equals(java.lang.Object)";
  "org.jfree.chart.plot$RingPlot#setInnerSeparatorExtension(double)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$RingPlot#setInnerSeparatorExtension(double)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$ValueMarker#ValueMarker(double)" -> "org.jfree.chart.plot$Marker#Marker()";
  "org.jfree.data.general$DatasetUtilities#iterateCategoryRangeBounds(org.jfree.data.category.CategoryDataset,boolean)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.plot$PieLabelDistributor#PieLabelDistributor(int)" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#AbstractPieLabelDistributor()";
  "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$XYPlot#getDomainAxis()";
  "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$XYPlot#getOrientation()";
  "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.axis$DateAxis#isHiddenValue(long)" -> "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainValue(java.util.Date)";
  "org.jfree.chart.plot$Plot#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$Plot#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)";
  "org.jfree.chart.plot$Marker#setOutlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#toFixedWidth(double)";
  "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$ColumnArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthRange()";
  "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#constrain(double)";
  "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.axis$Axis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#setRenderers(org.jfree.chart.renderer.category.CategoryItemRenderer[])" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setRenderers(org.jfree.chart.renderer.category.CategoryItemRenderer[])" -> "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)";
  "org.jfree.chart.plot$CategoryPlot#setRenderers(org.jfree.chart.renderer.category.CategoryItemRenderer[])" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.plot$XYPlot#drawRangeTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.axis$ValueAxis#getUpperBound()";
  "org.jfree.chart.plot$XYPlot#drawRangeTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getRenderer()";
  "org.jfree.chart.plot$XYPlot#drawRangeTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getRangeTickBandPaint()";
  "org.jfree.chart.plot$XYPlot#drawRangeTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.axis$ValueAxis#getLowerBound()";
  "org.jfree.chart.plot$XYPlot#drawRangeTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.plot$PiePlot3D#drawSide(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Arc2D,java.awt.geom.Area,java.awt.geom.Area,java.awt.Paint,java.awt.Paint,java.awt.Stroke,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot3D#isAngleAtBack(double)";
  "org.jfree.chart.plot$PiePlot3D#drawSide(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Arc2D,java.awt.geom.Area,java.awt.geom.Area,java.awt.Paint,java.awt.Paint,java.awt.Stroke,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot3D#getDarkerSides()";
  "org.jfree.chart.plot$PiePlot3D#drawSide(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Arc2D,java.awt.geom.Area,java.awt.geom.Area,java.awt.Paint,java.awt.Paint,java.awt.Stroke,boolean,boolean)" -> "org.jfree.chart.plot$PiePlot3D#isAngleAtFront(double)";
  "org.jfree.chart.title$Title#clone()" -> "org.jfree.chart.block$AbstractBlock#clone()";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.axis$Axis#getTickLabelInsets()";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.util$RectangleInsets#getTop()";
  "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)" -> "org.jfree.chart.util$RectangleInsets#getBottom()";
  "org.jfree.chart.text$TextBlockAnchor#readResolve()" -> "org.jfree.chart.text$TextBlockAnchor#<clinit>()";
  "org.jfree.chart.text$TextBlockAnchor#readResolve()" -> "org.jfree.chart.text$TextBlockAnchor#equals(java.lang.Object)";
  "org.jfree.chart.text$TextBlockAnchor#<clinit>()" -> "org.jfree.chart.text$TextBlockAnchor#TextBlockAnchor(java.lang.String)";
  "org.jfree.data.general$DatasetUtilities#createPieDatasetForRow(org.jfree.data.category.CategoryDataset,java.lang.Comparable)" -> "org.jfree.data.general$DatasetUtilities#createPieDatasetForRow(org.jfree.data.category.CategoryDataset,int)";
  "org.jfree.chart.plot$XYPlot#setDomainCrosshairStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setDomainCrosshairStroke(java.awt.Stroke)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$ValueAxis#getRange()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#getRenderer()" -> "org.jfree.chart.plot$CategoryPlot#getRenderer(int)";
  "org.jfree.chart.axis$NumberAxis#NumberAxis()" -> "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()";
  "org.jfree.chart.plot$Plot#setOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$Plot#setOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.axis$DateAxis#<clinit>()" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.axis$DateAxis#<clinit>()" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart$JFreeChart#setPadding(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)";
  "org.jfree.chart$JFreeChart#setPadding(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)";
  "org.jfree.chart.block$AbstractBlock#AbstractBlock()" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.block$AbstractBlock#AbstractBlock()" -> "org.jfree.chart.block$BlockBorder#<clinit>()";
  "org.jfree.chart$JFreeChart#JFreeChart(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart.plot$XYPlot#setRangeGridlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setRangeGridlinePaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PolarPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.xy.XYDataset)";
  "org.jfree.data$Range#constrain(double)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.plot$XYPlot#setDatasetRenderingOrder(org.jfree.chart.plot.DatasetRenderingOrder)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setDatasetRenderingOrder(org.jfree.chart.plot.DatasetRenderingOrder)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$ValueMarker#equals(java.lang.Object)" -> "org.jfree.chart.plot$Marker#equals(java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#isRangeGridlinesVisible()";
  "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getRangeGridlineStroke()";
  "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getRangeAxis()";
  "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getRangeGridlinePaint()";
  "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#getRenderer()";
  "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$XYPlot#isRangeZeroBaselineVisible()";
  "org.jfree.chart.axis$Axis#setLabelToolTip(java.lang.String)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setExplodePercent(java.lang.Comparable,double)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setExplodePercent(java.lang.Comparable,double)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairStroke(java.awt.Stroke)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.labels$AbstractPieItemLabelGenerator#createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)" -> "org.jfree.data.general$DatasetUtilities#calculatePieDatasetTotal(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.axis$CategoryAxis#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.axis$CategoryAxis#writePaintMap(java.util.Map,java.io.ObjectOutputStream)";
  "org.jfree.chart$JFreeChart#addChangeListener(org.jfree.chart.event.ChartChangeListener)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation()" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation(int)";
  "org.jfree.chart.ui$BasicProjectInfo#setName(java.lang.String)" -> "org.jfree.chart.ui$Library#setName(java.lang.String)";
  "org.jfree.chart.plot$Plot#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$Plot#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairPaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#getRenderer(int)";
  "org.jfree.chart.plot$XYPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#getDatasetCount()";
  "org.jfree.chart.plot$XYPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$XYPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#getRangeAxisForDataset(int)";
  "org.jfree.chart.title$Title#setHorizontalAlignment(org.jfree.chart.util.HorizontalAlignment)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$Title#setHorizontalAlignment(org.jfree.chart.util.HorizontalAlignment)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.plot$XYPlot#setDataset(org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.plot$XYPlot#setDataset(int,org.jfree.data.xy.XYDataset)";
  "org.jfree.chart.plot$XYPlot#setDataset(int,org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#setDataset(int,org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.plot$XYPlot#getDataset(int)";
  "org.jfree.chart.plot$XYPlot#setDataset(int,org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers(int)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers(int)" -> "org.jfree.chart.plot$Marker#removeChangeListener(org.jfree.chart.event.MarkerChangeListener)";
  "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers(int)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.axis$Axis#setTickLabelInsets(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart.axis$Axis#setTickLabelInsets(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)";
  "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(double,double)" -> "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(double,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)" -> "org.jfree.chart.plot$Plot#equals(java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#getRenderer(int)";
  "org.jfree.chart.plot$XYPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$XYPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#getDatasetCount()";
  "org.jfree.chart.plot$XYPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisForDataset(int)";
  "org.jfree.chart.plot$CategoryPlot#setDrawSharedDomainAxis(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#setDrawSharedDomainAxis(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$CategoryPlot#datasetsMappedToRangeAxis(int)";
  "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$CategoryPlot#getRendererForDataset(org.jfree.data.category.CategoryDataset)";
  "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis()";
  "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)";
  "org.jfree.chart.plot$CategoryPlot#datasetsMappedToRangeAxis(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#datasetsMappedToRangeAxis(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.axis$DateAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)" -> "org.jfree.chart.axis$Axis#getTickLabelInsets()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)" -> "org.jfree.chart.axis$Axis#getTickLabelFont()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)" -> "org.jfree.chart.util$RectangleInsets#getTop()";
  "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)" -> "org.jfree.chart.util$RectangleInsets#getBottom()";
  "org.jfree.chart.plot$PolarPlot#setRadiusGridlinesVisible(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#setRadiusGridlinesVisible(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double)" -> "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)";
  "org.jfree.chart.plot$XYPlot#getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation)" -> "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.plot$PiePlot#setMaximumLabelWidth(double)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setMaximumLabelWidth(double)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PiePlot#setLabelLinkStroke(java.awt.Stroke)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PiePlot#setLabelLinkStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#getDomainAxisLocation(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#getDomainAxisLocation(int)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisLocation()";
  "org.jfree.chart.plot$XYPlot#getDomainAxisLocation(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getHeightRange()";
  "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#constrain(double)";
  "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#toFixedHeight(double)";
  "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.plot$XYPlot#setDomainZeroBaselinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setDomainZeroBaselinePaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.axis$CategoryAxis#CategoryAxis()" -> "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)";
  "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable)" -> "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable,boolean)";
  "org.jfree.chart.plot$PiePlot#setDirection(org.jfree.chart.util.Rotation)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setDirection(org.jfree.chart.util.Rotation)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.plot$PiePlot3D#getPlotType()" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart.plot$PiePlot3D#getPlotType()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])" -> "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()";
  "org.jfree.chart.axis$Axis#setLabel(java.lang.String)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.axis$DateAxis#zoomRange(double,double)";
  "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.title$LegendTitle#setLegendItemGraphicPadding(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$LegendTitle#setLegendItemGraphicPadding(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$LegendTitle#setItemPaint(java.awt.Paint)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$LegendTitle#setItemPaint(java.awt.Paint)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.plot$XYPlot#getDataset(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#getDataset(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.block$BlockBorder#BlockBorder()" -> "org.jfree.chart.block$BlockBorder#BlockBorder(java.awt.Paint)";
  "org.jfree.chart.plot$PlotOrientation#readResolve()" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$PlotOrientation#readResolve()" -> "org.jfree.chart.plot$PlotOrientation#equals(java.lang.Object)";
  "org.jfree.chart.axis$ValueAxis#ValueAxis(java.lang.String,org.jfree.chart.axis.TickUnitSource)" -> "org.jfree.chart.axis$Axis#Axis(java.lang.String)";
  "org.jfree.chart.axis$ValueAxis#ValueAxis(java.lang.String,org.jfree.chart.axis.TickUnitSource)" -> "org.jfree.chart.axis$ValueAxis#<clinit>()";
  "org.jfree.chart.axis$ValueAxis#ValueAxis(java.lang.String,org.jfree.chart.axis.TickUnitSource)" -> "org.jfree.chart.axis$Axis#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#hashCode()" -> "org.jfree.chart.axis$Axis#getLabel()";
  "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.chart.block$LengthConstraintType#readResolve()" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$LengthConstraintType#readResolve()" -> "org.jfree.chart.block$LengthConstraintType#equals(java.lang.Object)";
  "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)";
  "org.jfree.chart.block$AbstractBlock#calculateTotalWidth(double)" -> "org.jfree.chart.util$RectangleInsets#extendWidth(double)";
  "org.jfree.chart.block$AbstractBlock#calculateTotalWidth(double)" -> "org.jfree.chart.block$BlockBorder#getInsets()";
  "org.jfree.chart.block$AbstractBlock#calculateTotalWidth(double)" -> "org.jfree.chart.block$LineBorder#getInsets()";
  "org.jfree.chart.plot$XYPlot#setRangeZeroBaselinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setRangeZeroBaselinePaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PiePlot#setCircular(boolean)" -> "org.jfree.chart.plot$PiePlot#setCircular(boolean,boolean)";
  "org.jfree.chart.plot$PiePlot#setCircular(boolean,boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setCircular(boolean,boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot()" -> "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)";
  "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)";
  "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#getTickUnit()";
  "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$ValueAxis#getStandardTickUnits()";
  "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)";
  "org.jfree.chart.plot$CategoryPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getAnnotations()";
  "org.jfree.chart.plot$CategoryPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis()";
  "org.jfree.chart.plot$CategoryPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxis()";
  "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)" -> "org.jfree.chart.plot$Plot#equals(java.lang.Object)";
  "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxis()" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxis(int)";
  "org.jfree.chart.util$UnitType#readResolve()" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.util$UnitType#readResolve()" -> "org.jfree.chart.util$UnitType#equals(java.lang.Object)";
  "org.jfree.chart.title$TextTitle#drawVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.title$Title#getVerticalAlignment()";
  "org.jfree.chart.title$TextTitle#drawVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextBlockAnchor#<clinit>()";
  "org.jfree.chart.title$TextTitle#drawVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.title$Title#getPosition()";
  "org.jfree.chart.title$TextTitle#drawVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$VerticalAlignment#<clinit>()";
  "org.jfree.chart.title$TextTitle#drawVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)";
  "org.jfree.chart.title$TextTitle#drawVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$PiePlot#setStartAngle(double)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PiePlot#setStartAngle(double)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisForDataset(int)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxis()";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisForDataset(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisForDataset(int)" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxis(int)";
  "org.jfree.chart.axis$CategoryAxis#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$MultiplePiePlot#setDataset(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)";
  "org.jfree.chart.plot$MultiplePiePlot#setDataset(org.jfree.data.category.CategoryDataset)" -> "org.jfree.chart.plot$Plot#setDatasetGroup(org.jfree.data.general.DatasetGroup)";
  "org.jfree.chart.title$LegendTitle#setItemLabelPadding(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$LegendTitle#setItemLabelPadding(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$PiePlot3D#PiePlot3D(org.jfree.data.general.PieDataset)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)" -> "org.jfree.chart.title$Title#addChangeListener(org.jfree.chart.event.TitleChangeListener)";
  "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#configureDomainAxes()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#configureDomainAxes()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#configureDomainAxes()" -> "org.jfree.chart.axis$CategoryAxis#configure()";
  "org.jfree.chart.axis$CategoryAxis#removeCategoryLabelToolTip(java.lang.Comparable)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.title$TextTitle#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.title$TextTitle#equals(java.lang.Object)" -> "org.jfree.chart.title$Title#equals(java.lang.Object)";
  "org.jfree.chart.title$TextTitle#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$MultiplePiePlot#setDataExtractOrder(org.jfree.chart.util.TableOrder)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$MultiplePiePlot#setDataExtractOrder(org.jfree.chart.util.TableOrder)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#getDomainMarkers(org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$XYPlot#setRangeZeroBaselineVisible(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setRangeZeroBaselineVisible(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation)" -> "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.axis$ValueAxis#setInverted(boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)" -> "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean,boolean)";
  "org.jfree.chart.plot$XYPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$XYPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)";
  "org.jfree.chart.title$TextTitle#setPaint(java.awt.Paint)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$TextTitle#setPaint(java.awt.Paint)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.plot$Plot#setNoDataMessageFont(java.awt.Font)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$Plot#setNoDataMessageFont(java.awt.Font)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#setAngleTickUnit(org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#setAngleTickUnit(org.jfree.chart.axis.TickUnit)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double)" -> "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double,boolean)";
  "org.jfree.chart.plot$PiePlot#setLabelBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PiePlot#setLabelBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$Plot#setBackgroundImageAlignment(int)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$Plot#setBackgroundImageAlignment(int)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.block$AbstractBlock#getContentYOffset()" -> "org.jfree.chart.block$BlockBorder#getInsets()";
  "org.jfree.chart.block$AbstractBlock#getContentYOffset()" -> "org.jfree.chart.util$RectangleInsets#getTop()";
  "org.jfree.chart.block$AbstractBlock#getContentYOffset()" -> "org.jfree.chart.block$LineBorder#getInsets()";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateAttributedSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#getAttributedLabel(int)";
  "org.jfree.chart.plot$XYPlot#getDatasetsMappedToRangeAxis(java.lang.Integer)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#getDatasetsMappedToRangeAxis(java.lang.Integer)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getDatasetsMappedToRangeAxis(java.lang.Integer)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getDatasetsMappedToRangeAxis(java.lang.Integer)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.title$LegendTitle#<clinit>()" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart.title$Title#Title()" -> "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart.title$Title#Title()" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart.plot$PiePlot#setIgnoreNullValues(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setIgnoreNullValues(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double)" -> "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double,boolean)";
  "org.jfree.chart.block$LineBorder#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.block$LineBorder#equals(java.lang.Object)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart.block$LineBorder#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$CategoryPlot#isRangeGridlinesVisible()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$CategoryPlot#getRangeGridlineStroke()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$CategoryPlot#getRangeAxis()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$CategoryPlot#getRangeGridlinePaint()";
  "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)" -> "org.jfree.chart.plot$CategoryPlot#getRenderer()";
  "org.jfree.chart.plot$Plot#addChangeListener(org.jfree.chart.event.PlotChangeListener)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart.plot$Plot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.entity$ChartEntity#getShapeCoords()" -> "org.jfree.chart.entity$ChartEntity#getPolyCoords(java.awt.Shape)";
  "org.jfree.chart.entity$ChartEntity#getShapeCoords()" -> "org.jfree.chart.entity$ChartEntity#getRectCoords(java.awt.geom.Rectangle2D)";
  "org.jfree.chart.plot$PolarPlot#drawCornerTextItems(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#drawCornerTextItems(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.axis$Axis#setAxisLineVisible(boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$XYPlot#getDataset()" -> "org.jfree.chart.plot$XYPlot#getDataset(int)";
  "org.jfree.chart.plot$PiePlot#setShadowXOffset(double)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PiePlot#setShadowXOffset(double)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.text$TextBlock#calculateOffsets(org.jfree.chart.text.TextBlockAnchor,double,double)" -> "org.jfree.chart.text$TextBlockAnchor#<clinit>()";
  "org.jfree.chart.plot$XYPlot#setDomainTickBandPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setDomainTickBandPaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" -> "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String)";
  "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)" -> "org.jfree.chart.ui$BasicProjectInfo#setCopyright(java.lang.String)";
  "org.jfree.chart.block$BlockBorder#<clinit>()" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.block$BlockBorder#<clinit>()" -> "org.jfree.chart.block$BlockBorder#BlockBorder(org.jfree.chart.util.RectangleInsets,java.awt.Paint)";
  "org.jfree.chart.axis$ValueAxis#setVerticalTickLabels(boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.util$RectangleInsets#trimHeight(double)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)";
  "org.jfree.chart.util$RectangleInsets#trimHeight(double)" -> "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#setAttributedLabel(int,java.text.AttributedString)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$PolarPlot#zoom(double)";
  "org.jfree.chart.plot$PiePlot#setSimpleLabelOffset(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setSimpleLabelOffset(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PieLabelDistributor#adjustInwards()" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)";
  "org.jfree.chart.plot$PiePlot#setBaseSectionPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setBaseSectionPaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.util$ObjectUtilities#setClassLoader(java.lang.ClassLoader)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.block$FlowArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisIndex(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)";
  "org.jfree.chart.text$TextLine#TextLine(java.lang.String,java.awt.Font)" -> "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font)";
  "org.jfree.chart.text$TextLine#TextLine(java.lang.String,java.awt.Font)" -> "org.jfree.chart.text$TextFragment#<clinit>()";
  "org.jfree.chart.title$TextTitle#setTextAlignment(org.jfree.chart.util.HorizontalAlignment)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$TextTitle#setTextAlignment(org.jfree.chart.util.HorizontalAlignment)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#toFixedWidth(double)";
  "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthRange()";
  "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#constrain(double)";
  "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.chart.title$Title#addChangeListener(org.jfree.chart.event.TitleChangeListener)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart.plot$PiePlot#setLegendLabelToolTipGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PiePlot#setLegendLabelToolTipGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#clearDomainMarkers()" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#clearDomainMarkers()" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#clearDomainMarkers()" -> "org.jfree.chart.plot$XYPlot#clearDomainMarkers(int)";
  "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePosition(org.jfree.chart.axis.CategoryAnchor)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePosition(org.jfree.chart.axis.CategoryAnchor)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$Plot#markerChanged(org.jfree.chart.event.MarkerChangeEvent)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$Plot#markerChanged(org.jfree.chart.event.MarkerChangeEvent)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$Plot#removeChangeListener(org.jfree.chart.event.PlotChangeListener)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.block$AbstractBlock#drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.block$BlockBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.block$AbstractBlock#drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart.util$RectangleInsets#extendWidth(double)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)";
  "org.jfree.chart.util$RectangleInsets#extendWidth(double)" -> "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)";
  "org.jfree.chart.plot$XYPlot#clearRangeMarkers()" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#clearRangeMarkers()" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#clearRangeMarkers()" -> "org.jfree.chart.plot$XYPlot#clearRangeMarkers(int)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation)" -> "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.plot$XYPlot#setSeriesRenderingOrder(org.jfree.chart.plot.SeriesRenderingOrder)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setSeriesRenderingOrder(org.jfree.chart.plot.SeriesRenderingOrder)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart.plot$XYPlot#setRangeGridlinesVisible(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setRangeGridlinesVisible(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$Marker#Marker()" -> "org.jfree.chart.plot$Marker#Marker(java.awt.Paint)";
  "org.jfree.chart.title$TextTitle#setText(java.lang.String)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$TextTitle#setText(java.lang.String)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean)" -> "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean,boolean)";
  "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean,boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$PolarPlot#refreshAngleTicks()" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.plot$XYPlot#setDomainGridlinesVisible(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setDomainGridlinesVisible(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double)" -> "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart.event$ChartChangeEvent#setChart(org.jfree.chart.JFreeChart)";
  "org.jfree.chart.plot$PiePlot#setSectionOutlineStroke(java.lang.Comparable,java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setSectionOutlineStroke(java.lang.Comparable,java.awt.Stroke)" -> "org.jfree.chart$StrokeMap#put(java.lang.Comparable,java.awt.Stroke)";
  "org.jfree.chart.plot$PiePlot#setSectionOutlineStroke(java.lang.Comparable,java.awt.Stroke)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.title$Title#setPosition(org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$Title#setPosition(org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setQuadrantPaint(int,java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setQuadrantPaint(int,java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.chart.plot$PiePlot#setLabelLinkPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setLabelLinkPaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$Marker#setLabelFont(java.awt.Font)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.block$BlockContainer#clone()" -> "org.jfree.chart.block$AbstractBlock#clone()";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable,boolean)" -> "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlineStroke()";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable,boolean)" -> "org.jfree.chart$StrokeMap#getStroke(java.lang.Comparable)";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable,boolean)" -> "org.jfree.chart$StrokeMap#put(java.lang.Comparable,java.awt.Stroke)";
  "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable,boolean)" -> "org.jfree.chart.plot$Plot#getDrawingSupplier()";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation()" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation(int)";
  "org.jfree.chart.axis$NumberAxis3D#NumberAxis3D()" -> "org.jfree.chart.axis$NumberAxis3D#NumberAxis3D(java.lang.String)";
  "org.jfree.chart.plot$PolarPlot#translateValueThetaRadiusToJava2D(double,double,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$ValueAxis#getLowerBound()";
  "org.jfree.chart.plot$PolarPlot#translateValueThetaRadiusToJava2D(double,double,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$PolarPlot#getMaxRadius()";
  "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)" -> "org.jfree.chart.util$UnitType#<clinit>()";
  "org.jfree.chart.axis$Axis#setTickMarksVisible(boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart$JFreeChart#setBackgroundImage(java.awt.Image)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)";
  "org.jfree.chart$JFreeChart#setBorderVisible(boolean)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)";
  "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.plot$XYPlot#setDomainCrosshairVisible(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setDomainCrosshairVisible(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$ValueMarker#ValueMarker(double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)" -> "org.jfree.chart.plot$Marker#Marker(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)";
  "org.jfree.chart.plot$XYPlot#addRangeMarker(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.plot$XYPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.util$AbstractObjectList#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.util$AbstractObjectList#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$AbstractObjectList#get(int)";
  "org.jfree.chart.util$AbstractObjectList#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#getDatasetsMappedToDomainAxis(java.lang.Integer)" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getDatasetsMappedToDomainAxis(java.lang.Integer)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#getDatasetsMappedToDomainAxis(java.lang.Integer)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#getDatasetsMappedToDomainAxis(java.lang.Integer)" -> "org.jfree.chart.plot$XYPlot#<clinit>()";
  "org.jfree.chart.block$BlockBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)";
  "org.jfree.chart.block$BlockBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)";
  "org.jfree.chart.block$BlockBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)";
  "org.jfree.chart.block$BlockBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)";
  "org.jfree.chart.plot$PiePlot#setSimpleLabels(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setSimpleLabels(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.axis$ValueAxis#setLeftArrow(java.awt.Shape)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$Axis#setLabelAngle(double)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$XYPlot#getIndexOf(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)" -> "org.jfree.chart.util$ObjectList#ObjectList()";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)" -> "org.jfree.chart.labels$AbstractPieItemLabelGenerator#AbstractPieItemLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)";
  "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)" -> "org.jfree.data.general$DatasetUtilities#iterateXYRangeBounds(org.jfree.data.xy.XYDataset)";
  "org.jfree.chart.plot$MultiplePiePlot#setAggregatedItemsPaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$MultiplePiePlot#setAggregatedItemsPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#addDomainMarker(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.plot$XYPlot#addDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$XYPlot#addDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double,boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double,boolean)" -> "org.jfree.chart.plot$CategoryPlot#isRangeCrosshairVisible()";
  "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double,boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.entity$ChartEntity#getImageMapAreaTag(org.jfree.chart.imagemap.ToolTipTagFragmentGenerator,org.jfree.chart.imagemap.URLTagFragmentGenerator)" -> "org.jfree.chart.entity$ChartEntity#getShapeCoords()";
  "org.jfree.chart.entity$ChartEntity#getImageMapAreaTag(org.jfree.chart.imagemap.ToolTipTagFragmentGenerator,org.jfree.chart.imagemap.URLTagFragmentGenerator)" -> "org.jfree.chart.entity$ChartEntity#getShapeType()";
  "org.jfree.chart.plot$PolarPlot#drawAxis(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$PolarPlot#drawAxis(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$PolarPlot#drawAxis(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#drawAxis(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart.plot$PiePlot3D#setDepthFactor(double)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot3D#setDepthFactor(double)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)";
  "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)";
  "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)";
  "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)" -> "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)";
  "org.jfree.chart.text$TextUtilities#isUseDrawRotatedStringWorkaround()" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#deriveRotationAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)";
  "org.jfree.chart.text$TextUtilities#deriveRotationAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextUtilities#deriveRotationAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.plot$XYPlot#getRangeAxisCount()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.axis$DateAxis#setRange(double,double)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.plot$XYPlot#removeAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#removeAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)";
  "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset)" -> "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)";
  "org.jfree.chart.block$FlowArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.block$FlowArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#toFixedWidth(double)";
  "org.jfree.chart.block$FlowArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$RectangleConstraint#getWidthRange()";
  "org.jfree.chart.block$FlowArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.data$Range#contains(double)";
  "org.jfree.chart.block$FlowArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)";
  "org.jfree.chart.block$FlowArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)" -> "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)";
  "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])";
  "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier()" -> "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()";
  "org.jfree.chart.plot$Marker#setPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.plot$RingPlot#setSectionDepth(double)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$RingPlot#setSectionDepth(double)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$Marker#Marker(java.awt.Paint)" -> "org.jfree.chart.plot$Marker#Marker(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)";
  "org.jfree.chart.util$RectangleAnchor#coordinates(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#setLowerMargin(double)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.util$ObjectUtilities#getResourceAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#getResourceAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)";
  "org.jfree.chart.plot$PiePlot#getSectionOutlineStroke(java.lang.Comparable)" -> "org.jfree.chart$StrokeMap#getStroke(java.lang.Comparable)";
  "org.jfree.chart.entity$PieSectionEntity#PieSectionEntity(java.awt.Shape,org.jfree.data.general.PieDataset,int,int,java.lang.Comparable,java.lang.String,java.lang.String)" -> "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String,java.lang.String)";
  "org.jfree.chart.axis$DateAxis#setTimeline(org.jfree.chart.axis.Timeline)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.text$TextLine#TextLine(java.lang.String,java.awt.Font,java.awt.Paint)" -> "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font,java.awt.Paint)";
  "org.jfree.chart.text$TextLine#TextLine(java.lang.String,java.awt.Font,java.awt.Paint)" -> "org.jfree.chart.text$TextFragment#<clinit>()";
  "org.jfree.chart.plot$Marker#setStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.block$FlowArrangement#FlowArrangement()" -> "org.jfree.chart.util$VerticalAlignment#<clinit>()";
  "org.jfree.chart.block$FlowArrangement#FlowArrangement()" -> "org.jfree.chart.block$FlowArrangement#FlowArrangement(org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,double,double)";
  "org.jfree.chart.block$FlowArrangement#FlowArrangement()" -> "org.jfree.chart.util$HorizontalAlignment#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelWidthRatio(float)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.ui$ProjectInfo#ProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.awt.Image,java.lang.String,java.lang.String,java.lang.String)" -> "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)";
  "org.jfree.chart.plot$PolarPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PolarPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.text$TextLine#calculateBaselineOffset(java.awt.Graphics2D,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextFragment#calculateBaselineOffset(java.awt.Graphics2D,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.plot$CategoryPlot#datasetsMappedToDomainAxis(int)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#datasetsMappedToDomainAxis(int)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo()" -> "org.jfree.chart.ui$Library#Library()";
  "org.jfree.chart.plot$Plot#getRootPlot()" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.util$RectangleEdge#opposite(org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.title$LegendTitle#setSources(org.jfree.chart.LegendItemSource[])" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$LegendTitle#setSources(org.jfree.chart.LegendItemSource[])" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit)" -> "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)";
  "org.jfree.chart.axis$ValueAxis#setRangeAboutValue(double,double)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.axis$ValueAxis#setRangeAboutValue(double,double)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.axis$ValueAxis#setRangeAboutValue(double,double)" -> "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge()" -> "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)";
  "org.jfree.chart.util$RectangleAnchor#createRectangle(org.jfree.chart.util.Size2D,double,double,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$Size2D#getWidth()";
  "org.jfree.chart.util$RectangleAnchor#createRectangle(org.jfree.chart.util.Size2D,double,double,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$Size2D#getHeight()";
  "org.jfree.chart.util$RectangleAnchor#createRectangle(org.jfree.chart.util.Size2D,double,double,org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.title$TextTitle#setFont(java.awt.Font)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$TextTitle#setFont(java.awt.Font)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.block$RectangleConstraint#toRangeHeight(org.jfree.data.Range)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.block$RectangleConstraint#toRangeHeight(org.jfree.data.Range)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#toRangeHeight(org.jfree.data.Range)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.block$RectangleConstraint#toRangeHeight(org.jfree.data.Range)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#toRangeWidth(org.jfree.data.Range)" -> "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)";
  "org.jfree.chart.block$RectangleConstraint#toRangeWidth(org.jfree.data.Range)" -> "org.jfree.chart.block$RectangleConstraint#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#toRangeWidth(org.jfree.data.Range)" -> "org.jfree.chart.block$LengthConstraintType#<clinit>()";
  "org.jfree.chart.block$RectangleConstraint#toRangeWidth(org.jfree.data.Range)" -> "org.jfree.data$Range#getUpperBound()";
  "org.jfree.chart.plot$Marker#setLabelOffset(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.axis$NumberAxis#setRangeType(org.jfree.data.RangeType)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$PolarPlot#addCornerTextItem(java.lang.String)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#addCornerTextItem(java.lang.String)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartColor#<clinit>()";
  "org.jfree.chart.axis$Axis#setTickMarkStroke(java.awt.Stroke)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setRangeGridlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setRangeGridlineStroke(java.awt.Stroke)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset)" -> "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)";
  "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)" -> "org.jfree.data.general$DatasetUtilities#iterateCategoryRangeBounds(org.jfree.data.category.CategoryDataset,boolean)";
  "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String)" -> "org.jfree.chart.title$Title#<clinit>()";
  "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String)" -> "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font,java.awt.Paint,org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String)" -> "org.jfree.chart.title$TextTitle#<clinit>()";
  "org.jfree.chart.title$LegendTitle#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$LegendTitle#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart.plot$XYPlot#getDomainAxisLocation()" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String)" -> "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)";
  "org.jfree.chart.text$TextUtilities#getUseFontMetricsGetStringBounds()" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.general.PieDataset,java.lang.Comparable,double)" -> "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.general.PieDataset,java.lang.Comparable,double,int)";
  "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.general.PieDataset,java.lang.Comparable,double,int)" -> "org.jfree.data.general$DatasetUtilities#calculatePieDatasetTotal(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.event$ChartChangeEventType#readResolve()" -> "org.jfree.chart.event$ChartChangeEventType#equals(java.lang.Object)";
  "org.jfree.chart.event$ChartChangeEventType#readResolve()" -> "org.jfree.chart.event$ChartChangeEventType#<clinit>()";
  "org.jfree.chart.axis$DateAxis#setMinimumDate(java.util.Date)" -> "org.jfree.chart.axis$DateAxis#getMinimumDate()";
  "org.jfree.chart.axis$DateAxis#setMinimumDate(java.util.Date)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)";
  "org.jfree.chart.axis$DateAxis#setMinimumDate(java.util.Date)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$DateAxis#setMinimumDate(java.util.Date)" -> "org.jfree.chart.axis$DateAxis#getMaximumDate()";
  "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#deriveRotationAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)";
  "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)";
  "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font)" -> "org.jfree.chart.text$TextFragment#<clinit>()";
  "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font)" -> "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font,java.awt.Paint)";
  "org.jfree.chart.util$ObjectUtilities#isJDK14()" -> "org.jfree.chart.util$ObjectUtilities#parseVersions(java.lang.String)";
  "org.jfree.chart.util$ObjectUtilities#isJDK14()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#isJDK14()" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.chart.text$TextFragment#calculateBaselineOffset(java.awt.Graphics2D,org.jfree.chart.text.TextAnchor)" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation)" -> "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.plot$XYPlot#removeRangeMarker(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.plot$XYPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$XYPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.util$AbstractObjectList#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.util$AbstractObjectList#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)";
  "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers(int)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers(int)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers(int)" -> "org.jfree.chart.plot$Marker#removeChangeListener(org.jfree.chart.event.MarkerChangeListener)";
  "org.jfree.chart.plot$XYPlot#setDomainCrosshairLockedOnData(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setDomainCrosshairLockedOnData(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$Plot#getRectY(double,double,double,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.util$RectangleEdge#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#setTickLabelFont(java.lang.Comparable,java.awt.Font)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.title$TextTitle#TextTitle()" -> "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String)";
  "org.jfree.chart.plot$PiePlot#setLegendLabelURLGenerator(org.jfree.chart.urls.PieURLGenerator)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setLegendLabelURLGenerator(org.jfree.chart.urls.PieURLGenerator)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset)" -> "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)";
  "org.jfree.chart.block$AbstractBlock#setPadding(double,double,double,double)" -> "org.jfree.chart.block$AbstractBlock#setPadding(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart.block$AbstractBlock#setPadding(double,double,double,double)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.block$AbstractBlock#setPadding(double,double,double,double)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.chart.axis$ValueAxis#setDefaultAutoRange(org.jfree.data.Range)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D)" -> "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)";
  "org.jfree.chart.text$TextAnchor#readResolve()" -> "org.jfree.chart.text$TextAnchor#<clinit>()";
  "org.jfree.chart.text$TextAnchor#readResolve()" -> "org.jfree.chart.text$TextAnchor#equals(java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double)" -> "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double,boolean)";
  "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String)" -> "org.jfree.chart.text$TextFragment#<clinit>()";
  "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String)" -> "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font,java.awt.Paint)";
  "org.jfree.chart.plot$XYPlot#indexOf(org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$XYPlot#indexOf(org.jfree.data.xy.XYDataset)" -> "org.jfree.chart.util$ObjectList#get(int)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxes(org.jfree.chart.axis.CategoryAxis[])" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxes(org.jfree.chart.axis.CategoryAxis[])" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxes(org.jfree.chart.axis.CategoryAxis[])" -> "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)";
  "org.jfree.chart.text$TextBlock#addLine(java.lang.String,java.awt.Font,java.awt.Paint)" -> "org.jfree.chart.text$TextBlock#addLine(org.jfree.chart.text.TextLine)";
  "org.jfree.chart.text$TextBlock#addLine(java.lang.String,java.awt.Font,java.awt.Paint)" -> "org.jfree.chart.text$TextLine#TextLine(java.lang.String,java.awt.Font,java.awt.Paint)";
  "org.jfree.chart.plot$ValueMarker#ValueMarker(double,java.awt.Paint,java.awt.Stroke)" -> "org.jfree.chart.plot$ValueMarker#ValueMarker(double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)";
  "org.jfree.chart.plot$PiePlot#setLabelShadowPaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PiePlot#setLabelShadowPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.axis$Axis#setTickMarkPaint(java.awt.Paint)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#getDatasetCount()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation)" -> "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.plot$XYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart.plot$XYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)";
  "org.jfree.chart$JFreeChart#setBackgroundImageAlpha(float)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart.plot$XYPlot#getSeriesCount()" -> "org.jfree.chart.plot$XYPlot#getDataset()";
  "org.jfree.chart.axis$DateAxis#setRange(java.util.Date,java.util.Date)" -> "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)";
  "org.jfree.chart.plot$PiePlot#getSectionOutlinePaint(java.lang.Comparable)" -> "org.jfree.chart$PaintMap#getPaint(java.lang.Comparable)";
  "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers()" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers()" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers()" -> "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers(int)";
  "org.jfree.chart.plot$CategoryPlot#getIndexOf(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)";
  "org.jfree.chart.axis$ValueAxis#setNegativeArrowVisible(boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$CategoryAxis#setCategoryMargin(double)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.title$TextTitle#setToolTipText(java.lang.String)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$TextTitle#setToolTipText(java.lang.String)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#setBackgroundImageAlignment(int)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.axis$NumberAxis#setNumberFormatOverride(java.text.NumberFormat)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$PolarPlot#getMaxRadius()" -> "org.jfree.chart.axis$ValueAxis#getUpperBound()";
  "org.jfree.chart.plot$CategoryPlot#clearAnnotations()" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#clearAnnotations()" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)";
  "org.jfree.chart.axis$ValueAxis#setUpArrow(java.awt.Shape)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$CategoryAxis#setTickLabelPaint(java.lang.Comparable,java.awt.Paint)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$Axis#setAxisLineStroke(java.awt.Stroke)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$PiePlot#getSectionPaint(java.lang.Comparable)" -> "org.jfree.chart$PaintMap#getPaint(java.lang.Comparable)";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint)" -> "org.jfree.chart.text$TextBlock#addLine(java.lang.String,java.awt.Font,java.awt.Paint)";
  "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint)" -> "org.jfree.chart.text$TextBlock#TextBlock()";
  "org.jfree.chart.title$Title#setVerticalAlignment(org.jfree.chart.util.VerticalAlignment)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.title$Title#setVerticalAlignment(org.jfree.chart.util.VerticalAlignment)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$TextTitle#setExpandToFitSpace(boolean)" -> "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart.title$TextTitle#setExpandToFitSpace(boolean)" -> "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)";
  "org.jfree.chart.axis$CategoryAxis#getTickLabelPaint(java.lang.Comparable)" -> "org.jfree.chart.axis$Axis#getTickLabelPaint()";
  "org.jfree.chart.plot$XYPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])" -> "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)";
  "org.jfree.chart.plot$XYPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.util$AbstractObjectList#hashCode()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$PiePlot#getPlotType()" -> "org.jfree.chart.plot$PiePlot#<clinit>()";
  "org.jfree.chart.plot$PiePlot#getPlotType()" -> "org.jfree.chart.plot$Plot#<clinit>()";
  "org.jfree.chart.plot$XYPlot#setRenderers(org.jfree.chart.renderer.xy.XYItemRenderer[])" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setRenderers(org.jfree.chart.renderer.xy.XYItemRenderer[])" -> "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)";
  "org.jfree.chart.plot$XYPlot#setRenderers(org.jfree.chart.renderer.xy.XYItemRenderer[])" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$XYPlot#setFixedLegendItems(org.jfree.chart.LegendItemCollection)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setFixedLegendItems(org.jfree.chart.LegendItemCollection)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.util$RectangleAnchor#readResolve()" -> "org.jfree.chart.util$RectangleAnchor#equals(java.lang.Object)";
  "org.jfree.chart.util$RectangleAnchor#readResolve()" -> "org.jfree.chart.util$RectangleAnchor#<clinit>()";
  "org.jfree.chart.plot$XYPlot#setDomainZeroBaselineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setDomainZeroBaselineStroke(java.awt.Stroke)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PiePlot#setLabelDistributor(org.jfree.chart.plot.AbstractPieLabelDistributor)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setLabelDistributor(org.jfree.chart.plot.AbstractPieLabelDistributor)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$Plot#setOutlinePaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$Plot#setOutlinePaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setLabelOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PiePlot#setLabelOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.axis$Axis#setAxisLinePaint(java.awt.Paint)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.ui$BasicProjectInfo#setLicenceName(java.lang.String)" -> "org.jfree.chart.ui$Library#setLicenceName(java.lang.String)";
  "org.jfree.chart.plot$PolarPlot#removeCornerTextItem(java.lang.String)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PolarPlot#removeCornerTextItem(java.lang.String)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setRangeZeroBaselineStroke(java.awt.Stroke)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setRangeZeroBaselineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlotState#PiePlotState(org.jfree.chart.plot.PlotRenderingInfo)" -> "org.jfree.chart.renderer$RendererState#RendererState(org.jfree.chart.plot.PlotRenderingInfo)";
  "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$StrokeMap#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart$StrokeMap#getStroke(java.lang.Comparable)";
  "org.jfree.chart.axis$ValueAxis#setPositiveArrowVisible(boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$RingPlot#setSeparatorPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$RingPlot#setSeparatorPaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$MultiplePiePlot#setLimit(double)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$MultiplePiePlot#setLimit(double)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.util$ObjectUtilities#getClassLoader()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.plot$PolarPlot#setAngleLabelPaint(java.awt.Paint)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#setAngleLabelPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$Marker#setLabel(java.lang.String)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$XYPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisCount()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart$JFreeChart#addProgressListener(org.jfree.chart.event.ChartProgressListener)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart.plot$CategoryPlot#setRowRenderingOrder(org.jfree.chart.util.SortOrder)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setRowRenderingOrder(org.jfree.chart.util.SortOrder)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$Marker#setLabelAnchor(org.jfree.chart.util.RectangleAnchor)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart$JFreeChart#addLegend(org.jfree.chart.title.LegendTitle)" -> "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart.plot$CategoryPlot#setRangeGridlineStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setRangeGridlineStroke(java.awt.Stroke)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.axis$Axis#setTickLabelsVisible(boolean)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setRangeCrosshairStroke(java.awt.Stroke)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#setRangeCrosshairStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PolarPlot#getOrientation()" -> "org.jfree.chart.plot$PlotOrientation#<clinit>()";
  "org.jfree.chart.axis$DateAxis#dateToJava2D(java.util.Date,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)" -> "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)";
  "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$XYPlot#XYPlot()" -> "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit)" -> "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)";
  "org.jfree.chart.plot$XYPlot#removeDomainMarker(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.plot$XYPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$XYPlot#getDomainAxisCount()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$PiePlot#setLabelGap(double)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$PiePlot#setLabelGap(double)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.block$AbstractBlock#setMargin(double,double,double,double)" -> "org.jfree.chart.util$RectangleInsets#<clinit>()";
  "org.jfree.chart.block$AbstractBlock#setMargin(double,double,double,double)" -> "org.jfree.chart.block$AbstractBlock#setMargin(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart.block$AbstractBlock#setMargin(double,double,double,double)" -> "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)";
  "org.jfree.data.general$DatasetUtilities#findCumulativeRangeBounds(org.jfree.data.category.CategoryDataset)" -> "org.jfree.data$Range#Range(double,double)";
  "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)" -> "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.plot$PolarPlot#clearCornerTextItems()" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#clearCornerTextItems()" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.block$RectangleConstraint#toString()" -> "org.jfree.chart.block$LengthConstraintType#toString()";
  "org.jfree.chart.plot$PolarPlot#setAngleGridlinesVisible(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#setAngleGridlinesVisible(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$XYPlot#getRangeMarkers(org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$XYPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,org.jfree.chart.plot.Plot)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,org.jfree.chart.plot.Plot)" -> "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)";
  "org.jfree.chart$PaintMap#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart$PaintMap#getPaint(java.lang.Comparable)";
  "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers()" -> "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers(int)";
  "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers()" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers()" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#getCategories()" -> "org.jfree.chart.plot$CategoryPlot#getDataset()";
  "org.jfree.chart.util$HorizontalAlignment#readResolve()" -> "org.jfree.chart.util$HorizontalAlignment#equals(java.lang.Object)";
  "org.jfree.chart.util$HorizontalAlignment#readResolve()" -> "org.jfree.chart.util$HorizontalAlignment#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.axis$DateAxis#DateAxis()" -> "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart.plot$CategoryPlot#getDomainAxisCount()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.plot$CategoryPlot#CategoryPlot()" -> "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart.axis$CategoryAxis#setUpperMargin(double)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartProgressEvent)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart.plot$RingPlot#setOuterSeparatorExtension(double)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$RingPlot#setOuterSeparatorExtension(double)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.ui$ProjectInfo#ProjectInfo()" -> "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo()";
  "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart.plot$PolarPlot#setAngleLabelFont(java.awt.Font)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$PolarPlot#setAngleLabelFont(java.awt.Font)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$Marker#setLabelPaint(java.awt.Paint)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker)" -> "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.text$TextUtilities#setUseFontMetricsGetStringBounds(boolean)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.plot$RingPlot#setSeparatorStroke(java.awt.Stroke)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$RingPlot#setSeparatorStroke(java.awt.Stroke)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)";
  "org.jfree.chart.plot$CategoryPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.plot$XYPlot#addAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#addAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.axis$DateAxis#setDateFormatOverride(java.text.DateFormat)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$Axis#setLabelPaint(java.awt.Paint)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker)" -> "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)";
  "org.jfree.chart.axis$ValueAxis#setRightArrow(java.awt.Shape)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)" -> "org.jfree.chart.plot$XYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)";
  "org.jfree.chart.ui$Licences#getInstance()" -> "org.jfree.chart.ui$Licences#Licences()";
  "org.jfree.chart.axis$CategoryAxis#addCategoryLabelToolTip(java.lang.Comparable,java.lang.String)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$XYPlot#clearRangeMarkers(int)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.plot$XYPlot#clearRangeMarkers(int)" -> "org.jfree.chart.plot$Marker#removeChangeListener(org.jfree.chart.event.MarkerChangeListener)";
  "org.jfree.chart.plot$XYPlot#clearRangeMarkers(int)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$Plot#isSubplot()" -> "org.jfree.chart.plot$Plot#getParent()";
  "org.jfree.chart.text$TextBlock#TextBlock()" -> "org.jfree.chart.util$HorizontalAlignment#<clinit>()";
  "org.jfree.chart$JFreeChart#setBorderPaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart.plot$PieLabelDistributor#toString()" -> "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)";
  "org.jfree.chart.axis$Axis#setLabelURL(java.lang.String)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)";
  "org.jfree.chart.plot$CategoryPlot#setRangeGridlinesVisible(boolean)" -> "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setRangeGridlinesVisible(boolean)" -> "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)";
  "org.jfree.chart.axis$Axis#setTickMarkOutsideLength(float)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)" -> "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)";
  "org.jfree.chart.axis$Axis#setLabelInsets(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)";
  "org.jfree.chart.axis$Axis#setLabelInsets(org.jfree.chart.util.RectangleInsets)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$CategoryPlot#setDomainAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis)";
  "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(org.jfree.chart.util.Layer)" -> "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)";
  "org.jfree.chart.plot$Marker#setLabelOffsetType(org.jfree.chart.util.LengthAdjustmentType)" -> "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)";
  "org.jfree.chart.plot$PiePlot3D#PiePlot3D()" -> "org.jfree.chart.plot$PiePlot3D#PiePlot3D(org.jfree.data.general.PieDataset)";
  "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation)" -> "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.util$ObjectUtilities#getClassLoaderSource()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart$JFreeChart#setRenderingHints(java.awt.RenderingHints)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart$JFreeChart#setBorderStroke(java.awt.Stroke)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart.util$ObjectList#ObjectList(int)" -> "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int)";
  "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)" -> "org.jfree.chart$JFreeChart#<clinit>()";
  "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositions(org.jfree.chart.axis.CategoryLabelPositions)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.text$TextUtilities#setUseDrawRotatedStringWorkaround(boolean)" -> "org.jfree.chart.text$TextUtilities#<clinit>()";
  "org.jfree.chart.axis$Axis#setTickLabelFont(java.awt.Font)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$ValueAxis#setDownArrow(java.awt.Shape)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.axis$CategoryAxis#clearCategoryLabelToolTips()" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation)" -> "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)";
  "org.jfree.chart.axis$DateAxis#setTickMarkPosition(org.jfree.chart.axis.DateTickMarkPosition)" -> "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)";
  "org.jfree.chart.resources$JFreeChartResources#getContents()" -> "org.jfree.chart.resources$JFreeChartResources#<clinit>()";
}
