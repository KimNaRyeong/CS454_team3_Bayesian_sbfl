digraph G {
  "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#isSerializable(java.lang.Class)";
  "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#get(int)";
  "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)" -> "org.jfree.chart.util$ShapeList#equals(java.lang.Object)";
  "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#get(int)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$ShapeList#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.util$ShapeList#equals(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)";
  "org.jfree.chart.util$ShapeList#equals(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#get(int)";
  "org.jfree.chart.util$ShapeList#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.util$ShapeList#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ShapeList#equals(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.util$ObjectUtilities#getClassLoaderSource()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ShapeList#clone()" -> "org.jfree.chart.util$AbstractObjectList#clone()";
  "org.jfree.chart.util$ShapeList#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$ShapeList#setShape(int,java.awt.Shape)";
  "org.jfree.chart.util$ShapeList#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)";
  "org.jfree.chart.util$ShapeList#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.util$ShapeList#setShape(int,java.awt.Shape)" -> "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.util$AbstractObjectList#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$AbstractObjectList#get(int)";
  "org.jfree.chart.util$AbstractObjectList#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.util$ObjectUtilities#setClassLoaderSource(java.lang.String)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$AbstractObjectList#hashCode()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#convertName(java.lang.String,java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#getClassLoader()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ShapeUtilities#clone(java.awt.Shape)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ShapeUtilities#clone(java.awt.Shape)" -> "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)";
  "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)" -> "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)";
  "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)" -> "org.jfree.chart.util$AbstractObjectList#get(int)";
  "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)" -> "org.jfree.chart.util$ShapeList#equals(java.lang.Object)";
  "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)" -> "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Polygon,java.awt.Polygon)";
  "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)" -> "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Arc2D,java.awt.geom.Arc2D)";
  "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)" -> "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.GeneralPath,java.awt.geom.GeneralPath)";
  "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)" -> "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Ellipse2D,java.awt.geom.Ellipse2D)";
  "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)" -> "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Line2D,java.awt.geom.Line2D)";
  "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.util$ObjectUtilities#isJDK14()" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#isJDK14()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#isJDK14()" -> "org.jfree.chart.util$ObjectUtilities#parseVersions(java.lang.String)";
  "org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$AbstractObjectList#readObject(java.io.ObjectInputStream)" -> "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)";
  "org.jfree.chart.util$ShapeList#getShape(int)" -> "org.jfree.chart.util$AbstractObjectList#get(int)";
  "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ShapeList#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$AbstractObjectList#get(int)";
  "org.jfree.chart.util$ShapeList#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$ShapeList#getShape(int)";
  "org.jfree.chart.util$ShapeList#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)";
  "org.jfree.chart.util$ShapeList#writeObject(java.io.ObjectOutputStream)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$ShapeList#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.util$ShapeList#hashCode()" -> "org.jfree.chart.util$AbstractObjectList#hashCode()";
  "org.jfree.chart.util$ShapeList#hashCode()" -> "org.jfree.chart.util$AbstractObjectList#size()";
  "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)" -> "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#setClassLoader(java.lang.ClassLoader)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ShapeUtilities#createDiagonalCross(float,float)" -> "org.jfree.chart.util$ShapeUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#convertName(java.lang.String,java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#getResourceAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#getResourceAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#getResourceAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
}
