digraph G {
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#getAntiAlias()";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#getAntiAlias()";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getKey(int)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getDrawingSupplier()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#setChartTheme(org.jfree.chart.ChartTheme)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$StandardChartTheme#createLegacyTheme()";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#getChartTheme()";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$StandardChartTheme#createJFreeTheme()";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$StandardChartTheme#createDarknessTheme()";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#createDefaultPaintArray()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#getAntiAlias()";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#setBackgroundImageAlignment(int)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#setBorderVisible(boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#addLegend(org.jfree.chart.title.LegendTitle)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#setBackgroundImageAlpha(float)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#setBackgroundImage(java.awt.Image)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#addSubtitle(int,org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#setBorderStroke(java.awt.Stroke)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#setBorderPaint(java.awt.Paint)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#setRenderingHints(java.awt.RenderingHints)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#fireChartChanged()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#getAntiAlias()";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getValue(int)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.data$DefaultKeyedValues#sortByKeys(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.data$DefaultKeyedValues#removeValue(java.lang.Comparable)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,double)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,double)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.data$DefaultKeyedValues#sortByValues(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#getAntiAlias()";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,double)";
  "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.data$DefaultKeyedValues#sortByKeys(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.data$DefaultKeyedValues#removeValue(java.lang.Comparable)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,double)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,double)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.data$DefaultKeyedValues#sortByValues(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#getAntiAlias()";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,double)";
  "org.jfree.data$RangeType#hashCode()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.data$DefaultKeyedValues#sortByKeys(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.data$DefaultKeyedValues#removeValue(java.lang.Comparable)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,double)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,double)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.data$DefaultKeyedValues#sortByValues(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#getAntiAlias()";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,double)";
  "org.jfree.data$Range#hashCode()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.data$Range#constrain(double)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#contains(double)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.data$DefaultKeyedValues#sortByKeys(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.data$DefaultKeyedValues#removeValue(java.lang.Comparable)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,double)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,double)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.data$DefaultKeyedValues#sortByValues(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#getAntiAlias()";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,double)";
  "org.jfree.data$DefaultKeyedValues#hashCode()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.data$DefaultKeyedValues#sortByKeys(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.data$RangeType#readResolve()";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.data$DefaultKeyedValues#removeValue(java.lang.Comparable)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,double)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,double)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.data$DefaultKeyedValues#sortByValues(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#getAntiAlias()";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.data$RangeType#equals(java.lang.Object)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,double)";
  "org.jfree.data$RangeType#toString()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#getAntiAlias()";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.data$RangeType#readResolve()";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$RangeType#<clinit>()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#getAntiAlias()";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#setBackgroundImageAlignment(int)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#addChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#setBorderVisible(boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartProgressEvent)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#addLegend(org.jfree.chart.title.LegendTitle)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#setNotify(boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#setBackgroundImageAlpha(float)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#addProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#main(java.lang.String[])";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#setBackgroundImage(java.awt.Image)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#setPadding(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#addSubtitle(int,org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#setBorderStroke(java.awt.Stroke)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#setTextAntiAlias(java.lang.Object)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#setTextAntiAlias(boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#setBorderPaint(java.awt.Paint)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#setRenderingHints(java.awt.RenderingHints)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#<clinit>()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#clone()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#setBackgroundImageAlignment(int)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#setBorderVisible(boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#addLegend(org.jfree.chart.title.LegendTitle)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#setNotify(boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#setBackgroundImageAlpha(float)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#setBackgroundImage(java.awt.Image)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#setPadding(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#addSubtitle(int,org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#setBorderStroke(java.awt.Stroke)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#setTextAntiAlias(java.lang.Object)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#setTextAntiAlias(boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#setBorderPaint(java.awt.Paint)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#setRenderingHints(java.awt.RenderingHints)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getPlot()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.data$DefaultKeyedValues#sortByKeys(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.data$DefaultKeyedValues#removeValue(java.lang.Comparable)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,double)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,double)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.data$DefaultKeyedValues#sortByValues(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#getAntiAlias()";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.data$DomainOrder#equals(java.lang.Object)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.data$DomainOrder#readResolve()";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,double)";
  "org.jfree.data$DomainOrder#toString()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.data$DefaultKeyedValues#sortByKeys(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$Range#toString()" -> "org.jfree.data$DefaultKeyedValues#removeValue(java.lang.Comparable)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.data$Range#toString()" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$Range#toString()" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$Range#toString()" -> "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,double)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,double)";
  "org.jfree.data$Range#toString()" -> "org.jfree.data$DefaultKeyedValues#sortByValues(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#getAntiAlias()";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#toString()" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,double)";
  "org.jfree.data$Range#toString()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#setChartTheme(org.jfree.chart.ChartTheme)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartColor#createDefaultPaintArray()";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$StandardChartTheme#createLegacyTheme()";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#getChartTheme()";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#<clinit>()";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$StandardChartTheme#createJFreeTheme()";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$StandardChartTheme#createDarknessTheme()";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartColor#<clinit>()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#setChartTheme(org.jfree.chart.ChartTheme)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#getChartTheme()";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartFactory#<clinit>()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#getAntiAlias()";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,double)";
  "org.jfree.data$DefaultKeyedValues#getItemCount()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.data$DefaultKeyedValues#sortByKeys(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.data$DefaultKeyedValues#removeValue(java.lang.Comparable)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,double)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,double)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.data$DefaultKeyedValues#sortByValues(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#getAntiAlias()";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,double)";
  "org.jfree.data$DomainOrder#hashCode()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#getAntiAlias()";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#getAntiAlias()";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.data$RangeType#readResolve()";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#getAntiAlias()";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$RangeType#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getTitle()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#setBackgroundImageAlignment(int)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#setBorderVisible(boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#fireChartChanged()";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#addLegend(org.jfree.chart.title.LegendTitle)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#setNotify(boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#setBackgroundImageAlpha(float)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#setBackgroundImage(java.awt.Image)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#setPadding(org.jfree.chart.util.RectangleInsets)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#addSubtitle(int,org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#setBorderStroke(java.awt.Stroke)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#setTextAntiAlias(java.lang.Object)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#setTextAntiAlias(boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#setBorderPaint(java.awt.Paint)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#setRenderingHints(java.awt.RenderingHints)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#getAntiAlias()";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#clone()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#clone()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#equals(java.lang.Object)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#getAntiAlias()";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#equals(java.lang.Object)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#clearSubtitles()";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setAntiAlias(boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.data$DomainOrder#readResolve()";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DomainOrder#equals(java.lang.Object)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.data$Range#intersects(org.jfree.data.Range)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.data$Range#scale(org.jfree.data.Range,double)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.data$Range#shift(org.jfree.data.Range,double)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.data$Range#expand(org.jfree.data.Range,double,double)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#getUpperBound()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$StandardChartTheme#clone()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getSubtitle(int)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$JFreeChart#addSubtitle(int,org.jfree.chart.title.Title)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$JFreeChart#getSubtitle(int)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getSubtitleCount()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#clone()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#clone()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$StandardChartTheme#getDrawingSupplier()";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.data$Range#intersects(org.jfree.data.Range)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.data$Range#scale(org.jfree.data.Range,double)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$LegendItem#clone()";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.data$Range#shift(org.jfree.data.Range,double)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$JFreeChart#clone()";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.data$Range#expand(org.jfree.data.Range,double,double)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$LegendItemCollection#clone()";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartRenderingInfo#clone()";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#getLowerBound()" -> "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)";
  "org.jfree.chart$LegendItem#getShape()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getShape()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#getShape()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getShape()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#getShape()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getShape()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#getShape()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getShape()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$ChartRenderingInfo#setChartArea(java.awt.geom.Rectangle2D)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#setChartArea(java.awt.geom.Rectangle2D)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$ChartRenderingInfo#setChartArea(java.awt.geom.Rectangle2D)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#setChartArea(java.awt.geom.Rectangle2D)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#setChartArea(java.awt.geom.Rectangle2D)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$ChartRenderingInfo#setChartArea(java.awt.geom.Rectangle2D)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#setChartArea(java.awt.geom.Rectangle2D)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#isBorderVisible()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#isBorderVisible()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#isBorderVisible()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#isBorderVisible()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#isBorderVisible()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$JFreeChart#isBorderVisible()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#isBorderVisible()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#getPlotInfo()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#getPlotInfo()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$ChartRenderingInfo#getPlotInfo()" -> "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#getPlotInfo()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#getPlotInfo()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#getPlotInfo()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$ChartRenderingInfo#getPlotInfo()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#getPlotInfo()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getOutlinePaint()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getOutlinePaint()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#getOutlinePaint()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getOutlinePaint()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#getOutlinePaint()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getOutlinePaint()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#getOutlinePaint()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getOutlinePaint()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getOutlineStroke()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getOutlineStroke()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#getOutlineStroke()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getOutlineStroke()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#getOutlineStroke()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getOutlineStroke()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#getOutlineStroke()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getOutlineStroke()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setDatasetIndex(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setDatasetIndex(int)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#setDatasetIndex(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setDatasetIndex(int)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#setDatasetIndex(int)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setDatasetIndex(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#setDatasetIndex(int)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setDatasetIndex(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLabelPaint()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLabelPaint()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#getLabelPaint()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLabelPaint()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#getLabelPaint()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLabelPaint()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#getLabelPaint()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLabelPaint()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#isShapeVisible()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#isShapeVisible()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#isShapeVisible()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#isShapeVisible()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#isShapeVisible()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#isShapeVisible()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#isShapeVisible()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#isShapeVisible()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getURLText()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getURLText()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#getURLText()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getURLText()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#getURLText()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getURLText()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#getURLText()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getURLText()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#createAlignedRectangle2D(org.jfree.chart.util.Size2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#createAlignedRectangle2D(org.jfree.chart.util.Size2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#createAlignedRectangle2D(org.jfree.chart.util.Size2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#createAlignedRectangle2D(org.jfree.chart.util.Size2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$JFreeChart#createAlignedRectangle2D(org.jfree.chart.util.Size2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#createAlignedRectangle2D(org.jfree.chart.util.Size2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$JFreeChart#createAlignedRectangle2D(org.jfree.chart.util.Size2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#createAlignedRectangle2D(org.jfree.chart.util.Size2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLine(java.awt.Shape)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLine(java.awt.Shape)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#setLine(java.awt.Shape)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLine(java.awt.Shape)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#setLine(java.awt.Shape)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLine(java.awt.Shape)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#setLine(java.awt.Shape)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLine(java.awt.Shape)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#<clinit>()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#<clinit>()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#<clinit>()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#<clinit>()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#<clinit>()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#<clinit>()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#<clinit>()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#<clinit>()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLabel()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLabel()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#getLabel()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLabel()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#getLabel()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLabel()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#getLabel()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLabel()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLabelPaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLabelPaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#setLabelPaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLabelPaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#setLabelPaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLabelPaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#setLabelPaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLabelPaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.data$DefaultKeyedValues#sortByKeys(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,double)";
  "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.data$DefaultKeyedValues#sortByValues(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLinePaint()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLinePaint()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#getLinePaint()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLinePaint()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#getLinePaint()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLinePaint()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#getLinePaint()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLinePaint()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartProgressEvent)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartProgressEvent)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartProgressEvent)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartProgressEvent)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartProgressEvent)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartProgressEvent)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartProgressEvent)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLabelFont()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLabelFont()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#getLabelFont()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLabelFont()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#getLabelFont()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLabelFont()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#getLabelFont()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLabelFont()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#getLength()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#getLength()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$Range#getLength()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#getLength()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$Range#getLength()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#getLength()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$Range#getLength()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#getLength()" -> "org.jfree.data$Range#expand(org.jfree.data.Range,double,double)";
  "org.jfree.data$Range#getLength()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setSeriesKey(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setSeriesKey(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#setSeriesKey(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setSeriesKey(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#setSeriesKey(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setSeriesKey(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#setSeriesKey(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setSeriesKey(java.lang.Comparable)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#setOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#setOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#setOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setOutlineStroke(java.awt.Stroke)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLineStroke()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLineStroke()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#getLineStroke()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLineStroke()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#getLineStroke()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLineStroke()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#getLineStroke()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLineStroke()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)" -> "org.jfree.chart$JFreeChart#setTitle(java.lang.String)";
  "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLabelFont(java.awt.Font)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLabelFont(java.awt.Font)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#setLabelFont(java.awt.Font)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLabelFont(java.awt.Font)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#setLabelFont(java.awt.Font)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLabelFont(java.awt.Font)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#setLabelFont(java.awt.Font)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLabelFont(java.awt.Font)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setDataset(org.jfree.data.general.Dataset)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setDataset(org.jfree.data.general.Dataset)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#setDataset(org.jfree.data.general.Dataset)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setDataset(org.jfree.data.general.Dataset)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#setDataset(org.jfree.data.general.Dataset)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setDataset(org.jfree.data.general.Dataset)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#setDataset(org.jfree.data.general.Dataset)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setDataset(org.jfree.data.general.Dataset)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLinePaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLinePaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#setLinePaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLinePaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#setLinePaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLinePaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#setLinePaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLinePaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#isShapeOutlineVisible()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#isShapeOutlineVisible()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#isShapeOutlineVisible()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#isShapeOutlineVisible()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#isShapeOutlineVisible()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#isShapeOutlineVisible()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#isShapeOutlineVisible()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#isShapeOutlineVisible()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setSeriesIndex(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setSeriesIndex(int)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#setSeriesIndex(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setSeriesIndex(int)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#setSeriesIndex(int)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setSeriesIndex(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#setSeriesIndex(int)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setSeriesIndex(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#getItemCount()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#getItemCount()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItemCollection#getItemCount()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#getItemCount()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItemCollection#getItemCount()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#getItemCount()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItemCollection#getItemCount()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#getItemCount()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setFillPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setFillPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#setFillPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setFillPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#setFillPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setFillPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#setFillPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setFillPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#intersects(double,double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#intersects(double,double)" -> "org.jfree.data$Range#intersects(org.jfree.data.Range)";
  "org.jfree.data$Range#intersects(double,double)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$Range#intersects(double,double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#intersects(double,double)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#intersects(double,double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$Range#intersects(double,double)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#intersects(double,double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#getEntityCollection()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#getEntityCollection()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$ChartRenderingInfo#getEntityCollection()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#getEntityCollection()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$ChartRenderingInfo#getEntityCollection()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#getEntityCollection()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$ChartRenderingInfo#getEntityCollection()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#getEntityCollection()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getFillPaintTransformer()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getFillPaintTransformer()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#getFillPaintTransformer()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getFillPaintTransformer()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#getFillPaintTransformer()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getFillPaintTransformer()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#getFillPaintTransformer()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getFillPaintTransformer()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLineVisible(boolean)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLineVisible(boolean)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#setLineVisible(boolean)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLineVisible(boolean)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#setLineVisible(boolean)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLineVisible(boolean)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#setLineVisible(boolean)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setLineVisible(boolean)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#addAll(org.jfree.chart.LegendItemCollection)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#addAll(org.jfree.chart.LegendItemCollection)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItemCollection#addAll(org.jfree.chart.LegendItemCollection)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#addAll(org.jfree.chart.LegendItemCollection)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItemCollection#addAll(org.jfree.chart.LegendItemCollection)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#addAll(org.jfree.chart.LegendItemCollection)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItemCollection#addAll(org.jfree.chart.LegendItemCollection)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#addAll(org.jfree.chart.LegendItemCollection)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setOutlinePaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setOutlinePaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#setOutlinePaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setOutlinePaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#setOutlinePaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setOutlinePaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#setOutlinePaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setOutlinePaint(java.awt.Paint)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getBorderStroke()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getBorderStroke()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#getBorderStroke()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getBorderStroke()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getBorderStroke()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$JFreeChart#getBorderStroke()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getBorderStroke()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#setTitle(java.lang.String)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#setTitle(java.lang.String)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#setTitle(java.lang.String)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#setTitle(java.lang.String)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#setTitle(java.lang.String)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$JFreeChart#setTitle(java.lang.String)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#setTitle(java.lang.String)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#isShapeFilled()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#isShapeFilled()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#isShapeFilled()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#isShapeFilled()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#isShapeFilled()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#isShapeFilled()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#isShapeFilled()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#isShapeFilled()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getKeys()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getKeys()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$DefaultKeyedValues#getKeys()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getKeys()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKeys()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getKeys()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKeys()" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#getKeys()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$DefaultKeyedValues#getKeys()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#getKeys()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#clear()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#clear()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$ChartRenderingInfo#clear()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#clear()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#clear()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$ChartRenderingInfo#clear()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$ChartRenderingInfo#clear()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.data$DefaultKeyedValues#sortByKeys(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,double)";
  "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,double)";
  "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.data$DefaultKeyedValues#sortByValues(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setToolTipText(java.lang.String)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setToolTipText(java.lang.String)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#setToolTipText(java.lang.String)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setToolTipText(java.lang.String)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#setToolTipText(java.lang.String)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setToolTipText(java.lang.String)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#setToolTipText(java.lang.String)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setToolTipText(java.lang.String)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getSeriesKey()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getSeriesKey()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#getSeriesKey()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getSeriesKey()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#getSeriesKey()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getSeriesKey()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#getSeriesKey()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getSeriesKey()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getFillPaint()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getFillPaint()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#getFillPaint()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getFillPaint()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#getFillPaint()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getFillPaint()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#getFillPaint()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getFillPaint()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setURLText(java.lang.String)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setURLText(java.lang.String)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#setURLText(java.lang.String)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setURLText(java.lang.String)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#setURLText(java.lang.String)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setURLText(java.lang.String)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#setURLText(java.lang.String)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setURLText(java.lang.String)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLine()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLine()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#getLine()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLine()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#getLine()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLine()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#getLine()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getLine()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#isLineVisible()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#isLineVisible()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#isLineVisible()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#isLineVisible()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#isLineVisible()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#isLineVisible()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#isLineVisible()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#isLineVisible()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getToolTipText()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getToolTipText()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#getToolTipText()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getToolTipText()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#getToolTipText()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getToolTipText()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#getToolTipText()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getToolTipText()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)" -> "org.jfree.data$Range#shift(org.jfree.data.Range,double)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DomainOrder#<clinit>()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DomainOrder#<clinit>()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$DomainOrder#<clinit>()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DomainOrder#<clinit>()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DomainOrder#<clinit>()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$DomainOrder#<clinit>()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$DomainOrder#<clinit>()" -> "org.jfree.data$DomainOrder#readResolve()";
  "org.jfree.data$DomainOrder#<clinit>()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#constrain(double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#constrain(double)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$Range#constrain(double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#constrain(double)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$Range#constrain(double)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#constrain(double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$Range#constrain(double)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#constrain(double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#get(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#get(int)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItemCollection#get(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#get(int)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItemCollection#get(int)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#get(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItemCollection#get(int)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItemCollection#get(int)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getBorderPaint()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getBorderPaint()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$JFreeChart#getBorderPaint()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getBorderPaint()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getBorderPaint()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$JFreeChart#getBorderPaint()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#getBorderPaint()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getDataset()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getDataset()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#getDataset()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getDataset()" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#getDataset()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getDataset()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#getDataset()" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#getDataset()" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setShapeVisible(boolean)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setShapeVisible(boolean)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.chart$LegendItem#setShapeVisible(boolean)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setShapeVisible(boolean)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.chart$LegendItem#setShapeVisible(boolean)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setShapeVisible(boolean)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.chart$LegendItem#setShapeVisible(boolean)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$LegendItem#setShapeVisible(boolean)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$Range#shiftWithNoZeroCrossing(double,double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#shiftWithNoZeroCrossing(double,double)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)";
  "org.jfree.data$Range#shiftWithNoZeroCrossing(double,double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#shiftWithNoZeroCrossing(double,double)" -> "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)";
  "org.jfree.data$Range#shiftWithNoZeroCrossing(double,double)" -> "org.jfree.data$Range#shift(org.jfree.data.Range,double)";
  "org.jfree.data$Range#shiftWithNoZeroCrossing(double,double)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#shiftWithNoZeroCrossing(double,double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int)";
  "org.jfree.data$Range#shiftWithNoZeroCrossing(double,double)" -> "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.data$Range#shiftWithNoZeroCrossing(double,double)" -> "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)";
  "org.jfree.data$Range#shiftWithNoZeroCrossing(double,double)" -> "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)";
  "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$JFreeChart#addLegend(org.jfree.chart.title.LegendTitle)";
  "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)";
  "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getLegend()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getLegend()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getLegend()" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.chart$JFreeChart#getLegend(int)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getLegend(int)" -> "org.jfree.chart$JFreeChart#getLegend()";
  "org.jfree.chart$JFreeChart#getLegend(int)" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#getLegend(int)" -> "org.jfree.chart$JFreeChart#removeLegend()";
  "org.jfree.chart$JFreeChart#removeLegend()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$JFreeChart#removeLegend()" -> "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)";
  "org.jfree.chart$StandardChartTheme#getName()" -> "org.jfree.chart$ChartFactory#setChartTheme(org.jfree.chart.ChartTheme)";
  "org.jfree.data$DefaultKeyedValues#clear()" -> "org.jfree.data$DefaultKeyedValues#sortByKeys(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$DefaultKeyedValues#clear()" -> "org.jfree.data$DefaultKeyedValues#sortByValues(org.jfree.chart.util.SortOrder)";
  "org.jfree.data$DefaultKeyedValues#rebuildIndex()" -> "org.jfree.data$DefaultKeyedValues#removeValue(java.lang.Comparable)";
  "org.jfree.data$DefaultKeyedValues#rebuildIndex()" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,java.lang.Number)";
  "org.jfree.data$DefaultKeyedValues#rebuildIndex()" -> "org.jfree.data$DefaultKeyedValues#removeValue(int)";
  "org.jfree.data$DefaultKeyedValues#rebuildIndex()" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,double)";
  "org.jfree.data$DefaultKeyedValues#removeValue(int)" -> "org.jfree.data$DefaultKeyedValues#removeValue(java.lang.Comparable)";
  "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,java.lang.Number)" -> "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,double)";
  "org.jfree.chart$JFreeChart#setNotify(boolean)" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.chart$JFreeChart#clearSubtitles()" -> "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)";
  "org.jfree.chart$JFreeChart#setTextAntiAlias(java.lang.Object)" -> "org.jfree.chart$JFreeChart#setTextAntiAlias(boolean)";
}
