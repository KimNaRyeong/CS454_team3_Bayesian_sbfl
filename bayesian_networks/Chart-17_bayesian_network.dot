digraph G {
  "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)" [label="org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#isLeapYear(int)" [label="org.jfree.data.time$SerialDate#isLeapYear(int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#<clinit>()" [label="org.jfree.data.time$SerialDate#<clinit>()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)" [label="org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#compareTo(java.lang.Object)" [label="org.jfree.data.time$Day#compareTo(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)" [label="org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SpreadsheetDate#toSerial()" [label="org.jfree.data.time$SpreadsheetDate#toSerial()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#getSerialDate()" [label="org.jfree.data.time$Day#getSerialDate()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#addYears(int,org.jfree.data.time.SerialDate)" [label="org.jfree.data.time$SerialDate#addYears(int,org.jfree.data.time.SerialDate)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SpreadsheetDate#getMonth()" [label="org.jfree.data.time$SpreadsheetDate#getMonth()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SpreadsheetDate#getYYYY()" [label="org.jfree.data.time$SpreadsheetDate#getYYYY()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#createInstance(int,int,int)" [label="org.jfree.data.time$SerialDate#createInstance(int,int,int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()" [label="org.jfree.data.time$SpreadsheetDate#getDayOfMonth()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$RegularTimePeriod#getStart()" [label="org.jfree.data.time$RegularTimePeriod#getStart()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#getFirstMillisecond()" [label="org.jfree.data.time$Day#getFirstMillisecond()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$FixedMillisecond#getFirstMillisecond()" [label="org.jfree.data.time$FixedMillisecond#getFirstMillisecond()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#getFirstMillisecond()" [label="org.jfree.data.time$Year#getFirstMillisecond()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Month#getFirstMillisecond()" [label="org.jfree.data.time$Month#getFirstMillisecond()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" [label="org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#getYear()" [label="org.jfree.data.time$Year#getYear()\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)" [label="org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$FixedMillisecond#compareTo(java.lang.Object)" [label="org.jfree.data.time$FixedMillisecond#compareTo(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$FixedMillisecond#getSerialIndex()" [label="org.jfree.data.time$FixedMillisecond#getSerialIndex()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Month#compareTo(java.lang.Object)" [label="org.jfree.data.time$Month#compareTo(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" [label="org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#fireSeriesChanged()" [label="org.jfree.data.general$Series#fireSeriesChanged()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#toString()" [label="org.jfree.data.time$Day#toString()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeriesDataItem#getPeriod()" [label="org.jfree.data.time$TimeSeriesDataItem#getPeriod()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#compareTo(java.lang.Object)" [label="org.jfree.data.time$Year#compareTo(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)" [label="org.jfree.data.time$TimeSeries#removeAgedItems(boolean)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" [label="org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Month#toString()" [label="org.jfree.data.time$Month#toString()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#getSerialIndex()" [label="org.jfree.data.time$Year#getSerialIndex()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#getDataItem(int)" [label="org.jfree.data.time$TimeSeries#getDataItem(int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#getSerialIndex()" [label="org.jfree.data.time$Day#getSerialIndex()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Month#getSerialIndex()" [label="org.jfree.data.time$Month#getSerialIndex()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#toString()" [label="org.jfree.data.time$SerialDate#toString()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#monthCodeToString(int)" [label="org.jfree.data.time$SerialDate#monthCodeToString(int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Month#getMonth()" [label="org.jfree.data.time$Month#getMonth()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)" [label="org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#getItemCount()" [label="org.jfree.data.time$TimeSeries#getItemCount()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Month#getYearValue()" [label="org.jfree.data.time$Month#getYearValue()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#toString()" [label="org.jfree.data.time$Year#toString()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#getTimePeriod(int)" [label="org.jfree.data.time$TimeSeries#getTimePeriod(int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$RegularTimePeriod#toString()" [label="org.jfree.data.time$RegularTimePeriod#toString()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#isValidMonthCode(int)" [label="org.jfree.data.time$SerialDate#isValidMonthCode(int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" [label="org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)\nP(Fail|Node)=0.00"];
  "org.jfree.chart.util$ObjectUtilities#isJDK14()" [label="org.jfree.chart.util$ObjectUtilities#isJDK14()\nP(Fail|Node)=0.00"];
  "org.jfree.chart.util$ObjectUtilities#<clinit>()" [label="org.jfree.chart.util$ObjectUtilities#<clinit>()\nP(Fail|Node)=0.00"];
  "org.jfree.chart.util$ObjectUtilities#parseVersions(java.lang.String)" [label="org.jfree.chart.util$ObjectUtilities#parseVersions(java.lang.String)\nP(Fail|Node)=0.00"];
  "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)" [label="org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#peg(java.util.Calendar)" [label="org.jfree.data.time$Year#peg(java.util.Calendar)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)" [label="org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)" [label="org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int)" [label="org.jfree.data.time$SerialDate#getNearestDayOfWeek(int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#isValidWeekdayCode(int)" [label="org.jfree.data.time$SerialDate#isValidWeekdayCode(int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)" [label="org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int,org.jfree.data.time.SerialDate)" [label="org.jfree.data.time$SerialDate#getNearestDayOfWeek(int,org.jfree.data.time.SerialDate)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SpreadsheetDate#getDayOfWeek()" [label="org.jfree.data.time$SpreadsheetDate#getDayOfWeek()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#createInstance(int)" [label="org.jfree.data.time$SerialDate#createInstance(int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#setMaximumItemCount(int)" [label="org.jfree.data.time$TimeSeries#setMaximumItemCount(int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#delete(int,int)" [label="org.jfree.data.time$TimeSeries#delete(int,int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeriesDataItem#hashCode()" [label="org.jfree.data.time$TimeSeriesDataItem#hashCode()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#hashCode()" [label="org.jfree.data.time$Day#hashCode()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SpreadsheetDate#hashCode()" [label="org.jfree.data.time$SpreadsheetDate#hashCode()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#hashCode()" [label="org.jfree.data.time$Year#hashCode()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$FixedMillisecond#hashCode()" [label="org.jfree.data.time$FixedMillisecond#hashCode()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Month#hashCode()" [label="org.jfree.data.time$Month#hashCode()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)" [label="org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#setRangeDescription(java.lang.String)" [label="org.jfree.data.time$TimeSeries#setRangeDescription(java.lang.String)\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)" [label="org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#getTimePeriods()" [label="org.jfree.data.time$TimeSeries#getTimePeriods()\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#isEmpty()" [label="org.jfree.data.general$Series#isEmpty()\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#hashCode()" [label="org.jfree.data.general$Series#hashCode()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Month#peg(java.util.Calendar)" [label="org.jfree.data.time$Month#peg(java.util.Calendar)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Month#getFirstMillisecond(java.util.Calendar)" [label="org.jfree.data.time$Month#getFirstMillisecond(java.util.Calendar)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#addMonths(int,org.jfree.data.time.SerialDate)" [label="org.jfree.data.time$SerialDate#addMonths(int,org.jfree.data.time.SerialDate)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)" [label="org.jfree.data.time$TimeSeries#setMaximumItemAge(long)\nP(Fail|Node)=0.00"];
  "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class,java.lang.Class)" [label="org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class,java.lang.Class)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$RegularTimePeriod#getEnd()" [label="org.jfree.data.time$RegularTimePeriod#getEnd()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$FixedMillisecond#getLastMillisecond()" [label="org.jfree.data.time$FixedMillisecond#getLastMillisecond()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#getLastMillisecond()" [label="org.jfree.data.time$Year#getLastMillisecond()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Month#getLastMillisecond()" [label="org.jfree.data.time$Month#getLastMillisecond()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#getLastMillisecond()" [label="org.jfree.data.time$Day#getLastMillisecond()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)" [label="org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#setNotify(boolean)" [label="org.jfree.data.general$Series#setNotify(boolean)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int)" [label="org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int,org.jfree.data.time.SerialDate)" [label="org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int,org.jfree.data.time.SerialDate)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#clone()" [label="org.jfree.data.time$TimeSeries#clone()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeriesDataItem#clone()" [label="org.jfree.data.time$TimeSeriesDataItem#clone()\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#clone()" [label="org.jfree.data.general$Series#clone()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" [label="org.jfree.data.time$TimeSeries#createCopy(int,int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#getMonths(boolean)" [label="org.jfree.data.time$SerialDate#getMonths(boolean)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#clear()" [label="org.jfree.data.time$TimeSeries#clear()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SpreadsheetDate#isAfter(org.jfree.data.time.SerialDate)" [label="org.jfree.data.time$SpreadsheetDate#isAfter(org.jfree.data.time.SerialDate)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Month#previous()" [label="org.jfree.data.time$Month#previous()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$RegularTimePeriod#<clinit>()" [label="org.jfree.data.time$RegularTimePeriod#<clinit>()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Month#parseMonth(java.lang.String)" [label="org.jfree.data.time$Month#parseMonth(java.lang.String)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Month#findSeparator(java.lang.String)" [label="org.jfree.data.time$Month#findSeparator(java.lang.String)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#stringToMonthCode(java.lang.String)" [label="org.jfree.data.time$SerialDate#stringToMonthCode(java.lang.String)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Month#evaluateAsYear(java.lang.String)" [label="org.jfree.data.time$Month#evaluateAsYear(java.lang.String)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#parseYear(java.lang.String)" [label="org.jfree.data.time$Year#parseYear(java.lang.String)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#previous()" [label="org.jfree.data.time$Year#previous()\nP(Fail|Node)=0.00"];
  "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class)" [label="org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#previous()" [label="org.jfree.data.time$Day#previous()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#<clinit>()" [label="org.jfree.data.time$Day#<clinit>()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" [label="org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeriesDataItem#setValue(java.lang.Number)" [label="org.jfree.data.time$TimeSeriesDataItem#setValue(java.lang.Number)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#next()" [label="org.jfree.data.time$Year#next()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$RegularTimePeriod#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone)" [label="org.jfree.data.time$RegularTimePeriod#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#getDayOfMonth()" [label="org.jfree.data.time$Day#getDayOfMonth()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Month#next()" [label="org.jfree.data.time$Month#next()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" [label="org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#getKey()" [label="org.jfree.data.general$Series#getKey()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeriesDataItem#getValue()" [label="org.jfree.data.time$TimeSeriesDataItem#getValue()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#getTimePeriodClass()" [label="org.jfree.data.time$TimeSeries#getTimePeriodClass()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate)" [label="org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate,int)" [label="org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate,int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)" [label="org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SpreadsheetDate#isOnOrBefore(org.jfree.data.time.SerialDate)" [label="org.jfree.data.time$SpreadsheetDate#isOnOrBefore(org.jfree.data.time.SerialDate)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)" [label="org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#getTimePeriodsUniqueToOtherSeries(org.jfree.data.time.TimeSeries)" [label="org.jfree.data.time$TimeSeries#getTimePeriodsUniqueToOtherSeries(org.jfree.data.time.TimeSeries)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)" [label="org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SpreadsheetDate#calcSerial(int,int,int)" [label="org.jfree.data.time$SpreadsheetDate#calcSerial(int,int,int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#leapYearCount(int)" [label="org.jfree.data.time$SerialDate#leapYearCount(int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SpreadsheetDate#compareTo(java.lang.Object)" [label="org.jfree.data.time$SpreadsheetDate#compareTo(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#createInstance(java.util.Date)" [label="org.jfree.data.time$SerialDate#createInstance(java.util.Date)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" [label="org.jfree.data.time$TimeSeries#equals(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#getMaximumItemCount()" [label="org.jfree.data.time$TimeSeries#getMaximumItemCount()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#getDomainDescription()" [label="org.jfree.data.time$TimeSeries#getDomainDescription()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#getRangeDescription()" [label="org.jfree.data.time$TimeSeries#getRangeDescription()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#getMaximumItemAge()" [label="org.jfree.data.time$TimeSeries#getMaximumItemAge()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$FixedMillisecond#getTime()" [label="org.jfree.data.time$FixedMillisecond#getTime()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$FixedMillisecond#equals(java.lang.Object)" [label="org.jfree.data.time$FixedMillisecond#equals(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)" [label="org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#equals(java.lang.Object)" [label="org.jfree.data.time$Year#equals(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#getDescription()" [label="org.jfree.data.general$Series#getDescription()\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#equals(java.lang.Object)" [label="org.jfree.data.general$Series#equals(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#equals(java.lang.Object)" [label="org.jfree.data.time$Day#equals(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" [label="org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Month#equals(java.lang.Object)" [label="org.jfree.data.time$Month#equals(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#getValue(int)" [label="org.jfree.data.time$TimeSeries#getValue(int)\nP(Fail|Node)=0.00"];
  "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)" [label="org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)\nP(Fail|Node)=0.00"];
  "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)" [label="org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)" [label="org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SpreadsheetDate#isOnOrAfter(org.jfree.data.time.SerialDate)" [label="org.jfree.data.time$SpreadsheetDate#isOnOrAfter(org.jfree.data.time.SerialDate)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" [label="org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$FixedMillisecond#getLastMillisecond(java.util.Calendar)" [label="org.jfree.data.time$FixedMillisecond#getLastMillisecond(java.util.Calendar)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$FixedMillisecond#getFirstMillisecond(java.util.Calendar)" [label="org.jfree.data.time$FixedMillisecond#getFirstMillisecond(java.util.Calendar)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)" [label="org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#parseDay(java.lang.String)" [label="org.jfree.data.time$Day#parseDay(java.lang.String)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int,org.jfree.data.time.SerialDate)" [label="org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int,org.jfree.data.time.SerialDate)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#stringToWeekdayCode(java.lang.String)" [label="org.jfree.data.time$SerialDate#stringToWeekdayCode(java.lang.String)\nP(Fail|Node)=0.00"];
  "org.jfree.chart.util$ObjectUtilities#setClassLoader(java.lang.ClassLoader)" [label="org.jfree.chart.util$ObjectUtilities#setClassLoader(java.lang.ClassLoader)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)" [label="org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" [label="org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#getValue(org.jfree.data.time.RegularTimePeriod)" [label="org.jfree.data.time$TimeSeries#getValue(org.jfree.data.time.RegularTimePeriod)\nP(Fail|Node)=0.00"];
  "org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)" [label="org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)\nP(Fail|Node)=0.00"];
  "org.jfree.chart.util$ObjectUtilities#convertName(java.lang.String,java.lang.Class)" [label="org.jfree.chart.util$ObjectUtilities#convertName(java.lang.String,java.lang.Class)\nP(Fail|Node)=0.00"];
  "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)" [label="org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)\nP(Fail|Node)=0.00"];
  "org.jfree.chart.util$ObjectUtilities#getResourceAsStream(java.lang.String,java.lang.Class)" [label="org.jfree.chart.util$ObjectUtilities#getResourceAsStream(java.lang.String,java.lang.Class)\nP(Fail|Node)=0.00"];
  "org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)" [label="org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#delete(org.jfree.data.time.RegularTimePeriod)" [label="org.jfree.data.time$TimeSeries#delete(org.jfree.data.time.RegularTimePeriod)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#update(int,java.lang.Number)" [label="org.jfree.data.time$TimeSeries#update(int,java.lang.Number)\nP(Fail|Node)=0.00"];
  "org.jfree.chart.util$ObjectUtilities#getClassLoaderSource()" [label="org.jfree.chart.util$ObjectUtilities#getClassLoaderSource()\nP(Fail|Node)=0.00"];
  "org.jfree.chart.util$ObjectUtilities#setClassLoaderSource(java.lang.String)" [label="org.jfree.chart.util$ObjectUtilities#setClassLoaderSource(java.lang.String)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int)" [label="org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#getDataItem(org.jfree.data.time.RegularTimePeriod)" [label="org.jfree.data.time$TimeSeries#getDataItem(org.jfree.data.time.RegularTimePeriod)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#getNextTimePeriod()" [label="org.jfree.data.time$TimeSeries#getNextTimePeriod()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$FixedMillisecond#next()" [label="org.jfree.data.time$FixedMillisecond#next()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#next()" [label="org.jfree.data.time$Day#next()\nP(Fail|Node)=0.00"];
  "org.jfree.chart.util$ObjectUtilities#getClassLoader()" [label="org.jfree.chart.util$ObjectUtilities#getClassLoader()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" [label="org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" [label="org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#getYear()" [label="org.jfree.data.time$Day#getYear()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" [label="org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SpreadsheetDate#toDate()" [label="org.jfree.data.time$SpreadsheetDate#toDate()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#getMonth()" [label="org.jfree.data.time$Day#getMonth()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#hashCode()" [label="org.jfree.data.time$TimeSeries#hashCode()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#update(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" [label="org.jfree.data.time$TimeSeries#update(org.jfree.data.time.RegularTimePeriod,java.lang.Number)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$FixedMillisecond#previous()" [label="org.jfree.data.time$FixedMillisecond#previous()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#getMonths()" [label="org.jfree.data.time$SerialDate#getMonths()\nP(Fail|Node)=0.00"];
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" [label="org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#peg(java.util.Calendar)" [label="org.jfree.data.time$Day#peg(java.util.Calendar)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#weekdayCodeToString(int)" [label="org.jfree.data.time$SerialDate#weekdayCodeToString(int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimeSeries#setDomainDescription(java.lang.String)" [label="org.jfree.data.time$TimeSeries#setDomainDescription(java.lang.String)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SpreadsheetDate#isOn(org.jfree.data.time.SerialDate)" [label="org.jfree.data.time$SpreadsheetDate#isOn(org.jfree.data.time.SerialDate)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SpreadsheetDate#isBefore(org.jfree.data.time.SerialDate)" [label="org.jfree.data.time$SpreadsheetDate#isBefore(org.jfree.data.time.SerialDate)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Month#getYear()" [label="org.jfree.data.time$Month#getYear()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SerialDate#getEndOfCurrentMonth(org.jfree.data.time.SerialDate)" [label="org.jfree.data.time$SerialDate#getEndOfCurrentMonth(org.jfree.data.time.SerialDate)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SerialDate#isLeapYear(int)";
  "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)";
  "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)" -> "org.jfree.data.time$SerialDate#isLeapYear(int)";
  "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$Day#compareTo(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$Day#compareTo(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$Day#compareTo(java.lang.Object)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$SerialDate#addYears(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#isLeapYear(int)";
  "org.jfree.data.time$SerialDate#addYears(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$SerialDate#addYears(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#addYears(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$SerialDate#addYears(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#createInstance(int,int,int)";
  "org.jfree.data.time$SerialDate#addYears(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$SerialDate#addYears(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)";
  "org.jfree.data.time$SerialDate#createInstance(int,int,int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$RegularTimePeriod#getStart()" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getStart()" -> "org.jfree.data.time$FixedMillisecond#getFirstMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getStart()" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getStart()" -> "org.jfree.data.time$Month#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$Day#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$FixedMillisecond#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$FixedMillisecond#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$Month#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$FixedMillisecond#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$Day#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$Year#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$Month#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$Year#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$Day#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$Month#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$Month#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$SerialDate#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$SerialDate#monthCodeToString(int)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$Month#getMonth()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$Month#getYearValue()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$Year#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$RegularTimePeriod#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$SerialDate#isValidMonthCode(int)";
  "org.jfree.data.time$Month#compareTo(java.lang.Object)" -> "org.jfree.data.time$Month#getMonth()";
  "org.jfree.data.time$Month#compareTo(java.lang.Object)" -> "org.jfree.data.time$Month#getYearValue()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Day#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$FixedMillisecond#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$FixedMillisecond#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Month#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$FixedMillisecond#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Day#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Year#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Month#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Year#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Day#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Month#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Month#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$SerialDate#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$SerialDate#monthCodeToString(int)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Month#getMonth()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Month#getYearValue()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$Year#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$RegularTimePeriod#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)" -> "org.jfree.data.time$SerialDate#isValidMonthCode(int)";
  "org.jfree.data.general$Series#fireSeriesChanged()" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$Day#toString()" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$Day#toString()" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$Day#toString()" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$Day#toString()" -> "org.jfree.data.time$SerialDate#toString()";
  "org.jfree.data.time$Day#toString()" -> "org.jfree.data.time$SerialDate#monthCodeToString(int)";
  "org.jfree.data.time$Day#toString()" -> "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)";
  "org.jfree.data.time$Day#toString()" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$Day#toString()" -> "org.jfree.data.time$SerialDate#isValidMonthCode(int)";
  "org.jfree.data.time$Year#compareTo(java.lang.Object)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)" -> "org.jfree.data.time$FixedMillisecond#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)" -> "org.jfree.data.time$Year#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)" -> "org.jfree.data.time$Day#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)" -> "org.jfree.data.time$Month#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$Day#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$FixedMillisecond#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$FixedMillisecond#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$Month#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$FixedMillisecond#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$Day#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$Year#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$Month#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$Year#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$Day#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$Month#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$Month#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$SerialDate#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$SerialDate#monthCodeToString(int)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$Month#getMonth()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$Month#getYearValue()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$Year#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$RegularTimePeriod#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)" -> "org.jfree.data.time$SerialDate#isValidMonthCode(int)";
  "org.jfree.data.time$Month#toString()" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$Month#toString()" -> "org.jfree.data.time$SerialDate#monthCodeToString(int)";
  "org.jfree.data.time$Month#toString()" -> "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)";
  "org.jfree.data.time$Month#toString()" -> "org.jfree.data.time$SerialDate#isValidMonthCode(int)";
  "org.jfree.data.time$Day#getSerialIndex()" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$SerialDate#toString()" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$SerialDate#toString()" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#toString()" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$SerialDate#toString()" -> "org.jfree.data.time$SerialDate#monthCodeToString(int)";
  "org.jfree.data.time$SerialDate#toString()" -> "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)";
  "org.jfree.data.time$SerialDate#toString()" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$SerialDate#toString()" -> "org.jfree.data.time$SerialDate#isValidMonthCode(int)";
  "org.jfree.data.time$SerialDate#monthCodeToString(int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#monthCodeToString(int)" -> "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)";
  "org.jfree.data.time$SerialDate#monthCodeToString(int)" -> "org.jfree.data.time$SerialDate#isValidMonthCode(int)";
  "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)" -> "org.jfree.data.time$SerialDate#isValidMonthCode(int)";
  "org.jfree.data.time$TimeSeries#getTimePeriod(int)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#getTimePeriod(int)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$RegularTimePeriod#toString()" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#toString()" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$RegularTimePeriod#toString()" -> "org.jfree.data.time$FixedMillisecond#getFirstMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#toString()" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#toString()" -> "org.jfree.data.time$Month#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$Day#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$FixedMillisecond#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$FixedMillisecond#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$Month#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$FixedMillisecond#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$Day#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$Year#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$Month#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$Year#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$Day#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$Month#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$Month#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$SerialDate#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$SerialDate#monthCodeToString(int)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$Month#getMonth()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$Month#getYearValue()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$Year#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$RegularTimePeriod#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)" -> "org.jfree.data.time$SerialDate#isValidMonthCode(int)";
  "org.jfree.chart.util$ObjectUtilities#isJDK14()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#isJDK14()" -> "org.jfree.chart.util$ObjectUtilities#parseVersions(java.lang.String)";
  "org.jfree.chart.util$ObjectUtilities#isJDK14()" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.data.time$Year#peg(java.util.Calendar)" -> "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Year#peg(java.util.Calendar)" -> "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int)" -> "org.jfree.data.time$SerialDate#isValidWeekdayCode(int)";
  "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int)" -> "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int)" -> "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int,org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfWeek()";
  "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int)" -> "org.jfree.data.time$SerialDate#createInstance(int)";
  "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#createInstance(int)";
  "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#isValidWeekdayCode(int)";
  "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfWeek()";
  "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#createInstance(int)";
  "org.jfree.data.time$SerialDate#createInstance(int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$TimeSeries#setMaximumItemCount(int)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimeSeries#setMaximumItemCount(int)" -> "org.jfree.data.time$TimeSeries#delete(int,int)";
  "org.jfree.data.time$TimeSeries#setMaximumItemCount(int)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#delete(int,int)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimeSeries#delete(int,int)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeriesDataItem#hashCode()" -> "org.jfree.data.time$Day#hashCode()";
  "org.jfree.data.time$TimeSeriesDataItem#hashCode()" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeriesDataItem#hashCode()" -> "org.jfree.data.time$SpreadsheetDate#hashCode()";
  "org.jfree.data.time$TimeSeriesDataItem#hashCode()" -> "org.jfree.data.time$Year#hashCode()";
  "org.jfree.data.time$TimeSeriesDataItem#hashCode()" -> "org.jfree.data.time$FixedMillisecond#hashCode()";
  "org.jfree.data.time$TimeSeriesDataItem#hashCode()" -> "org.jfree.data.time$Month#hashCode()";
  "org.jfree.data.time$Day#hashCode()" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$Day#hashCode()" -> "org.jfree.data.time$SpreadsheetDate#hashCode()";
  "org.jfree.data.time$SpreadsheetDate#hashCode()" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$TimeSeries#setRangeDescription(java.lang.String)" -> "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)";
  "org.jfree.data.time$TimeSeries#getTimePeriods()" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#getTimePeriods()" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#getTimePeriods()" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#getTimePeriods()" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.general$Series#isEmpty()" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.data.time$TimeSeriesDataItem#hashCode()";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.data.time$Day#hashCode()";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.data.time$SpreadsheetDate#hashCode()";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.data.time$Year#hashCode()";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.data.time$FixedMillisecond#hashCode()";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.data.time$Month#hashCode()";
  "org.jfree.data.time$Month#peg(java.util.Calendar)" -> "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Month#peg(java.util.Calendar)" -> "org.jfree.data.time$SerialDate#isLeapYear(int)";
  "org.jfree.data.time$Month#peg(java.util.Calendar)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$Month#peg(java.util.Calendar)" -> "org.jfree.data.time$Month#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Month#peg(java.util.Calendar)" -> "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)";
  "org.jfree.data.time$SerialDate#addMonths(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#isLeapYear(int)";
  "org.jfree.data.time$SerialDate#addMonths(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$SerialDate#addMonths(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#addMonths(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$SerialDate#addMonths(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#createInstance(int,int,int)";
  "org.jfree.data.time$SerialDate#addMonths(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$SerialDate#addMonths(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)";
  "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)" -> "org.jfree.data.time$FixedMillisecond#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)" -> "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)";
  "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)" -> "org.jfree.data.time$Year#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)" -> "org.jfree.data.time$Day#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)" -> "org.jfree.data.time$Month#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.data.time$RegularTimePeriod#getEnd()" -> "org.jfree.data.time$FixedMillisecond#getLastMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getEnd()" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getEnd()" -> "org.jfree.data.time$Month#getLastMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getEnd()" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.general$Series#setNotify(boolean)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.general$Series#setNotify(boolean)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int)" -> "org.jfree.data.time$SerialDate#isValidWeekdayCode(int)";
  "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int)" -> "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int)" -> "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int,org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfWeek()";
  "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int)" -> "org.jfree.data.time$SerialDate#createInstance(int)";
  "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#isValidWeekdayCode(int)";
  "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfWeek()";
  "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#createInstance(int)";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$Day#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$FixedMillisecond#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$FixedMillisecond#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$Month#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$FixedMillisecond#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$Day#toString()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$TimeSeriesDataItem#clone()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$Year#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$Month#toString()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$Year#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.general$Series#clone()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$Day#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$Month#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$Month#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$TimeSeries#createCopy(int,int)";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$SerialDate#toString()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$SerialDate#monthCodeToString(int)";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$Month#getMonth()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$Month#getYearValue()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$Year#toString()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$RegularTimePeriod#toString()";
  "org.jfree.data.time$TimeSeries#clone()" -> "org.jfree.data.time$SerialDate#isValidMonthCode(int)";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$Day#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$FixedMillisecond#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$FixedMillisecond#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$Month#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$FixedMillisecond#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$Day#toString()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$TimeSeriesDataItem#clone()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$Year#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$Month#toString()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$Year#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.general$Series#clone()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$Day#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$Month#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$Month#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$SerialDate#toString()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$SerialDate#monthCodeToString(int)";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$Month#getMonth()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$Month#getYearValue()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$Year#toString()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$RegularTimePeriod#toString()";
  "org.jfree.data.time$TimeSeries#createCopy(int,int)" -> "org.jfree.data.time$SerialDate#isValidMonthCode(int)";
  "org.jfree.data.time$SerialDate#getMonths(boolean)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$TimeSeries#clear()" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimeSeries#clear()" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$SpreadsheetDate#isAfter(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$Month#previous()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Month#parseMonth(java.lang.String)" -> "org.jfree.data.time$Month#findSeparator(java.lang.String)";
  "org.jfree.data.time$Month#parseMonth(java.lang.String)" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Month#parseMonth(java.lang.String)" -> "org.jfree.data.time$SerialDate#stringToMonthCode(java.lang.String)";
  "org.jfree.data.time$Month#parseMonth(java.lang.String)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$Month#parseMonth(java.lang.String)" -> "org.jfree.data.time$Month#evaluateAsYear(java.lang.String)";
  "org.jfree.data.time$Month#parseMonth(java.lang.String)" -> "org.jfree.data.time$Year#parseYear(java.lang.String)";
  "org.jfree.data.time$SerialDate#stringToMonthCode(java.lang.String)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$Month#evaluateAsYear(java.lang.String)" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Month#evaluateAsYear(java.lang.String)" -> "org.jfree.data.time$Year#parseYear(java.lang.String)";
  "org.jfree.data.time$Year#parseYear(java.lang.String)" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Year#previous()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.data.time$Day#previous()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Day#previous()" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$Day#previous()" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$Day#previous()" -> "org.jfree.data.time$Day#<clinit>()";
  "org.jfree.data.time$Day#previous()" -> "org.jfree.data.time$SerialDate#createInstance(int)";
  "org.jfree.data.time$Day#<clinit>()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimeSeriesDataItem#setValue(java.lang.Number)";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$FixedMillisecond#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimeSeriesDataItem#clone()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$Year#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$Day#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$Month#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$Year#next()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$RegularTimePeriod#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone)" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Day#getDayOfMonth()" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$Month#next()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$Day#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeriesDataItem#setValue(java.lang.Number)";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.general$Series#getKey()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeriesDataItem#getValue()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$FixedMillisecond#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$FixedMillisecond#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$Month#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$FixedMillisecond#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$Day#toString()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeriesDataItem#clone()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeries#getTimePeriodClass()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$Year#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$Month#toString()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$Year#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$Day#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$Month#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$Month#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$SerialDate#toString()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$SerialDate#monthCodeToString(int)";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$Month#getMonth()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$Month#getYearValue()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$Year#toString()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$RegularTimePeriod#toString()";
  "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$SerialDate#isValidMonthCode(int)";
  "org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate,int)";
  "org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate,int)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)" -> "org.jfree.data.time$Day#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)" -> "org.jfree.data.time$FixedMillisecond#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)" -> "org.jfree.data.time$Month#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)" -> "org.jfree.data.time$Year#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)" -> "org.jfree.data.time$Month#getMonth()";
  "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)" -> "org.jfree.data.time$Month#getYearValue()";
  "org.jfree.data.time$SpreadsheetDate#isOnOrBefore(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)" -> "org.jfree.data.time$FixedMillisecond#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)" -> "org.jfree.data.time$Year#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)" -> "org.jfree.data.time$Day#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)" -> "org.jfree.data.time$Month#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$TimeSeries#getTimePeriodsUniqueToOtherSeries(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#getTimePeriodsUniqueToOtherSeries(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#getTimePeriodsUniqueToOtherSeries(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)";
  "org.jfree.data.time$TimeSeries#getTimePeriodsUniqueToOtherSeries(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#getTimePeriodsUniqueToOtherSeries(org.jfree.data.time.TimeSeries)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$SpreadsheetDate#calcSerial(int,int,int)" -> "org.jfree.data.time$SerialDate#leapYearCount(int)";
  "org.jfree.data.time$SpreadsheetDate#calcSerial(int,int,int)" -> "org.jfree.data.time$SerialDate#isLeapYear(int)";
  "org.jfree.data.time$SpreadsheetDate#calcSerial(int,int,int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SpreadsheetDate#compareTo(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$SpreadsheetDate#compareTo(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$SerialDate#createInstance(java.util.Date)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getMaximumItemCount()";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.general$Series#getKey()";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getDomainDescription()";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getRangeDescription()";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getMaximumItemAge()";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$FixedMillisecond#getTime()";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$FixedMillisecond#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.general$Series#getDescription()";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.general$Series#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$Month#getMonth()";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$Month#getYearValue()";
  "org.jfree.data.time$TimeSeries#equals(java.lang.Object)" -> "org.jfree.data.time$Month#equals(java.lang.Object)";
  "org.jfree.data.time$FixedMillisecond#equals(java.lang.Object)" -> "org.jfree.data.time$FixedMillisecond#getTime()";
  "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)" -> "org.jfree.data.time$FixedMillisecond#getTime()";
  "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)" -> "org.jfree.data.time$FixedMillisecond#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)" -> "org.jfree.data.time$Month#getMonth()";
  "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)" -> "org.jfree.data.time$Month#getYearValue()";
  "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)" -> "org.jfree.data.time$Month#equals(java.lang.Object)";
  "org.jfree.data.time$Year#equals(java.lang.Object)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getMaximumItemCount()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.general$Series#getKey()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getDomainDescription()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getRangeDescription()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getMaximumItemAge()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$FixedMillisecond#getTime()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#equals(java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$FixedMillisecond#equals(java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.general$Series#getDescription()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$Month#getMonth()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$Month#getYearValue()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$Month#equals(java.lang.Object)";
  "org.jfree.data.time$Day#equals(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$Day#equals(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)";
  "org.jfree.data.time$Day#equals(java.lang.Object)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getMaximumItemCount()";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.general$Series#getKey()";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getDomainDescription()";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getRangeDescription()";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getMaximumItemAge()";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$FixedMillisecond#getTime()";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$TimeSeries#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$FixedMillisecond#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.general$Series#getDescription()";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.general$Series#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$Month#getMonth()";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$Month#getYearValue()";
  "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)" -> "org.jfree.data.time$Month#equals(java.lang.Object)";
  "org.jfree.data.time$Month#equals(java.lang.Object)" -> "org.jfree.data.time$Month#getMonth()";
  "org.jfree.data.time$Month#equals(java.lang.Object)" -> "org.jfree.data.time$Month#getYearValue()";
  "org.jfree.data.time$TimeSeries#getValue(int)" -> "org.jfree.data.time$TimeSeriesDataItem#getValue()";
  "org.jfree.data.time$TimeSeries#getValue(int)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)" -> "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)";
  "org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$SpreadsheetDate#isOnOrAfter(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$FixedMillisecond#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$FixedMillisecond#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SerialDate#isLeapYear(int)";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$Month#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$Day#parseDay(java.lang.String)" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Day#parseDay(java.lang.String)" -> "org.jfree.data.time$Day#<clinit>()";
  "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#isValidWeekdayCode(int)";
  "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfWeek()";
  "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int,org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#createInstance(int)";
  "org.jfree.data.time$SerialDate#stringToWeekdayCode(java.lang.String)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#setClassLoader(java.lang.ClassLoader)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$TimeSeriesDataItem#setValue(java.lang.Number)";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$FixedMillisecond#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$TimeSeriesDataItem#clone()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$Year#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$Day#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$Month#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Day#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$FixedMillisecond#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$FixedMillisecond#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Month#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$FixedMillisecond#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Day#toString()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeriesDataItem#clone()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Year#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Month#toString()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Year#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.general$Series#clone()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Day#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Month#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Month#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#createCopy(int,int)";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$SerialDate#toString()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$SerialDate#monthCodeToString(int)";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Month#getMonth()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Month#getYearValue()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$Year#toString()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$RegularTimePeriod#toString()";
  "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$SerialDate#isValidMonthCode(int)";
  "org.jfree.data.time$TimeSeries#getValue(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeriesDataItem#getValue()";
  "org.jfree.data.time$TimeSeries#getValue(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#getValue(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)";
  "org.jfree.data.time$TimeSeries#getValue(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#getValue(int)";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#convertName(java.lang.String,java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#convertName(java.lang.String,java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#getResourceAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#getResourceAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#getResourceAsStream(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)";
  "org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)" -> "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)";
  "org.jfree.data.time$TimeSeries#delete(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimeSeries#delete(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#delete(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)";
  "org.jfree.data.time$TimeSeries#update(int,java.lang.Number)" -> "org.jfree.data.time$TimeSeriesDataItem#setValue(java.lang.Number)";
  "org.jfree.data.time$TimeSeries#update(int,java.lang.Number)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimeSeries#update(int,java.lang.Number)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#update(int,java.lang.Number)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.chart.util$ObjectUtilities#getClassLoaderSource()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#setClassLoaderSource(java.lang.String)" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int)" -> "org.jfree.data.time$SerialDate#isValidWeekdayCode(int)";
  "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int)" -> "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int)" -> "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int,org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfWeek()";
  "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int)" -> "org.jfree.data.time$SerialDate#createInstance(int)";
  "org.jfree.data.time$TimeSeries#getDataItem(org.jfree.data.time.RegularTimePeriod)" -> "org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)";
  "org.jfree.data.time$TimeSeries#getNextTimePeriod()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$TimeSeries#getNextTimePeriod()" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeries#getNextTimePeriod()" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#getNextTimePeriod()" -> "org.jfree.data.time$Year#next()";
  "org.jfree.data.time$TimeSeries#getNextTimePeriod()" -> "org.jfree.data.time$Month#next()";
  "org.jfree.data.time$TimeSeries#getNextTimePeriod()" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#getNextTimePeriod()" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$TimeSeries#getNextTimePeriod()" -> "org.jfree.data.time$Day#<clinit>()";
  "org.jfree.data.time$TimeSeries#getNextTimePeriod()" -> "org.jfree.data.time$FixedMillisecond#next()";
  "org.jfree.data.time$TimeSeries#getNextTimePeriod()" -> "org.jfree.data.time$Day#next()";
  "org.jfree.data.time$TimeSeries#getNextTimePeriod()" -> "org.jfree.data.time$SerialDate#createInstance(int)";
  "org.jfree.data.time$TimeSeries#getNextTimePeriod()" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#getNextTimePeriod()" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$FixedMillisecond#next()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Day#next()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Day#next()" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$Day#next()" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$Day#next()" -> "org.jfree.data.time$Day#<clinit>()";
  "org.jfree.data.time$Day#next()" -> "org.jfree.data.time$SerialDate#createInstance(int)";
  "org.jfree.chart.util$ObjectUtilities#getClassLoader()" -> "org.jfree.chart.util$ObjectUtilities#<clinit>()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$Day#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$FixedMillisecond#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$FixedMillisecond#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$Month#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$FixedMillisecond#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$Day#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$Year#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$Month#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$Year#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$Day#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$Month#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$Month#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$SerialDate#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$SerialDate#monthCodeToString(int)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$Month#getMonth()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$Month#getYearValue()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$Year#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$RegularTimePeriod#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$SerialDate#isValidMonthCode(int)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$Day#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$FixedMillisecond#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$FixedMillisecond#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$Month#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$FixedMillisecond#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$Day#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$TimeSeriesDataItem#getPeriod()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$Year#compareTo(java.lang.Object)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$Month#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$Year#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$Day#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$Month#getSerialIndex()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$Month#getFirstMillisecond()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$SerialDate#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$SerialDate#monthCodeToString(int)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$Month#getMonth()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$Month#getYearValue()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$Year#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$TimeSeries#getTimePeriod(int)";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$RegularTimePeriod#toString()";
  "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)" -> "org.jfree.data.time$SerialDate#isValidMonthCode(int)";
  "org.jfree.data.time$Day#getYear()" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$FixedMillisecond#getLastMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$Month#getLastMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$FixedMillisecond#getFirstMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$Month#getFirstMillisecond()";
  "org.jfree.data.time$SpreadsheetDate#toDate()" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$SpreadsheetDate#toDate()" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$SpreadsheetDate#toDate()" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$Day#getMonth()" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$TimeSeries#hashCode()" -> "org.jfree.data.time$TimeSeriesDataItem#hashCode()";
  "org.jfree.data.time$TimeSeries#hashCode()" -> "org.jfree.data.general$Series#hashCode()";
  "org.jfree.data.time$TimeSeries#hashCode()" -> "org.jfree.data.time$Day#hashCode()";
  "org.jfree.data.time$TimeSeries#hashCode()" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$TimeSeries#hashCode()" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.data.time$TimeSeries#hashCode()" -> "org.jfree.data.time$SpreadsheetDate#hashCode()";
  "org.jfree.data.time$TimeSeries#hashCode()" -> "org.jfree.data.time$Year#hashCode()";
  "org.jfree.data.time$TimeSeries#hashCode()" -> "org.jfree.data.time$FixedMillisecond#hashCode()";
  "org.jfree.data.time$TimeSeries#hashCode()" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.data.time$TimeSeries#hashCode()" -> "org.jfree.data.time$Month#hashCode()";
  "org.jfree.data.time$TimeSeries#update(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimeSeriesDataItem#setValue(java.lang.Number)";
  "org.jfree.data.time$TimeSeries#update(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimeSeries#update(org.jfree.data.time.RegularTimePeriod,java.lang.Number)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$FixedMillisecond#previous()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$SerialDate#getMonths()" -> "org.jfree.data.time$SerialDate#getMonths(boolean)";
  "org.jfree.data.time$SerialDate#getMonths()" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.time$TimeSeriesDataItem#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.general$Series#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.time$Day#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getDataItem(int)";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.time$SpreadsheetDate#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.time$Year#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.time$FixedMillisecond#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#hashCode()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.time$TimeSeries#getItemCount()";
  "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)" -> "org.jfree.data.time$Month#hashCode()";
  "org.jfree.data.time$Day#peg(java.util.Calendar)" -> "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#peg(java.util.Calendar)" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$Day#peg(java.util.Calendar)" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$Day#peg(java.util.Calendar)" -> "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#peg(java.util.Calendar)" -> "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()";
  "org.jfree.data.time$SerialDate#weekdayCodeToString(int)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$TimeSeries#setDomainDescription(java.lang.String)" -> "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)";
  "org.jfree.data.time$SpreadsheetDate#isOn(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$SpreadsheetDate#isBefore(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#toSerial()";
  "org.jfree.data.time$Month#getYear()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$SerialDate#getEndOfCurrentMonth(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#isLeapYear(int)";
  "org.jfree.data.time$SerialDate#getEndOfCurrentMonth(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getMonth()";
  "org.jfree.data.time$SerialDate#getEndOfCurrentMonth(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#<clinit>()";
  "org.jfree.data.time$SerialDate#getEndOfCurrentMonth(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SpreadsheetDate#getYYYY()";
  "org.jfree.data.time$SerialDate#getEndOfCurrentMonth(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#createInstance(int,int,int)";
  "org.jfree.data.time$SerialDate#getEndOfCurrentMonth(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)";
}
