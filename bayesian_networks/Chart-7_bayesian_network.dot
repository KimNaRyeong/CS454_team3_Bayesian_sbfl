digraph G {
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)" [label="org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#getFirstMillisecond()" [label="org.jfree.data.time$Year#getFirstMillisecond()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#getLastMillisecond()" [label="org.jfree.data.time$Year#getLastMillisecond()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$RegularTimePeriod#getEnd()" [label="org.jfree.data.time$RegularTimePeriod#getEnd()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValue#getPeriod()" [label="org.jfree.data.time$TimePeriodValue#getPeriod()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValue#TimePeriodValue(org.jfree.data.time.TimePeriod,double)" [label="org.jfree.data.time$TimePeriodValue#TimePeriodValue(org.jfree.data.time.TimePeriod,double)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SimpleTimePeriod#getEnd()" [label="org.jfree.data.time$SimpleTimePeriod#getEnd()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$RegularTimePeriod#getStart()" [label="org.jfree.data.time$RegularTimePeriod#getStart()\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)" [label="org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValues#getDataItem(int)" [label="org.jfree.data.time$TimePeriodValues#getDataItem(int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#getFirstMillisecond()" [label="org.jfree.data.time$Day#getFirstMillisecond()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#getLastMillisecond()" [label="org.jfree.data.time$Day#getLastMillisecond()\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)" [label="org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SimpleTimePeriod#getStart()" [label="org.jfree.data.time$SimpleTimePeriod#getStart()\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#fireSeriesChanged()" [label="org.jfree.data.general$Series#fireSeriesChanged()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)" [label="org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)" [label="org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValue#TimePeriodValue(org.jfree.data.time.TimePeriod,java.lang.Number)" [label="org.jfree.data.time$TimePeriodValue#TimePeriodValue(org.jfree.data.time.TimePeriod,java.lang.Number)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValues#delete(int,int)" [label="org.jfree.data.time$TimePeriodValues#delete(int,int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValues#recalculateBounds()" [label="org.jfree.data.time$TimePeriodValues#recalculateBounds()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#previous()" [label="org.jfree.data.time$Day#previous()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$RegularTimePeriod#<clinit>()" [label="org.jfree.data.time$RegularTimePeriod#<clinit>()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)" [label="org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)" [label="org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#peg(java.util.Calendar)" [label="org.jfree.data.time$Day#peg(java.util.Calendar)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)" [label="org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#<clinit>()" [label="org.jfree.data.time$Day#<clinit>()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()" [label="org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$RegularTimePeriod#toString()" [label="org.jfree.data.time$RegularTimePeriod#toString()\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#isEmpty()" [label="org.jfree.data.general$Series#isEmpty()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValues#getItemCount()" [label="org.jfree.data.time$TimePeriodValues#getItemCount()\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#equals(java.lang.Object)" [label="org.jfree.data.general$Series#equals(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#equals(java.lang.Object)" [label="org.jfree.data.time$Day#equals(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#getYear()" [label="org.jfree.data.time$Year#getYear()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#getSerialDate()" [label="org.jfree.data.time$Day#getSerialDate()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#equals(java.lang.Object)" [label="org.jfree.data.time$Year#equals(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SimpleTimePeriod#equals(java.lang.Object)" [label="org.jfree.data.time$SimpleTimePeriod#equals(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#getDescription()" [label="org.jfree.data.general$Series#getDescription()\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#getKey()" [label="org.jfree.data.general$Series#getKey()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValue#hashCode()" [label="org.jfree.data.time$TimePeriodValue#hashCode()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#hashCode()" [label="org.jfree.data.time$Year#hashCode()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SimpleTimePeriod#hashCode()" [label="org.jfree.data.time$SimpleTimePeriod#hashCode()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#hashCode()" [label="org.jfree.data.time$Day#hashCode()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValues#setDomainDescription(java.lang.String)" [label="org.jfree.data.time$TimePeriodValues#setDomainDescription(java.lang.String)\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)" [label="org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValues#update(int,java.lang.Number)" [label="org.jfree.data.time$TimePeriodValues#update(int,java.lang.Number)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValue#setValue(java.lang.Number)" [label="org.jfree.data.time$TimePeriodValue#setValue(java.lang.Number)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#next()" [label="org.jfree.data.time$Day#next()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValues#getTimePeriod(int)" [label="org.jfree.data.time$TimePeriodValues#getTimePeriod(int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValue#toString()" [label="org.jfree.data.time$TimePeriodValue#toString()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValue#getValue()" [label="org.jfree.data.time$TimePeriodValue#getValue()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#Year(int)" [label="org.jfree.data.time$Year#Year(int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)" [label="org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)" [label="org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#peg(java.util.Calendar)" [label="org.jfree.data.time$Year#peg(java.util.Calendar)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" [label="org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValues#getDomainDescription()" [label="org.jfree.data.time$TimePeriodValues#getDomainDescription()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValues#getRangeDescription()" [label="org.jfree.data.time$TimePeriodValues#getRangeDescription()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)" [label="org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValues#TimePeriodValues(java.lang.Comparable)" [label="org.jfree.data.time$TimePeriodValues#TimePeriodValues(java.lang.Comparable)\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#Series(java.lang.Comparable,java.lang.String)" [label="org.jfree.data.general$Series#Series(java.lang.Comparable,java.lang.String)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValues#TimePeriodValues(java.lang.Comparable,java.lang.String,java.lang.String)" [label="org.jfree.data.time$TimePeriodValues#TimePeriodValues(java.lang.Comparable,java.lang.String,java.lang.String)\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#Series(java.lang.Comparable)" [label="org.jfree.data.general$Series#Series(java.lang.Comparable)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#compareTo(java.lang.Object)" [label="org.jfree.data.time$Day#compareTo(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone)" [label="org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SimpleTimePeriod#compareTo(java.lang.Object)" [label="org.jfree.data.time$SimpleTimePeriod#compareTo(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#Year(java.util.Date)" [label="org.jfree.data.time$Year#Year(java.util.Date)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" [label="org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#hashCode()" [label="org.jfree.data.general$Series#hashCode()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#parseDay(java.lang.String)" [label="org.jfree.data.time$Day#parseDay(java.lang.String)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)" [label="org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#Day(java.util.Date)" [label="org.jfree.data.time$Day#Day(java.util.Date)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" [label="org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)" [label="org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValues#getValue(int)" [label="org.jfree.data.time$TimePeriodValues#getValue(int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#Year()" [label="org.jfree.data.time$Year#Year()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,java.lang.Number)" [label="org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,java.lang.Number)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#previous()" [label="org.jfree.data.time$Year#previous()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#compareTo(java.lang.Object)" [label="org.jfree.data.time$Year#compareTo(java.lang.Object)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValues#setRangeDescription(java.lang.String)" [label="org.jfree.data.time$TimePeriodValues#setRangeDescription(java.lang.String)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#Day(int,int,int)" [label="org.jfree.data.time$Day#Day(int,int,int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$RegularTimePeriod#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone)" [label="org.jfree.data.time$RegularTimePeriod#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Day#Day()" [label="org.jfree.data.time$Day#Day()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#parseYear(java.lang.String)" [label="org.jfree.data.time$Year#parseYear(java.lang.String)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodFormatException#TimePeriodFormatException(java.lang.String)" [label="org.jfree.data.time$TimePeriodFormatException#TimePeriodFormatException(java.lang.String)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValues#clone()" [label="org.jfree.data.time$TimePeriodValues#clone()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValue#clone()" [label="org.jfree.data.time$TimePeriodValue#clone()\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#clone()" [label="org.jfree.data.general$Series#clone()\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValues#createCopy(int,int)" [label="org.jfree.data.time$TimePeriodValues#createCopy(int,int)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$Year#next()" [label="org.jfree.data.time$Year#next()\nP(Fail|Node)=0.00"];
  "org.jfree.data.general$Series#setNotify(boolean)" [label="org.jfree.data.general$Series#setNotify(boolean)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SimpleTimePeriod#SimpleTimePeriod(java.util.Date,java.util.Date)" [label="org.jfree.data.time$SimpleTimePeriod#SimpleTimePeriod(java.util.Date,java.util.Date)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$SimpleTimePeriod#SimpleTimePeriod(long,long)" [label="org.jfree.data.time$SimpleTimePeriod#SimpleTimePeriod(long,long)\nP(Fail|Node)=0.00"];
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)" -> "org.jfree.data.time$RegularTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)" -> "org.jfree.data.time$TimePeriodValue#getPeriod()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)" -> "org.jfree.data.time$TimePeriodValue#TimePeriodValue(org.jfree.data.time.TimePeriod,double)";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)" -> "org.jfree.data.time$SimpleTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)" -> "org.jfree.data.time$TimePeriodValues#getDataItem(int)";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)" -> "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)" -> "org.jfree.data.time$SimpleTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)" -> "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)" -> "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)" -> "org.jfree.data.time$TimePeriodValue#TimePeriodValue(org.jfree.data.time.TimePeriod,java.lang.Number)";
  "org.jfree.data.time$RegularTimePeriod#getEnd()" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getEnd()" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.data.time$TimePeriodValue#TimePeriodValue(org.jfree.data.time.TimePeriod,double)" -> "org.jfree.data.time$TimePeriodValue#TimePeriodValue(org.jfree.data.time.TimePeriod,java.lang.Number)";
  "org.jfree.data.time$RegularTimePeriod#getStart()" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getStart()" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.general$Series#fireSeriesChanged()" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.general$Series#fireSeriesChanged()" -> "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)" -> "org.jfree.data.time$RegularTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)" -> "org.jfree.data.time$TimePeriodValue#getPeriod()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)" -> "org.jfree.data.time$SimpleTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)" -> "org.jfree.data.time$TimePeriodValues#getDataItem(int)";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)" -> "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)" -> "org.jfree.data.time$SimpleTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)" -> "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)";
  "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)" -> "org.jfree.data.time$RegularTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)" -> "org.jfree.data.time$TimePeriodValue#getPeriod()";
  "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)" -> "org.jfree.data.time$SimpleTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)" -> "org.jfree.data.time$TimePeriodValues#getDataItem(int)";
  "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)" -> "org.jfree.data.time$SimpleTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValues#delete(int,int)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$TimePeriodValues#delete(int,int)" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.data.time$TimePeriodValues#delete(int,int)" -> "org.jfree.data.time$RegularTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValues#delete(int,int)" -> "org.jfree.data.time$TimePeriodValues#recalculateBounds()";
  "org.jfree.data.time$TimePeriodValues#delete(int,int)" -> "org.jfree.data.time$TimePeriodValue#getPeriod()";
  "org.jfree.data.time$TimePeriodValues#delete(int,int)" -> "org.jfree.data.time$SimpleTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValues#delete(int,int)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValues#delete(int,int)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimePeriodValues#delete(int,int)" -> "org.jfree.data.time$TimePeriodValues#getDataItem(int)";
  "org.jfree.data.time$TimePeriodValues#delete(int,int)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$TimePeriodValues#delete(int,int)" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.data.time$TimePeriodValues#delete(int,int)" -> "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)";
  "org.jfree.data.time$TimePeriodValues#delete(int,int)" -> "org.jfree.data.time$SimpleTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValues#delete(int,int)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimePeriodValues#delete(int,int)" -> "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)";
  "org.jfree.data.time$TimePeriodValues#recalculateBounds()" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$TimePeriodValues#recalculateBounds()" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.data.time$TimePeriodValues#recalculateBounds()" -> "org.jfree.data.time$RegularTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValues#recalculateBounds()" -> "org.jfree.data.time$TimePeriodValue#getPeriod()";
  "org.jfree.data.time$TimePeriodValues#recalculateBounds()" -> "org.jfree.data.time$SimpleTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValues#recalculateBounds()" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValues#recalculateBounds()" -> "org.jfree.data.time$TimePeriodValues#getDataItem(int)";
  "org.jfree.data.time$TimePeriodValues#recalculateBounds()" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$TimePeriodValues#recalculateBounds()" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.data.time$TimePeriodValues#recalculateBounds()" -> "org.jfree.data.time$SimpleTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValues#recalculateBounds()" -> "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)";
  "org.jfree.data.time$Day#previous()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Day#previous()" -> "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#previous()" -> "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#previous()" -> "org.jfree.data.time$Day#peg(java.util.Calendar)";
  "org.jfree.data.time$Day#previous()" -> "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$Day#previous()" -> "org.jfree.data.time$Day#<clinit>()";
  "org.jfree.data.time$Day#previous()" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.data.time$Day#peg(java.util.Calendar)" -> "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#peg(java.util.Calendar)" -> "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$Day#peg(java.util.Calendar)";
  "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.data.time$Day#<clinit>()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$RegularTimePeriod#toString()" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#toString()" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$RegularTimePeriod#toString()" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.general$Series#isEmpty()" -> "org.jfree.data.time$TimePeriodValues#getItemCount()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$RegularTimePeriod#getEnd()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$SimpleTimePeriod#getEnd()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$SimpleTimePeriod#getStart()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.time$SimpleTimePeriod#equals(java.lang.Object)";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.general$Series#getDescription()";
  "org.jfree.data.general$Series#equals(java.lang.Object)" -> "org.jfree.data.general$Series#getKey()";
  "org.jfree.data.time$Day#equals(java.lang.Object)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.time$Year#equals(java.lang.Object)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.time$SimpleTimePeriod#equals(java.lang.Object)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$SimpleTimePeriod#equals(java.lang.Object)" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.data.time$SimpleTimePeriod#equals(java.lang.Object)" -> "org.jfree.data.time$RegularTimePeriod#getEnd()";
  "org.jfree.data.time$SimpleTimePeriod#equals(java.lang.Object)" -> "org.jfree.data.time$SimpleTimePeriod#getEnd()";
  "org.jfree.data.time$SimpleTimePeriod#equals(java.lang.Object)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$SimpleTimePeriod#equals(java.lang.Object)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$SimpleTimePeriod#equals(java.lang.Object)" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.data.time$SimpleTimePeriod#equals(java.lang.Object)" -> "org.jfree.data.time$SimpleTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValue#hashCode()" -> "org.jfree.data.time$Year#hashCode()";
  "org.jfree.data.time$TimePeriodValue#hashCode()" -> "org.jfree.data.time$SimpleTimePeriod#hashCode()";
  "org.jfree.data.time$TimePeriodValue#hashCode()" -> "org.jfree.data.time$Day#hashCode()";
  "org.jfree.data.time$TimePeriodValues#setDomainDescription(java.lang.String)" -> "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)";
  "org.jfree.data.time$TimePeriodValues#update(int,java.lang.Number)" -> "org.jfree.data.time$TimePeriodValue#setValue(java.lang.Number)";
  "org.jfree.data.time$TimePeriodValues#update(int,java.lang.Number)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimePeriodValues#update(int,java.lang.Number)" -> "org.jfree.data.time$TimePeriodValues#getDataItem(int)";
  "org.jfree.data.time$TimePeriodValues#update(int,java.lang.Number)" -> "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)";
  "org.jfree.data.time$TimePeriodValues#update(int,java.lang.Number)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$Day#next()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Day#next()" -> "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#next()" -> "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#next()" -> "org.jfree.data.time$Day#peg(java.util.Calendar)";
  "org.jfree.data.time$Day#next()" -> "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)";
  "org.jfree.data.time$Day#next()" -> "org.jfree.data.time$Day#<clinit>()";
  "org.jfree.data.time$Day#next()" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.data.time$TimePeriodValues#getTimePeriod(int)" -> "org.jfree.data.time$TimePeriodValue#getPeriod()";
  "org.jfree.data.time$TimePeriodValues#getTimePeriod(int)" -> "org.jfree.data.time$TimePeriodValues#getDataItem(int)";
  "org.jfree.data.time$TimePeriodValue#toString()" -> "org.jfree.data.time$TimePeriodValue#getPeriod()";
  "org.jfree.data.time$TimePeriodValue#toString()" -> "org.jfree.data.time$TimePeriodValue#getValue()";
  "org.jfree.data.time$Year#Year(int)" -> "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Year#Year(int)" -> "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Year#Year(int)" -> "org.jfree.data.time$Year#peg(java.util.Calendar)";
  "org.jfree.data.time$Year#Year(int)" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.data.time$Year#peg(java.util.Calendar)" -> "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Year#peg(java.util.Calendar)" -> "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$RegularTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$SimpleTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.general$Series#equals(java.lang.Object)";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$TimePeriodValues#getItemCount()";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$TimePeriodValues#getDataItem(int)";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$TimePeriodValues#getDomainDescription()";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$TimePeriodValues#getRangeDescription()";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$SimpleTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.time$SimpleTimePeriod#equals(java.lang.Object)";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.general$Series#getDescription()";
  "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)" -> "org.jfree.data.general$Series#getKey()";
  "org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)" -> "org.jfree.data.time$RegularTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)" -> "org.jfree.data.time$SimpleTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)" -> "org.jfree.data.time$Day#equals(java.lang.Object)";
  "org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)" -> "org.jfree.data.time$SimpleTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)" -> "org.jfree.data.time$Year#equals(java.lang.Object)";
  "org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)" -> "org.jfree.data.time$SimpleTimePeriod#equals(java.lang.Object)";
  "org.jfree.data.time$TimePeriodValues#TimePeriodValues(java.lang.Comparable)" -> "org.jfree.data.general$Series#Series(java.lang.Comparable,java.lang.String)";
  "org.jfree.data.time$TimePeriodValues#TimePeriodValues(java.lang.Comparable)" -> "org.jfree.data.time$TimePeriodValues#TimePeriodValues(java.lang.Comparable,java.lang.String,java.lang.String)";
  "org.jfree.data.time$TimePeriodValues#TimePeriodValues(java.lang.Comparable)" -> "org.jfree.data.general$Series#Series(java.lang.Comparable)";
  "org.jfree.data.time$TimePeriodValues#TimePeriodValues(java.lang.Comparable,java.lang.String,java.lang.String)" -> "org.jfree.data.general$Series#Series(java.lang.Comparable,java.lang.String)";
  "org.jfree.data.time$TimePeriodValues#TimePeriodValues(java.lang.Comparable,java.lang.String,java.lang.String)" -> "org.jfree.data.general$Series#Series(java.lang.Comparable)";
  "org.jfree.data.general$Series#Series(java.lang.Comparable)" -> "org.jfree.data.general$Series#Series(java.lang.Comparable,java.lang.String)";
  "org.jfree.data.time$Day#compareTo(java.lang.Object)" -> "org.jfree.data.time$Day#getSerialDate()";
  "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone)" -> "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone)" -> "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone)" -> "org.jfree.data.time$Year#peg(java.util.Calendar)";
  "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone)" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.data.time$SimpleTimePeriod#compareTo(java.lang.Object)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$SimpleTimePeriod#compareTo(java.lang.Object)" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.data.time$SimpleTimePeriod#compareTo(java.lang.Object)" -> "org.jfree.data.time$RegularTimePeriod#getEnd()";
  "org.jfree.data.time$SimpleTimePeriod#compareTo(java.lang.Object)" -> "org.jfree.data.time$SimpleTimePeriod#getEnd()";
  "org.jfree.data.time$SimpleTimePeriod#compareTo(java.lang.Object)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$SimpleTimePeriod#compareTo(java.lang.Object)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$SimpleTimePeriod#compareTo(java.lang.Object)" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.data.time$SimpleTimePeriod#compareTo(java.lang.Object)" -> "org.jfree.data.time$SimpleTimePeriod#getStart()";
  "org.jfree.data.time$Year#Year(java.util.Date)" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Year#Year(java.util.Date)" -> "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone)";
  "org.jfree.data.time$Year#Year(java.util.Date)" -> "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Year#Year(java.util.Date)" -> "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Year#Year(java.util.Date)" -> "org.jfree.data.time$Year#peg(java.util.Calendar)";
  "org.jfree.data.time$Year#Year(java.util.Date)" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.data.time$Year#hashCode()";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.data.time$SimpleTimePeriod#hashCode()";
  "org.jfree.data.general$Series#hashCode()" -> "org.jfree.data.time$Day#hashCode()";
  "org.jfree.data.time$Day#parseDay(java.lang.String)" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Day#parseDay(java.lang.String)" -> "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#parseDay(java.lang.String)" -> "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#parseDay(java.lang.String)" -> "org.jfree.data.time$Day#peg(java.util.Calendar)";
  "org.jfree.data.time$Day#parseDay(java.lang.String)" -> "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)";
  "org.jfree.data.time$Day#parseDay(java.lang.String)" -> "org.jfree.data.time$Day#<clinit>()";
  "org.jfree.data.time$Day#parseDay(java.lang.String)" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.data.time$Day#parseDay(java.lang.String)" -> "org.jfree.data.time$Day#Day(java.util.Date)";
  "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)" -> "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)" -> "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)" -> "org.jfree.data.time$Day#peg(java.util.Calendar)";
  "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.data.time$Day#Day(java.util.Date)" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Day#Day(java.util.Date)" -> "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#Day(java.util.Date)" -> "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#Day(java.util.Date)" -> "org.jfree.data.time$Day#peg(java.util.Calendar)";
  "org.jfree.data.time$Day#Day(java.util.Date)" -> "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)";
  "org.jfree.data.time$Day#Day(java.util.Date)" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)" -> "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$TimePeriodValues#getValue(int)" -> "org.jfree.data.time$TimePeriodValues#getDataItem(int)";
  "org.jfree.data.time$TimePeriodValues#getValue(int)" -> "org.jfree.data.time$TimePeriodValue#getValue()";
  "org.jfree.data.time$Year#Year()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Year#Year()" -> "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone)";
  "org.jfree.data.time$Year#Year()" -> "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Year#Year()" -> "org.jfree.data.time$Year#Year(java.util.Date)";
  "org.jfree.data.time$Year#Year()" -> "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Year#Year()" -> "org.jfree.data.time$Year#peg(java.util.Calendar)";
  "org.jfree.data.time$Year#Year()" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,java.lang.Number)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,java.lang.Number)" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,java.lang.Number)" -> "org.jfree.data.time$RegularTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimePeriodValue#getPeriod()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,java.lang.Number)" -> "org.jfree.data.time$SimpleTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,java.lang.Number)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,java.lang.Number)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimePeriodValues#getDataItem(int)";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,java.lang.Number)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,java.lang.Number)" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,java.lang.Number)" -> "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,java.lang.Number)" -> "org.jfree.data.time$SimpleTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,java.lang.Number)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)";
  "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,java.lang.Number)" -> "org.jfree.data.time$TimePeriodValue#TimePeriodValue(org.jfree.data.time.TimePeriod,java.lang.Number)";
  "org.jfree.data.time$Year#previous()" -> "org.jfree.data.time$Year#Year(int)";
  "org.jfree.data.time$Year#previous()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Year#previous()" -> "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Year#previous()" -> "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Year#previous()" -> "org.jfree.data.time$Year#peg(java.util.Calendar)";
  "org.jfree.data.time$Year#previous()" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.data.time$Year#compareTo(java.lang.Object)" -> "org.jfree.data.time$Year#getYear()";
  "org.jfree.data.time$TimePeriodValues#setRangeDescription(java.lang.String)" -> "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)";
  "org.jfree.data.time$Day#Day(int,int,int)" -> "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#Day(int,int,int)" -> "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#Day(int,int,int)" -> "org.jfree.data.time$Day#peg(java.util.Calendar)";
  "org.jfree.data.time$Day#Day(int,int,int)" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.data.time$RegularTimePeriod#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone)" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Day#Day()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Day#Day()" -> "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#Day()" -> "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Day#Day()" -> "org.jfree.data.time$Day#peg(java.util.Calendar)";
  "org.jfree.data.time$Day#Day()" -> "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)";
  "org.jfree.data.time$Day#Day()" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.data.time$Day#Day()" -> "org.jfree.data.time$Day#Day(java.util.Date)";
  "org.jfree.data.time$Year#parseYear(java.lang.String)" -> "org.jfree.data.time$Year#Year(int)";
  "org.jfree.data.time$Year#parseYear(java.lang.String)" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Year#parseYear(java.lang.String)" -> "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Year#parseYear(java.lang.String)" -> "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Year#parseYear(java.lang.String)" -> "org.jfree.data.time$TimePeriodFormatException#TimePeriodFormatException(java.lang.String)";
  "org.jfree.data.time$Year#parseYear(java.lang.String)" -> "org.jfree.data.time$Year#peg(java.util.Calendar)";
  "org.jfree.data.time$Year#parseYear(java.lang.String)" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.data.time$TimePeriodValues#clone()" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$TimePeriodValues#clone()" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.data.time$TimePeriodValues#clone()" -> "org.jfree.data.time$RegularTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValues#clone()" -> "org.jfree.data.time$TimePeriodValue#getPeriod()";
  "org.jfree.data.time$TimePeriodValues#clone()" -> "org.jfree.data.time$SimpleTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValues#clone()" -> "org.jfree.data.time$TimePeriodValues#getItemCount()";
  "org.jfree.data.time$TimePeriodValues#clone()" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValues#clone()" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimePeriodValues#clone()" -> "org.jfree.data.time$TimePeriodValue#clone()";
  "org.jfree.data.time$TimePeriodValues#clone()" -> "org.jfree.data.time$TimePeriodValues#getDataItem(int)";
  "org.jfree.data.time$TimePeriodValues#clone()" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$TimePeriodValues#clone()" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.data.time$TimePeriodValues#clone()" -> "org.jfree.data.general$Series#clone()";
  "org.jfree.data.time$TimePeriodValues#clone()" -> "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)";
  "org.jfree.data.time$TimePeriodValues#clone()" -> "org.jfree.data.time$SimpleTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValues#clone()" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimePeriodValues#clone()" -> "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)";
  "org.jfree.data.time$TimePeriodValues#clone()" -> "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)";
  "org.jfree.data.time$TimePeriodValues#clone()" -> "org.jfree.data.time$TimePeriodValues#createCopy(int,int)";
  "org.jfree.data.time$TimePeriodValues#createCopy(int,int)" -> "org.jfree.data.time$Year#getFirstMillisecond()";
  "org.jfree.data.time$TimePeriodValues#createCopy(int,int)" -> "org.jfree.data.time$Year#getLastMillisecond()";
  "org.jfree.data.time$TimePeriodValues#createCopy(int,int)" -> "org.jfree.data.time$RegularTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValues#createCopy(int,int)" -> "org.jfree.data.time$TimePeriodValue#getPeriod()";
  "org.jfree.data.time$TimePeriodValues#createCopy(int,int)" -> "org.jfree.data.time$SimpleTimePeriod#getEnd()";
  "org.jfree.data.time$TimePeriodValues#createCopy(int,int)" -> "org.jfree.data.time$RegularTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValues#createCopy(int,int)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.time$TimePeriodValues#createCopy(int,int)" -> "org.jfree.data.time$TimePeriodValue#clone()";
  "org.jfree.data.time$TimePeriodValues#createCopy(int,int)" -> "org.jfree.data.time$TimePeriodValues#getDataItem(int)";
  "org.jfree.data.time$TimePeriodValues#createCopy(int,int)" -> "org.jfree.data.time$Day#getFirstMillisecond()";
  "org.jfree.data.time$TimePeriodValues#createCopy(int,int)" -> "org.jfree.data.time$Day#getLastMillisecond()";
  "org.jfree.data.time$TimePeriodValues#createCopy(int,int)" -> "org.jfree.data.general$Series#clone()";
  "org.jfree.data.time$TimePeriodValues#createCopy(int,int)" -> "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)";
  "org.jfree.data.time$TimePeriodValues#createCopy(int,int)" -> "org.jfree.data.time$SimpleTimePeriod#getStart()";
  "org.jfree.data.time$TimePeriodValues#createCopy(int,int)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$TimePeriodValues#createCopy(int,int)" -> "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)";
  "org.jfree.data.time$TimePeriodValues#createCopy(int,int)" -> "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)";
  "org.jfree.data.time$Year#next()" -> "org.jfree.data.time$Year#Year(int)";
  "org.jfree.data.time$Year#next()" -> "org.jfree.data.time$RegularTimePeriod#<clinit>()";
  "org.jfree.data.time$Year#next()" -> "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Year#next()" -> "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)";
  "org.jfree.data.time$Year#next()" -> "org.jfree.data.time$Year#peg(java.util.Calendar)";
  "org.jfree.data.time$Year#next()" -> "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()";
  "org.jfree.data.general$Series#setNotify(boolean)" -> "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)";
  "org.jfree.data.general$Series#setNotify(boolean)" -> "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)";
  "org.jfree.data.general$Series#setNotify(boolean)" -> "org.jfree.data.general$Series#fireSeriesChanged()";
  "org.jfree.data.time$SimpleTimePeriod#SimpleTimePeriod(java.util.Date,java.util.Date)" -> "org.jfree.data.time$SimpleTimePeriod#SimpleTimePeriod(long,long)";
}
