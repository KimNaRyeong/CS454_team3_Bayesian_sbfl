{
    "Chart-1": {
        "org.jfree.chart$ChartColor#<clinit>()": 1025868.0,
        "org.jfree.chart$ChartColor#ChartColor(int,int,int)": 1312.0,
        "org.jfree.chart$ChartColor#createDefaultPaintArray()": 1025868.0,
        "org.jfree.chart$LegendItem#<clinit>()": 1210.0,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String)": 1306.0,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.awt.Paint)": 1300.0,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)": 1212.0,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint)": 1272.0,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)": 1298.0,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Stroke,java.awt.Paint)": 1310.0,
        "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)": 1310.0,
        "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint)": 1310.0,
        "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)": 1312.0,
        "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Stroke,java.awt.Paint)": 1312.0,
        "org.jfree.chart$LegendItem#characterIteratorToString(java.text.CharacterIterator)": 1310.0,
        "org.jfree.chart$LegendItem#clone()": 1308.0,
        "org.jfree.chart$LegendItem#equals(java.lang.Object)": 1296.0,
        "org.jfree.chart$LegendItem#getAttributedLabel()": 1312.0,
        "org.jfree.chart$LegendItem#getDataset()": 1264.0,
        "org.jfree.chart$LegendItem#getDatasetIndex()": 1280.0,
        "org.jfree.chart$LegendItem#getDescription()": 1312.0,
        "org.jfree.chart$LegendItem#getFillPaint()": 1268.0,
        "org.jfree.chart$LegendItem#getFillPaintTransformer()": 1268.0,
        "org.jfree.chart$LegendItem#getLabel()": 1236.0,
        "org.jfree.chart$LegendItem#getLabelFont()": 1268.0,
        "org.jfree.chart$LegendItem#getLabelPaint()": 1268.0,
        "org.jfree.chart$LegendItem#getLine()": 1268.0,
        "org.jfree.chart$LegendItem#getLinePaint()": 1268.0,
        "org.jfree.chart$LegendItem#getLineStroke()": 1268.0,
        "org.jfree.chart$LegendItem#getOutlinePaint()": 1268.0,
        "org.jfree.chart$LegendItem#getOutlineStroke()": 1268.0,
        "org.jfree.chart$LegendItem#getSeriesIndex()": 1280.0,
        "org.jfree.chart$LegendItem#getSeriesKey()": 1266.0,
        "org.jfree.chart$LegendItem#getShape()": 1266.0,
        "org.jfree.chart$LegendItem#getToolTipText()": 1268.0,
        "org.jfree.chart$LegendItem#getURLText()": 1268.0,
        "org.jfree.chart$LegendItem#isLineVisible()": 1268.0,
        "org.jfree.chart$LegendItem#isShapeFilled()": 1268.0,
        "org.jfree.chart$LegendItem#isShapeOutlineVisible()": 1268.0,
        "org.jfree.chart$LegendItem#isShapeVisible()": 1268.0,
        "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)": 1306.0,
        "org.jfree.chart$LegendItem#setDataset(org.jfree.data.general.Dataset)": 1228.0,
        "org.jfree.chart$LegendItem#setDatasetIndex(int)": 1238.0,
        "org.jfree.chart$LegendItem#setDescription(java.lang.String)": 1312.0,
        "org.jfree.chart$LegendItem#setFillPaint(java.awt.Paint)": 1310.0,
        "org.jfree.chart$LegendItem#setFillPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)": 1302.0,
        "org.jfree.chart$LegendItem#setLabelFont(java.awt.Font)": 1236.0,
        "org.jfree.chart$LegendItem#setLabelPaint(java.awt.Paint)": 1308.0,
        "org.jfree.chart$LegendItem#setLine(java.awt.Shape)": 1312.0,
        "org.jfree.chart$LegendItem#setLinePaint(java.awt.Paint)": 1308.0,
        "org.jfree.chart$LegendItem#setLineVisible(boolean)": 1312.0,
        "org.jfree.chart$LegendItem#setOutlinePaint(java.awt.Paint)": 1302.0,
        "org.jfree.chart$LegendItem#setOutlineStroke(java.awt.Stroke)": 1306.0,
        "org.jfree.chart$LegendItem#setSeriesIndex(int)": 1230.0,
        "org.jfree.chart$LegendItem#setSeriesKey(java.lang.Comparable)": 1230.0,
        "org.jfree.chart$LegendItem#setShape(java.awt.Shape)": 1312.0,
        "org.jfree.chart$LegendItem#setShapeVisible(boolean)": 1312.0,
        "org.jfree.chart$LegendItem#setToolTipText(java.lang.String)": 1306.0,
        "org.jfree.chart$LegendItem#setURLText(java.lang.String)": 1306.0,
        "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)": 1306.0,
        "org.jfree.chart$LegendItemCollection#LegendItemCollection()": 1525146.0,
        "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)": 1252.0,
        "org.jfree.chart$LegendItemCollection#addAll(org.jfree.chart.LegendItemCollection)": 1234.0,
        "org.jfree.chart$LegendItemCollection#clone()": 1306.0,
        "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)": 1298.0,
        "org.jfree.chart$LegendItemCollection#get(int)": 1266.0,
        "org.jfree.chart$LegendItemCollection#getItemCount()": 1542492.0,
        "org.jfree.chart$LegendItemCollection#iterator()": 1312.0,
        "org.jfree.chart.axis$Axis#<clinit>()": 690.0,
        "org.jfree.chart.axis$Axis#Axis(java.lang.String)": 734.0,
        "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)": 890.0,
        "org.jfree.chart.axis$Axis#clone()": 1260.0,
        "org.jfree.chart.axis$Axis#createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1208.0,
        "org.jfree.chart.axis$Axis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1240.0,
        "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)": 1204.0,
        "org.jfree.chart.axis$Axis#equals(java.lang.Object)": 1124.0,
        "org.jfree.chart.axis$Axis#fireChangeEvent()": 1086.0,
        "org.jfree.chart.axis$Axis#getAxisLinePaint()": 1204.0,
        "org.jfree.chart.axis$Axis#getAxisLineStroke()": 1204.0,
        "org.jfree.chart.axis$Axis#getFixedDimension()": 1182.0,
        "org.jfree.chart.axis$Axis#getLabel()": 1164.0,
        "org.jfree.chart.axis$Axis#getLabelAngle()": 1182.0,
        "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)": 1182.0,
        "org.jfree.chart.axis$Axis#getLabelFont()": 1182.0,
        "org.jfree.chart.axis$Axis#getLabelInsets()": 1182.0,
        "org.jfree.chart.axis$Axis#getLabelPaint()": 1204.0,
        "org.jfree.chart.axis$Axis#getLabelToolTip()": 1312.0,
        "org.jfree.chart.axis$Axis#getLabelURL()": 1312.0,
        "org.jfree.chart.axis$Axis#getMinorTickMarkInsideLength()": 1312.0,
        "org.jfree.chart.axis$Axis#getMinorTickMarkOutsideLength()": 1312.0,
        "org.jfree.chart.axis$Axis#getPlot()": 830.0,
        "org.jfree.chart.axis$Axis#getTickLabelFont()": 1180.0,
        "org.jfree.chart.axis$Axis#getTickLabelInsets()": 1182.0,
        "org.jfree.chart.axis$Axis#getTickLabelPaint()": 1198.0,
        "org.jfree.chart.axis$Axis#getTickMarkInsideLength()": 1204.0,
        "org.jfree.chart.axis$Axis#getTickMarkOutsideLength()": 1204.0,
        "org.jfree.chart.axis$Axis#getTickMarkPaint()": 1204.0,
        "org.jfree.chart.axis$Axis#getTickMarkStroke()": 1204.0,
        "org.jfree.chart.axis$Axis#hasListener(java.util.EventListener)": 1308.0,
        "org.jfree.chart.axis$Axis#isAxisLineVisible()": 1204.0,
        "org.jfree.chart.axis$Axis#isMinorTickMarksVisible()": 1220.0,
        "org.jfree.chart.axis$Axis#isTickLabelsVisible()": 1182.0,
        "org.jfree.chart.axis$Axis#isTickMarksVisible()": 1200.0,
        "org.jfree.chart.axis$Axis#isVisible()": 1182.0,
        "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)": 938.0,
        "org.jfree.chart.axis$Axis#readObject(java.io.ObjectInputStream)": 1246.0,
        "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)": 1270.0,
        "org.jfree.chart.axis$Axis#setAxisLinePaint(java.awt.Paint)": 1306.0,
        "org.jfree.chart.axis$Axis#setAxisLineStroke(java.awt.Stroke)": 1308.0,
        "org.jfree.chart.axis$Axis#setAxisLineVisible(boolean)": 1300.0,
        "org.jfree.chart.axis$Axis#setFixedDimension(double)": 1310.0,
        "org.jfree.chart.axis$Axis#setLabel(java.lang.String)": 1304.0,
        "org.jfree.chart.axis$Axis#setLabelAngle(double)": 1310.0,
        "org.jfree.chart.axis$Axis#setLabelFont(java.awt.Font)": 1104.0,
        "org.jfree.chart.axis$Axis#setLabelInsets(org.jfree.chart.util.RectangleInsets)": 1310.0,
        "org.jfree.chart.axis$Axis#setLabelInsets(org.jfree.chart.util.RectangleInsets,boolean)": 1310.0,
        "org.jfree.chart.axis$Axis#setLabelPaint(java.awt.Paint)": 1104.0,
        "org.jfree.chart.axis$Axis#setLabelToolTip(java.lang.String)": 1310.0,
        "org.jfree.chart.axis$Axis#setLabelURL(java.lang.String)": 1310.0,
        "org.jfree.chart.axis$Axis#setMinorTickMarkInsideLength(float)": 1310.0,
        "org.jfree.chart.axis$Axis#setMinorTickMarkOutsideLength(float)": 1310.0,
        "org.jfree.chart.axis$Axis#setMinorTickMarksVisible(boolean)": 1310.0,
        "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)": 900.0,
        "org.jfree.chart.axis$Axis#setTickLabelFont(java.awt.Font)": 1104.0,
        "org.jfree.chart.axis$Axis#setTickLabelInsets(org.jfree.chart.util.RectangleInsets)": 1310.0,
        "org.jfree.chart.axis$Axis#setTickLabelPaint(java.awt.Paint)": 1104.0,
        "org.jfree.chart.axis$Axis#setTickLabelsVisible(boolean)": 1310.0,
        "org.jfree.chart.axis$Axis#setTickMarkInsideLength(float)": 1310.0,
        "org.jfree.chart.axis$Axis#setTickMarkOutsideLength(float)": 1310.0,
        "org.jfree.chart.axis$Axis#setTickMarkPaint(java.awt.Paint)": 1310.0,
        "org.jfree.chart.axis$Axis#setTickMarkStroke(java.awt.Stroke)": 1310.0,
        "org.jfree.chart.axis$Axis#setTickMarksVisible(boolean)": 1310.0,
        "org.jfree.chart.axis$Axis#setVisible(boolean)": 1310.0,
        "org.jfree.chart.axis$Axis#writeObject(java.io.ObjectOutputStream)": 1246.0,
        "org.jfree.chart.axis$AxisLocation#<clinit>()": 1168328.0,
        "org.jfree.chart.axis$AxisLocation#AxisLocation(java.lang.String)": 1168328.0,
        "org.jfree.chart.axis$AxisLocation#equals(java.lang.Object)": 1258.0,
        "org.jfree.chart.axis$AxisLocation#getOpposite()": 1312.0,
        "org.jfree.chart.axis$AxisLocation#getOpposite(org.jfree.chart.axis.AxisLocation)": 1312.0,
        "org.jfree.chart.axis$AxisLocation#readResolve()": 1274.0,
        "org.jfree.chart.axis$AxisLocation#toString()": 1266.0,
        "org.jfree.chart.axis$CategoryAnchor#<clinit>()": 1396992.0,
        "org.jfree.chart.axis$CategoryAnchor#CategoryAnchor(java.lang.String)": 1396992.0,
        "org.jfree.chart.axis$CategoryAnchor#equals(java.lang.Object)": 1266.0,
        "org.jfree.chart.axis$CategoryAnchor#readResolve()": 1290.0,
        "org.jfree.chart.axis$CategoryAnchor#toString()": 1286.0,
        "org.jfree.chart.axis$CategoryAxis#CategoryAxis()": 1310.0,
        "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)": 1068.0,
        "org.jfree.chart.axis$CategoryAxis#addCategoryLabelToolTip(java.lang.Comparable,java.lang.String)": 1306.0,
        "org.jfree.chart.axis$CategoryAxis#calculateCategoryGapSize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1250.0,
        "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1236.0,
        "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)": 1252.0,
        "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)": 1304.0,
        "org.jfree.chart.axis$CategoryAxis#clearCategoryLabelToolTips()": 1312.0,
        "org.jfree.chart.axis$CategoryAxis#clone()": 1294.0,
        "org.jfree.chart.axis$CategoryAxis#configure()": 1106.0,
        "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)": 1244.0,
        "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1246.0,
        "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)": 1240.0,
        "org.jfree.chart.axis$CategoryAxis#drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState)": 1242.0,
        "org.jfree.chart.axis$CategoryAxis#equalPaintMaps(java.util.Map,java.util.Map)": 1250.0,
        "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)": 1248.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1250.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1308.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelPositionOffset()": 1312.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelPositions()": 1312.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelToolTip(java.lang.Comparable)": 1292.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryMargin()": 1272.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1250.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(java.lang.Comparable,java.util.List,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1250.0,
        "org.jfree.chart.axis$CategoryAxis#getCategorySeriesMiddle(int,int,int,int,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1312.0,
        "org.jfree.chart.axis$CategoryAxis#getCategorySeriesMiddle(java.lang.Comparable,java.lang.Comparable,org.jfree.data.category.CategoryDataset,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1308.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1250.0,
        "org.jfree.chart.axis$CategoryAxis#getLowerMargin()": 1236.0,
        "org.jfree.chart.axis$CategoryAxis#getMaximumCategoryLabelLines()": 1312.0,
        "org.jfree.chart.axis$CategoryAxis#getMaximumCategoryLabelWidthRatio()": 1312.0,
        "org.jfree.chart.axis$CategoryAxis#getTickLabelFont(java.lang.Comparable)": 1244.0,
        "org.jfree.chart.axis$CategoryAxis#getTickLabelPaint(java.lang.Comparable)": 1244.0,
        "org.jfree.chart.axis$CategoryAxis#getUpperMargin()": 1236.0,
        "org.jfree.chart.axis$CategoryAxis#hashCode()": 1232.0,
        "org.jfree.chart.axis$CategoryAxis#readObject(java.io.ObjectInputStream)": 1288.0,
        "org.jfree.chart.axis$CategoryAxis#readPaintMap(java.io.ObjectInputStream)": 1288.0,
        "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1234.0,
        "org.jfree.chart.axis$CategoryAxis#removeCategoryLabelToolTip(java.lang.Comparable)": 1312.0,
        "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)": 1234.0,
        "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositionOffset(int)": 1310.0,
        "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositions(org.jfree.chart.axis.CategoryLabelPositions)": 1310.0,
        "org.jfree.chart.axis$CategoryAxis#setCategoryMargin(double)": 1288.0,
        "org.jfree.chart.axis$CategoryAxis#setLowerMargin(double)": 1310.0,
        "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelLines(int)": 1312.0,
        "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelWidthRatio(float)": 1310.0,
        "org.jfree.chart.axis$CategoryAxis#setTickLabelFont(java.lang.Comparable,java.awt.Font)": 1306.0,
        "org.jfree.chart.axis$CategoryAxis#setTickLabelPaint(java.lang.Comparable,java.awt.Paint)": 1304.0,
        "org.jfree.chart.axis$CategoryAxis#setUpperMargin(double)": 1310.0,
        "org.jfree.chart.axis$CategoryAxis#writeObject(java.io.ObjectOutputStream)": 1288.0,
        "org.jfree.chart.axis$CategoryAxis#writePaintMap(java.util.Map,java.io.ObjectOutputStream)": 1288.0,
        "org.jfree.chart.axis$ValueAxis#<clinit>()": 730.0,
        "org.jfree.chart.axis$ValueAxis#ValueAxis(java.lang.String,org.jfree.chart.axis.TickUnitSource)": 774.0,
        "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1204.0,
        "org.jfree.chart.axis$ValueAxis#centerRange(double)": 1312.0,
        "org.jfree.chart.axis$ValueAxis#clone()": 1274.0,
        "org.jfree.chart.axis$ValueAxis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1204.0,
        "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1204.0,
        "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)": 1162.0,
        "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 1250.0,
        "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 1192.0,
        "org.jfree.chart.axis$ValueAxis#getAutoRangeMinimumSize()": 902.0,
        "org.jfree.chart.axis$ValueAxis#getAutoTickIndex()": 1312.0,
        "org.jfree.chart.axis$ValueAxis#getDefaultAutoRange()": 1174.0,
        "org.jfree.chart.axis$ValueAxis#getDownArrow()": 1312.0,
        "org.jfree.chart.axis$ValueAxis#getFixedAutoRange()": 902.0,
        "org.jfree.chart.axis$ValueAxis#getLeftArrow()": 1312.0,
        "org.jfree.chart.axis$ValueAxis#getLowerBound()": 1214.0,
        "org.jfree.chart.axis$ValueAxis#getLowerMargin()": 902.0,
        "org.jfree.chart.axis$ValueAxis#getMinorTickCount()": 1180.0,
        "org.jfree.chart.axis$ValueAxis#getRange()": 1032.0,
        "org.jfree.chart.axis$ValueAxis#getRightArrow()": 1312.0,
        "org.jfree.chart.axis$ValueAxis#getStandardTickUnits()": 1182.0,
        "org.jfree.chart.axis$ValueAxis#getUpArrow()": 1312.0,
        "org.jfree.chart.axis$ValueAxis#getUpperBound()": 1214.0,
        "org.jfree.chart.axis$ValueAxis#getUpperMargin()": 902.0,
        "org.jfree.chart.axis$ValueAxis#isAutoRange()": 874.0,
        "org.jfree.chart.axis$ValueAxis#isAutoTickUnitSelection()": 1180.0,
        "org.jfree.chart.axis$ValueAxis#isInverted()": 1170.0,
        "org.jfree.chart.axis$ValueAxis#isNegativeArrowVisible()": 1312.0,
        "org.jfree.chart.axis$ValueAxis#isPositiveArrowVisible()": 1312.0,
        "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()": 1180.0,
        "org.jfree.chart.axis$ValueAxis#lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1186.0,
        "org.jfree.chart.axis$ValueAxis#pan(double)": 1312.0,
        "org.jfree.chart.axis$ValueAxis#readObject(java.io.ObjectInputStream)": 1254.0,
        "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)": 1182.0,
        "org.jfree.chart.axis$ValueAxis#resizeRange(double)": 1294.0,
        "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)": 1294.0,
        "org.jfree.chart.axis$ValueAxis#resizeRange2(double,double)": 1312.0,
        "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean)": 1292.0,
        "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean,boolean)": 1292.0,
        "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double)": 1240.0,
        "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double,boolean)": 1240.0,
        "org.jfree.chart.axis$ValueAxis#setAutoTickIndex(int)": 1312.0,
        "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean)": 1310.0,
        "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean,boolean)": 1274.0,
        "org.jfree.chart.axis$ValueAxis#setDefaultAutoRange(org.jfree.data.Range)": 1288.0,
        "org.jfree.chart.axis$ValueAxis#setDownArrow(java.awt.Shape)": 1312.0,
        "org.jfree.chart.axis$ValueAxis#setFixedAutoRange(double)": 1302.0,
        "org.jfree.chart.axis$ValueAxis#setInverted(boolean)": 1304.0,
        "org.jfree.chart.axis$ValueAxis#setLeftArrow(java.awt.Shape)": 1312.0,
        "org.jfree.chart.axis$ValueAxis#setLowerBound(double)": 1298.0,
        "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)": 1280.0,
        "org.jfree.chart.axis$ValueAxis#setMinorTickCount(int)": 1310.0,
        "org.jfree.chart.axis$ValueAxis#setNegativeArrowVisible(boolean)": 1310.0,
        "org.jfree.chart.axis$ValueAxis#setPositiveArrowVisible(boolean)": 1310.0,
        "org.jfree.chart.axis$ValueAxis#setRange(double,double)": 1280.0,
        "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)": 1256.0,
        "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)": 826.0,
        "org.jfree.chart.axis$ValueAxis#setRangeAboutValue(double,double)": 1312.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(double,double)": 1312.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range)": 1312.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range,boolean,boolean)": 1312.0,
        "org.jfree.chart.axis$ValueAxis#setRightArrow(java.awt.Shape)": 1312.0,
        "org.jfree.chart.axis$ValueAxis#setStandardTickUnits(org.jfree.chart.axis.TickUnitSource)": 1288.0,
        "org.jfree.chart.axis$ValueAxis#setUpArrow(java.awt.Shape)": 1312.0,
        "org.jfree.chart.axis$ValueAxis#setUpperBound(double)": 1302.0,
        "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)": 1280.0,
        "org.jfree.chart.axis$ValueAxis#setVerticalTickLabels(boolean)": 1310.0,
        "org.jfree.chart.axis$ValueAxis#writeObject(java.io.ObjectOutputStream)": 1254.0,
        "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)": 1310.0,
        "org.jfree.chart.entity$CategoryItemEntity#CategoryItemEntity(java.awt.Shape,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,java.lang.Comparable,java.lang.Comparable)": 1300.0,
        "org.jfree.chart.entity$CategoryItemEntity#equals(java.lang.Object)": 1306.0,
        "org.jfree.chart.entity$CategoryItemEntity#getColumnKey()": 1312.0,
        "org.jfree.chart.entity$CategoryItemEntity#getDataset()": 1312.0,
        "org.jfree.chart.entity$CategoryItemEntity#getRowKey()": 1312.0,
        "org.jfree.chart.entity$CategoryItemEntity#setColumnKey(java.lang.Comparable)": 1310.0,
        "org.jfree.chart.entity$CategoryItemEntity#setDataset(org.jfree.data.category.CategoryDataset)": 1312.0,
        "org.jfree.chart.entity$CategoryItemEntity#setRowKey(java.lang.Comparable)": 1310.0,
        "org.jfree.chart.entity$CategoryItemEntity#toString()": 1312.0,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape)": 1302.0,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String)": 1302.0,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String,java.lang.String)": 1244.0,
        "org.jfree.chart.entity$ChartEntity#clone()": 1298.0,
        "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)": 1268.0,
        "org.jfree.chart.entity$ChartEntity#getArea()": 1312.0,
        "org.jfree.chart.entity$ChartEntity#getImageMapAreaTag(org.jfree.chart.imagemap.ToolTipTagFragmentGenerator,org.jfree.chart.imagemap.URLTagFragmentGenerator)": 1312.0,
        "org.jfree.chart.entity$ChartEntity#getPolyCoords(java.awt.Shape)": 1312.0,
        "org.jfree.chart.entity$ChartEntity#getRectCoords(java.awt.geom.Rectangle2D)": 1312.0,
        "org.jfree.chart.entity$ChartEntity#getShapeCoords()": 1312.0,
        "org.jfree.chart.entity$ChartEntity#getShapeType()": 1312.0,
        "org.jfree.chart.entity$ChartEntity#getToolTipText()": 1312.0,
        "org.jfree.chart.entity$ChartEntity#getURLText()": 1312.0,
        "org.jfree.chart.entity$ChartEntity#hashCode()": 1312.0,
        "org.jfree.chart.entity$ChartEntity#readObject(java.io.ObjectInputStream)": 1298.0,
        "org.jfree.chart.entity$ChartEntity#setArea(java.awt.Shape)": 1300.0,
        "org.jfree.chart.entity$ChartEntity#setToolTipText(java.lang.String)": 1300.0,
        "org.jfree.chart.entity$ChartEntity#setURLText(java.lang.String)": 1300.0,
        "org.jfree.chart.entity$ChartEntity#toString()": 1312.0,
        "org.jfree.chart.entity$ChartEntity#writeObject(java.io.ObjectOutputStream)": 1298.0,
        "org.jfree.chart.entity$PlotEntity#PlotEntity(java.awt.Shape,org.jfree.chart.plot.Plot)": 1312.0,
        "org.jfree.chart.entity$PlotEntity#PlotEntity(java.awt.Shape,org.jfree.chart.plot.Plot,java.lang.String)": 1312.0,
        "org.jfree.chart.entity$PlotEntity#PlotEntity(java.awt.Shape,org.jfree.chart.plot.Plot,java.lang.String,java.lang.String)": 1290.0,
        "org.jfree.chart.entity$PlotEntity#clone()": 1312.0,
        "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)": 1312.0,
        "org.jfree.chart.entity$PlotEntity#getPlot()": 1312.0,
        "org.jfree.chart.entity$PlotEntity#hashCode()": 1312.0,
        "org.jfree.chart.entity$PlotEntity#readObject(java.io.ObjectInputStream)": 1312.0,
        "org.jfree.chart.entity$PlotEntity#toString()": 1312.0,
        "org.jfree.chart.entity$PlotEntity#writeObject(java.io.ObjectOutputStream)": 1312.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)": 468596.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart)": 1312.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart,org.jfree.chart.event.ChartChangeEventType)": 468596.0,
        "org.jfree.chart.event$ChartChangeEvent#getChart()": 1312.0,
        "org.jfree.chart.event$ChartChangeEvent#getType()": 1312.0,
        "org.jfree.chart.event$ChartChangeEvent#setChart(org.jfree.chart.JFreeChart)": 1062.0,
        "org.jfree.chart.event$ChartChangeEvent#setType(org.jfree.chart.event.ChartChangeEventType)": 1153236.0,
        "org.jfree.chart.event$ChartChangeEventType#<clinit>()": 468596.0,
        "org.jfree.chart.event$ChartChangeEventType#ChartChangeEventType(java.lang.String)": 468596.0,
        "org.jfree.chart.event$ChartChangeEventType#equals(java.lang.Object)": 1312.0,
        "org.jfree.chart.event$ChartChangeEventType#hashCode()": 1312.0,
        "org.jfree.chart.event$ChartChangeEventType#readResolve()": 1312.0,
        "org.jfree.chart.event$ChartChangeEventType#toString()": 1312.0,
        "org.jfree.chart.event$DatasetChangeInfo#DatasetChangeInfo()": 513492.0,
        "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)": 1060616.0,
        "org.jfree.chart.event$PlotChangeEvent#getPlot()": 1312.0,
        "org.jfree.chart.labels$ItemLabelAnchor#<clinit>()": 675192.0,
        "org.jfree.chart.labels$ItemLabelAnchor#ItemLabelAnchor(java.lang.String)": 675192.0,
        "org.jfree.chart.labels$ItemLabelAnchor#equals(java.lang.Object)": 970.0,
        "org.jfree.chart.labels$ItemLabelAnchor#readResolve()": 1174.0,
        "org.jfree.chart.labels$ItemLabelAnchor#toString()": 1170.0,
        "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition()": 1300.0,
        "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition(org.jfree.chart.labels.ItemLabelAnchor,org.jfree.chart.text.TextAnchor)": 681788.0,
        "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition(org.jfree.chart.labels.ItemLabelAnchor,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)": 678486.0,
        "org.jfree.chart.labels$ItemLabelPosition#equals(java.lang.Object)": 980.0,
        "org.jfree.chart.labels$ItemLabelPosition#getAngle()": 1312.0,
        "org.jfree.chart.labels$ItemLabelPosition#getItemLabelAnchor()": 1312.0,
        "org.jfree.chart.labels$ItemLabelPosition#getRotationAnchor()": 1312.0,
        "org.jfree.chart.labels$ItemLabelPosition#getTextAnchor()": 1312.0,
        "org.jfree.chart.labels$StandardCategorySeriesLabelGenerator#StandardCategorySeriesLabelGenerator()": 1136108.0,
        "org.jfree.chart.labels$StandardCategorySeriesLabelGenerator#StandardCategorySeriesLabelGenerator(java.lang.String)": 1127592.0,
        "org.jfree.chart.labels$StandardCategorySeriesLabelGenerator#clone()": 1248.0,
        "org.jfree.chart.labels$StandardCategorySeriesLabelGenerator#createItemArray(org.jfree.data.category.CategoryDataset,int)": 1294.0,
        "org.jfree.chart.labels$StandardCategorySeriesLabelGenerator#equals(java.lang.Object)": 1094.0,
        "org.jfree.chart.labels$StandardCategorySeriesLabelGenerator#generateLabel(org.jfree.data.category.CategoryDataset,int)": 1294.0,
        "org.jfree.chart.labels$StandardCategorySeriesLabelGenerator#hashCode()": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#<clinit>()": 1435088.0,
        "org.jfree.chart.plot$CategoryPlot#CategoryPlot()": 1687386.0,
        "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)": 1435088.0,
        "org.jfree.chart.plot$CategoryPlot#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 1308.0,
        "org.jfree.chart.plot$CategoryPlot#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation,boolean)": 1308.0,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)": 1304.0,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer,boolean)": 1304.0,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker)": 1308.0,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)": 1304.0,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1296.0,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 1296.0,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker)": 1308.0,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1296.0,
        "org.jfree.chart.plot$CategoryPlot#annotationChanged(org.jfree.chart.event.AnnotationChangeEvent)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1234.0,
        "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 1234.0,
        "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 1234.0,
        "org.jfree.chart.plot$CategoryPlot#canSelectByPoint()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#canSelectByRegion()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#checkAxisIndices(java.util.List)": 1435088.0,
        "org.jfree.chart.plot$CategoryPlot#clearAnnotations()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#clearDomainAxes()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers()": 1308.0,
        "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers(int)": 1308.0,
        "org.jfree.chart.plot$CategoryPlot#clearRangeAxes()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers()": 1302.0,
        "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers(int)": 1308.0,
        "org.jfree.chart.plot$CategoryPlot#clearSelection()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#clone()": 1300.0,
        "org.jfree.chart.plot$CategoryPlot#cloneMarkerMap(java.util.Map)": 1300.0,
        "org.jfree.chart.plot$CategoryPlot#configureDomainAxes()": 1435088.0,
        "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()": 1435088.0,
        "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.event.DatasetChangeEvent)": 1435088.0,
        "org.jfree.chart.plot$CategoryPlot#datasetsMappedToDomainAxis(int)": 1236.0,
        "org.jfree.chart.plot$CategoryPlot#datasetsMappedToRangeAxis(int)": 1106.0,
        "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 1234.0,
        "org.jfree.chart.plot$CategoryPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 1240.0,
        "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 1240.0,
        "org.jfree.chart.plot$CategoryPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1244.0,
        "org.jfree.chart.plot$CategoryPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,int,java.lang.Comparable,java.lang.Comparable,java.awt.Stroke,java.awt.Paint)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1240.0,
        "org.jfree.chart.plot$CategoryPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 1240.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 1240.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 1240.0,
        "org.jfree.chart.plot$CategoryPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1240.0,
        "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)": 1248.0,
        "org.jfree.chart.plot$CategoryPlot#findSelectionStateForDataset(org.jfree.data.category.CategoryDataset,java.lang.Object)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#getAnchorValue()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#getAnnotations()": 1240.0,
        "org.jfree.chart.plot$CategoryPlot#getAxisOffset()": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#getCategories()": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)": 1236.0,
        "org.jfree.chart.plot$CategoryPlot#getColumnRenderingOrder()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#getCrosshairDatasetIndex()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 1106.0,
        "org.jfree.chart.plot$CategoryPlot#getDataset()": 1306.0,
        "org.jfree.chart.plot$CategoryPlot#getDataset(int)": 1435088.0,
        "org.jfree.chart.plot$CategoryPlot#getDatasetCount()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#getDatasetRenderingOrder()": 1240.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxis()": 1300.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxis(int)": 1150.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisCount()": 1210.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge()": 1254.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)": 1234.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisForDataset(int)": 1238.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisIndex(org.jfree.chart.axis.CategoryAxis)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation()": 1234.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation(int)": 1234.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainCrosshairColumnKey()": 1240.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainCrosshairPaint()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainCrosshairRowKey()": 1240.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainCrosshairStroke()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlinePaint()": 1308.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlinePosition()": 1308.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlineStroke()": 1308.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)": 1240.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(org.jfree.chart.util.Layer)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#getDrawSharedDomainAxis()": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#getFixedDomainAxisSpace()": 1308.0,
        "org.jfree.chart.plot$CategoryPlot#getFixedLegendItems()": 1306.0,
        "org.jfree.chart.plot$CategoryPlot#getFixedRangeAxisSpace()": 1308.0,
        "org.jfree.chart.plot$CategoryPlot#getIndexOf(org.jfree.chart.renderer.category.CategoryItemRenderer)": 1628138.0,
        "org.jfree.chart.plot$CategoryPlot#getLegendItems()": 1234.0,
        "org.jfree.chart.plot$CategoryPlot#getOrientation()": 1224.0,
        "org.jfree.chart.plot$CategoryPlot#getPlotType()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxis()": 1190.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)": 1435088.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisCount()": 1210.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()": 1240.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)": 1234.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisForDataset(int)": 1238.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation()": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation(int)": 1234.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairPaint()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairStroke()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairValue()": 1240.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeGridlinePaint()": 1240.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeGridlineStroke()": 1240.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)": 1240.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(org.jfree.chart.util.Layer)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeMinorGridlinePaint()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeMinorGridlineStroke()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeZeroBaselinePaint()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeZeroBaselineStroke()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#getRenderer()": 1196.0,
        "org.jfree.chart.plot$CategoryPlot#getRenderer(int)": 1158.0,
        "org.jfree.chart.plot$CategoryPlot#getRendererCount()": 1210.0,
        "org.jfree.chart.plot$CategoryPlot#getRendererForDataset(org.jfree.data.category.CategoryDataset)": 1106.0,
        "org.jfree.chart.plot$CategoryPlot#getRowRenderingOrder()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#getShadowGenerator()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#getWeight()": 1308.0,
        "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#indexOf(org.jfree.data.category.CategoryDataset)": 1258.0,
        "org.jfree.chart.plot$CategoryPlot#integerise(java.awt.geom.Rectangle2D)": 1234.0,
        "org.jfree.chart.plot$CategoryPlot#isDomainCrosshairVisible()": 1240.0,
        "org.jfree.chart.plot$CategoryPlot#isDomainGridlinesVisible()": 1240.0,
        "org.jfree.chart.plot$CategoryPlot#isDomainPannable()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#isDomainZoomable()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeCrosshairLockedOnData()": 1298.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeCrosshairVisible()": 1238.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeGridlinesVisible()": 1240.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeMinorGridlinesVisible()": 1256.0,
        "org.jfree.chart.plot$CategoryPlot#isRangePannable()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeZeroBaselineVisible()": 1238.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeZoomable()": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxes(int,java.util.List)": 1435088.0,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxis(int,int)": 1435088.0,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxes(int,java.util.List)": 1435088.0,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxis(int,int)": 1435088.0,
        "org.jfree.chart.plot$CategoryPlot#panDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#readObject(java.io.ObjectInputStream)": 1296.0,
        "org.jfree.chart.plot$CategoryPlot#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation,boolean)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CategoryCrosshairState)": 1240.0,
        "org.jfree.chart.plot$CategoryPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)": 1204.0,
        "org.jfree.chart.plot$CategoryPlot#select(double,double,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#select(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double,boolean)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)": 1208.0,
        "org.jfree.chart.plot$CategoryPlot#setColumnRenderingOrder(org.jfree.chart.util.SortOrder)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setCrosshairDatasetIndex(int)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setCrosshairDatasetIndex(int,boolean)": 1238.0,
        "org.jfree.chart.plot$CategoryPlot#setDataset(int,org.jfree.data.category.CategoryDataset)": 1666658.0,
        "org.jfree.chart.plot$CategoryPlot#setDataset(org.jfree.data.category.CategoryDataset)": 1687386.0,
        "org.jfree.chart.plot$CategoryPlot#setDatasetRenderingOrder(org.jfree.chart.plot.DatasetRenderingOrder)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxes(org.jfree.chart.axis.CategoryAxis[])": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis)": 1288.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)": 1288.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(org.jfree.chart.axis.CategoryAxis)": 1296.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 1435088.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 1435088.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairColumnKey(java.lang.Comparable)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairColumnKey(java.lang.Comparable,boolean)": 1238.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairPaint(java.awt.Paint)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairRowKey(java.lang.Comparable)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairRowKey(java.lang.Comparable,boolean)": 1238.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairStroke(java.awt.Stroke)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairVisible(boolean)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePaint(java.awt.Paint)": 1208.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePosition(org.jfree.chart.axis.CategoryAnchor)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlineStroke(java.awt.Stroke)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinesVisible(boolean)": 1294.0,
        "org.jfree.chart.plot$CategoryPlot#setDrawSharedDomainAxis(boolean)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace)": 1308.0,
        "org.jfree.chart.plot$CategoryPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 1306.0,
        "org.jfree.chart.plot$CategoryPlot#setFixedLegendItems(org.jfree.chart.LegendItemCollection)": 1308.0,
        "org.jfree.chart.plot$CategoryPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)": 1308.0,
        "org.jfree.chart.plot$CategoryPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 1306.0,
        "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)": 1270.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)": 1286.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)": 1286.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)": 1294.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 1435088.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 1435088.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairLockedOnData(boolean)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairPaint(java.awt.Paint)": 1308.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairStroke(java.awt.Stroke)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double,boolean)": 1238.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairVisible(boolean)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlinePaint(java.awt.Paint)": 1208.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlineStroke(java.awt.Stroke)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlinesVisible(boolean)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeMinorGridlinePaint(java.awt.Paint)": 1308.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeMinorGridlineStroke(java.awt.Stroke)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeMinorGridlinesVisible(boolean)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setRangePannable(boolean)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeZeroBaselinePaint(java.awt.Paint)": 1206.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeZeroBaselineStroke(java.awt.Stroke)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeZeroBaselineVisible(boolean)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer)": 1304.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)": 1705628.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)": 1713476.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderers(org.jfree.chart.renderer.category.CategoryItemRenderer[])": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#setRowRenderingOrder(org.jfree.chart.util.SortOrder)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setShadowGenerator(org.jfree.chart.util.ShadowGenerator)": 1310.0,
        "org.jfree.chart.plot$CategoryPlot#setWeight(int)": 1290.0,
        "org.jfree.chart.plot$CategoryPlot#writeObject(java.io.ObjectOutputStream)": 1296.0,
        "org.jfree.chart.plot$CategoryPlot#zoom(double)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1312.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 1312.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#<clinit>()": 1183518.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#DatasetRenderingOrder(java.lang.String)": 1183518.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#equals(java.lang.Object)": 1278.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#hashCode()": 1312.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#readResolve()": 1278.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#toString()": 1278.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()": 1025868.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier()": 1025868.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])": 1025868.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])": 1306.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#clone()": 1010.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#createStandardSeriesShapes()": 1025868.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#equalShapes(java.awt.Shape[],java.awt.Shape[])": 1136.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)": 1134.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextFillPaint()": 1310.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlinePaint()": 1308.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlineStroke()": 1310.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextPaint()": 1164.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextShape()": 1264.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextStroke()": 1232.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double)": 1025868.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double,double)": 1025868.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#readObject(java.io.ObjectInputStream)": 1244.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#writeObject(java.io.ObjectOutputStream)": 1244.0,
        "org.jfree.chart.plot$Plot#<clinit>()": 1038066.0,
        "org.jfree.chart.plot$Plot#Plot()": 1038066.0,
        "org.jfree.chart.plot$Plot#addChangeListener(org.jfree.chart.event.PlotChangeListener)": 908.0,
        "org.jfree.chart.plot$Plot#annotationChanged(org.jfree.chart.event.AnnotationChangeEvent)": 1312.0,
        "org.jfree.chart.plot$Plot#axisChanged(org.jfree.chart.event.AxisChangeEvent)": 1086.0,
        "org.jfree.chart.plot$Plot#clone()": 1250.0,
        "org.jfree.chart.plot$Plot#createAndAddEntity(java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo,java.lang.String,java.lang.String)": 1208.0,
        "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.event.DatasetChangeEvent)": 1284.0,
        "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1302.0,
        "org.jfree.chart.plot$Plot#drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1202.0,
        "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1288.0,
        "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1202.0,
        "org.jfree.chart.plot$Plot#equals(java.lang.Object)": 1146.0,
        "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1302.0,
        "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)": 1202.0,
        "org.jfree.chart.plot$Plot#fireChangeEvent()": 1194428.0,
        "org.jfree.chart.plot$Plot#getBackgroundAlpha()": 1308.0,
        "org.jfree.chart.plot$Plot#getBackgroundImage()": 1308.0,
        "org.jfree.chart.plot$Plot#getBackgroundImageAlignment()": 1312.0,
        "org.jfree.chart.plot$Plot#getBackgroundImageAlpha()": 1312.0,
        "org.jfree.chart.plot$Plot#getBackgroundPaint()": 1074.0,
        "org.jfree.chart.plot$Plot#getDatasetGroup()": 1312.0,
        "org.jfree.chart.plot$Plot#getDrawingSupplier()": 958.0,
        "org.jfree.chart.plot$Plot#getForegroundAlpha()": 1198.0,
        "org.jfree.chart.plot$Plot#getInsets()": 1172.0,
        "org.jfree.chart.plot$Plot#getLegendItems()": 1310.0,
        "org.jfree.chart.plot$Plot#getNoDataMessage()": 1312.0,
        "org.jfree.chart.plot$Plot#getNoDataMessageFont()": 1312.0,
        "org.jfree.chart.plot$Plot#getNoDataMessagePaint()": 1312.0,
        "org.jfree.chart.plot$Plot#getOutlinePaint()": 1308.0,
        "org.jfree.chart.plot$Plot#getOutlineStroke()": 1308.0,
        "org.jfree.chart.plot$Plot#getParent()": 1142516.0,
        "org.jfree.chart.plot$Plot#getRectX(double,double,double,org.jfree.chart.util.RectangleEdge)": 1312.0,
        "org.jfree.chart.plot$Plot#getRectY(double,double,double,org.jfree.chart.util.RectangleEdge)": 1312.0,
        "org.jfree.chart.plot$Plot#getRootPlot()": 1312.0,
        "org.jfree.chart.plot$Plot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 1312.0,
        "org.jfree.chart.plot$Plot#isNotify()": 1292.0,
        "org.jfree.chart.plot$Plot#isOutlineVisible()": 1240.0,
        "org.jfree.chart.plot$Plot#isSubplot()": 1312.0,
        "org.jfree.chart.plot$Plot#markerChanged(org.jfree.chart.event.MarkerChangeEvent)": 1312.0,
        "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)": 1060616.0,
        "org.jfree.chart.plot$Plot#readObject(java.io.ObjectInputStream)": 1248.0,
        "org.jfree.chart.plot$Plot#removeChangeListener(org.jfree.chart.event.PlotChangeListener)": 1304.0,
        "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)": 1184.0,
        "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)": 1184.0,
        "org.jfree.chart.plot$Plot#setBackgroundAlpha(float)": 1310.0,
        "org.jfree.chart.plot$Plot#setBackgroundImage(java.awt.Image)": 1310.0,
        "org.jfree.chart.plot$Plot#setBackgroundImageAlignment(int)": 1310.0,
        "org.jfree.chart.plot$Plot#setBackgroundImageAlpha(float)": 1310.0,
        "org.jfree.chart.plot$Plot#setBackgroundPaint(java.awt.Paint)": 1064.0,
        "org.jfree.chart.plot$Plot#setDatasetGroup(org.jfree.data.general.DatasetGroup)": 1304.0,
        "org.jfree.chart.plot$Plot#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)": 1072.0,
        "org.jfree.chart.plot$Plot#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier,boolean)": 1312.0,
        "org.jfree.chart.plot$Plot#setForegroundAlpha(float)": 1296.0,
        "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)": 1244.0,
        "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets,boolean)": 1234.0,
        "org.jfree.chart.plot$Plot#setNoDataMessage(java.lang.String)": 1310.0,
        "org.jfree.chart.plot$Plot#setNoDataMessageFont(java.awt.Font)": 1310.0,
        "org.jfree.chart.plot$Plot#setNoDataMessagePaint(java.awt.Paint)": 1310.0,
        "org.jfree.chart.plot$Plot#setNotify(boolean)": 1292.0,
        "org.jfree.chart.plot$Plot#setOutlinePaint(java.awt.Paint)": 1072.0,
        "org.jfree.chart.plot$Plot#setOutlineStroke(java.awt.Stroke)": 1310.0,
        "org.jfree.chart.plot$Plot#setOutlineVisible(boolean)": 1310.0,
        "org.jfree.chart.plot$Plot#setParent(org.jfree.chart.plot.Plot)": 1272.0,
        "org.jfree.chart.plot$Plot#writeObject(java.io.ObjectOutputStream)": 1248.0,
        "org.jfree.chart.plot$Plot#zoom(double)": 1312.0,
        "org.jfree.chart.plot$PlotOrientation#<clinit>()": 1164006.0,
        "org.jfree.chart.plot$PlotOrientation#PlotOrientation(java.lang.String)": 1164006.0,
        "org.jfree.chart.plot$PlotOrientation#equals(java.lang.Object)": 1274.0,
        "org.jfree.chart.plot$PlotOrientation#hashCode()": 1312.0,
        "org.jfree.chart.plot$PlotOrientation#readResolve()": 1276.0,
        "org.jfree.chart.plot$PlotOrientation#toString()": 1274.0,
        "org.jfree.chart.renderer$AbstractRenderer#<clinit>()": 650742.0,
        "org.jfree.chart.renderer$AbstractRenderer#AbstractRenderer()": 681788.0,
        "org.jfree.chart.renderer$AbstractRenderer#addChangeListener(org.jfree.chart.event.RendererChangeListener)": 1243026.0,
        "org.jfree.chart.renderer$AbstractRenderer#calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,double,double,org.jfree.chart.plot.PlotOrientation)": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#clearSeriesPaints(boolean)": 1106.0,
        "org.jfree.chart.renderer$AbstractRenderer#clearSeriesStrokes(boolean)": 1106.0,
        "org.jfree.chart.renderer$AbstractRenderer#clone()": 1172.0,
        "org.jfree.chart.renderer$AbstractRenderer#equals(java.lang.Object)": 850.0,
        "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()": 528.0,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesFillPaint()": 1310.0,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesOutlinePaint()": 1310.0,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesOutlineStroke()": 1310.0,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesPaint()": 1104.0,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesShape()": 1310.0,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesStroke()": 1104.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseCreateEntities()": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseFillPaint()": 1310.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseItemLabelFont()": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseItemLabelPaint()": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseItemLabelsVisible()": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseLegendShape()": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseLegendTextFont()": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseLegendTextPaint()": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseNegativeItemLabelPosition()": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseOutlinePaint()": 1310.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseOutlineStroke()": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBasePaint()": 1310.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBasePositiveItemLabelPosition()": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseSeriesVisible()": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseSeriesVisibleInLegend()": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseShape()": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseStroke()": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getDataBoundsIncludesVisibleSeriesOnly()": 1000.0,
        "org.jfree.chart.renderer$AbstractRenderer#getDefaultEntityRadius()": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemCreateEntity(int,int,boolean)": 1306.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemFillPaint(int,int,boolean)": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemLabelAnchorOffset()": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemLabelFont(int,int,boolean)": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemLabelPaint(int,int,boolean)": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemOutlinePaint(int,int,boolean)": 1302.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemOutlineStroke(int,int,boolean)": 1292.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemPaint(int,int,boolean)": 1230.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemShape(int,int,boolean)": 1298.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemStroke(int,int,boolean)": 1254.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemVisible(int,int)": 1240.0,
        "org.jfree.chart.renderer$AbstractRenderer#getLegendShape(int)": 1260.0,
        "org.jfree.chart.renderer$AbstractRenderer#getLegendTextFont(int)": 1238.0,
        "org.jfree.chart.renderer$AbstractRenderer#getLegendTextPaint(int)": 1238.0,
        "org.jfree.chart.renderer$AbstractRenderer#getNegativeItemLabelPosition(int,int,boolean)": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getPositiveItemLabelPosition(int,int,boolean)": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSelectedItemAttributes()": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesCreateEntities(int)": 1306.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesFillPaint(int)": 1310.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesItemLabelFont(int)": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesItemLabelPaint(int)": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesItemLabelsVisible(int)": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesNegativeItemLabelPosition(int)": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesOutlinePaint(int)": 1276.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesOutlineStroke(int)": 1248.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesPaint(int)": 1176.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesPositiveItemLabelPosition(int)": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesShape(int)": 1266.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesStroke(int)": 1234.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesVisible(int)": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesVisibleInLegend(int)": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#getTreatLegendShapeAsLine()": 1306.0,
        "org.jfree.chart.renderer$AbstractRenderer#hasListener(java.util.EventListener)": 1304.0,
        "org.jfree.chart.renderer$AbstractRenderer#hashCode()": 1220.0,
        "org.jfree.chart.renderer$AbstractRenderer#isItemLabelVisible(int,int,boolean)": 1288.0,
        "org.jfree.chart.renderer$AbstractRenderer#isSeriesItemLabelsVisible(int)": 1288.0,
        "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisible(int)": 1050.0,
        "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisibleInLegend(int)": 1256.0,
        "org.jfree.chart.renderer$AbstractRenderer#lookupLegendShape(int)": 1260.0,
        "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextFont(int)": 1238.0,
        "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextPaint(int)": 1238.0,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesFillPaint(int)": 1310.0,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlinePaint(int)": 1276.0,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlineStroke(int)": 1248.0,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesPaint(int)": 1176.0,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesShape(int)": 1266.0,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesStroke(int)": 1234.0,
        "org.jfree.chart.renderer$AbstractRenderer#notifyListeners(org.jfree.chart.event.RendererChangeEvent)": 528.0,
        "org.jfree.chart.renderer$AbstractRenderer#readObject(java.io.ObjectInputStream)": 1178.0,
        "org.jfree.chart.renderer$AbstractRenderer#removeChangeListener(org.jfree.chart.event.RendererChangeListener)": 1300.0,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesFillPaint(boolean)": 1310.0,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesOutlinePaint(boolean)": 1310.0,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesOutlineStroke(boolean)": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesPaint(boolean)": 1310.0,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesShape(boolean)": 1306.0,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesStroke(boolean)": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseCreateEntities(boolean)": 1308.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseCreateEntities(boolean,boolean)": 1308.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseFillPaint(java.awt.Paint)": 1308.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseFillPaint(java.awt.Paint,boolean)": 1308.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelFont(java.awt.Font)": 1102.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelFont(java.awt.Font,boolean)": 1102.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelPaint(java.awt.Paint)": 1102.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelPaint(java.awt.Paint,boolean)": 1102.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelsVisible(boolean)": 1306.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelsVisible(boolean,boolean)": 1306.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseLegendShape(java.awt.Shape)": 914.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseLegendTextFont(java.awt.Font)": 1306.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseLegendTextPaint(java.awt.Paint)": 1304.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition)": 1162.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)": 1162.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlinePaint(java.awt.Paint)": 1290.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlinePaint(java.awt.Paint,boolean)": 1290.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlineStroke(java.awt.Stroke)": 1306.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlineStroke(java.awt.Stroke,boolean)": 1306.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBasePaint(java.awt.Paint)": 1302.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBasePaint(java.awt.Paint,boolean)": 1302.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition)": 1162.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)": 1162.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisible(boolean)": 1308.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisible(boolean,boolean)": 1308.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisibleInLegend(boolean)": 1308.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisibleInLegend(boolean,boolean)": 1308.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseShape(java.awt.Shape)": 1300.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseShape(java.awt.Shape,boolean)": 1300.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseStroke(java.awt.Stroke)": 1306.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseStroke(java.awt.Stroke,boolean)": 1306.0,
        "org.jfree.chart.renderer$AbstractRenderer#setDataBoundsIncludesVisibleSeriesOnly(boolean)": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#setDefaultEntityRadius(int)": 1308.0,
        "org.jfree.chart.renderer$AbstractRenderer#setItemLabelAnchorOffset(double)": 1310.0,
        "org.jfree.chart.renderer$AbstractRenderer#setLegendShape(int,java.awt.Shape)": 1308.0,
        "org.jfree.chart.renderer$AbstractRenderer#setLegendTextFont(int,java.awt.Font)": 1308.0,
        "org.jfree.chart.renderer$AbstractRenderer#setLegendTextPaint(int,java.awt.Paint)": 1308.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesCreateEntities(int,java.lang.Boolean)": 1308.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesCreateEntities(int,java.lang.Boolean,boolean)": 1308.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesFillPaint(int,java.awt.Paint)": 1304.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesFillPaint(int,java.awt.Paint,boolean)": 1302.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelFont(int,java.awt.Font)": 1308.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelFont(int,java.awt.Font,boolean)": 1308.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelPaint(int,java.awt.Paint)": 1306.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelPaint(int,java.awt.Paint,boolean)": 1306.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelsVisible(int,boolean)": 1310.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelsVisible(int,java.lang.Boolean)": 1304.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelsVisible(int,java.lang.Boolean,boolean)": 1304.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesNegativeItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition)": 1306.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesNegativeItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition,boolean)": 1306.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlinePaint(int,java.awt.Paint)": 1304.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlinePaint(int,java.awt.Paint,boolean)": 1302.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlineStroke(int,java.awt.Stroke)": 1304.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlineStroke(int,java.awt.Stroke,boolean)": 1304.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesPaint(int,java.awt.Paint)": 1298.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesPaint(int,java.awt.Paint,boolean)": 1162.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesPositiveItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition)": 1306.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesPositiveItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition,boolean)": 1306.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesShape(int,java.awt.Shape)": 1306.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesShape(int,java.awt.Shape,boolean)": 1260.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesStroke(int,java.awt.Stroke)": 1304.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesStroke(int,java.awt.Stroke,boolean)": 1226.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisible(int,java.lang.Boolean)": 1306.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisible(int,java.lang.Boolean,boolean)": 1306.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisibleInLegend(int,java.lang.Boolean)": 1302.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisibleInLegend(int,java.lang.Boolean,boolean)": 1302.0,
        "org.jfree.chart.renderer$AbstractRenderer#setTreatLegendShapeAsLine(boolean)": 1312.0,
        "org.jfree.chart.renderer$AbstractRenderer#writeObject(java.io.ObjectOutputStream)": 1178.0,
        "org.jfree.chart.renderer$RenderAttributes#RenderAttributes()": 681788.0,
        "org.jfree.chart.renderer$RenderAttributes#RenderAttributes(boolean)": 681788.0,
        "org.jfree.chart.renderer$RenderAttributes#getAllowNull()": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getCreateEntity(int,int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getDefaultCreateEntity()": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getDefaultFillPaint()": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getDefaultLabelFont()": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getDefaultLabelPaint()": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getDefaultLabelVisible()": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getDefaultOutlinePaint()": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getDefaultOutlineStroke()": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getDefaultPaint()": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getDefaultShape()": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getDefaultStroke()": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getItemFillPaint(int,int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getItemLabelFont(int,int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getItemLabelPaint(int,int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getItemOutlinePaint(int,int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getItemOutlineStroke(int,int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getItemPaint(int,int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getItemShape(int,int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getItemStroke(int,int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getSeriesCreateEntity(int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getSeriesFillPaint(int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getSeriesLabelFont(int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getSeriesLabelPaint(int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getSeriesLabelVisible(int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getSeriesOutlinePaint(int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getSeriesOutlineStroke(int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getSeriesPaint(int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getSeriesShape(int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#getSeriesStroke(int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#isLabelVisible(int,int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#lookupSeriesCreateEntity(int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#lookupSeriesFillPaint(int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#lookupSeriesLabelFont(int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#lookupSeriesLabelPaint(int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#lookupSeriesLabelVisible(int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#lookupSeriesOutlinePaint(int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#lookupSeriesOutlineStroke(int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#lookupSeriesPaint(int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#lookupSeriesShape(int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#lookupSeriesStroke(int)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#setDefaultCreateEntity(java.lang.Boolean)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#setDefaultFillPaint(java.awt.Paint)": 681788.0,
        "org.jfree.chart.renderer$RenderAttributes#setDefaultLabelFont(java.awt.Font)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#setDefaultLabelPaint(java.awt.Paint)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#setDefaultLabelVisible(java.lang.Boolean)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#setDefaultOutlinePaint(java.awt.Paint)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#setDefaultOutlineStroke(java.awt.Stroke)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#setDefaultPaint(java.awt.Paint)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#setDefaultShape(java.awt.Shape)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#setDefaultStroke(java.awt.Stroke)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#setSeriesCreateEntity(int,java.lang.Boolean)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#setSeriesFillPaint(int,java.awt.Paint)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#setSeriesLabelFont(int,java.awt.Font)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#setSeriesLabelPaint(int,java.awt.Paint)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#setSeriesLabelVisible(int,java.lang.Boolean)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#setSeriesOutlinePaint(int,java.awt.Paint)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#setSeriesOutlineStroke(int,java.awt.Stroke)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#setSeriesPaint(int,java.awt.Paint)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#setSeriesShape(int,java.awt.Shape)": 1312.0,
        "org.jfree.chart.renderer$RenderAttributes#setSeriesStroke(int,java.awt.Stroke)": 1312.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#AbstractCategoryItemRenderer()": 1140378.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 1312.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation,org.jfree.chart.util.Layer)": 1310.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean)": 1306.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double)": 1306.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#calculateDomainMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)": 1312.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#calculateRangeMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)": 1312.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()": 1250.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#createHotSpotBounds(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D)": 1312.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#createHotSpotShape(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.renderer.category.CategoryItemRendererState)": 1312.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#createState(org.jfree.chart.plot.PlotRenderingInfo)": 1252.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)": 1240.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawBackground(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)": 1244.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)": 1308.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)": 1312.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double,boolean)": 1312.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawOutline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)": 1244.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)": 1242.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)": 1308.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#equals(java.lang.Object)": 1102.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset)": 1166.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 1156.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getBaseItemLabelGenerator()": 1312.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getBaseToolTipGenerator()": 1312.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getBaseURLGenerator()": 1312.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getColumnCount()": 1254.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getDomainAxis(org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset)": 1262.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getDrawingSupplier()": 1232.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getItemLabelGenerator(int,int,boolean)": 1282.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getItemMiddle(java.lang.Comparable,java.lang.Comparable,org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1312.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)": 1310.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItemLabelGenerator()": 1296.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItemToolTipGenerator()": 1296.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItemURLGenerator()": 1296.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItems()": 1628138.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getPassCount()": 1260.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getPlot()": 1230.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getRangeAxis(org.jfree.chart.plot.CategoryPlot,int)": 1312.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getRowCount()": 1290.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getSeriesItemLabelGenerator(int)": 1310.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getSeriesToolTipGenerator(int)": 1286.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getSeriesURLGenerator(int)": 1310.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getToolTipGenerator(int,int,boolean)": 1286.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getURLGenerator(int,int,boolean)": 1286.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#hashCode()": 1272.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#hitTest(double,double,java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.renderer.category.CategoryItemRendererState)": 1312.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotRenderingInfo)": 1252.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 1312.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#removeAnnotations()": 1312.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseItemLabelGenerator(org.jfree.chart.labels.CategoryItemLabelGenerator)": 1302.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseItemLabelGenerator(org.jfree.chart.labels.CategoryItemLabelGenerator,boolean)": 1302.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator)": 1192.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator,boolean)": 1192.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator)": 1308.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator,boolean)": 1308.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setLegendItemLabelGenerator(org.jfree.chart.labels.CategorySeriesLabelGenerator)": 1308.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setLegendItemToolTipGenerator(org.jfree.chart.labels.CategorySeriesLabelGenerator)": 1308.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setLegendItemURLGenerator(org.jfree.chart.labels.CategorySeriesLabelGenerator)": 1308.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setPlot(org.jfree.chart.plot.CategoryPlot)": 1466418.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesItemLabelGenerator(int,org.jfree.chart.labels.CategoryItemLabelGenerator)": 1304.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesItemLabelGenerator(int,org.jfree.chart.labels.CategoryItemLabelGenerator,boolean)": 1304.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesToolTipGenerator(int,org.jfree.chart.labels.CategoryToolTipGenerator)": 1290.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesToolTipGenerator(int,org.jfree.chart.labels.CategoryToolTipGenerator,boolean)": 1290.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesURLGenerator(int,org.jfree.chart.urls.CategoryURLGenerator)": 1288.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesURLGenerator(int,org.jfree.chart.urls.CategoryURLGenerator,boolean)": 1288.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#updateCrosshairValues(org.jfree.chart.plot.CategoryCrosshairState,java.lang.Comparable,java.lang.Comparable,double,int,double,double,org.jfree.chart.plot.PlotOrientation)": 1298.0,
        "org.jfree.chart.renderer.category$BarRenderer#<clinit>()": 846.0,
        "org.jfree.chart.renderer.category$BarRenderer#BarRenderer()": 1028.0,
        "org.jfree.chart.renderer.category$BarRenderer#calculateBarL0L1(double,double,double)": 1304.0,
        "org.jfree.chart.renderer.category$BarRenderer#calculateBarW0(org.jfree.chart.plot.CategoryPlot,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.renderer.category.CategoryItemRendererState,int,int)": 1302.0,
        "org.jfree.chart.renderer.category$BarRenderer#calculateBarWidth(org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.data.category.CategoryDataset,org.jfree.chart.renderer.category.CategoryItemRendererState)": 1286.0,
        "org.jfree.chart.renderer.category$BarRenderer#calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)": 1312.0,
        "org.jfree.chart.renderer.category$BarRenderer#calculateSeriesWidth(double,org.jfree.chart.axis.CategoryAxis,int,int)": 1302.0,
        "org.jfree.chart.renderer.category$BarRenderer#createHotSpotBounds(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D)": 1312.0,
        "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)": 1306.0,
        "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)": 1312.0,
        "org.jfree.chart.renderer.category$BarRenderer#equals(java.lang.Object)": 1196.0,
        "org.jfree.chart.renderer.category$BarRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 1222.0,
        "org.jfree.chart.renderer.category$BarRenderer#getBarPainter()": 1306.0,
        "org.jfree.chart.renderer.category$BarRenderer#getBase()": 1302.0,
        "org.jfree.chart.renderer.category$BarRenderer#getDefaultBarPainter()": 1028.0,
        "org.jfree.chart.renderer.category$BarRenderer#getDefaultShadowsVisible()": 1028.0,
        "org.jfree.chart.renderer.category$BarRenderer#getGradientPaintTransformer()": 1298.0,
        "org.jfree.chart.renderer.category$BarRenderer#getIncludeBaseInRange()": 1312.0,
        "org.jfree.chart.renderer.category$BarRenderer#getItemMargin()": 1296.0,
        "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)": 1308.0,
        "org.jfree.chart.renderer.category$BarRenderer#getMaximumBarWidth()": 1284.0,
        "org.jfree.chart.renderer.category$BarRenderer#getMinimumBarLength()": 1302.0,
        "org.jfree.chart.renderer.category$BarRenderer#getNegativeItemLabelPositionFallback()": 1312.0,
        "org.jfree.chart.renderer.category$BarRenderer#getPositiveItemLabelPositionFallback()": 1312.0,
        "org.jfree.chart.renderer.category$BarRenderer#getShadowPaint()": 1302.0,
        "org.jfree.chart.renderer.category$BarRenderer#getShadowXOffset()": 1302.0,
        "org.jfree.chart.renderer.category$BarRenderer#getShadowYOffset()": 1302.0,
        "org.jfree.chart.renderer.category$BarRenderer#getShadowsVisible()": 1302.0,
        "org.jfree.chart.renderer.category$BarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotRenderingInfo)": 1284.0,
        "org.jfree.chart.renderer.category$BarRenderer#isDrawBarOutline()": 1278.0,
        "org.jfree.chart.renderer.category$BarRenderer#isInternalAnchor(org.jfree.chart.labels.ItemLabelAnchor)": 1312.0,
        "org.jfree.chart.renderer.category$BarRenderer#readObject(java.io.ObjectInputStream)": 1274.0,
        "org.jfree.chart.renderer.category$BarRenderer#setBarPainter(org.jfree.chart.renderer.category.BarPainter)": 1246.0,
        "org.jfree.chart.renderer.category$BarRenderer#setBase(double)": 1310.0,
        "org.jfree.chart.renderer.category$BarRenderer#setDefaultBarPainter(org.jfree.chart.renderer.category.BarPainter)": 1312.0,
        "org.jfree.chart.renderer.category$BarRenderer#setDefaultShadowsVisible(boolean)": 1312.0,
        "org.jfree.chart.renderer.category$BarRenderer#setDrawBarOutline(boolean)": 1310.0,
        "org.jfree.chart.renderer.category$BarRenderer#setGradientPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)": 1292.0,
        "org.jfree.chart.renderer.category$BarRenderer#setIncludeBaseInRange(boolean)": 1288.0,
        "org.jfree.chart.renderer.category$BarRenderer#setItemMargin(double)": 1310.0,
        "org.jfree.chart.renderer.category$BarRenderer#setMaximumBarWidth(double)": 1310.0,
        "org.jfree.chart.renderer.category$BarRenderer#setMinimumBarLength(double)": 1292.0,
        "org.jfree.chart.renderer.category$BarRenderer#setNegativeItemLabelPositionFallback(org.jfree.chart.labels.ItemLabelPosition)": 1276.0,
        "org.jfree.chart.renderer.category$BarRenderer#setPositiveItemLabelPositionFallback(org.jfree.chart.labels.ItemLabelPosition)": 1276.0,
        "org.jfree.chart.renderer.category$BarRenderer#setShadowPaint(java.awt.Paint)": 1248.0,
        "org.jfree.chart.renderer.category$BarRenderer#setShadowVisible(boolean)": 1248.0,
        "org.jfree.chart.renderer.category$BarRenderer#setShadowXOffset(double)": 1310.0,
        "org.jfree.chart.renderer.category$BarRenderer#setShadowYOffset(double)": 1310.0,
        "org.jfree.chart.renderer.category$BarRenderer#writeObject(java.io.ObjectOutputStream)": 1274.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#LineAndShapeRenderer()": 1653768.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#LineAndShapeRenderer(boolean,boolean)": 1595118.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#clone()": 1294.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)": 1306.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#equals(java.lang.Object)": 1262.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getBaseLinesVisible()": 1304.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getBaseShapesFilled()": 1312.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getBaseShapesVisible()": 1304.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getDrawOutlines()": 1310.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getItemLineVisible(int,int)": 1300.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getItemMargin()": 1312.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getItemShapeFilled(int,int)": 1304.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getItemShapeVisible(int,int)": 1302.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getLegendItem(int,int)": 1310.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getPassCount()": 1302.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getSeriesLinesVisible(int)": 1300.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getSeriesShapesFilled(int)": 1304.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getSeriesShapesVisible(int)": 1302.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getUseFillPaint()": 1310.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getUseOutlinePaint()": 1310.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getUseSeriesOffset()": 1310.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setBaseLinesVisible(boolean)": 1306.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setBaseShapesFilled(boolean)": 1306.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setBaseShapesVisible(boolean)": 1306.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setDrawOutlines(boolean)": 1312.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setItemMargin(double)": 1310.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setSeriesLinesVisible(int,boolean)": 1306.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setSeriesLinesVisible(int,java.lang.Boolean)": 1306.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setSeriesShapesFilled(int,boolean)": 1306.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setSeriesShapesFilled(int,java.lang.Boolean)": 1306.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setSeriesShapesVisible(int,boolean)": 1306.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setSeriesShapesVisible(int,java.lang.Boolean)": 1306.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setUseFillPaint(boolean)": 1312.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setUseOutlinePaint(boolean)": 1310.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setUseSeriesOffset(boolean)": 1310.0,
        "org.jfree.chart.text$TextAnchor#<clinit>()": 504918.0,
        "org.jfree.chart.text$TextAnchor#TextAnchor(java.lang.String)": 504918.0,
        "org.jfree.chart.text$TextAnchor#equals(java.lang.Object)": 890.0,
        "org.jfree.chart.text$TextAnchor#hashCode()": 1298.0,
        "org.jfree.chart.text$TextAnchor#readResolve()": 1140.0,
        "org.jfree.chart.text$TextAnchor#toString()": 1312.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList()": 523586.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int)": 523586.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int,int)": 523586.0,
        "org.jfree.chart.util$AbstractObjectList#clear()": 1106.0,
        "org.jfree.chart.util$AbstractObjectList#clone()": 1150.0,
        "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)": 770.0,
        "org.jfree.chart.util$AbstractObjectList#get(int)": 1083408.0,
        "org.jfree.chart.util$AbstractObjectList#hashCode()": 1216.0,
        "org.jfree.chart.util$AbstractObjectList#indexOf(java.lang.Object)": 1251966.0,
        "org.jfree.chart.util$AbstractObjectList#readObject(java.io.ObjectInputStream)": 1150.0,
        "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)": 1085492.0,
        "org.jfree.chart.util$AbstractObjectList#size()": 716942.0,
        "org.jfree.chart.util$AbstractObjectList#writeObject(java.io.ObjectOutputStream)": 1150.0,
        "org.jfree.chart.util$BooleanList#BooleanList()": 675192.0,
        "org.jfree.chart.util$BooleanList#equals(java.lang.Object)": 844.0,
        "org.jfree.chart.util$BooleanList#getBoolean(int)": 1050.0,
        "org.jfree.chart.util$BooleanList#hashCode()": 1218.0,
        "org.jfree.chart.util$BooleanList#setBoolean(int,java.lang.Boolean)": 1270.0,
        "org.jfree.chart.util$DefaultShadowGenerator#DefaultShadowGenerator()": 1347768.0,
        "org.jfree.chart.util$DefaultShadowGenerator#DefaultShadowGenerator(int,java.awt.Color,float,int,double)": 1345446.0,
        "org.jfree.chart.util$DefaultShadowGenerator#applyShadow(java.awt.image.BufferedImage)": 1238.0,
        "org.jfree.chart.util$DefaultShadowGenerator#calculateOffsetX()": 1238.0,
        "org.jfree.chart.util$DefaultShadowGenerator#calculateOffsetY()": 1238.0,
        "org.jfree.chart.util$DefaultShadowGenerator#createDropShadow(java.awt.image.BufferedImage)": 1238.0,
        "org.jfree.chart.util$DefaultShadowGenerator#equals(java.lang.Object)": 1266.0,
        "org.jfree.chart.util$DefaultShadowGenerator#getAngle()": 1312.0,
        "org.jfree.chart.util$DefaultShadowGenerator#getDistance()": 1312.0,
        "org.jfree.chart.util$DefaultShadowGenerator#getShadowColor()": 1312.0,
        "org.jfree.chart.util$DefaultShadowGenerator#getShadowOpacity()": 1312.0,
        "org.jfree.chart.util$DefaultShadowGenerator#getShadowSize()": 1312.0,
        "org.jfree.chart.util$DefaultShadowGenerator#hashCode()": 1312.0,
        "org.jfree.chart.util$GradientPaintTransformType#<clinit>()": 820.0,
        "org.jfree.chart.util$GradientPaintTransformType#GradientPaintTransformType(java.lang.String)": 820.0,
        "org.jfree.chart.util$GradientPaintTransformType#equals(java.lang.Object)": 1248.0,
        "org.jfree.chart.util$GradientPaintTransformType#hashCode()": 1310.0,
        "org.jfree.chart.util$GradientPaintTransformType#readResolve()": 1250.0,
        "org.jfree.chart.util$GradientPaintTransformType#toString()": 1312.0,
        "org.jfree.chart.util$ObjectList#ObjectList()": 554456.0,
        "org.jfree.chart.util$ObjectList#ObjectList(int)": 1312.0,
        "org.jfree.chart.util$ObjectList#get(int)": 1159692.0,
        "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)": 1251966.0,
        "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)": 1157538.0,
        "org.jfree.chart.util$PaintList#PaintList()": 665358.0,
        "org.jfree.chart.util$PaintList#equals(java.lang.Object)": 834.0,
        "org.jfree.chart.util$PaintList#getPaint(int)": 1144.0,
        "org.jfree.chart.util$PaintList#hashCode()": 1218.0,
        "org.jfree.chart.util$PaintList#readObject(java.io.ObjectInputStream)": 1174.0,
        "org.jfree.chart.util$PaintList#setPaint(int,java.awt.Paint)": 1138.0,
        "org.jfree.chart.util$PaintList#writeObject(java.io.ObjectOutputStream)": 1174.0,
        "org.jfree.chart.util$RectangleInsets#<clinit>()": 668628.0,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets()": 1312.0,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)": 723738.0,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets(org.jfree.chart.util.UnitType,double,double,double,double)": 668628.0,
        "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)": 1168.0,
        "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)": 1144.0,
        "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)": 1168.0,
        "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)": 1144.0,
        "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)": 1168.0,
        "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)": 1144.0,
        "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)": 1168.0,
        "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)": 1144.0,
        "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)": 1312.0,
        "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D)": 1312.0,
        "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)": 1312.0,
        "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D)": 1182.0,
        "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)": 1182.0,
        "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)": 972.0,
        "org.jfree.chart.util$RectangleInsets#extendHeight(double)": 1194.0,
        "org.jfree.chart.util$RectangleInsets#extendWidth(double)": 1194.0,
        "org.jfree.chart.util$RectangleInsets#getBottom()": 1182.0,
        "org.jfree.chart.util$RectangleInsets#getLeft()": 1182.0,
        "org.jfree.chart.util$RectangleInsets#getRight()": 1182.0,
        "org.jfree.chart.util$RectangleInsets#getTop()": 1182.0,
        "org.jfree.chart.util$RectangleInsets#getUnitType()": 1312.0,
        "org.jfree.chart.util$RectangleInsets#hashCode()": 1312.0,
        "org.jfree.chart.util$RectangleInsets#toString()": 1312.0,
        "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)": 1172.0,
        "org.jfree.chart.util$RectangleInsets#trimHeight(double)": 1218.0,
        "org.jfree.chart.util$RectangleInsets#trimWidth(double)": 1218.0,
        "org.jfree.chart.util$ResourceBundleWrapper#ResourceBundleWrapper()": 1312.0,
        "org.jfree.chart.util$ResourceBundleWrapper#getBundle(java.lang.String)": 997686.0,
        "org.jfree.chart.util$ResourceBundleWrapper#getBundle(java.lang.String,java.util.Locale)": 1312.0,
        "org.jfree.chart.util$ResourceBundleWrapper#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)": 1312.0,
        "org.jfree.chart.util$ResourceBundleWrapper#removeCodeBase(java.net.URL,java.net.URLClassLoader)": 1312.0,
        "org.jfree.chart.util$ShapeList#ShapeList()": 676838.0,
        "org.jfree.chart.util$ShapeList#clone()": 1170.0,
        "org.jfree.chart.util$ShapeList#equals(java.lang.Object)": 844.0,
        "org.jfree.chart.util$ShapeList#getShape(int)": 1248.0,
        "org.jfree.chart.util$ShapeList#hashCode()": 1312.0,
        "org.jfree.chart.util$ShapeList#readObject(java.io.ObjectInputStream)": 1176.0,
        "org.jfree.chart.util$ShapeList#setShape(int,java.awt.Shape)": 1254.0,
        "org.jfree.chart.util$ShapeList#writeObject(java.io.ObjectOutputStream)": 1176.0,
        "org.jfree.chart.util$SortOrder#<clinit>()": 1415976.0,
        "org.jfree.chart.util$SortOrder#SortOrder(java.lang.String)": 1415976.0,
        "org.jfree.chart.util$SortOrder#equals(java.lang.Object)": 1280.0,
        "org.jfree.chart.util$SortOrder#hashCode()": 1312.0,
        "org.jfree.chart.util$SortOrder#readResolve()": 1296.0,
        "org.jfree.chart.util$SortOrder#toString()": 1288.0,
        "org.jfree.chart.util$StandardGradientPaintTransformer#StandardGradientPaintTransformer()": 822.0,
        "org.jfree.chart.util$StandardGradientPaintTransformer#StandardGradientPaintTransformer(org.jfree.chart.util.GradientPaintTransformType)": 820.0,
        "org.jfree.chart.util$StandardGradientPaintTransformer#clone()": 1292.0,
        "org.jfree.chart.util$StandardGradientPaintTransformer#equals(java.lang.Object)": 1140.0,
        "org.jfree.chart.util$StandardGradientPaintTransformer#getType()": 1312.0,
        "org.jfree.chart.util$StandardGradientPaintTransformer#hashCode()": 1310.0,
        "org.jfree.chart.util$StandardGradientPaintTransformer#transform(java.awt.GradientPaint,java.awt.Shape)": 1310.0,
        "org.jfree.chart.util$StrokeList#StrokeList()": 668628.0,
        "org.jfree.chart.util$StrokeList#clone()": 1168.0,
        "org.jfree.chart.util$StrokeList#equals(java.lang.Object)": 838.0,
        "org.jfree.chart.util$StrokeList#getStroke(int)": 1206.0,
        "org.jfree.chart.util$StrokeList#hashCode()": 1218.0,
        "org.jfree.chart.util$StrokeList#readObject(java.io.ObjectInputStream)": 1174.0,
        "org.jfree.chart.util$StrokeList#setStroke(int,java.awt.Stroke)": 1214.0,
        "org.jfree.chart.util$StrokeList#writeObject(java.io.ObjectOutputStream)": 1174.0,
        "org.jfree.chart.util$UnitType#<clinit>()": 657218.0,
        "org.jfree.chart.util$UnitType#UnitType(java.lang.String)": 657218.0,
        "org.jfree.chart.util$UnitType#equals(java.lang.Object)": 1176.0,
        "org.jfree.chart.util$UnitType#hashCode()": 1312.0,
        "org.jfree.chart.util$UnitType#readResolve()": 1176.0,
        "org.jfree.chart.util$UnitType#toString()": 1312.0,
        "org.jfree.data$KeyedObject#KeyedObject(java.lang.Comparable,java.lang.Object)": 1153236.0,
        "org.jfree.data$KeyedObject#clone()": 1286.0,
        "org.jfree.data$KeyedObject#equals(java.lang.Object)": 1304.0,
        "org.jfree.data$KeyedObject#getKey()": 856.0,
        "org.jfree.data$KeyedObject#getObject()": 926.0,
        "org.jfree.data$KeyedObject#setObject(java.lang.Object)": 1270.0,
        "org.jfree.data$KeyedObjects#KeyedObjects()": 1146798.0,
        "org.jfree.data$KeyedObjects#addObject(java.lang.Comparable,java.lang.Object)": 1290.0,
        "org.jfree.data$KeyedObjects#clear()": 1310.0,
        "org.jfree.data$KeyedObjects#clone()": 1288.0,
        "org.jfree.data$KeyedObjects#equals(java.lang.Object)": 1306.0,
        "org.jfree.data$KeyedObjects#getIndex(java.lang.Comparable)": 1161848.0,
        "org.jfree.data$KeyedObjects#getItemCount()": 1266.0,
        "org.jfree.data$KeyedObjects#getKey(int)": 1276.0,
        "org.jfree.data$KeyedObjects#getKeys()": 1302.0,
        "org.jfree.data$KeyedObjects#getObject(int)": 928.0,
        "org.jfree.data$KeyedObjects#getObject(java.lang.Comparable)": 994.0,
        "org.jfree.data$KeyedObjects#hashCode()": 1312.0,
        "org.jfree.data$KeyedObjects#insertValue(int,java.lang.Comparable,java.lang.Object)": 1312.0,
        "org.jfree.data$KeyedObjects#removeValue(int)": 1300.0,
        "org.jfree.data$KeyedObjects#removeValue(java.lang.Comparable)": 1310.0,
        "org.jfree.data$KeyedObjects#setObject(java.lang.Comparable,java.lang.Object)": 1161848.0,
        "org.jfree.data$KeyedObjects#sortByKeys(org.jfree.chart.util.SortOrder)": 1308.0,
        "org.jfree.data$KeyedObjects#sortByObjects(org.jfree.chart.util.SortOrder)": 1308.0,
        "org.jfree.data$KeyedObjects2D#KeyedObjects2D()": 1205388.0,
        "org.jfree.data$KeyedObjects2D#addObject(java.lang.Object,java.lang.Comparable,java.lang.Comparable)": 1283508.0,
        "org.jfree.data$KeyedObjects2D#clear()": 1308.0,
        "org.jfree.data$KeyedObjects2D#clone()": 1298.0,
        "org.jfree.data$KeyedObjects2D#equals(java.lang.Object)": 1286.0,
        "org.jfree.data$KeyedObjects2D#getColumnCount()": 986.0,
        "org.jfree.data$KeyedObjects2D#getColumnIndex(java.lang.Comparable)": 1218.0,
        "org.jfree.data$KeyedObjects2D#getColumnKey(int)": 1236.0,
        "org.jfree.data$KeyedObjects2D#getColumnKeys()": 1262.0,
        "org.jfree.data$KeyedObjects2D#getObject(int,int)": 1014.0,
        "org.jfree.data$KeyedObjects2D#getObject(java.lang.Comparable,java.lang.Comparable)": 1256.0,
        "org.jfree.data$KeyedObjects2D#getRowCount()": 994.0,
        "org.jfree.data$KeyedObjects2D#getRowIndex(java.lang.Comparable)": 1128.0,
        "org.jfree.data$KeyedObjects2D#getRowKey(int)": 1124.0,
        "org.jfree.data$KeyedObjects2D#getRowKeys()": 1260.0,
        "org.jfree.data$KeyedObjects2D#hashCode()": 1312.0,
        "org.jfree.data$KeyedObjects2D#removeColumn(int)": 1310.0,
        "org.jfree.data$KeyedObjects2D#removeColumn(java.lang.Comparable)": 1304.0,
        "org.jfree.data$KeyedObjects2D#removeObject(java.lang.Comparable,java.lang.Comparable)": 1304.0,
        "org.jfree.data$KeyedObjects2D#removeRow(int)": 1306.0,
        "org.jfree.data$KeyedObjects2D#removeRow(java.lang.Comparable)": 1308.0,
        "org.jfree.data$KeyedObjects2D#setObject(java.lang.Object,java.lang.Comparable,java.lang.Comparable)": 1249728.0,
        "org.jfree.data$SelectableValue#SelectableValue(java.lang.Number)": 1313148.0,
        "org.jfree.data$SelectableValue#SelectableValue(java.lang.Number,boolean)": 1313148.0,
        "org.jfree.data$SelectableValue#getValue()": 1046.0,
        "org.jfree.data$SelectableValue#isSelected()": 1286.0,
        "org.jfree.data$SelectableValue#setSelected(boolean)": 1312.0,
        "org.jfree.data$UnknownKeyException#UnknownKeyException(java.lang.String)": 1272.0,
        "org.jfree.data.category$AbstractCategoryDataset#AbstractCategoryDataset()": 1336178.0,
        "org.jfree.data.category$AbstractCategoryDataset#getSelectionState()": 1288.0,
        "org.jfree.data.category$AbstractCategoryDataset#setSelectionState(org.jfree.data.category.CategoryDatasetSelectionState)": 1336178.0,
        "org.jfree.data.category$DefaultCategoryDataset#DefaultCategoryDataset()": 1336178.0,
        "org.jfree.data.category$DefaultCategoryDataset#addValue(double,java.lang.Comparable,java.lang.Comparable)": 1490748.0,
        "org.jfree.data.category$DefaultCategoryDataset#addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)": 1394628.0,
        "org.jfree.data.category$DefaultCategoryDataset#clear()": 1308.0,
        "org.jfree.data.category$DefaultCategoryDataset#clearSelection()": 1312.0,
        "org.jfree.data.category$DefaultCategoryDataset#clone()": 1306.0,
        "org.jfree.data.category$DefaultCategoryDataset#equals(java.lang.Object)": 1288.0,
        "org.jfree.data.category$DefaultCategoryDataset#fireSelectionEvent()": 1312.0,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnCount()": 1076.0,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnIndex(java.lang.Comparable)": 1302.0,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnKey(int)": 1272.0,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnKeys()": 1288.0,
        "org.jfree.data.category$DefaultCategoryDataset#getRowCount()": 1080.0,
        "org.jfree.data.category$DefaultCategoryDataset#getRowIndex(java.lang.Comparable)": 1210.0,
        "org.jfree.data.category$DefaultCategoryDataset#getRowKey(int)": 1160.0,
        "org.jfree.data.category$DefaultCategoryDataset#getRowKeys()": 1286.0,
        "org.jfree.data.category$DefaultCategoryDataset#getValue(int,int)": 1104.0,
        "org.jfree.data.category$DefaultCategoryDataset#getValue(java.lang.Comparable,java.lang.Comparable)": 1270.0,
        "org.jfree.data.category$DefaultCategoryDataset#hashCode()": 1312.0,
        "org.jfree.data.category$DefaultCategoryDataset#incrementValue(double,java.lang.Comparable,java.lang.Comparable)": 1310.0,
        "org.jfree.data.category$DefaultCategoryDataset#isSelected(int,int)": 1288.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeColumn(int)": 1312.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeColumn(java.lang.Comparable)": 1308.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeRow(int)": 1312.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeRow(java.lang.Comparable)": 1310.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeValue(java.lang.Comparable,java.lang.Comparable)": 1310.0,
        "org.jfree.data.category$DefaultCategoryDataset#setSelected(int,int,boolean)": 1312.0,
        "org.jfree.data.category$DefaultCategoryDataset#setSelected(int,int,boolean,boolean)": 1312.0,
        "org.jfree.data.category$DefaultCategoryDataset#setValue(double,java.lang.Comparable,java.lang.Comparable)": 1294.0,
        "org.jfree.data.category$DefaultCategoryDataset#setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)": 1288.0,
        "org.jfree.data.event$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset,org.jfree.chart.event.DatasetChangeInfo)": 513492.0,
        "org.jfree.data.event$DatasetChangeEvent#getDataset()": 1312.0,
        "org.jfree.data.event$DatasetChangeEvent#getInfo()": 1312.0,
        "org.jfree.data.general$AbstractDataset#AbstractDataset()": 504918.0,
        "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.event.DatasetChangeListener)": 1066808.0,
        "org.jfree.data.general$AbstractDataset#clone()": 1226.0,
        "org.jfree.data.general$AbstractDataset#fireDatasetChanged(org.jfree.chart.event.DatasetChangeInfo)": 620418.0,
        "org.jfree.data.general$AbstractDataset#getGroup()": 1304.0,
        "org.jfree.data.general$AbstractDataset#hasListener(java.util.EventListener)": 1306.0,
        "org.jfree.data.general$AbstractDataset#notifyListeners(org.jfree.data.event.DatasetChangeEvent)": 620418.0,
        "org.jfree.data.general$AbstractDataset#readObject(java.io.ObjectInputStream)": 1182.0,
        "org.jfree.data.general$AbstractDataset#removeChangeListener(org.jfree.data.event.DatasetChangeListener)": 1272.0,
        "org.jfree.data.general$AbstractDataset#setGroup(org.jfree.data.general.DatasetGroup)": 1312.0,
        "org.jfree.data.general$AbstractDataset#validateObject()": 1182.0,
        "org.jfree.data.general$AbstractDataset#writeObject(java.io.ObjectOutputStream)": 1182.0,
        "org.jfree.data.general$DatasetGroup#DatasetGroup()": 503496.0,
        "org.jfree.data.general$DatasetGroup#DatasetGroup(java.lang.String)": 1312.0,
        "org.jfree.data.general$DatasetGroup#clone()": 1312.0,
        "org.jfree.data.general$DatasetGroup#equals(java.lang.Object)": 1310.0,
        "org.jfree.data.general$DatasetGroup#getID()": 1312.0
    },
    "Chart-10": {},
    "Chart-11": {
        "org.jfree.chart.util$ShapeUtilities#<clinit>()": -264.0,
        "org.jfree.chart.util$ShapeUtilities#ShapeUtilities()": 262.0,
        "org.jfree.chart.util$ShapeUtilities#clone(java.awt.Shape)": 96.0,
        "org.jfree.chart.util$ShapeUtilities#contains(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)": 262.0,
        "org.jfree.chart.util$ShapeUtilities#createDiagonalCross(float,float)": 262.0,
        "org.jfree.chart.util$ShapeUtilities#createDiamond(float)": 262.0,
        "org.jfree.chart.util$ShapeUtilities#createDownTriangle(float)": 262.0,
        "org.jfree.chart.util$ShapeUtilities#createLineRegion(java.awt.geom.Line2D,float)": 262.0,
        "org.jfree.chart.util$ShapeUtilities#createRegularCross(float,float)": 262.0,
        "org.jfree.chart.util$ShapeUtilities#createTranslatedShape(java.awt.Shape,double,double)": 248.0,
        "org.jfree.chart.util$ShapeUtilities#createTranslatedShape(java.awt.Shape,org.jfree.chart.util.RectangleAnchor,double,double)": 160.0,
        "org.jfree.chart.util$ShapeUtilities#createUpTriangle(float)": 262.0,
        "org.jfree.chart.util$ShapeUtilities#drawRotatedShape(java.awt.Graphics2D,java.awt.Shape,double,float,float)": 262.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Polygon,java.awt.Polygon)": 102.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)": -58.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Arc2D,java.awt.geom.Arc2D)": 260.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Ellipse2D,java.awt.geom.Ellipse2D)": 102.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.GeneralPath,java.awt.geom.GeneralPath)": 61488.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Line2D,java.awt.geom.Line2D)": 156.0,
        "org.jfree.chart.util$ShapeUtilities#getPointInRectangle(double,double,java.awt.geom.Rectangle2D)": 262.0,
        "org.jfree.chart.util$ShapeUtilities#intersects(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)": 260.0,
        "org.jfree.chart.util$ShapeUtilities#rotateShape(java.awt.Shape,double,float,float)": 198.0
    },
    "Chart-12": {
        "org.jfree.chart$ChartColor#<clinit>()": 608132.0,
        "org.jfree.chart$ChartColor#ChartColor(int,int,int)": 1046.0,
        "org.jfree.chart$ChartColor#createDefaultPaintArray()": 608132.0,
        "org.jfree.chart$JFreeChart#<clinit>()": 772472.0,
        "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)": 786608.0,
        "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,org.jfree.chart.plot.Plot)": 1046.0,
        "org.jfree.chart$JFreeChart#JFreeChart(org.jfree.chart.plot.Plot)": 985994.0,
        "org.jfree.chart$JFreeChart#addChangeListener(org.jfree.chart.event.ChartChangeListener)": 1004.0,
        "org.jfree.chart$JFreeChart#addLegend(org.jfree.chart.title.LegendTitle)": 1046.0,
        "org.jfree.chart$JFreeChart#addProgressListener(org.jfree.chart.event.ChartProgressListener)": 1044.0,
        "org.jfree.chart$JFreeChart#addSubtitle(int,org.jfree.chart.title.Title)": 1044.0,
        "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)": 1042.0,
        "org.jfree.chart$JFreeChart#clearSubtitles()": 1046.0,
        "org.jfree.chart$JFreeChart#clone()": 1046.0,
        "org.jfree.chart$JFreeChart#createAlignedRectangle2D(org.jfree.chart.util.Size2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)": 918.0,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int)": 1038.0,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)": 1046.0,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)": 978.0,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)": 978.0,
        "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1046.0,
        "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)": 918.0,
        "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)": 1046.0,
        "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 918.0,
        "org.jfree.chart$JFreeChart#equals(java.lang.Object)": 1022.0,
        "org.jfree.chart$JFreeChart#fireChartChanged()": 1083674.0,
        "org.jfree.chart$JFreeChart#getAntiAlias()": 1046.0,
        "org.jfree.chart$JFreeChart#getBackgroundImage()": 1046.0,
        "org.jfree.chart$JFreeChart#getBackgroundImageAlignment()": 1046.0,
        "org.jfree.chart$JFreeChart#getBackgroundImageAlpha()": 1046.0,
        "org.jfree.chart$JFreeChart#getBackgroundPaint()": 1046.0,
        "org.jfree.chart$JFreeChart#getBorderPaint()": 1046.0,
        "org.jfree.chart$JFreeChart#getBorderStroke()": 1046.0,
        "org.jfree.chart$JFreeChart#getCategoryPlot()": 1046.0,
        "org.jfree.chart$JFreeChart#getLegend()": 1085758.0,
        "org.jfree.chart$JFreeChart#getLegend(int)": 1085758.0,
        "org.jfree.chart$JFreeChart#getPadding()": 1046.0,
        "org.jfree.chart$JFreeChart#getPlot()": 896.0,
        "org.jfree.chart$JFreeChart#getRenderingHints()": 1046.0,
        "org.jfree.chart$JFreeChart#getSubtitle(int)": 1026.0,
        "org.jfree.chart$JFreeChart#getSubtitleCount()": 1020.0,
        "org.jfree.chart$JFreeChart#getSubtitles()": 1044.0,
        "org.jfree.chart$JFreeChart#getTextAntiAlias()": 1046.0,
        "org.jfree.chart$JFreeChart#getTitle()": 1044.0,
        "org.jfree.chart$JFreeChart#getXYPlot()": 1046.0,
        "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)": 1046.0,
        "org.jfree.chart$JFreeChart#isBorderVisible()": 918.0,
        "org.jfree.chart$JFreeChart#isNotify()": 1046.0,
        "org.jfree.chart$JFreeChart#main(java.lang.String[])": 1046.0,
        "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)": 936944.0,
        "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartProgressEvent)": 918.0,
        "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)": 902.0,
        "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)": 1028.0,
        "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)": 1044.0,
        "org.jfree.chart$JFreeChart#removeLegend()": 1089932.0,
        "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)": 1044.0,
        "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)": 1089932.0,
        "org.jfree.chart$JFreeChart#setAntiAlias(boolean)": 1046.0,
        "org.jfree.chart$JFreeChart#setBackgroundImage(java.awt.Image)": 1044.0,
        "org.jfree.chart$JFreeChart#setBackgroundImageAlignment(int)": 1044.0,
        "org.jfree.chart$JFreeChart#setBackgroundImageAlpha(float)": 1044.0,
        "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)": 1087844.0,
        "org.jfree.chart$JFreeChart#setBorderPaint(java.awt.Paint)": 1044.0,
        "org.jfree.chart$JFreeChart#setBorderStroke(java.awt.Stroke)": 1044.0,
        "org.jfree.chart$JFreeChart#setBorderVisible(boolean)": 1044.0,
        "org.jfree.chart$JFreeChart#setNotify(boolean)": 1046.0,
        "org.jfree.chart$JFreeChart#setPadding(org.jfree.chart.util.RectangleInsets)": 1044.0,
        "org.jfree.chart$JFreeChart#setRenderingHints(java.awt.RenderingHints)": 1044.0,
        "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)": 1046.0,
        "org.jfree.chart$JFreeChart#setTextAntiAlias(boolean)": 1046.0,
        "org.jfree.chart$JFreeChart#setTextAntiAlias(java.lang.Object)": 1046.0,
        "org.jfree.chart$JFreeChart#setTitle(java.lang.String)": 1044.0,
        "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)": 1087844.0,
        "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)": 1040.0,
        "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)": 1028.0,
        "org.jfree.chart$PaintMap#PaintMap()": 1007972.0,
        "org.jfree.chart$PaintMap#clear()": 1046.0,
        "org.jfree.chart$PaintMap#clone()": 1044.0,
        "org.jfree.chart$PaintMap#containsKey(java.lang.Comparable)": 1046.0,
        "org.jfree.chart$PaintMap#equals(java.lang.Object)": 1014.0,
        "org.jfree.chart$PaintMap#getPaint(java.lang.Comparable)": 1026.0,
        "org.jfree.chart$PaintMap#put(java.lang.Comparable,java.awt.Paint)": 1026.0,
        "org.jfree.chart$PaintMap#readObject(java.io.ObjectInputStream)": 1030.0,
        "org.jfree.chart$PaintMap#writeObject(java.io.ObjectOutputStream)": 1030.0,
        "org.jfree.chart$StrokeMap#StrokeMap()": 1009982.0,
        "org.jfree.chart$StrokeMap#clear()": 1046.0,
        "org.jfree.chart$StrokeMap#clone()": 1044.0,
        "org.jfree.chart$StrokeMap#containsKey(java.lang.Comparable)": 1046.0,
        "org.jfree.chart$StrokeMap#equals(java.lang.Object)": 1014.0,
        "org.jfree.chart$StrokeMap#getStroke(java.lang.Comparable)": 1028.0,
        "org.jfree.chart$StrokeMap#put(java.lang.Comparable,java.awt.Stroke)": 1034.0,
        "org.jfree.chart$StrokeMap#readObject(java.io.ObjectInputStream)": 1030.0,
        "org.jfree.chart$StrokeMap#writeObject(java.io.ObjectOutputStream)": 1030.0,
        "org.jfree.chart.block$AbstractBlock#AbstractBlock()": 698684.0,
        "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D)": 1044.0,
        "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1046.0,
        "org.jfree.chart.block$AbstractBlock#calculateTotalHeight(double)": 912.0,
        "org.jfree.chart.block$AbstractBlock#calculateTotalWidth(double)": 912.0,
        "org.jfree.chart.block$AbstractBlock#clone()": 1020.0,
        "org.jfree.chart.block$AbstractBlock#drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 918.0,
        "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)": 932.0,
        "org.jfree.chart.block$AbstractBlock#getBounds()": 942.0,
        "org.jfree.chart.block$AbstractBlock#getContentXOffset()": 1046.0,
        "org.jfree.chart.block$AbstractBlock#getContentYOffset()": 1046.0,
        "org.jfree.chart.block$AbstractBlock#getFrame()": 920.0,
        "org.jfree.chart.block$AbstractBlock#getHeight()": 1036.0,
        "org.jfree.chart.block$AbstractBlock#getID()": 1046.0,
        "org.jfree.chart.block$AbstractBlock#getMargin()": 1046.0,
        "org.jfree.chart.block$AbstractBlock#getPadding()": 1046.0,
        "org.jfree.chart.block$AbstractBlock#getWidth()": 1036.0,
        "org.jfree.chart.block$AbstractBlock#readObject(java.io.ObjectInputStream)": 1006.0,
        "org.jfree.chart.block$AbstractBlock#setBounds(java.awt.geom.Rectangle2D)": 928.0,
        "org.jfree.chart.block$AbstractBlock#setFrame(org.jfree.chart.block.BlockFrame)": 817072.0,
        "org.jfree.chart.block$AbstractBlock#setHeight(double)": 1004.0,
        "org.jfree.chart.block$AbstractBlock#setID(java.lang.String)": 1044.0,
        "org.jfree.chart.block$AbstractBlock#setMargin(double,double,double,double)": 1046.0,
        "org.jfree.chart.block$AbstractBlock#setMargin(org.jfree.chart.util.RectangleInsets)": 817072.0,
        "org.jfree.chart.block$AbstractBlock#setPadding(double,double,double,double)": 934.0,
        "org.jfree.chart.block$AbstractBlock#setPadding(org.jfree.chart.util.RectangleInsets)": 730832.0,
        "org.jfree.chart.block$AbstractBlock#setWidth(double)": 1004.0,
        "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)": 916.0,
        "org.jfree.chart.block$AbstractBlock#trimBorder(java.awt.geom.Rectangle2D)": 918.0,
        "org.jfree.chart.block$AbstractBlock#trimMargin(java.awt.geom.Rectangle2D)": 918.0,
        "org.jfree.chart.block$AbstractBlock#trimPadding(java.awt.geom.Rectangle2D)": 918.0,
        "org.jfree.chart.block$AbstractBlock#trimToContentHeight(double)": 918.0,
        "org.jfree.chart.block$AbstractBlock#trimToContentHeight(org.jfree.data.Range)": 918.0,
        "org.jfree.chart.block$AbstractBlock#trimToContentWidth(double)": 918.0,
        "org.jfree.chart.block$AbstractBlock#trimToContentWidth(org.jfree.data.Range)": 918.0,
        "org.jfree.chart.block$AbstractBlock#writeObject(java.io.ObjectOutputStream)": 1006.0,
        "org.jfree.chart.block$BlockBorder#<clinit>()": 693674.0,
        "org.jfree.chart.block$BlockBorder#BlockBorder()": 1044.0,
        "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double)": 1046.0,
        "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double,java.awt.Paint)": 1046.0,
        "org.jfree.chart.block$BlockBorder#BlockBorder(java.awt.Paint)": 1040.0,
        "org.jfree.chart.block$BlockBorder#BlockBorder(org.jfree.chart.util.RectangleInsets,java.awt.Paint)": 693674.0,
        "org.jfree.chart.block$BlockBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 918.0,
        "org.jfree.chart.block$BlockBorder#equals(java.lang.Object)": 928.0,
        "org.jfree.chart.block$BlockBorder#getInsets()": 910.0,
        "org.jfree.chart.block$BlockBorder#getPaint()": 1046.0,
        "org.jfree.chart.block$BlockBorder#readObject(java.io.ObjectInputStream)": 1004.0,
        "org.jfree.chart.block$BlockBorder#writeObject(java.io.ObjectOutputStream)": 1004.0,
        "org.jfree.chart.block$BlockContainer#BlockContainer()": 1036.0,
        "org.jfree.chart.block$BlockContainer#BlockContainer(org.jfree.chart.block.Arrangement)": 793724.0,
        "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block)": 922.0,
        "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block,java.lang.Object)": 922.0,
        "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 936.0,
        "org.jfree.chart.block$BlockContainer#clear()": 916.0,
        "org.jfree.chart.block$BlockContainer#clone()": 1044.0,
        "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1046.0,
        "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 920.0,
        "org.jfree.chart.block$BlockContainer#equals(java.lang.Object)": 1032.0,
        "org.jfree.chart.block$BlockContainer#getArrangement()": 1046.0,
        "org.jfree.chart.block$BlockContainer#getBlocks()": 940.0,
        "org.jfree.chart.block$BlockContainer#isEmpty()": 920.0,
        "org.jfree.chart.block$BlockContainer#setArrangement(org.jfree.chart.block.Arrangement)": 918.0,
        "org.jfree.chart.block$ColumnArrangement#ColumnArrangement()": 811654.0,
        "org.jfree.chart.block$ColumnArrangement#ColumnArrangement(org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,double,double)": 1044.0,
        "org.jfree.chart.block$ColumnArrangement#add(org.jfree.chart.block.Block,java.lang.Object)": 1044.0,
        "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1046.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1046.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1046.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)": 1046.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1046.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1046.0,
        "org.jfree.chart.block$ColumnArrangement#clear()": 1046.0,
        "org.jfree.chart.block$ColumnArrangement#equals(java.lang.Object)": 1016.0,
        "org.jfree.chart.block$FlowArrangement#FlowArrangement()": 806254.0,
        "org.jfree.chart.block$FlowArrangement#FlowArrangement(org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,double,double)": 800872.0,
        "org.jfree.chart.block$FlowArrangement#add(org.jfree.chart.block.Block,java.lang.Object)": 942.0,
        "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 944.0,
        "org.jfree.chart.block$FlowArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1046.0,
        "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1044.0,
        "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1044.0,
        "org.jfree.chart.block$FlowArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1046.0,
        "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)": 944.0,
        "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1046.0,
        "org.jfree.chart.block$FlowArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1046.0,
        "org.jfree.chart.block$FlowArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 944.0,
        "org.jfree.chart.block$FlowArrangement#clear()": 920.0,
        "org.jfree.chart.block$FlowArrangement#equals(java.lang.Object)": 1010.0,
        "org.jfree.chart.block$LineBorder#LineBorder()": 818882.0,
        "org.jfree.chart.block$LineBorder#LineBorder(java.awt.Paint,java.awt.Stroke,org.jfree.chart.util.RectangleInsets)": 815264.0,
        "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 920.0,
        "org.jfree.chart.block$LineBorder#equals(java.lang.Object)": 1024.0,
        "org.jfree.chart.block$LineBorder#getInsets()": 920.0,
        "org.jfree.chart.block$LineBorder#getPaint()": 944.0,
        "org.jfree.chart.block$LineBorder#getStroke()": 944.0,
        "org.jfree.chart.block$LineBorder#readObject(java.io.ObjectInputStream)": 1028.0,
        "org.jfree.chart.block$LineBorder#writeObject(java.io.ObjectOutputStream)": 1028.0,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape)": 1016.0,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String)": 1016.0,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String,java.lang.String)": 984.0,
        "org.jfree.chart.entity$ChartEntity#clone()": 1034.0,
        "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)": 1008.0,
        "org.jfree.chart.entity$ChartEntity#getArea()": 1046.0,
        "org.jfree.chart.entity$ChartEntity#getImageMapAreaTag(org.jfree.chart.imagemap.ToolTipTagFragmentGenerator,org.jfree.chart.imagemap.URLTagFragmentGenerator)": 1046.0,
        "org.jfree.chart.entity$ChartEntity#getPolyCoords(java.awt.Shape)": 1046.0,
        "org.jfree.chart.entity$ChartEntity#getRectCoords(java.awt.geom.Rectangle2D)": 1046.0,
        "org.jfree.chart.entity$ChartEntity#getShapeCoords()": 1046.0,
        "org.jfree.chart.entity$ChartEntity#getShapeType()": 1046.0,
        "org.jfree.chart.entity$ChartEntity#getToolTipText()": 1046.0,
        "org.jfree.chart.entity$ChartEntity#getURLText()": 1046.0,
        "org.jfree.chart.entity$ChartEntity#hashCode()": 1046.0,
        "org.jfree.chart.entity$ChartEntity#readObject(java.io.ObjectInputStream)": 1034.0,
        "org.jfree.chart.entity$ChartEntity#setArea(java.awt.Shape)": 1036.0,
        "org.jfree.chart.entity$ChartEntity#setToolTipText(java.lang.String)": 1016.0,
        "org.jfree.chart.entity$ChartEntity#setURLText(java.lang.String)": 1016.0,
        "org.jfree.chart.entity$ChartEntity#toString()": 1046.0,
        "org.jfree.chart.entity$ChartEntity#writeObject(java.io.ObjectOutputStream)": 1034.0,
        "org.jfree.chart.entity$PieSectionEntity#PieSectionEntity(java.awt.Shape,org.jfree.data.general.PieDataset,int,int,java.lang.Comparable,java.lang.String,java.lang.String)": 1034.0,
        "org.jfree.chart.entity$PieSectionEntity#getDataset()": 1046.0,
        "org.jfree.chart.entity$PieSectionEntity#getPieIndex()": 1046.0,
        "org.jfree.chart.entity$PieSectionEntity#getSectionIndex()": 1046.0,
        "org.jfree.chart.entity$PieSectionEntity#getSectionKey()": 1046.0,
        "org.jfree.chart.entity$PieSectionEntity#setDataset(org.jfree.data.general.PieDataset)": 1046.0,
        "org.jfree.chart.entity$PieSectionEntity#setPieIndex(int)": 1046.0,
        "org.jfree.chart.entity$PieSectionEntity#setSectionIndex(int)": 1046.0,
        "org.jfree.chart.entity$PieSectionEntity#setSectionKey(java.lang.Comparable)": 1046.0,
        "org.jfree.chart.entity$PieSectionEntity#toString()": 1046.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)": 281444.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart)": 1046.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart,org.jfree.chart.event.ChartChangeEventType)": 281444.0,
        "org.jfree.chart.event$ChartChangeEvent#getChart()": 1046.0,
        "org.jfree.chart.event$ChartChangeEvent#getType()": 1046.0,
        "org.jfree.chart.event$ChartChangeEvent#setChart(org.jfree.chart.JFreeChart)": 896.0,
        "org.jfree.chart.event$ChartChangeEvent#setType(org.jfree.chart.event.ChartChangeEventType)": 632.0,
        "org.jfree.chart.event$ChartChangeEventType#<clinit>()": 281444.0,
        "org.jfree.chart.event$ChartChangeEventType#ChartChangeEventType(java.lang.String)": 281444.0,
        "org.jfree.chart.event$ChartChangeEventType#equals(java.lang.Object)": 1046.0,
        "org.jfree.chart.event$ChartChangeEventType#hashCode()": 1046.0,
        "org.jfree.chart.event$ChartChangeEventType#readResolve()": 1046.0,
        "org.jfree.chart.event$ChartChangeEventType#toString()": 1046.0,
        "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)": 542.0,
        "org.jfree.chart.event$PlotChangeEvent#getPlot()": 1046.0,
        "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)": 809852.0,
        "org.jfree.chart.event$TitleChangeEvent#getTitle()": 1046.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#AbstractPieItemLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)": 1009982.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#clone()": 1028.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)": 1040.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#equals(java.lang.Object)": 996.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)": 1040.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#getLabelFormat()": 1046.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#getNumberFormat()": 1040.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#getPercentFormat()": 1044.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator()": 1016024.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String)": 1044.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)": 1016024.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.util.Locale)": 1046.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.util.Locale)": 1046.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#clone()": 1030.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#equals(java.lang.Object)": 1002.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateAttributedSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)": 1046.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)": 1040.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#getAttributedLabel(int)": 1046.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#setAttributedLabel(int,java.text.AttributedString)": 1044.0,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#AbstractPieLabelDistributor()": 1022084.0,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#addPieLabelRecord(org.jfree.chart.plot.PieLabelRecord)": 1042.0,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#clear()": 1042.0,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#getItemCount()": 1042.0,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)": 1042.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()": 608132.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier()": 608132.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])": 608132.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])": 1042.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#clone()": 994.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#createStandardSeriesShapes()": 608132.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#equalShapes(java.awt.Shape[],java.awt.Shape[])": 888.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)": 888.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextFillPaint()": 1044.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlinePaint()": 1042.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlineStroke()": 1044.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextPaint()": 900.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextShape()": 1002.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextStroke()": 1044.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double)": 608132.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double,double)": 608132.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#readObject(java.io.ObjectInputStream)": 980.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#writeObject(java.io.ObjectOutputStream)": 980.0,
        "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot()": 1092022.0,
        "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)": 1089932.0,
        "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 1046.0,
        "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)": 1040.0,
        "org.jfree.chart.plot$MultiplePiePlot#getAggregatedItemsKey()": 1046.0,
        "org.jfree.chart.plot$MultiplePiePlot#getAggregatedItemsPaint()": 1046.0,
        "org.jfree.chart.plot$MultiplePiePlot#getDataExtractOrder()": 1046.0,
        "org.jfree.chart.plot$MultiplePiePlot#getDataset()": 1096208.0,
        "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()": 1046.0,
        "org.jfree.chart.plot$MultiplePiePlot#getLimit()": 1046.0,
        "org.jfree.chart.plot$MultiplePiePlot#getPieChart()": 1046.0,
        "org.jfree.chart.plot$MultiplePiePlot#getPlotType()": 1046.0,
        "org.jfree.chart.plot$MultiplePiePlot#prefetchSectionPaints()": 1046.0,
        "org.jfree.chart.plot$MultiplePiePlot#readObject(java.io.ObjectInputStream)": 1044.0,
        "org.jfree.chart.plot$MultiplePiePlot#setAggregatedItemsKey(java.lang.Comparable)": 1044.0,
        "org.jfree.chart.plot$MultiplePiePlot#setAggregatedItemsPaint(java.awt.Paint)": 1042.0,
        "org.jfree.chart.plot$MultiplePiePlot#setDataExtractOrder(org.jfree.chart.util.TableOrder)": 1044.0,
        "org.jfree.chart.plot$MultiplePiePlot#setDataset(org.jfree.data.category.CategoryDataset)": 1046.0,
        "org.jfree.chart.plot$MultiplePiePlot#setLimit(double)": 1044.0,
        "org.jfree.chart.plot$MultiplePiePlot#setPieChart(org.jfree.chart.JFreeChart)": 1044.0,
        "org.jfree.chart.plot$MultiplePiePlot#writeObject(java.io.ObjectOutputStream)": 1044.0,
        "org.jfree.chart.plot$PieLabelDistributor#PieLabelDistributor(int)": 1022084.0,
        "org.jfree.chart.plot$PieLabelDistributor#adjustDownwards(double,double)": 1044.0,
        "org.jfree.chart.plot$PieLabelDistributor#adjustInwards()": 1046.0,
        "org.jfree.chart.plot$PieLabelDistributor#adjustUpwards(double,double)": 1044.0,
        "org.jfree.chart.plot$PieLabelDistributor#distributeLabels(double,double)": 1042.0,
        "org.jfree.chart.plot$PieLabelDistributor#isOverlap()": 1042.0,
        "org.jfree.chart.plot$PieLabelDistributor#sort()": 1042.0,
        "org.jfree.chart.plot$PieLabelDistributor#spreadEvenly(double,double)": 1044.0,
        "org.jfree.chart.plot$PieLabelDistributor#toString()": 1046.0,
        "org.jfree.chart.plot$PieLabelLinkStyle#<clinit>()": 1022084.0,
        "org.jfree.chart.plot$PieLabelLinkStyle#PieLabelLinkStyle(java.lang.String)": 1022084.0,
        "org.jfree.chart.plot$PieLabelLinkStyle#equals(java.lang.Object)": 1004.0,
        "org.jfree.chart.plot$PieLabelLinkStyle#hashCode()": 1046.0,
        "org.jfree.chart.plot$PieLabelLinkStyle#readResolve()": 1034.0,
        "org.jfree.chart.plot$PieLabelLinkStyle#toString()": 1034.0,
        "org.jfree.chart.plot$PiePlot#<clinit>()": 1022084.0,
        "org.jfree.chart.plot$PiePlot#PiePlot()": 1024.0,
        "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)": 1022084.0,
        "org.jfree.chart.plot$PiePlot#clone()": 1032.0,
        "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 1044.0,
        "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)": 1044.0,
        "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)": 1042.0,
        "org.jfree.chart.plot$PiePlot#drawLeftLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)": 1042.0,
        "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)": 1042.0,
        "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 1044.0,
        "org.jfree.chart.plot$PiePlot#drawRightLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)": 1042.0,
        "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)": 1042.0,
        "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)": 1046.0,
        "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)": 1006.0,
        "org.jfree.chart.plot$PiePlot#getArcBounds(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double,double)": 1044.0,
        "org.jfree.chart.plot$PiePlot#getBaseSectionOutlinePaint()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getBaseSectionOutlineStroke()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getBaseSectionPaint()": 1044.0,
        "org.jfree.chart.plot$PiePlot#getDataset()": 1034.0,
        "org.jfree.chart.plot$PiePlot#getDirection()": 1044.0,
        "org.jfree.chart.plot$PiePlot#getExplodePercent(java.lang.Comparable)": 1042.0,
        "org.jfree.chart.plot$PiePlot#getIgnoreNullValues()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getIgnoreZeroValues()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getInteriorGap()": 1040.0,
        "org.jfree.chart.plot$PiePlot#getLabelBackgroundPaint()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getLabelDistributor()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getLabelFont()": 1042.0,
        "org.jfree.chart.plot$PiePlot#getLabelGap()": 1042.0,
        "org.jfree.chart.plot$PiePlot#getLabelGenerator()": 1042.0,
        "org.jfree.chart.plot$PiePlot#getLabelLinkMargin()": 1042.0,
        "org.jfree.chart.plot$PiePlot#getLabelLinkPaint()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getLabelLinkStroke()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getLabelLinkStyle()": 1042.0,
        "org.jfree.chart.plot$PiePlot#getLabelLinksVisible()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getLabelOutlinePaint()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getLabelOutlineStroke()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getLabelPadding()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getLabelPaint()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getLabelShadowPaint()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getLegendItemShape()": 1040.0,
        "org.jfree.chart.plot$PiePlot#getLegendItems()": 1038.0,
        "org.jfree.chart.plot$PiePlot#getLegendLabelGenerator()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getLegendLabelToolTipGenerator()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getLegendLabelURLGenerator()": 1044.0,
        "org.jfree.chart.plot$PiePlot#getMaximumExplodePercent()": 1040.0,
        "org.jfree.chart.plot$PiePlot#getMaximumLabelWidth()": 1042.0,
        "org.jfree.chart.plot$PiePlot#getMinimumArcAngleToDraw()": 1042.0,
        "org.jfree.chart.plot$PiePlot#getPieIndex()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getPlotType()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getSectionKey(int)": 1042.0,
        "org.jfree.chart.plot$PiePlot#getSectionOutlinePaint(java.lang.Comparable)": 1046.0,
        "org.jfree.chart.plot$PiePlot#getSectionOutlineStroke(java.lang.Comparable)": 1046.0,
        "org.jfree.chart.plot$PiePlot#getSectionOutlinesVisible()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getSectionPaint(java.lang.Comparable)": 1046.0,
        "org.jfree.chart.plot$PiePlot#getShadowPaint()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getShadowXOffset()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getShadowYOffset()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getSimpleLabelOffset()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getSimpleLabels()": 1044.0,
        "org.jfree.chart.plot$PiePlot#getStartAngle()": 1040.0,
        "org.jfree.chart.plot$PiePlot#getToolTipGenerator()": 1046.0,
        "org.jfree.chart.plot$PiePlot#getURLGenerator()": 1044.0,
        "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)": 1040.0,
        "org.jfree.chart.plot$PiePlot#isCircular()": 1040.0,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable)": 1040.0,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable,boolean)": 1040.0,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable)": 1040.0,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable,boolean)": 1040.0,
        "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable)": 1044.0,
        "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable,boolean)": 1040.0,
        "org.jfree.chart.plot$PiePlot#readObject(java.io.ObjectInputStream)": 1034.0,
        "org.jfree.chart.plot$PiePlot#setBaseSectionOutlinePaint(java.awt.Paint)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setBaseSectionOutlineStroke(java.awt.Stroke)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setBaseSectionPaint(java.awt.Paint)": 1042.0,
        "org.jfree.chart.plot$PiePlot#setCircular(boolean)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setCircular(boolean,boolean)": 1032.0,
        "org.jfree.chart.plot$PiePlot#setDataset(org.jfree.data.general.PieDataset)": 1042.0,
        "org.jfree.chart.plot$PiePlot#setDirection(org.jfree.chart.util.Rotation)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setExplodePercent(java.lang.Comparable,double)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setIgnoreNullValues(boolean)": 1042.0,
        "org.jfree.chart.plot$PiePlot#setIgnoreZeroValues(boolean)": 1042.0,
        "org.jfree.chart.plot$PiePlot#setInteriorGap(double)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setLabelBackgroundPaint(java.awt.Paint)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setLabelDistributor(org.jfree.chart.plot.AbstractPieLabelDistributor)": 1046.0,
        "org.jfree.chart.plot$PiePlot#setLabelFont(java.awt.Font)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setLabelGap(double)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)": 1014.0,
        "org.jfree.chart.plot$PiePlot#setLabelLinkMargin(double)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setLabelLinkPaint(java.awt.Paint)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setLabelLinkStroke(java.awt.Stroke)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setLabelLinkStyle(org.jfree.chart.plot.PieLabelLinkStyle)": 1046.0,
        "org.jfree.chart.plot$PiePlot#setLabelLinksVisible(boolean)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setLabelOutlinePaint(java.awt.Paint)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setLabelOutlineStroke(java.awt.Stroke)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setLabelPadding(org.jfree.chart.util.RectangleInsets)": 1046.0,
        "org.jfree.chart.plot$PiePlot#setLabelPaint(java.awt.Paint)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setLabelShadowPaint(java.awt.Paint)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setLegendItemShape(java.awt.Shape)": 1042.0,
        "org.jfree.chart.plot$PiePlot#setLegendLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)": 1040.0,
        "org.jfree.chart.plot$PiePlot#setLegendLabelToolTipGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)": 1042.0,
        "org.jfree.chart.plot$PiePlot#setLegendLabelURLGenerator(org.jfree.chart.urls.PieURLGenerator)": 1042.0,
        "org.jfree.chart.plot$PiePlot#setMaximumLabelWidth(double)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setMinimumArcAngleToDraw(double)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setPieIndex(int)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setSectionOutlinePaint(java.lang.Comparable,java.awt.Paint)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setSectionOutlineStroke(java.lang.Comparable,java.awt.Stroke)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setSectionOutlinesVisible(boolean)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setSectionPaint(java.lang.Comparable,java.awt.Paint)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setShadowPaint(java.awt.Paint)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setShadowXOffset(double)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setShadowYOffset(double)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setSimpleLabelOffset(org.jfree.chart.util.RectangleInsets)": 1046.0,
        "org.jfree.chart.plot$PiePlot#setSimpleLabels(boolean)": 1046.0,
        "org.jfree.chart.plot$PiePlot#setStartAngle(double)": 1044.0,
        "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)": 1012.0,
        "org.jfree.chart.plot$PiePlot#setURLGenerator(org.jfree.chart.urls.PieURLGenerator)": 1036.0,
        "org.jfree.chart.plot$PiePlot#writeObject(java.io.ObjectOutputStream)": 1034.0,
        "org.jfree.chart.plot$Plot#<clinit>()": 612824.0,
        "org.jfree.chart.plot$Plot#Plot()": 612824.0,
        "org.jfree.chart.plot$Plot#addChangeListener(org.jfree.chart.event.PlotChangeListener)": 746312.0,
        "org.jfree.chart.plot$Plot#axisChanged(org.jfree.chart.event.AxisChangeEvent)": 1022.0,
        "org.jfree.chart.plot$Plot#clone()": 996.0,
        "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 1028.0,
        "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1036.0,
        "org.jfree.chart.plot$Plot#drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 926.0,
        "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1024.0,
        "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 926.0,
        "org.jfree.chart.plot$Plot#equals(java.lang.Object)": 894.0,
        "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1036.0,
        "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)": 926.0,
        "org.jfree.chart.plot$Plot#fireChangeEvent()": 610.0,
        "org.jfree.chart.plot$Plot#getBackgroundAlpha()": 1040.0,
        "org.jfree.chart.plot$Plot#getBackgroundImage()": 1040.0,
        "org.jfree.chart.plot$Plot#getBackgroundImageAlignment()": 1046.0,
        "org.jfree.chart.plot$Plot#getBackgroundImageAlpha()": 1046.0,
        "org.jfree.chart.plot$Plot#getBackgroundPaint()": 1040.0,
        "org.jfree.chart.plot$Plot#getDatasetGroup()": 1046.0,
        "org.jfree.chart.plot$Plot#getDrawingSupplier()": 898.0,
        "org.jfree.chart.plot$Plot#getForegroundAlpha()": 920.0,
        "org.jfree.chart.plot$Plot#getInsets()": 918.0,
        "org.jfree.chart.plot$Plot#getLegendItems()": 1044.0,
        "org.jfree.chart.plot$Plot#getNoDataMessage()": 1046.0,
        "org.jfree.chart.plot$Plot#getNoDataMessageFont()": 1046.0,
        "org.jfree.chart.plot$Plot#getNoDataMessagePaint()": 1046.0,
        "org.jfree.chart.plot$Plot#getOutlinePaint()": 1040.0,
        "org.jfree.chart.plot$Plot#getOutlineStroke()": 1040.0,
        "org.jfree.chart.plot$Plot#getParent()": 642.0,
        "org.jfree.chart.plot$Plot#getRectX(double,double,double,org.jfree.chart.util.RectangleEdge)": 1046.0,
        "org.jfree.chart.plot$Plot#getRectY(double,double,double,org.jfree.chart.util.RectangleEdge)": 1046.0,
        "org.jfree.chart.plot$Plot#getRootPlot()": 1046.0,
        "org.jfree.chart.plot$Plot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 1046.0,
        "org.jfree.chart.plot$Plot#isOutlineVisible()": 1046.0,
        "org.jfree.chart.plot$Plot#isSubplot()": 1046.0,
        "org.jfree.chart.plot$Plot#markerChanged(org.jfree.chart.event.MarkerChangeEvent)": 1046.0,
        "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)": 542.0,
        "org.jfree.chart.plot$Plot#readObject(java.io.ObjectInputStream)": 982.0,
        "org.jfree.chart.plot$Plot#removeChangeListener(org.jfree.chart.event.PlotChangeListener)": 1038.0,
        "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)": 930.0,
        "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)": 930.0,
        "org.jfree.chart.plot$Plot#setBackgroundAlpha(float)": 1044.0,
        "org.jfree.chart.plot$Plot#setBackgroundImage(java.awt.Image)": 1044.0,
        "org.jfree.chart.plot$Plot#setBackgroundImageAlignment(int)": 1044.0,
        "org.jfree.chart.plot$Plot#setBackgroundImageAlpha(float)": 1044.0,
        "org.jfree.chart.plot$Plot#setBackgroundPaint(java.awt.Paint)": 1036.0,
        "org.jfree.chart.plot$Plot#setDatasetGroup(org.jfree.data.general.DatasetGroup)": 1042.0,
        "org.jfree.chart.plot$Plot#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)": 1044.0,
        "org.jfree.chart.plot$Plot#setForegroundAlpha(float)": 1030.0,
        "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)": 984.0,
        "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets,boolean)": 976.0,
        "org.jfree.chart.plot$Plot#setNoDataMessage(java.lang.String)": 1044.0,
        "org.jfree.chart.plot$Plot#setNoDataMessageFont(java.awt.Font)": 1044.0,
        "org.jfree.chart.plot$Plot#setNoDataMessagePaint(java.awt.Paint)": 1044.0,
        "org.jfree.chart.plot$Plot#setOutlinePaint(java.awt.Paint)": 1044.0,
        "org.jfree.chart.plot$Plot#setOutlineStroke(java.awt.Stroke)": 1044.0,
        "org.jfree.chart.plot$Plot#setOutlineVisible(boolean)": 1044.0,
        "org.jfree.chart.plot$Plot#setParent(org.jfree.chart.plot.Plot)": 1014.0,
        "org.jfree.chart.plot$Plot#writeObject(java.io.ObjectOutputStream)": 982.0,
        "org.jfree.chart.plot$Plot#zoom(double)": 1046.0,
        "org.jfree.chart.resources$JFreeChartResources#<clinit>()": 772472.0,
        "org.jfree.chart.resources$JFreeChartResources#JFreeChartResources()": 772472.0,
        "org.jfree.chart.resources$JFreeChartResources#getContents()": 772472.0,
        "org.jfree.chart.title$LegendTitle#<clinit>()": 813458.0,
        "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource)": 813458.0,
        "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)": 813458.0,
        "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 920.0,
        "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)": 944.0,
        "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1046.0,
        "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 920.0,
        "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)": 1065008.0,
        "org.jfree.chart.title$LegendTitle#fetchLegendItems()": 920.0,
        "org.jfree.chart.title$LegendTitle#getBackgroundPaint()": 1046.0,
        "org.jfree.chart.title$LegendTitle#getItemContainer()": 1046.0,
        "org.jfree.chart.title$LegendTitle#getItemFont()": 1046.0,
        "org.jfree.chart.title$LegendTitle#getItemLabelPadding()": 1046.0,
        "org.jfree.chart.title$LegendTitle#getItemPaint()": 1046.0,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicAnchor()": 944.0,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicEdge()": 1046.0,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicLocation()": 944.0,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicPadding()": 1046.0,
        "org.jfree.chart.title$LegendTitle#getSources()": 1042.0,
        "org.jfree.chart.title$LegendTitle#readObject(java.io.ObjectInputStream)": 1028.0,
        "org.jfree.chart.title$LegendTitle#setBackgroundPaint(java.awt.Paint)": 817072.0,
        "org.jfree.chart.title$LegendTitle#setItemFont(java.awt.Font)": 1044.0,
        "org.jfree.chart.title$LegendTitle#setItemLabelPadding(org.jfree.chart.util.RectangleInsets)": 1046.0,
        "org.jfree.chart.title$LegendTitle#setItemPaint(java.awt.Paint)": 1046.0,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicAnchor(org.jfree.chart.util.RectangleAnchor)": 1044.0,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicEdge(org.jfree.chart.util.RectangleEdge)": 1044.0,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicLocation(org.jfree.chart.util.RectangleAnchor)": 1044.0,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicPadding(org.jfree.chart.util.RectangleInsets)": 1046.0,
        "org.jfree.chart.title$LegendTitle#setSources(org.jfree.chart.LegendItemSource[])": 1046.0,
        "org.jfree.chart.title$LegendTitle#setWrapper(org.jfree.chart.block.BlockContainer)": 1046.0,
        "org.jfree.chart.title$LegendTitle#writeObject(java.io.ObjectOutputStream)": 1028.0,
        "org.jfree.chart.title$TextTitle#<clinit>()": 853652.0,
        "org.jfree.chart.title$TextTitle#TextTitle()": 1036.0,
        "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String)": 1018.0,
        "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)": 879734.0,
        "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font,java.awt.Paint,org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)": 853652.0,
        "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 984.0,
        "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)": 984.0,
        "org.jfree.chart.title$TextTitle#clone()": 1042.0,
        "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1046.0,
        "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 984.0,
        "org.jfree.chart.title$TextTitle#drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 984.0,
        "org.jfree.chart.title$TextTitle#drawVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1046.0,
        "org.jfree.chart.title$TextTitle#equals(java.lang.Object)": 996.0,
        "org.jfree.chart.title$TextTitle#getBackgroundPaint()": 1046.0,
        "org.jfree.chart.title$TextTitle#getExpandToFitSpace()": 1046.0,
        "org.jfree.chart.title$TextTitle#getFont()": 1046.0,
        "org.jfree.chart.title$TextTitle#getPaint()": 1046.0,
        "org.jfree.chart.title$TextTitle#getText()": 1046.0,
        "org.jfree.chart.title$TextTitle#getTextAlignment()": 1046.0,
        "org.jfree.chart.title$TextTitle#getToolTipText()": 1046.0,
        "org.jfree.chart.title$TextTitle#getURLText()": 1046.0,
        "org.jfree.chart.title$TextTitle#hashCode()": 1040.0,
        "org.jfree.chart.title$TextTitle#readObject(java.io.ObjectInputStream)": 1022.0,
        "org.jfree.chart.title$TextTitle#setBackgroundPaint(java.awt.Paint)": 1042.0,
        "org.jfree.chart.title$TextTitle#setExpandToFitSpace(boolean)": 1046.0,
        "org.jfree.chart.title$TextTitle#setFont(java.awt.Font)": 1040.0,
        "org.jfree.chart.title$TextTitle#setPaint(java.awt.Paint)": 1042.0,
        "org.jfree.chart.title$TextTitle#setText(java.lang.String)": 1040.0,
        "org.jfree.chart.title$TextTitle#setTextAlignment(org.jfree.chart.util.HorizontalAlignment)": 1044.0,
        "org.jfree.chart.title$TextTitle#setToolTipText(java.lang.String)": 1046.0,
        "org.jfree.chart.title$TextTitle#setURLText(java.lang.String)": 1046.0,
        "org.jfree.chart.title$TextTitle#writeObject(java.io.ObjectOutputStream)": 1022.0,
        "org.jfree.chart.title$Title#<clinit>()": 741134.0,
        "org.jfree.chart.title$Title#Title()": 799082.0,
        "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)": 1046.0,
        "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)": 741134.0,
        "org.jfree.chart.title$Title#addChangeListener(org.jfree.chart.event.TitleChangeListener)": 786608.0,
        "org.jfree.chart.title$Title#clone()": 1034.0,
        "org.jfree.chart.title$Title#equals(java.lang.Object)": 974.0,
        "org.jfree.chart.title$Title#getHorizontalAlignment()": 918.0,
        "org.jfree.chart.title$Title#getNotify()": 1046.0,
        "org.jfree.chart.title$Title#getPosition()": 918.0,
        "org.jfree.chart.title$Title#getVerticalAlignment()": 1046.0,
        "org.jfree.chart.title$Title#hashCode()": 1032.0,
        "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)": 809852.0,
        "org.jfree.chart.title$Title#readObject(java.io.ObjectInputStream)": 1018.0,
        "org.jfree.chart.title$Title#removeChangeListener(org.jfree.chart.event.TitleChangeListener)": 1044.0,
        "org.jfree.chart.title$Title#setHorizontalAlignment(org.jfree.chart.util.HorizontalAlignment)": 1044.0,
        "org.jfree.chart.title$Title#setNotify(boolean)": 1046.0,
        "org.jfree.chart.title$Title#setPosition(org.jfree.chart.util.RectangleEdge)": 818882.0,
        "org.jfree.chart.title$Title#setVerticalAlignment(org.jfree.chart.util.VerticalAlignment)": 1044.0,
        "org.jfree.chart.title$Title#writeObject(java.io.ObjectOutputStream)": 1018.0,
        "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo()": 772472.0,
        "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 1046.0,
        "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 1046.0,
        "org.jfree.chart.ui$BasicProjectInfo#addLibrary(org.jfree.chart.ui.Library)": 1046.0,
        "org.jfree.chart.ui$BasicProjectInfo#addOptionalLibrary(java.lang.String)": 1046.0,
        "org.jfree.chart.ui$BasicProjectInfo#addOptionalLibrary(org.jfree.chart.ui.Library)": 1046.0,
        "org.jfree.chart.ui$BasicProjectInfo#getCopyright()": 1046.0,
        "org.jfree.chart.ui$BasicProjectInfo#getLibraries()": 1046.0,
        "org.jfree.chart.ui$BasicProjectInfo#getOptionalLibraries()": 1046.0,
        "org.jfree.chart.ui$BasicProjectInfo#setCopyright(java.lang.String)": 772472.0,
        "org.jfree.chart.ui$BasicProjectInfo#setInfo(java.lang.String)": 772472.0,
        "org.jfree.chart.ui$BasicProjectInfo#setLicenceName(java.lang.String)": 772472.0,
        "org.jfree.chart.ui$BasicProjectInfo#setName(java.lang.String)": 772472.0,
        "org.jfree.chart.ui$BasicProjectInfo#setVersion(java.lang.String)": 772472.0,
        "org.jfree.chart.ui$Contributor#Contributor(java.lang.String,java.lang.String)": 772472.0,
        "org.jfree.chart.ui$Contributor#getEmail()": 1046.0,
        "org.jfree.chart.ui$Contributor#getName()": 1046.0,
        "org.jfree.chart.ui$Library#Library()": 772472.0,
        "org.jfree.chart.ui$Library#Library(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 1046.0,
        "org.jfree.chart.ui$Library#equals(java.lang.Object)": 1046.0,
        "org.jfree.chart.ui$Library#getInfo()": 1046.0,
        "org.jfree.chart.ui$Library#getLicenceName()": 1046.0,
        "org.jfree.chart.ui$Library#getName()": 1046.0,
        "org.jfree.chart.ui$Library#getVersion()": 1046.0,
        "org.jfree.chart.ui$Library#hashCode()": 1046.0,
        "org.jfree.chart.ui$Library#setInfo(java.lang.String)": 772472.0,
        "org.jfree.chart.ui$Library#setLicenceName(java.lang.String)": 772472.0,
        "org.jfree.chart.ui$Library#setName(java.lang.String)": 772472.0,
        "org.jfree.chart.ui$Library#setVersion(java.lang.String)": 772472.0,
        "org.jfree.chart.ui$Licences#Licences()": 772472.0,
        "org.jfree.chart.ui$Licences#getGPL()": 1046.0,
        "org.jfree.chart.ui$Licences#getInstance()": 772472.0,
        "org.jfree.chart.ui$Licences#getLGPL()": 772472.0,
        "org.jfree.chart.ui$ProjectInfo#ProjectInfo()": 772472.0,
        "org.jfree.chart.ui$ProjectInfo#ProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.awt.Image,java.lang.String,java.lang.String,java.lang.String)": 1046.0,
        "org.jfree.chart.ui$ProjectInfo#getContributors()": 1046.0,
        "org.jfree.chart.ui$ProjectInfo#getLicenceText()": 1046.0,
        "org.jfree.chart.ui$ProjectInfo#getLogo()": 1028.0,
        "org.jfree.chart.ui$ProjectInfo#setContributors(java.util.List)": 772472.0,
        "org.jfree.chart.ui$ProjectInfo#setLicenceText(java.lang.String)": 772472.0,
        "org.jfree.chart.ui$ProjectInfo#setLogo(java.awt.Image)": 772472.0,
        "org.jfree.chart.ui$ProjectInfo#toString()": 1046.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList()": 305314.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int)": 305314.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int,int)": 305314.0,
        "org.jfree.chart.util$AbstractObjectList#clear()": 1046.0,
        "org.jfree.chart.util$AbstractObjectList#clone()": 902.0,
        "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)": 530.0,
        "org.jfree.chart.util$AbstractObjectList#get(int)": 574.0,
        "org.jfree.chart.util$AbstractObjectList#hashCode()": 952.0,
        "org.jfree.chart.util$AbstractObjectList#indexOf(java.lang.Object)": 704.0,
        "org.jfree.chart.util$AbstractObjectList#readObject(java.io.ObjectInputStream)": 890.0,
        "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)": 568.0,
        "org.jfree.chart.util$AbstractObjectList#size()": 190.0,
        "org.jfree.chart.util$AbstractObjectList#writeObject(java.io.ObjectOutputStream)": 890.0,
        "org.jfree.chart.util$HorizontalAlignment#<clinit>()": 710444.0,
        "org.jfree.chart.util$HorizontalAlignment#HorizontalAlignment(java.lang.String)": 710444.0,
        "org.jfree.chart.util$HorizontalAlignment#equals(java.lang.Object)": 1008.0,
        "org.jfree.chart.util$HorizontalAlignment#hashCode()": 1032.0,
        "org.jfree.chart.util$HorizontalAlignment#readResolve()": 1008.0,
        "org.jfree.chart.util$HorizontalAlignment#toString()": 1046.0,
        "org.jfree.chart.util$ObjectList#ObjectList()": 324422.0,
        "org.jfree.chart.util$ObjectList#ObjectList(int)": 1046.0,
        "org.jfree.chart.util$ObjectList#get(int)": 628.0,
        "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)": 704.0,
        "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)": 626.0,
        "org.jfree.chart.util$RectangleAnchor#<clinit>()": 625424.0,
        "org.jfree.chart.util$RectangleAnchor#RectangleAnchor(java.lang.String)": 625424.0,
        "org.jfree.chart.util$RectangleAnchor#coordinates(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleAnchor)": 944.0,
        "org.jfree.chart.util$RectangleAnchor#createRectangle(org.jfree.chart.util.Size2D,double,double,org.jfree.chart.util.RectangleAnchor)": 1042.0,
        "org.jfree.chart.util$RectangleAnchor#equals(java.lang.Object)": 956.0,
        "org.jfree.chart.util$RectangleAnchor#hashCode()": 1042.0,
        "org.jfree.chart.util$RectangleAnchor#readResolve()": 992.0,
        "org.jfree.chart.util$RectangleAnchor#toString()": 1046.0,
        "org.jfree.chart.util$RectangleEdge#<clinit>()": 727414.0,
        "org.jfree.chart.util$RectangleEdge#RectangleEdge(java.lang.String)": 727414.0,
        "org.jfree.chart.util$RectangleEdge#coordinate(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1046.0,
        "org.jfree.chart.util$RectangleEdge#equals(java.lang.Object)": 950.0,
        "org.jfree.chart.util$RectangleEdge#hashCode()": 1032.0,
        "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)": 922.0,
        "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)": 908.0,
        "org.jfree.chart.util$RectangleEdge#opposite(org.jfree.chart.util.RectangleEdge)": 1046.0,
        "org.jfree.chart.util$RectangleEdge#readResolve()": 1018.0,
        "org.jfree.chart.util$RectangleEdge#toString()": 1046.0,
        "org.jfree.chart.util$RectangleInsets#<clinit>()": 379024.0,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets()": 1046.0,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)": 402812.0,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets(org.jfree.chart.util.UnitType,double,double,double,double)": 379024.0,
        "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)": 916.0,
        "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)": 910.0,
        "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)": 916.0,
        "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)": 910.0,
        "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)": 916.0,
        "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)": 910.0,
        "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)": 916.0,
        "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)": 910.0,
        "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)": 1046.0,
        "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D)": 1046.0,
        "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)": 1046.0,
        "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D)": 928.0,
        "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)": 928.0,
        "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)": 738.0,
        "org.jfree.chart.util$RectangleInsets#extendHeight(double)": 912.0,
        "org.jfree.chart.util$RectangleInsets#extendWidth(double)": 912.0,
        "org.jfree.chart.util$RectangleInsets#getBottom()": 928.0,
        "org.jfree.chart.util$RectangleInsets#getLeft()": 928.0,
        "org.jfree.chart.util$RectangleInsets#getRight()": 928.0,
        "org.jfree.chart.util$RectangleInsets#getTop()": 928.0,
        "org.jfree.chart.util$RectangleInsets#getUnitType()": 1046.0,
        "org.jfree.chart.util$RectangleInsets#hashCode()": 1046.0,
        "org.jfree.chart.util$RectangleInsets#toString()": 1046.0,
        "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)": 918.0,
        "org.jfree.chart.util$RectangleInsets#trimHeight(double)": 918.0,
        "org.jfree.chart.util$RectangleInsets#trimWidth(double)": 918.0,
        "org.jfree.chart.util$Rotation#<clinit>()": 1014008.0,
        "org.jfree.chart.util$Rotation#Rotation(java.lang.String,double)": 1014008.0,
        "org.jfree.chart.util$Rotation#equals(java.lang.Object)": 1028.0,
        "org.jfree.chart.util$Rotation#getFactor()": 1040.0,
        "org.jfree.chart.util$Rotation#hashCode()": 1046.0,
        "org.jfree.chart.util$Rotation#readResolve()": 1032.0,
        "org.jfree.chart.util$Rotation#toString()": 1046.0,
        "org.jfree.chart.util$TableOrder#<clinit>()": 1069142.0,
        "org.jfree.chart.util$TableOrder#TableOrder(java.lang.String)": 1069142.0,
        "org.jfree.chart.util$TableOrder#equals(java.lang.Object)": 1036.0,
        "org.jfree.chart.util$TableOrder#hashCode()": 1046.0,
        "org.jfree.chart.util$TableOrder#readResolve()": 1040.0,
        "org.jfree.chart.util$TableOrder#toString()": 1046.0,
        "org.jfree.chart.util$UnitType#<clinit>()": 371662.0,
        "org.jfree.chart.util$UnitType#UnitType(java.lang.String)": 371662.0,
        "org.jfree.chart.util$UnitType#equals(java.lang.Object)": 918.0,
        "org.jfree.chart.util$UnitType#hashCode()": 1046.0,
        "org.jfree.chart.util$UnitType#readResolve()": 918.0,
        "org.jfree.chart.util$UnitType#toString()": 1046.0,
        "org.jfree.chart.util$VerticalAlignment#<clinit>()": 727414.0,
        "org.jfree.chart.util$VerticalAlignment#VerticalAlignment(java.lang.String)": 727414.0,
        "org.jfree.chart.util$VerticalAlignment#equals(java.lang.Object)": 1014.0,
        "org.jfree.chart.util$VerticalAlignment#hashCode()": 1032.0,
        "org.jfree.chart.util$VerticalAlignment#readResolve()": 1014.0,
        "org.jfree.chart.util$VerticalAlignment#toString()": 1046.0,
        "org.jfree.data$DefaultKeyedValues2D#DefaultKeyedValues2D()": 820694.0,
        "org.jfree.data$DefaultKeyedValues2D#DefaultKeyedValues2D(boolean)": 802664.0,
        "org.jfree.data$DefaultKeyedValues2D#addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)": 792.0,
        "org.jfree.data$DefaultKeyedValues2D#clear()": 1044.0,
        "org.jfree.data$DefaultKeyedValues2D#clone()": 1038.0,
        "org.jfree.data$DefaultKeyedValues2D#equals(java.lang.Object)": 1028.0,
        "org.jfree.data$DefaultKeyedValues2D#getColumnCount()": 828.0,
        "org.jfree.data$DefaultKeyedValues2D#getColumnIndex(java.lang.Comparable)": 1040.0,
        "org.jfree.data$DefaultKeyedValues2D#getColumnKey(int)": 1012.0,
        "org.jfree.data$DefaultKeyedValues2D#getColumnKeys()": 1014.0,
        "org.jfree.data$DefaultKeyedValues2D#getRowCount()": 796.0,
        "org.jfree.data$DefaultKeyedValues2D#getRowIndex(java.lang.Comparable)": 772.0,
        "org.jfree.data$DefaultKeyedValues2D#getRowKey(int)": 950.0,
        "org.jfree.data$DefaultKeyedValues2D#getRowKeys()": 1012.0,
        "org.jfree.data$DefaultKeyedValues2D#getValue(int,int)": 850.0,
        "org.jfree.data$DefaultKeyedValues2D#getValue(java.lang.Comparable,java.lang.Comparable)": 996.0,
        "org.jfree.data$DefaultKeyedValues2D#hashCode()": 1046.0,
        "org.jfree.data$DefaultKeyedValues2D#removeColumn(int)": 1046.0,
        "org.jfree.data$DefaultKeyedValues2D#removeColumn(java.lang.Comparable)": 1042.0,
        "org.jfree.data$DefaultKeyedValues2D#removeRow(int)": 1044.0,
        "org.jfree.data$DefaultKeyedValues2D#removeRow(java.lang.Comparable)": 1046.0,
        "org.jfree.data$DefaultKeyedValues2D#removeValue(java.lang.Comparable,java.lang.Comparable)": 1040.0,
        "org.jfree.data$DefaultKeyedValues2D#setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)": 772.0,
        "org.jfree.data$UnknownKeyException#UnknownKeyException(java.lang.String)": 1014.0,
        "org.jfree.data.category$DefaultCategoryDataset#DefaultCategoryDataset()": 849958.0,
        "org.jfree.data.category$DefaultCategoryDataset#addValue(double,java.lang.Comparable,java.lang.Comparable)": 920.0,
        "org.jfree.data.category$DefaultCategoryDataset#addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)": 840.0,
        "org.jfree.data.category$DefaultCategoryDataset#clear()": 1046.0,
        "org.jfree.data.category$DefaultCategoryDataset#clone()": 1042.0,
        "org.jfree.data.category$DefaultCategoryDataset#equals(java.lang.Object)": 1030.0,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnCount()": 860.0,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnIndex(java.lang.Comparable)": 1040.0,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnKey(int)": 1014.0,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnKeys()": 1030.0,
        "org.jfree.data.category$DefaultCategoryDataset#getRowCount()": 828.0,
        "org.jfree.data.category$DefaultCategoryDataset#getRowIndex(java.lang.Comparable)": 1046.0,
        "org.jfree.data.category$DefaultCategoryDataset#getRowKey(int)": 962.0,
        "org.jfree.data.category$DefaultCategoryDataset#getRowKeys()": 1028.0,
        "org.jfree.data.category$DefaultCategoryDataset#getValue(int,int)": 878.0,
        "org.jfree.data.category$DefaultCategoryDataset#getValue(java.lang.Comparable,java.lang.Comparable)": 1002.0,
        "org.jfree.data.category$DefaultCategoryDataset#hashCode()": 1046.0,
        "org.jfree.data.category$DefaultCategoryDataset#incrementValue(double,java.lang.Comparable,java.lang.Comparable)": 1044.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeColumn(int)": 1046.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeColumn(java.lang.Comparable)": 1044.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeRow(int)": 1046.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeRow(java.lang.Comparable)": 1046.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeValue(java.lang.Comparable,java.lang.Comparable)": 1044.0,
        "org.jfree.data.category$DefaultCategoryDataset#setValue(double,java.lang.Comparable,java.lang.Comparable)": 1028.0,
        "org.jfree.data.category$DefaultCategoryDataset#setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)": 1022.0,
        "org.jfree.data.general$AbstractDataset#AbstractDataset()": 313112.0,
        "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)": 566.0,
        "org.jfree.data.general$AbstractDataset#clone()": 976.0,
        "org.jfree.data.general$AbstractDataset#fireDatasetChanged()": 344.0,
        "org.jfree.data.general$AbstractDataset#getGroup()": 1042.0,
        "org.jfree.data.general$AbstractDataset#hasListener(java.util.EventListener)": 1092022.0,
        "org.jfree.data.general$AbstractDataset#notifyListeners(org.jfree.data.general.DatasetChangeEvent)": 262.0,
        "org.jfree.data.general$AbstractDataset#readObject(java.io.ObjectInputStream)": 926.0,
        "org.jfree.data.general$AbstractDataset#removeChangeListener(org.jfree.data.general.DatasetChangeListener)": 1006.0,
        "org.jfree.data.general$AbstractDataset#setGroup(org.jfree.data.general.DatasetGroup)": 1046.0,
        "org.jfree.data.general$AbstractDataset#validateObject()": 926.0,
        "org.jfree.data.general$AbstractDataset#writeObject(java.io.ObjectOutputStream)": 926.0,
        "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)": 112.0,
        "org.jfree.data.general$DatasetChangeEvent#getDataset()": 1046.0,
        "org.jfree.data.general$DatasetGroup#DatasetGroup()": 311992.0,
        "org.jfree.data.general$DatasetGroup#DatasetGroup(java.lang.String)": 1046.0,
        "org.jfree.data.general$DatasetGroup#clone()": 1046.0,
        "org.jfree.data.general$DatasetGroup#equals(java.lang.Object)": 1044.0,
        "org.jfree.data.general$DatasetGroup#getID()": 1046.0
    },
    "Chart-14": {
        "org.jfree.chart$ChartColor#<clinit>()": 906037.0,
        "org.jfree.chart$ChartColor#ChartColor(int,int,int)": 1211.0,
        "org.jfree.chart$ChartColor#createDefaultPaintArray()": 906037.0,
        "org.jfree.chart.axis$Axis#<clinit>()": 689.0,
        "org.jfree.chart.axis$Axis#Axis(java.lang.String)": 695.0,
        "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)": 847.0,
        "org.jfree.chart.axis$Axis#clone()": 1163.0,
        "org.jfree.chart.axis$Axis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1145.0,
        "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)": 1093.0,
        "org.jfree.chart.axis$Axis#equals(java.lang.Object)": 1039.0,
        "org.jfree.chart.axis$Axis#getAxisLinePaint()": 1099.0,
        "org.jfree.chart.axis$Axis#getAxisLineStroke()": 1099.0,
        "org.jfree.chart.axis$Axis#getFixedDimension()": 1093.0,
        "org.jfree.chart.axis$Axis#getLabel()": 1077.0,
        "org.jfree.chart.axis$Axis#getLabelAngle()": 1093.0,
        "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)": 1093.0,
        "org.jfree.chart.axis$Axis#getLabelFont()": 1093.0,
        "org.jfree.chart.axis$Axis#getLabelInsets()": 1093.0,
        "org.jfree.chart.axis$Axis#getLabelPaint()": 1093.0,
        "org.jfree.chart.axis$Axis#getLabelToolTip()": 1211.0,
        "org.jfree.chart.axis$Axis#getLabelURL()": 1211.0,
        "org.jfree.chart.axis$Axis#getPlot()": 779.0,
        "org.jfree.chart.axis$Axis#getTickLabelFont()": 1093.0,
        "org.jfree.chart.axis$Axis#getTickLabelInsets()": 1093.0,
        "org.jfree.chart.axis$Axis#getTickLabelPaint()": 1093.0,
        "org.jfree.chart.axis$Axis#getTickMarkInsideLength()": 1093.0,
        "org.jfree.chart.axis$Axis#getTickMarkOutsideLength()": 1093.0,
        "org.jfree.chart.axis$Axis#getTickMarkPaint()": 1097.0,
        "org.jfree.chart.axis$Axis#getTickMarkStroke()": 1097.0,
        "org.jfree.chart.axis$Axis#hasListener(java.util.EventListener)": 1207.0,
        "org.jfree.chart.axis$Axis#isAxisLineVisible()": 1093.0,
        "org.jfree.chart.axis$Axis#isTickLabelsVisible()": 1093.0,
        "org.jfree.chart.axis$Axis#isTickMarksVisible()": 1095.0,
        "org.jfree.chart.axis$Axis#isVisible()": 1093.0,
        "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)": 775.0,
        "org.jfree.chart.axis$Axis#readObject(java.io.ObjectInputStream)": 1147.0,
        "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)": 1171.0,
        "org.jfree.chart.axis$Axis#setAxisLinePaint(java.awt.Paint)": 1205.0,
        "org.jfree.chart.axis$Axis#setAxisLineStroke(java.awt.Stroke)": 1207.0,
        "org.jfree.chart.axis$Axis#setAxisLineVisible(boolean)": 1173.0,
        "org.jfree.chart.axis$Axis#setFixedDimension(double)": 1209.0,
        "org.jfree.chart.axis$Axis#setLabel(java.lang.String)": 1203.0,
        "org.jfree.chart.axis$Axis#setLabelAngle(double)": 1209.0,
        "org.jfree.chart.axis$Axis#setLabelFont(java.awt.Font)": 1209.0,
        "org.jfree.chart.axis$Axis#setLabelInsets(org.jfree.chart.util.RectangleInsets)": 1209.0,
        "org.jfree.chart.axis$Axis#setLabelPaint(java.awt.Paint)": 1209.0,
        "org.jfree.chart.axis$Axis#setLabelToolTip(java.lang.String)": 1209.0,
        "org.jfree.chart.axis$Axis#setLabelURL(java.lang.String)": 1209.0,
        "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)": 847.0,
        "org.jfree.chart.axis$Axis#setTickLabelFont(java.awt.Font)": 1209.0,
        "org.jfree.chart.axis$Axis#setTickLabelInsets(org.jfree.chart.util.RectangleInsets)": 1209.0,
        "org.jfree.chart.axis$Axis#setTickLabelPaint(java.awt.Paint)": 1209.0,
        "org.jfree.chart.axis$Axis#setTickLabelsVisible(boolean)": 1209.0,
        "org.jfree.chart.axis$Axis#setTickMarkInsideLength(float)": 1209.0,
        "org.jfree.chart.axis$Axis#setTickMarkOutsideLength(float)": 1209.0,
        "org.jfree.chart.axis$Axis#setTickMarkPaint(java.awt.Paint)": 1209.0,
        "org.jfree.chart.axis$Axis#setTickMarkStroke(java.awt.Stroke)": 1209.0,
        "org.jfree.chart.axis$Axis#setTickMarksVisible(boolean)": 981.0,
        "org.jfree.chart.axis$Axis#setVisible(boolean)": 1209.0,
        "org.jfree.chart.axis$Axis#writeObject(java.io.ObjectOutputStream)": 1147.0,
        "org.jfree.chart.axis$AxisLocation#<clinit>()": 1027991.0,
        "org.jfree.chart.axis$AxisLocation#AxisLocation(java.lang.String)": 1027991.0,
        "org.jfree.chart.axis$AxisLocation#equals(java.lang.Object)": 1157.0,
        "org.jfree.chart.axis$AxisLocation#getOpposite()": 1211.0,
        "org.jfree.chart.axis$AxisLocation#getOpposite(org.jfree.chart.axis.AxisLocation)": 1211.0,
        "org.jfree.chart.axis$AxisLocation#readResolve()": 1173.0,
        "org.jfree.chart.axis$AxisLocation#toString()": 1165.0,
        "org.jfree.chart.axis$CategoryAnchor#<clinit>()": 1201093.0,
        "org.jfree.chart.axis$CategoryAnchor#CategoryAnchor(java.lang.String)": 1201093.0,
        "org.jfree.chart.axis$CategoryAnchor#equals(java.lang.Object)": 1165.0,
        "org.jfree.chart.axis$CategoryAnchor#readResolve()": 1189.0,
        "org.jfree.chart.axis$CategoryAnchor#toString()": 1185.0,
        "org.jfree.chart.axis$CategoryAxis#CategoryAxis()": 1209.0,
        "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)": 981.0,
        "org.jfree.chart.axis$CategoryAxis#addCategoryLabelToolTip(java.lang.Comparable,java.lang.String)": 1201.0,
        "org.jfree.chart.axis$CategoryAxis#calculateCategoryGapSize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1147.0,
        "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1141.0,
        "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)": 1173.0,
        "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)": 1185.0,
        "org.jfree.chart.axis$CategoryAxis#clearCategoryLabelToolTips()": 1211.0,
        "org.jfree.chart.axis$CategoryAxis#clone()": 1193.0,
        "org.jfree.chart.axis$CategoryAxis#configure()": 1021.0,
        "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)": 1147.0,
        "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1145.0,
        "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)": 1139.0,
        "org.jfree.chart.axis$CategoryAxis#equalPaintMaps(java.util.Map,java.util.Map)": 1153.0,
        "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)": 1153.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1147.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1211.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelPositionOffset()": 1211.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelPositions()": 1211.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelToolTip(java.lang.Comparable)": 1191.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryMargin()": 1175.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1189.0,
        "org.jfree.chart.axis$CategoryAxis#getCategorySeriesMiddle(java.lang.Comparable,java.lang.Comparable,org.jfree.data.category.CategoryDataset,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1211.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1147.0,
        "org.jfree.chart.axis$CategoryAxis#getLowerMargin()": 1141.0,
        "org.jfree.chart.axis$CategoryAxis#getMaximumCategoryLabelLines()": 1211.0,
        "org.jfree.chart.axis$CategoryAxis#getMaximumCategoryLabelWidthRatio()": 1211.0,
        "org.jfree.chart.axis$CategoryAxis#getTickLabelFont(java.lang.Comparable)": 1147.0,
        "org.jfree.chart.axis$CategoryAxis#getTickLabelPaint(java.lang.Comparable)": 1147.0,
        "org.jfree.chart.axis$CategoryAxis#getUpperMargin()": 1141.0,
        "org.jfree.chart.axis$CategoryAxis#hashCode()": 1131.0,
        "org.jfree.chart.axis$CategoryAxis#readObject(java.io.ObjectInputStream)": 1189.0,
        "org.jfree.chart.axis$CategoryAxis#readPaintMap(java.io.ObjectInputStream)": 1189.0,
        "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1139.0,
        "org.jfree.chart.axis$CategoryAxis#removeCategoryLabelToolTip(java.lang.Comparable)": 1211.0,
        "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)": 1139.0,
        "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositionOffset(int)": 1207.0,
        "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositions(org.jfree.chart.axis.CategoryLabelPositions)": 1207.0,
        "org.jfree.chart.axis$CategoryAxis#setCategoryMargin(double)": 1193.0,
        "org.jfree.chart.axis$CategoryAxis#setLowerMargin(double)": 1207.0,
        "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelLines(int)": 1211.0,
        "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelWidthRatio(float)": 1207.0,
        "org.jfree.chart.axis$CategoryAxis#setTickLabelFont(java.lang.Comparable,java.awt.Font)": 1201.0,
        "org.jfree.chart.axis$CategoryAxis#setTickLabelPaint(java.lang.Comparable,java.awt.Paint)": 1197.0,
        "org.jfree.chart.axis$CategoryAxis#setUpperMargin(double)": 1207.0,
        "org.jfree.chart.axis$CategoryAxis#writeObject(java.io.ObjectOutputStream)": 1189.0,
        "org.jfree.chart.axis$CategoryAxis#writePaintMap(java.util.Map,java.io.ObjectOutputStream)": 1189.0,
        "org.jfree.chart.axis$DateAxis#<clinit>()": 1143.0,
        "org.jfree.chart.axis$DateAxis#DateAxis()": 1209.0,
        "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)": 1143.0,
        "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone)": 1143.0,
        "org.jfree.chart.axis$DateAxis#autoAdjustRange()": 1143.0,
        "org.jfree.chart.axis$DateAxis#calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)": 1205.0,
        "org.jfree.chart.axis$DateAxis#calculateHighestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)": 1211.0,
        "org.jfree.chart.axis$DateAxis#calculateLowestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)": 1203.0,
        "org.jfree.chart.axis$DateAxis#clone()": 1209.0,
        "org.jfree.chart.axis$DateAxis#configure()": 1185.0,
        "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits()": 1211.0,
        "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone)": 1143.0,
        "org.jfree.chart.axis$DateAxis#dateToJava2D(java.util.Date,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1211.0,
        "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1203.0,
        "org.jfree.chart.axis$DateAxis#equals(java.lang.Object)": 1197.0,
        "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)": 1211.0,
        "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)": 1203.0,
        "org.jfree.chart.axis$DateAxis#getDateFormatOverride()": 1203.0,
        "org.jfree.chart.axis$DateAxis#getMaximumDate()": 1199.0,
        "org.jfree.chart.axis$DateAxis#getMinimumDate()": 1199.0,
        "org.jfree.chart.axis$DateAxis#getTickMarkPosition()": 1211.0,
        "org.jfree.chart.axis$DateAxis#getTickUnit()": 1203.0,
        "org.jfree.chart.axis$DateAxis#getTimeZone()": 1211.0,
        "org.jfree.chart.axis$DateAxis#getTimeline()": 1211.0,
        "org.jfree.chart.axis$DateAxis#hashCode()": 1201.0,
        "org.jfree.chart.axis$DateAxis#isHiddenValue(long)": 1203.0,
        "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1209.0,
        "org.jfree.chart.axis$DateAxis#nextStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)": 1203.0,
        "org.jfree.chart.axis$DateAxis#previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)": 1179.0,
        "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1203.0,
        "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1203.0,
        "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1211.0,
        "org.jfree.chart.axis$DateAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1203.0,
        "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1203.0,
        "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1211.0,
        "org.jfree.chart.axis$DateAxis#setDateFormatOverride(java.text.DateFormat)": 1209.0,
        "org.jfree.chart.axis$DateAxis#setMaximumDate(java.util.Date)": 1207.0,
        "org.jfree.chart.axis$DateAxis#setMinimumDate(java.util.Date)": 1207.0,
        "org.jfree.chart.axis$DateAxis#setRange(double,double)": 1209.0,
        "org.jfree.chart.axis$DateAxis#setRange(java.util.Date,java.util.Date)": 1183.0,
        "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)": 1181.0,
        "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)": 1143.0,
        "org.jfree.chart.axis$DateAxis#setTickMarkPosition(org.jfree.chart.axis.DateTickMarkPosition)": 1185.0,
        "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit)": 1185.0,
        "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)": 1143.0,
        "org.jfree.chart.axis$DateAxis#setTimeZone(java.util.TimeZone)": 1211.0,
        "org.jfree.chart.axis$DateAxis#setTimeline(org.jfree.chart.axis.Timeline)": 1209.0,
        "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1203.0,
        "org.jfree.chart.axis$DateAxis#zoomRange(double,double)": 1211.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#DateAxis$DefaultTimeline()": 1143.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainRange(java.util.Date,java.util.Date)": 1211.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainRange(long,long)": 1211.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainValue(java.util.Date)": 1203.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainValue(long)": 1211.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#equals(java.lang.Object)": 1205.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#toMillisecond(long)": 1183.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#toTimelineValue(java.util.Date)": 1201.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#toTimelineValue(long)": 1185.0,
        "org.jfree.chart.axis$NumberAxis#<clinit>()": 805.0,
        "org.jfree.chart.axis$NumberAxis#NumberAxis()": 1203.0,
        "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)": 811.0,
        "org.jfree.chart.axis$NumberAxis#autoAdjustRange()": 849.0,
        "org.jfree.chart.axis$NumberAxis#calculateHighestVisibleTickValue()": 1211.0,
        "org.jfree.chart.axis$NumberAxis#calculateLowestVisibleTickValue()": 1097.0,
        "org.jfree.chart.axis$NumberAxis#calculateVisibleTickCount()": 1097.0,
        "org.jfree.chart.axis$NumberAxis#clone()": 1185.0,
        "org.jfree.chart.axis$NumberAxis#configure()": 861.0,
        "org.jfree.chart.axis$NumberAxis#createIntegerTickUnits()": 1177.0,
        "org.jfree.chart.axis$NumberAxis#createIntegerTickUnits(java.util.Locale)": 1211.0,
        "org.jfree.chart.axis$NumberAxis#createStandardTickUnits()": 811.0,
        "org.jfree.chart.axis$NumberAxis#createStandardTickUnits(java.util.Locale)": 1211.0,
        "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1103.0,
        "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)": 1103.0,
        "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)": 1121.0,
        "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)": 1145.0,
        "org.jfree.chart.axis$NumberAxis#getAutoRangeIncludesZero()": 861.0,
        "org.jfree.chart.axis$NumberAxis#getAutoRangeStickyZero()": 861.0,
        "org.jfree.chart.axis$NumberAxis#getMarkerBand()": 1211.0,
        "org.jfree.chart.axis$NumberAxis#getNumberFormatOverride()": 1101.0,
        "org.jfree.chart.axis$NumberAxis#getRangeType()": 1211.0,
        "org.jfree.chart.axis$NumberAxis#getTickUnit()": 1097.0,
        "org.jfree.chart.axis$NumberAxis#hashCode()": 1095.0,
        "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1209.0,
        "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1097.0,
        "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1145.0,
        "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1121.0,
        "org.jfree.chart.axis$NumberAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1097.0,
        "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1145.0,
        "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1121.0,
        "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)": 1115.0,
        "org.jfree.chart.axis$NumberAxis#setAutoRangeStickyZero(boolean)": 1203.0,
        "org.jfree.chart.axis$NumberAxis#setMarkerBand(org.jfree.chart.axis.MarkerAxisBand)": 1211.0,
        "org.jfree.chart.axis$NumberAxis#setNumberFormatOverride(java.text.NumberFormat)": 1209.0,
        "org.jfree.chart.axis$NumberAxis#setRangeType(org.jfree.data.RangeType)": 1209.0,
        "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit)": 1209.0,
        "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)": 1095.0,
        "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1097.0,
        "org.jfree.chart.axis$ValueAxis#<clinit>()": 731.0,
        "org.jfree.chart.axis$ValueAxis#ValueAxis(java.lang.String,org.jfree.chart.axis.TickUnitSource)": 737.0,
        "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1097.0,
        "org.jfree.chart.axis$ValueAxis#centerRange(double)": 1211.0,
        "org.jfree.chart.axis$ValueAxis#clone()": 1179.0,
        "org.jfree.chart.axis$ValueAxis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1099.0,
        "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1093.0,
        "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)": 1079.0,
        "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 1137.0,
        "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 1121.0,
        "org.jfree.chart.axis$ValueAxis#getAutoRangeMinimumSize()": 849.0,
        "org.jfree.chart.axis$ValueAxis#getAutoTickIndex()": 1211.0,
        "org.jfree.chart.axis$ValueAxis#getDefaultAutoRange()": 1119.0,
        "org.jfree.chart.axis$ValueAxis#getDownArrow()": 1211.0,
        "org.jfree.chart.axis$ValueAxis#getFixedAutoRange()": 849.0,
        "org.jfree.chart.axis$ValueAxis#getLeftArrow()": 1211.0,
        "org.jfree.chart.axis$ValueAxis#getLowerBound()": 1121.0,
        "org.jfree.chart.axis$ValueAxis#getLowerMargin()": 849.0,
        "org.jfree.chart.axis$ValueAxis#getRange()": 1023.0,
        "org.jfree.chart.axis$ValueAxis#getRightArrow()": 1211.0,
        "org.jfree.chart.axis$ValueAxis#getStandardTickUnits()": 1093.0,
        "org.jfree.chart.axis$ValueAxis#getUpArrow()": 1211.0,
        "org.jfree.chart.axis$ValueAxis#getUpperBound()": 1121.0,
        "org.jfree.chart.axis$ValueAxis#getUpperMargin()": 849.0,
        "org.jfree.chart.axis$ValueAxis#isAutoRange()": 821.0,
        "org.jfree.chart.axis$ValueAxis#isAutoTickUnitSelection()": 1093.0,
        "org.jfree.chart.axis$ValueAxis#isInverted()": 1083.0,
        "org.jfree.chart.axis$ValueAxis#isNegativeArrowVisible()": 1211.0,
        "org.jfree.chart.axis$ValueAxis#isPositiveArrowVisible()": 1211.0,
        "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()": 1093.0,
        "org.jfree.chart.axis$ValueAxis#lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1097.0,
        "org.jfree.chart.axis$ValueAxis#readObject(java.io.ObjectInputStream)": 1155.0,
        "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)": 1093.0,
        "org.jfree.chart.axis$ValueAxis#resizeRange(double)": 1211.0,
        "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)": 1211.0,
        "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean)": 1201.0,
        "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean,boolean)": 1201.0,
        "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double)": 1141.0,
        "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double,boolean)": 1141.0,
        "org.jfree.chart.axis$ValueAxis#setAutoTickIndex(int)": 1211.0,
        "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean)": 1209.0,
        "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean,boolean)": 1175.0,
        "org.jfree.chart.axis$ValueAxis#setDefaultAutoRange(org.jfree.data.Range)": 1189.0,
        "org.jfree.chart.axis$ValueAxis#setDownArrow(java.awt.Shape)": 1211.0,
        "org.jfree.chart.axis$ValueAxis#setFixedAutoRange(double)": 1201.0,
        "org.jfree.chart.axis$ValueAxis#setInverted(boolean)": 1203.0,
        "org.jfree.chart.axis$ValueAxis#setLeftArrow(java.awt.Shape)": 1211.0,
        "org.jfree.chart.axis$ValueAxis#setLowerBound(double)": 1197.0,
        "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)": 1179.0,
        "org.jfree.chart.axis$ValueAxis#setNegativeArrowVisible(boolean)": 1209.0,
        "org.jfree.chart.axis$ValueAxis#setPositiveArrowVisible(boolean)": 1209.0,
        "org.jfree.chart.axis$ValueAxis#setRange(double,double)": 1189.0,
        "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)": 1181.0,
        "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)": 787.0,
        "org.jfree.chart.axis$ValueAxis#setRangeAboutValue(double,double)": 1211.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(double,double)": 1211.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range)": 1211.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range,boolean,boolean)": 1211.0,
        "org.jfree.chart.axis$ValueAxis#setRightArrow(java.awt.Shape)": 1211.0,
        "org.jfree.chart.axis$ValueAxis#setStandardTickUnits(org.jfree.chart.axis.TickUnitSource)": 1183.0,
        "org.jfree.chart.axis$ValueAxis#setUpArrow(java.awt.Shape)": 1211.0,
        "org.jfree.chart.axis$ValueAxis#setUpperBound(double)": 1201.0,
        "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)": 1179.0,
        "org.jfree.chart.axis$ValueAxis#setVerticalTickLabels(boolean)": 1209.0,
        "org.jfree.chart.axis$ValueAxis#writeObject(java.io.ObjectOutputStream)": 1155.0,
        "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)": 1211.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)": 495101.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart)": 1211.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart,org.jfree.chart.event.ChartChangeEventType)": 495101.0,
        "org.jfree.chart.event$ChartChangeEvent#getChart()": 1211.0,
        "org.jfree.chart.event$ChartChangeEvent#getType()": 1211.0,
        "org.jfree.chart.event$ChartChangeEvent#setChart(org.jfree.chart.JFreeChart)": 1061.0,
        "org.jfree.chart.event$ChartChangeEvent#setType(org.jfree.chart.event.ChartChangeEventType)": 1023937.0,
        "org.jfree.chart.event$ChartChangeEventType#<clinit>()": 495101.0,
        "org.jfree.chart.event$ChartChangeEventType#ChartChangeEventType(java.lang.String)": 495101.0,
        "org.jfree.chart.event$ChartChangeEventType#equals(java.lang.Object)": 1211.0,
        "org.jfree.chart.event$ChartChangeEventType#hashCode()": 1211.0,
        "org.jfree.chart.event$ChartChangeEventType#readResolve()": 1211.0,
        "org.jfree.chart.event$ChartChangeEventType#toString()": 1211.0,
        "org.jfree.chart.event$MarkerChangeEvent#MarkerChangeEvent(org.jfree.chart.plot.Marker)": 1399453.0,
        "org.jfree.chart.event$MarkerChangeEvent#getMarker()": 1177.0,
        "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)": 934837.0,
        "org.jfree.chart.event$PlotChangeEvent#getPlot()": 1211.0,
        "org.jfree.chart.plot$CategoryMarker#CategoryMarker(java.lang.Comparable)": 1464091.0,
        "org.jfree.chart.plot$CategoryMarker#CategoryMarker(java.lang.Comparable,java.awt.Paint,java.awt.Stroke)": 1459253.0,
        "org.jfree.chart.plot$CategoryMarker#CategoryMarker(java.lang.Comparable,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)": 1459253.0,
        "org.jfree.chart.plot$CategoryMarker#equals(java.lang.Object)": 1201.0,
        "org.jfree.chart.plot$CategoryMarker#getDrawAsLine()": 1209.0,
        "org.jfree.chart.plot$CategoryMarker#getKey()": 1209.0,
        "org.jfree.chart.plot$CategoryMarker#setDrawAsLine(boolean)": 1209.0,
        "org.jfree.chart.plot$CategoryMarker#setKey(java.lang.Comparable)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#<clinit>()": 1231991.0,
        "org.jfree.chart.plot$CategoryPlot#CategoryPlot()": 1454423.0,
        "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)": 1231991.0,
        "org.jfree.chart.plot$CategoryPlot#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation,boolean)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)": 1207.0,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer,boolean)": 1207.0,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker)": 1207.0,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)": 1207.0,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1231991.0,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 1231991.0,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker)": 1207.0,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1231991.0,
        "org.jfree.chart.plot$CategoryPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#clearAnnotations()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#clearDomainAxes()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers()": 1207.0,
        "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers(int)": 1207.0,
        "org.jfree.chart.plot$CategoryPlot#clearRangeAxes()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers()": 1201.0,
        "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers(int)": 1201.0,
        "org.jfree.chart.plot$CategoryPlot#clone()": 1205.0,
        "org.jfree.chart.plot$CategoryPlot#configureDomainAxes()": 1231991.0,
        "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()": 1231991.0,
        "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 1231991.0,
        "org.jfree.chart.plot$CategoryPlot#datasetsMappedToDomainAxis(int)": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#datasetsMappedToRangeAxis(int)": 1015.0,
        "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1145.0,
        "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)": 1149.0,
        "org.jfree.chart.plot$CategoryPlot#getAnchorValue()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#getAnnotations()": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#getAxisOffset()": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#getCategories()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#getColumnRenderingOrder()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 1015.0,
        "org.jfree.chart.plot$CategoryPlot#getDataset()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#getDataset(int)": 1231991.0,
        "org.jfree.chart.plot$CategoryPlot#getDatasetCount()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#getDatasetRenderingOrder()": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxis()": 1131.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxis(int)": 1129.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisCount()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge()": 1149.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisForDataset(int)": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisIndex(org.jfree.chart.axis.CategoryAxis)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation()": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation(int)": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlinePaint()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlinePosition()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlineStroke()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(org.jfree.chart.util.Layer)": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#getDrawSharedDomainAxis()": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#getFixedDomainAxisSpace()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#getFixedLegendItems()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#getFixedRangeAxisSpace()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#getIndexOf(org.jfree.chart.renderer.category.CategoryItemRenderer)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#getLegendItems()": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#getOrientation()": 1123.0,
        "org.jfree.chart.plot$CategoryPlot#getPlotType()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxis()": 1091.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)": 1231991.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisCount()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisForDataset(int)": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation(int)": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairPaint()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairStroke()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairValue()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeGridlinePaint()": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeGridlineStroke()": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(org.jfree.chart.util.Layer)": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#getRenderer()": 1097.0,
        "org.jfree.chart.plot$CategoryPlot#getRenderer(int)": 1095.0,
        "org.jfree.chart.plot$CategoryPlot#getRendererForDataset(org.jfree.data.category.CategoryDataset)": 1037.0,
        "org.jfree.chart.plot$CategoryPlot#getRowRenderingOrder()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#getWeight()": 1207.0,
        "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#isDomainGridlinesVisible()": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#isDomainZoomable()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeCrosshairLockedOnData()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeCrosshairVisible()": 1137.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeGridlinesVisible()": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeZoomable()": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxis(int,int)": 1231991.0,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxis(int,int)": 1231991.0,
        "org.jfree.chart.plot$CategoryPlot#readObject(java.io.ObjectInputStream)": 1195.0,
        "org.jfree.chart.plot$CategoryPlot#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation,boolean)": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1476221.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 1476221.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker)": 1476221.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1476221.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1476221.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 1476221.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker)": 1476221.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1476221.0,
        "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo)": 1139.0,
        "org.jfree.chart.plot$CategoryPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)": 1163.0,
        "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double,boolean)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setColumnRenderingOrder(org.jfree.chart.util.SortOrder)": 1193.0,
        "org.jfree.chart.plot$CategoryPlot#setDataset(int,org.jfree.data.category.CategoryDataset)": 1167.0,
        "org.jfree.chart.plot$CategoryPlot#setDataset(org.jfree.data.category.CategoryDataset)": 1183.0,
        "org.jfree.chart.plot$CategoryPlot#setDatasetRenderingOrder(org.jfree.chart.plot.DatasetRenderingOrder)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxes(org.jfree.chart.axis.CategoryAxis[])": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis)": 1195.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)": 1195.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(org.jfree.chart.axis.CategoryAxis)": 1199.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 1231991.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 1231991.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePaint(java.awt.Paint)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePosition(org.jfree.chart.axis.CategoryAnchor)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlineStroke(java.awt.Stroke)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinesVisible(boolean)": 1197.0,
        "org.jfree.chart.plot$CategoryPlot#setDrawSharedDomainAxis(boolean)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setFixedLegendItems(org.jfree.chart.LegendItemCollection)": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)": 1083.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)": 1189.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)": 1189.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)": 1195.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 1231991.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 1231991.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairLockedOnData(boolean)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairPaint(java.awt.Paint)": 1207.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairStroke(java.awt.Stroke)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double,boolean)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairVisible(boolean)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlinePaint(java.awt.Paint)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlineStroke(java.awt.Stroke)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlinesVisible(boolean)": 1209.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer)": 1203.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)": 1199.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)": 1205.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderers(org.jfree.chart.renderer.category.CategoryItemRenderer[])": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#setRowRenderingOrder(org.jfree.chart.util.SortOrder)": 1201.0,
        "org.jfree.chart.plot$CategoryPlot#setWeight(int)": 1193.0,
        "org.jfree.chart.plot$CategoryPlot#writeObject(java.io.ObjectOutputStream)": 1195.0,
        "org.jfree.chart.plot$CategoryPlot#zoom(double)": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1211.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 1211.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#<clinit>()": 1042243.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#DatasetRenderingOrder(java.lang.String)": 1042243.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#equals(java.lang.Object)": 1177.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#hashCode()": 1211.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#readResolve()": 1177.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#toString()": 1177.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()": 906037.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier()": 906037.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])": 906037.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])": 1207.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#clone()": 1159.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#createStandardSeriesShapes()": 906037.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#equalShapes(java.awt.Shape[],java.awt.Shape[])": 1053.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)": 1053.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextFillPaint()": 1209.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlinePaint()": 1207.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlineStroke()": 1209.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextPaint()": 1065.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextShape()": 1167.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextStroke()": 1209.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double)": 906037.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double,double)": 906037.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#readObject(java.io.ObjectInputStream)": 1145.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#writeObject(java.io.ObjectOutputStream)": 1145.0,
        "org.jfree.chart.plot$IntervalMarker#IntervalMarker(double,double)": 1197.0,
        "org.jfree.chart.plot$IntervalMarker#IntervalMarker(double,double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)": 1197.0,
        "org.jfree.chart.plot$IntervalMarker#clone()": 1209.0,
        "org.jfree.chart.plot$IntervalMarker#equals(java.lang.Object)": 1197.0,
        "org.jfree.chart.plot$IntervalMarker#getEndValue()": 1205.0,
        "org.jfree.chart.plot$IntervalMarker#getGradientPaintTransformer()": 1211.0,
        "org.jfree.chart.plot$IntervalMarker#getStartValue()": 1205.0,
        "org.jfree.chart.plot$IntervalMarker#setEndValue(double)": 1209.0,
        "org.jfree.chart.plot$IntervalMarker#setGradientPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)": 1209.0,
        "org.jfree.chart.plot$IntervalMarker#setStartValue(double)": 1209.0,
        "org.jfree.chart.plot$Marker#Marker()": 1406563.0,
        "org.jfree.chart.plot$Marker#Marker(java.awt.Paint)": 1406563.0,
        "org.jfree.chart.plot$Marker#Marker(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)": 1159787.0,
        "org.jfree.chart.plot$Marker#addChangeListener(org.jfree.chart.event.MarkerChangeListener)": 1183613.0,
        "org.jfree.chart.plot$Marker#clone()": 1205.0,
        "org.jfree.chart.plot$Marker#equals(java.lang.Object)": 1163.0,
        "org.jfree.chart.plot$Marker#getAlpha()": 1145.0,
        "org.jfree.chart.plot$Marker#getLabel()": 1143.0,
        "org.jfree.chart.plot$Marker#getLabelAnchor()": 1143.0,
        "org.jfree.chart.plot$Marker#getLabelFont()": 1209.0,
        "org.jfree.chart.plot$Marker#getLabelOffset()": 1209.0,
        "org.jfree.chart.plot$Marker#getLabelOffsetType()": 1209.0,
        "org.jfree.chart.plot$Marker#getLabelPaint()": 1209.0,
        "org.jfree.chart.plot$Marker#getLabelTextAnchor()": 1209.0,
        "org.jfree.chart.plot$Marker#getListeners(java.lang.Class)": 1199.0,
        "org.jfree.chart.plot$Marker#getOutlinePaint()": 1201.0,
        "org.jfree.chart.plot$Marker#getOutlineStroke()": 1207.0,
        "org.jfree.chart.plot$Marker#getPaint()": 1139.0,
        "org.jfree.chart.plot$Marker#getStroke()": 1145.0,
        "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)": 1399453.0,
        "org.jfree.chart.plot$Marker#readObject(java.io.ObjectInputStream)": 1185.0,
        "org.jfree.chart.plot$Marker#removeChangeListener(org.jfree.chart.event.MarkerChangeListener)": 1193.0,
        "org.jfree.chart.plot$Marker#setAlpha(float)": 1207.0,
        "org.jfree.chart.plot$Marker#setLabel(java.lang.String)": 1207.0,
        "org.jfree.chart.plot$Marker#setLabelAnchor(org.jfree.chart.util.RectangleAnchor)": 1207.0,
        "org.jfree.chart.plot$Marker#setLabelFont(java.awt.Font)": 1207.0,
        "org.jfree.chart.plot$Marker#setLabelOffset(org.jfree.chart.util.RectangleInsets)": 1207.0,
        "org.jfree.chart.plot$Marker#setLabelOffsetType(org.jfree.chart.util.LengthAdjustmentType)": 1437581.0,
        "org.jfree.chart.plot$Marker#setLabelPaint(java.awt.Paint)": 1207.0,
        "org.jfree.chart.plot$Marker#setLabelTextAnchor(org.jfree.chart.text.TextAnchor)": 1207.0,
        "org.jfree.chart.plot$Marker#setOutlinePaint(java.awt.Paint)": 1207.0,
        "org.jfree.chart.plot$Marker#setOutlineStroke(java.awt.Stroke)": 1207.0,
        "org.jfree.chart.plot$Marker#setPaint(java.awt.Paint)": 1201.0,
        "org.jfree.chart.plot$Marker#setStroke(java.awt.Stroke)": 1207.0,
        "org.jfree.chart.plot$Marker#writeObject(java.io.ObjectOutputStream)": 1185.0,
        "org.jfree.chart.plot$Plot#<clinit>()": 911761.0,
        "org.jfree.chart.plot$Plot#Plot()": 911761.0,
        "org.jfree.chart.plot$Plot#addChangeListener(org.jfree.chart.event.PlotChangeListener)": 845.0,
        "org.jfree.chart.plot$Plot#axisChanged(org.jfree.chart.event.AxisChangeEvent)": 1187.0,
        "org.jfree.chart.plot$Plot#clone()": 1161.0,
        "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 1193.0,
        "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1201.0,
        "org.jfree.chart.plot$Plot#drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1091.0,
        "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1189.0,
        "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1091.0,
        "org.jfree.chart.plot$Plot#equals(java.lang.Object)": 1059.0,
        "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1201.0,
        "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)": 1091.0,
        "org.jfree.chart.plot$Plot#fireChangeEvent()": 997781.0,
        "org.jfree.chart.plot$Plot#getBackgroundAlpha()": 1205.0,
        "org.jfree.chart.plot$Plot#getBackgroundImage()": 1205.0,
        "org.jfree.chart.plot$Plot#getBackgroundImageAlignment()": 1211.0,
        "org.jfree.chart.plot$Plot#getBackgroundImageAlpha()": 1211.0,
        "org.jfree.chart.plot$Plot#getBackgroundPaint()": 1205.0,
        "org.jfree.chart.plot$Plot#getDatasetGroup()": 1211.0,
        "org.jfree.chart.plot$Plot#getDrawingSupplier()": 1063.0,
        "org.jfree.chart.plot$Plot#getForegroundAlpha()": 1085.0,
        "org.jfree.chart.plot$Plot#getInsets()": 1083.0,
        "org.jfree.chart.plot$Plot#getLegendItems()": 1209.0,
        "org.jfree.chart.plot$Plot#getNoDataMessage()": 1211.0,
        "org.jfree.chart.plot$Plot#getNoDataMessageFont()": 1211.0,
        "org.jfree.chart.plot$Plot#getNoDataMessagePaint()": 1211.0,
        "org.jfree.chart.plot$Plot#getOutlinePaint()": 1205.0,
        "org.jfree.chart.plot$Plot#getOutlineStroke()": 1205.0,
        "org.jfree.chart.plot$Plot#getParent()": 1034087.0,
        "org.jfree.chart.plot$Plot#getRectX(double,double,double,org.jfree.chart.util.RectangleEdge)": 1211.0,
        "org.jfree.chart.plot$Plot#getRectY(double,double,double,org.jfree.chart.util.RectangleEdge)": 1211.0,
        "org.jfree.chart.plot$Plot#getRootPlot()": 1211.0,
        "org.jfree.chart.plot$Plot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 1211.0,
        "org.jfree.chart.plot$Plot#isOutlineVisible()": 1211.0,
        "org.jfree.chart.plot$Plot#isSubplot()": 1211.0,
        "org.jfree.chart.plot$Plot#markerChanged(org.jfree.chart.event.MarkerChangeEvent)": 1211.0,
        "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)": 934837.0,
        "org.jfree.chart.plot$Plot#readObject(java.io.ObjectInputStream)": 1147.0,
        "org.jfree.chart.plot$Plot#removeChangeListener(org.jfree.chart.event.PlotChangeListener)": 1203.0,
        "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)": 1095.0,
        "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)": 1095.0,
        "org.jfree.chart.plot$Plot#setBackgroundAlpha(float)": 1209.0,
        "org.jfree.chart.plot$Plot#setBackgroundImage(java.awt.Image)": 1209.0,
        "org.jfree.chart.plot$Plot#setBackgroundImageAlignment(int)": 1209.0,
        "org.jfree.chart.plot$Plot#setBackgroundImageAlpha(float)": 1209.0,
        "org.jfree.chart.plot$Plot#setBackgroundPaint(java.awt.Paint)": 1201.0,
        "org.jfree.chart.plot$Plot#setDatasetGroup(org.jfree.data.general.DatasetGroup)": 1207.0,
        "org.jfree.chart.plot$Plot#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)": 1209.0,
        "org.jfree.chart.plot$Plot#setForegroundAlpha(float)": 1195.0,
        "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)": 1149.0,
        "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets,boolean)": 1141.0,
        "org.jfree.chart.plot$Plot#setNoDataMessage(java.lang.String)": 1209.0,
        "org.jfree.chart.plot$Plot#setNoDataMessageFont(java.awt.Font)": 1209.0,
        "org.jfree.chart.plot$Plot#setNoDataMessagePaint(java.awt.Paint)": 1209.0,
        "org.jfree.chart.plot$Plot#setOutlinePaint(java.awt.Paint)": 1209.0,
        "org.jfree.chart.plot$Plot#setOutlineStroke(java.awt.Stroke)": 1209.0,
        "org.jfree.chart.plot$Plot#setOutlineVisible(boolean)": 1209.0,
        "org.jfree.chart.plot$Plot#setParent(org.jfree.chart.plot.Plot)": 1179.0,
        "org.jfree.chart.plot$Plot#writeObject(java.io.ObjectOutputStream)": 1147.0,
        "org.jfree.chart.plot$Plot#zoom(double)": 1211.0,
        "org.jfree.chart.plot$PlotOrientation#<clinit>()": 1023937.0,
        "org.jfree.chart.plot$PlotOrientation#PlotOrientation(java.lang.String)": 1023937.0,
        "org.jfree.chart.plot$PlotOrientation#equals(java.lang.Object)": 1173.0,
        "org.jfree.chart.plot$PlotOrientation#hashCode()": 1211.0,
        "org.jfree.chart.plot$PlotOrientation#readResolve()": 1175.0,
        "org.jfree.chart.plot$PlotOrientation#toString()": 1173.0,
        "org.jfree.chart.plot$SeriesRenderingOrder#<clinit>()": 1267783.0,
        "org.jfree.chart.plot$SeriesRenderingOrder#SeriesRenderingOrder(java.lang.String)": 1267783.0,
        "org.jfree.chart.plot$SeriesRenderingOrder#equals(java.lang.Object)": 1193.0,
        "org.jfree.chart.plot$SeriesRenderingOrder#hashCode()": 1211.0,
        "org.jfree.chart.plot$SeriesRenderingOrder#readResolve()": 1193.0,
        "org.jfree.chart.plot$SeriesRenderingOrder#toString()": 1193.0,
        "org.jfree.chart.plot$ValueMarker#ValueMarker(double)": 1406563.0,
        "org.jfree.chart.plot$ValueMarker#ValueMarker(double,java.awt.Paint,java.awt.Stroke)": 1211.0,
        "org.jfree.chart.plot$ValueMarker#ValueMarker(double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)": 1229771.0,
        "org.jfree.chart.plot$ValueMarker#equals(java.lang.Object)": 1153.0,
        "org.jfree.chart.plot$ValueMarker#getValue()": 1133.0,
        "org.jfree.chart.plot$ValueMarker#setValue(double)": 1207.0,
        "org.jfree.chart.plot$XYPlot#<clinit>()": 1267783.0,
        "org.jfree.chart.plot$XYPlot#XYPlot()": 1432787.0,
        "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)": 1267783.0,
        "org.jfree.chart.plot$XYPlot#addAnnotation(org.jfree.chart.annotations.XYAnnotation)": 1195.0,
        "org.jfree.chart.plot$XYPlot#addAnnotation(org.jfree.chart.annotations.XYAnnotation,boolean)": 1195.0,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1205.0,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 1205.0,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(org.jfree.chart.plot.Marker)": 1207.0,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1205.0,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1203.0,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 1203.0,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(org.jfree.chart.plot.Marker)": 1205.0,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1203.0,
        "org.jfree.chart.plot$XYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1167.0,
        "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 1167.0,
        "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 1167.0,
        "org.jfree.chart.plot$XYPlot#clearAnnotations()": 1211.0,
        "org.jfree.chart.plot$XYPlot#clearDomainAxes()": 1211.0,
        "org.jfree.chart.plot$XYPlot#clearDomainMarkers()": 1207.0,
        "org.jfree.chart.plot$XYPlot#clearDomainMarkers(int)": 1207.0,
        "org.jfree.chart.plot$XYPlot#clearRangeAxes()": 1211.0,
        "org.jfree.chart.plot$XYPlot#clearRangeMarkers()": 1207.0,
        "org.jfree.chart.plot$XYPlot#clearRangeMarkers(int)": 1207.0,
        "org.jfree.chart.plot$XYPlot#clone()": 1197.0,
        "org.jfree.chart.plot$XYPlot#configureDomainAxes()": 1267783.0,
        "org.jfree.chart.plot$XYPlot#configureRangeAxes()": 1267783.0,
        "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 1267783.0,
        "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 1167.0,
        "org.jfree.chart.plot$XYPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 1167.0,
        "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 1167.0,
        "org.jfree.chart.plot$XYPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1167.0,
        "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)": 1211.0,
        "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 1167.0,
        "org.jfree.chart.plot$XYPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 1167.0,
        "org.jfree.chart.plot$XYPlot#drawDomainTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 1167.0,
        "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)": 1211.0,
        "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1167.0,
        "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)": 1211.0,
        "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 1167.0,
        "org.jfree.chart.plot$XYPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 1167.0,
        "org.jfree.chart.plot$XYPlot#drawRangeTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 1167.0,
        "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)": 1211.0,
        "org.jfree.chart.plot$XYPlot#drawZeroDomainBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1167.0,
        "org.jfree.chart.plot$XYPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1167.0,
        "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)": 1135.0,
        "org.jfree.chart.plot$XYPlot#getAnnotations()": 1209.0,
        "org.jfree.chart.plot$XYPlot#getAxisOffset()": 1211.0,
        "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 1065.0,
        "org.jfree.chart.plot$XYPlot#getDataset()": 1211.0,
        "org.jfree.chart.plot$XYPlot#getDataset(int)": 1267783.0,
        "org.jfree.chart.plot$XYPlot#getDatasetCount()": 1167.0,
        "org.jfree.chart.plot$XYPlot#getDatasetRenderingOrder()": 1167.0,
        "org.jfree.chart.plot$XYPlot#getDatasetsMappedToDomainAxis(java.lang.Integer)": 1073.0,
        "org.jfree.chart.plot$XYPlot#getDatasetsMappedToRangeAxis(java.lang.Integer)": 1069.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxis()": 1145.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxis(int)": 1141.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisCount()": 1211.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()": 1167.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)": 1167.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisForDataset(int)": 1169.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)": 1065.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisLocation()": 1167.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisLocation(int)": 1167.0,
        "org.jfree.chart.plot$XYPlot#getDomainCrosshairPaint()": 1211.0,
        "org.jfree.chart.plot$XYPlot#getDomainCrosshairStroke()": 1211.0,
        "org.jfree.chart.plot$XYPlot#getDomainCrosshairValue()": 1167.0,
        "org.jfree.chart.plot$XYPlot#getDomainGridlinePaint()": 1169.0,
        "org.jfree.chart.plot$XYPlot#getDomainGridlineStroke()": 1169.0,
        "org.jfree.chart.plot$XYPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)": 1169.0,
        "org.jfree.chart.plot$XYPlot#getDomainMarkers(org.jfree.chart.util.Layer)": 1211.0,
        "org.jfree.chart.plot$XYPlot#getDomainTickBandPaint()": 1167.0,
        "org.jfree.chart.plot$XYPlot#getDomainZeroBaselinePaint()": 1211.0,
        "org.jfree.chart.plot$XYPlot#getDomainZeroBaselineStroke()": 1211.0,
        "org.jfree.chart.plot$XYPlot#getFixedDomainAxisSpace()": 1211.0,
        "org.jfree.chart.plot$XYPlot#getFixedLegendItems()": 1211.0,
        "org.jfree.chart.plot$XYPlot#getFixedRangeAxisSpace()": 1211.0,
        "org.jfree.chart.plot$XYPlot#getIndexOf(org.jfree.chart.renderer.xy.XYItemRenderer)": 1211.0,
        "org.jfree.chart.plot$XYPlot#getLegendItems()": 1167.0,
        "org.jfree.chart.plot$XYPlot#getOrientation()": 1165.0,
        "org.jfree.chart.plot$XYPlot#getPlotType()": 1211.0,
        "org.jfree.chart.plot$XYPlot#getQuadrantOrigin()": 1209.0,
        "org.jfree.chart.plot$XYPlot#getQuadrantPaint(int)": 1211.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxis()": 1125.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxis(int)": 1121.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisCount()": 1211.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()": 1167.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)": 1167.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisForDataset(int)": 1169.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)": 1065.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisLocation()": 1167.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisLocation(int)": 1167.0,
        "org.jfree.chart.plot$XYPlot#getRangeCrosshairPaint()": 1211.0,
        "org.jfree.chart.plot$XYPlot#getRangeCrosshairStroke()": 1211.0,
        "org.jfree.chart.plot$XYPlot#getRangeCrosshairValue()": 1167.0,
        "org.jfree.chart.plot$XYPlot#getRangeGridlinePaint()": 1169.0,
        "org.jfree.chart.plot$XYPlot#getRangeGridlineStroke()": 1169.0,
        "org.jfree.chart.plot$XYPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)": 1169.0,
        "org.jfree.chart.plot$XYPlot#getRangeMarkers(org.jfree.chart.util.Layer)": 1211.0,
        "org.jfree.chart.plot$XYPlot#getRangeTickBandPaint()": 1167.0,
        "org.jfree.chart.plot$XYPlot#getRangeZeroBaselinePaint()": 1211.0,
        "org.jfree.chart.plot$XYPlot#getRangeZeroBaselineStroke()": 1211.0,
        "org.jfree.chart.plot$XYPlot#getRenderer()": 1107.0,
        "org.jfree.chart.plot$XYPlot#getRenderer(int)": 1091.0,
        "org.jfree.chart.plot$XYPlot#getRendererForDataset(org.jfree.data.xy.XYDataset)": 1075.0,
        "org.jfree.chart.plot$XYPlot#getSeriesCount()": 1211.0,
        "org.jfree.chart.plot$XYPlot#getSeriesRenderingOrder()": 1177.0,
        "org.jfree.chart.plot$XYPlot#getWeight()": 1207.0,
        "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 1211.0,
        "org.jfree.chart.plot$XYPlot#indexOf(org.jfree.data.xy.XYDataset)": 1209.0,
        "org.jfree.chart.plot$XYPlot#isDomainCrosshairLockedOnData()": 1177.0,
        "org.jfree.chart.plot$XYPlot#isDomainCrosshairVisible()": 1167.0,
        "org.jfree.chart.plot$XYPlot#isDomainGridlinesVisible()": 1169.0,
        "org.jfree.chart.plot$XYPlot#isDomainZeroBaselineVisible()": 1167.0,
        "org.jfree.chart.plot$XYPlot#isDomainZoomable()": 1209.0,
        "org.jfree.chart.plot$XYPlot#isRangeCrosshairLockedOnData()": 1177.0,
        "org.jfree.chart.plot$XYPlot#isRangeCrosshairVisible()": 1165.0,
        "org.jfree.chart.plot$XYPlot#isRangeGridlinesVisible()": 1169.0,
        "org.jfree.chart.plot$XYPlot#isRangeZeroBaselineVisible()": 1167.0,
        "org.jfree.chart.plot$XYPlot#isRangeZoomable()": 1209.0,
        "org.jfree.chart.plot$XYPlot#mapDatasetToDomainAxis(int,int)": 1267783.0,
        "org.jfree.chart.plot$XYPlot#mapDatasetToRangeAxis(int,int)": 1267783.0,
        "org.jfree.chart.plot$XYPlot#readObject(java.io.ObjectInputStream)": 1193.0,
        "org.jfree.chart.plot$XYPlot#removeAnnotation(org.jfree.chart.annotations.XYAnnotation)": 1209.0,
        "org.jfree.chart.plot$XYPlot#removeAnnotation(org.jfree.chart.annotations.XYAnnotation,boolean)": 1209.0,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1476221.0,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 1476221.0,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(org.jfree.chart.plot.Marker)": 1476221.0,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1476221.0,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1476221.0,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 1476221.0,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(org.jfree.chart.plot.Marker)": 1476221.0,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1476221.0,
        "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)": 1167.0,
        "org.jfree.chart.plot$XYPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)": 1183.0,
        "org.jfree.chart.plot$XYPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)": 1209.0,
        "org.jfree.chart.plot$XYPlot#setDataset(int,org.jfree.data.xy.XYDataset)": 1173.0,
        "org.jfree.chart.plot$XYPlot#setDataset(org.jfree.data.xy.XYDataset)": 1197.0,
        "org.jfree.chart.plot$XYPlot#setDatasetRenderingOrder(org.jfree.chart.plot.DatasetRenderingOrder)": 1211.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxes(org.jfree.chart.axis.ValueAxis[])": 1211.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis)": 1197.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)": 1197.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxis(org.jfree.chart.axis.ValueAxis)": 1201.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 1207.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 1207.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation)": 1209.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 1211.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairLockedOnData(boolean)": 1211.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairPaint(java.awt.Paint)": 1211.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairStroke(java.awt.Stroke)": 1211.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double)": 1211.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double,boolean)": 1167.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairVisible(boolean)": 1199.0,
        "org.jfree.chart.plot$XYPlot#setDomainGridlinePaint(java.awt.Paint)": 1209.0,
        "org.jfree.chart.plot$XYPlot#setDomainGridlineStroke(java.awt.Stroke)": 1209.0,
        "org.jfree.chart.plot$XYPlot#setDomainGridlinesVisible(boolean)": 1209.0,
        "org.jfree.chart.plot$XYPlot#setDomainTickBandPaint(java.awt.Paint)": 1209.0,
        "org.jfree.chart.plot$XYPlot#setDomainZeroBaselinePaint(java.awt.Paint)": 1211.0,
        "org.jfree.chart.plot$XYPlot#setDomainZeroBaselineStroke(java.awt.Stroke)": 1211.0,
        "org.jfree.chart.plot$XYPlot#setDomainZeroBaselineVisible(boolean)": 1211.0,
        "org.jfree.chart.plot$XYPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace)": 1211.0,
        "org.jfree.chart.plot$XYPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 1211.0,
        "org.jfree.chart.plot$XYPlot#setFixedLegendItems(org.jfree.chart.LegendItemCollection)": 1211.0,
        "org.jfree.chart.plot$XYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)": 1211.0,
        "org.jfree.chart.plot$XYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 1211.0,
        "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)": 1123.0,
        "org.jfree.chart.plot$XYPlot#setQuadrantOrigin(java.awt.geom.Point2D)": 1207.0,
        "org.jfree.chart.plot$XYPlot#setQuadrantPaint(int,java.awt.Paint)": 1207.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])": 1211.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)": 1203.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)": 1203.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)": 1187.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 1207.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 1195.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation)": 1197.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 1211.0,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairLockedOnData(boolean)": 1209.0,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairPaint(java.awt.Paint)": 1209.0,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairStroke(java.awt.Stroke)": 1209.0,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double)": 1209.0,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double,boolean)": 1165.0,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairVisible(boolean)": 1197.0,
        "org.jfree.chart.plot$XYPlot#setRangeGridlinePaint(java.awt.Paint)": 1209.0,
        "org.jfree.chart.plot$XYPlot#setRangeGridlineStroke(java.awt.Stroke)": 1209.0,
        "org.jfree.chart.plot$XYPlot#setRangeGridlinesVisible(boolean)": 1209.0,
        "org.jfree.chart.plot$XYPlot#setRangeTickBandPaint(java.awt.Paint)": 1209.0,
        "org.jfree.chart.plot$XYPlot#setRangeZeroBaselinePaint(java.awt.Paint)": 1209.0,
        "org.jfree.chart.plot$XYPlot#setRangeZeroBaselineStroke(java.awt.Stroke)": 1209.0,
        "org.jfree.chart.plot$XYPlot#setRangeZeroBaselineVisible(boolean)": 1209.0,
        "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer)": 1139.0,
        "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)": 1139.0,
        "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)": 1151.0,
        "org.jfree.chart.plot$XYPlot#setRenderers(org.jfree.chart.renderer.xy.XYItemRenderer[])": 1211.0,
        "org.jfree.chart.plot$XYPlot#setSeriesRenderingOrder(org.jfree.chart.plot.SeriesRenderingOrder)": 1211.0,
        "org.jfree.chart.plot$XYPlot#setWeight(int)": 1193.0,
        "org.jfree.chart.plot$XYPlot#writeObject(java.io.ObjectOutputStream)": 1193.0,
        "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1211.0,
        "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1211.0,
        "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 1211.0,
        "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1211.0,
        "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1211.0,
        "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 1211.0,
        "org.jfree.chart.text$TextAnchor#<clinit>()": 496511.0,
        "org.jfree.chart.text$TextAnchor#TextAnchor(java.lang.String)": 496511.0,
        "org.jfree.chart.text$TextAnchor#equals(java.lang.Object)": 795.0,
        "org.jfree.chart.text$TextAnchor#hashCode()": 1197.0,
        "org.jfree.chart.text$TextAnchor#readResolve()": 1043.0,
        "org.jfree.chart.text$TextAnchor#toString()": 1211.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList()": 526583.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int)": 526583.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int,int)": 526583.0,
        "org.jfree.chart.util$AbstractObjectList#clear()": 1211.0,
        "org.jfree.chart.util$AbstractObjectList#clone()": 1067.0,
        "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)": 695.0,
        "org.jfree.chart.util$AbstractObjectList#get(int)": 966053.0,
        "org.jfree.chart.util$AbstractObjectList#hashCode()": 1117.0,
        "org.jfree.chart.util$AbstractObjectList#indexOf(java.lang.Object)": 869.0,
        "org.jfree.chart.util$AbstractObjectList#readObject(java.io.ObjectInputStream)": 1055.0,
        "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)": 960161.0,
        "org.jfree.chart.util$AbstractObjectList#size()": 625253.0,
        "org.jfree.chart.util$AbstractObjectList#writeObject(java.io.ObjectOutputStream)": 1055.0,
        "org.jfree.chart.util$Layer#<clinit>()": 1166261.0,
        "org.jfree.chart.util$Layer#Layer(java.lang.String)": 1166261.0,
        "org.jfree.chart.util$Layer#equals(java.lang.Object)": 1089.0,
        "org.jfree.chart.util$Layer#hashCode()": 1211.0,
        "org.jfree.chart.util$Layer#readResolve()": 1211.0,
        "org.jfree.chart.util$Layer#toString()": 1211.0,
        "org.jfree.chart.util$LengthAdjustmentType#<clinit>()": 1159787.0,
        "org.jfree.chart.util$LengthAdjustmentType#LengthAdjustmentType(java.lang.String)": 1159787.0,
        "org.jfree.chart.util$LengthAdjustmentType#equals(java.lang.Object)": 1163.0,
        "org.jfree.chart.util$LengthAdjustmentType#hashCode()": 1211.0,
        "org.jfree.chart.util$LengthAdjustmentType#readResolve()": 1185.0,
        "org.jfree.chart.util$LengthAdjustmentType#toString()": 1211.0,
        "org.jfree.chart.util$ObjectList#ObjectList()": 551573.0,
        "org.jfree.chart.util$ObjectList#ObjectList(int)": 1211.0,
        "org.jfree.chart.util$ObjectList#get(int)": 1019891.0,
        "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)": 869.0,
        "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)": 1017871.0,
        "org.jfree.chart.util$RectangleAnchor#<clinit>()": 927113.0,
        "org.jfree.chart.util$RectangleAnchor#RectangleAnchor(java.lang.String)": 927113.0,
        "org.jfree.chart.util$RectangleAnchor#coordinates(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleAnchor)": 1109.0,
        "org.jfree.chart.util$RectangleAnchor#createRectangle(org.jfree.chart.util.Size2D,double,double,org.jfree.chart.util.RectangleAnchor)": 1207.0,
        "org.jfree.chart.util$RectangleAnchor#equals(java.lang.Object)": 1121.0,
        "org.jfree.chart.util$RectangleAnchor#hashCode()": 1207.0,
        "org.jfree.chart.util$RectangleAnchor#readResolve()": 1157.0,
        "org.jfree.chart.util$RectangleAnchor#toString()": 1211.0,
        "org.jfree.chart.util$RectangleInsets#<clinit>()": 620513.0,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets()": 1211.0,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)": 650837.0,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets(org.jfree.chart.util.UnitType,double,double,double,double)": 620513.0,
        "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)": 1081.0,
        "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)": 1079.0,
        "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)": 1081.0,
        "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)": 1079.0,
        "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)": 1081.0,
        "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)": 1079.0,
        "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)": 1081.0,
        "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)": 1079.0,
        "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)": 1211.0,
        "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D)": 1211.0,
        "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)": 1211.0,
        "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D)": 1093.0,
        "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)": 1093.0,
        "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)": 903.0,
        "org.jfree.chart.util$RectangleInsets#extendHeight(double)": 1081.0,
        "org.jfree.chart.util$RectangleInsets#extendWidth(double)": 1081.0,
        "org.jfree.chart.util$RectangleInsets#getBottom()": 1093.0,
        "org.jfree.chart.util$RectangleInsets#getLeft()": 1093.0,
        "org.jfree.chart.util$RectangleInsets#getRight()": 1093.0,
        "org.jfree.chart.util$RectangleInsets#getTop()": 1093.0,
        "org.jfree.chart.util$RectangleInsets#getUnitType()": 1211.0,
        "org.jfree.chart.util$RectangleInsets#hashCode()": 1211.0,
        "org.jfree.chart.util$RectangleInsets#toString()": 1211.0,
        "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)": 1083.0,
        "org.jfree.chart.util$RectangleInsets#trimHeight(double)": 1083.0,
        "org.jfree.chart.util$RectangleInsets#trimWidth(double)": 1083.0,
        "org.jfree.chart.util$SortOrder#<clinit>()": 1223123.0,
        "org.jfree.chart.util$SortOrder#SortOrder(java.lang.String)": 1223123.0,
        "org.jfree.chart.util$SortOrder#equals(java.lang.Object)": 1187.0,
        "org.jfree.chart.util$SortOrder#hashCode()": 1211.0,
        "org.jfree.chart.util$SortOrder#readResolve()": 1195.0,
        "org.jfree.chart.util$SortOrder#toString()": 1191.0,
        "org.jfree.chart.util$UnitType#<clinit>()": 611087.0,
        "org.jfree.chart.util$UnitType#UnitType(java.lang.String)": 611087.0,
        "org.jfree.chart.util$UnitType#equals(java.lang.Object)": 1083.0,
        "org.jfree.chart.util$UnitType#hashCode()": 1211.0,
        "org.jfree.chart.util$UnitType#readResolve()": 1083.0,
        "org.jfree.chart.util$UnitType#toString()": 1211.0,
        "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)": 565037.0,
        "org.jfree.data.general$DatasetChangeEvent#getDataset()": 1211.0,
        "org.jfree.data.time$Day#<clinit>()": 923.0,
        "org.jfree.data.time$Day#Day()": 1187.0,
        "org.jfree.data.time$Day#Day(int,int,int)": 1009.0,
        "org.jfree.data.time$Day#Day(java.util.Date)": 1183.0,
        "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)": 1145.0,
        "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)": 1183.0,
        "org.jfree.data.time$Day#compareTo(java.lang.Object)": 1193.0,
        "org.jfree.data.time$Day#equals(java.lang.Object)": 1161.0,
        "org.jfree.data.time$Day#getDayOfMonth()": 1043.0,
        "org.jfree.data.time$Day#getFirstMillisecond()": 1183.0,
        "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)": 943.0,
        "org.jfree.data.time$Day#getLastMillisecond()": 1183.0,
        "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)": 943.0,
        "org.jfree.data.time$Day#getMonth()": 1043.0,
        "org.jfree.data.time$Day#getSerialDate()": 1153.0,
        "org.jfree.data.time$Day#getSerialIndex()": 1185.0,
        "org.jfree.data.time$Day#getYear()": 1047.0,
        "org.jfree.data.time$Day#hashCode()": 1199.0,
        "org.jfree.data.time$Day#next()": 1173.0,
        "org.jfree.data.time$Day#parseDay(java.lang.String)": 1207.0,
        "org.jfree.data.time$Day#peg(java.util.Calendar)": 943.0,
        "org.jfree.data.time$Day#previous()": 1203.0,
        "org.jfree.data.time$Day#toString()": 1211.0,
        "org.jfree.data.time$RegularTimePeriod#<clinit>()": 647.0,
        "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()": 663.0,
        "org.jfree.data.time$RegularTimePeriod#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone)": 1209.0,
        "org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)": 1203.0,
        "org.jfree.data.time$RegularTimePeriod#getEnd()": 1179.0,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()": 1175.0,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)": 1209.0,
        "org.jfree.data.time$RegularTimePeriod#getStart()": 1179.0,
        "org.jfree.data.time$RegularTimePeriod#toString()": 1211.0
    },
    "Chart-15": {
        "org.jfree.chart$ChartColor#<clinit>()": 654220.0,
        "org.jfree.chart$ChartColor#ChartColor(int,int,int)": 1068.0,
        "org.jfree.chart$ChartColor#createDefaultPaintArray()": 654220.0,
        "org.jfree.chart$ChartFactory#ChartFactory()": 1068.0,
        "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1060.0,
        "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1048.0,
        "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1060.0,
        "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)": 1068.0,
        "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)": 1068.0,
        "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1068.0,
        "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)": 1068.0,
        "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)": 1058.0,
        "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)": 1068.0,
        "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)": 1068.0,
        "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1068.0,
        "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1052.0,
        "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1060.0,
        "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)": 1068.0,
        "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)": 1068.0,
        "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)": 1038.0,
        "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)": 1068.0,
        "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)": 1068.0,
        "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)": 1068.0,
        "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)": 1136352.0,
        "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)": 1068.0,
        "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)": 1068.0,
        "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)": 1068.0,
        "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)": 1068.0,
        "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1052.0,
        "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1060.0,
        "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1060.0,
        "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1060.0,
        "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1058.0,
        "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)": 1060.0,
        "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1068.0,
        "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1062.0,
        "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)": 1068.0,
        "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1062.0,
        "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1060.0,
        "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1046.0,
        "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1062.0,
        "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1062.0,
        "org.jfree.chart$JFreeChart#<clinit>()": 813436.0,
        "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)": 827940.0,
        "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,org.jfree.chart.plot.Plot)": 1068.0,
        "org.jfree.chart$JFreeChart#JFreeChart(org.jfree.chart.plot.Plot)": 960.0,
        "org.jfree.chart$JFreeChart#addChangeListener(org.jfree.chart.event.ChartChangeListener)": 1026.0,
        "org.jfree.chart$JFreeChart#addLegend(org.jfree.chart.title.LegendTitle)": 1068.0,
        "org.jfree.chart$JFreeChart#addProgressListener(org.jfree.chart.event.ChartProgressListener)": 1066.0,
        "org.jfree.chart$JFreeChart#addSubtitle(int,org.jfree.chart.title.Title)": 1066.0,
        "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)": 1064.0,
        "org.jfree.chart$JFreeChart#clearSubtitles()": 1068.0,
        "org.jfree.chart$JFreeChart#clone()": 1068.0,
        "org.jfree.chart$JFreeChart#createAlignedRectangle2D(org.jfree.chart.util.Size2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)": 1011972.0,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int)": 1060.0,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)": 1068.0,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)": 1000.0,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)": 1000.0,
        "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1068.0,
        "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)": 1011972.0,
        "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)": 1068.0,
        "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 1011972.0,
        "org.jfree.chart$JFreeChart#equals(java.lang.Object)": 1044.0,
        "org.jfree.chart$JFreeChart#fireChartChanged()": 1056.0,
        "org.jfree.chart$JFreeChart#getAntiAlias()": 1068.0,
        "org.jfree.chart$JFreeChart#getBackgroundImage()": 1068.0,
        "org.jfree.chart$JFreeChart#getBackgroundImageAlignment()": 1068.0,
        "org.jfree.chart$JFreeChart#getBackgroundImageAlpha()": 1068.0,
        "org.jfree.chart$JFreeChart#getBackgroundPaint()": 1068.0,
        "org.jfree.chart$JFreeChart#getBorderPaint()": 1068.0,
        "org.jfree.chart$JFreeChart#getBorderStroke()": 1068.0,
        "org.jfree.chart$JFreeChart#getCategoryPlot()": 1068.0,
        "org.jfree.chart$JFreeChart#getLegend()": 1058.0,
        "org.jfree.chart$JFreeChart#getLegend(int)": 1058.0,
        "org.jfree.chart$JFreeChart#getPadding()": 1068.0,
        "org.jfree.chart$JFreeChart#getPlot()": 918.0,
        "org.jfree.chart$JFreeChart#getRenderingHints()": 1068.0,
        "org.jfree.chart$JFreeChart#getSubtitle(int)": 1048.0,
        "org.jfree.chart$JFreeChart#getSubtitleCount()": 1042.0,
        "org.jfree.chart$JFreeChart#getSubtitles()": 1066.0,
        "org.jfree.chart$JFreeChart#getTextAntiAlias()": 1068.0,
        "org.jfree.chart$JFreeChart#getTitle()": 1066.0,
        "org.jfree.chart$JFreeChart#getXYPlot()": 1068.0,
        "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)": 1068.0,
        "org.jfree.chart$JFreeChart#isBorderVisible()": 1011972.0,
        "org.jfree.chart$JFreeChart#isNotify()": 1068.0,
        "org.jfree.chart$JFreeChart#main(java.lang.String[])": 1068.0,
        "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)": 910.0,
        "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartProgressEvent)": 1011972.0,
        "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)": 924.0,
        "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)": 1050.0,
        "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)": 1066.0,
        "org.jfree.chart$JFreeChart#removeLegend()": 1062.0,
        "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)": 1066.0,
        "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)": 1062.0,
        "org.jfree.chart$JFreeChart#setAntiAlias(boolean)": 1068.0,
        "org.jfree.chart$JFreeChart#setBackgroundImage(java.awt.Image)": 1066.0,
        "org.jfree.chart$JFreeChart#setBackgroundImageAlignment(int)": 1066.0,
        "org.jfree.chart$JFreeChart#setBackgroundImageAlpha(float)": 1066.0,
        "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)": 1060.0,
        "org.jfree.chart$JFreeChart#setBorderPaint(java.awt.Paint)": 1066.0,
        "org.jfree.chart$JFreeChart#setBorderStroke(java.awt.Stroke)": 1066.0,
        "org.jfree.chart$JFreeChart#setBorderVisible(boolean)": 1066.0,
        "org.jfree.chart$JFreeChart#setNotify(boolean)": 1068.0,
        "org.jfree.chart$JFreeChart#setPadding(org.jfree.chart.util.RectangleInsets)": 1066.0,
        "org.jfree.chart$JFreeChart#setRenderingHints(java.awt.RenderingHints)": 1066.0,
        "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)": 1068.0,
        "org.jfree.chart$JFreeChart#setTextAntiAlias(boolean)": 1068.0,
        "org.jfree.chart$JFreeChart#setTextAntiAlias(java.lang.Object)": 1068.0,
        "org.jfree.chart$JFreeChart#setTitle(java.lang.String)": 1066.0,
        "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)": 1060.0,
        "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)": 1062.0,
        "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)": 1050.0,
        "org.jfree.chart$LegendItemCollection#LegendItemCollection()": 1005942.0,
        "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)": 956.0,
        "org.jfree.chart$LegendItemCollection#addAll(org.jfree.chart.LegendItemCollection)": 1068.0,
        "org.jfree.chart$LegendItemCollection#clone()": 1066.0,
        "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)": 1062.0,
        "org.jfree.chart$LegendItemCollection#get(int)": 966.0,
        "org.jfree.chart$LegendItemCollection#getItemCount()": 1011972.0,
        "org.jfree.chart$LegendItemCollection#iterator()": 1068.0,
        "org.jfree.chart$PaintMap#PaintMap()": 1054686.0,
        "org.jfree.chart$PaintMap#clear()": 1068.0,
        "org.jfree.chart$PaintMap#clone()": 1066.0,
        "org.jfree.chart$PaintMap#containsKey(java.lang.Comparable)": 1068.0,
        "org.jfree.chart$PaintMap#equals(java.lang.Object)": 1036.0,
        "org.jfree.chart$PaintMap#getPaint(java.lang.Comparable)": 1048.0,
        "org.jfree.chart$PaintMap#put(java.lang.Comparable,java.awt.Paint)": 1048.0,
        "org.jfree.chart$PaintMap#readObject(java.io.ObjectInputStream)": 1052.0,
        "org.jfree.chart$PaintMap#writeObject(java.io.ObjectOutputStream)": 1052.0,
        "org.jfree.chart$StrokeMap#StrokeMap()": 1056742.0,
        "org.jfree.chart$StrokeMap#clear()": 1068.0,
        "org.jfree.chart$StrokeMap#clone()": 1066.0,
        "org.jfree.chart$StrokeMap#containsKey(java.lang.Comparable)": 1068.0,
        "org.jfree.chart$StrokeMap#equals(java.lang.Object)": 1036.0,
        "org.jfree.chart$StrokeMap#getStroke(java.lang.Comparable)": 1050.0,
        "org.jfree.chart$StrokeMap#put(java.lang.Comparable,java.awt.Stroke)": 1056.0,
        "org.jfree.chart$StrokeMap#readObject(java.io.ObjectInputStream)": 1052.0,
        "org.jfree.chart$StrokeMap#writeObject(java.io.ObjectOutputStream)": 1052.0,
        "org.jfree.chart.axis$Axis#<clinit>()": 548.0,
        "org.jfree.chart.axis$Axis#Axis(java.lang.String)": 554.0,
        "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)": 706.0,
        "org.jfree.chart.axis$Axis#clone()": 1020.0,
        "org.jfree.chart.axis$Axis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1002.0,
        "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)": 950.0,
        "org.jfree.chart.axis$Axis#equals(java.lang.Object)": 898.0,
        "org.jfree.chart.axis$Axis#getAxisLinePaint()": 956.0,
        "org.jfree.chart.axis$Axis#getAxisLineStroke()": 956.0,
        "org.jfree.chart.axis$Axis#getFixedDimension()": 950.0,
        "org.jfree.chart.axis$Axis#getLabel()": 934.0,
        "org.jfree.chart.axis$Axis#getLabelAngle()": 950.0,
        "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)": 950.0,
        "org.jfree.chart.axis$Axis#getLabelFont()": 950.0,
        "org.jfree.chart.axis$Axis#getLabelInsets()": 950.0,
        "org.jfree.chart.axis$Axis#getLabelPaint()": 950.0,
        "org.jfree.chart.axis$Axis#getLabelToolTip()": 1068.0,
        "org.jfree.chart.axis$Axis#getLabelURL()": 1068.0,
        "org.jfree.chart.axis$Axis#getPlot()": 638.0,
        "org.jfree.chart.axis$Axis#getTickLabelFont()": 950.0,
        "org.jfree.chart.axis$Axis#getTickLabelInsets()": 950.0,
        "org.jfree.chart.axis$Axis#getTickLabelPaint()": 950.0,
        "org.jfree.chart.axis$Axis#getTickMarkInsideLength()": 950.0,
        "org.jfree.chart.axis$Axis#getTickMarkOutsideLength()": 950.0,
        "org.jfree.chart.axis$Axis#getTickMarkPaint()": 954.0,
        "org.jfree.chart.axis$Axis#getTickMarkStroke()": 954.0,
        "org.jfree.chart.axis$Axis#hasListener(java.util.EventListener)": 1064.0,
        "org.jfree.chart.axis$Axis#isAxisLineVisible()": 950.0,
        "org.jfree.chart.axis$Axis#isTickLabelsVisible()": 950.0,
        "org.jfree.chart.axis$Axis#isTickMarksVisible()": 952.0,
        "org.jfree.chart.axis$Axis#isVisible()": 950.0,
        "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)": 634.0,
        "org.jfree.chart.axis$Axis#readObject(java.io.ObjectInputStream)": 1006.0,
        "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)": 1028.0,
        "org.jfree.chart.axis$Axis#setAxisLinePaint(java.awt.Paint)": 1062.0,
        "org.jfree.chart.axis$Axis#setAxisLineStroke(java.awt.Stroke)": 1064.0,
        "org.jfree.chart.axis$Axis#setAxisLineVisible(boolean)": 1030.0,
        "org.jfree.chart.axis$Axis#setFixedDimension(double)": 1066.0,
        "org.jfree.chart.axis$Axis#setLabel(java.lang.String)": 1060.0,
        "org.jfree.chart.axis$Axis#setLabelAngle(double)": 1066.0,
        "org.jfree.chart.axis$Axis#setLabelFont(java.awt.Font)": 1066.0,
        "org.jfree.chart.axis$Axis#setLabelInsets(org.jfree.chart.util.RectangleInsets)": 1066.0,
        "org.jfree.chart.axis$Axis#setLabelPaint(java.awt.Paint)": 1066.0,
        "org.jfree.chart.axis$Axis#setLabelToolTip(java.lang.String)": 1066.0,
        "org.jfree.chart.axis$Axis#setLabelURL(java.lang.String)": 1066.0,
        "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)": 706.0,
        "org.jfree.chart.axis$Axis#setTickLabelFont(java.awt.Font)": 1066.0,
        "org.jfree.chart.axis$Axis#setTickLabelInsets(org.jfree.chart.util.RectangleInsets)": 1066.0,
        "org.jfree.chart.axis$Axis#setTickLabelPaint(java.awt.Paint)": 1066.0,
        "org.jfree.chart.axis$Axis#setTickLabelsVisible(boolean)": 1066.0,
        "org.jfree.chart.axis$Axis#setTickMarkInsideLength(float)": 1066.0,
        "org.jfree.chart.axis$Axis#setTickMarkOutsideLength(float)": 1066.0,
        "org.jfree.chart.axis$Axis#setTickMarkPaint(java.awt.Paint)": 1066.0,
        "org.jfree.chart.axis$Axis#setTickMarkStroke(java.awt.Stroke)": 1066.0,
        "org.jfree.chart.axis$Axis#setTickMarksVisible(boolean)": 838.0,
        "org.jfree.chart.axis$Axis#setVisible(boolean)": 1066.0,
        "org.jfree.chart.axis$Axis#writeObject(java.io.ObjectOutputStream)": 1006.0,
        "org.jfree.chart.axis$CategoryAxis#CategoryAxis()": 1066.0,
        "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)": 838.0,
        "org.jfree.chart.axis$CategoryAxis#addCategoryLabelToolTip(java.lang.Comparable,java.lang.String)": 1058.0,
        "org.jfree.chart.axis$CategoryAxis#calculateCategoryGapSize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1004.0,
        "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 998.0,
        "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)": 1030.0,
        "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)": 1042.0,
        "org.jfree.chart.axis$CategoryAxis#clearCategoryLabelToolTips()": 1068.0,
        "org.jfree.chart.axis$CategoryAxis#clone()": 1050.0,
        "org.jfree.chart.axis$CategoryAxis#configure()": 878.0,
        "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)": 1004.0,
        "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1002.0,
        "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)": 996.0,
        "org.jfree.chart.axis$CategoryAxis#equalPaintMaps(java.util.Map,java.util.Map)": 1010.0,
        "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)": 1010.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1004.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1068.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelPositionOffset()": 1068.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelPositions()": 1068.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelToolTip(java.lang.Comparable)": 1048.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryMargin()": 1032.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1046.0,
        "org.jfree.chart.axis$CategoryAxis#getCategorySeriesMiddle(java.lang.Comparable,java.lang.Comparable,org.jfree.data.category.CategoryDataset,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1068.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1004.0,
        "org.jfree.chart.axis$CategoryAxis#getLowerMargin()": 998.0,
        "org.jfree.chart.axis$CategoryAxis#getMaximumCategoryLabelLines()": 1068.0,
        "org.jfree.chart.axis$CategoryAxis#getMaximumCategoryLabelWidthRatio()": 1068.0,
        "org.jfree.chart.axis$CategoryAxis#getTickLabelFont(java.lang.Comparable)": 1004.0,
        "org.jfree.chart.axis$CategoryAxis#getTickLabelPaint(java.lang.Comparable)": 1004.0,
        "org.jfree.chart.axis$CategoryAxis#getUpperMargin()": 998.0,
        "org.jfree.chart.axis$CategoryAxis#hashCode()": 988.0,
        "org.jfree.chart.axis$CategoryAxis#readObject(java.io.ObjectInputStream)": 1046.0,
        "org.jfree.chart.axis$CategoryAxis#readPaintMap(java.io.ObjectInputStream)": 1046.0,
        "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 996.0,
        "org.jfree.chart.axis$CategoryAxis#removeCategoryLabelToolTip(java.lang.Comparable)": 1068.0,
        "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)": 996.0,
        "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositionOffset(int)": 1064.0,
        "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositions(org.jfree.chart.axis.CategoryLabelPositions)": 1064.0,
        "org.jfree.chart.axis$CategoryAxis#setCategoryMargin(double)": 1050.0,
        "org.jfree.chart.axis$CategoryAxis#setLowerMargin(double)": 1064.0,
        "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelLines(int)": 1068.0,
        "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelWidthRatio(float)": 1064.0,
        "org.jfree.chart.axis$CategoryAxis#setTickLabelFont(java.lang.Comparable,java.awt.Font)": 1058.0,
        "org.jfree.chart.axis$CategoryAxis#setTickLabelPaint(java.lang.Comparable,java.awt.Paint)": 1054.0,
        "org.jfree.chart.axis$CategoryAxis#setUpperMargin(double)": 1064.0,
        "org.jfree.chart.axis$CategoryAxis#writeObject(java.io.ObjectOutputStream)": 1046.0,
        "org.jfree.chart.axis$CategoryAxis#writePaintMap(java.util.Map,java.io.ObjectOutputStream)": 1046.0,
        "org.jfree.chart.axis$CategoryAxis3D#CategoryAxis3D()": 1068.0,
        "org.jfree.chart.axis$CategoryAxis3D#CategoryAxis3D(java.lang.String)": 1040.0,
        "org.jfree.chart.axis$CategoryAxis3D#clone()": 1066.0,
        "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1062.0,
        "org.jfree.chart.axis$CategoryAxis3D#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1068.0,
        "org.jfree.chart.axis$DateAxis#<clinit>()": 1002.0,
        "org.jfree.chart.axis$DateAxis#DateAxis()": 1066.0,
        "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)": 1002.0,
        "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone)": 1002.0,
        "org.jfree.chart.axis$DateAxis#autoAdjustRange()": 1002.0,
        "org.jfree.chart.axis$DateAxis#calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)": 1062.0,
        "org.jfree.chart.axis$DateAxis#calculateHighestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)": 1068.0,
        "org.jfree.chart.axis$DateAxis#calculateLowestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)": 1060.0,
        "org.jfree.chart.axis$DateAxis#clone()": 1066.0,
        "org.jfree.chart.axis$DateAxis#configure()": 1044.0,
        "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits()": 1068.0,
        "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone)": 1002.0,
        "org.jfree.chart.axis$DateAxis#dateToJava2D(java.util.Date,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1068.0,
        "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1060.0,
        "org.jfree.chart.axis$DateAxis#equals(java.lang.Object)": 1056.0,
        "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)": 1068.0,
        "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)": 1060.0,
        "org.jfree.chart.axis$DateAxis#getDateFormatOverride()": 1060.0,
        "org.jfree.chart.axis$DateAxis#getMaximumDate()": 1056.0,
        "org.jfree.chart.axis$DateAxis#getMinimumDate()": 1056.0,
        "org.jfree.chart.axis$DateAxis#getTickMarkPosition()": 1068.0,
        "org.jfree.chart.axis$DateAxis#getTickUnit()": 1060.0,
        "org.jfree.chart.axis$DateAxis#getTimeZone()": 1068.0,
        "org.jfree.chart.axis$DateAxis#getTimeline()": 1068.0,
        "org.jfree.chart.axis$DateAxis#hashCode()": 1058.0,
        "org.jfree.chart.axis$DateAxis#isHiddenValue(long)": 1060.0,
        "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1066.0,
        "org.jfree.chart.axis$DateAxis#nextStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)": 1060.0,
        "org.jfree.chart.axis$DateAxis#previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)": 1036.0,
        "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1060.0,
        "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1060.0,
        "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1068.0,
        "org.jfree.chart.axis$DateAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1060.0,
        "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1060.0,
        "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1068.0,
        "org.jfree.chart.axis$DateAxis#setDateFormatOverride(java.text.DateFormat)": 1066.0,
        "org.jfree.chart.axis$DateAxis#setMaximumDate(java.util.Date)": 1064.0,
        "org.jfree.chart.axis$DateAxis#setMinimumDate(java.util.Date)": 1064.0,
        "org.jfree.chart.axis$DateAxis#setRange(double,double)": 1066.0,
        "org.jfree.chart.axis$DateAxis#setRange(java.util.Date,java.util.Date)": 1040.0,
        "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)": 1038.0,
        "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)": 1002.0,
        "org.jfree.chart.axis$DateAxis#setTickMarkPosition(org.jfree.chart.axis.DateTickMarkPosition)": 1042.0,
        "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit)": 1042.0,
        "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)": 1002.0,
        "org.jfree.chart.axis$DateAxis#setTimeZone(java.util.TimeZone)": 1068.0,
        "org.jfree.chart.axis$DateAxis#setTimeline(org.jfree.chart.axis.Timeline)": 1066.0,
        "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1060.0,
        "org.jfree.chart.axis$DateAxis#zoomRange(double,double)": 1068.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#DateAxis$DefaultTimeline()": 1002.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainRange(java.util.Date,java.util.Date)": 1068.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainRange(long,long)": 1068.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainValue(java.util.Date)": 1060.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainValue(long)": 1068.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#equals(java.lang.Object)": 1064.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#toMillisecond(long)": 1042.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#toTimelineValue(java.util.Date)": 1058.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#toTimelineValue(long)": 1044.0,
        "org.jfree.chart.axis$NumberAxis#<clinit>()": 662.0,
        "org.jfree.chart.axis$NumberAxis#NumberAxis()": 1060.0,
        "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)": 668.0,
        "org.jfree.chart.axis$NumberAxis#autoAdjustRange()": 706.0,
        "org.jfree.chart.axis$NumberAxis#calculateHighestVisibleTickValue()": 1068.0,
        "org.jfree.chart.axis$NumberAxis#calculateLowestVisibleTickValue()": 954.0,
        "org.jfree.chart.axis$NumberAxis#calculateVisibleTickCount()": 954.0,
        "org.jfree.chart.axis$NumberAxis#clone()": 1042.0,
        "org.jfree.chart.axis$NumberAxis#configure()": 718.0,
        "org.jfree.chart.axis$NumberAxis#createIntegerTickUnits()": 1034.0,
        "org.jfree.chart.axis$NumberAxis#createIntegerTickUnits(java.util.Locale)": 1068.0,
        "org.jfree.chart.axis$NumberAxis#createStandardTickUnits()": 668.0,
        "org.jfree.chart.axis$NumberAxis#createStandardTickUnits(java.util.Locale)": 1068.0,
        "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 960.0,
        "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)": 960.0,
        "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)": 978.0,
        "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)": 1002.0,
        "org.jfree.chart.axis$NumberAxis#getAutoRangeIncludesZero()": 718.0,
        "org.jfree.chart.axis$NumberAxis#getAutoRangeStickyZero()": 718.0,
        "org.jfree.chart.axis$NumberAxis#getMarkerBand()": 1068.0,
        "org.jfree.chart.axis$NumberAxis#getNumberFormatOverride()": 958.0,
        "org.jfree.chart.axis$NumberAxis#getRangeType()": 1068.0,
        "org.jfree.chart.axis$NumberAxis#getTickUnit()": 954.0,
        "org.jfree.chart.axis$NumberAxis#hashCode()": 952.0,
        "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1066.0,
        "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 954.0,
        "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1002.0,
        "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 978.0,
        "org.jfree.chart.axis$NumberAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 954.0,
        "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1002.0,
        "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 978.0,
        "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)": 972.0,
        "org.jfree.chart.axis$NumberAxis#setAutoRangeStickyZero(boolean)": 1060.0,
        "org.jfree.chart.axis$NumberAxis#setMarkerBand(org.jfree.chart.axis.MarkerAxisBand)": 1068.0,
        "org.jfree.chart.axis$NumberAxis#setNumberFormatOverride(java.text.NumberFormat)": 1066.0,
        "org.jfree.chart.axis$NumberAxis#setRangeType(org.jfree.data.RangeType)": 1066.0,
        "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit)": 1066.0,
        "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)": 952.0,
        "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 954.0,
        "org.jfree.chart.axis$NumberAxis3D#NumberAxis3D()": 1068.0,
        "org.jfree.chart.axis$NumberAxis3D#NumberAxis3D(java.lang.String)": 1042.0,
        "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1062.0,
        "org.jfree.chart.axis$ValueAxis#<clinit>()": 590.0,
        "org.jfree.chart.axis$ValueAxis#ValueAxis(java.lang.String,org.jfree.chart.axis.TickUnitSource)": 596.0,
        "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 954.0,
        "org.jfree.chart.axis$ValueAxis#centerRange(double)": 1068.0,
        "org.jfree.chart.axis$ValueAxis#clone()": 1036.0,
        "org.jfree.chart.axis$ValueAxis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 956.0,
        "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 950.0,
        "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)": 938.0,
        "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 994.0,
        "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 978.0,
        "org.jfree.chart.axis$ValueAxis#getAutoRangeMinimumSize()": 708.0,
        "org.jfree.chart.axis$ValueAxis#getAutoTickIndex()": 1068.0,
        "org.jfree.chart.axis$ValueAxis#getDefaultAutoRange()": 976.0,
        "org.jfree.chart.axis$ValueAxis#getDownArrow()": 1068.0,
        "org.jfree.chart.axis$ValueAxis#getFixedAutoRange()": 708.0,
        "org.jfree.chart.axis$ValueAxis#getLeftArrow()": 1068.0,
        "org.jfree.chart.axis$ValueAxis#getLowerBound()": 978.0,
        "org.jfree.chart.axis$ValueAxis#getLowerMargin()": 708.0,
        "org.jfree.chart.axis$ValueAxis#getRange()": 880.0,
        "org.jfree.chart.axis$ValueAxis#getRightArrow()": 1068.0,
        "org.jfree.chart.axis$ValueAxis#getStandardTickUnits()": 950.0,
        "org.jfree.chart.axis$ValueAxis#getUpArrow()": 1068.0,
        "org.jfree.chart.axis$ValueAxis#getUpperBound()": 978.0,
        "org.jfree.chart.axis$ValueAxis#getUpperMargin()": 708.0,
        "org.jfree.chart.axis$ValueAxis#isAutoRange()": 680.0,
        "org.jfree.chart.axis$ValueAxis#isAutoTickUnitSelection()": 950.0,
        "org.jfree.chart.axis$ValueAxis#isInverted()": 940.0,
        "org.jfree.chart.axis$ValueAxis#isNegativeArrowVisible()": 1068.0,
        "org.jfree.chart.axis$ValueAxis#isPositiveArrowVisible()": 1068.0,
        "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()": 950.0,
        "org.jfree.chart.axis$ValueAxis#lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 954.0,
        "org.jfree.chart.axis$ValueAxis#readObject(java.io.ObjectInputStream)": 1014.0,
        "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)": 950.0,
        "org.jfree.chart.axis$ValueAxis#resizeRange(double)": 1068.0,
        "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)": 1068.0,
        "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean)": 1058.0,
        "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean,boolean)": 1058.0,
        "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double)": 1000.0,
        "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double,boolean)": 1000.0,
        "org.jfree.chart.axis$ValueAxis#setAutoTickIndex(int)": 1068.0,
        "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean)": 1066.0,
        "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean,boolean)": 1032.0,
        "org.jfree.chart.axis$ValueAxis#setDefaultAutoRange(org.jfree.data.Range)": 1046.0,
        "org.jfree.chart.axis$ValueAxis#setDownArrow(java.awt.Shape)": 1068.0,
        "org.jfree.chart.axis$ValueAxis#setFixedAutoRange(double)": 1058.0,
        "org.jfree.chart.axis$ValueAxis#setInverted(boolean)": 1060.0,
        "org.jfree.chart.axis$ValueAxis#setLeftArrow(java.awt.Shape)": 1068.0,
        "org.jfree.chart.axis$ValueAxis#setLowerBound(double)": 1054.0,
        "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)": 1036.0,
        "org.jfree.chart.axis$ValueAxis#setNegativeArrowVisible(boolean)": 1066.0,
        "org.jfree.chart.axis$ValueAxis#setPositiveArrowVisible(boolean)": 1066.0,
        "org.jfree.chart.axis$ValueAxis#setRange(double,double)": 1046.0,
        "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)": 1038.0,
        "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)": 646.0,
        "org.jfree.chart.axis$ValueAxis#setRangeAboutValue(double,double)": 1068.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(double,double)": 1068.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range)": 1068.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range,boolean,boolean)": 1068.0,
        "org.jfree.chart.axis$ValueAxis#setRightArrow(java.awt.Shape)": 1068.0,
        "org.jfree.chart.axis$ValueAxis#setStandardTickUnits(org.jfree.chart.axis.TickUnitSource)": 1040.0,
        "org.jfree.chart.axis$ValueAxis#setUpArrow(java.awt.Shape)": 1068.0,
        "org.jfree.chart.axis$ValueAxis#setUpperBound(double)": 1058.0,
        "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)": 1036.0,
        "org.jfree.chart.axis$ValueAxis#setVerticalTickLabels(boolean)": 1066.0,
        "org.jfree.chart.axis$ValueAxis#writeObject(java.io.ObjectOutputStream)": 1014.0,
        "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)": 1068.0,
        "org.jfree.chart.block$AbstractBlock#AbstractBlock()": 737670.0,
        "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D)": 1066.0,
        "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1060.0,
        "org.jfree.chart.block$AbstractBlock#calculateTotalHeight(double)": 1009960.0,
        "org.jfree.chart.block$AbstractBlock#calculateTotalWidth(double)": 1009960.0,
        "org.jfree.chart.block$AbstractBlock#clone()": 1042.0,
        "org.jfree.chart.block$AbstractBlock#drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1011972.0,
        "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)": 954.0,
        "org.jfree.chart.block$AbstractBlock#getBounds()": 964.0,
        "org.jfree.chart.block$AbstractBlock#getContentXOffset()": 1068.0,
        "org.jfree.chart.block$AbstractBlock#getContentYOffset()": 1068.0,
        "org.jfree.chart.block$AbstractBlock#getFrame()": 1013986.0,
        "org.jfree.chart.block$AbstractBlock#getHeight()": 1058.0,
        "org.jfree.chart.block$AbstractBlock#getID()": 1068.0,
        "org.jfree.chart.block$AbstractBlock#getMargin()": 1068.0,
        "org.jfree.chart.block$AbstractBlock#getPadding()": 1068.0,
        "org.jfree.chart.block$AbstractBlock#getWidth()": 1058.0,
        "org.jfree.chart.block$AbstractBlock#readObject(java.io.ObjectInputStream)": 1028.0,
        "org.jfree.chart.block$AbstractBlock#setBounds(java.awt.geom.Rectangle2D)": 950.0,
        "org.jfree.chart.block$AbstractBlock#setFrame(org.jfree.chart.block.BlockFrame)": 859186.0,
        "org.jfree.chart.block$AbstractBlock#setHeight(double)": 1026.0,
        "org.jfree.chart.block$AbstractBlock#setID(java.lang.String)": 1066.0,
        "org.jfree.chart.block$AbstractBlock#setMargin(double,double,double,double)": 1068.0,
        "org.jfree.chart.block$AbstractBlock#setMargin(org.jfree.chart.util.RectangleInsets)": 859186.0,
        "org.jfree.chart.block$AbstractBlock#setPadding(double,double,double,double)": 956.0,
        "org.jfree.chart.block$AbstractBlock#setPadding(org.jfree.chart.util.RectangleInsets)": 770692.0,
        "org.jfree.chart.block$AbstractBlock#setWidth(double)": 1026.0,
        "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)": 1009960.0,
        "org.jfree.chart.block$AbstractBlock#trimBorder(java.awt.geom.Rectangle2D)": 1011972.0,
        "org.jfree.chart.block$AbstractBlock#trimMargin(java.awt.geom.Rectangle2D)": 1011972.0,
        "org.jfree.chart.block$AbstractBlock#trimPadding(java.awt.geom.Rectangle2D)": 1011972.0,
        "org.jfree.chart.block$AbstractBlock#trimToContentHeight(double)": 1011972.0,
        "org.jfree.chart.block$AbstractBlock#trimToContentHeight(org.jfree.data.Range)": 1011972.0,
        "org.jfree.chart.block$AbstractBlock#trimToContentWidth(double)": 1011972.0,
        "org.jfree.chart.block$AbstractBlock#trimToContentWidth(org.jfree.data.Range)": 1011972.0,
        "org.jfree.chart.block$AbstractBlock#writeObject(java.io.ObjectOutputStream)": 1028.0,
        "org.jfree.chart.block$BlockBorder#<clinit>()": 732522.0,
        "org.jfree.chart.block$BlockBorder#BlockBorder()": 1066.0,
        "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double)": 1068.0,
        "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double,java.awt.Paint)": 1068.0,
        "org.jfree.chart.block$BlockBorder#BlockBorder(java.awt.Paint)": 1062.0,
        "org.jfree.chart.block$BlockBorder#BlockBorder(org.jfree.chart.util.RectangleInsets,java.awt.Paint)": 732522.0,
        "org.jfree.chart.block$BlockBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1011972.0,
        "org.jfree.chart.block$BlockBorder#equals(java.lang.Object)": 950.0,
        "org.jfree.chart.block$BlockBorder#getInsets()": 1007950.0,
        "org.jfree.chart.block$BlockBorder#getPaint()": 1068.0,
        "org.jfree.chart.block$BlockBorder#readObject(java.io.ObjectInputStream)": 1026.0,
        "org.jfree.chart.block$BlockBorder#writeObject(java.io.ObjectOutputStream)": 1026.0,
        "org.jfree.chart.block$BlockContainer#BlockContainer()": 1058.0,
        "org.jfree.chart.block$BlockContainer#BlockContainer(org.jfree.chart.block.Arrangement)": 835240.0,
        "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block)": 944.0,
        "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block,java.lang.Object)": 944.0,
        "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 958.0,
        "org.jfree.chart.block$BlockContainer#clear()": 1009960.0,
        "org.jfree.chart.block$BlockContainer#clone()": 1066.0,
        "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1068.0,
        "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 1013986.0,
        "org.jfree.chart.block$BlockContainer#equals(java.lang.Object)": 1054.0,
        "org.jfree.chart.block$BlockContainer#getArrangement()": 1068.0,
        "org.jfree.chart.block$BlockContainer#getBlocks()": 962.0,
        "org.jfree.chart.block$BlockContainer#isEmpty()": 1013986.0,
        "org.jfree.chart.block$BlockContainer#setArrangement(org.jfree.chart.block.Arrangement)": 1011972.0,
        "org.jfree.chart.block$BlockParams#BlockParams()": 1011972.0,
        "org.jfree.chart.block$BlockParams#getGenerateEntities()": 1011972.0,
        "org.jfree.chart.block$BlockParams#getTranslateX()": 1068.0,
        "org.jfree.chart.block$BlockParams#getTranslateY()": 1068.0,
        "org.jfree.chart.block$BlockParams#setGenerateEntities(boolean)": 1011972.0,
        "org.jfree.chart.block$BlockParams#setTranslateX(double)": 1068.0,
        "org.jfree.chart.block$BlockParams#setTranslateY(double)": 1068.0,
        "org.jfree.chart.block$BlockResult#BlockResult()": 1013986.0,
        "org.jfree.chart.block$BlockResult#getEntityCollection()": 1058800.0,
        "org.jfree.chart.block$BlockResult#setEntityCollection(org.jfree.chart.entity.EntityCollection)": 1046.0,
        "org.jfree.chart.block$ColumnArrangement#ColumnArrangement()": 853630.0,
        "org.jfree.chart.block$ColumnArrangement#ColumnArrangement(org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,double,double)": 1066.0,
        "org.jfree.chart.block$ColumnArrangement#add(org.jfree.chart.block.Block,java.lang.Object)": 1066.0,
        "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1068.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1068.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1068.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)": 1068.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1068.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1068.0,
        "org.jfree.chart.block$ColumnArrangement#clear()": 1068.0,
        "org.jfree.chart.block$ColumnArrangement#equals(java.lang.Object)": 1038.0,
        "org.jfree.chart.block$FlowArrangement#FlowArrangement()": 848092.0,
        "org.jfree.chart.block$FlowArrangement#FlowArrangement(org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,double,double)": 842572.0,
        "org.jfree.chart.block$FlowArrangement#add(org.jfree.chart.block.Block,java.lang.Object)": 964.0,
        "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 966.0,
        "org.jfree.chart.block$FlowArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1068.0,
        "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1066.0,
        "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1066.0,
        "org.jfree.chart.block$FlowArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1068.0,
        "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)": 966.0,
        "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1068.0,
        "org.jfree.chart.block$FlowArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1068.0,
        "org.jfree.chart.block$FlowArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 966.0,
        "org.jfree.chart.block$FlowArrangement#clear()": 1013986.0,
        "org.jfree.chart.block$FlowArrangement#equals(java.lang.Object)": 1032.0,
        "org.jfree.chart.block$LengthConstraintType#<clinit>()": 1001932.0,
        "org.jfree.chart.block$LengthConstraintType#LengthConstraintType(java.lang.String)": 1001932.0,
        "org.jfree.chart.block$LengthConstraintType#equals(java.lang.Object)": 1068.0,
        "org.jfree.chart.block$LengthConstraintType#hashCode()": 1068.0,
        "org.jfree.chart.block$LengthConstraintType#readResolve()": 1068.0,
        "org.jfree.chart.block$LengthConstraintType#toString()": 1068.0,
        "org.jfree.chart.block$LineBorder#LineBorder()": 861042.0,
        "org.jfree.chart.block$LineBorder#LineBorder(java.awt.Paint,java.awt.Stroke,org.jfree.chart.util.RectangleInsets)": 857332.0,
        "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1013986.0,
        "org.jfree.chart.block$LineBorder#equals(java.lang.Object)": 1046.0,
        "org.jfree.chart.block$LineBorder#getInsets()": 1013986.0,
        "org.jfree.chart.block$LineBorder#getPaint()": 966.0,
        "org.jfree.chart.block$LineBorder#getStroke()": 966.0,
        "org.jfree.chart.block$LineBorder#readObject(java.io.ObjectInputStream)": 1050.0,
        "org.jfree.chart.block$LineBorder#writeObject(java.io.ObjectOutputStream)": 1050.0,
        "org.jfree.chart.block$RectangleConstraint#<clinit>()": 1001932.0,
        "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,double)": 1064.0,
        "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range)": 1068.0,
        "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)": 1001932.0,
        "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(org.jfree.data.Range,double)": 1068.0,
        "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(org.jfree.data.Range,org.jfree.data.Range)": 1068.0,
        "org.jfree.chart.block$RectangleConstraint#calculateConstrainedSize(org.jfree.chart.util.Size2D)": 1058.0,
        "org.jfree.chart.block$RectangleConstraint#getHeight()": 1007950.0,
        "org.jfree.chart.block$RectangleConstraint#getHeightConstraintType()": 1005942.0,
        "org.jfree.chart.block$RectangleConstraint#getHeightRange()": 1011972.0,
        "org.jfree.chart.block$RectangleConstraint#getWidth()": 1007950.0,
        "org.jfree.chart.block$RectangleConstraint#getWidthConstraintType()": 1005942.0,
        "org.jfree.chart.block$RectangleConstraint#getWidthRange()": 1011972.0,
        "org.jfree.chart.block$RectangleConstraint#toFixedHeight(double)": 1066.0,
        "org.jfree.chart.block$RectangleConstraint#toFixedWidth(double)": 1064.0,
        "org.jfree.chart.block$RectangleConstraint#toRangeHeight(org.jfree.data.Range)": 1068.0,
        "org.jfree.chart.block$RectangleConstraint#toRangeWidth(org.jfree.data.Range)": 1068.0,
        "org.jfree.chart.block$RectangleConstraint#toString()": 1068.0,
        "org.jfree.chart.block$RectangleConstraint#toUnconstrainedHeight()": 1068.0,
        "org.jfree.chart.block$RectangleConstraint#toUnconstrainedWidth()": 1068.0,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape)": 1038.0,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String)": 1038.0,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String,java.lang.String)": 1006.0,
        "org.jfree.chart.entity$ChartEntity#clone()": 1056.0,
        "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)": 1030.0,
        "org.jfree.chart.entity$ChartEntity#getArea()": 1068.0,
        "org.jfree.chart.entity$ChartEntity#getImageMapAreaTag(org.jfree.chart.imagemap.ToolTipTagFragmentGenerator,org.jfree.chart.imagemap.URLTagFragmentGenerator)": 1068.0,
        "org.jfree.chart.entity$ChartEntity#getPolyCoords(java.awt.Shape)": 1068.0,
        "org.jfree.chart.entity$ChartEntity#getRectCoords(java.awt.geom.Rectangle2D)": 1068.0,
        "org.jfree.chart.entity$ChartEntity#getShapeCoords()": 1068.0,
        "org.jfree.chart.entity$ChartEntity#getShapeType()": 1068.0,
        "org.jfree.chart.entity$ChartEntity#getToolTipText()": 1068.0,
        "org.jfree.chart.entity$ChartEntity#getURLText()": 1068.0,
        "org.jfree.chart.entity$ChartEntity#hashCode()": 1068.0,
        "org.jfree.chart.entity$ChartEntity#readObject(java.io.ObjectInputStream)": 1056.0,
        "org.jfree.chart.entity$ChartEntity#setArea(java.awt.Shape)": 1058.0,
        "org.jfree.chart.entity$ChartEntity#setToolTipText(java.lang.String)": 1038.0,
        "org.jfree.chart.entity$ChartEntity#setURLText(java.lang.String)": 1038.0,
        "org.jfree.chart.entity$ChartEntity#toString()": 1068.0,
        "org.jfree.chart.entity$ChartEntity#writeObject(java.io.ObjectOutputStream)": 1056.0,
        "org.jfree.chart.entity$PieSectionEntity#PieSectionEntity(java.awt.Shape,org.jfree.data.general.PieDataset,int,int,java.lang.Comparable,java.lang.String,java.lang.String)": 1056.0,
        "org.jfree.chart.entity$PieSectionEntity#getDataset()": 1068.0,
        "org.jfree.chart.entity$PieSectionEntity#getPieIndex()": 1068.0,
        "org.jfree.chart.entity$PieSectionEntity#getSectionIndex()": 1068.0,
        "org.jfree.chart.entity$PieSectionEntity#getSectionKey()": 1068.0,
        "org.jfree.chart.entity$PieSectionEntity#setDataset(org.jfree.data.general.PieDataset)": 1068.0,
        "org.jfree.chart.entity$PieSectionEntity#setPieIndex(int)": 1068.0,
        "org.jfree.chart.entity$PieSectionEntity#setSectionIndex(int)": 1068.0,
        "org.jfree.chart.entity$PieSectionEntity#setSectionKey(java.lang.Comparable)": 1068.0,
        "org.jfree.chart.entity$PieSectionEntity#toString()": 1068.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)": 313090.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart)": 1068.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart,org.jfree.chart.event.ChartChangeEventType)": 313090.0,
        "org.jfree.chart.event$ChartChangeEvent#getChart()": 1068.0,
        "org.jfree.chart.event$ChartChangeEvent#getType()": 1068.0,
        "org.jfree.chart.event$ChartChangeEvent#setChart(org.jfree.chart.JFreeChart)": 918.0,
        "org.jfree.chart.event$ChartChangeEvent#setType(org.jfree.chart.event.ChartChangeEventType)": 666.0,
        "org.jfree.chart.event$ChartChangeEventType#<clinit>()": 313090.0,
        "org.jfree.chart.event$ChartChangeEventType#ChartChangeEventType(java.lang.String)": 313090.0,
        "org.jfree.chart.event$ChartChangeEventType#equals(java.lang.Object)": 1068.0,
        "org.jfree.chart.event$ChartChangeEventType#hashCode()": 1068.0,
        "org.jfree.chart.event$ChartChangeEventType#readResolve()": 1068.0,
        "org.jfree.chart.event$ChartChangeEventType#toString()": 1068.0,
        "org.jfree.chart.event$ChartProgressEvent#ChartProgressEvent(java.lang.Object,org.jfree.chart.JFreeChart,int,int)": 1011972.0,
        "org.jfree.chart.event$ChartProgressEvent#getChart()": 1068.0,
        "org.jfree.chart.event$ChartProgressEvent#getPercent()": 1068.0,
        "org.jfree.chart.event$ChartProgressEvent#getType()": 1068.0,
        "org.jfree.chart.event$ChartProgressEvent#setChart(org.jfree.chart.JFreeChart)": 1068.0,
        "org.jfree.chart.event$ChartProgressEvent#setPercent(int)": 1068.0,
        "org.jfree.chart.event$ChartProgressEvent#setType(int)": 1068.0,
        "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)": 678730.0,
        "org.jfree.chart.event$PlotChangeEvent#getPlot()": 1068.0,
        "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)": 851782.0,
        "org.jfree.chart.event$TitleChangeEvent#getTitle()": 1068.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#AbstractPieItemLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)": 1056742.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#clone()": 1050.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)": 1062.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#equals(java.lang.Object)": 1018.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)": 1062.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#getLabelFormat()": 1068.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#getNumberFormat()": 1062.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#getPercentFormat()": 1066.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator()": 1062922.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String)": 1066.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)": 1062922.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.util.Locale)": 1068.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.util.Locale)": 1068.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#clone()": 1052.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#equals(java.lang.Object)": 1024.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateAttributedSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)": 1068.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)": 1062.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#getAttributedLabel(int)": 1068.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#setAttributedLabel(int,java.text.AttributedString)": 1066.0,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#AbstractPieLabelDistributor()": 1069120.0,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#addPieLabelRecord(org.jfree.chart.plot.PieLabelRecord)": 1064.0,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#clear()": 1064.0,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#getItemCount()": 1064.0,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)": 1064.0,
        "org.jfree.chart.plot$CategoryPlot#<clinit>()": 860.0,
        "org.jfree.chart.plot$CategoryPlot#CategoryPlot()": 1052.0,
        "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)": 860.0,
        "org.jfree.chart.plot$CategoryPlot#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)": 1064.0,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker)": 1064.0,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)": 1064.0,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 860.0,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker)": 1064.0,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 860.0,
        "org.jfree.chart.plot$CategoryPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 996.0,
        "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 996.0,
        "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 996.0,
        "org.jfree.chart.plot$CategoryPlot#clearAnnotations()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#clearDomainAxes()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers()": 1064.0,
        "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers(int)": 1064.0,
        "org.jfree.chart.plot$CategoryPlot#clearRangeAxes()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers()": 1058.0,
        "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers(int)": 1058.0,
        "org.jfree.chart.plot$CategoryPlot#clone()": 1062.0,
        "org.jfree.chart.plot$CategoryPlot#configureDomainAxes()": 860.0,
        "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()": 860.0,
        "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 860.0,
        "org.jfree.chart.plot$CategoryPlot#datasetsMappedToDomainAxis(int)": 996.0,
        "org.jfree.chart.plot$CategoryPlot#datasetsMappedToRangeAxis(int)": 872.0,
        "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 996.0,
        "org.jfree.chart.plot$CategoryPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 996.0,
        "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 996.0,
        "org.jfree.chart.plot$CategoryPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1002.0,
        "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 996.0,
        "org.jfree.chart.plot$CategoryPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 996.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 996.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 996.0,
        "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)": 1006.0,
        "org.jfree.chart.plot$CategoryPlot#getAnchorValue()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getAnnotations()": 996.0,
        "org.jfree.chart.plot$CategoryPlot#getAxisOffset()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getCategories()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)": 996.0,
        "org.jfree.chart.plot$CategoryPlot#getColumnRenderingOrder()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 872.0,
        "org.jfree.chart.plot$CategoryPlot#getDataset()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getDataset(int)": 860.0,
        "org.jfree.chart.plot$CategoryPlot#getDatasetCount()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getDatasetRenderingOrder()": 996.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxis()": 988.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxis(int)": 986.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisCount()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge()": 1006.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)": 996.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisForDataset(int)": 996.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisIndex(org.jfree.chart.axis.CategoryAxis)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation()": 996.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation(int)": 996.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlinePaint()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlinePosition()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlineStroke()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)": 996.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(org.jfree.chart.util.Layer)": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getDrawSharedDomainAxis()": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#getFixedDomainAxisSpace()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getFixedLegendItems()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getFixedRangeAxisSpace()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getIndexOf(org.jfree.chart.renderer.category.CategoryItemRenderer)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#getLegendItems()": 996.0,
        "org.jfree.chart.plot$CategoryPlot#getOrientation()": 980.0,
        "org.jfree.chart.plot$CategoryPlot#getPlotType()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxis()": 948.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)": 860.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisCount()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()": 996.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)": 996.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisForDataset(int)": 996.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation(int)": 996.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairPaint()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairStroke()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairValue()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeGridlinePaint()": 996.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeGridlineStroke()": 996.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)": 996.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(org.jfree.chart.util.Layer)": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getRenderer()": 954.0,
        "org.jfree.chart.plot$CategoryPlot#getRenderer(int)": 952.0,
        "org.jfree.chart.plot$CategoryPlot#getRendererForDataset(org.jfree.data.category.CategoryDataset)": 894.0,
        "org.jfree.chart.plot$CategoryPlot#getRowRenderingOrder()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#getWeight()": 1064.0,
        "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#isDomainGridlinesVisible()": 996.0,
        "org.jfree.chart.plot$CategoryPlot#isDomainZoomable()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeCrosshairLockedOnData()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeCrosshairVisible()": 994.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeGridlinesVisible()": 996.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeZoomable()": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxis(int,int)": 860.0,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxis(int,int)": 860.0,
        "org.jfree.chart.plot$CategoryPlot#readObject(java.io.ObjectInputStream)": 1052.0,
        "org.jfree.chart.plot$CategoryPlot#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker)": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker)": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo)": 996.0,
        "org.jfree.chart.plot$CategoryPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)": 1020.0,
        "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double,boolean)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setColumnRenderingOrder(org.jfree.chart.util.SortOrder)": 1050.0,
        "org.jfree.chart.plot$CategoryPlot#setDataset(int,org.jfree.data.category.CategoryDataset)": 1024.0,
        "org.jfree.chart.plot$CategoryPlot#setDataset(org.jfree.data.category.CategoryDataset)": 1040.0,
        "org.jfree.chart.plot$CategoryPlot#setDatasetRenderingOrder(org.jfree.chart.plot.DatasetRenderingOrder)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxes(org.jfree.chart.axis.CategoryAxis[])": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis)": 1052.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)": 1052.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(org.jfree.chart.axis.CategoryAxis)": 1056.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 860.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 860.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePaint(java.awt.Paint)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePosition(org.jfree.chart.axis.CategoryAnchor)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlineStroke(java.awt.Stroke)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinesVisible(boolean)": 1054.0,
        "org.jfree.chart.plot$CategoryPlot#setDrawSharedDomainAxis(boolean)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setFixedLegendItems(org.jfree.chart.LegendItemCollection)": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)": 940.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)": 1046.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)": 1046.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)": 1052.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 860.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 860.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairLockedOnData(boolean)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairPaint(java.awt.Paint)": 1064.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairStroke(java.awt.Stroke)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double,boolean)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairVisible(boolean)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlinePaint(java.awt.Paint)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlineStroke(java.awt.Stroke)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlinesVisible(boolean)": 1066.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer)": 1060.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)": 1056.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)": 1062.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderers(org.jfree.chart.renderer.category.CategoryItemRenderer[])": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#setRowRenderingOrder(org.jfree.chart.util.SortOrder)": 1058.0,
        "org.jfree.chart.plot$CategoryPlot#setWeight(int)": 1050.0,
        "org.jfree.chart.plot$CategoryPlot#writeObject(java.io.ObjectOutputStream)": 1052.0,
        "org.jfree.chart.plot$CategoryPlot#zoom(double)": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1068.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 1068.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()": 654220.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier()": 654220.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])": 654220.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])": 1064.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#clone()": 1016.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#createStandardSeriesShapes()": 654220.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#equalShapes(java.awt.Shape[],java.awt.Shape[])": 912.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)": 912.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextFillPaint()": 1066.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlinePaint()": 1064.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlineStroke()": 1066.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextPaint()": 922.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextShape()": 1024.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextStroke()": 1066.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double)": 654220.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double,double)": 654220.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#readObject(java.io.ObjectInputStream)": 1004.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#writeObject(java.io.ObjectOutputStream)": 1004.0,
        "org.jfree.chart.plot$Marker#Marker()": 1010.0,
        "org.jfree.chart.plot$Marker#Marker(java.awt.Paint)": 1010.0,
        "org.jfree.chart.plot$Marker#Marker(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)": 794.0,
        "org.jfree.chart.plot$Marker#addChangeListener(org.jfree.chart.event.MarkerChangeListener)": 816.0,
        "org.jfree.chart.plot$Marker#clone()": 1062.0,
        "org.jfree.chart.plot$Marker#equals(java.lang.Object)": 1020.0,
        "org.jfree.chart.plot$Marker#getAlpha()": 1002.0,
        "org.jfree.chart.plot$Marker#getLabel()": 1000.0,
        "org.jfree.chart.plot$Marker#getLabelAnchor()": 1000.0,
        "org.jfree.chart.plot$Marker#getLabelFont()": 1066.0,
        "org.jfree.chart.plot$Marker#getLabelOffset()": 1066.0,
        "org.jfree.chart.plot$Marker#getLabelOffsetType()": 1066.0,
        "org.jfree.chart.plot$Marker#getLabelPaint()": 1066.0,
        "org.jfree.chart.plot$Marker#getLabelTextAnchor()": 1066.0,
        "org.jfree.chart.plot$Marker#getListeners(java.lang.Class)": 1056.0,
        "org.jfree.chart.plot$Marker#getOutlinePaint()": 1058.0,
        "org.jfree.chart.plot$Marker#getOutlineStroke()": 1064.0,
        "org.jfree.chart.plot$Marker#getPaint()": 996.0,
        "org.jfree.chart.plot$Marker#getStroke()": 1002.0,
        "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)": 1004.0,
        "org.jfree.chart.plot$Marker#readObject(java.io.ObjectInputStream)": 1042.0,
        "org.jfree.chart.plot$Marker#removeChangeListener(org.jfree.chart.event.MarkerChangeListener)": 1050.0,
        "org.jfree.chart.plot$Marker#setAlpha(float)": 1064.0,
        "org.jfree.chart.plot$Marker#setLabel(java.lang.String)": 1064.0,
        "org.jfree.chart.plot$Marker#setLabelAnchor(org.jfree.chart.util.RectangleAnchor)": 1064.0,
        "org.jfree.chart.plot$Marker#setLabelFont(java.awt.Font)": 1064.0,
        "org.jfree.chart.plot$Marker#setLabelOffset(org.jfree.chart.util.RectangleInsets)": 1064.0,
        "org.jfree.chart.plot$Marker#setLabelOffsetType(org.jfree.chart.util.LengthAdjustmentType)": 1036.0,
        "org.jfree.chart.plot$Marker#setLabelPaint(java.awt.Paint)": 1064.0,
        "org.jfree.chart.plot$Marker#setLabelTextAnchor(org.jfree.chart.text.TextAnchor)": 1064.0,
        "org.jfree.chart.plot$Marker#setOutlinePaint(java.awt.Paint)": 1064.0,
        "org.jfree.chart.plot$Marker#setOutlineStroke(java.awt.Stroke)": 1064.0,
        "org.jfree.chart.plot$Marker#setPaint(java.awt.Paint)": 1058.0,
        "org.jfree.chart.plot$Marker#setStroke(java.awt.Stroke)": 1064.0,
        "org.jfree.chart.plot$Marker#writeObject(java.io.ObjectOutputStream)": 1042.0,
        "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot()": 1064.0,
        "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)": 1062.0,
        "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 1068.0,
        "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)": 1062.0,
        "org.jfree.chart.plot$MultiplePiePlot#getAggregatedItemsKey()": 1068.0,
        "org.jfree.chart.plot$MultiplePiePlot#getAggregatedItemsPaint()": 1068.0,
        "org.jfree.chart.plot$MultiplePiePlot#getDataExtractOrder()": 1068.0,
        "org.jfree.chart.plot$MultiplePiePlot#getDataset()": 1068.0,
        "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()": 1068.0,
        "org.jfree.chart.plot$MultiplePiePlot#getLimit()": 1068.0,
        "org.jfree.chart.plot$MultiplePiePlot#getPieChart()": 1068.0,
        "org.jfree.chart.plot$MultiplePiePlot#getPlotType()": 1068.0,
        "org.jfree.chart.plot$MultiplePiePlot#prefetchSectionPaints()": 1068.0,
        "org.jfree.chart.plot$MultiplePiePlot#readObject(java.io.ObjectInputStream)": 1066.0,
        "org.jfree.chart.plot$MultiplePiePlot#setAggregatedItemsKey(java.lang.Comparable)": 1066.0,
        "org.jfree.chart.plot$MultiplePiePlot#setAggregatedItemsPaint(java.awt.Paint)": 1064.0,
        "org.jfree.chart.plot$MultiplePiePlot#setDataExtractOrder(org.jfree.chart.util.TableOrder)": 1066.0,
        "org.jfree.chart.plot$MultiplePiePlot#setDataset(org.jfree.data.category.CategoryDataset)": 1068.0,
        "org.jfree.chart.plot$MultiplePiePlot#setLimit(double)": 1066.0,
        "org.jfree.chart.plot$MultiplePiePlot#setPieChart(org.jfree.chart.JFreeChart)": 1066.0,
        "org.jfree.chart.plot$MultiplePiePlot#writeObject(java.io.ObjectOutputStream)": 1066.0,
        "org.jfree.chart.plot$PieLabelDistributor#PieLabelDistributor(int)": 1069120.0,
        "org.jfree.chart.plot$PieLabelDistributor#adjustDownwards(double,double)": 1068.0,
        "org.jfree.chart.plot$PieLabelDistributor#adjustInwards()": 1066.0,
        "org.jfree.chart.plot$PieLabelDistributor#adjustUpwards(double,double)": 1068.0,
        "org.jfree.chart.plot$PieLabelDistributor#distributeLabels(double,double)": 1064.0,
        "org.jfree.chart.plot$PieLabelDistributor#isOverlap()": 1064.0,
        "org.jfree.chart.plot$PieLabelDistributor#sort()": 1064.0,
        "org.jfree.chart.plot$PieLabelDistributor#spreadEvenly(double,double)": 1068.0,
        "org.jfree.chart.plot$PieLabelDistributor#toString()": 1068.0,
        "org.jfree.chart.plot$PiePlot#<clinit>()": 1069120.0,
        "org.jfree.chart.plot$PiePlot#PiePlot()": 1046.0,
        "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)": 1069120.0,
        "org.jfree.chart.plot$PiePlot#clone()": 1054.0,
        "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 1066.0,
        "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)": 1066.0,
        "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)": 1064.0,
        "org.jfree.chart.plot$PiePlot#drawLeftLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)": 1064.0,
        "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)": 1064.0,
        "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 1066.0,
        "org.jfree.chart.plot$PiePlot#drawRightLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)": 1064.0,
        "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)": 1064.0,
        "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)": 1068.0,
        "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)": 1028.0,
        "org.jfree.chart.plot$PiePlot#getArcBounds(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double,double)": 1066.0,
        "org.jfree.chart.plot$PiePlot#getBaseSectionOutlinePaint()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getBaseSectionOutlineStroke()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getBaseSectionPaint()": 1066.0,
        "org.jfree.chart.plot$PiePlot#getDataset()": 1132090.0,
        "org.jfree.chart.plot$PiePlot#getDirection()": 1066.0,
        "org.jfree.chart.plot$PiePlot#getExplodePercent(java.lang.Comparable)": 1064.0,
        "org.jfree.chart.plot$PiePlot#getIgnoreNullValues()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getIgnoreZeroValues()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getInteriorGap()": 1140622.0,
        "org.jfree.chart.plot$PiePlot#getLabelBackgroundPaint()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getLabelDistributor()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getLabelFont()": 1064.0,
        "org.jfree.chart.plot$PiePlot#getLabelGap()": 1140622.0,
        "org.jfree.chart.plot$PiePlot#getLabelGenerator()": 1140622.0,
        "org.jfree.chart.plot$PiePlot#getLabelLinkMargin()": 1066.0,
        "org.jfree.chart.plot$PiePlot#getLabelLinkPaint()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getLabelLinkStroke()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getLabelLinksVisible()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getLabelOutlinePaint()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getLabelOutlineStroke()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getLabelPadding()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getLabelPaint()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getLabelShadowPaint()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getLegendItemShape()": 1062.0,
        "org.jfree.chart.plot$PiePlot#getLegendItems()": 1136352.0,
        "org.jfree.chart.plot$PiePlot#getLegendLabelGenerator()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getLegendLabelToolTipGenerator()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getLegendLabelURLGenerator()": 1066.0,
        "org.jfree.chart.plot$PiePlot#getMaximumExplodePercent()": 1064.0,
        "org.jfree.chart.plot$PiePlot#getMaximumLabelWidth()": 1140622.0,
        "org.jfree.chart.plot$PiePlot#getMinimumArcAngleToDraw()": 1064.0,
        "org.jfree.chart.plot$PiePlot#getPieIndex()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getPlotType()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getSectionKey(int)": 1064.0,
        "org.jfree.chart.plot$PiePlot#getSectionOutlinePaint(java.lang.Comparable)": 1068.0,
        "org.jfree.chart.plot$PiePlot#getSectionOutlineStroke(java.lang.Comparable)": 1068.0,
        "org.jfree.chart.plot$PiePlot#getSectionOutlinesVisible()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getSectionPaint(java.lang.Comparable)": 1068.0,
        "org.jfree.chart.plot$PiePlot#getShadowPaint()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getShadowXOffset()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getShadowYOffset()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getSimpleLabelOffset()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getSimpleLabels()": 1066.0,
        "org.jfree.chart.plot$PiePlot#getStartAngle()": 1064.0,
        "org.jfree.chart.plot$PiePlot#getToolTipGenerator()": 1068.0,
        "org.jfree.chart.plot$PiePlot#getURLGenerator()": 1066.0,
        "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)": 1138486.0,
        "org.jfree.chart.plot$PiePlot#isCircular()": 1138486.0,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable)": 1062.0,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable,boolean)": 1062.0,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable)": 1062.0,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable,boolean)": 1062.0,
        "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable)": 1066.0,
        "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable,boolean)": 1062.0,
        "org.jfree.chart.plot$PiePlot#readObject(java.io.ObjectInputStream)": 1056.0,
        "org.jfree.chart.plot$PiePlot#setBaseSectionOutlinePaint(java.awt.Paint)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setBaseSectionOutlineStroke(java.awt.Stroke)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setBaseSectionPaint(java.awt.Paint)": 1064.0,
        "org.jfree.chart.plot$PiePlot#setCircular(boolean)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setCircular(boolean,boolean)": 1129962.0,
        "org.jfree.chart.plot$PiePlot#setDataset(org.jfree.data.general.PieDataset)": 1064.0,
        "org.jfree.chart.plot$PiePlot#setDirection(org.jfree.chart.util.Rotation)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setExplodePercent(java.lang.Comparable,double)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setIgnoreNullValues(boolean)": 1064.0,
        "org.jfree.chart.plot$PiePlot#setIgnoreZeroValues(boolean)": 1064.0,
        "org.jfree.chart.plot$PiePlot#setInteriorGap(double)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setLabelBackgroundPaint(java.awt.Paint)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setLabelDistributor(org.jfree.chart.plot.AbstractPieLabelDistributor)": 1068.0,
        "org.jfree.chart.plot$PiePlot#setLabelFont(java.awt.Font)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setLabelGap(double)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)": 1036.0,
        "org.jfree.chart.plot$PiePlot#setLabelLinkMargin(double)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setLabelLinkPaint(java.awt.Paint)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setLabelLinkStroke(java.awt.Stroke)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setLabelLinksVisible(boolean)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setLabelOutlinePaint(java.awt.Paint)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setLabelOutlineStroke(java.awt.Stroke)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setLabelPadding(org.jfree.chart.util.RectangleInsets)": 1068.0,
        "org.jfree.chart.plot$PiePlot#setLabelPaint(java.awt.Paint)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setLabelShadowPaint(java.awt.Paint)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setLegendItemShape(java.awt.Shape)": 1064.0,
        "org.jfree.chart.plot$PiePlot#setLegendLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)": 1062.0,
        "org.jfree.chart.plot$PiePlot#setLegendLabelToolTipGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)": 1064.0,
        "org.jfree.chart.plot$PiePlot#setLegendLabelURLGenerator(org.jfree.chart.urls.PieURLGenerator)": 1064.0,
        "org.jfree.chart.plot$PiePlot#setMaximumLabelWidth(double)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setMinimumArcAngleToDraw(double)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setPieIndex(int)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setSectionOutlinePaint(java.lang.Comparable,java.awt.Paint)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setSectionOutlineStroke(java.lang.Comparable,java.awt.Stroke)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setSectionOutlinesVisible(boolean)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setSectionPaint(java.lang.Comparable,java.awt.Paint)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setShadowPaint(java.awt.Paint)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setShadowXOffset(double)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setShadowYOffset(double)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setSimpleLabelOffset(org.jfree.chart.util.RectangleInsets)": 1068.0,
        "org.jfree.chart.plot$PiePlot#setSimpleLabels(boolean)": 1068.0,
        "org.jfree.chart.plot$PiePlot#setStartAngle(double)": 1066.0,
        "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)": 1034.0,
        "org.jfree.chart.plot$PiePlot#setURLGenerator(org.jfree.chart.urls.PieURLGenerator)": 1058.0,
        "org.jfree.chart.plot$PiePlot#writeObject(java.io.ObjectOutputStream)": 1056.0,
        "org.jfree.chart.plot$PiePlot3D#PiePlot3D()": 1066.0,
        "org.jfree.chart.plot$PiePlot3D#PiePlot3D(org.jfree.data.general.PieDataset)": 1132090.0,
        "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 1140622.0,
        "org.jfree.chart.plot$PiePlot3D#drawSide(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Arc2D,java.awt.geom.Area,java.awt.geom.Area,java.awt.Paint,java.awt.Paint,java.awt.Stroke,boolean,boolean)": 1066.0,
        "org.jfree.chart.plot$PiePlot3D#equals(java.lang.Object)": 1060.0,
        "org.jfree.chart.plot$PiePlot3D#getDarkerSides()": 1066.0,
        "org.jfree.chart.plot$PiePlot3D#getDepthFactor()": 1068.0,
        "org.jfree.chart.plot$PiePlot3D#getPlotType()": 1068.0,
        "org.jfree.chart.plot$PiePlot3D#isAngleAtBack(double)": 1066.0,
        "org.jfree.chart.plot$PiePlot3D#isAngleAtFront(double)": 1066.0,
        "org.jfree.chart.plot$PiePlot3D#setDarkerSides(boolean)": 1066.0,
        "org.jfree.chart.plot$PiePlot3D#setDepthFactor(double)": 1066.0,
        "org.jfree.chart.plot$PiePlotState#PiePlotState(org.jfree.chart.plot.PlotRenderingInfo)": 1138486.0,
        "org.jfree.chart.plot$PiePlotState#getExplodedPieArea()": 1066.0,
        "org.jfree.chart.plot$PiePlotState#getLatestAngle()": 1066.0,
        "org.jfree.chart.plot$PiePlotState#getLinkArea()": 1064.0,
        "org.jfree.chart.plot$PiePlotState#getPassesRequired()": 1066.0,
        "org.jfree.chart.plot$PiePlotState#getPieArea()": 1066.0,
        "org.jfree.chart.plot$PiePlotState#getPieCenterX()": 1064.0,
        "org.jfree.chart.plot$PiePlotState#getPieCenterY()": 1064.0,
        "org.jfree.chart.plot$PiePlotState#getPieHRadius()": 1064.0,
        "org.jfree.chart.plot$PiePlotState#getPieWRadius()": 1064.0,
        "org.jfree.chart.plot$PiePlotState#getTotal()": 1066.0,
        "org.jfree.chart.plot$PiePlotState#setExplodedPieArea(java.awt.geom.Rectangle2D)": 1064.0,
        "org.jfree.chart.plot$PiePlotState#setLatestAngle(double)": 1064.0,
        "org.jfree.chart.plot$PiePlotState#setLinkArea(java.awt.geom.Rectangle2D)": 1064.0,
        "org.jfree.chart.plot$PiePlotState#setPassesRequired(int)": 1138486.0,
        "org.jfree.chart.plot$PiePlotState#setPieArea(java.awt.geom.Rectangle2D)": 1064.0,
        "org.jfree.chart.plot$PiePlotState#setPieCenterX(double)": 1064.0,
        "org.jfree.chart.plot$PiePlotState#setPieCenterY(double)": 1064.0,
        "org.jfree.chart.plot$PiePlotState#setPieHRadius(double)": 1064.0,
        "org.jfree.chart.plot$PiePlotState#setPieWRadius(double)": 1064.0,
        "org.jfree.chart.plot$PiePlotState#setTotal(double)": 1064.0,
        "org.jfree.chart.plot$Plot#<clinit>()": 659086.0,
        "org.jfree.chart.plot$Plot#Plot()": 659086.0,
        "org.jfree.chart.plot$Plot#addChangeListener(org.jfree.chart.event.PlotChangeListener)": 786586.0,
        "org.jfree.chart.plot$Plot#axisChanged(org.jfree.chart.event.AxisChangeEvent)": 1044.0,
        "org.jfree.chart.plot$Plot#clone()": 1018.0,
        "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 1050.0,
        "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1134220.0,
        "org.jfree.chart.plot$Plot#drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1020040.0,
        "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1048.0,
        "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 950.0,
        "org.jfree.chart.plot$Plot#equals(java.lang.Object)": 918.0,
        "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1134220.0,
        "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)": 1020040.0,
        "org.jfree.chart.plot$Plot#getBackgroundAlpha()": 1062.0,
        "org.jfree.chart.plot$Plot#getBackgroundImage()": 1062.0,
        "org.jfree.chart.plot$Plot#getBackgroundImageAlignment()": 1068.0,
        "org.jfree.chart.plot$Plot#getBackgroundImageAlpha()": 1068.0,
        "org.jfree.chart.plot$Plot#getBackgroundPaint()": 1062.0,
        "org.jfree.chart.plot$Plot#getDatasetGroup()": 1068.0,
        "org.jfree.chart.plot$Plot#getDrawingSupplier()": 920.0,
        "org.jfree.chart.plot$Plot#getForegroundAlpha()": 942.0,
        "org.jfree.chart.plot$Plot#getInsets()": 1011972.0,
        "org.jfree.chart.plot$Plot#getLegendItems()": 1066.0,
        "org.jfree.chart.plot$Plot#getNoDataMessage()": 1068.0,
        "org.jfree.chart.plot$Plot#getNoDataMessageFont()": 1068.0,
        "org.jfree.chart.plot$Plot#getNoDataMessagePaint()": 1068.0,
        "org.jfree.chart.plot$Plot#getOutlinePaint()": 1062.0,
        "org.jfree.chart.plot$Plot#getOutlineStroke()": 1062.0,
        "org.jfree.chart.plot$Plot#getParent()": 676.0,
        "org.jfree.chart.plot$Plot#getRectX(double,double,double,org.jfree.chart.util.RectangleEdge)": 1068.0,
        "org.jfree.chart.plot$Plot#getRectY(double,double,double,org.jfree.chart.util.RectangleEdge)": 1068.0,
        "org.jfree.chart.plot$Plot#getRootPlot()": 1068.0,
        "org.jfree.chart.plot$Plot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 1068.0,
        "org.jfree.chart.plot$Plot#isOutlineVisible()": 1068.0,
        "org.jfree.chart.plot$Plot#isSubplot()": 1068.0,
        "org.jfree.chart.plot$Plot#markerChanged(org.jfree.chart.event.MarkerChangeEvent)": 1068.0,
        "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)": 678730.0,
        "org.jfree.chart.plot$Plot#readObject(java.io.ObjectInputStream)": 1006.0,
        "org.jfree.chart.plot$Plot#removeChangeListener(org.jfree.chart.event.PlotChangeListener)": 1060.0,
        "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)": 952.0,
        "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)": 952.0,
        "org.jfree.chart.plot$Plot#setBackgroundAlpha(float)": 1066.0,
        "org.jfree.chart.plot$Plot#setBackgroundImage(java.awt.Image)": 1066.0,
        "org.jfree.chart.plot$Plot#setBackgroundImageAlignment(int)": 1066.0,
        "org.jfree.chart.plot$Plot#setBackgroundImageAlpha(float)": 1066.0,
        "org.jfree.chart.plot$Plot#setBackgroundPaint(java.awt.Paint)": 1058.0,
        "org.jfree.chart.plot$Plot#setDatasetGroup(org.jfree.data.general.DatasetGroup)": 1064.0,
        "org.jfree.chart.plot$Plot#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)": 1066.0,
        "org.jfree.chart.plot$Plot#setForegroundAlpha(float)": 1052.0,
        "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)": 1079490.0,
        "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets,boolean)": 1071190.0,
        "org.jfree.chart.plot$Plot#setNoDataMessage(java.lang.String)": 1066.0,
        "org.jfree.chart.plot$Plot#setNoDataMessageFont(java.awt.Font)": 1066.0,
        "org.jfree.chart.plot$Plot#setNoDataMessagePaint(java.awt.Paint)": 1066.0,
        "org.jfree.chart.plot$Plot#setOutlinePaint(java.awt.Paint)": 1066.0,
        "org.jfree.chart.plot$Plot#setOutlineStroke(java.awt.Stroke)": 1066.0,
        "org.jfree.chart.plot$Plot#setOutlineVisible(boolean)": 1066.0,
        "org.jfree.chart.plot$Plot#setParent(org.jfree.chart.plot.Plot)": 1036.0,
        "org.jfree.chart.plot$Plot#writeObject(java.io.ObjectOutputStream)": 1006.0,
        "org.jfree.chart.plot$Plot#zoom(double)": 1068.0,
        "org.jfree.chart.plot$PlotOrientation#<clinit>()": 754960.0,
        "org.jfree.chart.plot$PlotOrientation#PlotOrientation(java.lang.String)": 754960.0,
        "org.jfree.chart.plot$PlotOrientation#equals(java.lang.Object)": 1032.0,
        "org.jfree.chart.plot$PlotOrientation#hashCode()": 1068.0,
        "org.jfree.chart.plot$PlotOrientation#readResolve()": 1034.0,
        "org.jfree.chart.plot$PlotOrientation#toString()": 1032.0,
        "org.jfree.chart.plot$PolarPlot#<clinit>()": 1062.0,
        "org.jfree.chart.plot$PolarPlot#PolarPlot()": 1062.0,
        "org.jfree.chart.plot$PolarPlot#PolarPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.PolarItemRenderer)": 1062.0,
        "org.jfree.chart.plot$PolarPlot#addCornerTextItem(java.lang.String)": 1064.0,
        "org.jfree.chart.plot$PolarPlot#clearCornerTextItems()": 1068.0,
        "org.jfree.chart.plot$PolarPlot#clone()": 1066.0,
        "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 1068.0,
        "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 1068.0,
        "org.jfree.chart.plot$PolarPlot#drawAxis(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)": 1068.0,
        "org.jfree.chart.plot$PolarPlot#drawCornerTextItems(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1068.0,
        "org.jfree.chart.plot$PolarPlot#drawGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List,java.util.List)": 1068.0,
        "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)": 1062.0,
        "org.jfree.chart.plot$PolarPlot#getAngleGridlinePaint()": 1068.0,
        "org.jfree.chart.plot$PolarPlot#getAngleGridlineStroke()": 1068.0,
        "org.jfree.chart.plot$PolarPlot#getAngleLabelFont()": 1068.0,
        "org.jfree.chart.plot$PolarPlot#getAngleLabelPaint()": 1068.0,
        "org.jfree.chart.plot$PolarPlot#getAngleTickUnit()": 1068.0,
        "org.jfree.chart.plot$PolarPlot#getAxis()": 1066.0,
        "org.jfree.chart.plot$PolarPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 1064.0,
        "org.jfree.chart.plot$PolarPlot#getDataset()": 1068.0,
        "org.jfree.chart.plot$PolarPlot#getLegendItems()": 1068.0,
        "org.jfree.chart.plot$PolarPlot#getMaxRadius()": 1068.0,
        "org.jfree.chart.plot$PolarPlot#getOrientation()": 1068.0,
        "org.jfree.chart.plot$PolarPlot#getPlotType()": 1068.0,
        "org.jfree.chart.plot$PolarPlot#getRadiusGridlinePaint()": 1068.0,
        "org.jfree.chart.plot$PolarPlot#getRadiusGridlineStroke()": 1068.0,
        "org.jfree.chart.plot$PolarPlot#getRenderer()": 1068.0,
        "org.jfree.chart.plot$PolarPlot#getSeriesCount()": 1068.0,
        "org.jfree.chart.plot$PolarPlot#isAngleGridlinesVisible()": 1068.0,
        "org.jfree.chart.plot$PolarPlot#isAngleLabelsVisible()": 1068.0,
        "org.jfree.chart.plot$PolarPlot#isDomainZoomable()": 1068.0,
        "org.jfree.chart.plot$PolarPlot#isRadiusGridlinesVisible()": 1068.0,
        "org.jfree.chart.plot$PolarPlot#isRangeZoomable()": 1068.0,
        "org.jfree.chart.plot$PolarPlot#readObject(java.io.ObjectInputStream)": 1066.0,
        "org.jfree.chart.plot$PolarPlot#refreshAngleTicks()": 1068.0,
        "org.jfree.chart.plot$PolarPlot#removeCornerTextItem(java.lang.String)": 1068.0,
        "org.jfree.chart.plot$PolarPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 1068.0,
        "org.jfree.chart.plot$PolarPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)": 1068.0,
        "org.jfree.chart.plot$PolarPlot#setAngleGridlinePaint(java.awt.Paint)": 1064.0,
        "org.jfree.chart.plot$PolarPlot#setAngleGridlineStroke(java.awt.Stroke)": 1066.0,
        "org.jfree.chart.plot$PolarPlot#setAngleGridlinesVisible(boolean)": 1066.0,
        "org.jfree.chart.plot$PolarPlot#setAngleLabelFont(java.awt.Font)": 1066.0,
        "org.jfree.chart.plot$PolarPlot#setAngleLabelPaint(java.awt.Paint)": 1064.0,
        "org.jfree.chart.plot$PolarPlot#setAngleLabelsVisible(boolean)": 1066.0,
        "org.jfree.chart.plot$PolarPlot#setAngleTickUnit(org.jfree.chart.axis.TickUnit)": 1066.0,
        "org.jfree.chart.plot$PolarPlot#setAxis(org.jfree.chart.axis.ValueAxis)": 1066.0,
        "org.jfree.chart.plot$PolarPlot#setDataset(org.jfree.data.xy.XYDataset)": 1068.0,
        "org.jfree.chart.plot$PolarPlot#setRadiusGridlinePaint(java.awt.Paint)": 1064.0,
        "org.jfree.chart.plot$PolarPlot#setRadiusGridlineStroke(java.awt.Stroke)": 1066.0,
        "org.jfree.chart.plot$PolarPlot#setRadiusGridlinesVisible(boolean)": 1066.0,
        "org.jfree.chart.plot$PolarPlot#setRenderer(org.jfree.chart.renderer.PolarItemRenderer)": 1068.0,
        "org.jfree.chart.plot$PolarPlot#translateValueThetaRadiusToJava2D(double,double,java.awt.geom.Rectangle2D)": 1068.0,
        "org.jfree.chart.plot$PolarPlot#writeObject(java.io.ObjectOutputStream)": 1066.0,
        "org.jfree.chart.plot$PolarPlot#zoom(double)": 1068.0,
        "org.jfree.chart.plot$PolarPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1068.0,
        "org.jfree.chart.plot$PolarPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1068.0,
        "org.jfree.chart.plot$PolarPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 1068.0,
        "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1068.0,
        "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1068.0,
        "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 1068.0,
        "org.jfree.chart.plot$RingPlot#RingPlot()": 1066.0,
        "org.jfree.chart.plot$RingPlot#RingPlot(org.jfree.data.general.PieDataset)": 1060.0,
        "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)": 1068.0,
        "org.jfree.chart.plot$RingPlot#equals(java.lang.Object)": 1060.0,
        "org.jfree.chart.plot$RingPlot#extendLine(java.awt.geom.Line2D,double,double)": 1068.0,
        "org.jfree.chart.plot$RingPlot#getInnerSeparatorExtension()": 1068.0,
        "org.jfree.chart.plot$RingPlot#getOuterSeparatorExtension()": 1068.0,
        "org.jfree.chart.plot$RingPlot#getSectionDepth()": 1068.0,
        "org.jfree.chart.plot$RingPlot#getSeparatorPaint()": 1068.0,
        "org.jfree.chart.plot$RingPlot#getSeparatorStroke()": 1068.0,
        "org.jfree.chart.plot$RingPlot#getSeparatorsVisible()": 1068.0,
        "org.jfree.chart.plot$RingPlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)": 1068.0,
        "org.jfree.chart.plot$RingPlot#readObject(java.io.ObjectInputStream)": 1066.0,
        "org.jfree.chart.plot$RingPlot#setInnerSeparatorExtension(double)": 1066.0,
        "org.jfree.chart.plot$RingPlot#setOuterSeparatorExtension(double)": 1066.0,
        "org.jfree.chart.plot$RingPlot#setSectionDepth(double)": 1066.0,
        "org.jfree.chart.plot$RingPlot#setSeparatorPaint(java.awt.Paint)": 1062.0,
        "org.jfree.chart.plot$RingPlot#setSeparatorStroke(java.awt.Stroke)": 1066.0,
        "org.jfree.chart.plot$RingPlot#setSeparatorsVisible(boolean)": 1066.0,
        "org.jfree.chart.plot$RingPlot#writeObject(java.io.ObjectOutputStream)": 1066.0,
        "org.jfree.chart.plot$ValueMarker#ValueMarker(double)": 1010.0,
        "org.jfree.chart.plot$ValueMarker#ValueMarker(double,java.awt.Paint,java.awt.Stroke)": 1068.0,
        "org.jfree.chart.plot$ValueMarker#ValueMarker(double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)": 858.0,
        "org.jfree.chart.plot$ValueMarker#equals(java.lang.Object)": 1010.0,
        "org.jfree.chart.plot$ValueMarker#getValue()": 990.0,
        "org.jfree.chart.plot$ValueMarker#setValue(double)": 1064.0,
        "org.jfree.chart.plot$XYPlot#<clinit>()": 892.0,
        "org.jfree.chart.plot$XYPlot#XYPlot()": 1032.0,
        "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)": 892.0,
        "org.jfree.chart.plot$XYPlot#addAnnotation(org.jfree.chart.annotations.XYAnnotation)": 1052.0,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1062.0,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(org.jfree.chart.plot.Marker)": 1064.0,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1062.0,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1060.0,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(org.jfree.chart.plot.Marker)": 1062.0,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1060.0,
        "org.jfree.chart.plot$XYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1024.0,
        "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 1024.0,
        "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 1024.0,
        "org.jfree.chart.plot$XYPlot#clearAnnotations()": 1068.0,
        "org.jfree.chart.plot$XYPlot#clearDomainAxes()": 1068.0,
        "org.jfree.chart.plot$XYPlot#clearDomainMarkers()": 1064.0,
        "org.jfree.chart.plot$XYPlot#clearDomainMarkers(int)": 1064.0,
        "org.jfree.chart.plot$XYPlot#clearRangeAxes()": 1068.0,
        "org.jfree.chart.plot$XYPlot#clearRangeMarkers()": 1064.0,
        "org.jfree.chart.plot$XYPlot#clearRangeMarkers(int)": 1064.0,
        "org.jfree.chart.plot$XYPlot#clone()": 1054.0,
        "org.jfree.chart.plot$XYPlot#configureDomainAxes()": 892.0,
        "org.jfree.chart.plot$XYPlot#configureRangeAxes()": 892.0,
        "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 892.0,
        "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 1024.0,
        "org.jfree.chart.plot$XYPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 1024.0,
        "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 1024.0,
        "org.jfree.chart.plot$XYPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1024.0,
        "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)": 1068.0,
        "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 1024.0,
        "org.jfree.chart.plot$XYPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 1024.0,
        "org.jfree.chart.plot$XYPlot#drawDomainTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 1024.0,
        "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)": 1068.0,
        "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1024.0,
        "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)": 1068.0,
        "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 1024.0,
        "org.jfree.chart.plot$XYPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 1024.0,
        "org.jfree.chart.plot$XYPlot#drawRangeTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 1024.0,
        "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)": 1068.0,
        "org.jfree.chart.plot$XYPlot#drawZeroDomainBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1024.0,
        "org.jfree.chart.plot$XYPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1024.0,
        "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)": 994.0,
        "org.jfree.chart.plot$XYPlot#getAnnotations()": 1066.0,
        "org.jfree.chart.plot$XYPlot#getAxisOffset()": 1068.0,
        "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 924.0,
        "org.jfree.chart.plot$XYPlot#getDataset()": 1068.0,
        "org.jfree.chart.plot$XYPlot#getDataset(int)": 892.0,
        "org.jfree.chart.plot$XYPlot#getDatasetCount()": 1024.0,
        "org.jfree.chart.plot$XYPlot#getDatasetRenderingOrder()": 1024.0,
        "org.jfree.chart.plot$XYPlot#getDatasetsMappedToDomainAxis(java.lang.Integer)": 932.0,
        "org.jfree.chart.plot$XYPlot#getDatasetsMappedToRangeAxis(java.lang.Integer)": 926.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxis()": 1002.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxis(int)": 998.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisCount()": 1068.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()": 1024.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)": 1024.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisForDataset(int)": 1026.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)": 924.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisLocation()": 1024.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisLocation(int)": 1024.0,
        "org.jfree.chart.plot$XYPlot#getDomainCrosshairPaint()": 1068.0,
        "org.jfree.chart.plot$XYPlot#getDomainCrosshairStroke()": 1068.0,
        "org.jfree.chart.plot$XYPlot#getDomainCrosshairValue()": 1024.0,
        "org.jfree.chart.plot$XYPlot#getDomainGridlinePaint()": 1026.0,
        "org.jfree.chart.plot$XYPlot#getDomainGridlineStroke()": 1026.0,
        "org.jfree.chart.plot$XYPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)": 1026.0,
        "org.jfree.chart.plot$XYPlot#getDomainMarkers(org.jfree.chart.util.Layer)": 1068.0,
        "org.jfree.chart.plot$XYPlot#getDomainTickBandPaint()": 1024.0,
        "org.jfree.chart.plot$XYPlot#getDomainZeroBaselinePaint()": 1068.0,
        "org.jfree.chart.plot$XYPlot#getDomainZeroBaselineStroke()": 1068.0,
        "org.jfree.chart.plot$XYPlot#getFixedDomainAxisSpace()": 1068.0,
        "org.jfree.chart.plot$XYPlot#getFixedLegendItems()": 1068.0,
        "org.jfree.chart.plot$XYPlot#getFixedRangeAxisSpace()": 1068.0,
        "org.jfree.chart.plot$XYPlot#getIndexOf(org.jfree.chart.renderer.xy.XYItemRenderer)": 1068.0,
        "org.jfree.chart.plot$XYPlot#getLegendItems()": 1024.0,
        "org.jfree.chart.plot$XYPlot#getOrientation()": 1022.0,
        "org.jfree.chart.plot$XYPlot#getPlotType()": 1068.0,
        "org.jfree.chart.plot$XYPlot#getQuadrantOrigin()": 1066.0,
        "org.jfree.chart.plot$XYPlot#getQuadrantPaint(int)": 1068.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxis()": 982.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxis(int)": 978.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisCount()": 1068.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()": 1024.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)": 1024.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisForDataset(int)": 1026.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)": 924.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisLocation()": 1024.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisLocation(int)": 1024.0,
        "org.jfree.chart.plot$XYPlot#getRangeCrosshairPaint()": 1068.0,
        "org.jfree.chart.plot$XYPlot#getRangeCrosshairStroke()": 1068.0,
        "org.jfree.chart.plot$XYPlot#getRangeCrosshairValue()": 1024.0,
        "org.jfree.chart.plot$XYPlot#getRangeGridlinePaint()": 1026.0,
        "org.jfree.chart.plot$XYPlot#getRangeGridlineStroke()": 1026.0,
        "org.jfree.chart.plot$XYPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)": 1026.0,
        "org.jfree.chart.plot$XYPlot#getRangeMarkers(org.jfree.chart.util.Layer)": 1068.0,
        "org.jfree.chart.plot$XYPlot#getRangeTickBandPaint()": 1024.0,
        "org.jfree.chart.plot$XYPlot#getRangeZeroBaselinePaint()": 1068.0,
        "org.jfree.chart.plot$XYPlot#getRangeZeroBaselineStroke()": 1068.0,
        "org.jfree.chart.plot$XYPlot#getRenderer()": 966.0,
        "org.jfree.chart.plot$XYPlot#getRenderer(int)": 948.0,
        "org.jfree.chart.plot$XYPlot#getRendererForDataset(org.jfree.data.xy.XYDataset)": 934.0,
        "org.jfree.chart.plot$XYPlot#getSeriesCount()": 1068.0,
        "org.jfree.chart.plot$XYPlot#getSeriesRenderingOrder()": 1034.0,
        "org.jfree.chart.plot$XYPlot#getWeight()": 1064.0,
        "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 1068.0,
        "org.jfree.chart.plot$XYPlot#indexOf(org.jfree.data.xy.XYDataset)": 1066.0,
        "org.jfree.chart.plot$XYPlot#isDomainCrosshairLockedOnData()": 1034.0,
        "org.jfree.chart.plot$XYPlot#isDomainCrosshairVisible()": 1024.0,
        "org.jfree.chart.plot$XYPlot#isDomainGridlinesVisible()": 1026.0,
        "org.jfree.chart.plot$XYPlot#isDomainZeroBaselineVisible()": 1024.0,
        "org.jfree.chart.plot$XYPlot#isDomainZoomable()": 1066.0,
        "org.jfree.chart.plot$XYPlot#isRangeCrosshairLockedOnData()": 1034.0,
        "org.jfree.chart.plot$XYPlot#isRangeCrosshairVisible()": 1022.0,
        "org.jfree.chart.plot$XYPlot#isRangeGridlinesVisible()": 1026.0,
        "org.jfree.chart.plot$XYPlot#isRangeZeroBaselineVisible()": 1024.0,
        "org.jfree.chart.plot$XYPlot#isRangeZoomable()": 1066.0,
        "org.jfree.chart.plot$XYPlot#mapDatasetToDomainAxis(int,int)": 892.0,
        "org.jfree.chart.plot$XYPlot#mapDatasetToRangeAxis(int,int)": 892.0,
        "org.jfree.chart.plot$XYPlot#readObject(java.io.ObjectInputStream)": 1052.0,
        "org.jfree.chart.plot$XYPlot#removeAnnotation(org.jfree.chart.annotations.XYAnnotation)": 1066.0,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1068.0,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(org.jfree.chart.plot.Marker)": 1068.0,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1068.0,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1068.0,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(org.jfree.chart.plot.Marker)": 1068.0,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1068.0,
        "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)": 1024.0,
        "org.jfree.chart.plot$XYPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)": 1042.0,
        "org.jfree.chart.plot$XYPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)": 1066.0,
        "org.jfree.chart.plot$XYPlot#setDataset(int,org.jfree.data.xy.XYDataset)": 1030.0,
        "org.jfree.chart.plot$XYPlot#setDataset(org.jfree.data.xy.XYDataset)": 1054.0,
        "org.jfree.chart.plot$XYPlot#setDatasetRenderingOrder(org.jfree.chart.plot.DatasetRenderingOrder)": 1068.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxes(org.jfree.chart.axis.ValueAxis[])": 1068.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis)": 1054.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)": 1054.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxis(org.jfree.chart.axis.ValueAxis)": 1058.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 1064.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 1064.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation)": 1066.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 1068.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairLockedOnData(boolean)": 1068.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairPaint(java.awt.Paint)": 1068.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairStroke(java.awt.Stroke)": 1068.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double)": 1068.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double,boolean)": 1024.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairVisible(boolean)": 1056.0,
        "org.jfree.chart.plot$XYPlot#setDomainGridlinePaint(java.awt.Paint)": 1066.0,
        "org.jfree.chart.plot$XYPlot#setDomainGridlineStroke(java.awt.Stroke)": 1066.0,
        "org.jfree.chart.plot$XYPlot#setDomainGridlinesVisible(boolean)": 1066.0,
        "org.jfree.chart.plot$XYPlot#setDomainTickBandPaint(java.awt.Paint)": 1068.0,
        "org.jfree.chart.plot$XYPlot#setDomainZeroBaselinePaint(java.awt.Paint)": 1068.0,
        "org.jfree.chart.plot$XYPlot#setDomainZeroBaselineStroke(java.awt.Stroke)": 1068.0,
        "org.jfree.chart.plot$XYPlot#setDomainZeroBaselineVisible(boolean)": 1068.0,
        "org.jfree.chart.plot$XYPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace)": 1068.0,
        "org.jfree.chart.plot$XYPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 1068.0,
        "org.jfree.chart.plot$XYPlot#setFixedLegendItems(org.jfree.chart.LegendItemCollection)": 1068.0,
        "org.jfree.chart.plot$XYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)": 1068.0,
        "org.jfree.chart.plot$XYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 1068.0,
        "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)": 980.0,
        "org.jfree.chart.plot$XYPlot#setQuadrantOrigin(java.awt.geom.Point2D)": 1064.0,
        "org.jfree.chart.plot$XYPlot#setQuadrantPaint(int,java.awt.Paint)": 1064.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])": 1068.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)": 1060.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)": 1060.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)": 1044.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 1064.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 1052.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation)": 1054.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 1068.0,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairLockedOnData(boolean)": 1066.0,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairPaint(java.awt.Paint)": 1066.0,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairStroke(java.awt.Stroke)": 1066.0,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double)": 1066.0,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double,boolean)": 1022.0,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairVisible(boolean)": 1054.0,
        "org.jfree.chart.plot$XYPlot#setRangeGridlinePaint(java.awt.Paint)": 1066.0,
        "org.jfree.chart.plot$XYPlot#setRangeGridlineStroke(java.awt.Stroke)": 1066.0,
        "org.jfree.chart.plot$XYPlot#setRangeGridlinesVisible(boolean)": 1066.0,
        "org.jfree.chart.plot$XYPlot#setRangeTickBandPaint(java.awt.Paint)": 1068.0,
        "org.jfree.chart.plot$XYPlot#setRangeZeroBaselinePaint(java.awt.Paint)": 1066.0,
        "org.jfree.chart.plot$XYPlot#setRangeZeroBaselineStroke(java.awt.Stroke)": 1066.0,
        "org.jfree.chart.plot$XYPlot#setRangeZeroBaselineVisible(boolean)": 1066.0,
        "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer)": 996.0,
        "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)": 996.0,
        "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)": 1008.0,
        "org.jfree.chart.plot$XYPlot#setRenderers(org.jfree.chart.renderer.xy.XYItemRenderer[])": 1068.0,
        "org.jfree.chart.plot$XYPlot#setSeriesRenderingOrder(org.jfree.chart.plot.SeriesRenderingOrder)": 1068.0,
        "org.jfree.chart.plot$XYPlot#setWeight(int)": 1050.0,
        "org.jfree.chart.plot$XYPlot#writeObject(java.io.ObjectOutputStream)": 1052.0,
        "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1068.0,
        "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1068.0,
        "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 1068.0,
        "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1068.0,
        "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1068.0,
        "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 1068.0,
        "org.jfree.chart.renderer$RendererState#RendererState(org.jfree.chart.plot.PlotRenderingInfo)": 1038310.0,
        "org.jfree.chart.renderer$RendererState#getEntityCollection()": 996.0,
        "org.jfree.chart.renderer$RendererState#getInfo()": 1046.0,
        "org.jfree.chart.resources$JFreeChartResources#<clinit>()": 813436.0,
        "org.jfree.chart.resources$JFreeChartResources#JFreeChartResources()": 813436.0,
        "org.jfree.chart.resources$JFreeChartResources#getContents()": 813436.0,
        "org.jfree.chart.text$G2TextMeasurer#G2TextMeasurer(java.awt.Graphics2D)": 1034236.0,
        "org.jfree.chart.text$G2TextMeasurer#getStringWidth(java.lang.String,int,int)": 1034236.0,
        "org.jfree.chart.text$TextAnchor#<clinit>()": 313090.0,
        "org.jfree.chart.text$TextAnchor#TextAnchor(java.lang.String)": 313090.0,
        "org.jfree.chart.text$TextAnchor#equals(java.lang.Object)": 654.0,
        "org.jfree.chart.text$TextAnchor#hashCode()": 1054.0,
        "org.jfree.chart.text$TextAnchor#readResolve()": 902.0,
        "org.jfree.chart.text$TextAnchor#toString()": 1068.0,
        "org.jfree.chart.text$TextBlock#TextBlock()": 993936.0,
        "org.jfree.chart.text$TextBlock#addLine(java.lang.String,java.awt.Font,java.awt.Paint)": 1001932.0,
        "org.jfree.chart.text$TextBlock#addLine(org.jfree.chart.text.TextLine)": 997930.0,
        "org.jfree.chart.text$TextBlock#calculateBounds(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)": 1004.0,
        "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)": 1013986.0,
        "org.jfree.chart.text$TextBlock#calculateOffsets(org.jfree.chart.text.TextBlockAnchor,double,double)": 1013986.0,
        "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor)": 1013986.0,
        "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)": 1013986.0,
        "org.jfree.chart.text$TextBlock#equals(java.lang.Object)": 1060.0,
        "org.jfree.chart.text$TextBlock#getLastLine()": 1066.0,
        "org.jfree.chart.text$TextBlock#getLineAlignment()": 1068.0,
        "org.jfree.chart.text$TextBlock#getLines()": 1068.0,
        "org.jfree.chart.text$TextBlock#hashCode()": 1066.0,
        "org.jfree.chart.text$TextBlock#setLineAlignment(org.jfree.chart.util.HorizontalAlignment)": 1079490.0,
        "org.jfree.chart.text$TextBlockAnchor#<clinit>()": 842572.0,
        "org.jfree.chart.text$TextBlockAnchor#TextBlockAnchor(java.lang.String)": 842572.0,
        "org.jfree.chart.text$TextBlockAnchor#equals(java.lang.Object)": 1026.0,
        "org.jfree.chart.text$TextBlockAnchor#hashCode()": 1062.0,
        "org.jfree.chart.text$TextBlockAnchor#readResolve()": 1040.0,
        "org.jfree.chart.text$TextBlockAnchor#toString()": 1068.0,
        "org.jfree.chart.text$TextFragment#<clinit>()": 997930.0,
        "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String)": 1068.0,
        "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font)": 1064.0,
        "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font,java.awt.Paint)": 997930.0,
        "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font,java.awt.Paint,float)": 997930.0,
        "org.jfree.chart.text$TextFragment#calculateBaselineOffset(java.awt.Graphics2D,org.jfree.chart.text.TextAnchor)": 1013986.0,
        "org.jfree.chart.text$TextFragment#calculateDimensions(java.awt.Graphics2D)": 1013986.0,
        "org.jfree.chart.text$TextFragment#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)": 1013986.0,
        "org.jfree.chart.text$TextFragment#equals(java.lang.Object)": 1062.0,
        "org.jfree.chart.text$TextFragment#getBaselineOffset()": 1068.0,
        "org.jfree.chart.text$TextFragment#getFont()": 1066.0,
        "org.jfree.chart.text$TextFragment#getPaint()": 1066.0,
        "org.jfree.chart.text$TextFragment#getText()": 1066.0,
        "org.jfree.chart.text$TextFragment#hashCode()": 1066.0,
        "org.jfree.chart.text$TextFragment#readObject(java.io.ObjectInputStream)": 1064.0,
        "org.jfree.chart.text$TextFragment#writeObject(java.io.ObjectOutputStream)": 1064.0,
        "org.jfree.chart.text$TextLine#TextLine()": 1068.0,
        "org.jfree.chart.text$TextLine#TextLine(java.lang.String)": 1064.0,
        "org.jfree.chart.text$TextLine#TextLine(java.lang.String,java.awt.Font)": 1064.0,
        "org.jfree.chart.text$TextLine#TextLine(java.lang.String,java.awt.Font,java.awt.Paint)": 1001932.0,
        "org.jfree.chart.text$TextLine#addFragment(org.jfree.chart.text.TextFragment)": 1066.0,
        "org.jfree.chart.text$TextLine#calculateBaselineOffset(java.awt.Graphics2D,org.jfree.chart.text.TextAnchor)": 1013986.0,
        "org.jfree.chart.text$TextLine#calculateDimensions(java.awt.Graphics2D)": 1013986.0,
        "org.jfree.chart.text$TextLine#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)": 1013986.0,
        "org.jfree.chart.text$TextLine#equals(java.lang.Object)": 1064.0,
        "org.jfree.chart.text$TextLine#getFirstTextFragment()": 1068.0,
        "org.jfree.chart.text$TextLine#getLastTextFragment()": 1066.0,
        "org.jfree.chart.text$TextLine#hashCode()": 1066.0,
        "org.jfree.chart.text$TextLine#removeFragment(org.jfree.chart.text.TextFragment)": 1066.0,
        "org.jfree.chart.text$TextUtilities#<clinit>()": 1005942.0,
        "org.jfree.chart.text$TextUtilities#TextUtilities()": 1068.0,
        "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)": 1068.0,
        "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)": 1068.0,
        "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint)": 960.0,
        "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)": 1034236.0,
        "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,org.jfree.chart.text.TextMeasurer)": 1079490.0,
        "org.jfree.chart.text$TextUtilities#deriveRotationAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)": 950.0,
        "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)": 1011972.0,
        "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor,java.awt.geom.Rectangle2D)": 1066.0,
        "org.jfree.chart.text$TextUtilities#drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor)": 1066.0,
        "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,double,float,float)": 1068.0,
        "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)": 1011972.0,
        "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,float,float)": 1013986.0,
        "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)": 950.0,
        "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)": 1011972.0,
        "org.jfree.chart.text$TextUtilities#getUseFontMetricsGetStringBounds()": 1068.0,
        "org.jfree.chart.text$TextUtilities#isUseDrawRotatedStringWorkaround()": 1068.0,
        "org.jfree.chart.text$TextUtilities#nextLineBreak(java.lang.String,int,float,java.text.BreakIterator,org.jfree.chart.text.TextMeasurer)": 1034236.0,
        "org.jfree.chart.text$TextUtilities#setUseDrawRotatedStringWorkaround(boolean)": 1068.0,
        "org.jfree.chart.text$TextUtilities#setUseFontMetricsGetStringBounds(boolean)": 1068.0,
        "org.jfree.chart.title$LegendTitle#<clinit>()": 855480.0,
        "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource)": 855480.0,
        "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)": 855480.0,
        "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1013986.0,
        "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)": 966.0,
        "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1068.0,
        "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 1013986.0,
        "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)": 1038.0,
        "org.jfree.chart.title$LegendTitle#fetchLegendItems()": 1013986.0,
        "org.jfree.chart.title$LegendTitle#getBackgroundPaint()": 1068.0,
        "org.jfree.chart.title$LegendTitle#getItemContainer()": 1068.0,
        "org.jfree.chart.title$LegendTitle#getItemFont()": 1068.0,
        "org.jfree.chart.title$LegendTitle#getItemLabelPadding()": 1068.0,
        "org.jfree.chart.title$LegendTitle#getItemPaint()": 1068.0,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicAnchor()": 966.0,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicEdge()": 1068.0,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicLocation()": 966.0,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicPadding()": 1068.0,
        "org.jfree.chart.title$LegendTitle#getSources()": 1064.0,
        "org.jfree.chart.title$LegendTitle#readObject(java.io.ObjectInputStream)": 1050.0,
        "org.jfree.chart.title$LegendTitle#setBackgroundPaint(java.awt.Paint)": 859186.0,
        "org.jfree.chart.title$LegendTitle#setItemFont(java.awt.Font)": 1066.0,
        "org.jfree.chart.title$LegendTitle#setItemLabelPadding(org.jfree.chart.util.RectangleInsets)": 1068.0,
        "org.jfree.chart.title$LegendTitle#setItemPaint(java.awt.Paint)": 1068.0,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicAnchor(org.jfree.chart.util.RectangleAnchor)": 1066.0,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicEdge(org.jfree.chart.util.RectangleEdge)": 1066.0,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicLocation(org.jfree.chart.util.RectangleAnchor)": 1066.0,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicPadding(org.jfree.chart.util.RectangleInsets)": 1068.0,
        "org.jfree.chart.title$LegendTitle#setSources(org.jfree.chart.LegendItemSource[])": 1068.0,
        "org.jfree.chart.title$LegendTitle#setWrapper(org.jfree.chart.block.BlockContainer)": 1068.0,
        "org.jfree.chart.title$LegendTitle#writeObject(java.io.ObjectOutputStream)": 1050.0,
        "org.jfree.chart.title$TextTitle#<clinit>()": 896686.0,
        "org.jfree.chart.title$TextTitle#TextTitle()": 1058.0,
        "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String)": 1040.0,
        "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)": 923412.0,
        "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font,java.awt.Paint,org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)": 896686.0,
        "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1079490.0,
        "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)": 1079490.0,
        "org.jfree.chart.title$TextTitle#clone()": 1064.0,
        "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1068.0,
        "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 1079490.0,
        "org.jfree.chart.title$TextTitle#drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1079490.0,
        "org.jfree.chart.title$TextTitle#drawVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1068.0,
        "org.jfree.chart.title$TextTitle#equals(java.lang.Object)": 1018.0,
        "org.jfree.chart.title$TextTitle#getBackgroundPaint()": 1068.0,
        "org.jfree.chart.title$TextTitle#getExpandToFitSpace()": 1068.0,
        "org.jfree.chart.title$TextTitle#getFont()": 1068.0,
        "org.jfree.chart.title$TextTitle#getPaint()": 1068.0,
        "org.jfree.chart.title$TextTitle#getText()": 1068.0,
        "org.jfree.chart.title$TextTitle#getTextAlignment()": 1068.0,
        "org.jfree.chart.title$TextTitle#getToolTipText()": 1068.0,
        "org.jfree.chart.title$TextTitle#getURLText()": 1068.0,
        "org.jfree.chart.title$TextTitle#hashCode()": 1062.0,
        "org.jfree.chart.title$TextTitle#readObject(java.io.ObjectInputStream)": 1044.0,
        "org.jfree.chart.title$TextTitle#setBackgroundPaint(java.awt.Paint)": 1064.0,
        "org.jfree.chart.title$TextTitle#setExpandToFitSpace(boolean)": 1068.0,
        "org.jfree.chart.title$TextTitle#setFont(java.awt.Font)": 1062.0,
        "org.jfree.chart.title$TextTitle#setPaint(java.awt.Paint)": 1064.0,
        "org.jfree.chart.title$TextTitle#setText(java.lang.String)": 1062.0,
        "org.jfree.chart.title$TextTitle#setTextAlignment(org.jfree.chart.util.HorizontalAlignment)": 1066.0,
        "org.jfree.chart.title$TextTitle#setToolTipText(java.lang.String)": 1068.0,
        "org.jfree.chart.title$TextTitle#setURLText(java.lang.String)": 1068.0,
        "org.jfree.chart.title$TextTitle#writeObject(java.io.ObjectOutputStream)": 1044.0,
        "org.jfree.chart.title$Title#<clinit>()": 781270.0,
        "org.jfree.chart.title$Title#Title()": 840736.0,
        "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)": 1068.0,
        "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)": 781270.0,
        "org.jfree.chart.title$Title#addChangeListener(org.jfree.chart.event.TitleChangeListener)": 827940.0,
        "org.jfree.chart.title$Title#clone()": 1056.0,
        "org.jfree.chart.title$Title#equals(java.lang.Object)": 996.0,
        "org.jfree.chart.title$Title#getHorizontalAlignment()": 1011972.0,
        "org.jfree.chart.title$Title#getNotify()": 1068.0,
        "org.jfree.chart.title$Title#getPosition()": 1011972.0,
        "org.jfree.chart.title$Title#getVerticalAlignment()": 1068.0,
        "org.jfree.chart.title$Title#hashCode()": 1054.0,
        "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)": 851782.0,
        "org.jfree.chart.title$Title#readObject(java.io.ObjectInputStream)": 1040.0,
        "org.jfree.chart.title$Title#removeChangeListener(org.jfree.chart.event.TitleChangeListener)": 1066.0,
        "org.jfree.chart.title$Title#setHorizontalAlignment(org.jfree.chart.util.HorizontalAlignment)": 1066.0,
        "org.jfree.chart.title$Title#setNotify(boolean)": 1068.0,
        "org.jfree.chart.title$Title#setPosition(org.jfree.chart.util.RectangleEdge)": 861042.0,
        "org.jfree.chart.title$Title#setVerticalAlignment(org.jfree.chart.util.VerticalAlignment)": 1066.0,
        "org.jfree.chart.title$Title#writeObject(java.io.ObjectOutputStream)": 1040.0,
        "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo()": 813436.0,
        "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 1068.0,
        "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 1068.0,
        "org.jfree.chart.ui$BasicProjectInfo#addLibrary(org.jfree.chart.ui.Library)": 1068.0,
        "org.jfree.chart.ui$BasicProjectInfo#addOptionalLibrary(java.lang.String)": 1068.0,
        "org.jfree.chart.ui$BasicProjectInfo#addOptionalLibrary(org.jfree.chart.ui.Library)": 1068.0,
        "org.jfree.chart.ui$BasicProjectInfo#getCopyright()": 1068.0,
        "org.jfree.chart.ui$BasicProjectInfo#getLibraries()": 1068.0,
        "org.jfree.chart.ui$BasicProjectInfo#getOptionalLibraries()": 1068.0,
        "org.jfree.chart.ui$BasicProjectInfo#setCopyright(java.lang.String)": 813436.0,
        "org.jfree.chart.ui$BasicProjectInfo#setInfo(java.lang.String)": 813436.0,
        "org.jfree.chart.ui$BasicProjectInfo#setLicenceName(java.lang.String)": 813436.0,
        "org.jfree.chart.ui$BasicProjectInfo#setName(java.lang.String)": 813436.0,
        "org.jfree.chart.ui$BasicProjectInfo#setVersion(java.lang.String)": 813436.0,
        "org.jfree.chart.ui$Contributor#Contributor(java.lang.String,java.lang.String)": 813436.0,
        "org.jfree.chart.ui$Contributor#getEmail()": 1068.0,
        "org.jfree.chart.ui$Contributor#getName()": 1068.0,
        "org.jfree.chart.ui$Library#Library()": 813436.0,
        "org.jfree.chart.ui$Library#Library(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 1068.0,
        "org.jfree.chart.ui$Library#equals(java.lang.Object)": 1068.0,
        "org.jfree.chart.ui$Library#getInfo()": 1068.0,
        "org.jfree.chart.ui$Library#getLicenceName()": 1068.0,
        "org.jfree.chart.ui$Library#getName()": 1068.0,
        "org.jfree.chart.ui$Library#getVersion()": 1068.0,
        "org.jfree.chart.ui$Library#hashCode()": 1068.0,
        "org.jfree.chart.ui$Library#setInfo(java.lang.String)": 813436.0,
        "org.jfree.chart.ui$Library#setLicenceName(java.lang.String)": 813436.0,
        "org.jfree.chart.ui$Library#setName(java.lang.String)": 813436.0,
        "org.jfree.chart.ui$Library#setVersion(java.lang.String)": 813436.0,
        "org.jfree.chart.ui$Licences#Licences()": 813436.0,
        "org.jfree.chart.ui$Licences#getGPL()": 1068.0,
        "org.jfree.chart.ui$Licences#getInstance()": 813436.0,
        "org.jfree.chart.ui$Licences#getLGPL()": 813436.0,
        "org.jfree.chart.ui$ProjectInfo#ProjectInfo()": 813436.0,
        "org.jfree.chart.ui$ProjectInfo#ProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.awt.Image,java.lang.String,java.lang.String,java.lang.String)": 1068.0,
        "org.jfree.chart.ui$ProjectInfo#getContributors()": 1068.0,
        "org.jfree.chart.ui$ProjectInfo#getLicenceText()": 1068.0,
        "org.jfree.chart.ui$ProjectInfo#getLogo()": 1050.0,
        "org.jfree.chart.ui$ProjectInfo#setContributors(java.util.List)": 813436.0,
        "org.jfree.chart.ui$ProjectInfo#setLicenceText(java.lang.String)": 813436.0,
        "org.jfree.chart.ui$ProjectInfo#setLogo(java.awt.Image)": 813436.0,
        "org.jfree.chart.ui$ProjectInfo#toString()": 1068.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList()": 337072.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int)": 337072.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int,int)": 337072.0,
        "org.jfree.chart.util$AbstractObjectList#clear()": 1068.0,
        "org.jfree.chart.util$AbstractObjectList#clone()": 924.0,
        "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)": 554.0,
        "org.jfree.chart.util$AbstractObjectList#get(int)": 608.0,
        "org.jfree.chart.util$AbstractObjectList#hashCode()": 974.0,
        "org.jfree.chart.util$AbstractObjectList#indexOf(java.lang.Object)": 728.0,
        "org.jfree.chart.util$AbstractObjectList#readObject(java.io.ObjectInputStream)": 914.0,
        "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)": 602.0,
        "org.jfree.chart.util$AbstractObjectList#size()": 224.0,
        "org.jfree.chart.util$AbstractObjectList#writeObject(java.io.ObjectOutputStream)": 914.0,
        "org.jfree.chart.util$HorizontalAlignment#<clinit>()": 749752.0,
        "org.jfree.chart.util$HorizontalAlignment#HorizontalAlignment(java.lang.String)": 749752.0,
        "org.jfree.chart.util$HorizontalAlignment#equals(java.lang.Object)": 1030.0,
        "org.jfree.chart.util$HorizontalAlignment#hashCode()": 1054.0,
        "org.jfree.chart.util$HorizontalAlignment#readResolve()": 1030.0,
        "org.jfree.chart.util$HorizontalAlignment#toString()": 1068.0,
        "org.jfree.chart.util$ObjectList#ObjectList()": 357132.0,
        "org.jfree.chart.util$ObjectList#ObjectList(int)": 1068.0,
        "org.jfree.chart.util$ObjectList#get(int)": 662.0,
        "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)": 728.0,
        "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)": 660.0,
        "org.jfree.chart.util$ObjectUtilities#<clinit>()": 108160.0,
        "org.jfree.chart.util$ObjectUtilities#ObjectUtilities()": 1068.0,
        "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)": 844.0,
        "org.jfree.chart.util$ObjectUtilities#convertName(java.lang.String,java.lang.Class)": 1068.0,
        "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)": 960.0,
        "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)": -278.0,
        "org.jfree.chart.util$ObjectUtilities#getClassLoader()": 1068.0,
        "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)": 1005942.0,
        "org.jfree.chart.util$ObjectUtilities#getClassLoaderSource()": 1068.0,
        "org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)": 1068.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceAsStream(java.lang.String,java.lang.Class)": 1068.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)": 1068.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)": 1068.0,
        "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)": 1050.0,
        "org.jfree.chart.util$ObjectUtilities#isJDK14()": 1005942.0,
        "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class)": 1068.0,
        "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class,java.lang.Class)": 1068.0,
        "org.jfree.chart.util$ObjectUtilities#parseVersions(java.lang.String)": 1068.0,
        "org.jfree.chart.util$ObjectUtilities#setClassLoader(java.lang.ClassLoader)": 1068.0,
        "org.jfree.chart.util$ObjectUtilities#setClassLoaderSource(java.lang.String)": 1068.0,
        "org.jfree.chart.util$RectangleAnchor#<clinit>()": 670510.0,
        "org.jfree.chart.util$RectangleAnchor#RectangleAnchor(java.lang.String)": 670510.0,
        "org.jfree.chart.util$RectangleAnchor#coordinates(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleAnchor)": 966.0,
        "org.jfree.chart.util$RectangleAnchor#createRectangle(org.jfree.chart.util.Size2D,double,double,org.jfree.chart.util.RectangleAnchor)": 1064.0,
        "org.jfree.chart.util$RectangleAnchor#equals(java.lang.Object)": 978.0,
        "org.jfree.chart.util$RectangleAnchor#hashCode()": 1064.0,
        "org.jfree.chart.util$RectangleAnchor#readResolve()": 1014.0,
        "org.jfree.chart.util$RectangleAnchor#toString()": 1068.0,
        "org.jfree.chart.util$RectangleEdge#<clinit>()": 767182.0,
        "org.jfree.chart.util$RectangleEdge#RectangleEdge(java.lang.String)": 767182.0,
        "org.jfree.chart.util$RectangleEdge#coordinate(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1068.0,
        "org.jfree.chart.util$RectangleEdge#equals(java.lang.Object)": 972.0,
        "org.jfree.chart.util$RectangleEdge#hashCode()": 1054.0,
        "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)": 944.0,
        "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)": 1001932.0,
        "org.jfree.chart.util$RectangleEdge#opposite(org.jfree.chart.util.RectangleEdge)": 1068.0,
        "org.jfree.chart.util$RectangleEdge#readResolve()": 1040.0,
        "org.jfree.chart.util$RectangleEdge#toString()": 1068.0,
        "org.jfree.chart.util$RectangleInsets#<clinit>()": 415600.0,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets()": 1068.0,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)": 440490.0,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets(org.jfree.chart.util.UnitType,double,double,double,double)": 415600.0,
        "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)": 1009960.0,
        "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)": 1007950.0,
        "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)": 1009960.0,
        "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)": 1007950.0,
        "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)": 1009960.0,
        "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)": 1007950.0,
        "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)": 1009960.0,
        "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)": 1007950.0,
        "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)": 1068.0,
        "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D)": 1068.0,
        "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)": 1068.0,
        "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D)": 950.0,
        "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)": 950.0,
        "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)": 842572.0,
        "org.jfree.chart.util$RectangleInsets#extendHeight(double)": 1009960.0,
        "org.jfree.chart.util$RectangleInsets#extendWidth(double)": 1009960.0,
        "org.jfree.chart.util$RectangleInsets#getBottom()": 950.0,
        "org.jfree.chart.util$RectangleInsets#getLeft()": 950.0,
        "org.jfree.chart.util$RectangleInsets#getRight()": 950.0,
        "org.jfree.chart.util$RectangleInsets#getTop()": 950.0,
        "org.jfree.chart.util$RectangleInsets#getUnitType()": 1068.0,
        "org.jfree.chart.util$RectangleInsets#hashCode()": 1068.0,
        "org.jfree.chart.util$RectangleInsets#toString()": 1068.0,
        "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)": 1011972.0,
        "org.jfree.chart.util$RectangleInsets#trimHeight(double)": 1011972.0,
        "org.jfree.chart.util$RectangleInsets#trimWidth(double)": 1011972.0,
        "org.jfree.chart.util$Rotation#<clinit>()": 1060860.0,
        "org.jfree.chart.util$Rotation#Rotation(java.lang.String,double)": 1060860.0,
        "org.jfree.chart.util$Rotation#equals(java.lang.Object)": 1050.0,
        "org.jfree.chart.util$Rotation#getFactor()": 1062.0,
        "org.jfree.chart.util$Rotation#hashCode()": 1068.0,
        "org.jfree.chart.util$Rotation#readResolve()": 1054.0,
        "org.jfree.chart.util$Rotation#toString()": 1068.0,
        "org.jfree.chart.util$Size2D#Size2D()": 1003936.0,
        "org.jfree.chart.util$Size2D#Size2D(double,double)": 1001932.0,
        "org.jfree.chart.util$Size2D#clone()": 1068.0,
        "org.jfree.chart.util$Size2D#equals(java.lang.Object)": 1068.0,
        "org.jfree.chart.util$Size2D#getHeight()": 1007950.0,
        "org.jfree.chart.util$Size2D#getWidth()": 1009960.0,
        "org.jfree.chart.util$Size2D#setHeight(double)": 1068.0,
        "org.jfree.chart.util$Size2D#setWidth(double)": 1068.0,
        "org.jfree.chart.util$Size2D#toString()": 1068.0,
        "org.jfree.chart.util$UnitType#<clinit>()": 407890.0,
        "org.jfree.chart.util$UnitType#UnitType(java.lang.String)": 407890.0,
        "org.jfree.chart.util$UnitType#equals(java.lang.Object)": 942.0,
        "org.jfree.chart.util$UnitType#hashCode()": 1068.0,
        "org.jfree.chart.util$UnitType#readResolve()": 942.0,
        "org.jfree.chart.util$UnitType#toString()": 1068.0,
        "org.jfree.chart.util$VerticalAlignment#<clinit>()": 767182.0,
        "org.jfree.chart.util$VerticalAlignment#VerticalAlignment(java.lang.String)": 767182.0,
        "org.jfree.chart.util$VerticalAlignment#equals(java.lang.Object)": 1036.0,
        "org.jfree.chart.util$VerticalAlignment#hashCode()": 1054.0,
        "org.jfree.chart.util$VerticalAlignment#readResolve()": 1036.0,
        "org.jfree.chart.util$VerticalAlignment#toString()": 1068.0,
        "org.jfree.data$Range#Range(double,double)": 594142.0,
        "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)": 748.0,
        "org.jfree.data$Range#constrain(double)": 1062.0,
        "org.jfree.data$Range#contains(double)": 926.0,
        "org.jfree.data$Range#equals(java.lang.Object)": 898.0,
        "org.jfree.data$Range#expand(org.jfree.data.Range,double,double)": 1066.0,
        "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)": 1014.0,
        "org.jfree.data$Range#getCentralValue()": 1068.0,
        "org.jfree.data$Range#getLength()": 1060.0,
        "org.jfree.data$Range#getLowerBound()": 730810.0,
        "org.jfree.data$Range#getUpperBound()": 730810.0,
        "org.jfree.data$Range#hashCode()": 1068.0,
        "org.jfree.data$Range#intersects(double,double)": 1060.0,
        "org.jfree.data$Range#shift(org.jfree.data.Range,double)": 1068.0,
        "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)": 1068.0,
        "org.jfree.data$Range#shiftWithNoZeroCrossing(double,double)": 1068.0,
        "org.jfree.data$Range#toString()": 1068.0,
        "org.jfree.data.general$DatasetUtilities#DatasetUtilities()": 1068.0,
        "org.jfree.data.general$DatasetUtilities#calculatePieDatasetTotal(org.jfree.data.general.PieDataset)": 1132090.0,
        "org.jfree.data.general$DatasetUtilities#calculateStackTotal(org.jfree.data.xy.TableXYDataset,int)": 1068.0,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.Comparable,org.jfree.data.KeyedValues)": 1068.0,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.Comparable[],java.lang.Comparable[],double[][])": 1064.0,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.String,java.lang.String,double[][])": 1068.0,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.String,java.lang.String,java.lang.Number[][])": 998.0,
        "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.general.PieDataset,java.lang.Comparable,double)": 1066.0,
        "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.general.PieDataset,java.lang.Comparable,double,int)": 1066.0,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForColumn(org.jfree.data.category.CategoryDataset,int)": 1068.0,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForColumn(org.jfree.data.category.CategoryDataset,java.lang.Comparable)": 1068.0,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForRow(org.jfree.data.category.CategoryDataset,int)": 1068.0,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForRow(org.jfree.data.category.CategoryDataset,java.lang.Comparable)": 1068.0,
        "org.jfree.data.general$DatasetUtilities#findCumulativeRangeBounds(org.jfree.data.category.CategoryDataset)": 1058.0,
        "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset)": 1022.0,
        "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)": 930.0,
        "org.jfree.data.general$DatasetUtilities#findMaximumDomainValue(org.jfree.data.xy.XYDataset)": 1066.0,
        "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.category.CategoryDataset)": 1062.0,
        "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.xy.XYDataset)": 1066.0,
        "org.jfree.data.general$DatasetUtilities#findMaximumStackedRangeValue(org.jfree.data.category.CategoryDataset)": 1066.0,
        "org.jfree.data.general$DatasetUtilities#findMinimumDomainValue(org.jfree.data.xy.XYDataset)": 1066.0,
        "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.category.CategoryDataset)": 1064.0,
        "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.xy.XYDataset)": 1066.0,
        "org.jfree.data.general$DatasetUtilities#findMinimumStackedRangeValue(org.jfree.data.category.CategoryDataset)": 1068.0,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset)": 924.0,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 924.0,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset)": 1020.0,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)": 938.0,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset)": 1048.0,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)": 1040.0,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)": 1064.0,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.xy.TableXYDataset)": 1056.0,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)": 1056.0,
        "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.category.CategoryDataset)": 994.0,
        "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.general.PieDataset)": 1064.0,
        "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.xy.XYDataset)": 1022.0,
        "org.jfree.data.general$DatasetUtilities#iterateCategoryRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 958.0,
        "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset)": 1066.0,
        "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)": 930.0,
        "org.jfree.data.general$DatasetUtilities#iterateXYRangeBounds(org.jfree.data.xy.XYDataset)": 934.0,
        "org.jfree.data.general$DatasetUtilities#sampleFunction2D(org.jfree.data.function.Function2D,double,double,int,java.lang.Comparable)": 1068.0
    },
    "Chart-16": {
        "org.jfree.data$DataUtilities#DataUtilities()": 524.0,
        "org.jfree.data$DataUtilities#calculateColumnTotal(org.jfree.data.Values2D,int)": 520.0,
        "org.jfree.data$DataUtilities#calculateRowTotal(org.jfree.data.Values2D,int)": 522.0,
        "org.jfree.data$DataUtilities#createNumberArray(double[])": 506.0,
        "org.jfree.data$DataUtilities#createNumberArray2D(double[][])": 268302.0,
        "org.jfree.data$DataUtilities#getCumulativePercentages(org.jfree.data.KeyedValues)": 524.0,
        "org.jfree.data$UnknownKeyException#UnknownKeyException(java.lang.String)": 492.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#DefaultIntervalCategoryDataset(double[][],double[][])": 269340.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#DefaultIntervalCategoryDataset(java.lang.Comparable[],java.lang.Comparable[],java.lang.Number[][],java.lang.Number[][])": 269340.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#DefaultIntervalCategoryDataset(java.lang.Number[][],java.lang.Number[][])": 269340.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#DefaultIntervalCategoryDataset(java.lang.String[],java.lang.Number[][],java.lang.Number[][])": 524.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#clone()": 281952.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#clone(java.lang.Number[][])": 522.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#equal(java.lang.Number[][],java.lang.Number[][])": 518.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#equals(java.lang.Object)": 518.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#generateKeys(int,java.lang.String)": 508.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getCategoryCount()": 514.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getCategoryIndex(java.lang.Comparable)": 278772.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getColumnCount()": 280890.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getColumnIndex(java.lang.Comparable)": 279830.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getColumnKey(int)": 522.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getColumnKeys()": 522.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getEndValue(int,int)": 518.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getEndValue(java.lang.Comparable,java.lang.Comparable)": 520.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getRowCount()": 520.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getRowIndex(java.lang.Comparable)": 283016.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getRowKey(int)": 522.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getRowKeys()": 522.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getSeriesCount()": 508.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getSeriesIndex(java.lang.Comparable)": 279830.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getSeriesKey(int)": 524.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getStartValue(int,int)": 518.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getStartValue(java.lang.Comparable,java.lang.Comparable)": 520.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getValue(int,int)": 522.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getValue(java.lang.Comparable,java.lang.Comparable)": 522.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#setCategoryKeys(java.lang.Comparable[])": 283016.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#setEndValue(int,java.lang.Comparable,java.lang.Number)": 522.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#setSeriesKeys(java.lang.Comparable[])": 522.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#setStartValue(int,java.lang.Comparable,java.lang.Number)": 520.0,
        "org.jfree.data.general$AbstractDataset#AbstractDataset()": 2322.0,
        "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)": 48.0,
        "org.jfree.data.general$AbstractDataset#clone()": 247962.0,
        "org.jfree.data.general$AbstractDataset#fireDatasetChanged()": -172.0,
        "org.jfree.data.general$AbstractDataset#getGroup()": 520.0,
        "org.jfree.data.general$AbstractDataset#hasListener(java.util.EventListener)": 520.0,
        "org.jfree.data.general$AbstractDataset#notifyListeners(org.jfree.data.general.DatasetChangeEvent)": -254.0,
        "org.jfree.data.general$AbstractDataset#readObject(java.io.ObjectInputStream)": 406.0,
        "org.jfree.data.general$AbstractDataset#removeChangeListener(org.jfree.data.general.DatasetChangeListener)": 484.0,
        "org.jfree.data.general$AbstractDataset#setGroup(org.jfree.data.general.DatasetGroup)": 524.0,
        "org.jfree.data.general$AbstractDataset#validateObject()": 406.0,
        "org.jfree.data.general$AbstractDataset#writeObject(java.io.ObjectOutputStream)": 406.0,
        "org.jfree.data.general$AbstractSeriesDataset#AbstractSeriesDataset()": 71016.0,
        "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)": 490.0,
        "org.jfree.data.general$AbstractSeriesDataset#seriesChanged(org.jfree.data.general.SeriesChangeEvent)": 516.0,
        "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)": -394.0,
        "org.jfree.data.general$DatasetChangeEvent#getDataset()": 524.0,
        "org.jfree.data.general$DatasetGroup#DatasetGroup()": 2216.0,
        "org.jfree.data.general$DatasetGroup#DatasetGroup(java.lang.String)": 524.0,
        "org.jfree.data.general$DatasetGroup#clone()": 524.0,
        "org.jfree.data.general$DatasetGroup#equals(java.lang.Object)": 522.0,
        "org.jfree.data.general$DatasetGroup#getID()": 524.0,
        "org.jfree.data.resources$DataPackageResources#<clinit>()": 269340.0,
        "org.jfree.data.resources$DataPackageResources#DataPackageResources()": 269340.0,
        "org.jfree.data.resources$DataPackageResources#getContents()": 508.0
    },
    "Chart-17": {
        "org.jfree.chart.util$ObjectUtilities#<clinit>()": -340.0,
        "org.jfree.chart.util$ObjectUtilities#ObjectUtilities()": 1122.0,
        "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)": 904.0,
        "org.jfree.chart.util$ObjectUtilities#convertName(java.lang.String,java.lang.Class)": 1122.0,
        "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)": 1020.0,
        "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)": -212.0,
        "org.jfree.chart.util$ObjectUtilities#getClassLoader()": 1122.0,
        "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)": 994.0,
        "org.jfree.chart.util$ObjectUtilities#getClassLoaderSource()": 1122.0,
        "org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)": 1122.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceAsStream(java.lang.String,java.lang.Class)": 1122.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)": 1122.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)": 1122.0,
        "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)": 1014.0,
        "org.jfree.chart.util$ObjectUtilities#isJDK14()": 994.0,
        "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class)": 1122.0,
        "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class,java.lang.Class)": 1122.0,
        "org.jfree.chart.util$ObjectUtilities#parseVersions(java.lang.String)": 1122.0,
        "org.jfree.chart.util$ObjectUtilities#setClassLoader(java.lang.ClassLoader)": 1122.0,
        "org.jfree.chart.util$ObjectUtilities#setClassLoaderSource(java.lang.String)": 1122.0,
        "org.jfree.data.general$Series#Series(java.lang.Comparable)": 734182.0,
        "org.jfree.data.general$Series#Series(java.lang.Comparable,java.lang.String)": 734182.0,
        "org.jfree.data.general$Series#addChangeListener(org.jfree.data.general.SeriesChangeListener)": 806.0,
        "org.jfree.data.general$Series#addPropertyChangeListener(java.beans.PropertyChangeListener)": 1122.0,
        "org.jfree.data.general$Series#clone()": 1078.0,
        "org.jfree.data.general$Series#equals(java.lang.Object)": 974.0,
        "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)": 1120.0,
        "org.jfree.data.general$Series#fireSeriesChanged()": 768882.0,
        "org.jfree.data.general$Series#getDescription()": 986.0,
        "org.jfree.data.general$Series#getKey()": 880.0,
        "org.jfree.data.general$Series#getNotify()": 1122.0,
        "org.jfree.data.general$Series#hashCode()": 1116.0,
        "org.jfree.data.general$Series#isEmpty()": 1122.0,
        "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)": 768882.0,
        "org.jfree.data.general$Series#removeChangeListener(org.jfree.data.general.SeriesChangeListener)": 1098.0,
        "org.jfree.data.general$Series#removePropertyChangeListener(java.beans.PropertyChangeListener)": 1122.0,
        "org.jfree.data.general$Series#setDescription(java.lang.String)": 1110.0,
        "org.jfree.data.general$Series#setKey(java.lang.Comparable)": 1112.0,
        "org.jfree.data.general$Series#setNotify(boolean)": 1122.0,
        "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)": 768882.0,
        "org.jfree.data.general$SeriesException#SeriesException(java.lang.String)": 1118.0,
        "org.jfree.data.time$Day#<clinit>()": 962218.0,
        "org.jfree.data.time$Day#Day()": 1098.0,
        "org.jfree.data.time$Day#Day(int,int,int)": 924.0,
        "org.jfree.data.time$Day#Day(java.util.Date)": 1094.0,
        "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)": 1056.0,
        "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)": 1094.0,
        "org.jfree.data.time$Day#compareTo(java.lang.Object)": 1106.0,
        "org.jfree.data.time$Day#equals(java.lang.Object)": 1072.0,
        "org.jfree.data.time$Day#getDayOfMonth()": 954.0,
        "org.jfree.data.time$Day#getFirstMillisecond()": 1094.0,
        "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)": 858.0,
        "org.jfree.data.time$Day#getLastMillisecond()": 1094.0,
        "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)": 858.0,
        "org.jfree.data.time$Day#getMonth()": 954.0,
        "org.jfree.data.time$Day#getSerialDate()": 1066.0,
        "org.jfree.data.time$Day#getSerialIndex()": 1098.0,
        "org.jfree.data.time$Day#getYear()": 958.0,
        "org.jfree.data.time$Day#hashCode()": 1110.0,
        "org.jfree.data.time$Day#next()": 1084.0,
        "org.jfree.data.time$Day#parseDay(java.lang.String)": 1118.0,
        "org.jfree.data.time$Day#peg(java.util.Calendar)": 858.0,
        "org.jfree.data.time$Day#previous()": 1114.0,
        "org.jfree.data.time$Day#toString()": 1122.0,
        "org.jfree.data.time$FixedMillisecond#FixedMillisecond()": 1120.0,
        "org.jfree.data.time$FixedMillisecond#FixedMillisecond(java.util.Date)": 1114.0,
        "org.jfree.data.time$FixedMillisecond#FixedMillisecond(long)": 1116.0,
        "org.jfree.data.time$FixedMillisecond#compareTo(java.lang.Object)": 1120.0,
        "org.jfree.data.time$FixedMillisecond#equals(java.lang.Object)": 1118.0,
        "org.jfree.data.time$FixedMillisecond#getFirstMillisecond()": 1122.0,
        "org.jfree.data.time$FixedMillisecond#getFirstMillisecond(java.util.Calendar)": 1122.0,
        "org.jfree.data.time$FixedMillisecond#getLastMillisecond()": 1122.0,
        "org.jfree.data.time$FixedMillisecond#getLastMillisecond(java.util.Calendar)": 1122.0,
        "org.jfree.data.time$FixedMillisecond#getMiddleMillisecond()": 1122.0,
        "org.jfree.data.time$FixedMillisecond#getMiddleMillisecond(java.util.Calendar)": 1122.0,
        "org.jfree.data.time$FixedMillisecond#getSerialIndex()": 1122.0,
        "org.jfree.data.time$FixedMillisecond#getTime()": 1118.0,
        "org.jfree.data.time$FixedMillisecond#hashCode()": 1120.0,
        "org.jfree.data.time$FixedMillisecond#next()": 1122.0,
        "org.jfree.data.time$FixedMillisecond#peg(java.util.Calendar)": 1122.0,
        "org.jfree.data.time$FixedMillisecond#previous()": 1122.0,
        "org.jfree.data.time$Month#Month()": 1120.0,
        "org.jfree.data.time$Month#Month(int,int)": 1068.0,
        "org.jfree.data.time$Month#Month(int,org.jfree.data.time.Year)": 1120.0,
        "org.jfree.data.time$Month#Month(java.util.Date)": 1120.0,
        "org.jfree.data.time$Month#Month(java.util.Date,java.util.TimeZone)": 1110.0,
        "org.jfree.data.time$Month#compareTo(java.lang.Object)": 1116.0,
        "org.jfree.data.time$Month#equals(java.lang.Object)": 1108.0,
        "org.jfree.data.time$Month#evaluateAsYear(java.lang.String)": 1120.0,
        "org.jfree.data.time$Month#findSeparator(java.lang.String)": 1120.0,
        "org.jfree.data.time$Month#getFirstMillisecond()": 1112.0,
        "org.jfree.data.time$Month#getFirstMillisecond(java.util.Calendar)": 1066.0,
        "org.jfree.data.time$Month#getLastMillisecond()": 1114.0,
        "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)": 1066.0,
        "org.jfree.data.time$Month#getMonth()": 1096.0,
        "org.jfree.data.time$Month#getSerialIndex()": 1114.0,
        "org.jfree.data.time$Month#getYear()": 1118.0,
        "org.jfree.data.time$Month#getYearValue()": 1104.0,
        "org.jfree.data.time$Month#hashCode()": 1120.0,
        "org.jfree.data.time$Month#next()": 1116.0,
        "org.jfree.data.time$Month#parseMonth(java.lang.String)": 1120.0,
        "org.jfree.data.time$Month#peg(java.util.Calendar)": 1066.0,
        "org.jfree.data.time$Month#previous()": 1116.0,
        "org.jfree.data.time$Month#toString()": 1122.0,
        "org.jfree.data.time$RegularTimePeriod#<clinit>()": 712056.0,
        "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()": 725632.0,
        "org.jfree.data.time$RegularTimePeriod#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone)": 1120.0,
        "org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)": 1114.0,
        "org.jfree.data.time$RegularTimePeriod#getEnd()": 1090.0,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()": 1086.0,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)": 1120.0,
        "org.jfree.data.time$RegularTimePeriod#getStart()": 1090.0,
        "org.jfree.data.time$RegularTimePeriod#toString()": 1122.0,
        "org.jfree.data.time$SerialDate#<clinit>()": 756.0,
        "org.jfree.data.time$SerialDate#SerialDate()": 858.0,
        "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)": 1122.0,
        "org.jfree.data.time$SerialDate#addMonths(int,org.jfree.data.time.SerialDate)": 1122.0,
        "org.jfree.data.time$SerialDate#addYears(int,org.jfree.data.time.SerialDate)": 1122.0,
        "org.jfree.data.time$SerialDate#createInstance(int)": 1094.0,
        "org.jfree.data.time$SerialDate#createInstance(int,int,int)": 858.0,
        "org.jfree.data.time$SerialDate#createInstance(java.util.Date)": 1122.0,
        "org.jfree.data.time$SerialDate#getDescription()": 1122.0,
        "org.jfree.data.time$SerialDate#getEndOfCurrentMonth(org.jfree.data.time.SerialDate)": 1122.0,
        "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int)": 1122.0,
        "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int,org.jfree.data.time.SerialDate)": 1122.0,
        "org.jfree.data.time$SerialDate#getMonths()": 1122.0,
        "org.jfree.data.time$SerialDate#getMonths(boolean)": 1122.0,
        "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int)": 1122.0,
        "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int,org.jfree.data.time.SerialDate)": 1122.0,
        "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int)": 1122.0,
        "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int,org.jfree.data.time.SerialDate)": 1122.0,
        "org.jfree.data.time$SerialDate#isLeapYear(int)": 858.0,
        "org.jfree.data.time$SerialDate#isValidMonthCode(int)": 1122.0,
        "org.jfree.data.time$SerialDate#isValidWeekInMonthCode(int)": 1122.0,
        "org.jfree.data.time$SerialDate#isValidWeekdayCode(int)": 1122.0,
        "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)": 756.0,
        "org.jfree.data.time$SerialDate#leapYearCount(int)": 858.0,
        "org.jfree.data.time$SerialDate#monthCodeToQuarter(int)": 1116.0,
        "org.jfree.data.time$SerialDate#monthCodeToString(int)": 1122.0,
        "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)": 1122.0,
        "org.jfree.data.time$SerialDate#relativeToString(int)": 1122.0,
        "org.jfree.data.time$SerialDate#setDescription(java.lang.String)": 1122.0,
        "org.jfree.data.time$SerialDate#stringToMonthCode(java.lang.String)": 1120.0,
        "org.jfree.data.time$SerialDate#stringToWeekdayCode(java.lang.String)": 1122.0,
        "org.jfree.data.time$SerialDate#toString()": 1122.0,
        "org.jfree.data.time$SerialDate#weekInMonthToString(int)": 1122.0,
        "org.jfree.data.time$SerialDate#weekdayCodeToString(int)": 1122.0,
        "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int)": 1094.0,
        "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int,int,int)": 858.0,
        "org.jfree.data.time$SpreadsheetDate#calcSerial(int,int,int)": 858.0,
        "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)": 1106.0,
        "org.jfree.data.time$SpreadsheetDate#compareTo(java.lang.Object)": 1122.0,
        "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)": 1080.0,
        "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()": 858.0,
        "org.jfree.data.time$SpreadsheetDate#getDayOfWeek()": 1122.0,
        "org.jfree.data.time$SpreadsheetDate#getMonth()": 858.0,
        "org.jfree.data.time$SpreadsheetDate#getYYYY()": 858.0,
        "org.jfree.data.time$SpreadsheetDate#hashCode()": 1110.0,
        "org.jfree.data.time$SpreadsheetDate#isAfter(org.jfree.data.time.SerialDate)": 1122.0,
        "org.jfree.data.time$SpreadsheetDate#isBefore(org.jfree.data.time.SerialDate)": 1122.0,
        "org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate)": 1122.0,
        "org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate,int)": 1122.0,
        "org.jfree.data.time$SpreadsheetDate#isOn(org.jfree.data.time.SerialDate)": 1122.0,
        "org.jfree.data.time$SpreadsheetDate#isOnOrAfter(org.jfree.data.time.SerialDate)": 1122.0,
        "org.jfree.data.time$SpreadsheetDate#isOnOrBefore(org.jfree.data.time.SerialDate)": 1122.0,
        "org.jfree.data.time$SpreadsheetDate#toDate()": 1122.0,
        "org.jfree.data.time$SpreadsheetDate#toSerial()": 1018.0,
        "org.jfree.data.time$TimePeriodFormatException#TimePeriodFormatException(java.lang.String)": 1118.0,
        "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable)": 1238758.0,
        "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable,java.lang.Class)": 1209976.0,
        "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable,java.lang.String,java.lang.String,java.lang.Class)": 1196806.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)": 1086.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)": 1086.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 1214382.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)": 1214382.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)": 1112.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)": 1205578.0,
        "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)": 1120.0,
        "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)": 1118.0,
        "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 1116.0,
        "org.jfree.data.time$TimeSeries#clear()": 1122.0,
        "org.jfree.data.time$TimeSeries#clone()": 1256638.0,
        "org.jfree.data.time$TimeSeries#createCopy(int,int)": 1252156.0,
        "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)": 1120.0,
        "org.jfree.data.time$TimeSeries#delete(int,int)": 1118.0,
        "org.jfree.data.time$TimeSeries#delete(org.jfree.data.time.RegularTimePeriod)": 1120.0,
        "org.jfree.data.time$TimeSeries#equals(java.lang.Object)": 1104.0,
        "org.jfree.data.time$TimeSeries#getDataItem(int)": 1205578.0,
        "org.jfree.data.time$TimeSeries#getDataItem(org.jfree.data.time.RegularTimePeriod)": 1120.0,
        "org.jfree.data.time$TimeSeries#getDomainDescription()": 1108.0,
        "org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)": 1106.0,
        "org.jfree.data.time$TimeSeries#getItemCount()": 1203382.0,
        "org.jfree.data.time$TimeSeries#getItems()": 1122.0,
        "org.jfree.data.time$TimeSeries#getMaximumItemAge()": 1104.0,
        "org.jfree.data.time$TimeSeries#getMaximumItemCount()": 1104.0,
        "org.jfree.data.time$TimeSeries#getNextTimePeriod()": 1122.0,
        "org.jfree.data.time$TimeSeries#getRangeDescription()": 1108.0,
        "org.jfree.data.time$TimeSeries#getTimePeriod(int)": 1205578.0,
        "org.jfree.data.time$TimeSeries#getTimePeriodClass()": 1118.0,
        "org.jfree.data.time$TimeSeries#getTimePeriods()": 1122.0,
        "org.jfree.data.time$TimeSeries#getTimePeriodsUniqueToOtherSeries(org.jfree.data.time.TimeSeries)": 1122.0,
        "org.jfree.data.time$TimeSeries#getValue(int)": 1114.0,
        "org.jfree.data.time$TimeSeries#getValue(org.jfree.data.time.RegularTimePeriod)": 1114.0,
        "org.jfree.data.time$TimeSeries#hashCode()": 1120.0,
        "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)": 1205578.0,
        "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)": 1120.0,
        "org.jfree.data.time$TimeSeries#setDomainDescription(java.lang.String)": 1122.0,
        "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)": 1116.0,
        "org.jfree.data.time$TimeSeries#setMaximumItemCount(int)": 1116.0,
        "org.jfree.data.time$TimeSeries#setRangeDescription(java.lang.String)": 1122.0,
        "org.jfree.data.time$TimeSeries#update(int,java.lang.Number)": 1122.0,
        "org.jfree.data.time$TimeSeries#update(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 1120.0,
        "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,double)": 1072.0,
        "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 1198996.0,
        "org.jfree.data.time$TimeSeriesDataItem#clone()": 1110.0,
        "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)": 1096.0,
        "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)": 1106.0,
        "org.jfree.data.time$TimeSeriesDataItem#getPeriod()": 1205578.0,
        "org.jfree.data.time$TimeSeriesDataItem#getValue()": 1110.0,
        "org.jfree.data.time$TimeSeriesDataItem#hashCode()": 1120.0,
        "org.jfree.data.time$TimeSeriesDataItem#setValue(java.lang.Number)": 1112.0,
        "org.jfree.data.time$Year#Year()": 1120.0,
        "org.jfree.data.time$Year#Year(int)": 1098228.0,
        "org.jfree.data.time$Year#Year(java.util.Date)": 1120.0,
        "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone)": 1114.0,
        "org.jfree.data.time$Year#compareTo(java.lang.Object)": 1194618.0,
        "org.jfree.data.time$Year#equals(java.lang.Object)": 1064.0,
        "org.jfree.data.time$Year#getFirstMillisecond()": 1100.0,
        "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)": 1091946.0,
        "org.jfree.data.time$Year#getLastMillisecond()": 1100.0,
        "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)": 1091946.0,
        "org.jfree.data.time$Year#getSerialIndex()": 1214382.0,
        "org.jfree.data.time$Year#getYear()": 1136298.0,
        "org.jfree.data.time$Year#hashCode()": 1120.0,
        "org.jfree.data.time$Year#next()": 1116.0,
        "org.jfree.data.time$Year#parseYear(java.lang.String)": 1116.0,
        "org.jfree.data.time$Year#peg(java.util.Calendar)": 1091946.0,
        "org.jfree.data.time$Year#previous()": 1118.0,
        "org.jfree.data.time$Year#toString()": 1122.0
    },
    "Chart-18": {
        "org.jfree.data$DefaultKeyedValues#DefaultKeyedValues()": 131580.0,
        "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,double)": 295928.0,
        "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)": 283004.0,
        "org.jfree.data$DefaultKeyedValues#clear()": 528.0,
        "org.jfree.data$DefaultKeyedValues#clone()": 526.0,
        "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)": 540.0,
        "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)": 138204.0,
        "org.jfree.data$DefaultKeyedValues#getItemCount()": 502.0,
        "org.jfree.data$DefaultKeyedValues#getKey(int)": 510.0,
        "org.jfree.data$DefaultKeyedValues#getKeys()": 532.0,
        "org.jfree.data$DefaultKeyedValues#getValue(int)": 268.0,
        "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)": 520.0,
        "org.jfree.data$DefaultKeyedValues#hashCode()": 544.0,
        "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,double)": 542.0,
        "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,java.lang.Number)": 542.0,
        "org.jfree.data$DefaultKeyedValues#rebuildIndex()": 299204.0,
        "org.jfree.data$DefaultKeyedValues#removeValue(int)": 300300.0,
        "org.jfree.data$DefaultKeyedValues#removeValue(java.lang.Comparable)": 300300.0,
        "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,double)": 544.0,
        "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)": 138950.0,
        "org.jfree.data$DefaultKeyedValues#sortByKeys(org.jfree.chart.util.SortOrder)": 540.0,
        "org.jfree.data$DefaultKeyedValues#sortByValues(org.jfree.chart.util.SortOrder)": 540.0,
        "org.jfree.data$DefaultKeyedValues2D#DefaultKeyedValues2D()": 167138.0,
        "org.jfree.data$DefaultKeyedValues2D#DefaultKeyedValues2D(boolean)": 159048.0,
        "org.jfree.data$DefaultKeyedValues2D#addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)": 178800.0,
        "org.jfree.data$DefaultKeyedValues2D#clear()": 542.0,
        "org.jfree.data$DefaultKeyedValues2D#clone()": 536.0,
        "org.jfree.data$DefaultKeyedValues2D#equals(java.lang.Object)": 526.0,
        "org.jfree.data$DefaultKeyedValues2D#getColumnCount()": 326.0,
        "org.jfree.data$DefaultKeyedValues2D#getColumnIndex(java.lang.Comparable)": 538.0,
        "org.jfree.data$DefaultKeyedValues2D#getColumnKey(int)": 510.0,
        "org.jfree.data$DefaultKeyedValues2D#getColumnKeys()": 512.0,
        "org.jfree.data$DefaultKeyedValues2D#getRowCount()": 294.0,
        "org.jfree.data$DefaultKeyedValues2D#getRowIndex(java.lang.Comparable)": 170430.0,
        "org.jfree.data$DefaultKeyedValues2D#getRowKey(int)": 448.0,
        "org.jfree.data$DefaultKeyedValues2D#getRowKeys()": 510.0,
        "org.jfree.data$DefaultKeyedValues2D#getValue(int,int)": 348.0,
        "org.jfree.data$DefaultKeyedValues2D#getValue(java.lang.Comparable,java.lang.Comparable)": 498.0,
        "org.jfree.data$DefaultKeyedValues2D#hashCode()": 544.0,
        "org.jfree.data$DefaultKeyedValues2D#removeColumn(int)": 544.0,
        "org.jfree.data$DefaultKeyedValues2D#removeColumn(java.lang.Comparable)": 300300.0,
        "org.jfree.data$DefaultKeyedValues2D#removeRow(int)": 542.0,
        "org.jfree.data$DefaultKeyedValues2D#removeRow(java.lang.Comparable)": 544.0,
        "org.jfree.data$DefaultKeyedValues2D#removeValue(java.lang.Comparable,java.lang.Comparable)": 538.0,
        "org.jfree.data$DefaultKeyedValues2D#setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)": 170430.0,
        "org.jfree.data$UnknownKeyException#UnknownKeyException(java.lang.String)": 518.0,
        "org.jfree.data.category$DefaultCategoryDataset#DefaultCategoryDataset()": 179648.0,
        "org.jfree.data.category$DefaultCategoryDataset#addValue(double,java.lang.Comparable,java.lang.Comparable)": 236130.0,
        "org.jfree.data.category$DefaultCategoryDataset#addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)": 198810.0,
        "org.jfree.data.category$DefaultCategoryDataset#clear()": 544.0,
        "org.jfree.data.category$DefaultCategoryDataset#clone()": 540.0,
        "org.jfree.data.category$DefaultCategoryDataset#equals(java.lang.Object)": 528.0,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnCount()": 358.0,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnIndex(java.lang.Comparable)": 538.0,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnKey(int)": 512.0,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnKeys()": 528.0,
        "org.jfree.data.category$DefaultCategoryDataset#getRowCount()": 326.0,
        "org.jfree.data.category$DefaultCategoryDataset#getRowIndex(java.lang.Comparable)": 544.0,
        "org.jfree.data.category$DefaultCategoryDataset#getRowKey(int)": 460.0,
        "org.jfree.data.category$DefaultCategoryDataset#getRowKeys()": 526.0,
        "org.jfree.data.category$DefaultCategoryDataset#getValue(int,int)": 376.0,
        "org.jfree.data.category$DefaultCategoryDataset#getValue(java.lang.Comparable,java.lang.Comparable)": 502.0,
        "org.jfree.data.category$DefaultCategoryDataset#hashCode()": 544.0,
        "org.jfree.data.category$DefaultCategoryDataset#incrementValue(double,java.lang.Comparable,java.lang.Comparable)": 542.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeColumn(int)": 544.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeColumn(java.lang.Comparable)": 300300.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeRow(int)": 544.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeRow(java.lang.Comparable)": 544.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeValue(java.lang.Comparable,java.lang.Comparable)": 542.0,
        "org.jfree.data.category$DefaultCategoryDataset#setValue(double,java.lang.Comparable,java.lang.Comparable)": 526.0,
        "org.jfree.data.category$DefaultCategoryDataset#setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)": 520.0,
        "org.jfree.data.general$AbstractDataset#AbstractDataset()": 5454.0,
        "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)": 72.0,
        "org.jfree.data.general$AbstractDataset#clone()": 476.0,
        "org.jfree.data.general$AbstractDataset#fireDatasetChanged()": 41268.0,
        "org.jfree.data.general$AbstractDataset#getGroup()": 540.0,
        "org.jfree.data.general$AbstractDataset#hasListener(java.util.EventListener)": 540.0,
        "org.jfree.data.general$AbstractDataset#notifyListeners(org.jfree.data.general.DatasetChangeEvent)": 26180.0,
        "org.jfree.data.general$AbstractDataset#readObject(java.io.ObjectInputStream)": 426.0,
        "org.jfree.data.general$AbstractDataset#removeChangeListener(org.jfree.data.general.DatasetChangeListener)": 504.0,
        "org.jfree.data.general$AbstractDataset#setGroup(org.jfree.data.general.DatasetGroup)": 544.0,
        "org.jfree.data.general$AbstractDataset#validateObject()": 426.0,
        "org.jfree.data.general$AbstractDataset#writeObject(java.io.ObjectOutputStream)": 426.0,
        "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)": 8190.0,
        "org.jfree.data.general$DatasetChangeEvent#getDataset()": 544.0,
        "org.jfree.data.general$DatasetGroup#DatasetGroup()": 5300.0,
        "org.jfree.data.general$DatasetGroup#DatasetGroup(java.lang.String)": 544.0,
        "org.jfree.data.general$DatasetGroup#clone()": 544.0,
        "org.jfree.data.general$DatasetGroup#equals(java.lang.Object)": 542.0,
        "org.jfree.data.general$DatasetGroup#getID()": 544.0
    },
    "Chart-19": {},
    "Chart-2": {
        "org.jfree.chart.event$DatasetChangeInfo#DatasetChangeInfo()": 119814.0,
        "org.jfree.data$ComparableObjectItem#ComparableObjectItem(java.lang.Comparable,java.lang.Object)": 698790.0,
        "org.jfree.data$ComparableObjectItem#clone()": 926.0,
        "org.jfree.data$ComparableObjectItem#compareTo(java.lang.Object)": 884.0,
        "org.jfree.data$ComparableObjectItem#equals(java.lang.Object)": 858.0,
        "org.jfree.data$ComparableObjectItem#getComparable()": 870.0,
        "org.jfree.data$ComparableObjectItem#getObject()": 850064.0,
        "org.jfree.data$ComparableObjectItem#hashCode()": 932.0,
        "org.jfree.data$ComparableObjectItem#setObject(java.lang.Object)": 938.0,
        "org.jfree.data$ComparableObjectSeries#ComparableObjectSeries(java.lang.Comparable)": 928.0,
        "org.jfree.data$ComparableObjectSeries#ComparableObjectSeries(java.lang.Comparable,boolean,boolean)": 720708.0,
        "org.jfree.data$ComparableObjectSeries#add(java.lang.Comparable,java.lang.Object)": 930.0,
        "org.jfree.data$ComparableObjectSeries#add(java.lang.Comparable,java.lang.Object,boolean)": 930.0,
        "org.jfree.data$ComparableObjectSeries#add(org.jfree.data.ComparableObjectItem,boolean)": 741240.0,
        "org.jfree.data$ComparableObjectSeries#clear()": 928.0,
        "org.jfree.data$ComparableObjectSeries#delete(int,int)": 938.0,
        "org.jfree.data$ComparableObjectSeries#equals(java.lang.Object)": 866.0,
        "org.jfree.data$ComparableObjectSeries#getAllowDuplicateXValues()": 936.0,
        "org.jfree.data$ComparableObjectSeries#getAutoSort()": 936.0,
        "org.jfree.data$ComparableObjectSeries#getDataItem(int)": 820800.0,
        "org.jfree.data$ComparableObjectSeries#getItemCount()": 739518.0,
        "org.jfree.data$ComparableObjectSeries#getMaximumItemCount()": 926.0,
        "org.jfree.data$ComparableObjectSeries#hashCode()": 934.0,
        "org.jfree.data$ComparableObjectSeries#indexOf(java.lang.Comparable)": 898.0,
        "org.jfree.data$ComparableObjectSeries#remove(int)": 920.0,
        "org.jfree.data$ComparableObjectSeries#remove(java.lang.Comparable)": 916.0,
        "org.jfree.data$ComparableObjectSeries#setMaximumItemCount(int)": 918.0,
        "org.jfree.data$ComparableObjectSeries#update(java.lang.Comparable,java.lang.Object)": 938.0,
        "org.jfree.data$ComparableObjectSeries#updateByIndex(int,java.lang.Object)": 938.0,
        "org.jfree.data$Range#Range(double,double)": 156.0,
        "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)": 554.0,
        "org.jfree.data$Range#constrain(double)": 888.0,
        "org.jfree.data$Range#contains(double)": 698.0,
        "org.jfree.data$Range#equals(java.lang.Object)": 718.0,
        "org.jfree.data$Range#expand(org.jfree.data.Range,double,double)": 936.0,
        "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)": 878.0,
        "org.jfree.data$Range#getCentralValue()": 920.0,
        "org.jfree.data$Range#getLength()": 912.0,
        "org.jfree.data$Range#getLowerBound()": 412.0,
        "org.jfree.data$Range#getUpperBound()": 410.0,
        "org.jfree.data$Range#hashCode()": 936.0,
        "org.jfree.data$Range#intersects(double,double)": 932.0,
        "org.jfree.data$Range#intersects(org.jfree.data.Range)": 938.0,
        "org.jfree.data$Range#scale(org.jfree.data.Range,double)": 936.0,
        "org.jfree.data$Range#shift(org.jfree.data.Range,double)": 934.0,
        "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)": 934.0,
        "org.jfree.data$Range#shiftWithNoZeroCrossing(double,double)": 934.0,
        "org.jfree.data$Range#toString()": 938.0,
        "org.jfree.data.event$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset,org.jfree.chart.event.DatasetChangeInfo)": 119814.0,
        "org.jfree.data.event$DatasetChangeEvent#getDataset()": 938.0,
        "org.jfree.data.event$DatasetChangeEvent#getInfo()": 938.0,
        "org.jfree.data.event$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)": 395328.0,
        "org.jfree.data.event$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object,org.jfree.data.general.SeriesChangeInfo)": 395328.0,
        "org.jfree.data.event$SeriesChangeEvent#getSummary()": 938.0,
        "org.jfree.data.event$SeriesChangeEvent#setSummary(org.jfree.data.general.SeriesChangeInfo)": 938.0,
        "org.jfree.data.general$AbstractDataset#AbstractDataset()": 114998.0,
        "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.event.DatasetChangeListener)": 378.0,
        "org.jfree.data.general$AbstractDataset#clone()": 852.0,
        "org.jfree.data.general$AbstractDataset#fireDatasetChanged(org.jfree.chart.event.DatasetChangeInfo)": 173364.0,
        "org.jfree.data.general$AbstractDataset#getGroup()": 930.0,
        "org.jfree.data.general$AbstractDataset#hasListener(java.util.EventListener)": 932.0,
        "org.jfree.data.general$AbstractDataset#notifyListeners(org.jfree.data.event.DatasetChangeEvent)": 173364.0,
        "org.jfree.data.general$AbstractDataset#readObject(java.io.ObjectInputStream)": 808.0,
        "org.jfree.data.general$AbstractDataset#removeChangeListener(org.jfree.data.event.DatasetChangeListener)": 898.0,
        "org.jfree.data.general$AbstractDataset#setGroup(org.jfree.data.general.DatasetGroup)": 938.0,
        "org.jfree.data.general$AbstractDataset#validateObject()": 808.0,
        "org.jfree.data.general$AbstractDataset#writeObject(java.io.ObjectOutputStream)": 808.0,
        "org.jfree.data.general$AbstractSeriesDataset#AbstractSeriesDataset()": 350114.0,
        "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)": 778.0,
        "org.jfree.data.general$AbstractSeriesDataset#seriesChanged(org.jfree.data.event.SeriesChangeEvent)": 918.0,
        "org.jfree.data.general$DatasetGroup#DatasetGroup()": 114318.0,
        "org.jfree.data.general$DatasetGroup#DatasetGroup(java.lang.String)": 938.0,
        "org.jfree.data.general$DatasetGroup#clone()": 938.0,
        "org.jfree.data.general$DatasetGroup#equals(java.lang.Object)": 936.0,
        "org.jfree.data.general$DatasetGroup#getID()": 938.0,
        "org.jfree.data.general$DatasetUtilities#DatasetUtilities()": 938.0,
        "org.jfree.data.general$DatasetUtilities#calculatePieDatasetTotal(org.jfree.data.pie.PieDataset)": 928.0,
        "org.jfree.data.general$DatasetUtilities#calculateStackTotal(org.jfree.data.xy.TableXYDataset,int)": 938.0,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.Comparable,org.jfree.data.KeyedValues)": 938.0,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.Comparable[],java.lang.Comparable[],double[][])": 934.0,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.String,java.lang.String,double[][])": 938.0,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.String,java.lang.String,java.lang.Number[][])": 868.0,
        "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.pie.PieDataset,java.lang.Comparable,double)": 936.0,
        "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.pie.PieDataset,java.lang.Comparable,double,int)": 936.0,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForColumn(org.jfree.data.category.CategoryDataset,int)": 938.0,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForColumn(org.jfree.data.category.CategoryDataset,java.lang.Comparable)": 938.0,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForRow(org.jfree.data.category.CategoryDataset,int)": 938.0,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForRow(org.jfree.data.category.CategoryDataset,java.lang.Comparable)": 938.0,
        "org.jfree.data.general$DatasetUtilities#findCumulativeRangeBounds(org.jfree.data.category.CategoryDataset)": 930.0,
        "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset)": 888.0,
        "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)": 860.0,
        "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)": 782.0,
        "org.jfree.data.general$DatasetUtilities#findMaximumDomainValue(org.jfree.data.xy.XYDataset)": 936.0,
        "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.category.CategoryDataset)": 932.0,
        "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.xy.XYDataset)": 936.0,
        "org.jfree.data.general$DatasetUtilities#findMaximumStackedRangeValue(org.jfree.data.category.CategoryDataset)": 932.0,
        "org.jfree.data.general$DatasetUtilities#findMinimumDomainValue(org.jfree.data.xy.XYDataset)": 936.0,
        "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.category.CategoryDataset)": 934.0,
        "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.xy.XYDataset)": 936.0,
        "org.jfree.data.general$DatasetUtilities#findMinimumStackedRangeValue(org.jfree.data.category.CategoryDataset)": 934.0,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset)": 936.0,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 936.0,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)": 784.0,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset)": 888.0,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)": 870.0,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)": 796.0,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset)": 916.0,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)": 906.0,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)": 930.0,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.xy.TableXYDataset)": 926.0,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)": 926.0,
        "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.category.CategoryDataset)": 880.0,
        "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.pie.PieDataset)": 932.0,
        "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.xy.XYDataset)": 904.0,
        "org.jfree.data.general$DatasetUtilities#iterateCategoryRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 938.0,
        "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset)": 879840.0,
        "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)": 855608.0,
        "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.category.CategoryDataset)": 938.0,
        "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 930.0,
        "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset)": 876090.0,
        "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)": 853758.0,
        "org.jfree.data.general$DatasetUtilities#iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)": 784.0,
        "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)": 780.0,
        "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)": 792.0,
        "org.jfree.data.general$DatasetUtilities#iterateXYRangeBounds(org.jfree.data.xy.XYDataset)": 938.0,
        "org.jfree.data.general$DatasetUtilities#sampleFunction2D(org.jfree.data.function.Function2D,double,double,int,java.lang.Comparable)": 936.0,
        "org.jfree.data.general$DatasetUtilities#sampleFunction2DToSeries(org.jfree.data.function.Function2D,double,double,int,java.lang.Comparable)": 936.0,
        "org.jfree.data.general$Series#Series(java.lang.Comparable)": 360860.0,
        "org.jfree.data.general$Series#Series(java.lang.Comparable,java.lang.String)": 360860.0,
        "org.jfree.data.general$Series#addChangeListener(org.jfree.data.event.SeriesChangeListener)": 559310.0,
        "org.jfree.data.general$Series#addPropertyChangeListener(java.beans.PropertyChangeListener)": 938.0,
        "org.jfree.data.general$Series#clone()": 876.0,
        "org.jfree.data.general$Series#equals(java.lang.Object)": 760.0,
        "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)": 936.0,
        "org.jfree.data.general$Series#fireSeriesChanged()": 395328.0,
        "org.jfree.data.general$Series#getDescription()": 778.0,
        "org.jfree.data.general$Series#getKey()": 586.0,
        "org.jfree.data.general$Series#getNotify()": 938.0,
        "org.jfree.data.general$Series#hashCode()": 930.0,
        "org.jfree.data.general$Series#isEmpty()": 928.0,
        "org.jfree.data.general$Series#notifyListeners(org.jfree.data.event.SeriesChangeEvent)": 395328.0,
        "org.jfree.data.general$Series#removeChangeListener(org.jfree.data.event.SeriesChangeListener)": 900.0,
        "org.jfree.data.general$Series#removePropertyChangeListener(java.beans.PropertyChangeListener)": 938.0,
        "org.jfree.data.general$Series#setDescription(java.lang.String)": 924.0,
        "org.jfree.data.general$Series#setKey(java.lang.Comparable)": 928.0,
        "org.jfree.data.general$Series#setNotify(boolean)": 938.0,
        "org.jfree.data.general$SeriesException#SeriesException(java.lang.String)": 932.0,
        "org.jfree.data.xy$AbstractIntervalXYDataset#AbstractIntervalXYDataset()": 529770.0,
        "org.jfree.data.xy$AbstractIntervalXYDataset#getEndXValue(int,int)": 924.0,
        "org.jfree.data.xy$AbstractIntervalXYDataset#getEndYValue(int,int)": 930.0,
        "org.jfree.data.xy$AbstractIntervalXYDataset#getStartXValue(int,int)": 924.0,
        "org.jfree.data.xy$AbstractIntervalXYDataset#getStartYValue(int,int)": 930.0,
        "org.jfree.data.xy$AbstractXYDataset#AbstractXYDataset()": 411864.0,
        "org.jfree.data.xy$AbstractXYDataset#getDomainOrder()": 928.0,
        "org.jfree.data.xy$AbstractXYDataset#getSelectionState()": 938.0,
        "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)": 790.0,
        "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)": 794.0,
        "org.jfree.data.xy$AbstractXYDataset#setSelectionState(org.jfree.data.xy.XYDatasetSelectionState)": 718.0,
        "org.jfree.data.xy$XYInterval#XYInterval(double,double,double,double,double)": 842700.0,
        "org.jfree.data.xy$XYInterval#equals(java.lang.Object)": 924.0,
        "org.jfree.data.xy$XYInterval#getXHigh()": 879840.0,
        "org.jfree.data.xy$XYInterval#getXLow()": 879840.0,
        "org.jfree.data.xy$XYInterval#getY()": 930.0,
        "org.jfree.data.xy$XYInterval#getYHigh()": 879840.0,
        "org.jfree.data.xy$XYInterval#getYLow()": 879840.0,
        "org.jfree.data.xy$XYIntervalDataItem#XYIntervalDataItem(double,double,double,double,double,double)": 848220.0,
        "org.jfree.data.xy$XYIntervalDataItem#getX()": 928.0,
        "org.jfree.data.xy$XYIntervalDataItem#getXHighValue()": 879840.0,
        "org.jfree.data.xy$XYIntervalDataItem#getXLowValue()": 879840.0,
        "org.jfree.data.xy$XYIntervalDataItem#getYHighValue()": 879840.0,
        "org.jfree.data.xy$XYIntervalDataItem#getYLowValue()": 879840.0,
        "org.jfree.data.xy$XYIntervalDataItem#getYValue()": 930.0,
        "org.jfree.data.xy$XYIntervalSeries#XYIntervalSeries(java.lang.Comparable)": 855608.0,
        "org.jfree.data.xy$XYIntervalSeries#XYIntervalSeries(java.lang.Comparable,boolean,boolean)": 851910.0,
        "org.jfree.data.xy$XYIntervalSeries#add(double,double,double,double,double,double)": 855608.0,
        "org.jfree.data.xy$XYIntervalSeries#getDataItem(int)": 872348.0,
        "org.jfree.data.xy$XYIntervalSeries#getX(int)": 930.0,
        "org.jfree.data.xy$XYIntervalSeries#getXHighValue(int)": 881718.0,
        "org.jfree.data.xy$XYIntervalSeries#getXLowValue(int)": 881718.0,
        "org.jfree.data.xy$XYIntervalSeries#getYHighValue(int)": 881718.0,
        "org.jfree.data.xy$XYIntervalSeries#getYLowValue(int)": 881718.0,
        "org.jfree.data.xy$XYIntervalSeries#getYValue(int)": 932.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#XYIntervalSeriesCollection()": 872348.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#addSeries(org.jfree.data.xy.XYIntervalSeries)": 874218.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#clone()": 936.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#equals(java.lang.Object)": 930.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getEndX(int,int)": 938.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getEndXValue(int,int)": 883598.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getEndY(int,int)": 938.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getEndYValue(int,int)": 883598.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getItemCount(int)": 883598.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getSeries(int)": 881718.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getSeriesCount()": 877964.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getSeriesKey(int)": 938.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getStartX(int,int)": 938.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getStartXValue(int,int)": 883598.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getStartY(int,int)": 938.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getStartYValue(int,int)": 883598.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getX(int,int)": 938.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getY(int,int)": 938.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getYValue(int,int)": 938.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#removeAllSeries()": 938.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#removeSeries(int)": 936.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#removeSeries(org.jfree.data.xy.XYIntervalSeries)": 938.0
    },
    "Chart-20": {},
    "Chart-3": {
        "org.jfree.data.event$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)": 68858.0,
        "org.jfree.data.event$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object,org.jfree.data.general.SeriesChangeInfo)": 68858.0,
        "org.jfree.data.event$SeriesChangeEvent#getSummary()": 572.0,
        "org.jfree.data.event$SeriesChangeEvent#setSummary(org.jfree.data.general.SeriesChangeInfo)": 572.0,
        "org.jfree.data.general$Series#Series(java.lang.Comparable)": 54886.0,
        "org.jfree.data.general$Series#Series(java.lang.Comparable,java.lang.String)": 54886.0,
        "org.jfree.data.general$Series#addChangeListener(org.jfree.data.event.SeriesChangeListener)": 188.0,
        "org.jfree.data.general$Series#addPropertyChangeListener(java.beans.PropertyChangeListener)": 572.0,
        "org.jfree.data.general$Series#clone()": 294818.0,
        "org.jfree.data.general$Series#equals(java.lang.Object)": 394.0,
        "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)": 570.0,
        "org.jfree.data.general$Series#fireSeriesChanged()": 68858.0,
        "org.jfree.data.general$Series#getDescription()": 412.0,
        "org.jfree.data.general$Series#getKey()": 220.0,
        "org.jfree.data.general$Series#getNotify()": 572.0,
        "org.jfree.data.general$Series#hashCode()": 564.0,
        "org.jfree.data.general$Series#isEmpty()": 562.0,
        "org.jfree.data.general$Series#notifyListeners(org.jfree.data.event.SeriesChangeEvent)": 68858.0,
        "org.jfree.data.general$Series#removeChangeListener(org.jfree.data.event.SeriesChangeListener)": 534.0,
        "org.jfree.data.general$Series#removePropertyChangeListener(java.beans.PropertyChangeListener)": 572.0,
        "org.jfree.data.general$Series#setDescription(java.lang.String)": 558.0,
        "org.jfree.data.general$Series#setKey(java.lang.Comparable)": 562.0,
        "org.jfree.data.general$Series#setNotify(boolean)": 572.0,
        "org.jfree.data.general$SeriesException#SeriesException(java.lang.String)": 566.0,
        "org.jfree.data.time$Day#<clinit>()": 290.0,
        "org.jfree.data.time$Day#Day()": 546.0,
        "org.jfree.data.time$Day#Day(int,int,int)": 366.0,
        "org.jfree.data.time$Day#Day(java.util.Date)": 542.0,
        "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)": 504.0,
        "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)": 544.0,
        "org.jfree.data.time$Day#compareTo(java.lang.Object)": 552.0,
        "org.jfree.data.time$Day#equals(java.lang.Object)": 522.0,
        "org.jfree.data.time$Day#getDayOfMonth()": 404.0,
        "org.jfree.data.time$Day#getFirstMillisecond()": 540.0,
        "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)": 298.0,
        "org.jfree.data.time$Day#getLastMillisecond()": 540.0,
        "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)": 298.0,
        "org.jfree.data.time$Day#getMonth()": 404.0,
        "org.jfree.data.time$Day#getSerialDate()": 512.0,
        "org.jfree.data.time$Day#getSerialIndex()": 544.0,
        "org.jfree.data.time$Day#getYear()": 408.0,
        "org.jfree.data.time$Day#hashCode()": 560.0,
        "org.jfree.data.time$Day#next()": 534.0,
        "org.jfree.data.time$Day#parseDay(java.lang.String)": 568.0,
        "org.jfree.data.time$Day#peg(java.util.Calendar)": 298.0,
        "org.jfree.data.time$Day#previous()": 564.0,
        "org.jfree.data.time$Day#toString()": 572.0,
        "org.jfree.data.time$FixedMillisecond#FixedMillisecond()": 570.0,
        "org.jfree.data.time$FixedMillisecond#FixedMillisecond(java.util.Date)": 562.0,
        "org.jfree.data.time$FixedMillisecond#FixedMillisecond(long)": 566.0,
        "org.jfree.data.time$FixedMillisecond#compareTo(java.lang.Object)": 570.0,
        "org.jfree.data.time$FixedMillisecond#equals(java.lang.Object)": 568.0,
        "org.jfree.data.time$FixedMillisecond#getFirstMillisecond()": 566.0,
        "org.jfree.data.time$FixedMillisecond#getFirstMillisecond(java.util.Calendar)": 572.0,
        "org.jfree.data.time$FixedMillisecond#getLastMillisecond()": 572.0,
        "org.jfree.data.time$FixedMillisecond#getLastMillisecond(java.util.Calendar)": 572.0,
        "org.jfree.data.time$FixedMillisecond#getMiddleMillisecond()": 572.0,
        "org.jfree.data.time$FixedMillisecond#getMiddleMillisecond(java.util.Calendar)": 572.0,
        "org.jfree.data.time$FixedMillisecond#getSerialIndex()": 572.0,
        "org.jfree.data.time$FixedMillisecond#getTime()": 572.0,
        "org.jfree.data.time$FixedMillisecond#hashCode()": 570.0,
        "org.jfree.data.time$FixedMillisecond#next()": 572.0,
        "org.jfree.data.time$FixedMillisecond#peg(java.util.Calendar)": 572.0,
        "org.jfree.data.time$FixedMillisecond#previous()": 572.0,
        "org.jfree.data.time$Month#Month()": 570.0,
        "org.jfree.data.time$Month#Month(int,int)": 514.0,
        "org.jfree.data.time$Month#Month(int,org.jfree.data.time.Year)": 570.0,
        "org.jfree.data.time$Month#Month(java.util.Date)": 570.0,
        "org.jfree.data.time$Month#Month(java.util.Date,java.util.TimeZone)": 570.0,
        "org.jfree.data.time$Month#Month(java.util.Date,java.util.TimeZone,java.util.Locale)": 558.0,
        "org.jfree.data.time$Month#compareTo(java.lang.Object)": 566.0,
        "org.jfree.data.time$Month#equals(java.lang.Object)": 558.0,
        "org.jfree.data.time$Month#evaluateAsYear(java.lang.String)": 570.0,
        "org.jfree.data.time$Month#findSeparator(java.lang.String)": 570.0,
        "org.jfree.data.time$Month#getFirstMillisecond()": 562.0,
        "org.jfree.data.time$Month#getFirstMillisecond(java.util.Calendar)": 512.0,
        "org.jfree.data.time$Month#getLastMillisecond()": 562.0,
        "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)": 512.0,
        "org.jfree.data.time$Month#getMonth()": 558.0,
        "org.jfree.data.time$Month#getSerialIndex()": 564.0,
        "org.jfree.data.time$Month#getYear()": 568.0,
        "org.jfree.data.time$Month#getYearValue()": 566.0,
        "org.jfree.data.time$Month#hashCode()": 570.0,
        "org.jfree.data.time$Month#next()": 566.0,
        "org.jfree.data.time$Month#parseMonth(java.lang.String)": 570.0,
        "org.jfree.data.time$Month#peg(java.util.Calendar)": 512.0,
        "org.jfree.data.time$Month#previous()": 564.0,
        "org.jfree.data.time$Month#toString()": 572.0,
        "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()": 74776.0,
        "org.jfree.data.time$RegularTimePeriod#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone)": 568.0,
        "org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)": 560.0,
        "org.jfree.data.time$RegularTimePeriod#getEnd()": 530.0,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()": 534.0,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)": 570.0,
        "org.jfree.data.time$RegularTimePeriod#getStart()": 530.0,
        "org.jfree.data.time$RegularTimePeriod#toString()": 572.0,
        "org.jfree.data.time$TimePeriodFormatException#TimePeriodFormatException(java.lang.String)": 570.0,
        "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable)": 275576.0,
        "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable,java.lang.String,java.lang.String)": 275576.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)": 293732.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)": 293732.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 287258.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)": 287258.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)": 323756.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)": 280856.0,
        "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)": 570.0,
        "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)": 562.0,
        "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 556.0,
        "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.TimeSeriesDataItem)": 556.0,
        "org.jfree.data.time$TimeSeries#clear()": 570.0,
        "org.jfree.data.time$TimeSeries#clone()": 564.0,
        "org.jfree.data.time$TimeSeries#createCopy(int,int)": 326038.0,
        "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)": 568.0,
        "org.jfree.data.time$TimeSeries#delete(int,int)": 566.0,
        "org.jfree.data.time$TimeSeries#delete(int,int,boolean)": 566.0,
        "org.jfree.data.time$TimeSeries#delete(org.jfree.data.time.RegularTimePeriod)": 568.0,
        "org.jfree.data.time$TimeSeries#equals(java.lang.Object)": 548.0,
        "org.jfree.data.time$TimeSeries#findBoundsByIteration()": 534.0,
        "org.jfree.data.time$TimeSeries#getDataItem(int)": 566.0,
        "org.jfree.data.time$TimeSeries#getDataItem(org.jfree.data.time.RegularTimePeriod)": 570.0,
        "org.jfree.data.time$TimeSeries#getDomainDescription()": 548.0,
        "org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)": 550.0,
        "org.jfree.data.time$TimeSeries#getItemCount()": 276628.0,
        "org.jfree.data.time$TimeSeries#getItems()": 572.0,
        "org.jfree.data.time$TimeSeries#getMaxY()": 315832.0,
        "org.jfree.data.time$TimeSeries#getMaximumItemAge()": 544.0,
        "org.jfree.data.time$TimeSeries#getMaximumItemCount()": 544.0,
        "org.jfree.data.time$TimeSeries#getMinY()": 315832.0,
        "org.jfree.data.time$TimeSeries#getNextTimePeriod()": 572.0,
        "org.jfree.data.time$TimeSeries#getRangeDescription()": 548.0,
        "org.jfree.data.time$TimeSeries#getRawDataItem(int)": 281918.0,
        "org.jfree.data.time$TimeSeries#getRawDataItem(org.jfree.data.time.RegularTimePeriod)": 572.0,
        "org.jfree.data.time$TimeSeries#getTimePeriod(int)": 281918.0,
        "org.jfree.data.time$TimeSeries#getTimePeriodClass()": 570.0,
        "org.jfree.data.time$TimeSeries#getTimePeriods()": 572.0,
        "org.jfree.data.time$TimeSeries#getTimePeriodsUniqueToOtherSeries(org.jfree.data.time.TimeSeries)": 572.0,
        "org.jfree.data.time$TimeSeries#getValue(int)": 560.0,
        "org.jfree.data.time$TimeSeries#getValue(org.jfree.data.time.RegularTimePeriod)": 562.0,
        "org.jfree.data.time$TimeSeries#hashCode()": 570.0,
        "org.jfree.data.time$TimeSeries#maxIgnoreNaN(double,double)": 280856.0,
        "org.jfree.data.time$TimeSeries#minIgnoreNaN(double,double)": 280856.0,
        "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)": 280856.0,
        "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)": 566.0,
        "org.jfree.data.time$TimeSeries#setDomainDescription(java.lang.String)": 572.0,
        "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)": 562.0,
        "org.jfree.data.time$TimeSeries#setMaximumItemCount(int)": 562.0,
        "org.jfree.data.time$TimeSeries#setRangeDescription(java.lang.String)": 572.0,
        "org.jfree.data.time$TimeSeries#update(int,java.lang.Number)": 568.0,
        "org.jfree.data.time$TimeSeries#update(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 568.0,
        "org.jfree.data.time$TimeSeries#updateBoundsForAddedItem(org.jfree.data.time.TimeSeriesDataItem)": 280856.0,
        "org.jfree.data.time$TimeSeries#updateBoundsForRemovedItem(org.jfree.data.time.TimeSeriesDataItem)": 562.0,
        "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,double)": 284048.0,
        "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 277682.0,
        "org.jfree.data.time$TimeSeriesDataItem#clone()": 280856.0,
        "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)": 532.0,
        "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)": 552.0,
        "org.jfree.data.time$TimeSeriesDataItem#getPeriod()": 280856.0,
        "org.jfree.data.time$TimeSeriesDataItem#getValue()": 280856.0,
        "org.jfree.data.time$TimeSeriesDataItem#hashCode()": 570.0,
        "org.jfree.data.time$TimeSeriesDataItem#isSelected()": 572.0,
        "org.jfree.data.time$TimeSeriesDataItem#setSelected(boolean)": 572.0,
        "org.jfree.data.time$TimeSeriesDataItem#setValue(java.lang.Number)": 552.0,
        "org.jfree.data.time$Year#Year()": 570.0,
        "org.jfree.data.time$Year#Year(int)": 223628.0,
        "org.jfree.data.time$Year#Year(java.util.Date)": 570.0,
        "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone)": 562.0,
        "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone,java.util.Locale)": 562.0,
        "org.jfree.data.time$Year#compareTo(java.lang.Object)": 277682.0,
        "org.jfree.data.time$Year#equals(java.lang.Object)": 502.0,
        "org.jfree.data.time$Year#getFirstMillisecond()": 540.0,
        "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)": 220796.0,
        "org.jfree.data.time$Year#getLastMillisecond()": 540.0,
        "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)": 220796.0,
        "org.jfree.data.time$Year#getSerialIndex()": 287258.0,
        "org.jfree.data.time$Year#getYear()": 269306.0,
        "org.jfree.data.time$Year#hashCode()": 568.0,
        "org.jfree.data.time$Year#next()": 566.0,
        "org.jfree.data.time$Year#parseYear(java.lang.String)": 566.0,
        "org.jfree.data.time$Year#peg(java.util.Calendar)": 220796.0,
        "org.jfree.data.time$Year#previous()": 568.0,
        "org.jfree.data.time$Year#toString()": 572.0
    },
    "Chart-4": {
        "org.jfree.chart$ChartColor#<clinit>()": 2771929.0,
        "org.jfree.chart$ChartColor#ChartColor(int,int,int)": 1917.0,
        "org.jfree.chart$ChartColor#createDefaultPaintArray()": 2771929.0,
        "org.jfree.chart$ChartFactory#<clinit>()": 3396531.0,
        "org.jfree.chart$ChartFactory#ChartFactory()": 1917.0,
        "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1909.0,
        "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1897.0,
        "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1909.0,
        "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)": 1917.0,
        "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)": 1917.0,
        "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1917.0,
        "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)": 1917.0,
        "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)": 1907.0,
        "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)": 1917.0,
        "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)": 1917.0,
        "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1917.0,
        "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1901.0,
        "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1909.0,
        "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)": 1917.0,
        "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)": 1917.0,
        "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)": 3705589.0,
        "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)": 1917.0,
        "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)": 1917.0,
        "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)": 1917.0,
        "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)": 1909.0,
        "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)": 1917.0,
        "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)": 1917.0,
        "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)": 1917.0,
        "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)": 1917.0,
        "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 3759699.0,
        "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1909.0,
        "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1907.0,
        "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1909.0,
        "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1907.0,
        "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)": 3759699.0,
        "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1917.0,
        "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1911.0,
        "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)": 1917.0,
        "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 3759699.0,
        "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 1909.0,
        "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 3682519.0,
        "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 3759699.0,
        "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 3759699.0,
        "org.jfree.chart$ChartFactory#getChartTheme()": 1917.0,
        "org.jfree.chart$ChartFactory#setChartTheme(org.jfree.chart.ChartTheme)": 1917.0,
        "org.jfree.chart$ChartRenderingInfo#ChartRenderingInfo()": 1855.0,
        "org.jfree.chart$ChartRenderingInfo#ChartRenderingInfo(org.jfree.chart.entity.EntityCollection)": 1855.0,
        "org.jfree.chart$ChartRenderingInfo#clear()": 1895.0,
        "org.jfree.chart$ChartRenderingInfo#clone()": 1915.0,
        "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)": 1909.0,
        "org.jfree.chart$ChartRenderingInfo#getChartArea()": 1915.0,
        "org.jfree.chart$ChartRenderingInfo#getEntityCollection()": 1893.0,
        "org.jfree.chart$ChartRenderingInfo#getPlotInfo()": 1871.0,
        "org.jfree.chart$ChartRenderingInfo#getRenderingSource()": 1917.0,
        "org.jfree.chart$ChartRenderingInfo#readObject(java.io.ObjectInputStream)": 1911.0,
        "org.jfree.chart$ChartRenderingInfo#setChartArea(java.awt.geom.Rectangle2D)": 1891.0,
        "org.jfree.chart$ChartRenderingInfo#setEntityCollection(org.jfree.chart.entity.EntityCollection)": 1915.0,
        "org.jfree.chart$ChartRenderingInfo#setRenderingSource(org.jfree.chart.RenderingSource)": 1891.0,
        "org.jfree.chart$ChartRenderingInfo#writeObject(java.io.ObjectOutputStream)": 1911.0,
        "org.jfree.chart$JFreeChart#<clinit>()": 3143341.0,
        "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)": 3178911.0,
        "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,org.jfree.chart.plot.Plot)": 1917.0,
        "org.jfree.chart$JFreeChart#JFreeChart(org.jfree.chart.plot.Plot)": 1795.0,
        "org.jfree.chart$JFreeChart#addChangeListener(org.jfree.chart.event.ChartChangeListener)": 1857.0,
        "org.jfree.chart$JFreeChart#addLegend(org.jfree.chart.title.LegendTitle)": 1917.0,
        "org.jfree.chart$JFreeChart#addProgressListener(org.jfree.chart.event.ChartProgressListener)": 1895.0,
        "org.jfree.chart$JFreeChart#addSubtitle(int,org.jfree.chart.title.Title)": 1915.0,
        "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)": 1913.0,
        "org.jfree.chart$JFreeChart#clearSubtitles()": 1917.0,
        "org.jfree.chart$JFreeChart#clone()": 1915.0,
        "org.jfree.chart$JFreeChart#createAlignedRectangle2D(org.jfree.chart.util.Size2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)": 1789.0,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int)": 1909.0,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)": 1917.0,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)": 1847.0,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)": 1847.0,
        "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1909.0,
        "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)": 1789.0,
        "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)": 1917.0,
        "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 1789.0,
        "org.jfree.chart$JFreeChart#equals(java.lang.Object)": 1893.0,
        "org.jfree.chart$JFreeChart#fireChartChanged()": 1901.0,
        "org.jfree.chart$JFreeChart#getAntiAlias()": 1917.0,
        "org.jfree.chart$JFreeChart#getBackgroundImage()": 1917.0,
        "org.jfree.chart$JFreeChart#getBackgroundImageAlignment()": 1917.0,
        "org.jfree.chart$JFreeChart#getBackgroundImageAlpha()": 1917.0,
        "org.jfree.chart$JFreeChart#getBackgroundPaint()": 1917.0,
        "org.jfree.chart$JFreeChart#getBorderPaint()": 1917.0,
        "org.jfree.chart$JFreeChart#getBorderStroke()": 1917.0,
        "org.jfree.chart$JFreeChart#getCategoryPlot()": 1917.0,
        "org.jfree.chart$JFreeChart#getLegend()": 1903.0,
        "org.jfree.chart$JFreeChart#getLegend(int)": 1903.0,
        "org.jfree.chart$JFreeChart#getPadding()": 1917.0,
        "org.jfree.chart$JFreeChart#getPlot()": 3389161.0,
        "org.jfree.chart$JFreeChart#getRenderingHints()": 1917.0,
        "org.jfree.chart$JFreeChart#getSubtitle(int)": 3485595.0,
        "org.jfree.chart$JFreeChart#getSubtitleCount()": 3389161.0,
        "org.jfree.chart$JFreeChart#getSubtitles()": 1915.0,
        "org.jfree.chart$JFreeChart#getTextAntiAlias()": 1917.0,
        "org.jfree.chart$JFreeChart#getTitle()": 3396531.0,
        "org.jfree.chart$JFreeChart#getXYPlot()": 1917.0,
        "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)": 1917.0,
        "org.jfree.chart$JFreeChart#isBorderVisible()": 1789.0,
        "org.jfree.chart$JFreeChart#isNotify()": 1917.0,
        "org.jfree.chart$JFreeChart#main(java.lang.String[])": 1917.0,
        "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)": 3359761.0,
        "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartProgressEvent)": 1789.0,
        "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)": 3374445.0,
        "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)": 1901.0,
        "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)": 1915.0,
        "org.jfree.chart$JFreeChart#removeLegend()": 1907.0,
        "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)": 1915.0,
        "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)": 1907.0,
        "org.jfree.chart$JFreeChart#setAntiAlias(boolean)": 1917.0,
        "org.jfree.chart$JFreeChart#setBackgroundImage(java.awt.Image)": 1915.0,
        "org.jfree.chart$JFreeChart#setBackgroundImageAlignment(int)": 1915.0,
        "org.jfree.chart$JFreeChart#setBackgroundImageAlpha(float)": 1915.0,
        "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)": 3381799.0,
        "org.jfree.chart$JFreeChart#setBorderPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart$JFreeChart#setBorderStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart$JFreeChart#setBorderVisible(boolean)": 1915.0,
        "org.jfree.chart$JFreeChart#setNotify(boolean)": 1917.0,
        "org.jfree.chart$JFreeChart#setPadding(org.jfree.chart.util.RectangleInsets)": 1915.0,
        "org.jfree.chart$JFreeChart#setRenderingHints(java.awt.RenderingHints)": 1915.0,
        "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)": 1917.0,
        "org.jfree.chart$JFreeChart#setTextAntiAlias(boolean)": 1917.0,
        "org.jfree.chart$JFreeChart#setTextAntiAlias(java.lang.Object)": 1917.0,
        "org.jfree.chart$JFreeChart#setTitle(java.lang.String)": 1915.0,
        "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)": 1905.0,
        "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)": 3396531.0,
        "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)": 1901.0,
        "org.jfree.chart$LegendItem#<clinit>()": 1757.0,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String)": 1911.0,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.awt.Paint)": 1907.0,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)": 1759.0,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint)": 1881.0,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)": 1873.0,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Stroke,java.awt.Paint)": 1915.0,
        "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)": 1915.0,
        "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint)": 1915.0,
        "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)": 1917.0,
        "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Stroke,java.awt.Paint)": 1917.0,
        "org.jfree.chart$LegendItem#characterIteratorToString(java.text.CharacterIterator)": 1915.0,
        "org.jfree.chart$LegendItem#clone()": 1913.0,
        "org.jfree.chart$LegendItem#equals(java.lang.Object)": 1901.0,
        "org.jfree.chart$LegendItem#getAttributedLabel()": 1917.0,
        "org.jfree.chart$LegendItem#getDataset()": 1811.0,
        "org.jfree.chart$LegendItem#getDatasetIndex()": 1885.0,
        "org.jfree.chart$LegendItem#getDescription()": 1917.0,
        "org.jfree.chart$LegendItem#getFillPaint()": 1815.0,
        "org.jfree.chart$LegendItem#getFillPaintTransformer()": 1815.0,
        "org.jfree.chart$LegendItem#getLabel()": 1783.0,
        "org.jfree.chart$LegendItem#getLabelFont()": 1815.0,
        "org.jfree.chart$LegendItem#getLabelPaint()": 1815.0,
        "org.jfree.chart$LegendItem#getLine()": 1815.0,
        "org.jfree.chart$LegendItem#getLinePaint()": 1815.0,
        "org.jfree.chart$LegendItem#getLineStroke()": 1815.0,
        "org.jfree.chart$LegendItem#getOutlinePaint()": 1815.0,
        "org.jfree.chart$LegendItem#getOutlineStroke()": 1815.0,
        "org.jfree.chart$LegendItem#getSeriesIndex()": 1885.0,
        "org.jfree.chart$LegendItem#getSeriesKey()": 1813.0,
        "org.jfree.chart$LegendItem#getShape()": 1813.0,
        "org.jfree.chart$LegendItem#getToolTipText()": 1815.0,
        "org.jfree.chart$LegendItem#getURLText()": 1815.0,
        "org.jfree.chart$LegendItem#isLineVisible()": 1815.0,
        "org.jfree.chart$LegendItem#isShapeFilled()": 1815.0,
        "org.jfree.chart$LegendItem#isShapeOutlineVisible()": 1815.0,
        "org.jfree.chart$LegendItem#isShapeVisible()": 1815.0,
        "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)": 1911.0,
        "org.jfree.chart$LegendItem#setDataset(org.jfree.data.general.Dataset)": 1775.0,
        "org.jfree.chart$LegendItem#setDatasetIndex(int)": 1785.0,
        "org.jfree.chart$LegendItem#setDescription(java.lang.String)": 1917.0,
        "org.jfree.chart$LegendItem#setFillPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart$LegendItem#setFillPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)": 1875.0,
        "org.jfree.chart$LegendItem#setLabelFont(java.awt.Font)": 1783.0,
        "org.jfree.chart$LegendItem#setLabelPaint(java.awt.Paint)": 1913.0,
        "org.jfree.chart$LegendItem#setLine(java.awt.Shape)": 1917.0,
        "org.jfree.chart$LegendItem#setLinePaint(java.awt.Paint)": 1913.0,
        "org.jfree.chart$LegendItem#setLineVisible(boolean)": 1917.0,
        "org.jfree.chart$LegendItem#setOutlinePaint(java.awt.Paint)": 1909.0,
        "org.jfree.chart$LegendItem#setOutlineStroke(java.awt.Stroke)": 1913.0,
        "org.jfree.chart$LegendItem#setSeriesIndex(int)": 1777.0,
        "org.jfree.chart$LegendItem#setSeriesKey(java.lang.Comparable)": 1777.0,
        "org.jfree.chart$LegendItem#setShape(java.awt.Shape)": 1917.0,
        "org.jfree.chart$LegendItem#setShapeVisible(boolean)": 1917.0,
        "org.jfree.chart$LegendItem#setToolTipText(java.lang.String)": 1913.0,
        "org.jfree.chart$LegendItem#setURLText(java.lang.String)": 1913.0,
        "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)": 1911.0,
        "org.jfree.chart$LegendItemCollection#LegendItemCollection()": 1773.0,
        "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)": 1799.0,
        "org.jfree.chart$LegendItemCollection#addAll(org.jfree.chart.LegendItemCollection)": 1909.0,
        "org.jfree.chart$LegendItemCollection#clone()": 1911.0,
        "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)": 1903.0,
        "org.jfree.chart$LegendItemCollection#get(int)": 1813.0,
        "org.jfree.chart$LegendItemCollection#getItemCount()": 1787.0,
        "org.jfree.chart$LegendItemCollection#iterator()": 1917.0,
        "org.jfree.chart$StandardChartTheme#StandardChartTheme(java.lang.String)": 3385479.0,
        "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)": 3396531.0,
        "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)": 3455779.0,
        "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)": 1917.0,
        "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)": 1917.0,
        "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)": 1815.0,
        "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)": 1815.0,
        "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)": 1815.0,
        "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)": 1917.0,
        "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)": 1917.0,
        "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)": 1917.0,
        "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)": 1917.0,
        "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)": 3694045.0,
        "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)": 3396531.0,
        "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)": 1917.0,
        "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)": 1917.0,
        "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)": 1917.0,
        "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)": 1917.0,
        "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)": 3485595.0,
        "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)": 3455779.0,
        "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)": 1917.0,
        "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)": 3648049.0,
        "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)": 3648049.0,
        "org.jfree.chart$StandardChartTheme#clone()": 1915.0,
        "org.jfree.chart$StandardChartTheme#createDarknessTheme()": 1917.0,
        "org.jfree.chart$StandardChartTheme#createJFreeTheme()": 1917.0,
        "org.jfree.chart$StandardChartTheme#createLegacyTheme()": 1917.0,
        "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)": 1911.0,
        "org.jfree.chart$StandardChartTheme#getAxisLabelPaint()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getAxisOffset()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getBarPainter()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getBaselinePaint()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getChartBackgroundPaint()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getCrosshairPaint()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getDomainGridlinePaint()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getDrawingSupplier()": 3396531.0,
        "org.jfree.chart$StandardChartTheme#getErrorIndicatorPaint()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getExtraLargeFont()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getGridBandAlternatePaint()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getGridBandPaint()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getItemLabelPaint()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getLabelLinkPaint()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getLabelLinkStyle()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getLargeFont()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getLegendBackgroundPaint()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getLegendItemPaint()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getName()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getPlotBackgroundPaint()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getPlotOutlinePaint()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getRangeGridlinePaint()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getRegularFont()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getShadowPaint()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getSmallFont()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getSubtitlePaint()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getThermometerPaint()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getTickLabelPaint()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getTitlePaint()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getWallPaint()": 1917.0,
        "org.jfree.chart$StandardChartTheme#getXYBarPainter()": 1917.0,
        "org.jfree.chart$StandardChartTheme#isShadowVisible()": 1915.0,
        "org.jfree.chart$StandardChartTheme#readObject(java.io.ObjectInputStream)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setAxisLabelPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setAxisOffset(org.jfree.chart.util.RectangleInsets)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setBarPainter(org.jfree.chart.renderer.category.BarPainter)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setBaselinePaint(java.awt.Paint)": 1917.0,
        "org.jfree.chart$StandardChartTheme#setChartBackgroundPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setCrosshairPaint(java.awt.Paint)": 1917.0,
        "org.jfree.chart$StandardChartTheme#setDomainGridlinePaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setErrorIndicatorPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setExtraLargeFont(java.awt.Font)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setGridBandAlternatePaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setGridBandPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setItemLabelPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setLabelLinkPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setLabelLinkStyle(org.jfree.chart.plot.PieLabelLinkStyle)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setLargeFont(java.awt.Font)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setLegendBackgroundPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setLegendItemPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setPlotBackgroundPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setPlotOutlinePaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setRangeGridlinePaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setRegularFont(java.awt.Font)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setShadowPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setShadowVisible(boolean)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setSmallFont(java.awt.Font)": 1917.0,
        "org.jfree.chart$StandardChartTheme#setSubtitlePaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setThermometerPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setTickLabelPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setTitlePaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setWallPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart$StandardChartTheme#setXYBarPainter(org.jfree.chart.renderer.xy.XYBarPainter)": 1915.0,
        "org.jfree.chart$StandardChartTheme#writeObject(java.io.ObjectOutputStream)": 1915.0,
        "org.jfree.chart.axis$Axis#<clinit>()": 2732101.0,
        "org.jfree.chart.axis$Axis#Axis(java.lang.String)": 2805339.0,
        "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)": 3069295.0,
        "org.jfree.chart.axis$Axis#clone()": 1867.0,
        "org.jfree.chart.axis$Axis#createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1805.0,
        "org.jfree.chart.axis$Axis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1839.0,
        "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)": 1799.0,
        "org.jfree.chart.axis$Axis#equals(java.lang.Object)": 1735.0,
        "org.jfree.chart.axis$Axis#fireChangeEvent()": 3422389.0,
        "org.jfree.chart.axis$Axis#getAxisLinePaint()": 1801.0,
        "org.jfree.chart.axis$Axis#getAxisLineStroke()": 1801.0,
        "org.jfree.chart.axis$Axis#getFixedDimension()": 1799.0,
        "org.jfree.chart.axis$Axis#getLabel()": 1781.0,
        "org.jfree.chart.axis$Axis#getLabelAngle()": 1799.0,
        "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)": 1799.0,
        "org.jfree.chart.axis$Axis#getLabelFont()": 1799.0,
        "org.jfree.chart.axis$Axis#getLabelInsets()": 1799.0,
        "org.jfree.chart.axis$Axis#getLabelPaint()": 1799.0,
        "org.jfree.chart.axis$Axis#getLabelToolTip()": 1917.0,
        "org.jfree.chart.axis$Axis#getLabelURL()": 1917.0,
        "org.jfree.chart.axis$Axis#getMinorTickMarkInsideLength()": 1917.0,
        "org.jfree.chart.axis$Axis#getMinorTickMarkOutsideLength()": 1917.0,
        "org.jfree.chart.axis$Axis#getPlot()": 2965045.0,
        "org.jfree.chart.axis$Axis#getTickLabelFont()": 1797.0,
        "org.jfree.chart.axis$Axis#getTickLabelInsets()": 1799.0,
        "org.jfree.chart.axis$Axis#getTickLabelPaint()": 1799.0,
        "org.jfree.chart.axis$Axis#getTickMarkInsideLength()": 1799.0,
        "org.jfree.chart.axis$Axis#getTickMarkOutsideLength()": 1799.0,
        "org.jfree.chart.axis$Axis#getTickMarkPaint()": 1799.0,
        "org.jfree.chart.axis$Axis#getTickMarkStroke()": 1799.0,
        "org.jfree.chart.axis$Axis#hasListener(java.util.EventListener)": 1913.0,
        "org.jfree.chart.axis$Axis#isAxisLineVisible()": 1799.0,
        "org.jfree.chart.axis$Axis#isMinorTickMarksVisible()": 1807.0,
        "org.jfree.chart.axis$Axis#isTickLabelsVisible()": 1799.0,
        "org.jfree.chart.axis$Axis#isTickMarksVisible()": 1797.0,
        "org.jfree.chart.axis$Axis#isVisible()": 1799.0,
        "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)": 3153991.0,
        "org.jfree.chart.axis$Axis#readObject(java.io.ObjectInputStream)": 1853.0,
        "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)": 1879.0,
        "org.jfree.chart.axis$Axis#setAxisLinePaint(java.awt.Paint)": 1913.0,
        "org.jfree.chart.axis$Axis#setAxisLineStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart.axis$Axis#setAxisLineVisible(boolean)": 1907.0,
        "org.jfree.chart.axis$Axis#setFixedDimension(double)": 1917.0,
        "org.jfree.chart.axis$Axis#setLabel(java.lang.String)": 1911.0,
        "org.jfree.chart.axis$Axis#setLabelAngle(double)": 1917.0,
        "org.jfree.chart.axis$Axis#setLabelFont(java.awt.Font)": 3455779.0,
        "org.jfree.chart.axis$Axis#setLabelInsets(org.jfree.chart.util.RectangleInsets)": 1917.0,
        "org.jfree.chart.axis$Axis#setLabelInsets(org.jfree.chart.util.RectangleInsets,boolean)": 1917.0,
        "org.jfree.chart.axis$Axis#setLabelPaint(java.awt.Paint)": 3455779.0,
        "org.jfree.chart.axis$Axis#setLabelToolTip(java.lang.String)": 1917.0,
        "org.jfree.chart.axis$Axis#setLabelURL(java.lang.String)": 1917.0,
        "org.jfree.chart.axis$Axis#setMinorTickMarkInsideLength(float)": 1917.0,
        "org.jfree.chart.axis$Axis#setMinorTickMarkOutsideLength(float)": 1917.0,
        "org.jfree.chart.axis$Axis#setMinorTickMarksVisible(boolean)": 1917.0,
        "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)": 3086845.0,
        "org.jfree.chart.axis$Axis#setTickLabelFont(java.awt.Font)": 3455779.0,
        "org.jfree.chart.axis$Axis#setTickLabelInsets(org.jfree.chart.util.RectangleInsets)": 1917.0,
        "org.jfree.chart.axis$Axis#setTickLabelPaint(java.awt.Paint)": 3455779.0,
        "org.jfree.chart.axis$Axis#setTickLabelsVisible(boolean)": 1917.0,
        "org.jfree.chart.axis$Axis#setTickMarkInsideLength(float)": 1917.0,
        "org.jfree.chart.axis$Axis#setTickMarkOutsideLength(float)": 1917.0,
        "org.jfree.chart.axis$Axis#setTickMarkPaint(java.awt.Paint)": 1917.0,
        "org.jfree.chart.axis$Axis#setTickMarkStroke(java.awt.Stroke)": 1917.0,
        "org.jfree.chart.axis$Axis#setTickMarksVisible(boolean)": 1917.0,
        "org.jfree.chart.axis$Axis#setVisible(boolean)": 1917.0,
        "org.jfree.chart.axis$Axis#writeObject(java.io.ObjectOutputStream)": 1853.0,
        "org.jfree.chart.axis$AxisCollection#AxisCollection()": 1805.0,
        "org.jfree.chart.axis$AxisCollection#add(org.jfree.chart.axis.Axis,org.jfree.chart.util.RectangleEdge)": 1805.0,
        "org.jfree.chart.axis$AxisCollection#getAxesAtBottom()": 1805.0,
        "org.jfree.chart.axis$AxisCollection#getAxesAtLeft()": 1805.0,
        "org.jfree.chart.axis$AxisCollection#getAxesAtRight()": 1805.0,
        "org.jfree.chart.axis$AxisCollection#getAxesAtTop()": 1805.0,
        "org.jfree.chart.axis$AxisLocation#<clinit>()": 3003061.0,
        "org.jfree.chart.axis$AxisLocation#AxisLocation(java.lang.String)": 3003061.0,
        "org.jfree.chart.axis$AxisLocation#equals(java.lang.Object)": 1865.0,
        "org.jfree.chart.axis$AxisLocation#getOpposite()": 1917.0,
        "org.jfree.chart.axis$AxisLocation#getOpposite(org.jfree.chart.axis.AxisLocation)": 1917.0,
        "org.jfree.chart.axis$AxisLocation#readResolve()": 1881.0,
        "org.jfree.chart.axis$AxisLocation#toString()": 1873.0,
        "org.jfree.chart.axis$AxisSpace#AxisSpace()": 1789.0,
        "org.jfree.chart.axis$AxisSpace#add(double,org.jfree.chart.util.RectangleEdge)": 1799.0,
        "org.jfree.chart.axis$AxisSpace#clone()": 1913.0,
        "org.jfree.chart.axis$AxisSpace#ensureAtLeast(double,org.jfree.chart.util.RectangleEdge)": 1913.0,
        "org.jfree.chart.axis$AxisSpace#ensureAtLeast(org.jfree.chart.axis.AxisSpace)": 1909.0,
        "org.jfree.chart.axis$AxisSpace#equals(java.lang.Object)": 1907.0,
        "org.jfree.chart.axis$AxisSpace#expand(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)": 1917.0,
        "org.jfree.chart.axis$AxisSpace#getBottom()": 1913.0,
        "org.jfree.chart.axis$AxisSpace#getLeft()": 1917.0,
        "org.jfree.chart.axis$AxisSpace#getRight()": 1917.0,
        "org.jfree.chart.axis$AxisSpace#getTop()": 1913.0,
        "org.jfree.chart.axis$AxisSpace#hashCode()": 1915.0,
        "org.jfree.chart.axis$AxisSpace#reserved(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$AxisSpace#setBottom(double)": 1913.0,
        "org.jfree.chart.axis$AxisSpace#setLeft(double)": 1915.0,
        "org.jfree.chart.axis$AxisSpace#setRight(double)": 1915.0,
        "org.jfree.chart.axis$AxisSpace#setTop(double)": 1915.0,
        "org.jfree.chart.axis$AxisSpace#shrink(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)": 1799.0,
        "org.jfree.chart.axis$AxisSpace#toString()": 1917.0,
        "org.jfree.chart.axis$AxisState#AxisState()": 1797.0,
        "org.jfree.chart.axis$AxisState#AxisState(double)": 1797.0,
        "org.jfree.chart.axis$AxisState#cursorDown(double)": 1827.0,
        "org.jfree.chart.axis$AxisState#cursorLeft(double)": 1803.0,
        "org.jfree.chart.axis$AxisState#cursorRight(double)": 1917.0,
        "org.jfree.chart.axis$AxisState#cursorUp(double)": 1889.0,
        "org.jfree.chart.axis$AxisState#getCursor()": 1799.0,
        "org.jfree.chart.axis$AxisState#getMax()": 1839.0,
        "org.jfree.chart.axis$AxisState#getTicks()": 1803.0,
        "org.jfree.chart.axis$AxisState#moveCursor(double,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$AxisState#setCursor(double)": 1917.0,
        "org.jfree.chart.axis$AxisState#setMax(double)": 1839.0,
        "org.jfree.chart.axis$AxisState#setTicks(java.util.List)": 1799.0,
        "org.jfree.chart.axis$CategoryAxis#CategoryAxis()": 1915.0,
        "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)": 1675.0,
        "org.jfree.chart.axis$CategoryAxis#addCategoryLabelToolTip(java.lang.Comparable,java.lang.String)": 1911.0,
        "org.jfree.chart.axis$CategoryAxis#calculateCategoryGapSize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1849.0,
        "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1841.0,
        "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)": 1875.0,
        "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)": 1891.0,
        "org.jfree.chart.axis$CategoryAxis#clearCategoryLabelToolTips()": 1917.0,
        "org.jfree.chart.axis$CategoryAxis#clone()": 1899.0,
        "org.jfree.chart.axis$CategoryAxis#configure()": 1711.0,
        "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)": 1849.0,
        "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1847.0,
        "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)": 1839.0,
        "org.jfree.chart.axis$CategoryAxis#drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState)": 1841.0,
        "org.jfree.chart.axis$CategoryAxis#equalPaintMaps(java.util.Map,java.util.Map)": 1857.0,
        "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)": 1855.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1849.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1915.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelPositionOffset()": 1917.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelPositions()": 1917.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelToolTip(java.lang.Comparable)": 1897.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryMargin()": 1877.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1849.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(java.lang.Comparable,java.util.List,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1849.0,
        "org.jfree.chart.axis$CategoryAxis#getCategorySeriesMiddle(int,int,int,int,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$CategoryAxis#getCategorySeriesMiddle(java.lang.Comparable,java.lang.Comparable,org.jfree.data.category.CategoryDataset,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1913.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1849.0,
        "org.jfree.chart.axis$CategoryAxis#getLowerMargin()": 1841.0,
        "org.jfree.chart.axis$CategoryAxis#getMaximumCategoryLabelLines()": 1917.0,
        "org.jfree.chart.axis$CategoryAxis#getMaximumCategoryLabelWidthRatio()": 1917.0,
        "org.jfree.chart.axis$CategoryAxis#getTickLabelFont(java.lang.Comparable)": 1849.0,
        "org.jfree.chart.axis$CategoryAxis#getTickLabelPaint(java.lang.Comparable)": 1849.0,
        "org.jfree.chart.axis$CategoryAxis#getUpperMargin()": 1841.0,
        "org.jfree.chart.axis$CategoryAxis#hashCode()": 1831.0,
        "org.jfree.chart.axis$CategoryAxis#readObject(java.io.ObjectInputStream)": 1893.0,
        "org.jfree.chart.axis$CategoryAxis#readPaintMap(java.io.ObjectInputStream)": 1893.0,
        "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1839.0,
        "org.jfree.chart.axis$CategoryAxis#removeCategoryLabelToolTip(java.lang.Comparable)": 1917.0,
        "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)": 1839.0,
        "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositionOffset(int)": 1915.0,
        "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositions(org.jfree.chart.axis.CategoryLabelPositions)": 1915.0,
        "org.jfree.chart.axis$CategoryAxis#setCategoryMargin(double)": 1893.0,
        "org.jfree.chart.axis$CategoryAxis#setLowerMargin(double)": 1915.0,
        "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelLines(int)": 1917.0,
        "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelWidthRatio(float)": 1915.0,
        "org.jfree.chart.axis$CategoryAxis#setTickLabelFont(java.lang.Comparable,java.awt.Font)": 1911.0,
        "org.jfree.chart.axis$CategoryAxis#setTickLabelPaint(java.lang.Comparable,java.awt.Paint)": 1909.0,
        "org.jfree.chart.axis$CategoryAxis#setUpperMargin(double)": 1915.0,
        "org.jfree.chart.axis$CategoryAxis#writeObject(java.io.ObjectOutputStream)": 1893.0,
        "org.jfree.chart.axis$CategoryAxis#writePaintMap(java.util.Map,java.io.ObjectOutputStream)": 1893.0,
        "org.jfree.chart.axis$CategoryAxis3D#CategoryAxis3D()": 1917.0,
        "org.jfree.chart.axis$CategoryAxis3D#CategoryAxis3D(java.lang.String)": 1889.0,
        "org.jfree.chart.axis$CategoryAxis3D#clone()": 1915.0,
        "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1911.0,
        "org.jfree.chart.axis$CategoryAxis3D#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$DateAxis#<clinit>()": 3651871.0,
        "org.jfree.chart.axis$DateAxis#DateAxis()": 1915.0,
        "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)": 3655695.0,
        "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone)": 3655695.0,
        "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone,java.util.Locale)": 3651871.0,
        "org.jfree.chart.axis$DateAxis#autoAdjustRange()": 3651871.0,
        "org.jfree.chart.axis$DateAxis#calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)": 1909.0,
        "org.jfree.chart.axis$DateAxis#calculateHighestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)": 1917.0,
        "org.jfree.chart.axis$DateAxis#calculateLowestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)": 1911.0,
        "org.jfree.chart.axis$DateAxis#clone()": 1915.0,
        "org.jfree.chart.axis$DateAxis#configure()": 3736461.0,
        "org.jfree.chart.axis$DateAxis#correctTickDateForPosition(java.util.Date,org.jfree.chart.axis.DateTickUnit,org.jfree.chart.axis.DateTickMarkPosition)": 1911.0,
        "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits()": 1917.0,
        "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone)": 1917.0,
        "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)": 3651871.0,
        "org.jfree.chart.axis$DateAxis#dateToJava2D(java.util.Date,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1913.0,
        "org.jfree.chart.axis$DateAxis#equals(java.lang.Object)": 1905.0,
        "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)": 1917.0,
        "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)": 1913.0,
        "org.jfree.chart.axis$DateAxis#getDateFormatOverride()": 1911.0,
        "org.jfree.chart.axis$DateAxis#getMaximumDate()": 1907.0,
        "org.jfree.chart.axis$DateAxis#getMinimumDate()": 1907.0,
        "org.jfree.chart.axis$DateAxis#getTickMarkPosition()": 1917.0,
        "org.jfree.chart.axis$DateAxis#getTickUnit()": 1911.0,
        "org.jfree.chart.axis$DateAxis#getTimeZone()": 1917.0,
        "org.jfree.chart.axis$DateAxis#getTimeline()": 1917.0,
        "org.jfree.chart.axis$DateAxis#hashCode()": 1911.0,
        "org.jfree.chart.axis$DateAxis#isHiddenValue(long)": 1911.0,
        "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1915.0,
        "org.jfree.chart.axis$DateAxis#nextStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)": 1911.0,
        "org.jfree.chart.axis$DateAxis#previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)": 1887.0,
        "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1911.0,
        "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1911.0,
        "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1915.0,
        "org.jfree.chart.axis$DateAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1913.0,
        "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1913.0,
        "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$DateAxis#setDateFormatOverride(java.text.DateFormat)": 1915.0,
        "org.jfree.chart.axis$DateAxis#setMaximumDate(java.util.Date)": 1913.0,
        "org.jfree.chart.axis$DateAxis#setMinimumDate(java.util.Date)": 1913.0,
        "org.jfree.chart.axis$DateAxis#setRange(double,double)": 1915.0,
        "org.jfree.chart.axis$DateAxis#setRange(java.util.Date,java.util.Date)": 1887.0,
        "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)": 1885.0,
        "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)": 3651871.0,
        "org.jfree.chart.axis$DateAxis#setTickMarkPosition(org.jfree.chart.axis.DateTickMarkPosition)": 1889.0,
        "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit)": 1889.0,
        "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)": 3651871.0,
        "org.jfree.chart.axis$DateAxis#setTimeZone(java.util.TimeZone)": 1917.0,
        "org.jfree.chart.axis$DateAxis#setTimeline(org.jfree.chart.axis.Timeline)": 1915.0,
        "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1913.0,
        "org.jfree.chart.axis$DateAxis#zoomRange(double,double)": 1917.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#DateAxis$DefaultTimeline()": 3651871.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainRange(java.util.Date,java.util.Date)": 1917.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainRange(long,long)": 1917.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainValue(java.util.Date)": 1911.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainValue(long)": 1917.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#equals(java.lang.Object)": 1913.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#toMillisecond(long)": 1903.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#toTimelineValue(java.util.Date)": 1917.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#toTimelineValue(long)": 1903.0,
        "org.jfree.chart.axis$DateTickMarkPosition#<clinit>()": 3640411.0,
        "org.jfree.chart.axis$DateTickMarkPosition#DateTickMarkPosition(java.lang.String)": 3640411.0,
        "org.jfree.chart.axis$DateTickMarkPosition#equals(java.lang.Object)": 1905.0,
        "org.jfree.chart.axis$DateTickMarkPosition#readResolve()": 1911.0,
        "org.jfree.chart.axis$DateTickMarkPosition#toString()": 1907.0,
        "org.jfree.chart.axis$DateTickUnit#DateTickUnit(org.jfree.chart.axis.DateTickUnitType,int)": 1885.0,
        "org.jfree.chart.axis$DateTickUnit#DateTickUnit(org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)": 3640411.0,
        "org.jfree.chart.axis$DateTickUnit#DateTickUnit(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)": 3640411.0,
        "org.jfree.chart.axis$DateTickUnit#addToDate(java.util.Date,java.util.TimeZone)": 1887.0,
        "org.jfree.chart.axis$DateTickUnit#dateToString(java.util.Date)": 1911.0,
        "org.jfree.chart.axis$DateTickUnit#equals(java.lang.Object)": 1901.0,
        "org.jfree.chart.axis$DateTickUnit#getCalendarField()": 1887.0,
        "org.jfree.chart.axis$DateTickUnit#getMillisecondCount(org.jfree.chart.axis.DateTickUnitType,int)": 3640411.0,
        "org.jfree.chart.axis$DateTickUnit#getMultiple()": 1887.0,
        "org.jfree.chart.axis$DateTickUnit#getRollMultiple()": 1917.0,
        "org.jfree.chart.axis$DateTickUnit#getRollUnitType()": 1917.0,
        "org.jfree.chart.axis$DateTickUnit#getUnitType()": 1887.0,
        "org.jfree.chart.axis$DateTickUnit#hashCode()": 1915.0,
        "org.jfree.chart.axis$DateTickUnit#notNull(java.text.DateFormat)": 1917.0,
        "org.jfree.chart.axis$DateTickUnit#rollDate(java.util.Date)": 1917.0,
        "org.jfree.chart.axis$DateTickUnit#rollDate(java.util.Date,java.util.TimeZone)": 1917.0,
        "org.jfree.chart.axis$DateTickUnit#toString()": 1917.0,
        "org.jfree.chart.axis$DateTickUnit#valueToString(double)": 1917.0,
        "org.jfree.chart.axis$DateTickUnitType#<clinit>()": 3640411.0,
        "org.jfree.chart.axis$DateTickUnitType#DateTickUnitType(java.lang.String,int)": 3640411.0,
        "org.jfree.chart.axis$DateTickUnitType#equals(java.lang.Object)": 3640411.0,
        "org.jfree.chart.axis$DateTickUnitType#getCalendarField()": 1887.0,
        "org.jfree.chart.axis$DateTickUnitType#readResolve()": 1911.0,
        "org.jfree.chart.axis$DateTickUnitType#toString()": 3640411.0,
        "org.jfree.chart.axis$LogAxis#LogAxis()": 1915.0,
        "org.jfree.chart.axis$LogAxis#LogAxis(java.lang.String)": 1899.0,
        "org.jfree.chart.axis$LogAxis#autoAdjustRange()": 1913.0,
        "org.jfree.chart.axis$LogAxis#calculateLog(double)": 1911.0,
        "org.jfree.chart.axis$LogAxis#calculateValue(double)": 1911.0,
        "org.jfree.chart.axis$LogAxis#configure()": 1913.0,
        "org.jfree.chart.axis$LogAxis#createLogTickUnits(java.util.Locale)": 1899.0,
        "org.jfree.chart.axis$LogAxis#createTickLabel(double)": 1917.0,
        "org.jfree.chart.axis$LogAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1917.0,
        "org.jfree.chart.axis$LogAxis#equals(java.lang.Object)": 1909.0,
        "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)": 1917.0,
        "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)": 1917.0,
        "org.jfree.chart.axis$LogAxis#exponentLengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$LogAxis#getBase()": 1917.0,
        "org.jfree.chart.axis$LogAxis#getNumberFormatOverride()": 1917.0,
        "org.jfree.chart.axis$LogAxis#getSmallestValue()": 1917.0,
        "org.jfree.chart.axis$LogAxis#getTickUnit()": 1917.0,
        "org.jfree.chart.axis$LogAxis#hashCode()": 1915.0,
        "org.jfree.chart.axis$LogAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1915.0,
        "org.jfree.chart.axis$LogAxis#pan(double)": 1917.0,
        "org.jfree.chart.axis$LogAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$LogAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$LogAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$LogAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$LogAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$LogAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$LogAxis#setBase(double)": 1915.0,
        "org.jfree.chart.axis$LogAxis#setNumberFormatOverride(java.text.NumberFormat)": 1917.0,
        "org.jfree.chart.axis$LogAxis#setSmallestValue(double)": 1915.0,
        "org.jfree.chart.axis$LogAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit)": 1917.0,
        "org.jfree.chart.axis$LogAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)": 1917.0,
        "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$LogAxis#zoomRange(double,double)": 1917.0,
        "org.jfree.chart.axis$MarkerAxisBand#MarkerAxisBand(org.jfree.chart.axis.NumberAxis,double,double,double,double,java.awt.Font)": 1911.0,
        "org.jfree.chart.axis$MarkerAxisBand#addMarker(org.jfree.chart.plot.IntervalMarker)": 1917.0,
        "org.jfree.chart.axis$MarkerAxisBand#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double)": 1917.0,
        "org.jfree.chart.axis$MarkerAxisBand#drawStringInRect(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.Font,java.lang.String)": 1917.0,
        "org.jfree.chart.axis$MarkerAxisBand#equals(java.lang.Object)": 1911.0,
        "org.jfree.chart.axis$MarkerAxisBand#getHeight(java.awt.Graphics2D)": 1917.0,
        "org.jfree.chart.axis$MarkerAxisBand#hashCode()": 1915.0,
        "org.jfree.chart.axis$NumberAxis#<clinit>()": 2917011.0,
        "org.jfree.chart.axis$NumberAxis#NumberAxis()": 1909.0,
        "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)": 3009999.0,
        "org.jfree.chart.axis$NumberAxis#autoAdjustRange()": 3090361.0,
        "org.jfree.chart.axis$NumberAxis#calculateHighestVisibleTickValue()": 1917.0,
        "org.jfree.chart.axis$NumberAxis#calculateLowestVisibleTickValue()": 1803.0,
        "org.jfree.chart.axis$NumberAxis#calculateVisibleTickCount()": 1803.0,
        "org.jfree.chart.axis$NumberAxis#clone()": 1887.0,
        "org.jfree.chart.axis$NumberAxis#configure()": 3111499.0,
        "org.jfree.chart.axis$NumberAxis#createIntegerTickUnits()": 3713295.0,
        "org.jfree.chart.axis$NumberAxis#createIntegerTickUnits(java.util.Locale)": 1917.0,
        "org.jfree.chart.axis$NumberAxis#createStandardTickUnits()": 3009999.0,
        "org.jfree.chart.axis$NumberAxis#createStandardTickUnits(java.util.Locale)": 1917.0,
        "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1811.0,
        "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)": 1793.0,
        "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)": 1827.0,
        "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)": 1853.0,
        "org.jfree.chart.axis$NumberAxis#getAutoRangeIncludesZero()": 3111499.0,
        "org.jfree.chart.axis$NumberAxis#getAutoRangeStickyZero()": 3111499.0,
        "org.jfree.chart.axis$NumberAxis#getMarkerBand()": 1917.0,
        "org.jfree.chart.axis$NumberAxis#getNumberFormatOverride()": 1803.0,
        "org.jfree.chart.axis$NumberAxis#getRangeType()": 1917.0,
        "org.jfree.chart.axis$NumberAxis#getTickUnit()": 1803.0,
        "org.jfree.chart.axis$NumberAxis#hashCode()": 1801.0,
        "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1915.0,
        "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1803.0,
        "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1853.0,
        "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1827.0,
        "org.jfree.chart.axis$NumberAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1803.0,
        "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1853.0,
        "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1827.0,
        "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)": 3594751.0,
        "org.jfree.chart.axis$NumberAxis#setAutoRangeStickyZero(boolean)": 1909.0,
        "org.jfree.chart.axis$NumberAxis#setMarkerBand(org.jfree.chart.axis.MarkerAxisBand)": 1917.0,
        "org.jfree.chart.axis$NumberAxis#setNumberFormatOverride(java.text.NumberFormat)": 1915.0,
        "org.jfree.chart.axis$NumberAxis#setRangeType(org.jfree.data.RangeType)": 1915.0,
        "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit)": 1915.0,
        "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)": 1801.0,
        "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1803.0,
        "org.jfree.chart.axis$NumberAxis3D#NumberAxis3D()": 1917.0,
        "org.jfree.chart.axis$NumberAxis3D#NumberAxis3D(java.lang.String)": 1891.0,
        "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1911.0,
        "org.jfree.chart.axis$NumberTick#NumberTick(java.lang.Number,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)": 1803.0,
        "org.jfree.chart.axis$NumberTick#NumberTick(org.jfree.chart.axis.TickType,double,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)": 1805.0,
        "org.jfree.chart.axis$NumberTick#getNumber()": 1917.0,
        "org.jfree.chart.axis$NumberTickUnit#NumberTickUnit(double)": 1909.0,
        "org.jfree.chart.axis$NumberTickUnit#NumberTickUnit(double,java.text.NumberFormat)": 2876151.0,
        "org.jfree.chart.axis$NumberTickUnit#NumberTickUnit(double,java.text.NumberFormat,int)": 2975389.0,
        "org.jfree.chart.axis$NumberTickUnit#equals(java.lang.Object)": 1811.0,
        "org.jfree.chart.axis$NumberTickUnit#hashCode()": 1913.0,
        "org.jfree.chart.axis$NumberTickUnit#toString()": 1917.0,
        "org.jfree.chart.axis$NumberTickUnit#valueToString(double)": 1803.0,
        "org.jfree.chart.axis$PeriodAxis#PeriodAxis(java.lang.String)": 1907.0,
        "org.jfree.chart.axis$PeriodAxis#PeriodAxis(java.lang.String,org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)": 1907.0,
        "org.jfree.chart.axis$PeriodAxis#PeriodAxis(java.lang.String,org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod,java.util.TimeZone,java.util.Locale)": 1905.0,
        "org.jfree.chart.axis$PeriodAxis#autoAdjustRange()": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#clone()": 1915.0,
        "org.jfree.chart.axis$PeriodAxis#configure()": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone,java.util.Locale)": 1915.0,
        "org.jfree.chart.axis$PeriodAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#drawTickMarks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#drawTickMarksVertical(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#equals(java.lang.Object)": 1907.0,
        "org.jfree.chart.axis$PeriodAxis#getAutoRangeTimePeriodClass()": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#getFirst()": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#getLabelInfo()": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#getLast()": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#getLocale()": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#getMajorTickTimePeriodClass()": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#getMinorTickMarkInsideLength()": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#getMinorTickMarkOutsideLength()": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#getMinorTickMarkPaint()": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#getMinorTickMarkStroke()": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#getMinorTickTimePeriodClass()": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#getRange()": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#getTimeZone()": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#hashCode()": 1915.0,
        "org.jfree.chart.axis$PeriodAxis#isMinorTickMarksVisible()": 1907.0,
        "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#readObject(java.io.ObjectInputStream)": 1915.0,
        "org.jfree.chart.axis$PeriodAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#setAutoRangeTimePeriodClass(java.lang.Class)": 1913.0,
        "org.jfree.chart.axis$PeriodAxis#setFirst(org.jfree.data.time.RegularTimePeriod)": 1913.0,
        "org.jfree.chart.axis$PeriodAxis#setLabelInfo(org.jfree.chart.axis.PeriodAxisLabelInfo[])": 1913.0,
        "org.jfree.chart.axis$PeriodAxis#setLast(org.jfree.data.time.RegularTimePeriod)": 1913.0,
        "org.jfree.chart.axis$PeriodAxis#setMajorTickTimePeriodClass(java.lang.Class)": 1915.0,
        "org.jfree.chart.axis$PeriodAxis#setMinorTickMarkInsideLength(float)": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#setMinorTickMarkOutsideLength(float)": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#setMinorTickMarkPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart.axis$PeriodAxis#setMinorTickMarkStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart.axis$PeriodAxis#setMinorTickMarksVisible(boolean)": 1915.0,
        "org.jfree.chart.axis$PeriodAxis#setMinorTickTimePeriodClass(java.lang.Class)": 1915.0,
        "org.jfree.chart.axis$PeriodAxis#setRange(org.jfree.data.Range,boolean,boolean)": 1915.0,
        "org.jfree.chart.axis$PeriodAxis#setTimeZone(java.util.TimeZone)": 1913.0,
        "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$PeriodAxis#writeObject(java.io.ObjectOutputStream)": 1915.0,
        "org.jfree.chart.axis$SegmentedTimeline#<clinit>()": 1837.0,
        "org.jfree.chart.axis$SegmentedTimeline#SegmentedTimeline(long,int,int)": 1837.0,
        "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineException(java.util.Date)": 1917.0,
        "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineException(long)": 1913.0,
        "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineExclusions(long,long)": 1897.0,
        "org.jfree.chart.axis$SegmentedTimeline#addException(java.util.Date)": 1915.0,
        "org.jfree.chart.axis$SegmentedTimeline#addException(long)": 1899.0,
        "org.jfree.chart.axis$SegmentedTimeline#addException(long,long)": 1913.0,
        "org.jfree.chart.axis$SegmentedTimeline#addException(org.jfree.chart.axis.SegmentedTimeline$Segment)": 1883.0,
        "org.jfree.chart.axis$SegmentedTimeline#addExceptions(java.util.List)": 1917.0,
        "org.jfree.chart.axis$SegmentedTimeline#binarySearchExceptionSegments(org.jfree.chart.axis.SegmentedTimeline$Segment)": 1873.0,
        "org.jfree.chart.axis$SegmentedTimeline#clone()": 1915.0,
        "org.jfree.chart.axis$SegmentedTimeline#containsDomainRange(java.util.Date,java.util.Date)": 1917.0,
        "org.jfree.chart.axis$SegmentedTimeline#containsDomainRange(long,long)": 1917.0,
        "org.jfree.chart.axis$SegmentedTimeline#containsDomainValue(java.util.Date)": 1917.0,
        "org.jfree.chart.axis$SegmentedTimeline#containsDomainValue(long)": 1913.0,
        "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object)": 1903.0,
        "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)": 1903.0,
        "org.jfree.chart.axis$SegmentedTimeline#firstMondayAfter1900()": 1837.0,
        "org.jfree.chart.axis$SegmentedTimeline#getAdjustForDaylightSaving()": 1917.0,
        "org.jfree.chart.axis$SegmentedTimeline#getBaseTimeline()": 1911.0,
        "org.jfree.chart.axis$SegmentedTimeline#getDate(long)": 1917.0,
        "org.jfree.chart.axis$SegmentedTimeline#getExceptionSegmentCount(long,long)": 1881.0,
        "org.jfree.chart.axis$SegmentedTimeline#getExceptionSegments()": 1889.0,
        "org.jfree.chart.axis$SegmentedTimeline#getGroupSegmentCount()": 1889.0,
        "org.jfree.chart.axis$SegmentedTimeline#getSegment(java.util.Date)": 1917.0,
        "org.jfree.chart.axis$SegmentedTimeline#getSegment(long)": 1857.0,
        "org.jfree.chart.axis$SegmentedTimeline#getSegmentSize()": 1837.0,
        "org.jfree.chart.axis$SegmentedTimeline#getSegmentsExcluded()": 1877.0,
        "org.jfree.chart.axis$SegmentedTimeline#getSegmentsExcludedSize()": 1917.0,
        "org.jfree.chart.axis$SegmentedTimeline#getSegmentsGroupSize()": 1917.0,
        "org.jfree.chart.axis$SegmentedTimeline#getSegmentsIncluded()": 1889.0,
        "org.jfree.chart.axis$SegmentedTimeline#getSegmentsIncludedSize()": 1917.0,
        "org.jfree.chart.axis$SegmentedTimeline#getStartTime()": 1837.0,
        "org.jfree.chart.axis$SegmentedTimeline#getTime(java.util.Date)": 1895.0,
        "org.jfree.chart.axis$SegmentedTimeline#getTimeFromLong(long)": 1889.0,
        "org.jfree.chart.axis$SegmentedTimeline#hashCode()": 1915.0,
        "org.jfree.chart.axis$SegmentedTimeline#newFifteenMinuteTimeline()": 1855.0,
        "org.jfree.chart.axis$SegmentedTimeline#newMondayThroughFridayTimeline()": 1837.0,
        "org.jfree.chart.axis$SegmentedTimeline#setAdjustForDaylightSaving(boolean)": 1901.0,
        "org.jfree.chart.axis$SegmentedTimeline#setBaseTimeline(org.jfree.chart.axis.SegmentedTimeline)": 1839.0,
        "org.jfree.chart.axis$SegmentedTimeline#setExceptionSegments(java.util.List)": 1895.0,
        "org.jfree.chart.axis$SegmentedTimeline#setStartTime(long)": 1837.0,
        "org.jfree.chart.axis$SegmentedTimeline#toMillisecond(long)": 1889.0,
        "org.jfree.chart.axis$SegmentedTimeline#toTimelineValue(java.util.Date)": 1901.0,
        "org.jfree.chart.axis$SegmentedTimeline#toTimelineValue(long)": 1889.0,
        "org.jfree.chart.axis$SegmentedTimeline$BaseTimelineSegmentRange#SegmentedTimeline$BaseTimelineSegmentRange(org.jfree.chart.axis.SegmentedTimeline,long,long)": 1897.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#SegmentedTimeline$Segment(org.jfree.chart.axis.SegmentedTimeline)": 1897.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#SegmentedTimeline$Segment(org.jfree.chart.axis.SegmentedTimeline,long)": 1857.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#after(org.jfree.chart.axis.SegmentedTimeline$Segment)": 1885.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#before(org.jfree.chart.axis.SegmentedTimeline$Segment)": 1883.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#calculateSegmentNumber(long)": 1857.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#compareTo(java.lang.Object)": 1917.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#contained(long,long)": 1917.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#contains(long)": 1917.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#contains(long,long)": 1883.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#contains(org.jfree.chart.axis.SegmentedTimeline$Segment)": 1883.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#copy()": 1901.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#dec()": 1917.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#dec(long)": 1917.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#equals(java.lang.Object)": 1917.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#getDate()": 1917.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#getMillisecond()": 1897.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentCount()": 1899.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentEnd()": 1867.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentNumber()": 1889.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentNumberRelativeToGroup()": 1873.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentStart()": 1867.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#inExceptionSegments()": 1873.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#inExcludeSegments()": 1881.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#inIncludeSegments()": 1873.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#inc()": 1875.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#inc(long)": 1875.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#intersect(long,long)": 1899.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#moveIndexToEnd()": 1917.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#moveIndexToStart()": 1909.0,
        "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#SegmentedTimeline$SegmentRange(org.jfree.chart.axis.SegmentedTimeline,long,long)": 1897.0,
        "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#getSegmentCount()": 1907.0,
        "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inExcludeSegments()": 1917.0,
        "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inIncludeSegments()": 1897.0,
        "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inc(long)": 1917.0,
        "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#intersect(long,long)": 1897.0,
        "org.jfree.chart.axis$SymbolAxis#<clinit>()": 3374445.0,
        "org.jfree.chart.axis$SymbolAxis#SymbolAxis(java.lang.String,java.lang.String[])": 1911.0,
        "org.jfree.chart.axis$SymbolAxis#autoAdjustRange()": 1911.0,
        "org.jfree.chart.axis$SymbolAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1917.0,
        "org.jfree.chart.axis$SymbolAxis#drawGridBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,java.util.List)": 1917.0,
        "org.jfree.chart.axis$SymbolAxis#drawGridBandsHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,boolean,java.util.List)": 1917.0,
        "org.jfree.chart.axis$SymbolAxis#drawGridBandsVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,boolean,java.util.List)": 1917.0,
        "org.jfree.chart.axis$SymbolAxis#equals(java.lang.Object)": 1911.0,
        "org.jfree.chart.axis$SymbolAxis#getGridBandAlternatePaint()": 1917.0,
        "org.jfree.chart.axis$SymbolAxis#getGridBandPaint()": 1917.0,
        "org.jfree.chart.axis$SymbolAxis#getSymbols()": 1917.0,
        "org.jfree.chart.axis$SymbolAxis#isGridBandsVisible()": 1917.0,
        "org.jfree.chart.axis$SymbolAxis#readObject(java.io.ObjectInputStream)": 1915.0,
        "org.jfree.chart.axis$SymbolAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$SymbolAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$SymbolAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$SymbolAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.axis$SymbolAxis#setGridBandAlternatePaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart.axis$SymbolAxis#setGridBandPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart.axis$SymbolAxis#setGridBandsVisible(boolean)": 1915.0,
        "org.jfree.chart.axis$SymbolAxis#valueToString(double)": 1917.0,
        "org.jfree.chart.axis$SymbolAxis#writeObject(java.io.ObjectOutputStream)": 1915.0,
        "org.jfree.chart.axis$Tick#Tick(java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)": 1781.0,
        "org.jfree.chart.axis$Tick#clone()": 1913.0,
        "org.jfree.chart.axis$Tick#equals(java.lang.Object)": 1901.0,
        "org.jfree.chart.axis$Tick#getAngle()": 1801.0,
        "org.jfree.chart.axis$Tick#getRotationAnchor()": 1801.0,
        "org.jfree.chart.axis$Tick#getText()": 1797.0,
        "org.jfree.chart.axis$Tick#getTextAnchor()": 1801.0,
        "org.jfree.chart.axis$Tick#toString()": 1917.0,
        "org.jfree.chart.axis$TickType#<clinit>()": 1789.0,
        "org.jfree.chart.axis$TickType#TickType(java.lang.String)": 1789.0,
        "org.jfree.chart.axis$TickType#equals(java.lang.Object)": 1793.0,
        "org.jfree.chart.axis$TickType#readResolve()": 1915.0,
        "org.jfree.chart.axis$TickType#toString()": 1917.0,
        "org.jfree.chart.axis$TickUnit#TickUnit(double)": 2788609.0,
        "org.jfree.chart.axis$TickUnit#TickUnit(double,int)": 2975389.0,
        "org.jfree.chart.axis$TickUnit#compareTo(java.lang.Object)": 2879545.0,
        "org.jfree.chart.axis$TickUnit#equals(java.lang.Object)": 1799.0,
        "org.jfree.chart.axis$TickUnit#getMinorTickCount()": 1797.0,
        "org.jfree.chart.axis$TickUnit#getSize()": 2879545.0,
        "org.jfree.chart.axis$TickUnit#hashCode()": 1913.0,
        "org.jfree.chart.axis$TickUnit#valueToString(double)": 1917.0,
        "org.jfree.chart.axis$TickUnits#TickUnits()": 2879545.0,
        "org.jfree.chart.axis$TickUnits#add(org.jfree.chart.axis.TickUnit)": 2879545.0,
        "org.jfree.chart.axis$TickUnits#clone()": 1915.0,
        "org.jfree.chart.axis$TickUnits#equals(java.lang.Object)": 1809.0,
        "org.jfree.chart.axis$TickUnits#get(int)": 1917.0,
        "org.jfree.chart.axis$TickUnits#getCeilingTickUnit(double)": 1799.0,
        "org.jfree.chart.axis$TickUnits#getCeilingTickUnit(org.jfree.chart.axis.TickUnit)": 1799.0,
        "org.jfree.chart.axis$TickUnits#getLargerTickUnit(org.jfree.chart.axis.TickUnit)": 1885.0,
        "org.jfree.chart.axis$TickUnits#size()": 1917.0,
        "org.jfree.chart.axis$ValueAxis#<clinit>()": 2795295.0,
        "org.jfree.chart.axis$ValueAxis#ValueAxis(java.lang.String,org.jfree.chart.axis.TickUnitSource)": 2869369.0,
        "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1801.0,
        "org.jfree.chart.axis$ValueAxis#centerRange(double)": 1917.0,
        "org.jfree.chart.axis$ValueAxis#clone()": 1881.0,
        "org.jfree.chart.axis$ValueAxis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1801.0,
        "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1801.0,
        "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)": 1771.0,
        "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 1849.0,
        "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 1827.0,
        "org.jfree.chart.axis$ValueAxis#getAutoRangeMinimumSize()": 3090361.0,
        "org.jfree.chart.axis$ValueAxis#getAutoTickIndex()": 1917.0,
        "org.jfree.chart.axis$ValueAxis#getDefaultAutoRange()": 3515539.0,
        "org.jfree.chart.axis$ValueAxis#getDownArrow()": 1917.0,
        "org.jfree.chart.axis$ValueAxis#getFixedAutoRange()": 3090361.0,
        "org.jfree.chart.axis$ValueAxis#getLeftArrow()": 1917.0,
        "org.jfree.chart.axis$ValueAxis#getLowerBound()": 1843.0,
        "org.jfree.chart.axis$ValueAxis#getLowerMargin()": 3090361.0,
        "org.jfree.chart.axis$ValueAxis#getMinorTickCount()": 1797.0,
        "org.jfree.chart.axis$ValueAxis#getRange()": 3319545.0,
        "org.jfree.chart.axis$ValueAxis#getRightArrow()": 1917.0,
        "org.jfree.chart.axis$ValueAxis#getStandardTickUnits()": 1799.0,
        "org.jfree.chart.axis$ValueAxis#getUpArrow()": 1917.0,
        "org.jfree.chart.axis$ValueAxis#getUpperBound()": 1843.0,
        "org.jfree.chart.axis$ValueAxis#getUpperMargin()": 3090361.0,
        "org.jfree.chart.axis$ValueAxis#isAutoRange()": 3041319.0,
        "org.jfree.chart.axis$ValueAxis#isAutoTickUnitSelection()": 1797.0,
        "org.jfree.chart.axis$ValueAxis#isInverted()": 1787.0,
        "org.jfree.chart.axis$ValueAxis#isNegativeArrowVisible()": 1917.0,
        "org.jfree.chart.axis$ValueAxis#isPositiveArrowVisible()": 1917.0,
        "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()": 1797.0,
        "org.jfree.chart.axis$ValueAxis#lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1803.0,
        "org.jfree.chart.axis$ValueAxis#pan(double)": 1917.0,
        "org.jfree.chart.axis$ValueAxis#readObject(java.io.ObjectInputStream)": 1861.0,
        "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)": 1799.0,
        "org.jfree.chart.axis$ValueAxis#resizeRange(double)": 1899.0,
        "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)": 1899.0,
        "org.jfree.chart.axis$ValueAxis#resizeRange2(double,double)": 1917.0,
        "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean)": 1897.0,
        "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean,boolean)": 1897.0,
        "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double)": 3648049.0,
        "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double,boolean)": 3648049.0,
        "org.jfree.chart.axis$ValueAxis#setAutoTickIndex(int)": 1917.0,
        "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean)": 1915.0,
        "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean,boolean)": 1879.0,
        "org.jfree.chart.axis$ValueAxis#setDefaultAutoRange(org.jfree.data.Range)": 1897.0,
        "org.jfree.chart.axis$ValueAxis#setDownArrow(java.awt.Shape)": 1917.0,
        "org.jfree.chart.axis$ValueAxis#setFixedAutoRange(double)": 1907.0,
        "org.jfree.chart.axis$ValueAxis#setInverted(boolean)": 1909.0,
        "org.jfree.chart.axis$ValueAxis#setLeftArrow(java.awt.Shape)": 1917.0,
        "org.jfree.chart.axis$ValueAxis#setLowerBound(double)": 1903.0,
        "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)": 3717151.0,
        "org.jfree.chart.axis$ValueAxis#setMinorTickCount(int)": 1915.0,
        "org.jfree.chart.axis$ValueAxis#setNegativeArrowVisible(boolean)": 1915.0,
        "org.jfree.chart.axis$ValueAxis#setPositiveArrowVisible(boolean)": 1915.0,
        "org.jfree.chart.axis$ValueAxis#setRange(double,double)": 1885.0,
        "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)": 1861.0,
        "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)": 2958159.0,
        "org.jfree.chart.axis$ValueAxis#setRangeAboutValue(double,double)": 1917.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(double,double)": 1917.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range)": 1917.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range,boolean,boolean)": 1917.0,
        "org.jfree.chart.axis$ValueAxis#setRightArrow(java.awt.Shape)": 1917.0,
        "org.jfree.chart.axis$ValueAxis#setStandardTickUnits(org.jfree.chart.axis.TickUnitSource)": 3724869.0,
        "org.jfree.chart.axis$ValueAxis#setUpArrow(java.awt.Shape)": 1917.0,
        "org.jfree.chart.axis$ValueAxis#setUpperBound(double)": 1907.0,
        "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)": 3717151.0,
        "org.jfree.chart.axis$ValueAxis#setVerticalTickLabels(boolean)": 1915.0,
        "org.jfree.chart.axis$ValueAxis#writeObject(java.io.ObjectOutputStream)": 1861.0,
        "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)": 1915.0,
        "org.jfree.chart.axis$ValueTick#ValueTick(double,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)": 1803.0,
        "org.jfree.chart.axis$ValueTick#ValueTick(org.jfree.chart.axis.TickType,double,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)": 1789.0,
        "org.jfree.chart.axis$ValueTick#equals(java.lang.Object)": 1909.0,
        "org.jfree.chart.axis$ValueTick#getTickType()": 1801.0,
        "org.jfree.chart.axis$ValueTick#getValue()": 1801.0,
        "org.jfree.chart.block$AbstractBlock#AbstractBlock()": 2917011.0,
        "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D)": 1913.0,
        "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1917.0,
        "org.jfree.chart.block$AbstractBlock#calculateTotalHeight(double)": 1763.0,
        "org.jfree.chart.block$AbstractBlock#calculateTotalWidth(double)": 1763.0,
        "org.jfree.chart.block$AbstractBlock#clone()": 1887.0,
        "org.jfree.chart.block$AbstractBlock#drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1789.0,
        "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)": 1793.0,
        "org.jfree.chart.block$AbstractBlock#getBounds()": 1813.0,
        "org.jfree.chart.block$AbstractBlock#getContentXOffset()": 1917.0,
        "org.jfree.chart.block$AbstractBlock#getContentYOffset()": 1917.0,
        "org.jfree.chart.block$AbstractBlock#getFrame()": 1791.0,
        "org.jfree.chart.block$AbstractBlock#getHeight()": 1889.0,
        "org.jfree.chart.block$AbstractBlock#getID()": 1917.0,
        "org.jfree.chart.block$AbstractBlock#getMargin()": 1917.0,
        "org.jfree.chart.block$AbstractBlock#getPadding()": 1917.0,
        "org.jfree.chart.block$AbstractBlock#getWidth()": 1889.0,
        "org.jfree.chart.block$AbstractBlock#readObject(java.io.ObjectInputStream)": 1875.0,
        "org.jfree.chart.block$AbstractBlock#setBounds(java.awt.geom.Rectangle2D)": 1779.0,
        "org.jfree.chart.block$AbstractBlock#setFrame(org.jfree.chart.block.BlockFrame)": 3257869.0,
        "org.jfree.chart.block$AbstractBlock#setHeight(double)": 1853.0,
        "org.jfree.chart.block$AbstractBlock#setID(java.lang.String)": 1915.0,
        "org.jfree.chart.block$AbstractBlock#setMargin(double,double,double,double)": 1915.0,
        "org.jfree.chart.block$AbstractBlock#setMargin(org.jfree.chart.util.RectangleInsets)": 3254259.0,
        "org.jfree.chart.block$AbstractBlock#setPadding(double,double,double,double)": 1803.0,
        "org.jfree.chart.block$AbstractBlock#setPadding(org.jfree.chart.util.RectangleInsets)": 3030861.0,
        "org.jfree.chart.block$AbstractBlock#setWidth(double)": 1853.0,
        "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)": 1785.0,
        "org.jfree.chart.block$AbstractBlock#trimBorder(java.awt.geom.Rectangle2D)": 1789.0,
        "org.jfree.chart.block$AbstractBlock#trimMargin(java.awt.geom.Rectangle2D)": 1789.0,
        "org.jfree.chart.block$AbstractBlock#trimPadding(java.awt.geom.Rectangle2D)": 1789.0,
        "org.jfree.chart.block$AbstractBlock#trimToContentHeight(double)": 1787.0,
        "org.jfree.chart.block$AbstractBlock#trimToContentHeight(org.jfree.data.Range)": 1787.0,
        "org.jfree.chart.block$AbstractBlock#trimToContentWidth(double)": 1787.0,
        "org.jfree.chart.block$AbstractBlock#trimToContentWidth(org.jfree.data.Range)": 1787.0,
        "org.jfree.chart.block$AbstractBlock#writeObject(java.io.ObjectOutputStream)": 1875.0,
        "org.jfree.chart.block$BlockBorder#<clinit>()": 2906769.0,
        "org.jfree.chart.block$BlockBorder#BlockBorder()": 1915.0,
        "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double)": 1917.0,
        "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double,java.awt.Paint)": 1917.0,
        "org.jfree.chart.block$BlockBorder#BlockBorder(java.awt.Paint)": 1911.0,
        "org.jfree.chart.block$BlockBorder#BlockBorder(org.jfree.chart.util.RectangleInsets,java.awt.Paint)": 2906769.0,
        "org.jfree.chart.block$BlockBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1789.0,
        "org.jfree.chart.block$BlockBorder#equals(java.lang.Object)": 1789.0,
        "org.jfree.chart.block$BlockBorder#getInsets()": 1761.0,
        "org.jfree.chart.block$BlockBorder#getPaint()": 1917.0,
        "org.jfree.chart.block$BlockBorder#readObject(java.io.ObjectInputStream)": 1873.0,
        "org.jfree.chart.block$BlockBorder#writeObject(java.io.ObjectOutputStream)": 1873.0,
        "org.jfree.chart.block$BlockContainer#BlockContainer()": 1907.0,
        "org.jfree.chart.block$BlockContainer#BlockContainer(org.jfree.chart.block.Arrangement)": 3157545.0,
        "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block)": 1765.0,
        "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block,java.lang.Object)": 1765.0,
        "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1779.0,
        "org.jfree.chart.block$BlockContainer#clear()": 1785.0,
        "org.jfree.chart.block$BlockContainer#clone()": 1915.0,
        "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1917.0,
        "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 1791.0,
        "org.jfree.chart.block$BlockContainer#equals(java.lang.Object)": 1903.0,
        "org.jfree.chart.block$BlockContainer#getArrangement()": 1917.0,
        "org.jfree.chart.block$BlockContainer#getBlocks()": 1785.0,
        "org.jfree.chart.block$BlockContainer#isEmpty()": 1791.0,
        "org.jfree.chart.block$BlockContainer#setArrangement(org.jfree.chart.block.Arrangement)": 1789.0,
        "org.jfree.chart.block$BlockParams#BlockParams()": 1789.0,
        "org.jfree.chart.block$BlockParams#getGenerateEntities()": 1789.0,
        "org.jfree.chart.block$BlockParams#getTranslateX()": 1917.0,
        "org.jfree.chart.block$BlockParams#getTranslateY()": 1917.0,
        "org.jfree.chart.block$BlockParams#setGenerateEntities(boolean)": 1789.0,
        "org.jfree.chart.block$BlockParams#setTranslateX(double)": 1917.0,
        "org.jfree.chart.block$BlockParams#setTranslateY(double)": 1917.0,
        "org.jfree.chart.block$BlockResult#BlockResult()": 1791.0,
        "org.jfree.chart.block$BlockResult#getEntityCollection()": 1845.0,
        "org.jfree.chart.block$BlockResult#setEntityCollection(org.jfree.chart.entity.EntityCollection)": 1895.0,
        "org.jfree.chart.block$BorderArrangement#BorderArrangement()": 1791.0,
        "org.jfree.chart.block$BorderArrangement#add(org.jfree.chart.block.Block,java.lang.Object)": 1797.0,
        "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1809.0,
        "org.jfree.chart.block$BorderArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1915.0,
        "org.jfree.chart.block$BorderArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,double)": 1915.0,
        "org.jfree.chart.block$BorderArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1917.0,
        "org.jfree.chart.block$BorderArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)": 1813.0,
        "org.jfree.chart.block$BorderArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,org.jfree.data.Range,org.jfree.data.Range,java.awt.Graphics2D)": 1915.0,
        "org.jfree.chart.block$BorderArrangement#clear()": 1911.0,
        "org.jfree.chart.block$BorderArrangement#equals(java.lang.Object)": 1905.0,
        "org.jfree.chart.block$CenterArrangement#CenterArrangement()": 1815.0,
        "org.jfree.chart.block$CenterArrangement#add(org.jfree.chart.block.Block,java.lang.Object)": 1815.0,
        "org.jfree.chart.block$CenterArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1815.0,
        "org.jfree.chart.block$CenterArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1917.0,
        "org.jfree.chart.block$CenterArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1917.0,
        "org.jfree.chart.block$CenterArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1917.0,
        "org.jfree.chart.block$CenterArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1917.0,
        "org.jfree.chart.block$CenterArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)": 1815.0,
        "org.jfree.chart.block$CenterArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1917.0,
        "org.jfree.chart.block$CenterArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1917.0,
        "org.jfree.chart.block$CenterArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1917.0,
        "org.jfree.chart.block$CenterArrangement#clear()": 1917.0,
        "org.jfree.chart.block$CenterArrangement#equals(java.lang.Object)": 1917.0,
        "org.jfree.chart.block$ColumnArrangement#ColumnArrangement()": 3247045.0,
        "org.jfree.chart.block$ColumnArrangement#ColumnArrangement(org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,double,double)": 1915.0,
        "org.jfree.chart.block$ColumnArrangement#add(org.jfree.chart.block.Block,java.lang.Object)": 1915.0,
        "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1917.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1917.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1917.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)": 1917.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1917.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1917.0,
        "org.jfree.chart.block$ColumnArrangement#clear()": 1917.0,
        "org.jfree.chart.block$ColumnArrangement#equals(java.lang.Object)": 1889.0,
        "org.jfree.chart.block$FlowArrangement#FlowArrangement()": 3236239.0,
        "org.jfree.chart.block$FlowArrangement#FlowArrangement(org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,double,double)": 3225451.0,
        "org.jfree.chart.block$FlowArrangement#add(org.jfree.chart.block.Block,java.lang.Object)": 1813.0,
        "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1815.0,
        "org.jfree.chart.block$FlowArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1917.0,
        "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1907.0,
        "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1907.0,
        "org.jfree.chart.block$FlowArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1917.0,
        "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)": 1815.0,
        "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1917.0,
        "org.jfree.chart.block$FlowArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1917.0,
        "org.jfree.chart.block$FlowArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1815.0,
        "org.jfree.chart.block$FlowArrangement#clear()": 1791.0,
        "org.jfree.chart.block$FlowArrangement#equals(java.lang.Object)": 1883.0,
        "org.jfree.chart.block$LabelBlock#<clinit>()": 1809.0,
        "org.jfree.chart.block$LabelBlock#LabelBlock(java.lang.String)": 1917.0,
        "org.jfree.chart.block$LabelBlock#LabelBlock(java.lang.String,java.awt.Font)": 1917.0,
        "org.jfree.chart.block$LabelBlock#LabelBlock(java.lang.String,java.awt.Font,java.awt.Paint)": 1809.0,
        "org.jfree.chart.block$LabelBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1815.0,
        "org.jfree.chart.block$LabelBlock#clone()": 1915.0,
        "org.jfree.chart.block$LabelBlock#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1917.0,
        "org.jfree.chart.block$LabelBlock#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 1815.0,
        "org.jfree.chart.block$LabelBlock#equals(java.lang.Object)": 1911.0,
        "org.jfree.chart.block$LabelBlock#getContentAlignmentPoint()": 1917.0,
        "org.jfree.chart.block$LabelBlock#getFont()": 1917.0,
        "org.jfree.chart.block$LabelBlock#getPaint()": 1917.0,
        "org.jfree.chart.block$LabelBlock#getTextAnchor()": 1917.0,
        "org.jfree.chart.block$LabelBlock#getToolTipText()": 1917.0,
        "org.jfree.chart.block$LabelBlock#getURLText()": 1917.0,
        "org.jfree.chart.block$LabelBlock#readObject(java.io.ObjectInputStream)": 1915.0,
        "org.jfree.chart.block$LabelBlock#setContentAlignmentPoint(org.jfree.chart.text.TextBlockAnchor)": 1915.0,
        "org.jfree.chart.block$LabelBlock#setFont(java.awt.Font)": 1917.0,
        "org.jfree.chart.block$LabelBlock#setPaint(java.awt.Paint)": 1917.0,
        "org.jfree.chart.block$LabelBlock#setTextAnchor(org.jfree.chart.util.RectangleAnchor)": 1915.0,
        "org.jfree.chart.block$LabelBlock#setToolTipText(java.lang.String)": 1915.0,
        "org.jfree.chart.block$LabelBlock#setURLText(java.lang.String)": 1915.0,
        "org.jfree.chart.block$LabelBlock#writeObject(java.io.ObjectOutputStream)": 1915.0,
        "org.jfree.chart.block$LengthConstraintType#<clinit>()": 1749.0,
        "org.jfree.chart.block$LengthConstraintType#LengthConstraintType(java.lang.String)": 1749.0,
        "org.jfree.chart.block$LengthConstraintType#equals(java.lang.Object)": 1917.0,
        "org.jfree.chart.block$LengthConstraintType#hashCode()": 1917.0,
        "org.jfree.chart.block$LengthConstraintType#readResolve()": 1917.0,
        "org.jfree.chart.block$LengthConstraintType#toString()": 1917.0,
        "org.jfree.chart.block$LineBorder#LineBorder()": 3261481.0,
        "org.jfree.chart.block$LineBorder#LineBorder(java.awt.Paint,java.awt.Stroke,org.jfree.chart.util.RectangleInsets)": 3254259.0,
        "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1791.0,
        "org.jfree.chart.block$LineBorder#equals(java.lang.Object)": 1897.0,
        "org.jfree.chart.block$LineBorder#getInsets()": 1791.0,
        "org.jfree.chart.block$LineBorder#getPaint()": 1815.0,
        "org.jfree.chart.block$LineBorder#getStroke()": 1815.0,
        "org.jfree.chart.block$LineBorder#readObject(java.io.ObjectInputStream)": 1901.0,
        "org.jfree.chart.block$LineBorder#writeObject(java.io.ObjectOutputStream)": 1901.0,
        "org.jfree.chart.block$RectangleConstraint#<clinit>()": 1749.0,
        "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,double)": 1899.0,
        "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range)": 1913.0,
        "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)": 1749.0,
        "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(org.jfree.data.Range,double)": 1915.0,
        "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(org.jfree.data.Range,org.jfree.data.Range)": 1911.0,
        "org.jfree.chart.block$RectangleConstraint#calculateConstrainedSize(org.jfree.chart.util.Size2D)": 1889.0,
        "org.jfree.chart.block$RectangleConstraint#getHeight()": 1757.0,
        "org.jfree.chart.block$RectangleConstraint#getHeightConstraintType()": 1755.0,
        "org.jfree.chart.block$RectangleConstraint#getHeightRange()": 1779.0,
        "org.jfree.chart.block$RectangleConstraint#getWidth()": 1757.0,
        "org.jfree.chart.block$RectangleConstraint#getWidthConstraintType()": 1755.0,
        "org.jfree.chart.block$RectangleConstraint#getWidthRange()": 1781.0,
        "org.jfree.chart.block$RectangleConstraint#toFixedHeight(double)": 1899.0,
        "org.jfree.chart.block$RectangleConstraint#toFixedWidth(double)": 1889.0,
        "org.jfree.chart.block$RectangleConstraint#toRangeHeight(org.jfree.data.Range)": 1915.0,
        "org.jfree.chart.block$RectangleConstraint#toRangeWidth(org.jfree.data.Range)": 1915.0,
        "org.jfree.chart.block$RectangleConstraint#toString()": 1917.0,
        "org.jfree.chart.block$RectangleConstraint#toUnconstrainedHeight()": 1911.0,
        "org.jfree.chart.block$RectangleConstraint#toUnconstrainedWidth()": 1913.0,
        "org.jfree.chart.entity$AxisEntity#AxisEntity(java.awt.Shape,org.jfree.chart.axis.Axis)": 1895.0,
        "org.jfree.chart.entity$AxisEntity#AxisEntity(java.awt.Shape,org.jfree.chart.axis.Axis,java.lang.String)": 1895.0,
        "org.jfree.chart.entity$AxisEntity#AxisEntity(java.awt.Shape,org.jfree.chart.axis.Axis,java.lang.String,java.lang.String)": 1895.0,
        "org.jfree.chart.entity$AxisEntity#clone()": 1917.0,
        "org.jfree.chart.entity$AxisEntity#equals(java.lang.Object)": 1917.0,
        "org.jfree.chart.entity$AxisEntity#getAxis()": 1917.0,
        "org.jfree.chart.entity$AxisEntity#hashCode()": 1917.0,
        "org.jfree.chart.entity$AxisEntity#readObject(java.io.ObjectInputStream)": 1917.0,
        "org.jfree.chart.entity$AxisEntity#toString()": 1917.0,
        "org.jfree.chart.entity$AxisEntity#writeObject(java.io.ObjectOutputStream)": 1917.0,
        "org.jfree.chart.entity$AxisLabelEntity#AxisLabelEntity(org.jfree.chart.axis.Axis,java.awt.Shape,java.lang.String,java.lang.String)": 1895.0,
        "org.jfree.chart.entity$AxisLabelEntity#getAxis()": 1917.0,
        "org.jfree.chart.entity$AxisLabelEntity#toString()": 1917.0,
        "org.jfree.chart.entity$CategoryItemEntity#CategoryItemEntity(java.awt.Shape,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,java.lang.Comparable,java.lang.Comparable)": 1905.0,
        "org.jfree.chart.entity$CategoryItemEntity#equals(java.lang.Object)": 1911.0,
        "org.jfree.chart.entity$CategoryItemEntity#getColumnKey()": 1917.0,
        "org.jfree.chart.entity$CategoryItemEntity#getDataset()": 1917.0,
        "org.jfree.chart.entity$CategoryItemEntity#getRowKey()": 1917.0,
        "org.jfree.chart.entity$CategoryItemEntity#setColumnKey(java.lang.Comparable)": 1915.0,
        "org.jfree.chart.entity$CategoryItemEntity#setDataset(org.jfree.data.category.CategoryDataset)": 1917.0,
        "org.jfree.chart.entity$CategoryItemEntity#setRowKey(java.lang.Comparable)": 1915.0,
        "org.jfree.chart.entity$CategoryItemEntity#toString()": 1917.0,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape)": 1887.0,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String)": 1887.0,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String,java.lang.String)": 1849.0,
        "org.jfree.chart.entity$ChartEntity#clone()": 1903.0,
        "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)": 1873.0,
        "org.jfree.chart.entity$ChartEntity#getArea()": 1917.0,
        "org.jfree.chart.entity$ChartEntity#getImageMapAreaTag(org.jfree.chart.imagemap.ToolTipTagFragmentGenerator,org.jfree.chart.imagemap.URLTagFragmentGenerator)": 1917.0,
        "org.jfree.chart.entity$ChartEntity#getPolyCoords(java.awt.Shape)": 1917.0,
        "org.jfree.chart.entity$ChartEntity#getRectCoords(java.awt.geom.Rectangle2D)": 1917.0,
        "org.jfree.chart.entity$ChartEntity#getShapeCoords()": 1917.0,
        "org.jfree.chart.entity$ChartEntity#getShapeType()": 1917.0,
        "org.jfree.chart.entity$ChartEntity#getToolTipText()": 1917.0,
        "org.jfree.chart.entity$ChartEntity#getURLText()": 1917.0,
        "org.jfree.chart.entity$ChartEntity#hashCode()": 1917.0,
        "org.jfree.chart.entity$ChartEntity#readObject(java.io.ObjectInputStream)": 1903.0,
        "org.jfree.chart.entity$ChartEntity#setArea(java.awt.Shape)": 1905.0,
        "org.jfree.chart.entity$ChartEntity#setToolTipText(java.lang.String)": 1885.0,
        "org.jfree.chart.entity$ChartEntity#setURLText(java.lang.String)": 1885.0,
        "org.jfree.chart.entity$ChartEntity#toString()": 1917.0,
        "org.jfree.chart.entity$ChartEntity#writeObject(java.io.ObjectOutputStream)": 1903.0,
        "org.jfree.chart.entity$JFreeChartEntity#JFreeChartEntity(java.awt.Shape,org.jfree.chart.JFreeChart)": 1895.0,
        "org.jfree.chart.entity$JFreeChartEntity#JFreeChartEntity(java.awt.Shape,org.jfree.chart.JFreeChart,java.lang.String)": 1895.0,
        "org.jfree.chart.entity$JFreeChartEntity#JFreeChartEntity(java.awt.Shape,org.jfree.chart.JFreeChart,java.lang.String,java.lang.String)": 1895.0,
        "org.jfree.chart.entity$JFreeChartEntity#clone()": 1917.0,
        "org.jfree.chart.entity$JFreeChartEntity#equals(java.lang.Object)": 1917.0,
        "org.jfree.chart.entity$JFreeChartEntity#getChart()": 1917.0,
        "org.jfree.chart.entity$JFreeChartEntity#hashCode()": 1917.0,
        "org.jfree.chart.entity$JFreeChartEntity#readObject(java.io.ObjectInputStream)": 1917.0,
        "org.jfree.chart.entity$JFreeChartEntity#toString()": 1917.0,
        "org.jfree.chart.entity$JFreeChartEntity#writeObject(java.io.ObjectOutputStream)": 1917.0,
        "org.jfree.chart.entity$LegendItemEntity#LegendItemEntity(java.awt.Shape)": 1891.0,
        "org.jfree.chart.entity$LegendItemEntity#clone()": 1915.0,
        "org.jfree.chart.entity$LegendItemEntity#equals(java.lang.Object)": 1911.0,
        "org.jfree.chart.entity$LegendItemEntity#getDataset()": 1917.0,
        "org.jfree.chart.entity$LegendItemEntity#getSeriesKey()": 1917.0,
        "org.jfree.chart.entity$LegendItemEntity#setDataset(org.jfree.data.general.Dataset)": 1895.0,
        "org.jfree.chart.entity$LegendItemEntity#setSeriesKey(java.lang.Comparable)": 1895.0,
        "org.jfree.chart.entity$LegendItemEntity#toString()": 1917.0,
        "org.jfree.chart.entity$PieSectionEntity#PieSectionEntity(java.awt.Shape,org.jfree.data.general.PieDataset,int,int,java.lang.Comparable,java.lang.String,java.lang.String)": 1905.0,
        "org.jfree.chart.entity$PieSectionEntity#equals(java.lang.Object)": 1905.0,
        "org.jfree.chart.entity$PieSectionEntity#getDataset()": 1917.0,
        "org.jfree.chart.entity$PieSectionEntity#getPieIndex()": 1917.0,
        "org.jfree.chart.entity$PieSectionEntity#getSectionIndex()": 1917.0,
        "org.jfree.chart.entity$PieSectionEntity#getSectionKey()": 1917.0,
        "org.jfree.chart.entity$PieSectionEntity#hashCode()": 1917.0,
        "org.jfree.chart.entity$PieSectionEntity#setDataset(org.jfree.data.general.PieDataset)": 1915.0,
        "org.jfree.chart.entity$PieSectionEntity#setPieIndex(int)": 1915.0,
        "org.jfree.chart.entity$PieSectionEntity#setSectionIndex(int)": 1915.0,
        "org.jfree.chart.entity$PieSectionEntity#setSectionKey(java.lang.Comparable)": 1915.0,
        "org.jfree.chart.entity$PieSectionEntity#toString()": 1917.0,
        "org.jfree.chart.entity$PlotEntity#PlotEntity(java.awt.Shape,org.jfree.chart.plot.Plot)": 1917.0,
        "org.jfree.chart.entity$PlotEntity#PlotEntity(java.awt.Shape,org.jfree.chart.plot.Plot,java.lang.String)": 1917.0,
        "org.jfree.chart.entity$PlotEntity#PlotEntity(java.awt.Shape,org.jfree.chart.plot.Plot,java.lang.String,java.lang.String)": 1895.0,
        "org.jfree.chart.entity$PlotEntity#clone()": 1917.0,
        "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)": 1917.0,
        "org.jfree.chart.entity$PlotEntity#getPlot()": 1917.0,
        "org.jfree.chart.entity$PlotEntity#hashCode()": 1917.0,
        "org.jfree.chart.entity$PlotEntity#readObject(java.io.ObjectInputStream)": 1917.0,
        "org.jfree.chart.entity$PlotEntity#toString()": 1917.0,
        "org.jfree.chart.entity$PlotEntity#writeObject(java.io.ObjectOutputStream)": 1917.0,
        "org.jfree.chart.entity$TitleEntity#TitleEntity(java.awt.Shape,org.jfree.chart.title.Title)": 1897.0,
        "org.jfree.chart.entity$TitleEntity#TitleEntity(java.awt.Shape,org.jfree.chart.title.Title,java.lang.String)": 1897.0,
        "org.jfree.chart.entity$TitleEntity#TitleEntity(java.awt.Shape,org.jfree.chart.title.Title,java.lang.String,java.lang.String)": 1895.0,
        "org.jfree.chart.entity$TitleEntity#clone()": 1917.0,
        "org.jfree.chart.entity$TitleEntity#equals(java.lang.Object)": 1917.0,
        "org.jfree.chart.entity$TitleEntity#getTitle()": 1917.0,
        "org.jfree.chart.entity$TitleEntity#hashCode()": 1917.0,
        "org.jfree.chart.entity$TitleEntity#readObject(java.io.ObjectInputStream)": 1917.0,
        "org.jfree.chart.entity$TitleEntity#toString()": 1917.0,
        "org.jfree.chart.entity$TitleEntity#writeObject(java.io.ObjectOutputStream)": 1917.0,
        "org.jfree.chart.entity$XYItemEntity#XYItemEntity(java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,java.lang.String,java.lang.String)": 1911.0,
        "org.jfree.chart.entity$XYItemEntity#equals(java.lang.Object)": 1911.0,
        "org.jfree.chart.entity$XYItemEntity#getDataset()": 1917.0,
        "org.jfree.chart.entity$XYItemEntity#getItem()": 1917.0,
        "org.jfree.chart.entity$XYItemEntity#getSeriesIndex()": 1917.0,
        "org.jfree.chart.entity$XYItemEntity#setDataset(org.jfree.data.xy.XYDataset)": 1917.0,
        "org.jfree.chart.entity$XYItemEntity#setItem(int)": 1915.0,
        "org.jfree.chart.entity$XYItemEntity#setSeriesIndex(int)": 1915.0,
        "org.jfree.chart.entity$XYItemEntity#toString()": 1917.0,
        "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)": 3153991.0,
        "org.jfree.chart.event$AxisChangeEvent#getAxis()": 1909.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)": 1811101.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart)": 1917.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart,org.jfree.chart.event.ChartChangeEventType)": 1811101.0,
        "org.jfree.chart.event$ChartChangeEvent#getChart()": 1917.0,
        "org.jfree.chart.event$ChartChangeEvent#getType()": 1917.0,
        "org.jfree.chart.event$ChartChangeEvent#setChart(org.jfree.chart.JFreeChart)": 3374445.0,
        "org.jfree.chart.event$ChartChangeEvent#setType(org.jfree.chart.event.ChartChangeEventType)": 2978841.0,
        "org.jfree.chart.event$ChartChangeEventType#<clinit>()": 1811101.0,
        "org.jfree.chart.event$ChartChangeEventType#ChartChangeEventType(java.lang.String)": 1811101.0,
        "org.jfree.chart.event$ChartChangeEventType#equals(java.lang.Object)": 1917.0,
        "org.jfree.chart.event$ChartChangeEventType#hashCode()": 1917.0,
        "org.jfree.chart.event$ChartChangeEventType#readResolve()": 1917.0,
        "org.jfree.chart.event$ChartChangeEventType#toString()": 1917.0,
        "org.jfree.chart.event$ChartProgressEvent#ChartProgressEvent(java.lang.Object,org.jfree.chart.JFreeChart,int,int)": 1789.0,
        "org.jfree.chart.event$ChartProgressEvent#getChart()": 1917.0,
        "org.jfree.chart.event$ChartProgressEvent#getPercent()": 1917.0,
        "org.jfree.chart.event$ChartProgressEvent#getType()": 1917.0,
        "org.jfree.chart.event$ChartProgressEvent#setChart(org.jfree.chart.JFreeChart)": 1917.0,
        "org.jfree.chart.event$ChartProgressEvent#setPercent(int)": 1917.0,
        "org.jfree.chart.event$ChartProgressEvent#setType(int)": 1917.0,
        "org.jfree.chart.event$MarkerChangeEvent#MarkerChangeEvent(org.jfree.chart.plot.Marker)": 1847.0,
        "org.jfree.chart.event$MarkerChangeEvent#getMarker()": 1883.0,
        "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)": 2828845.0,
        "org.jfree.chart.event$PlotChangeEvent#getPlot()": 1917.0,
        "org.jfree.chart.event$RendererChangeEvent#RendererChangeEvent(java.lang.Object)": 2467651.0,
        "org.jfree.chart.event$RendererChangeEvent#RendererChangeEvent(java.lang.Object,boolean)": 2467651.0,
        "org.jfree.chart.event$RendererChangeEvent#getRenderer()": 1915.0,
        "org.jfree.chart.event$RendererChangeEvent#getSeriesVisibilityChanged()": 3640411.0,
        "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)": 3122095.0,
        "org.jfree.chart.event$TitleChangeEvent#getTitle()": 1917.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#AbstractPieItemLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)": 3579595.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#clone()": 1897.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)": 1911.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#equals(java.lang.Object)": 1861.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)": 1911.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#getLabelFormat()": 1917.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#getNumberFormat()": 1911.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#getPercentFormat()": 1915.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#hashCode()": 1913.0,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator()": 1917.0,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator(java.lang.String,java.text.DateFormat,java.text.DateFormat)": 1907.0,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator(java.lang.String,java.text.DateFormat,java.text.NumberFormat)": 1913.0,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.DateFormat)": 1917.0,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)": 3594751.0,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#clone()": 1905.0,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)": 1915.0,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#equals(java.lang.Object)": 1859.0,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#generateLabelString(org.jfree.data.xy.XYDataset,int,int)": 1917.0,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#getFormatString()": 1915.0,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#getNullYString()": 1917.0,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#getXDateFormat()": 1915.0,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#getXFormat()": 1915.0,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#getYDateFormat()": 1915.0,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#getYFormat()": 1915.0,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#hashCode()": 1907.0,
        "org.jfree.chart.labels$ItemLabelAnchor#<clinit>()": 2175139.0,
        "org.jfree.chart.labels$ItemLabelAnchor#ItemLabelAnchor(java.lang.String)": 2175139.0,
        "org.jfree.chart.labels$ItemLabelAnchor#equals(java.lang.Object)": 1577.0,
        "org.jfree.chart.labels$ItemLabelAnchor#readResolve()": 1781.0,
        "org.jfree.chart.labels$ItemLabelAnchor#toString()": 1777.0,
        "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition()": 1905.0,
        "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition(org.jfree.chart.labels.ItemLabelAnchor,org.jfree.chart.text.TextAnchor)": 2186959.0,
        "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition(org.jfree.chart.labels.ItemLabelAnchor,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)": 2181045.0,
        "org.jfree.chart.labels$ItemLabelPosition#equals(java.lang.Object)": 1587.0,
        "org.jfree.chart.labels$ItemLabelPosition#getAngle()": 1917.0,
        "org.jfree.chart.labels$ItemLabelPosition#getItemLabelAnchor()": 1917.0,
        "org.jfree.chart.labels$ItemLabelPosition#getRotationAnchor()": 1917.0,
        "org.jfree.chart.labels$ItemLabelPosition#getTextAnchor()": 1917.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator()": 3598545.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String)": 1915.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)": 3598545.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.util.Locale)": 1917.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.util.Locale)": 1917.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#clone()": 1899.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#equals(java.lang.Object)": 1869.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateAttributedSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)": 1917.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)": 1911.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#getAttributedLabel(int)": 1917.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#setAttributedLabel(int,java.text.AttributedString)": 1915.0,
        "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator()": 3682519.0,
        "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator(java.lang.String)": 3678681.0,
        "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)": 3678681.0,
        "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator(java.lang.String,java.util.Locale)": 3678681.0,
        "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator(java.util.Locale)": 1917.0,
        "org.jfree.chart.labels$StandardPieToolTipGenerator#clone()": 1915.0,
        "org.jfree.chart.labels$StandardPieToolTipGenerator#generateToolTip(org.jfree.data.general.PieDataset,java.lang.Comparable)": 1917.0,
        "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#StandardXYSeriesLabelGenerator()": 1913.0,
        "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#StandardXYSeriesLabelGenerator(java.lang.String)": 2961601.0,
        "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#clone()": 1845.0,
        "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int)": 1867.0,
        "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#equals(java.lang.Object)": 1673.0,
        "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#generateLabel(org.jfree.data.xy.XYDataset,int)": 1867.0,
        "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#hashCode()": 1915.0,
        "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator()": 3701739.0,
        "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator(java.lang.String,java.text.DateFormat,java.text.DateFormat)": 1913.0,
        "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator(java.lang.String,java.text.DateFormat,java.text.NumberFormat)": 1913.0,
        "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator(java.lang.String,java.text.NumberFormat,java.text.DateFormat)": 1917.0,
        "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)": 3640411.0,
        "org.jfree.chart.labels$StandardXYToolTipGenerator#clone()": 1909.0,
        "org.jfree.chart.labels$StandardXYToolTipGenerator#equals(java.lang.Object)": 1875.0,
        "org.jfree.chart.labels$StandardXYToolTipGenerator#generateToolTip(org.jfree.data.xy.XYDataset,int,int)": 1917.0,
        "org.jfree.chart.labels$StandardXYToolTipGenerator#getTimeSeriesInstance()": 1915.0,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#AbstractPieLabelDistributor()": 3617545.0,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#addPieLabelRecord(org.jfree.chart.plot.PieLabelRecord)": 1913.0,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#clear()": 1913.0,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#getItemCount()": 1913.0,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)": 1913.0,
        "org.jfree.chart.plot$CategoryPlot#<clinit>()": 1689.0,
        "org.jfree.chart.plot$CategoryPlot#CategoryPlot()": 1891.0,
        "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)": 1689.0,
        "org.jfree.chart.plot$CategoryPlot#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 1913.0,
        "org.jfree.chart.plot$CategoryPlot#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation,boolean)": 1913.0,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)": 1909.0,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer,boolean)": 1909.0,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker)": 1913.0,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)": 1909.0,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1901.0,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 1901.0,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker)": 1913.0,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1901.0,
        "org.jfree.chart.plot$CategoryPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 1839.0,
        "org.jfree.chart.plot$CategoryPlot#checkAxisIndices(java.util.List)": 1689.0,
        "org.jfree.chart.plot$CategoryPlot#clearAnnotations()": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#clearDomainAxes()": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers()": 1913.0,
        "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers(int)": 1913.0,
        "org.jfree.chart.plot$CategoryPlot#clearRangeAxes()": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers()": 1907.0,
        "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers(int)": 1913.0,
        "org.jfree.chart.plot$CategoryPlot#clone()": 1907.0,
        "org.jfree.chart.plot$CategoryPlot#cloneMarkerMap(java.util.Map)": 1907.0,
        "org.jfree.chart.plot$CategoryPlot#configureDomainAxes()": 1689.0,
        "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()": 1689.0,
        "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 1689.0,
        "org.jfree.chart.plot$CategoryPlot#datasetsMappedToDomainAxis(int)": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#datasetsMappedToRangeAxis(int)": 1711.0,
        "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 1839.0,
        "org.jfree.chart.plot$CategoryPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1847.0,
        "org.jfree.chart.plot$CategoryPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,int,java.lang.Comparable,java.lang.Comparable,java.awt.Stroke,java.awt.Paint)": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)": 1855.0,
        "org.jfree.chart.plot$CategoryPlot#getAnchorValue()": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#getAnnotations()": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#getAxisOffset()": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#getCategories()": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#getColumnRenderingOrder()": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#getCrosshairDatasetIndex()": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 1711.0,
        "org.jfree.chart.plot$CategoryPlot#getDataset()": 1911.0,
        "org.jfree.chart.plot$CategoryPlot#getDataset(int)": 1689.0,
        "org.jfree.chart.plot$CategoryPlot#getDatasetCount()": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#getDatasetRenderingOrder()": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxis()": 1905.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxis(int)": 1755.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisCount()": 1815.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge()": 1853.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)": 1839.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisForDataset(int)": 1839.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisIndex(org.jfree.chart.axis.CategoryAxis)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation()": 1839.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation(int)": 1839.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainCrosshairColumnKey()": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainCrosshairPaint()": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainCrosshairRowKey()": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainCrosshairStroke()": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlinePaint()": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlinePosition()": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlineStroke()": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(org.jfree.chart.util.Layer)": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#getDrawSharedDomainAxis()": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#getFixedDomainAxisSpace()": 1913.0,
        "org.jfree.chart.plot$CategoryPlot#getFixedLegendItems()": 1911.0,
        "org.jfree.chart.plot$CategoryPlot#getFixedRangeAxisSpace()": 1913.0,
        "org.jfree.chart.plot$CategoryPlot#getIndexOf(org.jfree.chart.renderer.category.CategoryItemRenderer)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#getLegendItems()": 1839.0,
        "org.jfree.chart.plot$CategoryPlot#getOrientation()": 1823.0,
        "org.jfree.chart.plot$CategoryPlot#getPlotType()": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxis()": 1789.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)": 1689.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisCount()": 1815.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)": 1839.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisForDataset(int)": 1839.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation()": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation(int)": 1839.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairPaint()": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairStroke()": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairValue()": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeGridlinePaint()": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeGridlineStroke()": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(org.jfree.chart.util.Layer)": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeMinorGridlinePaint()": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeMinorGridlineStroke()": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeZeroBaselinePaint()": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeZeroBaselineStroke()": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#getRenderer()": 1799.0,
        "org.jfree.chart.plot$CategoryPlot#getRenderer(int)": 1765.0,
        "org.jfree.chart.plot$CategoryPlot#getRendererCount()": 1815.0,
        "org.jfree.chart.plot$CategoryPlot#getRendererForDataset(org.jfree.data.category.CategoryDataset)": 1711.0,
        "org.jfree.chart.plot$CategoryPlot#getRowRenderingOrder()": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#getWeight()": 1913.0,
        "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#indexOf(org.jfree.data.category.CategoryDataset)": 1905.0,
        "org.jfree.chart.plot$CategoryPlot#isDomainCrosshairVisible()": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#isDomainGridlinesVisible()": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#isDomainPannable()": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#isDomainZoomable()": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeCrosshairLockedOnData()": 1905.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeCrosshairVisible()": 1839.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeGridlinesVisible()": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeMinorGridlinesVisible()": 1847.0,
        "org.jfree.chart.plot$CategoryPlot#isRangePannable()": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeZeroBaselineVisible()": 1839.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeZoomable()": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxes(int,java.util.List)": 1689.0,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxis(int,int)": 1689.0,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxes(int,java.util.List)": 1689.0,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxis(int,int)": 1689.0,
        "org.jfree.chart.plot$CategoryPlot#panDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#readObject(java.io.ObjectInputStream)": 1901.0,
        "org.jfree.chart.plot$CategoryPlot#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation,boolean)": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CategoryCrosshairState)": 1841.0,
        "org.jfree.chart.plot$CategoryPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)": 1809.0,
        "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double,boolean)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)": 1813.0,
        "org.jfree.chart.plot$CategoryPlot#setColumnRenderingOrder(org.jfree.chart.util.SortOrder)": 1899.0,
        "org.jfree.chart.plot$CategoryPlot#setCrosshairDatasetIndex(int)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setCrosshairDatasetIndex(int,boolean)": 1839.0,
        "org.jfree.chart.plot$CategoryPlot#setDataset(int,org.jfree.data.category.CategoryDataset)": 1873.0,
        "org.jfree.chart.plot$CategoryPlot#setDataset(org.jfree.data.category.CategoryDataset)": 1889.0,
        "org.jfree.chart.plot$CategoryPlot#setDatasetRenderingOrder(org.jfree.chart.plot.DatasetRenderingOrder)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxes(org.jfree.chart.axis.CategoryAxis[])": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis)": 1893.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)": 1893.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(org.jfree.chart.axis.CategoryAxis)": 1901.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 1689.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 1689.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairColumnKey(java.lang.Comparable)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairColumnKey(java.lang.Comparable,boolean)": 1839.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairRowKey(java.lang.Comparable)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairRowKey(java.lang.Comparable,boolean)": 1839.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairVisible(boolean)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePaint(java.awt.Paint)": 1813.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePosition(org.jfree.chart.axis.CategoryAnchor)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlineStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinesVisible(boolean)": 1899.0,
        "org.jfree.chart.plot$CategoryPlot#setDrawSharedDomainAxis(boolean)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace)": 1913.0,
        "org.jfree.chart.plot$CategoryPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 1911.0,
        "org.jfree.chart.plot$CategoryPlot#setFixedLegendItems(org.jfree.chart.LegendItemCollection)": 1913.0,
        "org.jfree.chart.plot$CategoryPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)": 1913.0,
        "org.jfree.chart.plot$CategoryPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 1911.0,
        "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)": 1783.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)": 1891.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)": 1891.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)": 1899.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 1689.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 1689.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairLockedOnData(boolean)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairPaint(java.awt.Paint)": 1913.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double,boolean)": 1839.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairVisible(boolean)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlinePaint(java.awt.Paint)": 1813.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlineStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlinesVisible(boolean)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeMinorGridlinePaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeMinorGridlineStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeMinorGridlinesVisible(boolean)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setRangePannable(boolean)": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeZeroBaselinePaint(java.awt.Paint)": 1813.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeZeroBaselineStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeZeroBaselineVisible(boolean)": 1915.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer)": 1909.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)": 1905.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)": 1911.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderers(org.jfree.chart.renderer.category.CategoryItemRenderer[])": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#setRowRenderingOrder(org.jfree.chart.util.SortOrder)": 1907.0,
        "org.jfree.chart.plot$CategoryPlot#setWeight(int)": 1895.0,
        "org.jfree.chart.plot$CategoryPlot#writeObject(java.io.ObjectOutputStream)": 1901.0,
        "org.jfree.chart.plot$CategoryPlot#zoom(double)": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1917.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 1917.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#CombinedDomainXYPlot()": 1915.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#CombinedDomainXYPlot(org.jfree.chart.axis.ValueAxis)": 1905.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#add(org.jfree.chart.plot.XYPlot)": 1915.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#add(org.jfree.chart.plot.XYPlot,int)": 1907.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1915.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#clone()": 1915.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 1915.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#equals(java.lang.Object)": 1907.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#findSubplot(org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1917.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 1907.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#getGap()": 1917.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#getLegendItems()": 1915.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#getPlotType()": 1917.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#getSubplots()": 1913.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 1917.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#plotChanged(org.jfree.chart.event.PlotChangeEvent)": 1915.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#remove(org.jfree.chart.plot.XYPlot)": 1915.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)": 1917.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#setFixedRangeAxisSpaceForSubplots(org.jfree.chart.axis.AxisSpace)": 1915.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#setGap(double)": 1909.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)": 1909.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)": 1917.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1917.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1917.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 1917.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#CombinedRangeXYPlot()": 1915.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#CombinedRangeXYPlot(org.jfree.chart.axis.ValueAxis)": 1907.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#add(org.jfree.chart.plot.XYPlot)": 1915.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#add(org.jfree.chart.plot.XYPlot,int)": 1907.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1915.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#clone()": 1915.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 1915.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#equals(java.lang.Object)": 1907.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#findSubplot(org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1917.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 1907.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#getGap()": 1917.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#getLegendItems()": 1915.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#getPlotType()": 1917.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#getSubplots()": 1913.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 1917.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#plotChanged(org.jfree.chart.event.PlotChangeEvent)": 1915.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#remove(org.jfree.chart.plot.XYPlot)": 1915.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#setFixedDomainAxisSpaceForSubplots(org.jfree.chart.axis.AxisSpace)": 1915.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#setGap(double)": 1909.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)": 1909.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)": 1917.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1917.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1917.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 1917.0,
        "org.jfree.chart.plot$CrosshairState#CrosshairState()": 1805.0,
        "org.jfree.chart.plot$CrosshairState#CrosshairState(boolean)": 1805.0,
        "org.jfree.chart.plot$CrosshairState#getAnchor()": 1905.0,
        "org.jfree.chart.plot$CrosshairState#getAnchorX()": 1917.0,
        "org.jfree.chart.plot$CrosshairState#getAnchorY()": 1917.0,
        "org.jfree.chart.plot$CrosshairState#getCrosshairDistance()": 1917.0,
        "org.jfree.chart.plot$CrosshairState#getCrosshairX()": 1881.0,
        "org.jfree.chart.plot$CrosshairState#getCrosshairY()": 1805.0,
        "org.jfree.chart.plot$CrosshairState#getDatasetIndex()": 1841.0,
        "org.jfree.chart.plot$CrosshairState#getDomainAxisIndex()": 1881.0,
        "org.jfree.chart.plot$CrosshairState#getRangeAxisIndex()": 1881.0,
        "org.jfree.chart.plot$CrosshairState#setAnchor(java.awt.geom.Point2D)": 1805.0,
        "org.jfree.chart.plot$CrosshairState#setAnchorX(double)": 1805.0,
        "org.jfree.chart.plot$CrosshairState#setAnchorY(double)": 1805.0,
        "org.jfree.chart.plot$CrosshairState#setCrosshairDistance(double)": 1805.0,
        "org.jfree.chart.plot$CrosshairState#setCrosshairX(double)": 1881.0,
        "org.jfree.chart.plot$CrosshairState#setCrosshairY(double)": 1805.0,
        "org.jfree.chart.plot$CrosshairState#setDatasetIndex(int)": 1917.0,
        "org.jfree.chart.plot$CrosshairState#updateCrosshairPoint(double,double,double,double,org.jfree.chart.plot.PlotOrientation)": 1917.0,
        "org.jfree.chart.plot$CrosshairState#updateCrosshairPoint(double,double,int,int,double,double,org.jfree.chart.plot.PlotOrientation)": 1917.0,
        "org.jfree.chart.plot$CrosshairState#updateCrosshairX(double)": 1917.0,
        "org.jfree.chart.plot$CrosshairState#updateCrosshairX(double,int)": 1917.0,
        "org.jfree.chart.plot$CrosshairState#updateCrosshairY(double)": 1917.0,
        "org.jfree.chart.plot$CrosshairState#updateCrosshairY(double,int)": 1917.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#<clinit>()": 3027379.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#DatasetRenderingOrder(java.lang.String)": 3027379.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#equals(java.lang.Object)": 1885.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#hashCode()": 1917.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#readResolve()": 1885.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#toString()": 1885.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()": 2771929.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier()": 2771929.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])": 2771929.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])": 1911.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#clone()": 3290449.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#createStandardSeriesShapes()": 2771929.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#equalShapes(java.awt.Shape[],java.awt.Shape[])": 1749.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)": 1747.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextFillPaint()": 1915.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlinePaint()": 1913.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlineStroke()": 1915.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextPaint()": 1769.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextShape()": 1875.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextStroke()": 1839.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double)": 2771929.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double,double)": 2771929.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#readObject(java.io.ObjectInputStream)": 1851.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#writeObject(java.io.ObjectOutputStream)": 1851.0,
        "org.jfree.chart.plot$IntervalMarker#IntervalMarker(double,double)": 1903.0,
        "org.jfree.chart.plot$IntervalMarker#IntervalMarker(double,double,java.awt.Paint)": 1917.0,
        "org.jfree.chart.plot$IntervalMarker#IntervalMarker(double,double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)": 1903.0,
        "org.jfree.chart.plot$IntervalMarker#clone()": 1915.0,
        "org.jfree.chart.plot$IntervalMarker#equals(java.lang.Object)": 1903.0,
        "org.jfree.chart.plot$IntervalMarker#getEndValue()": 1911.0,
        "org.jfree.chart.plot$IntervalMarker#getGradientPaintTransformer()": 1917.0,
        "org.jfree.chart.plot$IntervalMarker#getStartValue()": 1911.0,
        "org.jfree.chart.plot$IntervalMarker#setEndValue(double)": 1915.0,
        "org.jfree.chart.plot$IntervalMarker#setGradientPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)": 1915.0,
        "org.jfree.chart.plot$IntervalMarker#setStartValue(double)": 1915.0,
        "org.jfree.chart.plot$Marker#Marker()": 1851.0,
        "org.jfree.chart.plot$Marker#Marker(java.awt.Paint)": 1851.0,
        "org.jfree.chart.plot$Marker#Marker(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)": 1825.0,
        "org.jfree.chart.plot$Marker#addChangeListener(org.jfree.chart.event.MarkerChangeListener)": 1855.0,
        "org.jfree.chart.plot$Marker#clone()": 1911.0,
        "org.jfree.chart.plot$Marker#equals(java.lang.Object)": 1883.0,
        "org.jfree.chart.plot$Marker#getAlpha()": 1909.0,
        "org.jfree.chart.plot$Marker#getLabel()": 1911.0,
        "org.jfree.chart.plot$Marker#getLabelAnchor()": 1911.0,
        "org.jfree.chart.plot$Marker#getLabelFont()": 1915.0,
        "org.jfree.chart.plot$Marker#getLabelOffset()": 1915.0,
        "org.jfree.chart.plot$Marker#getLabelOffsetType()": 1915.0,
        "org.jfree.chart.plot$Marker#getLabelPaint()": 1915.0,
        "org.jfree.chart.plot$Marker#getLabelTextAnchor()": 1915.0,
        "org.jfree.chart.plot$Marker#getListeners(java.lang.Class)": 1905.0,
        "org.jfree.chart.plot$Marker#getOutlinePaint()": 1913.0,
        "org.jfree.chart.plot$Marker#getOutlineStroke()": 1913.0,
        "org.jfree.chart.plot$Marker#getPaint()": 1909.0,
        "org.jfree.chart.plot$Marker#getStroke()": 1909.0,
        "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)": 1847.0,
        "org.jfree.chart.plot$Marker#readObject(java.io.ObjectInputStream)": 1905.0,
        "org.jfree.chart.plot$Marker#removeChangeListener(org.jfree.chart.event.MarkerChangeListener)": 1905.0,
        "org.jfree.chart.plot$Marker#setAlpha(float)": 1913.0,
        "org.jfree.chart.plot$Marker#setLabel(java.lang.String)": 1913.0,
        "org.jfree.chart.plot$Marker#setLabelAnchor(org.jfree.chart.util.RectangleAnchor)": 1913.0,
        "org.jfree.chart.plot$Marker#setLabelFont(java.awt.Font)": 1913.0,
        "org.jfree.chart.plot$Marker#setLabelOffset(org.jfree.chart.util.RectangleInsets)": 1913.0,
        "org.jfree.chart.plot$Marker#setLabelOffsetType(org.jfree.chart.util.LengthAdjustmentType)": 1879.0,
        "org.jfree.chart.plot$Marker#setLabelPaint(java.awt.Paint)": 1913.0,
        "org.jfree.chart.plot$Marker#setLabelTextAnchor(org.jfree.chart.text.TextAnchor)": 1913.0,
        "org.jfree.chart.plot$Marker#setOutlinePaint(java.awt.Paint)": 1913.0,
        "org.jfree.chart.plot$Marker#setOutlineStroke(java.awt.Stroke)": 1913.0,
        "org.jfree.chart.plot$Marker#setPaint(java.awt.Paint)": 1907.0,
        "org.jfree.chart.plot$Marker#setStroke(java.awt.Stroke)": 1913.0,
        "org.jfree.chart.plot$Marker#writeObject(java.io.ObjectOutputStream)": 1905.0,
        "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot()": 1911.0,
        "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)": 1907.0,
        "org.jfree.chart.plot$MultiplePiePlot#clone()": 1915.0,
        "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 1917.0,
        "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)": 1909.0,
        "org.jfree.chart.plot$MultiplePiePlot#getAggregatedItemsKey()": 1917.0,
        "org.jfree.chart.plot$MultiplePiePlot#getAggregatedItemsPaint()": 1917.0,
        "org.jfree.chart.plot$MultiplePiePlot#getDataExtractOrder()": 1917.0,
        "org.jfree.chart.plot$MultiplePiePlot#getDataset()": 1913.0,
        "org.jfree.chart.plot$MultiplePiePlot#getLegendItemShape()": 1915.0,
        "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()": 1915.0,
        "org.jfree.chart.plot$MultiplePiePlot#getLimit()": 1917.0,
        "org.jfree.chart.plot$MultiplePiePlot#getPieChart()": 1915.0,
        "org.jfree.chart.plot$MultiplePiePlot#getPlotType()": 1917.0,
        "org.jfree.chart.plot$MultiplePiePlot#prefetchSectionPaints()": 1915.0,
        "org.jfree.chart.plot$MultiplePiePlot#readObject(java.io.ObjectInputStream)": 1915.0,
        "org.jfree.chart.plot$MultiplePiePlot#setAggregatedItemsKey(java.lang.Comparable)": 1915.0,
        "org.jfree.chart.plot$MultiplePiePlot#setAggregatedItemsPaint(java.awt.Paint)": 1913.0,
        "org.jfree.chart.plot$MultiplePiePlot#setDataExtractOrder(org.jfree.chart.util.TableOrder)": 1915.0,
        "org.jfree.chart.plot$MultiplePiePlot#setDataset(org.jfree.data.category.CategoryDataset)": 1907.0,
        "org.jfree.chart.plot$MultiplePiePlot#setLegendItemShape(java.awt.Shape)": 1913.0,
        "org.jfree.chart.plot$MultiplePiePlot#setLimit(double)": 1915.0,
        "org.jfree.chart.plot$MultiplePiePlot#setPieChart(org.jfree.chart.JFreeChart)": 1915.0,
        "org.jfree.chart.plot$MultiplePiePlot#writeObject(java.io.ObjectOutputStream)": 1915.0,
        "org.jfree.chart.plot$PieLabelDistributor#PieLabelDistributor(int)": 3617545.0,
        "org.jfree.chart.plot$PieLabelDistributor#adjustDownwards(double,double)": 1915.0,
        "org.jfree.chart.plot$PieLabelDistributor#adjustInwards()": 1917.0,
        "org.jfree.chart.plot$PieLabelDistributor#adjustUpwards(double,double)": 1915.0,
        "org.jfree.chart.plot$PieLabelDistributor#distributeLabels(double,double)": 1913.0,
        "org.jfree.chart.plot$PieLabelDistributor#isOverlap()": 1913.0,
        "org.jfree.chart.plot$PieLabelDistributor#sort()": 1913.0,
        "org.jfree.chart.plot$PieLabelDistributor#spreadEvenly(double,double)": 1915.0,
        "org.jfree.chart.plot$PieLabelDistributor#toString()": 1917.0,
        "org.jfree.chart.plot$PieLabelLinkStyle#<clinit>()": 3312259.0,
        "org.jfree.chart.plot$PieLabelLinkStyle#PieLabelLinkStyle(java.lang.String)": 3312259.0,
        "org.jfree.chart.plot$PieLabelLinkStyle#equals(java.lang.Object)": 1867.0,
        "org.jfree.chart.plot$PieLabelLinkStyle#hashCode()": 1917.0,
        "org.jfree.chart.plot$PieLabelLinkStyle#readResolve()": 1903.0,
        "org.jfree.chart.plot$PieLabelLinkStyle#toString()": 1895.0,
        "org.jfree.chart.plot$PiePlot#<clinit>()": 3617545.0,
        "org.jfree.chart.plot$PiePlot#PiePlot()": 1895.0,
        "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)": 3617545.0,
        "org.jfree.chart.plot$PiePlot#clearSectionOutlinePaints(boolean)": 1917.0,
        "org.jfree.chart.plot$PiePlot#clearSectionOutlineStrokes(boolean)": 1917.0,
        "org.jfree.chart.plot$PiePlot#clearSectionPaints(boolean)": 3694045.0,
        "org.jfree.chart.plot$PiePlot#clone()": 1901.0,
        "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 1915.0,
        "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)": 1915.0,
        "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)": 1913.0,
        "org.jfree.chart.plot$PiePlot#drawLeftLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)": 1913.0,
        "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)": 1913.0,
        "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 1915.0,
        "org.jfree.chart.plot$PiePlot#drawRightLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)": 1913.0,
        "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)": 1913.0,
        "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)": 1917.0,
        "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)": 1875.0,
        "org.jfree.chart.plot$PiePlot#getArcBounds(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double,double)": 1915.0,
        "org.jfree.chart.plot$PiePlot#getAutoPopulateSectionOutlinePaint()": 3690201.0,
        "org.jfree.chart.plot$PiePlot#getAutoPopulateSectionOutlineStroke()": 3690201.0,
        "org.jfree.chart.plot$PiePlot#getAutoPopulateSectionPaint()": 3690201.0,
        "org.jfree.chart.plot$PiePlot#getBaseSectionOutlinePaint()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getBaseSectionOutlineStroke()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getBaseSectionPaint()": 1915.0,
        "org.jfree.chart.plot$PiePlot#getDataset()": 1905.0,
        "org.jfree.chart.plot$PiePlot#getDirection()": 1915.0,
        "org.jfree.chart.plot$PiePlot#getExplodePercent(java.lang.Comparable)": 1913.0,
        "org.jfree.chart.plot$PiePlot#getIgnoreNullValues()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getIgnoreZeroValues()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getInteriorGap()": 1911.0,
        "org.jfree.chart.plot$PiePlot#getLabelBackgroundPaint()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getLabelDistributor()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getLabelFont()": 1913.0,
        "org.jfree.chart.plot$PiePlot#getLabelGap()": 1913.0,
        "org.jfree.chart.plot$PiePlot#getLabelGenerator()": 1913.0,
        "org.jfree.chart.plot$PiePlot#getLabelLinkDepth()": 1913.0,
        "org.jfree.chart.plot$PiePlot#getLabelLinkMargin()": 1913.0,
        "org.jfree.chart.plot$PiePlot#getLabelLinkPaint()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getLabelLinkStroke()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getLabelLinkStyle()": 1913.0,
        "org.jfree.chart.plot$PiePlot#getLabelLinksVisible()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getLabelOutlinePaint()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getLabelOutlineStroke()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getLabelPadding()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getLabelPaint()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getLabelShadowPaint()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getLegendItemShape()": 1911.0,
        "org.jfree.chart.plot$PiePlot#getLegendItems()": 1909.0,
        "org.jfree.chart.plot$PiePlot#getLegendLabelGenerator()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getLegendLabelToolTipGenerator()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getLegendLabelURLGenerator()": 1915.0,
        "org.jfree.chart.plot$PiePlot#getMaximumExplodePercent()": 1911.0,
        "org.jfree.chart.plot$PiePlot#getMaximumLabelWidth()": 1913.0,
        "org.jfree.chart.plot$PiePlot#getMinimumArcAngleToDraw()": 1913.0,
        "org.jfree.chart.plot$PiePlot#getPieIndex()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getPlotType()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getSectionKey(int)": 1913.0,
        "org.jfree.chart.plot$PiePlot#getSectionOutlinePaint(java.lang.Comparable)": 1917.0,
        "org.jfree.chart.plot$PiePlot#getSectionOutlineStroke(java.lang.Comparable)": 1917.0,
        "org.jfree.chart.plot$PiePlot#getSectionOutlinesVisible()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getSectionPaint(java.lang.Comparable)": 1915.0,
        "org.jfree.chart.plot$PiePlot#getShadowPaint()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getShadowXOffset()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getShadowYOffset()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getSimpleLabelOffset()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getSimpleLabels()": 1915.0,
        "org.jfree.chart.plot$PiePlot#getStartAngle()": 1911.0,
        "org.jfree.chart.plot$PiePlot#getToolTipGenerator()": 1917.0,
        "org.jfree.chart.plot$PiePlot#getURLGenerator()": 1915.0,
        "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)": 1911.0,
        "org.jfree.chart.plot$PiePlot#isCircular()": 1911.0,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable)": 1911.0,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable,boolean)": 1911.0,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable)": 1911.0,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable,boolean)": 1911.0,
        "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable)": 1911.0,
        "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable,boolean)": 1911.0,
        "org.jfree.chart.plot$PiePlot#readObject(java.io.ObjectInputStream)": 1905.0,
        "org.jfree.chart.plot$PiePlot#setAutoPopulateSectionOutlinePaint(boolean)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setAutoPopulateSectionOutlineStroke(boolean)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setAutoPopulateSectionPaint(boolean)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setBaseSectionOutlinePaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setBaseSectionOutlineStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setBaseSectionPaint(java.awt.Paint)": 1913.0,
        "org.jfree.chart.plot$PiePlot#setCircular(boolean)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setCircular(boolean,boolean)": 1903.0,
        "org.jfree.chart.plot$PiePlot#setDataset(org.jfree.data.general.PieDataset)": 1913.0,
        "org.jfree.chart.plot$PiePlot#setDirection(org.jfree.chart.util.Rotation)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setExplodePercent(java.lang.Comparable,double)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setIgnoreNullValues(boolean)": 1903.0,
        "org.jfree.chart.plot$PiePlot#setIgnoreZeroValues(boolean)": 1913.0,
        "org.jfree.chart.plot$PiePlot#setInteriorGap(double)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setLabelBackgroundPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setLabelDistributor(org.jfree.chart.plot.AbstractPieLabelDistributor)": 1917.0,
        "org.jfree.chart.plot$PiePlot#setLabelFont(java.awt.Font)": 3690201.0,
        "org.jfree.chart.plot$PiePlot#setLabelGap(double)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)": 3701739.0,
        "org.jfree.chart.plot$PiePlot#setLabelLinkMargin(double)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setLabelLinkPaint(java.awt.Paint)": 3690201.0,
        "org.jfree.chart.plot$PiePlot#setLabelLinkStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setLabelLinkStyle(org.jfree.chart.plot.PieLabelLinkStyle)": 3690201.0,
        "org.jfree.chart.plot$PiePlot#setLabelLinksVisible(boolean)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setLabelOutlinePaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setLabelOutlineStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setLabelPadding(org.jfree.chart.util.RectangleInsets)": 1917.0,
        "org.jfree.chart.plot$PiePlot#setLabelPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setLabelShadowPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setLegendItemShape(java.awt.Shape)": 1913.0,
        "org.jfree.chart.plot$PiePlot#setLegendLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)": 1911.0,
        "org.jfree.chart.plot$PiePlot#setLegendLabelToolTipGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)": 1913.0,
        "org.jfree.chart.plot$PiePlot#setLegendLabelURLGenerator(org.jfree.chart.urls.PieURLGenerator)": 1913.0,
        "org.jfree.chart.plot$PiePlot#setMaximumLabelWidth(double)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setMinimumArcAngleToDraw(double)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setPieIndex(int)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setSectionOutlinePaint(java.lang.Comparable,java.awt.Paint)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setSectionOutlineStroke(java.lang.Comparable,java.awt.Stroke)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setSectionOutlinesVisible(boolean)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setSectionPaint(java.lang.Comparable,java.awt.Paint)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setShadowPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setShadowXOffset(double)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setShadowYOffset(double)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setSimpleLabelOffset(org.jfree.chart.util.RectangleInsets)": 1917.0,
        "org.jfree.chart.plot$PiePlot#setSimpleLabels(boolean)": 1917.0,
        "org.jfree.chart.plot$PiePlot#setStartAngle(double)": 1915.0,
        "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)": 3697891.0,
        "org.jfree.chart.plot$PiePlot#setURLGenerator(org.jfree.chart.urls.PieURLGenerator)": 1907.0,
        "org.jfree.chart.plot$PiePlot#writeObject(java.io.ObjectOutputStream)": 1905.0,
        "org.jfree.chart.plot$PiePlot3D#PiePlot3D()": 1915.0,
        "org.jfree.chart.plot$PiePlot3D#PiePlot3D(org.jfree.data.general.PieDataset)": 1905.0,
        "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 1913.0,
        "org.jfree.chart.plot$PiePlot3D#drawSide(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Arc2D,java.awt.geom.Area,java.awt.geom.Area,java.awt.Paint,java.awt.Paint,java.awt.Stroke,boolean,boolean)": 1915.0,
        "org.jfree.chart.plot$PiePlot3D#equals(java.lang.Object)": 1909.0,
        "org.jfree.chart.plot$PiePlot3D#getDarkerSides()": 1915.0,
        "org.jfree.chart.plot$PiePlot3D#getDepthFactor()": 1917.0,
        "org.jfree.chart.plot$PiePlot3D#getPlotType()": 1917.0,
        "org.jfree.chart.plot$PiePlot3D#isAngleAtBack(double)": 1915.0,
        "org.jfree.chart.plot$PiePlot3D#isAngleAtFront(double)": 1915.0,
        "org.jfree.chart.plot$PiePlot3D#setDarkerSides(boolean)": 1915.0,
        "org.jfree.chart.plot$PiePlot3D#setDepthFactor(double)": 1915.0,
        "org.jfree.chart.plot$Plot#<clinit>()": 2791951.0,
        "org.jfree.chart.plot$Plot#Plot()": 2791951.0,
        "org.jfree.chart.plot$Plot#addChangeListener(org.jfree.chart.event.PlotChangeListener)": 3097399.0,
        "org.jfree.chart.plot$Plot#axisChanged(org.jfree.chart.event.AxisChangeEvent)": 3418689.0,
        "org.jfree.chart.plot$Plot#clone()": 1861.0,
        "org.jfree.chart.plot$Plot#createAndAddEntity(java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo,java.lang.String,java.lang.String)": 1805.0,
        "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 1889.0,
        "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1907.0,
        "org.jfree.chart.plot$Plot#drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1801.0,
        "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1895.0,
        "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1801.0,
        "org.jfree.chart.plot$Plot#equals(java.lang.Object)": 1759.0,
        "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1907.0,
        "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)": 1801.0,
        "org.jfree.chart.plot$Plot#fireChangeEvent()": 3041319.0,
        "org.jfree.chart.plot$Plot#getBackgroundAlpha()": 1911.0,
        "org.jfree.chart.plot$Plot#getBackgroundImage()": 1911.0,
        "org.jfree.chart.plot$Plot#getBackgroundImageAlignment()": 1917.0,
        "org.jfree.chart.plot$Plot#getBackgroundImageAlpha()": 1917.0,
        "org.jfree.chart.plot$Plot#getBackgroundPaint()": 3396531.0,
        "org.jfree.chart.plot$Plot#getDatasetGroup()": 1917.0,
        "org.jfree.chart.plot$Plot#getDrawingSupplier()": 3182479.0,
        "org.jfree.chart.plot$Plot#getForegroundAlpha()": 1795.0,
        "org.jfree.chart.plot$Plot#getInsets()": 1789.0,
        "org.jfree.chart.plot$Plot#getLegendItems()": 1915.0,
        "org.jfree.chart.plot$Plot#getNoDataMessage()": 1917.0,
        "org.jfree.chart.plot$Plot#getNoDataMessageFont()": 1917.0,
        "org.jfree.chart.plot$Plot#getNoDataMessagePaint()": 1917.0,
        "org.jfree.chart.plot$Plot#getOutlinePaint()": 1911.0,
        "org.jfree.chart.plot$Plot#getOutlineStroke()": 1911.0,
        "org.jfree.chart.plot$Plot#getParent()": 2961601.0,
        "org.jfree.chart.plot$Plot#getRectX(double,double,double,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.plot$Plot#getRectY(double,double,double,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.plot$Plot#getRootPlot()": 1917.0,
        "org.jfree.chart.plot$Plot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 1917.0,
        "org.jfree.chart.plot$Plot#isNotify()": 1897.0,
        "org.jfree.chart.plot$Plot#isOutlineVisible()": 1841.0,
        "org.jfree.chart.plot$Plot#isSubplot()": 1917.0,
        "org.jfree.chart.plot$Plot#markerChanged(org.jfree.chart.event.MarkerChangeEvent)": 1917.0,
        "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)": 2828845.0,
        "org.jfree.chart.plot$Plot#readObject(java.io.ObjectInputStream)": 1855.0,
        "org.jfree.chart.plot$Plot#removeChangeListener(org.jfree.chart.event.PlotChangeListener)": 1909.0,
        "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)": 1801.0,
        "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)": 1801.0,
        "org.jfree.chart.plot$Plot#setBackgroundAlpha(float)": 1915.0,
        "org.jfree.chart.plot$Plot#setBackgroundImage(java.awt.Image)": 1915.0,
        "org.jfree.chart.plot$Plot#setBackgroundImageAlignment(int)": 1915.0,
        "org.jfree.chart.plot$Plot#setBackgroundImageAlpha(float)": 1915.0,
        "org.jfree.chart.plot$Plot#setBackgroundPaint(java.awt.Paint)": 3378121.0,
        "org.jfree.chart.plot$Plot#setDatasetGroup(org.jfree.data.general.DatasetGroup)": 1909.0,
        "org.jfree.chart.plot$Plot#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)": 3392845.0,
        "org.jfree.chart.plot$Plot#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier,boolean)": 1917.0,
        "org.jfree.chart.plot$Plot#setForegroundAlpha(float)": 1907.0,
        "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)": 3632781.0,
        "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets,boolean)": 3613741.0,
        "org.jfree.chart.plot$Plot#setNoDataMessage(java.lang.String)": 1915.0,
        "org.jfree.chart.plot$Plot#setNoDataMessageFont(java.awt.Font)": 1915.0,
        "org.jfree.chart.plot$Plot#setNoDataMessagePaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart.plot$Plot#setNotify(boolean)": 1897.0,
        "org.jfree.chart.plot$Plot#setOutlinePaint(java.awt.Paint)": 3392845.0,
        "org.jfree.chart.plot$Plot#setOutlineStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart.plot$Plot#setOutlineVisible(boolean)": 1915.0,
        "org.jfree.chart.plot$Plot#setParent(org.jfree.chart.plot.Plot)": 1877.0,
        "org.jfree.chart.plot$Plot#writeObject(java.io.ObjectOutputStream)": 1855.0,
        "org.jfree.chart.plot$Plot#zoom(double)": 1917.0,
        "org.jfree.chart.plot$PlotOrientation#<clinit>()": 2996131.0,
        "org.jfree.chart.plot$PlotOrientation#PlotOrientation(java.lang.String)": 2996131.0,
        "org.jfree.chart.plot$PlotOrientation#equals(java.lang.Object)": 1881.0,
        "org.jfree.chart.plot$PlotOrientation#hashCode()": 1917.0,
        "org.jfree.chart.plot$PlotOrientation#readResolve()": 1883.0,
        "org.jfree.chart.plot$PlotOrientation#toString()": 1881.0,
        "org.jfree.chart.plot$PlotRenderingInfo#PlotRenderingInfo(org.jfree.chart.ChartRenderingInfo)": 1799.0,
        "org.jfree.chart.plot$PlotRenderingInfo#addSubplotInfo(org.jfree.chart.plot.PlotRenderingInfo)": 1915.0,
        "org.jfree.chart.plot$PlotRenderingInfo#clone()": 1915.0,
        "org.jfree.chart.plot$PlotRenderingInfo#equals(java.lang.Object)": 1905.0,
        "org.jfree.chart.plot$PlotRenderingInfo#getDataArea()": 1913.0,
        "org.jfree.chart.plot$PlotRenderingInfo#getOwner()": 1837.0,
        "org.jfree.chart.plot$PlotRenderingInfo#getPlotArea()": 1915.0,
        "org.jfree.chart.plot$PlotRenderingInfo#getSubplotCount()": 1915.0,
        "org.jfree.chart.plot$PlotRenderingInfo#getSubplotIndex(java.awt.geom.Point2D)": 1917.0,
        "org.jfree.chart.plot$PlotRenderingInfo#getSubplotInfo(int)": 1915.0,
        "org.jfree.chart.plot$PlotRenderingInfo#readObject(java.io.ObjectInputStream)": 1911.0,
        "org.jfree.chart.plot$PlotRenderingInfo#setDataArea(java.awt.geom.Rectangle2D)": 1833.0,
        "org.jfree.chart.plot$PlotRenderingInfo#setPlotArea(java.awt.geom.Rectangle2D)": 1835.0,
        "org.jfree.chart.plot$PlotRenderingInfo#writeObject(java.io.ObjectOutputStream)": 1911.0,
        "org.jfree.chart.plot$PlotState#PlotState()": 1909.0,
        "org.jfree.chart.plot$PlotState#getSharedAxisStates()": 1909.0,
        "org.jfree.chart.plot$PolarPlot#<clinit>()": 1911.0,
        "org.jfree.chart.plot$PolarPlot#PolarPlot()": 1911.0,
        "org.jfree.chart.plot$PolarPlot#PolarPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.PolarItemRenderer)": 1911.0,
        "org.jfree.chart.plot$PolarPlot#addCornerTextItem(java.lang.String)": 1913.0,
        "org.jfree.chart.plot$PolarPlot#clearCornerTextItems()": 1917.0,
        "org.jfree.chart.plot$PolarPlot#clone()": 1915.0,
        "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 1917.0,
        "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 1917.0,
        "org.jfree.chart.plot$PolarPlot#drawAxis(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)": 1917.0,
        "org.jfree.chart.plot$PolarPlot#drawCornerTextItems(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1917.0,
        "org.jfree.chart.plot$PolarPlot#drawGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List,java.util.List)": 1917.0,
        "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)": 1911.0,
        "org.jfree.chart.plot$PolarPlot#getAngleGridlinePaint()": 1917.0,
        "org.jfree.chart.plot$PolarPlot#getAngleGridlineStroke()": 1917.0,
        "org.jfree.chart.plot$PolarPlot#getAngleLabelFont()": 1917.0,
        "org.jfree.chart.plot$PolarPlot#getAngleLabelPaint()": 1917.0,
        "org.jfree.chart.plot$PolarPlot#getAngleTickUnit()": 1917.0,
        "org.jfree.chart.plot$PolarPlot#getAxis()": 1915.0,
        "org.jfree.chart.plot$PolarPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 1913.0,
        "org.jfree.chart.plot$PolarPlot#getDataset()": 1917.0,
        "org.jfree.chart.plot$PolarPlot#getLegendItems()": 1917.0,
        "org.jfree.chart.plot$PolarPlot#getMaxRadius()": 1917.0,
        "org.jfree.chart.plot$PolarPlot#getOrientation()": 1917.0,
        "org.jfree.chart.plot$PolarPlot#getPlotType()": 1917.0,
        "org.jfree.chart.plot$PolarPlot#getRadiusGridlinePaint()": 1917.0,
        "org.jfree.chart.plot$PolarPlot#getRadiusGridlineStroke()": 1917.0,
        "org.jfree.chart.plot$PolarPlot#getRenderer()": 1917.0,
        "org.jfree.chart.plot$PolarPlot#getSeriesCount()": 1917.0,
        "org.jfree.chart.plot$PolarPlot#isAngleGridlinesVisible()": 1917.0,
        "org.jfree.chart.plot$PolarPlot#isAngleLabelsVisible()": 1917.0,
        "org.jfree.chart.plot$PolarPlot#isDomainZoomable()": 1917.0,
        "org.jfree.chart.plot$PolarPlot#isRadiusGridlinesVisible()": 1917.0,
        "org.jfree.chart.plot$PolarPlot#isRangeZoomable()": 1917.0,
        "org.jfree.chart.plot$PolarPlot#readObject(java.io.ObjectInputStream)": 1915.0,
        "org.jfree.chart.plot$PolarPlot#refreshAngleTicks()": 1917.0,
        "org.jfree.chart.plot$PolarPlot#removeCornerTextItem(java.lang.String)": 1917.0,
        "org.jfree.chart.plot$PolarPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 1917.0,
        "org.jfree.chart.plot$PolarPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)": 1917.0,
        "org.jfree.chart.plot$PolarPlot#setAngleGridlinePaint(java.awt.Paint)": 1913.0,
        "org.jfree.chart.plot$PolarPlot#setAngleGridlineStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart.plot$PolarPlot#setAngleGridlinesVisible(boolean)": 1915.0,
        "org.jfree.chart.plot$PolarPlot#setAngleLabelFont(java.awt.Font)": 1915.0,
        "org.jfree.chart.plot$PolarPlot#setAngleLabelPaint(java.awt.Paint)": 1913.0,
        "org.jfree.chart.plot$PolarPlot#setAngleLabelsVisible(boolean)": 1915.0,
        "org.jfree.chart.plot$PolarPlot#setAngleTickUnit(org.jfree.chart.axis.TickUnit)": 1915.0,
        "org.jfree.chart.plot$PolarPlot#setAxis(org.jfree.chart.axis.ValueAxis)": 1915.0,
        "org.jfree.chart.plot$PolarPlot#setDataset(org.jfree.data.xy.XYDataset)": 1917.0,
        "org.jfree.chart.plot$PolarPlot#setRadiusGridlinePaint(java.awt.Paint)": 1913.0,
        "org.jfree.chart.plot$PolarPlot#setRadiusGridlineStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart.plot$PolarPlot#setRadiusGridlinesVisible(boolean)": 1915.0,
        "org.jfree.chart.plot$PolarPlot#setRenderer(org.jfree.chart.renderer.PolarItemRenderer)": 1917.0,
        "org.jfree.chart.plot$PolarPlot#translateValueThetaRadiusToJava2D(double,double,java.awt.geom.Rectangle2D)": 1917.0,
        "org.jfree.chart.plot$PolarPlot#writeObject(java.io.ObjectOutputStream)": 1915.0,
        "org.jfree.chart.plot$PolarPlot#zoom(double)": 1917.0,
        "org.jfree.chart.plot$PolarPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1917.0,
        "org.jfree.chart.plot$PolarPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1917.0,
        "org.jfree.chart.plot$PolarPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 1917.0,
        "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1917.0,
        "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1917.0,
        "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 1917.0,
        "org.jfree.chart.plot$RingPlot#RingPlot()": 1915.0,
        "org.jfree.chart.plot$RingPlot#RingPlot(org.jfree.data.general.PieDataset)": 1909.0,
        "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)": 1917.0,
        "org.jfree.chart.plot$RingPlot#equals(java.lang.Object)": 1909.0,
        "org.jfree.chart.plot$RingPlot#extendLine(java.awt.geom.Line2D,double,double)": 1917.0,
        "org.jfree.chart.plot$RingPlot#getInnerSeparatorExtension()": 1917.0,
        "org.jfree.chart.plot$RingPlot#getLabelLinkDepth()": 1917.0,
        "org.jfree.chart.plot$RingPlot#getOuterSeparatorExtension()": 1917.0,
        "org.jfree.chart.plot$RingPlot#getSectionDepth()": 1917.0,
        "org.jfree.chart.plot$RingPlot#getSeparatorPaint()": 1917.0,
        "org.jfree.chart.plot$RingPlot#getSeparatorStroke()": 1917.0,
        "org.jfree.chart.plot$RingPlot#getSeparatorsVisible()": 1917.0,
        "org.jfree.chart.plot$RingPlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)": 1917.0,
        "org.jfree.chart.plot$RingPlot#readObject(java.io.ObjectInputStream)": 1915.0,
        "org.jfree.chart.plot$RingPlot#setInnerSeparatorExtension(double)": 1915.0,
        "org.jfree.chart.plot$RingPlot#setOuterSeparatorExtension(double)": 1915.0,
        "org.jfree.chart.plot$RingPlot#setSectionDepth(double)": 1915.0,
        "org.jfree.chart.plot$RingPlot#setSeparatorPaint(java.awt.Paint)": 1911.0,
        "org.jfree.chart.plot$RingPlot#setSeparatorStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart.plot$RingPlot#setSeparatorsVisible(boolean)": 1915.0,
        "org.jfree.chart.plot$RingPlot#writeObject(java.io.ObjectOutputStream)": 1915.0,
        "org.jfree.chart.plot$SeriesRenderingOrder#<clinit>()": 3437209.0,
        "org.jfree.chart.plot$SeriesRenderingOrder#SeriesRenderingOrder(java.lang.String)": 3437209.0,
        "org.jfree.chart.plot$SeriesRenderingOrder#equals(java.lang.Object)": 1901.0,
        "org.jfree.chart.plot$SeriesRenderingOrder#hashCode()": 1917.0,
        "org.jfree.chart.plot$SeriesRenderingOrder#readResolve()": 1901.0,
        "org.jfree.chart.plot$SeriesRenderingOrder#toString()": 1901.0,
        "org.jfree.chart.plot$ValueMarker#ValueMarker(double)": 1851.0,
        "org.jfree.chart.plot$ValueMarker#ValueMarker(double,java.awt.Paint,java.awt.Stroke)": 1917.0,
        "org.jfree.chart.plot$ValueMarker#ValueMarker(double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)": 1915.0,
        "org.jfree.chart.plot$ValueMarker#equals(java.lang.Object)": 1873.0,
        "org.jfree.chart.plot$ValueMarker#getValue()": 1907.0,
        "org.jfree.chart.plot$ValueMarker#setValue(double)": 1913.0,
        "org.jfree.chart.plot$XYPlot#<clinit>()": 3437209.0,
        "org.jfree.chart.plot$XYPlot#XYPlot()": 1877.0,
        "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)": 3437209.0,
        "org.jfree.chart.plot$XYPlot#addAnnotation(org.jfree.chart.annotations.XYAnnotation)": 1895.0,
        "org.jfree.chart.plot$XYPlot#addAnnotation(org.jfree.chart.annotations.XYAnnotation,boolean)": 1895.0,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1911.0,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 1911.0,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(org.jfree.chart.plot.Marker)": 1913.0,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1911.0,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1909.0,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 1909.0,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(org.jfree.chart.plot.Marker)": 1911.0,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1909.0,
        "org.jfree.chart.plot$XYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1881.0,
        "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 1881.0,
        "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 1879.0,
        "org.jfree.chart.plot$XYPlot#canSelectByPoint()": 1917.0,
        "org.jfree.chart.plot$XYPlot#canSelectByRegion()": 1917.0,
        "org.jfree.chart.plot$XYPlot#checkAxisIndices(java.util.List)": 3437209.0,
        "org.jfree.chart.plot$XYPlot#clearAnnotations()": 1917.0,
        "org.jfree.chart.plot$XYPlot#clearDomainAxes()": 1917.0,
        "org.jfree.chart.plot$XYPlot#clearDomainMarkers()": 1913.0,
        "org.jfree.chart.plot$XYPlot#clearDomainMarkers(int)": 1913.0,
        "org.jfree.chart.plot$XYPlot#clearRangeAxes()": 1917.0,
        "org.jfree.chart.plot$XYPlot#clearRangeMarkers()": 1913.0,
        "org.jfree.chart.plot$XYPlot#clearRangeMarkers(int)": 1913.0,
        "org.jfree.chart.plot$XYPlot#clearSelection()": 1917.0,
        "org.jfree.chart.plot$XYPlot#clone()": 1901.0,
        "org.jfree.chart.plot$XYPlot#configureDomainAxes()": 3437209.0,
        "org.jfree.chart.plot$XYPlot#configureRangeAxes()": 3437209.0,
        "org.jfree.chart.plot$XYPlot#convertToDataSpace(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.data.xy.XYDataset)": 1917.0,
        "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 3437209.0,
        "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 1879.0,
        "org.jfree.chart.plot$XYPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 1881.0,
        "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 1881.0,
        "org.jfree.chart.plot$XYPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1881.0,
        "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)": 1917.0,
        "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 1881.0,
        "org.jfree.chart.plot$XYPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 1881.0,
        "org.jfree.chart.plot$XYPlot#drawDomainTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 1881.0,
        "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)": 1917.0,
        "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1881.0,
        "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)": 1917.0,
        "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 1881.0,
        "org.jfree.chart.plot$XYPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 1881.0,
        "org.jfree.chart.plot$XYPlot#drawRangeTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 1881.0,
        "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)": 1917.0,
        "org.jfree.chart.plot$XYPlot#drawZeroDomainBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1881.0,
        "org.jfree.chart.plot$XYPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1881.0,
        "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)": 3644229.0,
        "org.jfree.chart.plot$XYPlot#findSelectionStateForDataset(org.jfree.data.xy.XYDataset,java.lang.Object)": 1917.0,
        "org.jfree.chart.plot$XYPlot#getAnnotations()": 3644229.0,
        "org.jfree.chart.plot$XYPlot#getAxisOffset()": 1917.0,
        "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 3504295.0,
        "org.jfree.chart.plot$XYPlot#getDataset()": 1917.0,
        "org.jfree.chart.plot$XYPlot#getDataset(int)": 3437209.0,
        "org.jfree.chart.plot$XYPlot#getDatasetCount()": 3564471.0,
        "org.jfree.chart.plot$XYPlot#getDatasetRenderingOrder()": 1881.0,
        "org.jfree.chart.plot$XYPlot#getDatasetsMappedToDomainAxis(java.lang.Integer)": 3508041.0,
        "org.jfree.chart.plot$XYPlot#getDatasetsMappedToRangeAxis(java.lang.Integer)": 3511789.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxis()": 1861.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxis(int)": 3523045.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisCount()": 3648049.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()": 1879.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)": 1881.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisForDataset(int)": 3564471.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)": 3504295.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisLocation()": 1879.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisLocation(int)": 1881.0,
        "org.jfree.chart.plot$XYPlot#getDomainCrosshairPaint()": 1917.0,
        "org.jfree.chart.plot$XYPlot#getDomainCrosshairStroke()": 1917.0,
        "org.jfree.chart.plot$XYPlot#getDomainCrosshairValue()": 1881.0,
        "org.jfree.chart.plot$XYPlot#getDomainGridlinePaint()": 1883.0,
        "org.jfree.chart.plot$XYPlot#getDomainGridlineStroke()": 1883.0,
        "org.jfree.chart.plot$XYPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)": 1881.0,
        "org.jfree.chart.plot$XYPlot#getDomainMarkers(org.jfree.chart.util.Layer)": 1917.0,
        "org.jfree.chart.plot$XYPlot#getDomainMinorGridlinePaint()": 1917.0,
        "org.jfree.chart.plot$XYPlot#getDomainMinorGridlineStroke()": 1917.0,
        "org.jfree.chart.plot$XYPlot#getDomainTickBandPaint()": 1881.0,
        "org.jfree.chart.plot$XYPlot#getDomainZeroBaselinePaint()": 1917.0,
        "org.jfree.chart.plot$XYPlot#getDomainZeroBaselineStroke()": 1917.0,
        "org.jfree.chart.plot$XYPlot#getFixedDomainAxisSpace()": 1915.0,
        "org.jfree.chart.plot$XYPlot#getFixedLegendItems()": 1913.0,
        "org.jfree.chart.plot$XYPlot#getFixedRangeAxisSpace()": 1915.0,
        "org.jfree.chart.plot$XYPlot#getIndexOf(org.jfree.chart.renderer.xy.XYItemRenderer)": 3579595.0,
        "org.jfree.chart.plot$XYPlot#getLegendItems()": 1879.0,
        "org.jfree.chart.plot$XYPlot#getOrientation()": 1857.0,
        "org.jfree.chart.plot$XYPlot#getPlotType()": 1917.0,
        "org.jfree.chart.plot$XYPlot#getQuadrantOrigin()": 1915.0,
        "org.jfree.chart.plot$XYPlot#getQuadrantPaint(int)": 1917.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxis()": 1853.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxis(int)": 3572029.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisCount()": 3648049.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()": 1881.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)": 1879.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisForDataset(int)": 1879.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)": 3504295.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisLocation()": 1881.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisLocation(int)": 1879.0,
        "org.jfree.chart.plot$XYPlot#getRangeCrosshairPaint()": 1917.0,
        "org.jfree.chart.plot$XYPlot#getRangeCrosshairStroke()": 1917.0,
        "org.jfree.chart.plot$XYPlot#getRangeCrosshairValue()": 1881.0,
        "org.jfree.chart.plot$XYPlot#getRangeGridlinePaint()": 1881.0,
        "org.jfree.chart.plot$XYPlot#getRangeGridlineStroke()": 1881.0,
        "org.jfree.chart.plot$XYPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)": 1881.0,
        "org.jfree.chart.plot$XYPlot#getRangeMarkers(org.jfree.chart.util.Layer)": 1917.0,
        "org.jfree.chart.plot$XYPlot#getRangeMinorGridlinePaint()": 1917.0,
        "org.jfree.chart.plot$XYPlot#getRangeMinorGridlineStroke()": 1917.0,
        "org.jfree.chart.plot$XYPlot#getRangeTickBandPaint()": 1881.0,
        "org.jfree.chart.plot$XYPlot#getRangeZeroBaselinePaint()": 1917.0,
        "org.jfree.chart.plot$XYPlot#getRangeZeroBaselineStroke()": 1917.0,
        "org.jfree.chart.plot$XYPlot#getRenderer()": 3636595.0,
        "org.jfree.chart.plot$XYPlot#getRenderer(int)": 3541845.0,
        "org.jfree.chart.plot$XYPlot#getRendererCount()": 3538081.0,
        "org.jfree.chart.plot$XYPlot#getRendererForDataset(org.jfree.data.xy.XYDataset)": 3526801.0,
        "org.jfree.chart.plot$XYPlot#getSeriesCount()": 1917.0,
        "org.jfree.chart.plot$XYPlot#getSeriesRenderingOrder()": 1889.0,
        "org.jfree.chart.plot$XYPlot#getWeight()": 1913.0,
        "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 1917.0,
        "org.jfree.chart.plot$XYPlot#indexOf(org.jfree.data.xy.XYDataset)": 1915.0,
        "org.jfree.chart.plot$XYPlot#isDomainCrosshairLockedOnData()": 1917.0,
        "org.jfree.chart.plot$XYPlot#isDomainCrosshairVisible()": 1881.0,
        "org.jfree.chart.plot$XYPlot#isDomainGridlinesVisible()": 1881.0,
        "org.jfree.chart.plot$XYPlot#isDomainMinorGridlinesVisible()": 1881.0,
        "org.jfree.chart.plot$XYPlot#isDomainPannable()": 1917.0,
        "org.jfree.chart.plot$XYPlot#isDomainZeroBaselineVisible()": 1881.0,
        "org.jfree.chart.plot$XYPlot#isDomainZoomable()": 1895.0,
        "org.jfree.chart.plot$XYPlot#isRangeCrosshairLockedOnData()": 1917.0,
        "org.jfree.chart.plot$XYPlot#isRangeCrosshairVisible()": 1879.0,
        "org.jfree.chart.plot$XYPlot#isRangeGridlinesVisible()": 1881.0,
        "org.jfree.chart.plot$XYPlot#isRangeMinorGridlinesVisible()": 1887.0,
        "org.jfree.chart.plot$XYPlot#isRangePannable()": 1917.0,
        "org.jfree.chart.plot$XYPlot#isRangeZeroBaselineVisible()": 1881.0,
        "org.jfree.chart.plot$XYPlot#isRangeZoomable()": 1895.0,
        "org.jfree.chart.plot$XYPlot#mapDatasetToDomainAxes(int,java.util.List)": 3437209.0,
        "org.jfree.chart.plot$XYPlot#mapDatasetToDomainAxis(int,int)": 3437209.0,
        "org.jfree.chart.plot$XYPlot#mapDatasetToRangeAxes(int,java.util.List)": 3437209.0,
        "org.jfree.chart.plot$XYPlot#mapDatasetToRangeAxis(int,int)": 3437209.0,
        "org.jfree.chart.plot$XYPlot#panDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1917.0,
        "org.jfree.chart.plot$XYPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1917.0,
        "org.jfree.chart.plot$XYPlot#readObject(java.io.ObjectInputStream)": 1901.0,
        "org.jfree.chart.plot$XYPlot#removeAnnotation(org.jfree.chart.annotations.XYAnnotation)": 1915.0,
        "org.jfree.chart.plot$XYPlot#removeAnnotation(org.jfree.chart.annotations.XYAnnotation,boolean)": 1915.0,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1915.0,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 1915.0,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(org.jfree.chart.plot.Marker)": 1915.0,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1915.0,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1915.0,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 1915.0,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(org.jfree.chart.plot.Marker)": 1915.0,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 1915.0,
        "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)": 1881.0,
        "org.jfree.chart.plot$XYPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)": 3640411.0,
        "org.jfree.chart.plot$XYPlot#select(double,double,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)": 1917.0,
        "org.jfree.chart.plot$XYPlot#select(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)": 1917.0,
        "org.jfree.chart.plot$XYPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)": 3644229.0,
        "org.jfree.chart.plot$XYPlot#setDataset(int,org.jfree.data.xy.XYDataset)": 1889.0,
        "org.jfree.chart.plot$XYPlot#setDataset(org.jfree.data.xy.XYDataset)": 1913.0,
        "org.jfree.chart.plot$XYPlot#setDatasetRenderingOrder(org.jfree.chart.plot.DatasetRenderingOrder)": 1917.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxes(org.jfree.chart.axis.ValueAxis[])": 1917.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis)": 1893.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)": 1893.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxis(org.jfree.chart.axis.ValueAxis)": 1905.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 1913.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 1913.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation)": 1915.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 1917.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairLockedOnData(boolean)": 1917.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairPaint(java.awt.Paint)": 3648049.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairStroke(java.awt.Stroke)": 1917.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double)": 1917.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double,boolean)": 1881.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairVisible(boolean)": 1917.0,
        "org.jfree.chart.plot$XYPlot#setDomainGridlinePaint(java.awt.Paint)": 3644229.0,
        "org.jfree.chart.plot$XYPlot#setDomainGridlineStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart.plot$XYPlot#setDomainGridlinesVisible(boolean)": 1915.0,
        "org.jfree.chart.plot$XYPlot#setDomainMinorGridlinePaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart.plot$XYPlot#setDomainMinorGridlineStroke(java.awt.Stroke)": 1917.0,
        "org.jfree.chart.plot$XYPlot#setDomainMinorGridlinesVisible(boolean)": 1915.0,
        "org.jfree.chart.plot$XYPlot#setDomainPannable(boolean)": 1917.0,
        "org.jfree.chart.plot$XYPlot#setDomainTickBandPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart.plot$XYPlot#setDomainZeroBaselinePaint(java.awt.Paint)": 3648049.0,
        "org.jfree.chart.plot$XYPlot#setDomainZeroBaselineStroke(java.awt.Stroke)": 1917.0,
        "org.jfree.chart.plot$XYPlot#setDomainZeroBaselineVisible(boolean)": 1917.0,
        "org.jfree.chart.plot$XYPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace)": 1917.0,
        "org.jfree.chart.plot$XYPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 1915.0,
        "org.jfree.chart.plot$XYPlot#setFixedLegendItems(org.jfree.chart.LegendItemCollection)": 1913.0,
        "org.jfree.chart.plot$XYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)": 1917.0,
        "org.jfree.chart.plot$XYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 1915.0,
        "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)": 3613741.0,
        "org.jfree.chart.plot$XYPlot#setQuadrantOrigin(java.awt.geom.Point2D)": 1913.0,
        "org.jfree.chart.plot$XYPlot#setQuadrantPaint(int,java.awt.Paint)": 1913.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])": 1917.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)": 1901.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)": 1901.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)": 1895.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 1913.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 1897.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation)": 1899.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 1917.0,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairLockedOnData(boolean)": 1915.0,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairPaint(java.awt.Paint)": 3644229.0,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double)": 1915.0,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double,boolean)": 1879.0,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairVisible(boolean)": 1915.0,
        "org.jfree.chart.plot$XYPlot#setRangeGridlinePaint(java.awt.Paint)": 3644229.0,
        "org.jfree.chart.plot$XYPlot#setRangeGridlineStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart.plot$XYPlot#setRangeGridlinesVisible(boolean)": 1915.0,
        "org.jfree.chart.plot$XYPlot#setRangeMinorGridlinePaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart.plot$XYPlot#setRangeMinorGridlineStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart.plot$XYPlot#setRangeMinorGridlinesVisible(boolean)": 1915.0,
        "org.jfree.chart.plot$XYPlot#setRangePannable(boolean)": 1917.0,
        "org.jfree.chart.plot$XYPlot#setRangeTickBandPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart.plot$XYPlot#setRangeZeroBaselinePaint(java.awt.Paint)": 3644229.0,
        "org.jfree.chart.plot$XYPlot#setRangeZeroBaselineStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart.plot$XYPlot#setRangeZeroBaselineVisible(boolean)": 1915.0,
        "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer)": 3705589.0,
        "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)": 3705589.0,
        "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)": 3728731.0,
        "org.jfree.chart.plot$XYPlot#setRenderers(org.jfree.chart.renderer.xy.XYItemRenderer[])": 1917.0,
        "org.jfree.chart.plot$XYPlot#setSeriesRenderingOrder(org.jfree.chart.plot.SeriesRenderingOrder)": 1917.0,
        "org.jfree.chart.plot$XYPlot#setWeight(int)": 1895.0,
        "org.jfree.chart.plot$XYPlot#writeObject(java.io.ObjectOutputStream)": 1901.0,
        "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1915.0,
        "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1913.0,
        "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 1905.0,
        "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1915.0,
        "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1913.0,
        "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 1905.0,
        "org.jfree.chart.renderer$AbstractRenderer#<clinit>()": 2131099.0,
        "org.jfree.chart.renderer$AbstractRenderer#AbstractRenderer()": 2186959.0,
        "org.jfree.chart.renderer$AbstractRenderer#addChangeListener(org.jfree.chart.event.RendererChangeListener)": 3122095.0,
        "org.jfree.chart.renderer$AbstractRenderer#calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,double,double,org.jfree.chart.plot.PlotOrientation)": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#clearSeriesPaints(boolean)": 3455779.0,
        "org.jfree.chart.renderer$AbstractRenderer#clearSeriesStrokes(boolean)": 3455779.0,
        "org.jfree.chart.renderer$AbstractRenderer#clone()": 1787.0,
        "org.jfree.chart.renderer$AbstractRenderer#equals(java.lang.Object)": 1467.0,
        "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()": 2467651.0,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesFillPaint()": 1915.0,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesOutlinePaint()": 1915.0,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesOutlineStroke()": 1915.0,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesPaint()": 3452061.0,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesShape()": 1915.0,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesStroke()": 3452061.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseCreateEntities()": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseFillPaint()": 1915.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseItemLabelFont()": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseItemLabelPaint()": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseItemLabelsVisible()": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseLegendShape()": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseLegendTextFont()": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseLegendTextPaint()": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseNegativeItemLabelPosition()": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseOutlinePaint()": 1915.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseOutlineStroke()": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBasePaint()": 1915.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBasePositiveItemLabelPosition()": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseSeriesVisible()": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseSeriesVisibleInLegend()": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseShape()": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseStroke()": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getDataBoundsIncludesVisibleSeriesOnly()": 3261481.0,
        "org.jfree.chart.renderer$AbstractRenderer#getDefaultEntityRadius()": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemCreateEntity(int,int,boolean)": 1911.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemFillPaint(int,int,boolean)": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemLabelAnchorOffset()": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemLabelFont(int,int,boolean)": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemLabelPaint(int,int,boolean)": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemOutlinePaint(int,int,boolean)": 1907.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemOutlineStroke(int,int,boolean)": 1899.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemPaint(int,int,boolean)": 1827.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemShape(int,int,boolean)": 1905.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemStroke(int,int,boolean)": 1855.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemVisible(int,int)": 1851.0,
        "org.jfree.chart.renderer$AbstractRenderer#getLegendShape(int)": 1805.0,
        "org.jfree.chart.renderer$AbstractRenderer#getLegendTextFont(int)": 1785.0,
        "org.jfree.chart.renderer$AbstractRenderer#getLegendTextPaint(int)": 1785.0,
        "org.jfree.chart.renderer$AbstractRenderer#getNegativeItemLabelPosition(int,int,boolean)": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getPositiveItemLabelPosition(int,int,boolean)": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesCreateEntities(int)": 1911.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesFillPaint(int)": 1915.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesItemLabelFont(int)": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesItemLabelPaint(int)": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesItemLabelsVisible(int)": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesNegativeItemLabelPosition(int)": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesOutlinePaint(int)": 1829.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesOutlineStroke(int)": 1809.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesPaint(int)": 1781.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesPositiveItemLabelPosition(int)": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesShape(int)": 1877.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesStroke(int)": 1841.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesVisible(int)": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesVisibleInLegend(int)": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#getTreatLegendShapeAsLine()": 1913.0,
        "org.jfree.chart.renderer$AbstractRenderer#hasListener(java.util.EventListener)": 1911.0,
        "org.jfree.chart.renderer$AbstractRenderer#hashCode()": 1825.0,
        "org.jfree.chart.renderer$AbstractRenderer#isItemLabelVisible(int,int,boolean)": 1889.0,
        "org.jfree.chart.renderer$AbstractRenderer#isSeriesItemLabelsVisible(int)": 1889.0,
        "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisible(int)": 1691.0,
        "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisibleInLegend(int)": 1803.0,
        "org.jfree.chart.renderer$AbstractRenderer#lookupLegendShape(int)": 1805.0,
        "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextFont(int)": 1785.0,
        "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextPaint(int)": 1785.0,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesFillPaint(int)": 1915.0,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlinePaint(int)": 1829.0,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlineStroke(int)": 1809.0,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesPaint(int)": 1781.0,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesShape(int)": 1877.0,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesStroke(int)": 1841.0,
        "org.jfree.chart.renderer$AbstractRenderer#notifyListeners(org.jfree.chart.event.RendererChangeEvent)": 2467651.0,
        "org.jfree.chart.renderer$AbstractRenderer#readObject(java.io.ObjectInputStream)": 1785.0,
        "org.jfree.chart.renderer$AbstractRenderer#removeChangeListener(org.jfree.chart.event.RendererChangeListener)": 3740329.0,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesFillPaint(boolean)": 1915.0,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesOutlinePaint(boolean)": 1915.0,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesOutlineStroke(boolean)": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesPaint(boolean)": 1915.0,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesShape(boolean)": 1911.0,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesStroke(boolean)": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseCreateEntities(boolean)": 1913.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseCreateEntities(boolean,boolean)": 1913.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseFillPaint(java.awt.Paint)": 1913.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseFillPaint(java.awt.Paint,boolean)": 1913.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelFont(java.awt.Font)": 3448345.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelFont(java.awt.Font,boolean)": 3448345.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelPaint(java.awt.Paint)": 3448345.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelPaint(java.awt.Paint,boolean)": 3448345.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelsVisible(boolean)": 1911.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelsVisible(boolean,boolean)": 1911.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseLegendShape(java.awt.Shape)": 1521.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseLegendTextFont(java.awt.Font)": 1911.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseLegendTextPaint(java.awt.Paint)": 1909.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition)": 1769.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)": 1769.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlinePaint(java.awt.Paint)": 1895.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlinePaint(java.awt.Paint,boolean)": 1895.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlineStroke(java.awt.Stroke)": 1911.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlineStroke(java.awt.Stroke,boolean)": 1911.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBasePaint(java.awt.Paint)": 1907.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBasePaint(java.awt.Paint,boolean)": 1907.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition)": 1769.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)": 1769.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisible(boolean)": 1913.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisible(boolean,boolean)": 1913.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisibleInLegend(boolean)": 1913.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisibleInLegend(boolean,boolean)": 1913.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseShape(java.awt.Shape)": 1905.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseShape(java.awt.Shape,boolean)": 1905.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseStroke(java.awt.Stroke)": 1911.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseStroke(java.awt.Stroke,boolean)": 1911.0,
        "org.jfree.chart.renderer$AbstractRenderer#setDataBoundsIncludesVisibleSeriesOnly(boolean)": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#setDefaultEntityRadius(int)": 1913.0,
        "org.jfree.chart.renderer$AbstractRenderer#setItemLabelAnchorOffset(double)": 1915.0,
        "org.jfree.chart.renderer$AbstractRenderer#setLegendShape(int,java.awt.Shape)": 1913.0,
        "org.jfree.chart.renderer$AbstractRenderer#setLegendTextFont(int,java.awt.Font)": 1913.0,
        "org.jfree.chart.renderer$AbstractRenderer#setLegendTextPaint(int,java.awt.Paint)": 1913.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesCreateEntities(int,java.lang.Boolean)": 1913.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesCreateEntities(int,java.lang.Boolean,boolean)": 1913.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesFillPaint(int,java.awt.Paint)": 1909.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesFillPaint(int,java.awt.Paint,boolean)": 1907.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelFont(int,java.awt.Font)": 1913.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelFont(int,java.awt.Font,boolean)": 1913.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelPaint(int,java.awt.Paint)": 1911.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelPaint(int,java.awt.Paint,boolean)": 1911.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelsVisible(int,boolean)": 1915.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelsVisible(int,java.lang.Boolean)": 1909.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelsVisible(int,java.lang.Boolean,boolean)": 1909.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesNegativeItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition)": 1911.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesNegativeItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition,boolean)": 1911.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlinePaint(int,java.awt.Paint)": 1909.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlinePaint(int,java.awt.Paint,boolean)": 1907.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlineStroke(int,java.awt.Stroke)": 1909.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlineStroke(int,java.awt.Stroke,boolean)": 1909.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesPaint(int,java.awt.Paint)": 1903.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesPaint(int,java.awt.Paint,boolean)": 1767.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesPositiveItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition)": 1911.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesPositiveItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition,boolean)": 1911.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesShape(int,java.awt.Shape)": 1911.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesShape(int,java.awt.Shape,boolean)": 1871.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesStroke(int,java.awt.Stroke)": 1909.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesStroke(int,java.awt.Stroke,boolean)": 1833.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisible(int,java.lang.Boolean)": 1911.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisible(int,java.lang.Boolean,boolean)": 1911.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisibleInLegend(int,java.lang.Boolean)": 1907.0,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisibleInLegend(int,java.lang.Boolean,boolean)": 1907.0,
        "org.jfree.chart.renderer$AbstractRenderer#setTreatLegendShapeAsLine(boolean)": 1917.0,
        "org.jfree.chart.renderer$AbstractRenderer#writeObject(java.io.ObjectOutputStream)": 1785.0,
        "org.jfree.chart.renderer$RendererState#RendererState(org.jfree.chart.plot.PlotRenderingInfo)": 1819.0,
        "org.jfree.chart.renderer$RendererState#getEntityCollection()": 1849.0,
        "org.jfree.chart.renderer$RendererState#getInfo()": 1883.0,
        "org.jfree.chart.renderer$RendererUtilities#RendererUtilities()": 1917.0,
        "org.jfree.chart.renderer$RendererUtilities#findLiveItems(org.jfree.data.xy.XYDataset,int,double,double)": 1897.0,
        "org.jfree.chart.renderer$RendererUtilities#findLiveItemsLowerBound(org.jfree.data.xy.XYDataset,int,double,double)": 1891.0,
        "org.jfree.chart.renderer$RendererUtilities#findLiveItemsUpperBound(org.jfree.data.xy.XYDataset,int,double,double)": 1891.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#AbstractCategoryItemRenderer()": 1431.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 1917.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation,org.jfree.chart.util.Layer)": 1915.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean)": 1911.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double)": 1911.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#calculateDomainMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)": 1917.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#calculateRangeMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)": 1917.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()": 1861.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#createState(org.jfree.chart.plot.PlotRenderingInfo)": 1853.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)": 1841.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawBackground(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)": 1847.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)": 1915.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)": 1917.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double,boolean)": 1917.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawOutline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)": 1847.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)": 1845.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)": 1913.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#equals(java.lang.Object)": 1713.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset)": 1771.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 1761.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getBaseItemLabelGenerator()": 1917.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getBaseToolTipGenerator()": 1917.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getBaseURLGenerator()": 1917.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getColumnCount()": 1857.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getDomainAxis(org.jfree.chart.plot.CategoryPlot,int)": 1869.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getDrawingSupplier()": 1827.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getItemLabelGenerator(int,int,boolean)": 1885.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getItemMiddle(java.lang.Comparable,java.lang.Comparable,org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)": 1911.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItemLabelGenerator()": 1837.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItemToolTipGenerator()": 1837.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItemURLGenerator()": 1837.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItems()": 1917.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getPassCount()": 1865.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getPlot()": 1827.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getRangeAxis(org.jfree.chart.plot.CategoryPlot,int)": 1917.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getRowCount()": 1895.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getSeriesItemLabelGenerator(int)": 1915.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getSeriesToolTipGenerator(int)": 1891.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getSeriesURLGenerator(int)": 1915.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getToolTipGenerator(int,int,boolean)": 1891.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getURLGenerator(int,int,boolean)": 1891.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#hashCode()": 1877.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)": 1853.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 1917.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#removeAnnotations()": 1917.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseItemLabelGenerator(org.jfree.chart.labels.CategoryItemLabelGenerator)": 1907.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseItemLabelGenerator(org.jfree.chart.labels.CategoryItemLabelGenerator,boolean)": 1907.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator)": 1813.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator,boolean)": 1813.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator)": 1833.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator,boolean)": 1833.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setLegendItemLabelGenerator(org.jfree.chart.labels.CategorySeriesLabelGenerator)": 1913.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setLegendItemToolTipGenerator(org.jfree.chart.labels.CategorySeriesLabelGenerator)": 1913.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setLegendItemURLGenerator(org.jfree.chart.labels.CategorySeriesLabelGenerator)": 1913.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setPlot(org.jfree.chart.plot.CategoryPlot)": 1715.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesItemLabelGenerator(int,org.jfree.chart.labels.CategoryItemLabelGenerator)": 1909.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesItemLabelGenerator(int,org.jfree.chart.labels.CategoryItemLabelGenerator,boolean)": 1909.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesToolTipGenerator(int,org.jfree.chart.labels.CategoryToolTipGenerator)": 1895.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesToolTipGenerator(int,org.jfree.chart.labels.CategoryToolTipGenerator,boolean)": 1895.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesURLGenerator(int,org.jfree.chart.urls.CategoryURLGenerator)": 1893.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesURLGenerator(int,org.jfree.chart.urls.CategoryURLGenerator,boolean)": 1893.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#updateCrosshairValues(org.jfree.chart.plot.CategoryCrosshairState,java.lang.Comparable,java.lang.Comparable,double,int,double,double,org.jfree.chart.plot.PlotOrientation)": 1905.0,
        "org.jfree.chart.renderer.category$BarRenderer#<clinit>()": 2992669.0,
        "org.jfree.chart.renderer.category$BarRenderer#BarRenderer()": 1635.0,
        "org.jfree.chart.renderer.category$BarRenderer#calculateBarL0L1(double)": 1911.0,
        "org.jfree.chart.renderer.category$BarRenderer#calculateBarW0(org.jfree.chart.plot.CategoryPlot,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.renderer.category.CategoryItemRendererState,int,int)": 1909.0,
        "org.jfree.chart.renderer.category$BarRenderer#calculateBarWidth(org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,int,org.jfree.chart.renderer.category.CategoryItemRendererState)": 1895.0,
        "org.jfree.chart.renderer.category$BarRenderer#calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)": 1917.0,
        "org.jfree.chart.renderer.category$BarRenderer#calculateSeriesWidth(double,org.jfree.chart.axis.CategoryAxis,int,int)": 1909.0,
        "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)": 1913.0,
        "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)": 1917.0,
        "org.jfree.chart.renderer.category$BarRenderer#equals(java.lang.Object)": 1805.0,
        "org.jfree.chart.renderer.category$BarRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 1827.0,
        "org.jfree.chart.renderer.category$BarRenderer#getBarPainter()": 1909.0,
        "org.jfree.chart.renderer.category$BarRenderer#getBase()": 1905.0,
        "org.jfree.chart.renderer.category$BarRenderer#getDefaultBarPainter()": 1635.0,
        "org.jfree.chart.renderer.category$BarRenderer#getDefaultShadowsVisible()": 1635.0,
        "org.jfree.chart.renderer.category$BarRenderer#getGradientPaintTransformer()": 1903.0,
        "org.jfree.chart.renderer.category$BarRenderer#getIncludeBaseInRange()": 1917.0,
        "org.jfree.chart.renderer.category$BarRenderer#getItemMargin()": 1905.0,
        "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)": 1881.0,
        "org.jfree.chart.renderer.category$BarRenderer#getLowerClip()": 1899.0,
        "org.jfree.chart.renderer.category$BarRenderer#getMaximumBarWidth()": 1887.0,
        "org.jfree.chart.renderer.category$BarRenderer#getMinimumBarLength()": 1907.0,
        "org.jfree.chart.renderer.category$BarRenderer#getNegativeItemLabelPositionFallback()": 1917.0,
        "org.jfree.chart.renderer.category$BarRenderer#getPositiveItemLabelPositionFallback()": 1917.0,
        "org.jfree.chart.renderer.category$BarRenderer#getShadowPaint()": 1907.0,
        "org.jfree.chart.renderer.category$BarRenderer#getShadowXOffset()": 1907.0,
        "org.jfree.chart.renderer.category$BarRenderer#getShadowYOffset()": 1907.0,
        "org.jfree.chart.renderer.category$BarRenderer#getShadowsVisible()": 1907.0,
        "org.jfree.chart.renderer.category$BarRenderer#getUpperClip()": 1899.0,
        "org.jfree.chart.renderer.category$BarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)": 1887.0,
        "org.jfree.chart.renderer.category$BarRenderer#isDrawBarOutline()": 1879.0,
        "org.jfree.chart.renderer.category$BarRenderer#isInternalAnchor(org.jfree.chart.labels.ItemLabelAnchor)": 1917.0,
        "org.jfree.chart.renderer.category$BarRenderer#readObject(java.io.ObjectInputStream)": 1879.0,
        "org.jfree.chart.renderer.category$BarRenderer#setBarPainter(org.jfree.chart.renderer.category.BarPainter)": 1851.0,
        "org.jfree.chart.renderer.category$BarRenderer#setBase(double)": 1915.0,
        "org.jfree.chart.renderer.category$BarRenderer#setDefaultBarPainter(org.jfree.chart.renderer.category.BarPainter)": 1917.0,
        "org.jfree.chart.renderer.category$BarRenderer#setDefaultShadowsVisible(boolean)": 1917.0,
        "org.jfree.chart.renderer.category$BarRenderer#setDrawBarOutline(boolean)": 1915.0,
        "org.jfree.chart.renderer.category$BarRenderer#setGradientPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)": 1897.0,
        "org.jfree.chart.renderer.category$BarRenderer#setIncludeBaseInRange(boolean)": 1893.0,
        "org.jfree.chart.renderer.category$BarRenderer#setItemMargin(double)": 1915.0,
        "org.jfree.chart.renderer.category$BarRenderer#setMaximumBarWidth(double)": 1915.0,
        "org.jfree.chart.renderer.category$BarRenderer#setMinimumBarLength(double)": 1897.0,
        "org.jfree.chart.renderer.category$BarRenderer#setNegativeItemLabelPositionFallback(org.jfree.chart.labels.ItemLabelPosition)": 1881.0,
        "org.jfree.chart.renderer.category$BarRenderer#setPositiveItemLabelPositionFallback(org.jfree.chart.labels.ItemLabelPosition)": 1881.0,
        "org.jfree.chart.renderer.category$BarRenderer#setShadowPaint(java.awt.Paint)": 1853.0,
        "org.jfree.chart.renderer.category$BarRenderer#setShadowVisible(boolean)": 1853.0,
        "org.jfree.chart.renderer.category$BarRenderer#setShadowXOffset(double)": 1915.0,
        "org.jfree.chart.renderer.category$BarRenderer#setShadowYOffset(double)": 1915.0,
        "org.jfree.chart.renderer.category$BarRenderer#writeObject(java.io.ObjectOutputStream)": 1879.0,
        "org.jfree.chart.renderer.category$BarRenderer3D#<clinit>()": 3286821.0,
        "org.jfree.chart.renderer.category$BarRenderer3D#BarRenderer3D()": 1849.0,
        "org.jfree.chart.renderer.category$BarRenderer3D#BarRenderer3D(double,double)": 1847.0,
        "org.jfree.chart.renderer.category$BarRenderer3D#drawBackground(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)": 1913.0,
        "org.jfree.chart.renderer.category$BarRenderer3D#drawDomainGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,double)": 1917.0,
        "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)": 1915.0,
        "org.jfree.chart.renderer.category$BarRenderer3D#drawOutline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)": 1913.0,
        "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)": 1917.0,
        "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)": 1913.0,
        "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)": 1917.0,
        "org.jfree.chart.renderer.category$BarRenderer3D#equals(java.lang.Object)": 1901.0,
        "org.jfree.chart.renderer.category$BarRenderer3D#getWallPaint()": 1913.0,
        "org.jfree.chart.renderer.category$BarRenderer3D#getXOffset()": 1913.0,
        "org.jfree.chart.renderer.category$BarRenderer3D#getYOffset()": 1913.0,
        "org.jfree.chart.renderer.category$BarRenderer3D#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)": 1913.0,
        "org.jfree.chart.renderer.category$BarRenderer3D#readObject(java.io.ObjectInputStream)": 1913.0,
        "org.jfree.chart.renderer.category$BarRenderer3D#setWallPaint(java.awt.Paint)": 1897.0,
        "org.jfree.chart.renderer.category$BarRenderer3D#writeObject(java.io.ObjectOutputStream)": 1913.0,
        "org.jfree.chart.renderer.category$GradientBarPainter#GradientBarPainter()": 2992669.0,
        "org.jfree.chart.renderer.category$GradientBarPainter#GradientBarPainter(double,double,double)": 2978841.0,
        "org.jfree.chart.renderer.category$GradientBarPainter#createShadow(java.awt.geom.RectangularShape,double,double,org.jfree.chart.util.RectangleEdge,boolean)": 1907.0,
        "org.jfree.chart.renderer.category$GradientBarPainter#equals(java.lang.Object)": 1793.0,
        "org.jfree.chart.renderer.category$GradientBarPainter#hashCode()": 1915.0,
        "org.jfree.chart.renderer.category$GradientBarPainter#paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.category.BarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge)": 1905.0,
        "org.jfree.chart.renderer.category$GradientBarPainter#paintBarShadow(java.awt.Graphics2D,org.jfree.chart.renderer.category.BarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge,boolean)": 1907.0,
        "org.jfree.chart.renderer.category$GradientBarPainter#splitHorizontalBar(java.awt.geom.RectangularShape,double,double,double)": 1911.0,
        "org.jfree.chart.renderer.category$GradientBarPainter#splitVerticalBar(java.awt.geom.RectangularShape,double,double,double)": 1911.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#AbstractXYItemRenderer()": 2982295.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addAnnotation(org.jfree.chart.annotations.XYAnnotation)": 1917.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addAnnotation(org.jfree.chart.annotations.XYAnnotation,org.jfree.chart.util.Layer)": 1911.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)": 1917.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#calculateDomainMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)": 1917.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#calculateRangeMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)": 1917.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()": 1847.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)": 1881.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainGridLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)": 1917.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)": 1883.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)": 1915.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.xy.XYDataset,int,int,boolean,double,double,boolean)": 1917.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)": 1881.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)": 1915.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#equals(java.lang.Object)": 1681.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillDomainGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)": 1917.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillRangeGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)": 1917.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findDomainBounds(org.jfree.data.xy.XYDataset)": 3549379.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)": 3549379.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset)": 3579595.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)": 3572029.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getAnnotations()": 3530559.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getBaseItemLabelGenerator()": 1917.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getBaseToolTipGenerator()": 1917.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getBaseURLGenerator()": 1917.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getDrawingSupplier()": 1867.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getItemLabelGenerator(int,int,boolean)": 1917.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)": 1913.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItemLabelGenerator()": 1871.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItemToolTipGenerator()": 1867.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItemURLGenerator()": 1867.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItems()": 1917.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getPassCount()": 1905.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getPlot()": 3556921.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getSeriesItemLabelGenerator(int)": 1917.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getSeriesToolTipGenerator(int)": 1917.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getSeriesURLGenerator(int)": 1917.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getToolTipGenerator(int,int,boolean)": 1913.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getURLGenerator(int,int,boolean)": 1917.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)": 1913.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#removeAnnotation(org.jfree.chart.annotations.XYAnnotation)": 1917.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#removeAnnotations()": 1917.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseItemLabelGenerator(org.jfree.chart.labels.XYItemLabelGenerator)": 1915.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseItemLabelGenerator(org.jfree.chart.labels.XYItemLabelGenerator,boolean)": 1915.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator)": 3426091.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator,boolean)": 3426091.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.XYURLGenerator)": 3478129.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.XYURLGenerator,boolean)": 3478129.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setLegendItemLabelGenerator(org.jfree.chart.labels.XYSeriesLabelGenerator)": 1911.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setLegendItemToolTipGenerator(org.jfree.chart.labels.XYSeriesLabelGenerator)": 1911.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setLegendItemURLGenerator(org.jfree.chart.labels.XYSeriesLabelGenerator)": 1911.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setPlot(org.jfree.chart.plot.XYPlot)": 3504295.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesItemLabelGenerator(int,org.jfree.chart.labels.XYItemLabelGenerator)": 1913.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesItemLabelGenerator(int,org.jfree.chart.labels.XYItemLabelGenerator,boolean)": 1917.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesToolTipGenerator(int,org.jfree.chart.labels.XYToolTipGenerator)": 1909.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesToolTipGenerator(int,org.jfree.chart.labels.XYToolTipGenerator,boolean)": 1909.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesURLGenerator(int,org.jfree.chart.urls.XYURLGenerator)": 1915.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesURLGenerator(int,org.jfree.chart.urls.XYURLGenerator,boolean)": 1915.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#updateCrosshairValues(org.jfree.chart.plot.CrosshairState,double,double,int,int,double,double,org.jfree.chart.plot.PlotOrientation)": 1889.0,
        "org.jfree.chart.renderer.xy$GradientXYBarPainter#GradientXYBarPainter()": 3290449.0,
        "org.jfree.chart.renderer.xy$GradientXYBarPainter#GradientXYBarPainter(double,double,double)": 3275949.0,
        "org.jfree.chart.renderer.xy$GradientXYBarPainter#createShadow(java.awt.geom.RectangularShape,double,double,org.jfree.chart.util.RectangleEdge,boolean)": 1915.0,
        "org.jfree.chart.renderer.xy$GradientXYBarPainter#equals(java.lang.Object)": 1865.0,
        "org.jfree.chart.renderer.xy$GradientXYBarPainter#hashCode()": 1915.0,
        "org.jfree.chart.renderer.xy$GradientXYBarPainter#paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYBarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge)": 1915.0,
        "org.jfree.chart.renderer.xy$GradientXYBarPainter#paintBarShadow(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYBarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge,boolean)": 1915.0,
        "org.jfree.chart.renderer.xy$GradientXYBarPainter#splitHorizontalBar(java.awt.geom.RectangularShape,double,double,double)": 1917.0,
        "org.jfree.chart.renderer.xy$GradientXYBarPainter#splitVerticalBar(java.awt.geom.RectangularShape,double,double,double)": 1915.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#XYAreaRenderer()": 1903.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#XYAreaRenderer(int)": 1903.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#XYAreaRenderer(int,org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)": 1889.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#clone()": 1913.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)": 1915.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#equals(java.lang.Object)": 1901.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#getGradientTransformer()": 1917.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendArea()": 1917.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)": 1909.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#getPlotArea()": 1911.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#getPlotLines()": 1911.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#getPlotShapes()": 1911.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#getUseFillPaint()": 1917.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#hashCode()": 1913.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)": 1915.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#isOutline()": 1913.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#readObject(java.io.ObjectInputStream)": 1913.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#setGradientTransformer(org.jfree.chart.util.GradientPaintTransformer)": 1917.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#setLegendArea(java.awt.Shape)": 1913.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#setOutline(boolean)": 1915.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#setUseFillPaint(boolean)": 1917.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#writeObject(java.io.ObjectOutputStream)": 1913.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer$XYAreaRendererState#XYAreaRenderer$XYAreaRendererState(org.jfree.chart.plot.PlotRenderingInfo)": 1915.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#<clinit>()": 1853.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#XYBarRenderer()": 1881.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#XYBarRenderer(double)": 1853.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)": 1917.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#clone()": 1901.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)": 1915.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,boolean,org.jfree.chart.labels.XYItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)": 1917.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#equals(java.lang.Object)": 1877.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#findDomainBounds(org.jfree.data.xy.XYDataset)": 1899.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#findRangeBounds(org.jfree.data.xy.XYDataset)": 1905.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getBarAlignmentFactor()": 1917.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getBarPainter()": 1917.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getBase()": 1917.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getDefaultBarPainter()": 1853.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getDefaultShadowsVisible()": 1853.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getGradientPaintTransformer()": 1913.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendBar()": 1917.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)": 1913.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getMargin()": 1915.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getNegativeItemLabelPositionFallback()": 1917.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getPositiveItemLabelPositionFallback()": 1917.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getShadowXOffset()": 1915.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getShadowYOffset()": 1915.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getShadowsVisible()": 1915.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getUseYInterval()": 1915.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)": 1915.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#isDrawBarOutline()": 1913.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#isInternalAnchor(org.jfree.chart.labels.ItemLabelAnchor)": 1917.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#readObject(java.io.ObjectInputStream)": 1907.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setBarAlignmentFactor(double)": 1917.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setBarPainter(org.jfree.chart.renderer.xy.XYBarPainter)": 1907.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setBase(double)": 1915.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setDefaultBarPainter(org.jfree.chart.renderer.xy.XYBarPainter)": 1917.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setDefaultShadowsVisible(boolean)": 1917.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setDrawBarOutline(boolean)": 1915.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setGradientPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)": 1915.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setLegendBar(java.awt.Shape)": 1913.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setMargin(double)": 1915.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setNegativeItemLabelPositionFallback(org.jfree.chart.labels.ItemLabelPosition)": 1901.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setPositiveItemLabelPositionFallback(org.jfree.chart.labels.ItemLabelPosition)": 1899.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setShadowVisible(boolean)": 1907.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setShadowXOffset(double)": 1915.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setShadowYOffset(double)": 1915.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setUseYInterval(boolean)": 1913.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#writeObject(java.io.ObjectOutputStream)": 1907.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer$XYBarRendererState#XYBarRenderer$XYBarRendererState(org.jfree.chart.renderer.xy.XYBarRenderer,org.jfree.chart.plot.PlotRenderingInfo)": 1915.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer$XYBarRendererState#getG2Base()": 1917.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer$XYBarRendererState#setG2Base(double)": 1915.0,
        "org.jfree.chart.renderer.xy$XYItemRendererState#XYItemRendererState(org.jfree.chart.plot.PlotRenderingInfo)": 1889.0,
        "org.jfree.chart.renderer.xy$XYItemRendererState#endSeriesPass(org.jfree.data.xy.XYDataset,int,int,int,int,int)": 1889.0,
        "org.jfree.chart.renderer.xy$XYItemRendererState#getCrosshairState()": 1897.0,
        "org.jfree.chart.renderer.xy$XYItemRendererState#getFirstItemIndex()": 1917.0,
        "org.jfree.chart.renderer.xy$XYItemRendererState#getLastItemIndex()": 1917.0,
        "org.jfree.chart.renderer.xy$XYItemRendererState#getProcessVisibleItemsOnly()": 1889.0,
        "org.jfree.chart.renderer.xy$XYItemRendererState#getSelectionState()": 1889.0,
        "org.jfree.chart.renderer.xy$XYItemRendererState#setCrosshairState(org.jfree.chart.plot.XYCrosshairState)": 1917.0,
        "org.jfree.chart.renderer.xy$XYItemRendererState#setProcessVisibleItemsOnly(boolean)": 1909.0,
        "org.jfree.chart.renderer.xy$XYItemRendererState#setSelectionState(org.jfree.data.xy.XYDatasetSelectionState)": 1917.0,
        "org.jfree.chart.renderer.xy$XYItemRendererState#startSeriesPass(org.jfree.data.xy.XYDataset,int,int,int,int,int)": 1889.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#XYLineAndShapeRenderer()": 3632781.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#XYLineAndShapeRenderer(boolean,boolean)": 3515539.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#clone()": 1903.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)": 1909.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLine(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)": 1909.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)": 1917.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape1(java.awt.Graphics2D,int,int,int,boolean,java.awt.Shape)": 1913.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)": 1909.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#equals(java.lang.Object)": 1855.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getBaseLinesVisible()": 1917.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getBaseShapesFilled()": 1917.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getBaseShapesVisible()": 1917.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getDrawOutlines()": 1915.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getDrawSeriesLineAsPath()": 1917.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getItemLineVisible(int,int)": 1901.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getItemShapeFilled(int,int)": 1901.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getItemShapeVisible(int,int)": 1901.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)": 1901.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendLine()": 1917.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getPassCount()": 1905.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getSeriesLinesVisible(int)": 1901.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getSeriesShapesFilled(int)": 1901.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getSeriesShapesVisible(int)": 1901.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getUseFillPaint()": 1917.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getUseOutlinePaint()": 1913.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)": 1905.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#isItemPass(int)": 1909.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#isLinePass(int)": 1909.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#readObject(java.io.ObjectInputStream)": 1899.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setBaseLinesVisible(boolean)": 1915.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setBaseShapesFilled(boolean)": 1915.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setBaseShapesVisible(boolean)": 3728731.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setDrawOutlines(boolean)": 1915.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setDrawSeriesLineAsPath(boolean)": 1905.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setLegendLine(java.awt.Shape)": 1911.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesLinesVisible(int,boolean)": 1913.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesLinesVisible(int,java.lang.Boolean)": 1913.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesShapesFilled(int,boolean)": 1913.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesShapesFilled(int,java.lang.Boolean)": 1913.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesShapesVisible(int,boolean)": 1913.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesShapesVisible(int,java.lang.Boolean)": 1913.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setUseFillPaint(boolean)": 1915.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setUseOutlinePaint(boolean)": 1915.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#writeObject(java.io.ObjectOutputStream)": 1899.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer$State#XYLineAndShapeRenderer$State(org.jfree.chart.plot.PlotRenderingInfo)": 1905.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer$State#isLastPointGood()": 1917.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer$State#setLastPointGood(boolean)": 1917.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer$State#startSeriesPass(org.jfree.data.xy.XYDataset,int,int,int,int,int)": 1905.0,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#XYStepAreaRenderer()": 1905.0,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#XYStepAreaRenderer(int)": 1905.0,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#XYStepAreaRenderer(int,org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)": 3736461.0,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#clone()": 1915.0,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)": 1915.0,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#equals(java.lang.Object)": 1909.0,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#getPlotArea()": 1915.0,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#getRangeBase()": 1915.0,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#getShapesVisible()": 1915.0,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)": 1915.0,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#isOutline()": 1915.0,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#isShapesFilled()": 1917.0,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#restrictValueToDataArea(double,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D)": 1915.0,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#setOutline(boolean)": 1915.0,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#setPlotArea(boolean)": 1915.0,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#setRangeBase(double)": 1915.0,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#setShapesFilled(boolean)": 1915.0,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#setShapesVisible(boolean)": 1915.0,
        "org.jfree.chart.renderer.xy$XYStepRenderer#XYStepRenderer()": 1903.0,
        "org.jfree.chart.renderer.xy$XYStepRenderer#XYStepRenderer(org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)": 3732595.0,
        "org.jfree.chart.renderer.xy$XYStepRenderer#clone()": 1915.0,
        "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)": 1913.0,
        "org.jfree.chart.renderer.xy$XYStepRenderer#drawLine(java.awt.Graphics2D,java.awt.geom.Line2D,double,double,double,double)": 1913.0,
        "org.jfree.chart.renderer.xy$XYStepRenderer#equals(java.lang.Object)": 1909.0,
        "org.jfree.chart.renderer.xy$XYStepRenderer#getStepPoint()": 1913.0,
        "org.jfree.chart.renderer.xy$XYStepRenderer#hashCode()": 1915.0,
        "org.jfree.chart.renderer.xy$XYStepRenderer#setStepPoint(double)": 1911.0,
        "org.jfree.chart.resources$JFreeChartResources#<clinit>()": 3143341.0,
        "org.jfree.chart.resources$JFreeChartResources#JFreeChartResources()": 3143341.0,
        "org.jfree.chart.resources$JFreeChartResources#getContents()": 3143341.0,
        "org.jfree.chart.text$G2TextMeasurer#G2TextMeasurer(java.awt.Graphics2D)": 1815.0,
        "org.jfree.chart.text$G2TextMeasurer#getStringWidth(java.lang.String,int,int)": 1815.0,
        "org.jfree.chart.text$TextAnchor#<clinit>()": 1862629.0,
        "org.jfree.chart.text$TextAnchor#TextAnchor(java.lang.String)": 1862629.0,
        "org.jfree.chart.text$TextAnchor#equals(java.lang.Object)": 1497.0,
        "org.jfree.chart.text$TextAnchor#hashCode()": 1903.0,
        "org.jfree.chart.text$TextAnchor#readResolve()": 1747.0,
        "org.jfree.chart.text$TextAnchor#toString()": 1917.0,
        "org.jfree.chart.text$TextBlock#TextBlock()": 1771.0,
        "org.jfree.chart.text$TextBlock#addLine(java.lang.String,java.awt.Font,java.awt.Paint)": 1779.0,
        "org.jfree.chart.text$TextBlock#addLine(org.jfree.chart.text.TextLine)": 1775.0,
        "org.jfree.chart.text$TextBlock#calculateBounds(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)": 1849.0,
        "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)": 1791.0,
        "org.jfree.chart.text$TextBlock#calculateOffsets(org.jfree.chart.text.TextBlockAnchor,double,double)": 1791.0,
        "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor)": 1791.0,
        "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)": 1791.0,
        "org.jfree.chart.text$TextBlock#equals(java.lang.Object)": 1909.0,
        "org.jfree.chart.text$TextBlock#getLastLine()": 1909.0,
        "org.jfree.chart.text$TextBlock#getLineAlignment()": 1917.0,
        "org.jfree.chart.text$TextBlock#getLines()": 1917.0,
        "org.jfree.chart.text$TextBlock#hashCode()": 1915.0,
        "org.jfree.chart.text$TextBlock#setLineAlignment(org.jfree.chart.util.HorizontalAlignment)": 1863.0,
        "org.jfree.chart.text$TextBlockAnchor#<clinit>()": 1601.0,
        "org.jfree.chart.text$TextBlockAnchor#TextBlockAnchor(java.lang.String)": 1601.0,
        "org.jfree.chart.text$TextBlockAnchor#equals(java.lang.Object)": 1869.0,
        "org.jfree.chart.text$TextBlockAnchor#hashCode()": 1911.0,
        "org.jfree.chart.text$TextBlockAnchor#readResolve()": 1885.0,
        "org.jfree.chart.text$TextBlockAnchor#toString()": 1917.0,
        "org.jfree.chart.text$TextFragment#<clinit>()": 1775.0,
        "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String)": 1917.0,
        "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font)": 1913.0,
        "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font,java.awt.Paint)": 1775.0,
        "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font,java.awt.Paint,float)": 1775.0,
        "org.jfree.chart.text$TextFragment#calculateBaselineOffset(java.awt.Graphics2D,org.jfree.chart.text.TextAnchor)": 1791.0,
        "org.jfree.chart.text$TextFragment#calculateDimensions(java.awt.Graphics2D)": 1791.0,
        "org.jfree.chart.text$TextFragment#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)": 1791.0,
        "org.jfree.chart.text$TextFragment#equals(java.lang.Object)": 1905.0,
        "org.jfree.chart.text$TextFragment#getBaselineOffset()": 1917.0,
        "org.jfree.chart.text$TextFragment#getFont()": 1909.0,
        "org.jfree.chart.text$TextFragment#getPaint()": 1909.0,
        "org.jfree.chart.text$TextFragment#getText()": 1909.0,
        "org.jfree.chart.text$TextFragment#hashCode()": 1915.0,
        "org.jfree.chart.text$TextFragment#readObject(java.io.ObjectInputStream)": 1913.0,
        "org.jfree.chart.text$TextFragment#writeObject(java.io.ObjectOutputStream)": 1913.0,
        "org.jfree.chart.text$TextLine#TextLine()": 1917.0,
        "org.jfree.chart.text$TextLine#TextLine(java.lang.String)": 1913.0,
        "org.jfree.chart.text$TextLine#TextLine(java.lang.String,java.awt.Font)": 1913.0,
        "org.jfree.chart.text$TextLine#TextLine(java.lang.String,java.awt.Font,java.awt.Paint)": 1779.0,
        "org.jfree.chart.text$TextLine#addFragment(org.jfree.chart.text.TextFragment)": 1909.0,
        "org.jfree.chart.text$TextLine#calculateBaselineOffset(java.awt.Graphics2D,org.jfree.chart.text.TextAnchor)": 1791.0,
        "org.jfree.chart.text$TextLine#calculateDimensions(java.awt.Graphics2D)": 1791.0,
        "org.jfree.chart.text$TextLine#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)": 1791.0,
        "org.jfree.chart.text$TextLine#equals(java.lang.Object)": 1913.0,
        "org.jfree.chart.text$TextLine#getFirstTextFragment()": 1917.0,
        "org.jfree.chart.text$TextLine#getLastTextFragment()": 1909.0,
        "org.jfree.chart.text$TextLine#hashCode()": 1915.0,
        "org.jfree.chart.text$TextLine#removeFragment(org.jfree.chart.text.TextFragment)": 1909.0,
        "org.jfree.chart.text$TextUtilities#<clinit>()": 1783.0,
        "org.jfree.chart.text$TextUtilities#TextUtilities()": 1917.0,
        "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)": 1915.0,
        "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)": 1915.0,
        "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint)": 1809.0,
        "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)": 1815.0,
        "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,org.jfree.chart.text.TextMeasurer)": 1913.0,
        "org.jfree.chart.text$TextUtilities#deriveRotationAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)": 1799.0,
        "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)": 1789.0,
        "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor,java.awt.geom.Rectangle2D)": 1915.0,
        "org.jfree.chart.text$TextUtilities#drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor)": 1915.0,
        "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,double,float,float)": 1917.0,
        "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)": 1789.0,
        "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,float,float)": 1791.0,
        "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)": 1799.0,
        "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)": 1789.0,
        "org.jfree.chart.text$TextUtilities#getUseFontMetricsGetStringBounds()": 1917.0,
        "org.jfree.chart.text$TextUtilities#isUseDrawRotatedStringWorkaround()": 1917.0,
        "org.jfree.chart.text$TextUtilities#nextLineBreak(java.lang.String,int,float,java.text.BreakIterator,org.jfree.chart.text.TextMeasurer)": 1815.0,
        "org.jfree.chart.text$TextUtilities#setUseDrawRotatedStringWorkaround(boolean)": 1917.0,
        "org.jfree.chart.text$TextUtilities#setUseFontMetricsGetStringBounds(boolean)": 1917.0,
        "org.jfree.chart.title$LegendGraphic#LegendGraphic(java.awt.Shape,java.awt.Paint)": 1805.0,
        "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1815.0,
        "org.jfree.chart.title$LegendGraphic#arrangeNN(java.awt.Graphics2D)": 1815.0,
        "org.jfree.chart.title$LegendGraphic#clone()": 1913.0,
        "org.jfree.chart.title$LegendGraphic#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1815.0,
        "org.jfree.chart.title$LegendGraphic#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 1815.0,
        "org.jfree.chart.title$LegendGraphic#equals(java.lang.Object)": 1907.0,
        "org.jfree.chart.title$LegendGraphic#getFillPaint()": 1917.0,
        "org.jfree.chart.title$LegendGraphic#getFillPaintTransformer()": 1917.0,
        "org.jfree.chart.title$LegendGraphic#getLine()": 1891.0,
        "org.jfree.chart.title$LegendGraphic#getLinePaint()": 1917.0,
        "org.jfree.chart.title$LegendGraphic#getLineStroke()": 1917.0,
        "org.jfree.chart.title$LegendGraphic#getOutlinePaint()": 1917.0,
        "org.jfree.chart.title$LegendGraphic#getOutlineStroke()": 1917.0,
        "org.jfree.chart.title$LegendGraphic#getShape()": 1917.0,
        "org.jfree.chart.title$LegendGraphic#getShapeAnchor()": 1917.0,
        "org.jfree.chart.title$LegendGraphic#getShapeLocation()": 1917.0,
        "org.jfree.chart.title$LegendGraphic#hashCode()": 1915.0,
        "org.jfree.chart.title$LegendGraphic#isLineVisible()": 1915.0,
        "org.jfree.chart.title$LegendGraphic#isShapeFilled()": 1915.0,
        "org.jfree.chart.title$LegendGraphic#isShapeOutlineVisible()": 1915.0,
        "org.jfree.chart.title$LegendGraphic#isShapeVisible()": 1915.0,
        "org.jfree.chart.title$LegendGraphic#readObject(java.io.ObjectInputStream)": 1915.0,
        "org.jfree.chart.title$LegendGraphic#setFillPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart.title$LegendGraphic#setFillPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)": 1813.0,
        "org.jfree.chart.title$LegendGraphic#setLine(java.awt.Shape)": 1811.0,
        "org.jfree.chart.title$LegendGraphic#setLinePaint(java.awt.Paint)": 1813.0,
        "org.jfree.chart.title$LegendGraphic#setLineStroke(java.awt.Stroke)": 1813.0,
        "org.jfree.chart.title$LegendGraphic#setLineVisible(boolean)": 1813.0,
        "org.jfree.chart.title$LegendGraphic#setOutlinePaint(java.awt.Paint)": 1813.0,
        "org.jfree.chart.title$LegendGraphic#setOutlineStroke(java.awt.Stroke)": 1811.0,
        "org.jfree.chart.title$LegendGraphic#setShape(java.awt.Shape)": 1915.0,
        "org.jfree.chart.title$LegendGraphic#setShapeAnchor(org.jfree.chart.util.RectangleAnchor)": 1813.0,
        "org.jfree.chart.title$LegendGraphic#setShapeFilled(boolean)": 1813.0,
        "org.jfree.chart.title$LegendGraphic#setShapeLocation(org.jfree.chart.util.RectangleAnchor)": 1813.0,
        "org.jfree.chart.title$LegendGraphic#setShapeOutlineVisible(boolean)": 1813.0,
        "org.jfree.chart.title$LegendGraphic#setShapeVisible(boolean)": 1813.0,
        "org.jfree.chart.title$LegendGraphic#writeObject(java.io.ObjectOutputStream)": 1915.0,
        "org.jfree.chart.title$LegendItemBlockContainer#LegendItemBlockContainer(org.jfree.chart.block.Arrangement,org.jfree.data.general.Dataset,java.lang.Comparable)": 1815.0,
        "org.jfree.chart.title$LegendItemBlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 1815.0,
        "org.jfree.chart.title$LegendItemBlockContainer#getDataset()": 1917.0,
        "org.jfree.chart.title$LegendItemBlockContainer#getSeriesKey()": 1917.0,
        "org.jfree.chart.title$LegendItemBlockContainer#getToolTipText()": 1897.0,
        "org.jfree.chart.title$LegendItemBlockContainer#getURLText()": 1897.0,
        "org.jfree.chart.title$LegendItemBlockContainer#setToolTipText(java.lang.String)": 1815.0,
        "org.jfree.chart.title$LegendItemBlockContainer#setURLText(java.lang.String)": 1815.0,
        "org.jfree.chart.title$LegendTitle#<clinit>()": 3250651.0,
        "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource)": 3250651.0,
        "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)": 3250651.0,
        "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1791.0,
        "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)": 1815.0,
        "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1917.0,
        "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 1791.0,
        "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)": 1885.0,
        "org.jfree.chart.title$LegendTitle#fetchLegendItems()": 1791.0,
        "org.jfree.chart.title$LegendTitle#getBackgroundPaint()": 3485595.0,
        "org.jfree.chart.title$LegendTitle#getItemContainer()": 1917.0,
        "org.jfree.chart.title$LegendTitle#getItemFont()": 1917.0,
        "org.jfree.chart.title$LegendTitle#getItemLabelPadding()": 1917.0,
        "org.jfree.chart.title$LegendTitle#getItemPaint()": 1917.0,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicAnchor()": 1815.0,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicEdge()": 1917.0,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicLocation()": 1815.0,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicPadding()": 1917.0,
        "org.jfree.chart.title$LegendTitle#getSources()": 1913.0,
        "org.jfree.chart.title$LegendTitle#getWrapper()": 3485595.0,
        "org.jfree.chart.title$LegendTitle#readObject(java.io.ObjectInputStream)": 1901.0,
        "org.jfree.chart.title$LegendTitle#setBackgroundPaint(java.awt.Paint)": 3257869.0,
        "org.jfree.chart.title$LegendTitle#setItemFont(java.awt.Font)": 3481861.0,
        "org.jfree.chart.title$LegendTitle#setItemLabelPadding(org.jfree.chart.util.RectangleInsets)": 1917.0,
        "org.jfree.chart.title$LegendTitle#setItemPaint(java.awt.Paint)": 3485595.0,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicAnchor(org.jfree.chart.util.RectangleAnchor)": 1915.0,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicEdge(org.jfree.chart.util.RectangleEdge)": 1915.0,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicLocation(org.jfree.chart.util.RectangleAnchor)": 1915.0,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicPadding(org.jfree.chart.util.RectangleInsets)": 1917.0,
        "org.jfree.chart.title$LegendTitle#setSources(org.jfree.chart.LegendItemSource[])": 1917.0,
        "org.jfree.chart.title$LegendTitle#setWrapper(org.jfree.chart.block.BlockContainer)": 1917.0,
        "org.jfree.chart.title$LegendTitle#writeObject(java.io.ObjectOutputStream)": 1901.0,
        "org.jfree.chart.title$PaintScaleLegend#PaintScaleLegend(org.jfree.chart.renderer.PaintScale,org.jfree.chart.axis.ValueAxis)": 1909.0,
        "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1917.0,
        "org.jfree.chart.title$PaintScaleLegend#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)": 1917.0,
        "org.jfree.chart.title$PaintScaleLegend#axisChanged(org.jfree.chart.event.AxisChangeEvent)": 1909.0,
        "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1917.0,
        "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 1917.0,
        "org.jfree.chart.title$PaintScaleLegend#equals(java.lang.Object)": 1909.0,
        "org.jfree.chart.title$PaintScaleLegend#getAxis()": 1917.0,
        "org.jfree.chart.title$PaintScaleLegend#getAxisLocation()": 1917.0,
        "org.jfree.chart.title$PaintScaleLegend#getAxisOffset()": 1917.0,
        "org.jfree.chart.title$PaintScaleLegend#getBackgroundPaint()": 1917.0,
        "org.jfree.chart.title$PaintScaleLegend#getScale()": 1917.0,
        "org.jfree.chart.title$PaintScaleLegend#getStripOutlinePaint()": 1917.0,
        "org.jfree.chart.title$PaintScaleLegend#getStripOutlineStroke()": 1917.0,
        "org.jfree.chart.title$PaintScaleLegend#getStripWidth()": 1917.0,
        "org.jfree.chart.title$PaintScaleLegend#getSubdivisionCount()": 1917.0,
        "org.jfree.chart.title$PaintScaleLegend#isStripOutlineVisible()": 1915.0,
        "org.jfree.chart.title$PaintScaleLegend#readObject(java.io.ObjectInputStream)": 1915.0,
        "org.jfree.chart.title$PaintScaleLegend#setAxis(org.jfree.chart.axis.ValueAxis)": 1915.0,
        "org.jfree.chart.title$PaintScaleLegend#setAxisLocation(org.jfree.chart.axis.AxisLocation)": 1915.0,
        "org.jfree.chart.title$PaintScaleLegend#setAxisOffset(double)": 1915.0,
        "org.jfree.chart.title$PaintScaleLegend#setBackgroundPaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart.title$PaintScaleLegend#setScale(org.jfree.chart.renderer.PaintScale)": 1915.0,
        "org.jfree.chart.title$PaintScaleLegend#setStripOutlinePaint(java.awt.Paint)": 1915.0,
        "org.jfree.chart.title$PaintScaleLegend#setStripOutlineStroke(java.awt.Stroke)": 1915.0,
        "org.jfree.chart.title$PaintScaleLegend#setStripOutlineVisible(boolean)": 1915.0,
        "org.jfree.chart.title$PaintScaleLegend#setStripWidth(double)": 1915.0,
        "org.jfree.chart.title$PaintScaleLegend#setSubdivisionCount(int)": 1915.0,
        "org.jfree.chart.title$PaintScaleLegend#writeObject(java.io.ObjectOutputStream)": 1915.0,
        "org.jfree.chart.title$TextTitle#<clinit>()": 3297711.0,
        "org.jfree.chart.title$TextTitle#TextTitle()": 1899.0,
        "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String)": 1871.0,
        "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)": 3381799.0,
        "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font,java.awt.Paint,org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)": 3297711.0,
        "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 1863.0,
        "org.jfree.chart.title$TextTitle#arrangeFN(java.awt.Graphics2D,double)": 1917.0,
        "org.jfree.chart.title$TextTitle#arrangeNN(java.awt.Graphics2D)": 1917.0,
        "org.jfree.chart.title$TextTitle#arrangeRN(java.awt.Graphics2D,org.jfree.data.Range)": 1917.0,
        "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)": 1863.0,
        "org.jfree.chart.title$TextTitle#clone()": 1909.0,
        "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1917.0,
        "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 1863.0,
        "org.jfree.chart.title$TextTitle#drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1863.0,
        "org.jfree.chart.title$TextTitle#drawVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 1917.0,
        "org.jfree.chart.title$TextTitle#equals(java.lang.Object)": 1855.0,
        "org.jfree.chart.title$TextTitle#getBackgroundPaint()": 1917.0,
        "org.jfree.chart.title$TextTitle#getExpandToFitSpace()": 1915.0,
        "org.jfree.chart.title$TextTitle#getFont()": 1917.0,
        "org.jfree.chart.title$TextTitle#getMaximumLinesToDisplay()": 1917.0,
        "org.jfree.chart.title$TextTitle#getPaint()": 1917.0,
        "org.jfree.chart.title$TextTitle#getText()": 1917.0,
        "org.jfree.chart.title$TextTitle#getTextAlignment()": 1917.0,
        "org.jfree.chart.title$TextTitle#getToolTipText()": 1917.0,
        "org.jfree.chart.title$TextTitle#getURLText()": 1917.0,
        "org.jfree.chart.title$TextTitle#hashCode()": 1907.0,
        "org.jfree.chart.title$TextTitle#readObject(java.io.ObjectInputStream)": 1891.0,
        "org.jfree.chart.title$TextTitle#setBackgroundPaint(java.awt.Paint)": 1913.0,
        "org.jfree.chart.title$TextTitle#setExpandToFitSpace(boolean)": 1915.0,
        "org.jfree.chart.title$TextTitle#setFont(java.awt.Font)": 3389161.0,
        "org.jfree.chart.title$TextTitle#setMaximumLinesToDisplay(int)": 1915.0,
        "org.jfree.chart.title$TextTitle#setPaint(java.awt.Paint)": 3389161.0,
        "org.jfree.chart.title$TextTitle#setText(java.lang.String)": 1903.0,
        "org.jfree.chart.title$TextTitle#setTextAlignment(org.jfree.chart.util.HorizontalAlignment)": 1915.0,
        "org.jfree.chart.title$TextTitle#setToolTipText(java.lang.String)": 1915.0,
        "org.jfree.chart.title$TextTitle#setURLText(java.lang.String)": 1915.0,
        "org.jfree.chart.title$TextTitle#writeObject(java.io.ObjectOutputStream)": 1891.0,
        "org.jfree.chart.title$Title#<clinit>()": 3051795.0,
        "org.jfree.chart.title$Title#Title()": 3218269.0,
        "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)": 1917.0,
        "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)": 3051795.0,
        "org.jfree.chart.title$Title#addChangeListener(org.jfree.chart.event.TitleChangeListener)": 3178911.0,
        "org.jfree.chart.title$Title#clone()": 1901.0,
        "org.jfree.chart.title$Title#equals(java.lang.Object)": 1835.0,
        "org.jfree.chart.title$Title#getHorizontalAlignment()": 1789.0,
        "org.jfree.chart.title$Title#getNotify()": 1917.0,
        "org.jfree.chart.title$Title#getPosition()": 1789.0,
        "org.jfree.chart.title$Title#getVerticalAlignment()": 1917.0,
        "org.jfree.chart.title$Title#hashCode()": 1899.0,
        "org.jfree.chart.title$Title#isVisible()": 1789.0,
        "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)": 3122095.0,
        "org.jfree.chart.title$Title#readObject(java.io.ObjectInputStream)": 1887.0,
        "org.jfree.chart.title$Title#removeChangeListener(org.jfree.chart.event.TitleChangeListener)": 1915.0,
        "org.jfree.chart.title$Title#setHorizontalAlignment(org.jfree.chart.util.HorizontalAlignment)": 1915.0,
        "org.jfree.chart.title$Title#setNotify(boolean)": 1917.0,
        "org.jfree.chart.title$Title#setPosition(org.jfree.chart.util.RectangleEdge)": 3261481.0,
        "org.jfree.chart.title$Title#setVerticalAlignment(org.jfree.chart.util.VerticalAlignment)": 1915.0,
        "org.jfree.chart.title$Title#setVisible(boolean)": 1915.0,
        "org.jfree.chart.title$Title#writeObject(java.io.ObjectOutputStream)": 1887.0,
        "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo()": 3143341.0,
        "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 1917.0,
        "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 1917.0,
        "org.jfree.chart.ui$BasicProjectInfo#addLibrary(org.jfree.chart.ui.Library)": 1917.0,
        "org.jfree.chart.ui$BasicProjectInfo#addOptionalLibrary(java.lang.String)": 1917.0,
        "org.jfree.chart.ui$BasicProjectInfo#addOptionalLibrary(org.jfree.chart.ui.Library)": 1917.0,
        "org.jfree.chart.ui$BasicProjectInfo#getCopyright()": 1917.0,
        "org.jfree.chart.ui$BasicProjectInfo#getLibraries()": 1917.0,
        "org.jfree.chart.ui$BasicProjectInfo#getOptionalLibraries()": 1917.0,
        "org.jfree.chart.ui$BasicProjectInfo#setCopyright(java.lang.String)": 3143341.0,
        "org.jfree.chart.ui$BasicProjectInfo#setInfo(java.lang.String)": 3143341.0,
        "org.jfree.chart.ui$BasicProjectInfo#setLicenceName(java.lang.String)": 3143341.0,
        "org.jfree.chart.ui$BasicProjectInfo#setName(java.lang.String)": 3143341.0,
        "org.jfree.chart.ui$BasicProjectInfo#setVersion(java.lang.String)": 3143341.0,
        "org.jfree.chart.ui$Contributor#Contributor(java.lang.String,java.lang.String)": 3143341.0,
        "org.jfree.chart.ui$Contributor#getEmail()": 1917.0,
        "org.jfree.chart.ui$Contributor#getName()": 1917.0,
        "org.jfree.chart.ui$Library#Library()": 3143341.0,
        "org.jfree.chart.ui$Library#Library(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 1917.0,
        "org.jfree.chart.ui$Library#equals(java.lang.Object)": 1917.0,
        "org.jfree.chart.ui$Library#getInfo()": 1917.0,
        "org.jfree.chart.ui$Library#getLicenceName()": 1917.0,
        "org.jfree.chart.ui$Library#getName()": 1917.0,
        "org.jfree.chart.ui$Library#getVersion()": 1917.0,
        "org.jfree.chart.ui$Library#hashCode()": 1917.0,
        "org.jfree.chart.ui$Library#setInfo(java.lang.String)": 3143341.0,
        "org.jfree.chart.ui$Library#setLicenceName(java.lang.String)": 3143341.0,
        "org.jfree.chart.ui$Library#setName(java.lang.String)": 3143341.0,
        "org.jfree.chart.ui$Library#setVersion(java.lang.String)": 3143341.0,
        "org.jfree.chart.ui$Licences#Licences()": 3143341.0,
        "org.jfree.chart.ui$Licences#getGPL()": 1917.0,
        "org.jfree.chart.ui$Licences#getInstance()": 3143341.0,
        "org.jfree.chart.ui$Licences#getLGPL()": 3143341.0,
        "org.jfree.chart.ui$ProjectInfo#ProjectInfo()": 3143341.0,
        "org.jfree.chart.ui$ProjectInfo#ProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.awt.Image,java.lang.String,java.lang.String,java.lang.String)": 1917.0,
        "org.jfree.chart.ui$ProjectInfo#getContributors()": 1917.0,
        "org.jfree.chart.ui$ProjectInfo#getLicenceText()": 1917.0,
        "org.jfree.chart.ui$ProjectInfo#getLogo()": 1895.0,
        "org.jfree.chart.ui$ProjectInfo#setContributors(java.util.List)": 3143341.0,
        "org.jfree.chart.ui$ProjectInfo#setLicenceText(java.lang.String)": 3143341.0,
        "org.jfree.chart.ui$ProjectInfo#setLogo(java.awt.Image)": 3143341.0,
        "org.jfree.chart.ui$ProjectInfo#toString()": 1917.0,
        "org.jfree.chart.urls$StandardXYURLGenerator#StandardXYURLGenerator()": 3732595.0,
        "org.jfree.chart.urls$StandardXYURLGenerator#StandardXYURLGenerator(java.lang.String)": 1913.0,
        "org.jfree.chart.urls$StandardXYURLGenerator#StandardXYURLGenerator(java.lang.String,java.lang.String,java.lang.String)": 3724869.0,
        "org.jfree.chart.urls$StandardXYURLGenerator#equals(java.lang.Object)": 1913.0,
        "org.jfree.chart.urls$StandardXYURLGenerator#generateURL(org.jfree.data.xy.XYDataset,int,int)": 1917.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList()": 1895545.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int)": 1895545.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int,int)": 1895545.0,
        "org.jfree.chart.util$AbstractObjectList#clear()": 3455779.0,
        "org.jfree.chart.util$AbstractObjectList#clone()": 1761.0,
        "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)": 1383.0,
        "org.jfree.chart.util$AbstractObjectList#get(int)": 2865981.0,
        "org.jfree.chart.util$AbstractObjectList#hashCode()": 1821.0,
        "org.jfree.chart.util$AbstractObjectList#indexOf(java.lang.Object)": 3129169.0,
        "org.jfree.chart.util$AbstractObjectList#readObject(java.io.ObjectInputStream)": 1757.0,
        "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)": 2869369.0,
        "org.jfree.chart.util$AbstractObjectList#size()": 2246539.0,
        "org.jfree.chart.util$AbstractObjectList#writeObject(java.io.ObjectOutputStream)": 1757.0,
        "org.jfree.chart.util$BooleanList#BooleanList()": 2175139.0,
        "org.jfree.chart.util$BooleanList#equals(java.lang.Object)": 1461.0,
        "org.jfree.chart.util$BooleanList#getBoolean(int)": 1691.0,
        "org.jfree.chart.util$BooleanList#hashCode()": 1823.0,
        "org.jfree.chart.util$BooleanList#setBoolean(int,java.lang.Boolean)": 1875.0,
        "org.jfree.chart.util$GradientPaintTransformType#<clinit>()": 1405.0,
        "org.jfree.chart.util$GradientPaintTransformType#GradientPaintTransformType(java.lang.String)": 1405.0,
        "org.jfree.chart.util$GradientPaintTransformType#equals(java.lang.Object)": 1853.0,
        "org.jfree.chart.util$GradientPaintTransformType#hashCode()": 1915.0,
        "org.jfree.chart.util$GradientPaintTransformType#readResolve()": 1855.0,
        "org.jfree.chart.util$GradientPaintTransformType#toString()": 1917.0,
        "org.jfree.chart.util$HorizontalAlignment#<clinit>()": 2989209.0,
        "org.jfree.chart.util$HorizontalAlignment#HorizontalAlignment(java.lang.String)": 2989209.0,
        "org.jfree.chart.util$HorizontalAlignment#equals(java.lang.Object)": 1877.0,
        "org.jfree.chart.util$HorizontalAlignment#hashCode()": 1899.0,
        "org.jfree.chart.util$HorizontalAlignment#readResolve()": 1877.0,
        "org.jfree.chart.util$HorizontalAlignment#toString()": 1917.0,
        "org.jfree.chart.util$Layer#<clinit>()": 1767.0,
        "org.jfree.chart.util$Layer#Layer(java.lang.String)": 1767.0,
        "org.jfree.chart.util$Layer#equals(java.lang.Object)": 1797.0,
        "org.jfree.chart.util$Layer#hashCode()": 1917.0,
        "org.jfree.chart.util$Layer#readResolve()": 1917.0,
        "org.jfree.chart.util$Layer#toString()": 1917.0,
        "org.jfree.chart.util$LengthAdjustmentType#<clinit>()": 1825.0,
        "org.jfree.chart.util$LengthAdjustmentType#LengthAdjustmentType(java.lang.String)": 1825.0,
        "org.jfree.chart.util$LengthAdjustmentType#equals(java.lang.Object)": 1885.0,
        "org.jfree.chart.util$LengthAdjustmentType#hashCode()": 1917.0,
        "org.jfree.chart.util$LengthAdjustmentType#readResolve()": 1905.0,
        "org.jfree.chart.util$LengthAdjustmentType#toString()": 1917.0,
        "org.jfree.chart.util$LineUtilities#LineUtilities()": 1917.0,
        "org.jfree.chart.util$LineUtilities#clipLine(java.awt.geom.Line2D,java.awt.geom.Rectangle2D)": 1907.0,
        "org.jfree.chart.util$LogFormat#LogFormat()": 1899.0,
        "org.jfree.chart.util$LogFormat#LogFormat(double,java.lang.String,boolean)": 1891.0,
        "org.jfree.chart.util$LogFormat#LogFormat(double,java.lang.String,java.lang.String,boolean)": 1891.0,
        "org.jfree.chart.util$LogFormat#calculateLog(double)": 1917.0,
        "org.jfree.chart.util$LogFormat#clone()": 1915.0,
        "org.jfree.chart.util$LogFormat#equals(java.lang.Object)": 1903.0,
        "org.jfree.chart.util$LogFormat#format(double,java.lang.StringBuffer,java.text.FieldPosition)": 1917.0,
        "org.jfree.chart.util$LogFormat#format(long,java.lang.StringBuffer,java.text.FieldPosition)": 1917.0,
        "org.jfree.chart.util$LogFormat#getExponentFormat()": 1917.0,
        "org.jfree.chart.util$LogFormat#parse(java.lang.String,java.text.ParsePosition)": 1917.0,
        "org.jfree.chart.util$LogFormat#setExponentFormat(java.text.NumberFormat)": 1915.0,
        "org.jfree.chart.util$ObjectList#ObjectList()": 1953841.0,
        "org.jfree.chart.util$ObjectList#ObjectList(int)": 1917.0,
        "org.jfree.chart.util$ObjectList#get(int)": 2989209.0,
        "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)": 3129169.0,
        "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)": 2985751.0,
        "org.jfree.chart.util$ObjectUtilities#<clinit>()": 295.0,
        "org.jfree.chart.util$ObjectUtilities#ObjectUtilities()": 1917.0,
        "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)": 1657.0,
        "org.jfree.chart.util$ObjectUtilities#convertName(java.lang.String,java.lang.Class)": 1917.0,
        "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)": 1775.0,
        "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)": 435.0,
        "org.jfree.chart.util$ObjectUtilities#getClassLoader()": 1917.0,
        "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)": 1783.0,
        "org.jfree.chart.util$ObjectUtilities#getClassLoaderSource()": 1917.0,
        "org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)": 1917.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceAsStream(java.lang.String,java.lang.Class)": 1917.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)": 1917.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)": 1917.0,
        "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)": 1895.0,
        "org.jfree.chart.util$ObjectUtilities#isJDK14()": 1783.0,
        "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class)": 1917.0,
        "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class,java.lang.Class)": 1917.0,
        "org.jfree.chart.util$ObjectUtilities#parseVersions(java.lang.String)": 1917.0,
        "org.jfree.chart.util$ObjectUtilities#setClassLoader(java.lang.ClassLoader)": 1917.0,
        "org.jfree.chart.util$ObjectUtilities#setClassLoaderSource(java.lang.String)": 1917.0,
        "org.jfree.chart.util$PaintList#PaintList()": 2157469.0,
        "org.jfree.chart.util$PaintList#equals(java.lang.Object)": 1451.0,
        "org.jfree.chart.util$PaintList#getPaint(int)": 1749.0,
        "org.jfree.chart.util$PaintList#hashCode()": 1823.0,
        "org.jfree.chart.util$PaintList#readObject(java.io.ObjectInputStream)": 1781.0,
        "org.jfree.chart.util$PaintList#setPaint(int,java.awt.Paint)": 1743.0,
        "org.jfree.chart.util$PaintList#writeObject(java.io.ObjectOutputStream)": 1781.0,
        "org.jfree.chart.util$PaintMap#PaintMap()": 3590959.0,
        "org.jfree.chart.util$PaintMap#clear()": 3694045.0,
        "org.jfree.chart.util$PaintMap#clone()": 1915.0,
        "org.jfree.chart.util$PaintMap#containsKey(java.lang.Comparable)": 1917.0,
        "org.jfree.chart.util$PaintMap#equals(java.lang.Object)": 1885.0,
        "org.jfree.chart.util$PaintMap#getPaint(java.lang.Comparable)": 1895.0,
        "org.jfree.chart.util$PaintMap#put(java.lang.Comparable,java.awt.Paint)": 1897.0,
        "org.jfree.chart.util$PaintMap#readObject(java.io.ObjectInputStream)": 1901.0,
        "org.jfree.chart.util$PaintMap#writeObject(java.io.ObjectOutputStream)": 1901.0,
        "org.jfree.chart.util$PaintUtilities#PaintUtilities()": 1917.0,
        "org.jfree.chart.util$PaintUtilities#colorToString(java.awt.Color)": 1917.0,
        "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)": 873.0,
        "org.jfree.chart.util$PaintUtilities#stringToColor(java.lang.String)": 1917.0,
        "org.jfree.chart.util$RectangleAnchor#<clinit>()": 2842321.0,
        "org.jfree.chart.util$RectangleAnchor#RectangleAnchor(java.lang.String)": 2842321.0,
        "org.jfree.chart.util$RectangleAnchor#coordinates(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleAnchor)": 1815.0,
        "org.jfree.chart.util$RectangleAnchor#createRectangle(org.jfree.chart.util.Size2D,double,double,org.jfree.chart.util.RectangleAnchor)": 1913.0,
        "org.jfree.chart.util$RectangleAnchor#equals(java.lang.Object)": 1815.0,
        "org.jfree.chart.util$RectangleAnchor#hashCode()": 1911.0,
        "org.jfree.chart.util$RectangleAnchor#readResolve()": 1861.0,
        "org.jfree.chart.util$RectangleAnchor#toString()": 1917.0,
        "org.jfree.chart.util$RectangleEdge#<clinit>()": 3016945.0,
        "org.jfree.chart.util$RectangleEdge#RectangleEdge(java.lang.String)": 3016945.0,
        "org.jfree.chart.util$RectangleEdge#coordinate(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1909.0,
        "org.jfree.chart.util$RectangleEdge#equals(java.lang.Object)": 1811.0,
        "org.jfree.chart.util$RectangleEdge#hashCode()": 1899.0,
        "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)": 1791.0,
        "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)": 1777.0,
        "org.jfree.chart.util$RectangleEdge#opposite(org.jfree.chart.util.RectangleEdge)": 1917.0,
        "org.jfree.chart.util$RectangleEdge#readResolve()": 1887.0,
        "org.jfree.chart.util$RectangleEdge#toString()": 1917.0,
        "org.jfree.chart.util$RectangleInsets#<clinit>()": 2163351.0,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets()": 1917.0,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)": 2261559.0,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets(org.jfree.chart.util.UnitType,double,double,double,double)": 2163351.0,
        "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)": 1785.0,
        "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)": 1761.0,
        "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)": 1785.0,
        "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)": 1761.0,
        "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)": 1785.0,
        "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)": 1761.0,
        "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)": 1785.0,
        "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)": 1761.0,
        "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)": 1917.0,
        "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D)": 1917.0,
        "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)": 1917.0,
        "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D)": 1799.0,
        "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)": 1799.0,
        "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)": 3136251.0,
        "org.jfree.chart.util$RectangleInsets#extendHeight(double)": 1763.0,
        "org.jfree.chart.util$RectangleInsets#extendWidth(double)": 1763.0,
        "org.jfree.chart.util$RectangleInsets#getBottom()": 1799.0,
        "org.jfree.chart.util$RectangleInsets#getLeft()": 1799.0,
        "org.jfree.chart.util$RectangleInsets#getRight()": 1799.0,
        "org.jfree.chart.util$RectangleInsets#getTop()": 1799.0,
        "org.jfree.chart.util$RectangleInsets#getUnitType()": 1917.0,
        "org.jfree.chart.util$RectangleInsets#hashCode()": 1917.0,
        "org.jfree.chart.util$RectangleInsets#toString()": 1917.0,
        "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)": 1789.0,
        "org.jfree.chart.util$RectangleInsets#trimHeight(double)": 1787.0,
        "org.jfree.chart.util$RectangleInsets#trimWidth(double)": 1787.0,
        "org.jfree.chart.util$ResourceBundleWrapper#ResourceBundleWrapper()": 1917.0,
        "org.jfree.chart.util$ResourceBundleWrapper#getBundle(java.lang.String)": 2725491.0,
        "org.jfree.chart.util$ResourceBundleWrapper#getBundle(java.lang.String,java.util.Locale)": 1917.0,
        "org.jfree.chart.util$ResourceBundleWrapper#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)": 1917.0,
        "org.jfree.chart.util$ResourceBundleWrapper#removeCodeBase(java.net.URL,java.net.URLClassLoader)": 1917.0,
        "org.jfree.chart.util$Rotation#<clinit>()": 3602341.0,
        "org.jfree.chart.util$Rotation#Rotation(java.lang.String,double)": 3602341.0,
        "org.jfree.chart.util$Rotation#equals(java.lang.Object)": 1899.0,
        "org.jfree.chart.util$Rotation#getFactor()": 1911.0,
        "org.jfree.chart.util$Rotation#hashCode()": 1917.0,
        "org.jfree.chart.util$Rotation#readResolve()": 1903.0,
        "org.jfree.chart.util$Rotation#toString()": 1917.0,
        "org.jfree.chart.util$SerialUtilities#SerialUtilities()": 1917.0,
        "org.jfree.chart.util$SerialUtilities#isSerializable(java.lang.Class)": 1619.0,
        "org.jfree.chart.util$SerialUtilities#readAttributedString(java.io.ObjectInputStream)": 1905.0,
        "org.jfree.chart.util$SerialUtilities#readImage(java.io.ObjectInputStream)": 1917.0,
        "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)": 1603.0,
        "org.jfree.chart.util$SerialUtilities#readPoint2D(java.io.ObjectInputStream)": 1901.0,
        "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)": 1663.0,
        "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)": 1645.0,
        "org.jfree.chart.util$SerialUtilities#writeAttributedString(java.text.AttributedString,java.io.ObjectOutputStream)": 1905.0,
        "org.jfree.chart.util$SerialUtilities#writeImage(java.awt.Image,java.io.ObjectOutputStream)": 1917.0,
        "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)": 1603.0,
        "org.jfree.chart.util$SerialUtilities#writePoint2D(java.awt.geom.Point2D,java.io.ObjectOutputStream)": 1901.0,
        "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)": 1663.0,
        "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)": 1645.0,
        "org.jfree.chart.util$ShapeList#ShapeList()": 2178091.0,
        "org.jfree.chart.util$ShapeList#clone()": 1785.0,
        "org.jfree.chart.util$ShapeList#equals(java.lang.Object)": 1461.0,
        "org.jfree.chart.util$ShapeList#getShape(int)": 1803.0,
        "org.jfree.chart.util$ShapeList#hashCode()": 1917.0,
        "org.jfree.chart.util$ShapeList#readObject(java.io.ObjectInputStream)": 1783.0,
        "org.jfree.chart.util$ShapeList#setShape(int,java.awt.Shape)": 1865.0,
        "org.jfree.chart.util$ShapeList#writeObject(java.io.ObjectOutputStream)": 1783.0,
        "org.jfree.chart.util$ShapeUtilities#<clinit>()": 1151.0,
        "org.jfree.chart.util$ShapeUtilities#ShapeUtilities()": 1917.0,
        "org.jfree.chart.util$ShapeUtilities#clipLine(java.awt.geom.Line2D,java.awt.geom.Rectangle2D)": 1915.0,
        "org.jfree.chart.util$ShapeUtilities#clone(java.awt.Shape)": 1737.0,
        "org.jfree.chart.util$ShapeUtilities#contains(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)": 1917.0,
        "org.jfree.chart.util$ShapeUtilities#createDiagonalCross(float,float)": 1917.0,
        "org.jfree.chart.util$ShapeUtilities#createDiamond(float)": 1917.0,
        "org.jfree.chart.util$ShapeUtilities#createDownTriangle(float)": 1917.0,
        "org.jfree.chart.util$ShapeUtilities#createLineRegion(java.awt.geom.Line2D,float)": 1917.0,
        "org.jfree.chart.util$ShapeUtilities#createRegularCross(float,float)": 1917.0,
        "org.jfree.chart.util$ShapeUtilities#createTranslatedShape(java.awt.Shape,double,double)": 1903.0,
        "org.jfree.chart.util$ShapeUtilities#createTranslatedShape(java.awt.Shape,org.jfree.chart.util.RectangleAnchor,double,double)": 1815.0,
        "org.jfree.chart.util$ShapeUtilities#createUpTriangle(float)": 1917.0,
        "org.jfree.chart.util$ShapeUtilities#drawRotatedShape(java.awt.Graphics2D,java.awt.Shape,double,float,float)": 1917.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Polygon,java.awt.Polygon)": 1747.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)": 1299.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Arc2D,java.awt.geom.Arc2D)": 1911.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Ellipse2D,java.awt.geom.Ellipse2D)": 1731.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.GeneralPath,java.awt.geom.GeneralPath)": 1883.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Line2D,java.awt.geom.Line2D)": 1789.0,
        "org.jfree.chart.util$ShapeUtilities#getPointInRectangle(double,double,java.awt.geom.Rectangle2D)": 1917.0,
        "org.jfree.chart.util$ShapeUtilities#intersects(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)": 1915.0,
        "org.jfree.chart.util$ShapeUtilities#isPointInRect(double,double,java.awt.geom.Rectangle2D)": 1915.0,
        "org.jfree.chart.util$ShapeUtilities#rotateShape(java.awt.Shape,double,float,float)": 1849.0,
        "org.jfree.chart.util$Size2D#Size2D()": 1763.0,
        "org.jfree.chart.util$Size2D#Size2D(double,double)": 1749.0,
        "org.jfree.chart.util$Size2D#clone()": 1917.0,
        "org.jfree.chart.util$Size2D#equals(java.lang.Object)": 1917.0,
        "org.jfree.chart.util$Size2D#getHeight()": 1759.0,
        "org.jfree.chart.util$Size2D#getWidth()": 1757.0,
        "org.jfree.chart.util$Size2D#setHeight(double)": 1917.0,
        "org.jfree.chart.util$Size2D#setWidth(double)": 1917.0,
        "org.jfree.chart.util$Size2D#toString()": 1917.0,
        "org.jfree.chart.util$StandardGradientPaintTransformer#StandardGradientPaintTransformer()": 1407.0,
        "org.jfree.chart.util$StandardGradientPaintTransformer#StandardGradientPaintTransformer(org.jfree.chart.util.GradientPaintTransformType)": 1405.0,
        "org.jfree.chart.util$StandardGradientPaintTransformer#clone()": 1897.0,
        "org.jfree.chart.util$StandardGradientPaintTransformer#equals(java.lang.Object)": 1745.0,
        "org.jfree.chart.util$StandardGradientPaintTransformer#getType()": 1917.0,
        "org.jfree.chart.util$StandardGradientPaintTransformer#hashCode()": 1915.0,
        "org.jfree.chart.util$StandardGradientPaintTransformer#transform(java.awt.GradientPaint,java.awt.Shape)": 1915.0,
        "org.jfree.chart.util$StrokeList#StrokeList()": 2163351.0,
        "org.jfree.chart.util$StrokeList#clone()": 1783.0,
        "org.jfree.chart.util$StrokeList#equals(java.lang.Object)": 1455.0,
        "org.jfree.chart.util$StrokeList#getStroke(int)": 1787.0,
        "org.jfree.chart.util$StrokeList#hashCode()": 1823.0,
        "org.jfree.chart.util$StrokeList#readObject(java.io.ObjectInputStream)": 1781.0,
        "org.jfree.chart.util$StrokeList#setStroke(int,java.awt.Stroke)": 1821.0,
        "org.jfree.chart.util$StrokeList#writeObject(java.io.ObjectOutputStream)": 1781.0,
        "org.jfree.chart.util$StrokeMap#StrokeMap()": 3594751.0,
        "org.jfree.chart.util$StrokeMap#clear()": 1917.0,
        "org.jfree.chart.util$StrokeMap#clone()": 1915.0,
        "org.jfree.chart.util$StrokeMap#containsKey(java.lang.Comparable)": 1917.0,
        "org.jfree.chart.util$StrokeMap#equals(java.lang.Object)": 1885.0,
        "org.jfree.chart.util$StrokeMap#getStroke(java.lang.Comparable)": 1899.0,
        "org.jfree.chart.util$StrokeMap#put(java.lang.Comparable,java.awt.Stroke)": 1905.0,
        "org.jfree.chart.util$StrokeMap#readObject(java.io.ObjectInputStream)": 1901.0,
        "org.jfree.chart.util$StrokeMap#writeObject(java.io.ObjectOutputStream)": 1901.0,
        "org.jfree.chart.util$UnitType#<clinit>()": 2142799.0,
        "org.jfree.chart.util$UnitType#UnitType(java.lang.String)": 2142799.0,
        "org.jfree.chart.util$UnitType#equals(java.lang.Object)": 1783.0,
        "org.jfree.chart.util$UnitType#hashCode()": 1917.0,
        "org.jfree.chart.util$UnitType#readResolve()": 1783.0,
        "org.jfree.chart.util$UnitType#toString()": 1917.0,
        "org.jfree.chart.util$VerticalAlignment#<clinit>()": 3023899.0,
        "org.jfree.chart.util$VerticalAlignment#VerticalAlignment(java.lang.String)": 3023899.0,
        "org.jfree.chart.util$VerticalAlignment#equals(java.lang.Object)": 1883.0,
        "org.jfree.chart.util$VerticalAlignment#hashCode()": 1899.0,
        "org.jfree.chart.util$VerticalAlignment#readResolve()": 1883.0,
        "org.jfree.chart.util$VerticalAlignment#toString()": 1917.0,
        "org.jfree.data$DefaultKeyedValues#DefaultKeyedValues()": 2958159.0,
        "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,double)": 1907.0,
        "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)": 1881.0,
        "org.jfree.data$DefaultKeyedValues#clear()": 1901.0,
        "org.jfree.data$DefaultKeyedValues#clone()": 1893.0,
        "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)": 1913.0,
        "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)": 2989209.0,
        "org.jfree.data$DefaultKeyedValues#getItemCount()": 1867.0,
        "org.jfree.data$DefaultKeyedValues#getKey(int)": 1883.0,
        "org.jfree.data$DefaultKeyedValues#getKeys()": 1905.0,
        "org.jfree.data$DefaultKeyedValues#getValue(int)": 1591.0,
        "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)": 1893.0,
        "org.jfree.data$DefaultKeyedValues#hashCode()": 1917.0,
        "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,double)": 1915.0,
        "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,java.lang.Number)": 1915.0,
        "org.jfree.data$DefaultKeyedValues#rebuildIndex()": 1905.0,
        "org.jfree.data$DefaultKeyedValues#removeValue(int)": 1907.0,
        "org.jfree.data$DefaultKeyedValues#removeValue(java.lang.Comparable)": 1907.0,
        "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,double)": 1917.0,
        "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)": 2992669.0,
        "org.jfree.data$DefaultKeyedValues#sortByKeys(org.jfree.chart.util.SortOrder)": 1913.0,
        "org.jfree.data$DefaultKeyedValues#sortByValues(org.jfree.chart.util.SortOrder)": 1913.0,
        "org.jfree.data$DomainOrder#<clinit>()": 1881.0,
        "org.jfree.data$DomainOrder#DomainOrder(java.lang.String)": 1881.0,
        "org.jfree.data$DomainOrder#equals(java.lang.Object)": 1911.0,
        "org.jfree.data$DomainOrder#hashCode()": 1915.0,
        "org.jfree.data$DomainOrder#readResolve()": 1915.0,
        "org.jfree.data$DomainOrder#toString()": 1913.0,
        "org.jfree.data$Range#Range(double,double)": 2470795.0,
        "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)": 3132709.0,
        "org.jfree.data$Range#constrain(double)": 1863.0,
        "org.jfree.data$Range#contains(double)": 1719.0,
        "org.jfree.data$Range#equals(java.lang.Object)": 1701.0,
        "org.jfree.data$Range#expand(org.jfree.data.Range,double,double)": 1915.0,
        "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)": 1857.0,
        "org.jfree.data$Range#getCentralValue()": 1899.0,
        "org.jfree.data$Range#getLength()": 1893.0,
        "org.jfree.data$Range#getLowerBound()": 2886339.0,
        "org.jfree.data$Range#getUpperBound()": 2882941.0,
        "org.jfree.data$Range#hashCode()": 1915.0,
        "org.jfree.data$Range#intersects(double,double)": 1909.0,
        "org.jfree.data$Range#intersects(org.jfree.data.Range)": 1917.0,
        "org.jfree.data$Range#scale(org.jfree.data.Range,double)": 1915.0,
        "org.jfree.data$Range#shift(org.jfree.data.Range,double)": 1913.0,
        "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)": 1913.0,
        "org.jfree.data$Range#shiftWithNoZeroCrossing(double,double)": 1913.0,
        "org.jfree.data$Range#toString()": 1917.0,
        "org.jfree.data$RangeType#<clinit>()": 2999595.0,
        "org.jfree.data$RangeType#RangeType(java.lang.String)": 2999595.0,
        "org.jfree.data$RangeType#equals(java.lang.Object)": 1793.0,
        "org.jfree.data$RangeType#hashCode()": 1915.0,
        "org.jfree.data$RangeType#readResolve()": 1867.0,
        "org.jfree.data$RangeType#toString()": 1863.0,
        "org.jfree.data$UnknownKeyException#UnknownKeyException(java.lang.String)": 1879.0,
        "org.jfree.data.general$AbstractDataset#AbstractDataset()": 1857171.0,
        "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)": 2828845.0,
        "org.jfree.data.general$AbstractDataset#clone()": 1831.0,
        "org.jfree.data.general$AbstractDataset#fireDatasetChanged()": 2255545.0,
        "org.jfree.data.general$AbstractDataset#getGroup()": 1909.0,
        "org.jfree.data.general$AbstractDataset#hasListener(java.util.EventListener)": 1911.0,
        "org.jfree.data.general$AbstractDataset#notifyListeners(org.jfree.data.general.DatasetChangeEvent)": 2122345.0,
        "org.jfree.data.general$AbstractDataset#readObject(java.io.ObjectInputStream)": 1789.0,
        "org.jfree.data.general$AbstractDataset#removeChangeListener(org.jfree.data.general.DatasetChangeListener)": 1887.0,
        "org.jfree.data.general$AbstractDataset#setGroup(org.jfree.data.general.DatasetGroup)": 1917.0,
        "org.jfree.data.general$AbstractDataset#validateObject()": 1789.0,
        "org.jfree.data.general$AbstractDataset#writeObject(java.io.ObjectOutputStream)": 1789.0,
        "org.jfree.data.general$AbstractSeriesDataset#AbstractSeriesDataset()": 2604649.0,
        "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)": 1797.0,
        "org.jfree.data.general$AbstractSeriesDataset#seriesChanged(org.jfree.data.general.SeriesChangeEvent)": 1897.0,
        "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)": 1920421.0,
        "org.jfree.data.general$DatasetChangeEvent#getDataset()": 1917.0,
        "org.jfree.data.general$DatasetGroup#DatasetGroup()": 1854445.0,
        "org.jfree.data.general$DatasetGroup#DatasetGroup(java.lang.String)": 1917.0,
        "org.jfree.data.general$DatasetGroup#clone()": 1917.0,
        "org.jfree.data.general$DatasetGroup#equals(java.lang.Object)": 1915.0,
        "org.jfree.data.general$DatasetGroup#getID()": 1917.0,
        "org.jfree.data.general$DatasetUtilities#DatasetUtilities()": 1917.0,
        "org.jfree.data.general$DatasetUtilities#calculatePieDatasetTotal(org.jfree.data.general.PieDataset)": 1907.0,
        "org.jfree.data.general$DatasetUtilities#calculateStackTotal(org.jfree.data.xy.TableXYDataset,int)": 1917.0,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.Comparable,org.jfree.data.KeyedValues)": 1917.0,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.Comparable[],java.lang.Comparable[],double[][])": 1913.0,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.String,java.lang.String,double[][])": 1917.0,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.String,java.lang.String,java.lang.Number[][])": 1847.0,
        "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.general.PieDataset,java.lang.Comparable,double)": 1915.0,
        "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.general.PieDataset,java.lang.Comparable,double,int)": 1915.0,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForColumn(org.jfree.data.category.CategoryDataset,int)": 1917.0,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForColumn(org.jfree.data.category.CategoryDataset,java.lang.Comparable)": 1917.0,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForRow(org.jfree.data.category.CategoryDataset,int)": 1917.0,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForRow(org.jfree.data.category.CategoryDataset,java.lang.Comparable)": 1917.0,
        "org.jfree.data.general$DatasetUtilities#findCumulativeRangeBounds(org.jfree.data.category.CategoryDataset)": 1909.0,
        "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset)": 3748071.0,
        "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)": 3694045.0,
        "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)": 3549379.0,
        "org.jfree.data.general$DatasetUtilities#findMaximumDomainValue(org.jfree.data.xy.XYDataset)": 1915.0,
        "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.category.CategoryDataset)": 1911.0,
        "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.xy.XYDataset)": 1915.0,
        "org.jfree.data.general$DatasetUtilities#findMaximumStackedRangeValue(org.jfree.data.category.CategoryDataset)": 1911.0,
        "org.jfree.data.general$DatasetUtilities#findMinimumDomainValue(org.jfree.data.xy.XYDataset)": 1915.0,
        "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.category.CategoryDataset)": 1913.0,
        "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.xy.XYDataset)": 1915.0,
        "org.jfree.data.general$DatasetUtilities#findMinimumStackedRangeValue(org.jfree.data.category.CategoryDataset)": 1913.0,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset)": 1915.0,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 1915.0,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)": 1763.0,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset)": 1911.0,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)": 1893.0,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)": 3575811.0,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset)": 1897.0,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)": 1887.0,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)": 1909.0,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.xy.TableXYDataset)": 1905.0,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)": 1905.0,
        "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.category.CategoryDataset)": 1839.0,
        "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.general.PieDataset)": 1911.0,
        "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.xy.XYDataset)": 1879.0,
        "org.jfree.data.general$DatasetUtilities#iterateCategoryRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 1917.0,
        "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset)": 1913.0,
        "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)": 3705589.0,
        "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.category.CategoryDataset)": 1917.0,
        "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 1909.0,
        "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset)": 1909.0,
        "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)": 1889.0,
        "org.jfree.data.general$DatasetUtilities#iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)": 3549379.0,
        "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)": 1759.0,
        "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)": 3564471.0,
        "org.jfree.data.general$DatasetUtilities#iterateXYRangeBounds(org.jfree.data.xy.XYDataset)": 1917.0,
        "org.jfree.data.general$DatasetUtilities#sampleFunction2D(org.jfree.data.function.Function2D,double,double,int,java.lang.Comparable)": 1915.0,
        "org.jfree.data.general$DatasetUtilities#sampleFunction2DToSeries(org.jfree.data.function.Function2D,double,double,int,java.lang.Comparable)": 1915.0,
        "org.jfree.data.general$DefaultPieDataset#DefaultPieDataset()": 3625159.0,
        "org.jfree.data.general$DefaultPieDataset#DefaultPieDataset(org.jfree.data.KeyedValues)": 1917.0,
        "org.jfree.data.general$DefaultPieDataset#clear()": 1915.0,
        "org.jfree.data.general$DefaultPieDataset#clone()": 1909.0,
        "org.jfree.data.general$DefaultPieDataset#equals(java.lang.Object)": 1897.0,
        "org.jfree.data.general$DefaultPieDataset#getIndex(java.lang.Comparable)": 1911.0,
        "org.jfree.data.general$DefaultPieDataset#getItemCount()": 1887.0,
        "org.jfree.data.general$DefaultPieDataset#getKey(int)": 1899.0,
        "org.jfree.data.general$DefaultPieDataset#getKeys()": 1907.0,
        "org.jfree.data.general$DefaultPieDataset#getValue(int)": 1903.0,
        "org.jfree.data.general$DefaultPieDataset#getValue(java.lang.Comparable)": 1907.0,
        "org.jfree.data.general$DefaultPieDataset#hashCode()": 1917.0,
        "org.jfree.data.general$DefaultPieDataset#insertValue(int,java.lang.Comparable,double)": 1917.0,
        "org.jfree.data.general$DefaultPieDataset#insertValue(int,java.lang.Comparable,java.lang.Number)": 1917.0,
        "org.jfree.data.general$DefaultPieDataset#remove(java.lang.Comparable)": 1917.0,
        "org.jfree.data.general$DefaultPieDataset#setValue(java.lang.Comparable,double)": 1895.0,
        "org.jfree.data.general$DefaultPieDataset#setValue(java.lang.Comparable,java.lang.Number)": 3655695.0,
        "org.jfree.data.general$DefaultPieDataset#sortByKeys(org.jfree.chart.util.SortOrder)": 1917.0,
        "org.jfree.data.general$DefaultPieDataset#sortByValues(org.jfree.chart.util.SortOrder)": 1917.0,
        "org.jfree.data.general$Series#Series(java.lang.Comparable)": 2630545.0,
        "org.jfree.data.general$Series#Series(java.lang.Comparable,java.lang.String)": 2630545.0,
        "org.jfree.data.general$Series#addChangeListener(org.jfree.data.general.SeriesChangeListener)": 3125631.0,
        "org.jfree.data.general$Series#addPropertyChangeListener(java.beans.PropertyChangeListener)": 1917.0,
        "org.jfree.data.general$Series#clone()": 1857.0,
        "org.jfree.data.general$Series#equals(java.lang.Object)": 1739.0,
        "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)": 1915.0,
        "org.jfree.data.general$Series#fireSeriesChanged()": 2722189.0,
        "org.jfree.data.general$Series#getDescription()": 1757.0,
        "org.jfree.data.general$Series#getKey()": 1607.0,
        "org.jfree.data.general$Series#getNotify()": 1917.0,
        "org.jfree.data.general$Series#hashCode()": 1909.0,
        "org.jfree.data.general$Series#isEmpty()": 1907.0,
        "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)": 2722189.0,
        "org.jfree.data.general$Series#removeChangeListener(org.jfree.data.general.SeriesChangeListener)": 1879.0,
        "org.jfree.data.general$Series#removePropertyChangeListener(java.beans.PropertyChangeListener)": 1917.0,
        "org.jfree.data.general$Series#setDescription(java.lang.String)": 1903.0,
        "org.jfree.data.general$Series#setKey(java.lang.Comparable)": 1907.0,
        "org.jfree.data.general$Series#setNotify(boolean)": 1917.0,
        "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)": 2722189.0,
        "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object,org.jfree.data.general.SeriesChangeInfo)": 2722189.0,
        "org.jfree.data.general$SeriesChangeEvent#getSummary()": 1917.0,
        "org.jfree.data.general$SeriesChangeEvent#setSummary(org.jfree.data.general.SeriesChangeInfo)": 1917.0,
        "org.jfree.data.general$SeriesException#SeriesException(java.lang.String)": 1911.0,
        "org.jfree.data.time$DateRange#DateRange()": 3651871.0,
        "org.jfree.data.time$DateRange#DateRange(double,double)": 1913.0,
        "org.jfree.data.time$DateRange#DateRange(java.util.Date,java.util.Date)": 3636595.0,
        "org.jfree.data.time$DateRange#DateRange(org.jfree.data.Range)": 1917.0,
        "org.jfree.data.time$DateRange#getLowerDate()": 1903.0,
        "org.jfree.data.time$DateRange#getLowerMillis()": 1911.0,
        "org.jfree.data.time$DateRange#getUpperDate()": 1903.0,
        "org.jfree.data.time$DateRange#getUpperMillis()": 1911.0,
        "org.jfree.data.time$DateRange#toString()": 1917.0,
        "org.jfree.data.time$Day#<clinit>()": 3236239.0,
        "org.jfree.data.time$Day#Day()": 3713295.0,
        "org.jfree.data.time$Day#Day(int,int,int)": 1711.0,
        "org.jfree.data.time$Day#Day(java.util.Date)": 3705589.0,
        "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)": 3632781.0,
        "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)": 3709441.0,
        "org.jfree.data.time$Day#compareTo(java.lang.Object)": 3724869.0,
        "org.jfree.data.time$Day#equals(java.lang.Object)": 1867.0,
        "org.jfree.data.time$Day#getDayOfMonth()": 1749.0,
        "org.jfree.data.time$Day#getFirstMillisecond()": 1885.0,
        "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)": 3250651.0,
        "org.jfree.data.time$Day#getLastMillisecond()": 1885.0,
        "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)": 3250651.0,
        "org.jfree.data.time$Day#getMonth()": 1749.0,
        "org.jfree.data.time$Day#getSerialDate()": 3648049.0,
        "org.jfree.data.time$Day#getSerialIndex()": 3709441.0,
        "org.jfree.data.time$Day#getYear()": 1753.0,
        "org.jfree.data.time$Day#hashCode()": 1905.0,
        "org.jfree.data.time$Day#next()": 3690201.0,
        "org.jfree.data.time$Day#parseDay(java.lang.String)": 1913.0,
        "org.jfree.data.time$Day#peg(java.util.Calendar)": 3250651.0,
        "org.jfree.data.time$Day#previous()": 1909.0,
        "org.jfree.data.time$Day#toString()": 1917.0,
        "org.jfree.data.time$Month#Month()": 1915.0,
        "org.jfree.data.time$Month#Month(int,int)": 1859.0,
        "org.jfree.data.time$Month#Month(int,org.jfree.data.time.Year)": 1915.0,
        "org.jfree.data.time$Month#Month(java.util.Date)": 1915.0,
        "org.jfree.data.time$Month#Month(java.util.Date,java.util.TimeZone)": 1915.0,
        "org.jfree.data.time$Month#Month(java.util.Date,java.util.TimeZone,java.util.Locale)": 1903.0,
        "org.jfree.data.time$Month#compareTo(java.lang.Object)": 1911.0,
        "org.jfree.data.time$Month#equals(java.lang.Object)": 1903.0,
        "org.jfree.data.time$Month#evaluateAsYear(java.lang.String)": 1915.0,
        "org.jfree.data.time$Month#findSeparator(java.lang.String)": 1915.0,
        "org.jfree.data.time$Month#getFirstMillisecond()": 1907.0,
        "org.jfree.data.time$Month#getFirstMillisecond(java.util.Calendar)": 1857.0,
        "org.jfree.data.time$Month#getLastMillisecond()": 1907.0,
        "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)": 1857.0,
        "org.jfree.data.time$Month#getMonth()": 1903.0,
        "org.jfree.data.time$Month#getSerialIndex()": 1909.0,
        "org.jfree.data.time$Month#getYear()": 1913.0,
        "org.jfree.data.time$Month#getYearValue()": 1911.0,
        "org.jfree.data.time$Month#hashCode()": 1915.0,
        "org.jfree.data.time$Month#next()": 1911.0,
        "org.jfree.data.time$Month#parseMonth(java.lang.String)": 1915.0,
        "org.jfree.data.time$Month#peg(java.util.Calendar)": 1857.0,
        "org.jfree.data.time$Month#previous()": 1909.0,
        "org.jfree.data.time$Month#toString()": 1917.0,
        "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()": 2692561.0,
        "org.jfree.data.time$RegularTimePeriod#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone)": 1913.0,
        "org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)": 1905.0,
        "org.jfree.data.time$RegularTimePeriod#getEnd()": 1875.0,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()": 1879.0,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)": 1915.0,
        "org.jfree.data.time$RegularTimePeriod#getStart()": 1875.0,
        "org.jfree.data.time$RegularTimePeriod#toString()": 1917.0,
        "org.jfree.data.time$SerialDate#<clinit>()": 3065791.0,
        "org.jfree.data.time$SerialDate#SerialDate()": 3250651.0,
        "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)": 1917.0,
        "org.jfree.data.time$SerialDate#addMonths(int,org.jfree.data.time.SerialDate)": 1917.0,
        "org.jfree.data.time$SerialDate#addYears(int,org.jfree.data.time.SerialDate)": 1917.0,
        "org.jfree.data.time$SerialDate#createInstance(int)": 3709441.0,
        "org.jfree.data.time$SerialDate#createInstance(int,int,int)": 3250651.0,
        "org.jfree.data.time$SerialDate#createInstance(java.util.Date)": 1917.0,
        "org.jfree.data.time$SerialDate#getDescription()": 1917.0,
        "org.jfree.data.time$SerialDate#getEndOfCurrentMonth(org.jfree.data.time.SerialDate)": 1917.0,
        "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int)": 1917.0,
        "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int,org.jfree.data.time.SerialDate)": 1917.0,
        "org.jfree.data.time$SerialDate#getMonths()": 1917.0,
        "org.jfree.data.time$SerialDate#getMonths(boolean)": 1917.0,
        "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int)": 1917.0,
        "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int,org.jfree.data.time.SerialDate)": 1917.0,
        "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int)": 1917.0,
        "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int,org.jfree.data.time.SerialDate)": 1917.0,
        "org.jfree.data.time$SerialDate#isLeapYear(int)": 3254259.0,
        "org.jfree.data.time$SerialDate#isValidMonthCode(int)": 1917.0,
        "org.jfree.data.time$SerialDate#isValidWeekInMonthCode(int)": 1917.0,
        "org.jfree.data.time$SerialDate#isValidWeekdayCode(int)": 1917.0,
        "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)": 3065791.0,
        "org.jfree.data.time$SerialDate#leapYearCount(int)": 3250651.0,
        "org.jfree.data.time$SerialDate#monthCodeToQuarter(int)": 1911.0,
        "org.jfree.data.time$SerialDate#monthCodeToString(int)": 1917.0,
        "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)": 1917.0,
        "org.jfree.data.time$SerialDate#relativeToString(int)": 1917.0,
        "org.jfree.data.time$SerialDate#setDescription(java.lang.String)": 1917.0,
        "org.jfree.data.time$SerialDate#stringToMonthCode(java.lang.String)": 1915.0,
        "org.jfree.data.time$SerialDate#stringToWeekdayCode(java.lang.String)": 1917.0,
        "org.jfree.data.time$SerialDate#toString()": 1917.0,
        "org.jfree.data.time$SerialDate#weekInMonthToString(int)": 1917.0,
        "org.jfree.data.time$SerialDate#weekdayCodeToString(int)": 1917.0,
        "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int)": 3709441.0,
        "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int,int,int)": 3250651.0,
        "org.jfree.data.time$SpreadsheetDate#calcSerial(int,int,int)": 3250651.0,
        "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)": 3724869.0,
        "org.jfree.data.time$SpreadsheetDate#compareTo(java.lang.Object)": 1917.0,
        "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)": 1875.0,
        "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()": 3250651.0,
        "org.jfree.data.time$SpreadsheetDate#getDayOfWeek()": 1917.0,
        "org.jfree.data.time$SpreadsheetDate#getMonth()": 3250651.0,
        "org.jfree.data.time$SpreadsheetDate#getYYYY()": 3250651.0,
        "org.jfree.data.time$SpreadsheetDate#hashCode()": 1905.0,
        "org.jfree.data.time$SpreadsheetDate#isAfter(org.jfree.data.time.SerialDate)": 1917.0,
        "org.jfree.data.time$SpreadsheetDate#isBefore(org.jfree.data.time.SerialDate)": 1917.0,
        "org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate)": 1917.0,
        "org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate,int)": 1917.0,
        "org.jfree.data.time$SpreadsheetDate#isOn(org.jfree.data.time.SerialDate)": 1917.0,
        "org.jfree.data.time$SpreadsheetDate#isOnOrAfter(org.jfree.data.time.SerialDate)": 1917.0,
        "org.jfree.data.time$SpreadsheetDate#isOnOrBefore(org.jfree.data.time.SerialDate)": 1917.0,
        "org.jfree.data.time$SpreadsheetDate#toDate()": 1917.0,
        "org.jfree.data.time$SpreadsheetDate#toSerial()": 3556921.0,
        "org.jfree.data.time$TimePeriodAnchor#<clinit>()": 3625159.0,
        "org.jfree.data.time$TimePeriodAnchor#TimePeriodAnchor(java.lang.String)": 3625159.0,
        "org.jfree.data.time$TimePeriodAnchor#equals(java.lang.Object)": 1897.0,
        "org.jfree.data.time$TimePeriodAnchor#hashCode()": 1915.0,
        "org.jfree.data.time$TimePeriodAnchor#readResolve()": 1905.0,
        "org.jfree.data.time$TimePeriodAnchor#toString()": 1917.0,
        "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable)": 3579595.0,
        "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable,java.lang.String,java.lang.String)": 3579595.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)": 3644229.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)": 3644229.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 1843.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)": 1843.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)": 1909.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)": 3598545.0,
        "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)": 1915.0,
        "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)": 1907.0,
        "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 1901.0,
        "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.TimeSeriesDataItem)": 1901.0,
        "org.jfree.data.time$TimeSeries#clear()": 1915.0,
        "org.jfree.data.time$TimeSeries#clone()": 1909.0,
        "org.jfree.data.time$TimeSeries#createCopy(int,int)": 1913.0,
        "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)": 1913.0,
        "org.jfree.data.time$TimeSeries#delete(int,int)": 1911.0,
        "org.jfree.data.time$TimeSeries#delete(int,int,boolean)": 1911.0,
        "org.jfree.data.time$TimeSeries#delete(org.jfree.data.time.RegularTimePeriod)": 1913.0,
        "org.jfree.data.time$TimeSeries#equals(java.lang.Object)": 1893.0,
        "org.jfree.data.time$TimeSeries#findBoundsByIteration()": 1879.0,
        "org.jfree.data.time$TimeSeries#getDataItem(int)": 1911.0,
        "org.jfree.data.time$TimeSeries#getDataItem(org.jfree.data.time.RegularTimePeriod)": 1915.0,
        "org.jfree.data.time$TimeSeries#getDomainDescription()": 1893.0,
        "org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)": 1895.0,
        "org.jfree.data.time$TimeSeries#getItemCount()": 3583381.0,
        "org.jfree.data.time$TimeSeries#getItems()": 1917.0,
        "org.jfree.data.time$TimeSeries#getMaxY()": 1897.0,
        "org.jfree.data.time$TimeSeries#getMaximumItemAge()": 1889.0,
        "org.jfree.data.time$TimeSeries#getMaximumItemCount()": 1889.0,
        "org.jfree.data.time$TimeSeries#getMinY()": 1897.0,
        "org.jfree.data.time$TimeSeries#getNextTimePeriod()": 1917.0,
        "org.jfree.data.time$TimeSeries#getRangeDescription()": 1893.0,
        "org.jfree.data.time$TimeSeries#getRawDataItem(int)": 3602341.0,
        "org.jfree.data.time$TimeSeries#getRawDataItem(org.jfree.data.time.RegularTimePeriod)": 1917.0,
        "org.jfree.data.time$TimeSeries#getTimePeriod(int)": 3602341.0,
        "org.jfree.data.time$TimeSeries#getTimePeriodClass()": 1915.0,
        "org.jfree.data.time$TimeSeries#getTimePeriods()": 1917.0,
        "org.jfree.data.time$TimeSeries#getTimePeriodsUniqueToOtherSeries(org.jfree.data.time.TimeSeries)": 1917.0,
        "org.jfree.data.time$TimeSeries#getValue(int)": 1907.0,
        "org.jfree.data.time$TimeSeries#getValue(org.jfree.data.time.RegularTimePeriod)": 1907.0,
        "org.jfree.data.time$TimeSeries#hashCode()": 1915.0,
        "org.jfree.data.time$TimeSeries#maxIgnoreNaN(double,double)": 3598545.0,
        "org.jfree.data.time$TimeSeries#minIgnoreNaN(double,double)": 3598545.0,
        "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)": 3598545.0,
        "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)": 1911.0,
        "org.jfree.data.time$TimeSeries#setDomainDescription(java.lang.String)": 1917.0,
        "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)": 1907.0,
        "org.jfree.data.time$TimeSeries#setMaximumItemCount(int)": 1907.0,
        "org.jfree.data.time$TimeSeries#setRangeDescription(java.lang.String)": 1917.0,
        "org.jfree.data.time$TimeSeries#update(int,java.lang.Number)": 1913.0,
        "org.jfree.data.time$TimeSeries#update(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 1913.0,
        "org.jfree.data.time$TimeSeries#updateBoundsForAddedItem(org.jfree.data.time.TimeSeriesDataItem)": 3598545.0,
        "org.jfree.data.time$TimeSeries#updateBoundsForRemovedItem(org.jfree.data.time.TimeSeriesDataItem)": 1907.0,
        "org.jfree.data.time$TimeSeriesCollection#TimeSeriesCollection()": 3724869.0,
        "org.jfree.data.time$TimeSeriesCollection#TimeSeriesCollection(java.util.TimeZone)": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#TimeSeriesCollection(org.jfree.data.time.TimeSeries)": 1909.0,
        "org.jfree.data.time$TimeSeriesCollection#TimeSeriesCollection(org.jfree.data.time.TimeSeries,java.util.TimeZone)": 3709441.0,
        "org.jfree.data.time$TimeSeriesCollection#addSeries(org.jfree.data.time.TimeSeries)": 3736461.0,
        "org.jfree.data.time$TimeSeriesCollection#clearSelection()": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#clone()": 1915.0,
        "org.jfree.data.time$TimeSeriesCollection#equals(java.lang.Object)": 1905.0,
        "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(boolean)": 3755821.0,
        "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(java.util.List,boolean)": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#getDomainLowerBound(boolean)": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#getDomainOrder()": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#getDomainUpperBound(boolean)": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#getEndX(int,int)": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#getEndY(int,int)": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#getItemCount(int)": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#getRangeBounds(java.util.List,org.jfree.data.Range,boolean)": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#getSeries()": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#getSeries(int)": 1905.0,
        "org.jfree.data.time$TimeSeriesCollection#getSeries(java.lang.Comparable)": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()": 1905.0,
        "org.jfree.data.time$TimeSeriesCollection#getSeriesKey(int)": 1915.0,
        "org.jfree.data.time$TimeSeriesCollection#getStartX(int,int)": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#getStartY(int,int)": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#getSurroundingItems(int,long)": 1915.0,
        "org.jfree.data.time$TimeSeriesCollection#getX(int,int)": 1915.0,
        "org.jfree.data.time$TimeSeriesCollection#getX(org.jfree.data.time.RegularTimePeriod)": 1915.0,
        "org.jfree.data.time$TimeSeriesCollection#getXPosition()": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#getY(int,int)": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#hashCode()": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#indexOf(org.jfree.data.time.TimeSeries)": 1915.0,
        "org.jfree.data.time$TimeSeriesCollection#isSelected(int,int)": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#removeAllSeries()": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#removeSeries(int)": 1915.0,
        "org.jfree.data.time$TimeSeriesCollection#removeSeries(org.jfree.data.time.TimeSeries)": 1909.0,
        "org.jfree.data.time$TimeSeriesCollection#setSelected(int,int,boolean)": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#setSelected(int,int,boolean,boolean)": 1917.0,
        "org.jfree.data.time$TimeSeriesCollection#setXPosition(org.jfree.data.time.TimePeriodAnchor)": 1915.0,
        "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,double)": 3609939.0,
        "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 3587169.0,
        "org.jfree.data.time$TimeSeriesDataItem#clone()": 3598545.0,
        "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)": 1877.0,
        "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)": 1897.0,
        "org.jfree.data.time$TimeSeriesDataItem#getPeriod()": 3598545.0,
        "org.jfree.data.time$TimeSeriesDataItem#getValue()": 3598545.0,
        "org.jfree.data.time$TimeSeriesDataItem#hashCode()": 1915.0,
        "org.jfree.data.time$TimeSeriesDataItem#isSelected()": 1917.0,
        "org.jfree.data.time$TimeSeriesDataItem#setSelected(boolean)": 1917.0,
        "org.jfree.data.time$TimeSeriesDataItem#setValue(java.lang.Number)": 1897.0,
        "org.jfree.data.time$Year#Year()": 1915.0,
        "org.jfree.data.time$Year#Year(int)": 1717.0,
        "org.jfree.data.time$Year#Year(java.util.Date)": 1915.0,
        "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone)": 1907.0,
        "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone,java.util.Locale)": 1907.0,
        "org.jfree.data.time$Year#compareTo(java.lang.Object)": 1825.0,
        "org.jfree.data.time$Year#equals(java.lang.Object)": 1847.0,
        "org.jfree.data.time$Year#getFirstMillisecond()": 1885.0,
        "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)": 1711.0,
        "org.jfree.data.time$Year#getLastMillisecond()": 1885.0,
        "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)": 1711.0,
        "org.jfree.data.time$Year#getSerialIndex()": 1843.0,
        "org.jfree.data.time$Year#getYear()": 1809.0,
        "org.jfree.data.time$Year#hashCode()": 1913.0,
        "org.jfree.data.time$Year#next()": 1911.0,
        "org.jfree.data.time$Year#parseYear(java.lang.String)": 1911.0,
        "org.jfree.data.time$Year#peg(java.util.Calendar)": 1711.0,
        "org.jfree.data.time$Year#previous()": 1913.0,
        "org.jfree.data.time$Year#toString()": 1917.0,
        "org.jfree.data.xy$AbstractIntervalXYDataset#AbstractIntervalXYDataset()": 3055291.0,
        "org.jfree.data.xy$AbstractIntervalXYDataset#getEndXValue(int,int)": 1903.0,
        "org.jfree.data.xy$AbstractIntervalXYDataset#getEndYValue(int,int)": 1911.0,
        "org.jfree.data.xy$AbstractIntervalXYDataset#getStartXValue(int,int)": 1903.0,
        "org.jfree.data.xy$AbstractIntervalXYDataset#getStartYValue(int,int)": 1911.0,
        "org.jfree.data.xy$AbstractXYDataset#AbstractXYDataset()": 2768599.0,
        "org.jfree.data.xy$AbstractXYDataset#getDomainOrder()": 1905.0,
        "org.jfree.data.xy$AbstractXYDataset#getSelectionState()": 1917.0,
        "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)": 1809.0,
        "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)": 1813.0,
        "org.jfree.data.xy$AbstractXYDataset#setSelectionState(org.jfree.data.xy.XYDatasetSelectionState)": 3437209.0,
        "org.jfree.data.xy$DefaultXYDataset#DefaultXYDataset()": 3632781.0,
        "org.jfree.data.xy$DefaultXYDataset#addSeries(java.lang.Comparable,double[][])": 1877.0,
        "org.jfree.data.xy$DefaultXYDataset#clone()": 1913.0,
        "org.jfree.data.xy$DefaultXYDataset#equals(java.lang.Object)": 1905.0,
        "org.jfree.data.xy$DefaultXYDataset#getDomainOrder()": 1911.0,
        "org.jfree.data.xy$DefaultXYDataset#getItemCount(int)": 1899.0,
        "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()": 3667179.0,
        "org.jfree.data.xy$DefaultXYDataset#getSeriesKey(int)": 1907.0,
        "org.jfree.data.xy$DefaultXYDataset#getX(int,int)": 1917.0,
        "org.jfree.data.xy$DefaultXYDataset#getXValue(int,int)": 1897.0,
        "org.jfree.data.xy$DefaultXYDataset#getY(int,int)": 1917.0,
        "org.jfree.data.xy$DefaultXYDataset#getYValue(int,int)": 1911.0,
        "org.jfree.data.xy$DefaultXYDataset#hashCode()": 1917.0,
        "org.jfree.data.xy$DefaultXYDataset#indexOf(java.lang.Comparable)": 1877.0,
        "org.jfree.data.xy$DefaultXYDataset#removeSeries(java.lang.Comparable)": 1917.0,
        "org.jfree.data.xy$IntervalXYDelegate#IntervalXYDelegate(org.jfree.data.xy.XYDataset)": 1895.0,
        "org.jfree.data.xy$IntervalXYDelegate#IntervalXYDelegate(org.jfree.data.xy.XYDataset,boolean)": 3359761.0,
        "org.jfree.data.xy$IntervalXYDelegate#calculateIntervalForSeries(int)": 1903.0,
        "org.jfree.data.xy$IntervalXYDelegate#clone()": 1913.0,
        "org.jfree.data.xy$IntervalXYDelegate#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 3378121.0,
        "org.jfree.data.xy$IntervalXYDelegate#equals(java.lang.Object)": 1885.0,
        "org.jfree.data.xy$IntervalXYDelegate#getDomainBounds(boolean)": 3728731.0,
        "org.jfree.data.xy$IntervalXYDelegate#getDomainLowerBound(boolean)": 1915.0,
        "org.jfree.data.xy$IntervalXYDelegate#getDomainUpperBound(boolean)": 1915.0,
        "org.jfree.data.xy$IntervalXYDelegate#getEndX(int,int)": 1911.0,
        "org.jfree.data.xy$IntervalXYDelegate#getEndXValue(int,int)": 1917.0,
        "org.jfree.data.xy$IntervalXYDelegate#getFixedIntervalWidth()": 1917.0,
        "org.jfree.data.xy$IntervalXYDelegate#getIntervalPositionFactor()": 3697891.0,
        "org.jfree.data.xy$IntervalXYDelegate#getIntervalWidth()": 3697891.0,
        "org.jfree.data.xy$IntervalXYDelegate#getStartX(int,int)": 1911.0,
        "org.jfree.data.xy$IntervalXYDelegate#getStartXValue(int,int)": 1917.0,
        "org.jfree.data.xy$IntervalXYDelegate#hashCode()": 1917.0,
        "org.jfree.data.xy$IntervalXYDelegate#isAutoWidth()": 3697891.0,
        "org.jfree.data.xy$IntervalXYDelegate#recalculateInterval()": 1903.0,
        "org.jfree.data.xy$IntervalXYDelegate#setAutoWidth(boolean)": 1901.0,
        "org.jfree.data.xy$IntervalXYDelegate#setFixedIntervalWidth(double)": 3705589.0,
        "org.jfree.data.xy$IntervalXYDelegate#setIntervalPositionFactor(double)": 1905.0,
        "org.jfree.data.xy$XYDataItem#XYDataItem(double,double)": 1911.0,
        "org.jfree.data.xy$XYDataItem#XYDataItem(java.lang.Number,java.lang.Number)": 3323191.0,
        "org.jfree.data.xy$XYDataItem#clone()": 3330489.0,
        "org.jfree.data.xy$XYDataItem#compareTo(java.lang.Object)": 3444631.0,
        "org.jfree.data.xy$XYDataItem#equals(java.lang.Object)": 1879.0,
        "org.jfree.data.xy$XYDataItem#getX()": 3378121.0,
        "org.jfree.data.xy$XYDataItem#getXValue()": 3334141.0,
        "org.jfree.data.xy$XYDataItem#getY()": 3334141.0,
        "org.jfree.data.xy$XYDataItem#getYValue()": 3334141.0,
        "org.jfree.data.xy$XYDataItem#hashCode()": 1915.0,
        "org.jfree.data.xy$XYDataItem#isSelected()": 1917.0,
        "org.jfree.data.xy$XYDataItem#setSelected(boolean)": 1917.0,
        "org.jfree.data.xy$XYDataItem#setY(double)": 1917.0,
        "org.jfree.data.xy$XYDataItem#setY(java.lang.Number)": 1899.0,
        "org.jfree.data.xy$XYDataItem#toString()": 1917.0,
        "org.jfree.data.xy$XYSeries#XYSeries(java.lang.Comparable)": 3440919.0,
        "org.jfree.data.xy$XYSeries#XYSeries(java.lang.Comparable,boolean)": 1917.0,
        "org.jfree.data.xy$XYSeries#XYSeries(java.lang.Comparable,boolean,boolean)": 3304981.0,
        "org.jfree.data.xy$XYSeries#add(double,double)": 3348769.0,
        "org.jfree.data.xy$XYSeries#add(double,double,boolean)": 1917.0,
        "org.jfree.data.xy$XYSeries#add(double,java.lang.Number)": 1875.0,
        "org.jfree.data.xy$XYSeries#add(double,java.lang.Number,boolean)": 1917.0,
        "org.jfree.data.xy$XYSeries#add(java.lang.Number,java.lang.Number)": 1865.0,
        "org.jfree.data.xy$XYSeries#add(java.lang.Number,java.lang.Number,boolean)": 3345109.0,
        "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem)": 1913.0,
        "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem,boolean)": 3337795.0,
        "org.jfree.data.xy$XYSeries#addOrUpdate(double,double)": 1913.0,
        "org.jfree.data.xy$XYSeries#addOrUpdate(java.lang.Number,java.lang.Number)": 1909.0,
        "org.jfree.data.xy$XYSeries#addOrUpdate(org.jfree.data.xy.XYDataItem)": 1909.0,
        "org.jfree.data.xy$XYSeries#clear()": 1913.0,
        "org.jfree.data.xy$XYSeries#clone()": 1905.0,
        "org.jfree.data.xy$XYSeries#createCopy(int,int)": 1917.0,
        "org.jfree.data.xy$XYSeries#delete(int,int)": 1915.0,
        "org.jfree.data.xy$XYSeries#equals(java.lang.Object)": 1877.0,
        "org.jfree.data.xy$XYSeries#findBoundsByIteration()": 1889.0,
        "org.jfree.data.xy$XYSeries#getAllowDuplicateXValues()": 1861.0,
        "org.jfree.data.xy$XYSeries#getAutoSort()": 1909.0,
        "org.jfree.data.xy$XYSeries#getDataItem(int)": 1917.0,
        "org.jfree.data.xy$XYSeries#getItemCount()": 3330489.0,
        "org.jfree.data.xy$XYSeries#getItems()": 1917.0,
        "org.jfree.data.xy$XYSeries#getMaxX()": 3713295.0,
        "org.jfree.data.xy$XYSeries#getMaxY()": 1887.0,
        "org.jfree.data.xy$XYSeries#getMaximumItemCount()": 1915.0,
        "org.jfree.data.xy$XYSeries#getMinX()": 3713295.0,
        "org.jfree.data.xy$XYSeries#getMinY()": 1887.0,
        "org.jfree.data.xy$XYSeries#getRawDataItem(int)": 1751.0,
        "org.jfree.data.xy$XYSeries#getX(int)": 1783.0,
        "org.jfree.data.xy$XYSeries#getY(int)": 1795.0,
        "org.jfree.data.xy$XYSeries#hashCode()": 1915.0,
        "org.jfree.data.xy$XYSeries#indexOf(java.lang.Number)": 1879.0,
        "org.jfree.data.xy$XYSeries#maxIgnoreNaN(double,double)": 3334141.0,
        "org.jfree.data.xy$XYSeries#minIgnoreNaN(double,double)": 3334141.0,
        "org.jfree.data.xy$XYSeries#remove(int)": 1907.0,
        "org.jfree.data.xy$XYSeries#remove(java.lang.Number)": 1909.0,
        "org.jfree.data.xy$XYSeries#setMaximumItemCount(int)": 1909.0,
        "org.jfree.data.xy$XYSeries#toArray()": 1913.0,
        "org.jfree.data.xy$XYSeries#update(java.lang.Number,java.lang.Number)": 1911.0,
        "org.jfree.data.xy$XYSeries#updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)": 3334141.0,
        "org.jfree.data.xy$XYSeries#updateBoundsForRemovedItem(org.jfree.data.xy.XYDataItem)": 1903.0,
        "org.jfree.data.xy$XYSeries#updateByIndex(int,java.lang.Number)": 1905.0,
        "org.jfree.data.xy$XYSeriesCollection#XYSeriesCollection()": 3553149.0,
        "org.jfree.data.xy$XYSeriesCollection#XYSeriesCollection(org.jfree.data.xy.XYSeries)": 3500551.0,
        "org.jfree.data.xy$XYSeriesCollection#addSeries(org.jfree.data.xy.XYSeries)": 3590959.0,
        "org.jfree.data.xy$XYSeriesCollection#clearSelection()": 1917.0,
        "org.jfree.data.xy$XYSeriesCollection#clone()": 1915.0,
        "org.jfree.data.xy$XYSeriesCollection#equals(java.lang.Object)": 1907.0,
        "org.jfree.data.xy$XYSeriesCollection#getDomainBounds(boolean)": 3736461.0,
        "org.jfree.data.xy$XYSeriesCollection#getDomainLowerBound(boolean)": 1915.0,
        "org.jfree.data.xy$XYSeriesCollection#getDomainOrder()": 1913.0,
        "org.jfree.data.xy$XYSeriesCollection#getDomainUpperBound(boolean)": 1915.0,
        "org.jfree.data.xy$XYSeriesCollection#getEndX(int,int)": 1915.0,
        "org.jfree.data.xy$XYSeriesCollection#getEndY(int,int)": 1911.0,
        "org.jfree.data.xy$XYSeriesCollection#getIntervalPositionFactor()": 1915.0,
        "org.jfree.data.xy$XYSeriesCollection#getIntervalWidth()": 1915.0,
        "org.jfree.data.xy$XYSeriesCollection#getItemCount(int)": 1845.0,
        "org.jfree.data.xy$XYSeriesCollection#getRangeBounds(boolean)": 1909.0,
        "org.jfree.data.xy$XYSeriesCollection#getRangeLowerBound(boolean)": 1915.0,
        "org.jfree.data.xy$XYSeriesCollection#getRangeUpperBound(boolean)": 1915.0,
        "org.jfree.data.xy$XYSeriesCollection#getSeries()": 1917.0,
        "org.jfree.data.xy$XYSeriesCollection#getSeries(int)": 3568249.0,
        "org.jfree.data.xy$XYSeriesCollection#getSeries(java.lang.Comparable)": 1915.0,
        "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()": 3538081.0,
        "org.jfree.data.xy$XYSeriesCollection#getSeriesKey(int)": 1863.0,
        "org.jfree.data.xy$XYSeriesCollection#getStartX(int,int)": 1915.0,
        "org.jfree.data.xy$XYSeriesCollection#getStartY(int,int)": 1911.0,
        "org.jfree.data.xy$XYSeriesCollection#getX(int,int)": 1853.0,
        "org.jfree.data.xy$XYSeriesCollection#getY(int,int)": 1851.0,
        "org.jfree.data.xy$XYSeriesCollection#hashCode()": 1917.0,
        "org.jfree.data.xy$XYSeriesCollection#indexOf(org.jfree.data.xy.XYSeries)": 1915.0,
        "org.jfree.data.xy$XYSeriesCollection#isAutoWidth()": 1917.0,
        "org.jfree.data.xy$XYSeriesCollection#isSelected(int,int)": 1917.0,
        "org.jfree.data.xy$XYSeriesCollection#removeAllSeries()": 1917.0,
        "org.jfree.data.xy$XYSeriesCollection#removeSeries(int)": 1915.0,
        "org.jfree.data.xy$XYSeriesCollection#removeSeries(org.jfree.data.xy.XYSeries)": 1915.0,
        "org.jfree.data.xy$XYSeriesCollection#setAutoWidth(boolean)": 1915.0,
        "org.jfree.data.xy$XYSeriesCollection#setIntervalPositionFactor(double)": 1915.0,
        "org.jfree.data.xy$XYSeriesCollection#setIntervalWidth(double)": 3724869.0,
        "org.jfree.data.xy$XYSeriesCollection#setSelected(int,int,boolean)": 1917.0,
        "org.jfree.data.xy$XYSeriesCollection#setSelected(int,int,boolean,boolean)": 1917.0
    },
    "Chart-5": {
        "org.jfree.data.general$Series#Series(java.lang.Comparable)": -291.0,
        "org.jfree.data.general$Series#Series(java.lang.Comparable,java.lang.String)": -291.0,
        "org.jfree.data.general$Series#addChangeListener(org.jfree.data.general.SeriesChangeListener)": -63.0,
        "org.jfree.data.general$Series#addPropertyChangeListener(java.beans.PropertyChangeListener)": 301.0,
        "org.jfree.data.general$Series#clone()": 243.0,
        "org.jfree.data.general$Series#equals(java.lang.Object)": 133.0,
        "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)": 299.0,
        "org.jfree.data.general$Series#fireSeriesChanged()": 453.0,
        "org.jfree.data.general$Series#getDescription()": 145.0,
        "org.jfree.data.general$Series#getKey()": 27.0,
        "org.jfree.data.general$Series#getNotify()": 301.0,
        "org.jfree.data.general$Series#hashCode()": 295.0,
        "org.jfree.data.general$Series#isEmpty()": 291.0,
        "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)": 453.0,
        "org.jfree.data.general$Series#removeChangeListener(org.jfree.data.general.SeriesChangeListener)": 271.0,
        "org.jfree.data.general$Series#removePropertyChangeListener(java.beans.PropertyChangeListener)": 301.0,
        "org.jfree.data.general$Series#setDescription(java.lang.String)": 289.0,
        "org.jfree.data.general$Series#setKey(java.lang.Comparable)": 291.0,
        "org.jfree.data.general$Series#setNotify(boolean)": 301.0,
        "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)": 453.0,
        "org.jfree.data.general$SeriesException#SeriesException(java.lang.String)": 297.0,
        "org.jfree.data.xy$XYDataItem#XYDataItem(double,double)": 295.0,
        "org.jfree.data.xy$XYDataItem#XYDataItem(java.lang.Number,java.lang.Number)": 34107.0,
        "org.jfree.data.xy$XYDataItem#clone()": 285.0,
        "org.jfree.data.xy$XYDataItem#compareTo(java.lang.Object)": 47877.0,
        "org.jfree.data.xy$XYDataItem#equals(java.lang.Object)": 263.0,
        "org.jfree.data.xy$XYDataItem#getX()": 39897.0,
        "org.jfree.data.xy$XYDataItem#getXValue()": 301.0,
        "org.jfree.data.xy$XYDataItem#getY()": 137.0,
        "org.jfree.data.xy$XYDataItem#getYValue()": 301.0,
        "org.jfree.data.xy$XYDataItem#hashCode()": 299.0,
        "org.jfree.data.xy$XYDataItem#setY(double)": 301.0,
        "org.jfree.data.xy$XYDataItem#setY(java.lang.Number)": 291.0,
        "org.jfree.data.xy$XYDataItem#toString()": 301.0,
        "org.jfree.data.xy$XYSeries#XYSeries(java.lang.Comparable)": 127.0,
        "org.jfree.data.xy$XYSeries#XYSeries(java.lang.Comparable,boolean)": 301.0,
        "org.jfree.data.xy$XYSeries#XYSeries(java.lang.Comparable,boolean,boolean)": 32277.0,
        "org.jfree.data.xy$XYSeries#add(double,double)": 79.0,
        "org.jfree.data.xy$XYSeries#add(double,double,boolean)": 301.0,
        "org.jfree.data.xy$XYSeries#add(double,java.lang.Number)": 269.0,
        "org.jfree.data.xy$XYSeries#add(double,java.lang.Number,boolean)": 301.0,
        "org.jfree.data.xy$XYSeries#add(java.lang.Number,java.lang.Number)": 259.0,
        "org.jfree.data.xy$XYSeries#add(java.lang.Number,java.lang.Number,boolean)": 77.0,
        "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem)": 301.0,
        "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem,boolean)": 77.0,
        "org.jfree.data.xy$XYSeries#addOrUpdate(double,double)": 90599.0,
        "org.jfree.data.xy$XYSeries#addOrUpdate(java.lang.Number,java.lang.Number)": 89397.0,
        "org.jfree.data.xy$XYSeries#clear()": 299.0,
        "org.jfree.data.xy$XYSeries#clone()": 289.0,
        "org.jfree.data.xy$XYSeries#createCopy(int,int)": 301.0,
        "org.jfree.data.xy$XYSeries#delete(int,int)": 301.0,
        "org.jfree.data.xy$XYSeries#equals(java.lang.Object)": 261.0,
        "org.jfree.data.xy$XYSeries#getAllowDuplicateXValues()": 247.0,
        "org.jfree.data.xy$XYSeries#getAutoSort()": 301.0,
        "org.jfree.data.xy$XYSeries#getDataItem(int)": 101.0,
        "org.jfree.data.xy$XYSeries#getItemCount()": 34853.0,
        "org.jfree.data.xy$XYSeries#getItems()": 301.0,
        "org.jfree.data.xy$XYSeries#getMaximumItemCount()": 299.0,
        "org.jfree.data.xy$XYSeries#getX(int)": 239.0,
        "org.jfree.data.xy$XYSeries#getY(int)": 279.0,
        "org.jfree.data.xy$XYSeries#hashCode()": 299.0,
        "org.jfree.data.xy$XYSeries#indexOf(java.lang.Number)": 80637.0,
        "org.jfree.data.xy$XYSeries#remove(int)": 293.0,
        "org.jfree.data.xy$XYSeries#remove(java.lang.Number)": 293.0,
        "org.jfree.data.xy$XYSeries#setMaximumItemCount(int)": 297.0,
        "org.jfree.data.xy$XYSeries#toArray()": 297.0,
        "org.jfree.data.xy$XYSeries#update(java.lang.Number,java.lang.Number)": 297.0,
        "org.jfree.data.xy$XYSeries#updateByIndex(int,java.lang.Number)": 301.0
    },
    "Chart-6": {
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList()": 205592.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int)": 205592.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int,int)": 205592.0,
        "org.jfree.chart.util$AbstractObjectList#clear()": 974.0,
        "org.jfree.chart.util$AbstractObjectList#clone()": 828.0,
        "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)": 513828.0,
        "org.jfree.chart.util$AbstractObjectList#get(int)": 545882.0,
        "org.jfree.chart.util$AbstractObjectList#hashCode()": 862992.0,
        "org.jfree.chart.util$AbstractObjectList#indexOf(java.lang.Object)": 632.0,
        "org.jfree.chart.util$AbstractObjectList#readObject(java.io.ObjectInputStream)": 806324.0,
        "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)": 541454.0,
        "org.jfree.chart.util$AbstractObjectList#size()": 298778.0,
        "org.jfree.chart.util$AbstractObjectList#writeObject(java.io.ObjectOutputStream)": 806324.0,
        "org.jfree.chart.util$ObjectUtilities#<clinit>()": 48084.0,
        "org.jfree.chart.util$ObjectUtilities#ObjectUtilities()": 974.0,
        "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)": 750.0,
        "org.jfree.chart.util$ObjectUtilities#convertName(java.lang.String,java.lang.Class)": 974.0,
        "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)": 866.0,
        "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)": 82254.0,
        "org.jfree.chart.util$ObjectUtilities#getClassLoader()": 974.0,
        "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)": 840.0,
        "org.jfree.chart.util$ObjectUtilities#getClassLoaderSource()": 974.0,
        "org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)": 974.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceAsStream(java.lang.String,java.lang.Class)": 974.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)": 974.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)": 974.0,
        "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)": 956.0,
        "org.jfree.chart.util$ObjectUtilities#isJDK14()": 840.0,
        "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class)": 974.0,
        "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class,java.lang.Class)": 974.0,
        "org.jfree.chart.util$ObjectUtilities#parseVersions(java.lang.String)": 974.0,
        "org.jfree.chart.util$ObjectUtilities#setClassLoader(java.lang.ClassLoader)": 974.0,
        "org.jfree.chart.util$ObjectUtilities#setClassLoaderSource(java.lang.String)": 974.0,
        "org.jfree.chart.util$SerialUtilities#SerialUtilities()": 974.0,
        "org.jfree.chart.util$SerialUtilities#isSerializable(java.lang.Class)": 684.0,
        "org.jfree.chart.util$SerialUtilities#readAttributedString(java.io.ObjectInputStream)": 962.0,
        "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)": 668.0,
        "org.jfree.chart.util$SerialUtilities#readPoint2D(java.io.ObjectInputStream)": 956.0,
        "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)": 730902.0,
        "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)": 708.0,
        "org.jfree.chart.util$SerialUtilities#writeAttributedString(java.text.AttributedString,java.io.ObjectOutputStream)": 962.0,
        "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)": 668.0,
        "org.jfree.chart.util$SerialUtilities#writePoint2D(java.awt.geom.Point2D,java.io.ObjectOutputStream)": 956.0,
        "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)": 730902.0,
        "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)": 708.0,
        "org.jfree.chart.util$ShapeList#ShapeList()": 298778.0,
        "org.jfree.chart.util$ShapeList#clone()": 848.0,
        "org.jfree.chart.util$ShapeList#equals(java.lang.Object)": 569802.0,
        "org.jfree.chart.util$ShapeList#getShape(int)": 912002.0,
        "org.jfree.chart.util$ShapeList#hashCode()": 952574.0,
        "org.jfree.chart.util$ShapeList#readObject(java.io.ObjectInputStream)": 829854.0,
        "org.jfree.chart.util$ShapeList#setShape(int,java.awt.Shape)": 904374.0,
        "org.jfree.chart.util$ShapeList#writeObject(java.io.ObjectOutputStream)": 829854.0,
        "org.jfree.chart.util$ShapeUtilities#<clinit>()": 432.0,
        "org.jfree.chart.util$ShapeUtilities#ShapeUtilities()": 974.0,
        "org.jfree.chart.util$ShapeUtilities#clone(java.awt.Shape)": 808.0,
        "org.jfree.chart.util$ShapeUtilities#contains(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)": 974.0,
        "org.jfree.chart.util$ShapeUtilities#createDiagonalCross(float,float)": 974.0,
        "org.jfree.chart.util$ShapeUtilities#createDiamond(float)": 974.0,
        "org.jfree.chart.util$ShapeUtilities#createDownTriangle(float)": 974.0,
        "org.jfree.chart.util$ShapeUtilities#createLineRegion(java.awt.geom.Line2D,float)": 974.0,
        "org.jfree.chart.util$ShapeUtilities#createRegularCross(float,float)": 974.0,
        "org.jfree.chart.util$ShapeUtilities#createTranslatedShape(java.awt.Shape,double,double)": 960.0,
        "org.jfree.chart.util$ShapeUtilities#createTranslatedShape(java.awt.Shape,org.jfree.chart.util.RectangleAnchor,double,double)": 872.0,
        "org.jfree.chart.util$ShapeUtilities#createUpTriangle(float)": 974.0,
        "org.jfree.chart.util$ShapeUtilities#drawRotatedShape(java.awt.Graphics2D,java.awt.Shape,double,float,float)": 974.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Polygon,java.awt.Polygon)": 814.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)": 650.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Arc2D,java.awt.geom.Arc2D)": 968.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Ellipse2D,java.awt.geom.Ellipse2D)": 814.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.GeneralPath,java.awt.geom.GeneralPath)": 940.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Line2D,java.awt.geom.Line2D)": 864.0,
        "org.jfree.chart.util$ShapeUtilities#getPointInRectangle(double,double,java.awt.geom.Rectangle2D)": 974.0,
        "org.jfree.chart.util$ShapeUtilities#intersects(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)": 972.0,
        "org.jfree.chart.util$ShapeUtilities#rotateShape(java.awt.Shape,double,float,float)": 910.0
    },
    "Chart-7": {
        "org.jfree.data.general$Series#Series(java.lang.Comparable)": 58766.0,
        "org.jfree.data.general$Series#Series(java.lang.Comparable,java.lang.String)": 58766.0,
        "org.jfree.data.general$Series#addChangeListener(org.jfree.data.general.SeriesChangeListener)": 190.0,
        "org.jfree.data.general$Series#addPropertyChangeListener(java.beans.PropertyChangeListener)": 524.0,
        "org.jfree.data.general$Series#clone()": 476.0,
        "org.jfree.data.general$Series#equals(java.lang.Object)": 374.0,
        "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)": 522.0,
        "org.jfree.data.general$Series#fireSeriesChanged()": 69434.0,
        "org.jfree.data.general$Series#getDescription()": 386.0,
        "org.jfree.data.general$Series#getKey()": 274.0,
        "org.jfree.data.general$Series#getNotify()": 524.0,
        "org.jfree.data.general$Series#hashCode()": 518.0,
        "org.jfree.data.general$Series#isEmpty()": 514.0,
        "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)": 69434.0,
        "org.jfree.data.general$Series#removeChangeListener(org.jfree.data.general.SeriesChangeListener)": 500.0,
        "org.jfree.data.general$Series#removePropertyChangeListener(java.beans.PropertyChangeListener)": 524.0,
        "org.jfree.data.general$Series#setDescription(java.lang.String)": 512.0,
        "org.jfree.data.general$Series#setKey(java.lang.Comparable)": 514.0,
        "org.jfree.data.general$Series#setNotify(boolean)": 524.0,
        "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)": 69434.0,
        "org.jfree.data.general$SeriesException#SeriesException(java.lang.String)": 520.0,
        "org.jfree.data.time$Day#<clinit>()": 234.0,
        "org.jfree.data.time$Day#Day()": 500.0,
        "org.jfree.data.time$Day#Day(int,int,int)": 320.0,
        "org.jfree.data.time$Day#Day(java.util.Date)": 496.0,
        "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)": 458.0,
        "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)": 496.0,
        "org.jfree.data.time$Day#compareTo(java.lang.Object)": 504.0,
        "org.jfree.data.time$Day#equals(java.lang.Object)": 474.0,
        "org.jfree.data.time$Day#getDayOfMonth()": 356.0,
        "org.jfree.data.time$Day#getFirstMillisecond()": 496.0,
        "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)": 254.0,
        "org.jfree.data.time$Day#getLastMillisecond()": 496.0,
        "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)": 254.0,
        "org.jfree.data.time$Day#getMonth()": 356.0,
        "org.jfree.data.time$Day#getSerialDate()": 464.0,
        "org.jfree.data.time$Day#getSerialIndex()": 496.0,
        "org.jfree.data.time$Day#getYear()": 360.0,
        "org.jfree.data.time$Day#hashCode()": 512.0,
        "org.jfree.data.time$Day#next()": 486.0,
        "org.jfree.data.time$Day#parseDay(java.lang.String)": 520.0,
        "org.jfree.data.time$Day#peg(java.util.Calendar)": 254.0,
        "org.jfree.data.time$Day#previous()": 516.0,
        "org.jfree.data.time$Day#toString()": 524.0,
        "org.jfree.data.time$RegularTimePeriod#<clinit>()": 56356.0,
        "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()": 60236.0,
        "org.jfree.data.time$RegularTimePeriod#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone)": 522.0,
        "org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)": 516.0,
        "org.jfree.data.time$RegularTimePeriod#getEnd()": 256016.0,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()": 488.0,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)": 522.0,
        "org.jfree.data.time$RegularTimePeriod#getStart()": 256016.0,
        "org.jfree.data.time$RegularTimePeriod#toString()": 524.0,
        "org.jfree.data.time$SimpleTimePeriod#SimpleTimePeriod(java.util.Date,java.util.Date)": 450.0,
        "org.jfree.data.time$SimpleTimePeriod#SimpleTimePeriod(long,long)": 233246.0,
        "org.jfree.data.time$SimpleTimePeriod#compareTo(java.lang.Object)": 522.0,
        "org.jfree.data.time$SimpleTimePeriod#equals(java.lang.Object)": 500.0,
        "org.jfree.data.time$SimpleTimePeriod#getEnd()": 253994.0,
        "org.jfree.data.time$SimpleTimePeriod#getEndMillis()": 524.0,
        "org.jfree.data.time$SimpleTimePeriod#getStart()": 252986.0,
        "org.jfree.data.time$SimpleTimePeriod#getStartMillis()": 524.0,
        "org.jfree.data.time$SimpleTimePeriod#hashCode()": 522.0,
        "org.jfree.data.time$TimePeriodFormatException#TimePeriodFormatException(java.lang.String)": 520.0,
        "org.jfree.data.time$TimePeriodValue#TimePeriodValue(org.jfree.data.time.TimePeriod,double)": 262130.0,
        "org.jfree.data.time$TimePeriodValue#TimePeriodValue(org.jfree.data.time.TimePeriod,java.lang.Number)": 260084.0,
        "org.jfree.data.time$TimePeriodValue#clone()": 522.0,
        "org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)": 514.0,
        "org.jfree.data.time$TimePeriodValue#getPeriod()": 263156.0,
        "org.jfree.data.time$TimePeriodValue#getValue()": 518.0,
        "org.jfree.data.time$TimePeriodValue#hashCode()": 524.0,
        "org.jfree.data.time$TimePeriodValue#setValue(java.lang.Number)": 522.0,
        "org.jfree.data.time$TimePeriodValue#toString()": 524.0,
        "org.jfree.data.time$TimePeriodValues#TimePeriodValues(java.lang.Comparable)": 261106.0,
        "org.jfree.data.time$TimePeriodValues#TimePeriodValues(java.lang.Comparable,java.lang.String,java.lang.String)": 261106.0,
        "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)": 266246.0,
        "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,java.lang.Number)": 266246.0,
        "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)": 263156.0,
        "org.jfree.data.time$TimePeriodValues#clone()": 522.0,
        "org.jfree.data.time$TimePeriodValues#createCopy(int,int)": 522.0,
        "org.jfree.data.time$TimePeriodValues#delete(int,int)": 522.0,
        "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)": 514.0,
        "org.jfree.data.time$TimePeriodValues#getDataItem(int)": 263156.0,
        "org.jfree.data.time$TimePeriodValues#getDomainDescription()": 518.0,
        "org.jfree.data.time$TimePeriodValues#getItemCount()": 510.0,
        "org.jfree.data.time$TimePeriodValues#getMaxEndIndex()": 520.0,
        "org.jfree.data.time$TimePeriodValues#getMaxMiddleIndex()": 274574.0,
        "org.jfree.data.time$TimePeriodValues#getMaxStartIndex()": 522.0,
        "org.jfree.data.time$TimePeriodValues#getMinEndIndex()": 524.0,
        "org.jfree.data.time$TimePeriodValues#getMinMiddleIndex()": 520.0,
        "org.jfree.data.time$TimePeriodValues#getMinStartIndex()": 518.0,
        "org.jfree.data.time$TimePeriodValues#getRangeDescription()": 518.0,
        "org.jfree.data.time$TimePeriodValues#getTimePeriod(int)": 520.0,
        "org.jfree.data.time$TimePeriodValues#getValue(int)": 518.0,
        "org.jfree.data.time$TimePeriodValues#hashCode()": 524.0,
        "org.jfree.data.time$TimePeriodValues#recalculateBounds()": 522.0,
        "org.jfree.data.time$TimePeriodValues#setDomainDescription(java.lang.String)": 522.0,
        "org.jfree.data.time$TimePeriodValues#setRangeDescription(java.lang.String)": 522.0,
        "org.jfree.data.time$TimePeriodValues#update(int,java.lang.Number)": 522.0,
        "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)": 263156.0,
        "org.jfree.data.time$Year#Year()": 522.0,
        "org.jfree.data.time$Year#Year(int)": 196166.0,
        "org.jfree.data.time$Year#Year(java.util.Date)": 522.0,
        "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone)": 516.0,
        "org.jfree.data.time$Year#compareTo(java.lang.Object)": 460.0,
        "org.jfree.data.time$Year#equals(java.lang.Object)": 464.0,
        "org.jfree.data.time$Year#getFirstMillisecond()": 261106.0,
        "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)": 193514.0,
        "org.jfree.data.time$Year#getLastMillisecond()": 261106.0,
        "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)": 193514.0,
        "org.jfree.data.time$Year#getSerialIndex()": 478.0,
        "org.jfree.data.time$Year#getYear()": 404.0,
        "org.jfree.data.time$Year#hashCode()": 522.0,
        "org.jfree.data.time$Year#next()": 518.0,
        "org.jfree.data.time$Year#parseYear(java.lang.String)": 518.0,
        "org.jfree.data.time$Year#peg(java.util.Calendar)": 193514.0,
        "org.jfree.data.time$Year#previous()": 520.0,
        "org.jfree.data.time$Year#toString()": 524.0
    },
    "Chart-8": {
        "org.jfree.data.time$RegularTimePeriod#<clinit>()": -288.0,
        "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()": -216.0,
        "org.jfree.data.time$RegularTimePeriod#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone)": 284.0,
        "org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)": 278.0,
        "org.jfree.data.time$RegularTimePeriod#getEnd()": 246.0,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()": 250.0,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)": 284.0,
        "org.jfree.data.time$RegularTimePeriod#getStart()": 246.0,
        "org.jfree.data.time$RegularTimePeriod#toString()": 286.0,
        "org.jfree.data.time$TimePeriodFormatException#TimePeriodFormatException(java.lang.String)": 282.0,
        "org.jfree.data.time$Week#Week()": 286.0,
        "org.jfree.data.time$Week#Week(int,int)": 70202.0,
        "org.jfree.data.time$Week#Week(int,org.jfree.data.time.Year)": 286.0,
        "org.jfree.data.time$Week#Week(java.util.Date)": 286.0,
        "org.jfree.data.time$Week#Week(java.util.Date,java.util.TimeZone)": 81222.0,
        "org.jfree.data.time$Week#Week(java.util.Date,java.util.TimeZone,java.util.Locale)": 81222.0,
        "org.jfree.data.time$Week#compareTo(java.lang.Object)": 286.0,
        "org.jfree.data.time$Week#equals(java.lang.Object)": 276.0,
        "org.jfree.data.time$Week#evaluateAsYear(java.lang.String)": 286.0,
        "org.jfree.data.time$Week#findSeparator(java.lang.String)": 286.0,
        "org.jfree.data.time$Week#getFirstMillisecond()": 282.0,
        "org.jfree.data.time$Week#getFirstMillisecond(java.util.Calendar)": 70202.0,
        "org.jfree.data.time$Week#getLastMillisecond()": 282.0,
        "org.jfree.data.time$Week#getLastMillisecond(java.util.Calendar)": 70202.0,
        "org.jfree.data.time$Week#getSerialIndex()": 284.0,
        "org.jfree.data.time$Week#getWeek()": 80652.0,
        "org.jfree.data.time$Week#getYear()": 282.0,
        "org.jfree.data.time$Week#getYearValue()": 284.0,
        "org.jfree.data.time$Week#hashCode()": 284.0,
        "org.jfree.data.time$Week#next()": 280.0,
        "org.jfree.data.time$Week#parseWeek(java.lang.String)": 286.0,
        "org.jfree.data.time$Week#peg(java.util.Calendar)": 70202.0,
        "org.jfree.data.time$Week#previous()": 282.0,
        "org.jfree.data.time$Week#stringToWeek(java.lang.String)": 286.0,
        "org.jfree.data.time$Week#toString()": 286.0
    },
    "Chart-9": {
        "org.jfree.data.general$Series#Series(java.lang.Comparable)": 53541.0,
        "org.jfree.data.general$Series#Series(java.lang.Comparable,java.lang.String)": 53541.0,
        "org.jfree.data.general$Series#addChangeListener(org.jfree.data.general.SeriesChangeListener)": 179.0,
        "org.jfree.data.general$Series#addPropertyChangeListener(java.beans.PropertyChangeListener)": 513.0,
        "org.jfree.data.general$Series#clone()": 467.0,
        "org.jfree.data.general$Series#equals(java.lang.Object)": 363.0,
        "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)": 511.0,
        "org.jfree.data.general$Series#fireSeriesChanged()": 63747.0,
        "org.jfree.data.general$Series#getDescription()": 375.0,
        "org.jfree.data.general$Series#getKey()": 263.0,
        "org.jfree.data.general$Series#getNotify()": 513.0,
        "org.jfree.data.general$Series#hashCode()": 507.0,
        "org.jfree.data.general$Series#isEmpty()": 503.0,
        "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)": 63747.0,
        "org.jfree.data.general$Series#removeChangeListener(org.jfree.data.general.SeriesChangeListener)": 489.0,
        "org.jfree.data.general$Series#removePropertyChangeListener(java.beans.PropertyChangeListener)": 513.0,
        "org.jfree.data.general$Series#setDescription(java.lang.String)": 501.0,
        "org.jfree.data.general$Series#setKey(java.lang.Comparable)": 503.0,
        "org.jfree.data.general$Series#setNotify(boolean)": 513.0,
        "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)": 63747.0,
        "org.jfree.data.general$SeriesException#SeriesException(java.lang.String)": 509.0,
        "org.jfree.data.time$Day#<clinit>()": 136755.0,
        "org.jfree.data.time$Day#Day()": 489.0,
        "org.jfree.data.time$Day#Day(int,int,int)": 170467.0,
        "org.jfree.data.time$Day#Day(java.util.Date)": 485.0,
        "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)": 447.0,
        "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)": 485.0,
        "org.jfree.data.time$Day#compareTo(java.lang.Object)": 255015.0,
        "org.jfree.data.time$Day#equals(java.lang.Object)": 463.0,
        "org.jfree.data.time$Day#getDayOfMonth()": 345.0,
        "org.jfree.data.time$Day#getFirstMillisecond()": 485.0,
        "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)": 144265.0,
        "org.jfree.data.time$Day#getLastMillisecond()": 485.0,
        "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)": 144265.0,
        "org.jfree.data.time$Day#getMonth()": 345.0,
        "org.jfree.data.time$Day#getSerialDate()": 235195.0,
        "org.jfree.data.time$Day#getSerialIndex()": 250987.0,
        "org.jfree.data.time$Day#getYear()": 349.0,
        "org.jfree.data.time$Day#hashCode()": 501.0,
        "org.jfree.data.time$Day#next()": 475.0,
        "org.jfree.data.time$Day#parseDay(java.lang.String)": 509.0,
        "org.jfree.data.time$Day#peg(java.util.Calendar)": 144265.0,
        "org.jfree.data.time$Day#previous()": 505.0,
        "org.jfree.data.time$Day#toString()": 513.0,
        "org.jfree.data.time$FixedMillisecond#FixedMillisecond()": 511.0,
        "org.jfree.data.time$FixedMillisecond#FixedMillisecond(java.util.Date)": 503.0,
        "org.jfree.data.time$FixedMillisecond#FixedMillisecond(long)": 507.0,
        "org.jfree.data.time$FixedMillisecond#compareTo(java.lang.Object)": 511.0,
        "org.jfree.data.time$FixedMillisecond#equals(java.lang.Object)": 509.0,
        "org.jfree.data.time$FixedMillisecond#getFirstMillisecond()": 507.0,
        "org.jfree.data.time$FixedMillisecond#getFirstMillisecond(java.util.Calendar)": 513.0,
        "org.jfree.data.time$FixedMillisecond#getLastMillisecond()": 513.0,
        "org.jfree.data.time$FixedMillisecond#getLastMillisecond(java.util.Calendar)": 513.0,
        "org.jfree.data.time$FixedMillisecond#getMiddleMillisecond()": 513.0,
        "org.jfree.data.time$FixedMillisecond#getMiddleMillisecond(java.util.Calendar)": 513.0,
        "org.jfree.data.time$FixedMillisecond#getSerialIndex()": 513.0,
        "org.jfree.data.time$FixedMillisecond#getTime()": 513.0,
        "org.jfree.data.time$FixedMillisecond#hashCode()": 511.0,
        "org.jfree.data.time$FixedMillisecond#next()": 513.0,
        "org.jfree.data.time$FixedMillisecond#peg(java.util.Calendar)": 513.0,
        "org.jfree.data.time$FixedMillisecond#previous()": 513.0,
        "org.jfree.data.time$Month#Month()": 511.0,
        "org.jfree.data.time$Month#Month(int,int)": 459.0,
        "org.jfree.data.time$Month#Month(int,org.jfree.data.time.Year)": 511.0,
        "org.jfree.data.time$Month#Month(java.util.Date)": 511.0,
        "org.jfree.data.time$Month#Month(java.util.Date,java.util.TimeZone)": 501.0,
        "org.jfree.data.time$Month#compareTo(java.lang.Object)": 507.0,
        "org.jfree.data.time$Month#equals(java.lang.Object)": 499.0,
        "org.jfree.data.time$Month#evaluateAsYear(java.lang.String)": 511.0,
        "org.jfree.data.time$Month#findSeparator(java.lang.String)": 511.0,
        "org.jfree.data.time$Month#getFirstMillisecond()": 503.0,
        "org.jfree.data.time$Month#getFirstMillisecond(java.util.Calendar)": 457.0,
        "org.jfree.data.time$Month#getLastMillisecond()": 505.0,
        "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)": 457.0,
        "org.jfree.data.time$Month#getMonth()": 487.0,
        "org.jfree.data.time$Month#getSerialIndex()": 505.0,
        "org.jfree.data.time$Month#getYear()": 509.0,
        "org.jfree.data.time$Month#getYearValue()": 495.0,
        "org.jfree.data.time$Month#hashCode()": 511.0,
        "org.jfree.data.time$Month#next()": 507.0,
        "org.jfree.data.time$Month#parseMonth(java.lang.String)": 511.0,
        "org.jfree.data.time$Month#peg(java.util.Calendar)": 457.0,
        "org.jfree.data.time$Month#previous()": 507.0,
        "org.jfree.data.time$Month#toString()": 513.0,
        "org.jfree.data.time$RegularTimePeriod#<clinit>()": 51241.0,
        "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()": 54945.0,
        "org.jfree.data.time$RegularTimePeriod#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone)": 511.0,
        "org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)": 505.0,
        "org.jfree.data.time$RegularTimePeriod#getEnd()": 473.0,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()": 477.0,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)": 511.0,
        "org.jfree.data.time$RegularTimePeriod#getStart()": 473.0,
        "org.jfree.data.time$RegularTimePeriod#toString()": 513.0,
        "org.jfree.data.time$SerialDate#<clinit>()": 108055.0,
        "org.jfree.data.time$SerialDate#SerialDate()": 144265.0,
        "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)": 513.0,
        "org.jfree.data.time$SerialDate#addMonths(int,org.jfree.data.time.SerialDate)": 513.0,
        "org.jfree.data.time$SerialDate#addYears(int,org.jfree.data.time.SerialDate)": 513.0,
        "org.jfree.data.time$SerialDate#createInstance(int)": 485.0,
        "org.jfree.data.time$SerialDate#createInstance(int,int,int)": 144265.0,
        "org.jfree.data.time$SerialDate#createInstance(java.util.Date)": 513.0,
        "org.jfree.data.time$SerialDate#getDescription()": 513.0,
        "org.jfree.data.time$SerialDate#getEndOfCurrentMonth(org.jfree.data.time.SerialDate)": 513.0,
        "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int)": 513.0,
        "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int,org.jfree.data.time.SerialDate)": 513.0,
        "org.jfree.data.time$SerialDate#getMonths()": 513.0,
        "org.jfree.data.time$SerialDate#getMonths(boolean)": 513.0,
        "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int)": 513.0,
        "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int,org.jfree.data.time.SerialDate)": 513.0,
        "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int)": 513.0,
        "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int,org.jfree.data.time.SerialDate)": 513.0,
        "org.jfree.data.time$SerialDate#isLeapYear(int)": 145027.0,
        "org.jfree.data.time$SerialDate#isValidMonthCode(int)": 513.0,
        "org.jfree.data.time$SerialDate#isValidWeekInMonthCode(int)": 513.0,
        "org.jfree.data.time$SerialDate#isValidWeekdayCode(int)": 513.0,
        "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)": 108055.0,
        "org.jfree.data.time$SerialDate#leapYearCount(int)": 144265.0,
        "org.jfree.data.time$SerialDate#monthCodeToQuarter(int)": 507.0,
        "org.jfree.data.time$SerialDate#monthCodeToString(int)": 513.0,
        "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)": 513.0,
        "org.jfree.data.time$SerialDate#relativeToString(int)": 513.0,
        "org.jfree.data.time$SerialDate#setDescription(java.lang.String)": 513.0,
        "org.jfree.data.time$SerialDate#stringToMonthCode(java.lang.String)": 511.0,
        "org.jfree.data.time$SerialDate#stringToWeekdayCode(java.lang.String)": 513.0,
        "org.jfree.data.time$SerialDate#toString()": 513.0,
        "org.jfree.data.time$SerialDate#weekInMonthToString(int)": 513.0,
        "org.jfree.data.time$SerialDate#weekdayCodeToString(int)": 513.0,
        "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int)": 485.0,
        "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int,int,int)": 144265.0,
        "org.jfree.data.time$SpreadsheetDate#calcSerial(int,int,int)": 144265.0,
        "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)": 255015.0,
        "org.jfree.data.time$SpreadsheetDate#compareTo(java.lang.Object)": 513.0,
        "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)": 471.0,
        "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()": 144265.0,
        "org.jfree.data.time$SpreadsheetDate#getDayOfWeek()": 513.0,
        "org.jfree.data.time$SpreadsheetDate#getMonth()": 144265.0,
        "org.jfree.data.time$SpreadsheetDate#getYYYY()": 144265.0,
        "org.jfree.data.time$SpreadsheetDate#hashCode()": 501.0,
        "org.jfree.data.time$SpreadsheetDate#isAfter(org.jfree.data.time.SerialDate)": 513.0,
        "org.jfree.data.time$SpreadsheetDate#isBefore(org.jfree.data.time.SerialDate)": 513.0,
        "org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate)": 513.0,
        "org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate,int)": 513.0,
        "org.jfree.data.time$SpreadsheetDate#isOn(org.jfree.data.time.SerialDate)": 513.0,
        "org.jfree.data.time$SpreadsheetDate#isOnOrAfter(org.jfree.data.time.SerialDate)": 513.0,
        "org.jfree.data.time$SpreadsheetDate#isOnOrBefore(org.jfree.data.time.SerialDate)": 513.0,
        "org.jfree.data.time$SpreadsheetDate#toDate()": 513.0,
        "org.jfree.data.time$SpreadsheetDate#toSerial()": 212467.0,
        "org.jfree.data.time$TimePeriodFormatException#TimePeriodFormatException(java.lang.String)": 509.0,
        "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable)": 252997.0,
        "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable,java.lang.Class)": 239095.0,
        "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable,java.lang.String,java.lang.String,java.lang.Class)": 233257.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)": 244015.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)": 244015.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 242041.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)": 242041.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)": 507.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)": 237141.0,
        "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)": 511.0,
        "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)": 509.0,
        "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 507.0,
        "org.jfree.data.time$TimeSeries#clear()": 513.0,
        "org.jfree.data.time$TimeSeries#clone()": 507.0,
        "org.jfree.data.time$TimeSeries#createCopy(int,int)": 262141.0,
        "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)": 263167.0,
        "org.jfree.data.time$TimeSeries#delete(int,int)": 509.0,
        "org.jfree.data.time$TimeSeries#delete(org.jfree.data.time.RegularTimePeriod)": 511.0,
        "org.jfree.data.time$TimeSeries#equals(java.lang.Object)": 493.0,
        "org.jfree.data.time$TimeSeries#getDataItem(int)": 237141.0,
        "org.jfree.data.time$TimeSeries#getDataItem(org.jfree.data.time.RegularTimePeriod)": 511.0,
        "org.jfree.data.time$TimeSeries#getDomainDescription()": 497.0,
        "org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)": 256027.0,
        "org.jfree.data.time$TimeSeries#getItemCount()": 236167.0,
        "org.jfree.data.time$TimeSeries#getItems()": 513.0,
        "org.jfree.data.time$TimeSeries#getMaximumItemAge()": 493.0,
        "org.jfree.data.time$TimeSeries#getMaximumItemCount()": 493.0,
        "org.jfree.data.time$TimeSeries#getNextTimePeriod()": 513.0,
        "org.jfree.data.time$TimeSeries#getRangeDescription()": 497.0,
        "org.jfree.data.time$TimeSeries#getTimePeriod(int)": 237141.0,
        "org.jfree.data.time$TimeSeries#getTimePeriodClass()": 509.0,
        "org.jfree.data.time$TimeSeries#getTimePeriods()": 513.0,
        "org.jfree.data.time$TimeSeries#getTimePeriodsUniqueToOtherSeries(org.jfree.data.time.TimeSeries)": 513.0,
        "org.jfree.data.time$TimeSeries#getValue(int)": 505.0,
        "org.jfree.data.time$TimeSeries#getValue(org.jfree.data.time.RegularTimePeriod)": 505.0,
        "org.jfree.data.time$TimeSeries#hashCode()": 511.0,
        "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)": 237141.0,
        "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)": 511.0,
        "org.jfree.data.time$TimeSeries#setDomainDescription(java.lang.String)": 513.0,
        "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)": 507.0,
        "org.jfree.data.time$TimeSeries#setMaximumItemCount(int)": 507.0,
        "org.jfree.data.time$TimeSeries#setRangeDescription(java.lang.String)": 513.0,
        "org.jfree.data.time$TimeSeries#update(int,java.lang.Number)": 513.0,
        "org.jfree.data.time$TimeSeries#update(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 511.0,
        "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,double)": 237141.0,
        "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 234225.0,
        "org.jfree.data.time$TimeSeriesDataItem#clone()": 501.0,
        "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)": 250987.0,
        "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)": 497.0,
        "org.jfree.data.time$TimeSeriesDataItem#getPeriod()": 237141.0,
        "org.jfree.data.time$TimeSeriesDataItem#getValue()": 501.0,
        "org.jfree.data.time$TimeSeriesDataItem#hashCode()": 511.0,
        "org.jfree.data.time$TimeSeriesDataItem#setValue(java.lang.Number)": 503.0,
        "org.jfree.data.time$Year#Year()": 511.0,
        "org.jfree.data.time$Year#Year(int)": 186541.0,
        "org.jfree.data.time$Year#Year(java.util.Date)": 511.0,
        "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone)": 505.0,
        "org.jfree.data.time$Year#compareTo(java.lang.Object)": 233257.0,
        "org.jfree.data.time$Year#equals(java.lang.Object)": 453.0,
        "org.jfree.data.time$Year#getFirstMillisecond()": 483.0,
        "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)": 183955.0,
        "org.jfree.data.time$Year#getLastMillisecond()": 483.0,
        "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)": 183955.0,
        "org.jfree.data.time$Year#getSerialIndex()": 242041.0,
        "org.jfree.data.time$Year#getYear()": 206965.0,
        "org.jfree.data.time$Year#hashCode()": 511.0,
        "org.jfree.data.time$Year#next()": 507.0,
        "org.jfree.data.time$Year#parseYear(java.lang.String)": 507.0,
        "org.jfree.data.time$Year#peg(java.util.Calendar)": 183955.0,
        "org.jfree.data.time$Year#previous()": 509.0,
        "org.jfree.data.time$Year#toString()": 513.0
    },
    "Lang-1": {
        "org.apache.commons.lang3$StringUtils#<clinit>()": 5363.0,
        "org.apache.commons.lang3$StringUtils#StringUtils()": 485.0,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int)": 483.0,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int,int)": 483.0,
        "org.apache.commons.lang3$StringUtils#abbreviateMiddle(java.lang.String,java.lang.String,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])": 483.0,
        "org.apache.commons.lang3$StringUtils#appendIfMissing(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])": 485.0,
        "org.apache.commons.lang3$StringUtils#appendIfMissingIgnoreCase(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])": 485.0,
        "org.apache.commons.lang3$StringUtils#capitalize(java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,char)": 483.0,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String,java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#chop(java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,java.lang.CharSequence)": 479.0,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,char[])": 471.0,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,java.lang.CharSequence)": 481.0,
        "org.apache.commons.lang3$StringUtils#containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 483.0,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,char[])": 469.0,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,java.lang.String)": 481.0,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,char[])": 477.0,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#containsWhitespace(java.lang.CharSequence)": 485.0,
        "org.apache.commons.lang3$StringUtils#countMatches(java.lang.CharSequence,java.lang.CharSequence)": 485.0,
        "org.apache.commons.lang3$StringUtils#defaultIfBlank(java.lang.CharSequence,java.lang.CharSequence)": 479.0,
        "org.apache.commons.lang3$StringUtils#defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence)": 479.0,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String)": 481.0,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String,java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#deleteWhitespace(java.lang.String)": 457.0,
        "org.apache.commons.lang3$StringUtils#difference(java.lang.String,java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence)": 483.0,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 475.0,
        "org.apache.commons.lang3$StringUtils#endsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 485.0,
        "org.apache.commons.lang3$StringUtils#endsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 483.0,
        "org.apache.commons.lang3$StringUtils#equals(java.lang.CharSequence,java.lang.CharSequence)": 453.0,
        "org.apache.commons.lang3$StringUtils#equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 485.0,
        "org.apache.commons.lang3$StringUtils#getCommonPrefix(java.lang.String[])": 485.0,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)": 485.0,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence)": 485.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,char[])": 479.0,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 485.0,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.String)": 483.0,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,char[])": 473.0,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)": 483.0,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)": 483.0,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence[])": 483.0,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 485.0,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 483.0,
        "org.apache.commons.lang3$StringUtils#isAllLowerCase(java.lang.CharSequence)": 485.0,
        "org.apache.commons.lang3$StringUtils#isAllUpperCase(java.lang.CharSequence)": 485.0,
        "org.apache.commons.lang3$StringUtils#isAlpha(java.lang.CharSequence)": 485.0,
        "org.apache.commons.lang3$StringUtils#isAlphaSpace(java.lang.CharSequence)": 485.0,
        "org.apache.commons.lang3$StringUtils#isAlphanumeric(java.lang.CharSequence)": 485.0,
        "org.apache.commons.lang3$StringUtils#isAlphanumericSpace(java.lang.CharSequence)": 485.0,
        "org.apache.commons.lang3$StringUtils#isAsciiPrintable(java.lang.CharSequence)": 485.0,
        "org.apache.commons.lang3$StringUtils#isBlank(java.lang.CharSequence)": 209733.0,
        "org.apache.commons.lang3$StringUtils#isEmpty(java.lang.CharSequence)": -7.0,
        "org.apache.commons.lang3$StringUtils#isNotBlank(java.lang.CharSequence)": 485.0,
        "org.apache.commons.lang3$StringUtils#isNotEmpty(java.lang.CharSequence)": 465.0,
        "org.apache.commons.lang3$StringUtils#isNumeric(java.lang.CharSequence)": 485.0,
        "org.apache.commons.lang3$StringUtils#isNumericSpace(java.lang.CharSequence)": 485.0,
        "org.apache.commons.lang3$StringUtils#isWhitespace(java.lang.CharSequence)": 485.0,
        "org.apache.commons.lang3$StringUtils#join(byte[],char)": 485.0,
        "org.apache.commons.lang3$StringUtils#join(byte[],char,int,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#join(char[],char)": 485.0,
        "org.apache.commons.lang3$StringUtils#join(char[],char,int,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#join(double[],char)": 485.0,
        "org.apache.commons.lang3$StringUtils#join(double[],char,int,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#join(float[],char)": 485.0,
        "org.apache.commons.lang3$StringUtils#join(float[],char,int,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#join(int[],char)": 485.0,
        "org.apache.commons.lang3$StringUtils#join(int[],char,int,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,char)": 485.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[])": 481.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char)": 483.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char,int,int)": 483.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String)": 479.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String,int,int)": 479.0,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,char)": 483.0,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,java.lang.String)": 483.0,
        "org.apache.commons.lang3$StringUtils#join(long[],char)": 485.0,
        "org.apache.commons.lang3$StringUtils#join(long[],char,int,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#join(short[],char)": 485.0,
        "org.apache.commons.lang3$StringUtils#join(short[],char,int,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence)": 485.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 485.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 485.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 483.0,
        "org.apache.commons.lang3$StringUtils#lastOrdinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#left(java.lang.String,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,char)": 449.0,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,java.lang.String)": 481.0,
        "org.apache.commons.lang3$StringUtils#length(java.lang.CharSequence)": 479.0,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String,java.util.Locale)": 485.0,
        "org.apache.commons.lang3$StringUtils#mid(java.lang.String,int,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#normalizeSpace(java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)": 483.0,
        "org.apache.commons.lang3$StringUtils#overlay(java.lang.String,java.lang.String,int,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])": 483.0,
        "org.apache.commons.lang3$StringUtils#prependIfMissing(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])": 485.0,
        "org.apache.commons.lang3$StringUtils#prependIfMissingIgnoreCase(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])": 485.0,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,char)": 485.0,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#removeEnd(java.lang.String,java.lang.String)": 481.0,
        "org.apache.commons.lang3$StringUtils#removeEndIgnoreCase(java.lang.String,java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#removePattern(java.lang.String,java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#removeStart(java.lang.String,java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#removeStartIgnoreCase(java.lang.String,java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#repeat(char,int)": 445.0,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,int)": 479.0,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,java.lang.String,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String)": 477.0,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String,int)": 467.0,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,char,char)": 483.0,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,java.lang.String,java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[])": 485.0,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)": 483.0,
        "org.apache.commons.lang3$StringUtils#replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[])": 485.0,
        "org.apache.commons.lang3$StringUtils#replaceOnce(java.lang.String,java.lang.String,java.lang.String)": 481.0,
        "org.apache.commons.lang3$StringUtils#replacePattern(java.lang.String,java.lang.String,java.lang.String)": 483.0,
        "org.apache.commons.lang3$StringUtils#reverse(java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#reverseDelimited(java.lang.String,char)": 485.0,
        "org.apache.commons.lang3$StringUtils#right(java.lang.String,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,char)": 475.0,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,java.lang.String)": 481.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,char)": 483.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String,int)": 483.0,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String,boolean)": 483.0,
        "org.apache.commons.lang3$StringUtils#splitByCharacterTypeCamelCase(java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String)": 487.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)": 481.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,char)": 485.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,char,boolean)": 481.0,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,java.lang.String,int,boolean)": 473.0,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence)": 483.0,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 475.0,
        "org.apache.commons.lang3$StringUtils#startsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 485.0,
        "org.apache.commons.lang3$StringUtils#startsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 483.0,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String,java.lang.String)": 477.0,
        "org.apache.commons.lang3$StringUtils#stripAccents(java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[])": 485.0,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[],java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#stripEnd(java.lang.String,java.lang.String)": 473.0,
        "org.apache.commons.lang3$StringUtils#stripStart(java.lang.String,java.lang.String)": 475.0,
        "org.apache.commons.lang3$StringUtils#stripToEmpty(java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#stripToNull(java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int,int)": 485.0,
        "org.apache.commons.lang3$StringUtils#substringAfter(java.lang.String,java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#substringAfterLast(java.lang.String,java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#substringBefore(java.lang.String,java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#substringBeforeLast(java.lang.String,java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String,java.lang.String)": 483.0,
        "org.apache.commons.lang3$StringUtils#substringsBetween(java.lang.String,java.lang.String,java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#swapCase(java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#toString(byte[],java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#trim(java.lang.String)": 481.0,
        "org.apache.commons.lang3$StringUtils#trimToEmpty(java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#trimToNull(java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#uncapitalize(java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String)": 485.0,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String,java.util.Locale)": 485.0,
        "org.apache.commons.lang3.math$NumberUtils#<clinit>()": 160713.0,
        "org.apache.commons.lang3.math$NumberUtils#NumberUtils()": 485.0,
        "org.apache.commons.lang3.math$NumberUtils#createBigDecimal(java.lang.String)": 473.0,
        "org.apache.commons.lang3.math$NumberUtils#createBigInteger(java.lang.String)": 479.0,
        "org.apache.commons.lang3.math$NumberUtils#createDouble(java.lang.String)": 473.0,
        "org.apache.commons.lang3.math$NumberUtils#createFloat(java.lang.String)": 473.0,
        "org.apache.commons.lang3.math$NumberUtils#createInteger(java.lang.String)": 234251.0,
        "org.apache.commons.lang3.math$NumberUtils#createLong(java.lang.String)": 477.0,
        "org.apache.commons.lang3.math$NumberUtils#createNumber(java.lang.String)": 229431.0,
        "org.apache.commons.lang3.math$NumberUtils#isAllZeros(java.lang.String)": 473.0,
        "org.apache.commons.lang3.math$NumberUtils#isDigits(java.lang.String)": 479.0,
        "org.apache.commons.lang3.math$NumberUtils#isNumber(java.lang.String)": 485.0,
        "org.apache.commons.lang3.math$NumberUtils#max(byte,byte,byte)": 485.0,
        "org.apache.commons.lang3.math$NumberUtils#max(byte[])": 481.0,
        "org.apache.commons.lang3.math$NumberUtils#max(double,double,double)": 483.0,
        "org.apache.commons.lang3.math$NumberUtils#max(double[])": 479.0,
        "org.apache.commons.lang3.math$NumberUtils#max(float,float,float)": 483.0,
        "org.apache.commons.lang3.math$NumberUtils#max(float[])": 479.0,
        "org.apache.commons.lang3.math$NumberUtils#max(int,int,int)": 485.0,
        "org.apache.commons.lang3.math$NumberUtils#max(int[])": 481.0,
        "org.apache.commons.lang3.math$NumberUtils#max(long,long,long)": 485.0,
        "org.apache.commons.lang3.math$NumberUtils#max(long[])": 481.0,
        "org.apache.commons.lang3.math$NumberUtils#max(short,short,short)": 485.0,
        "org.apache.commons.lang3.math$NumberUtils#max(short[])": 481.0,
        "org.apache.commons.lang3.math$NumberUtils#min(byte,byte,byte)": 485.0,
        "org.apache.commons.lang3.math$NumberUtils#min(byte[])": 481.0,
        "org.apache.commons.lang3.math$NumberUtils#min(double,double,double)": 483.0,
        "org.apache.commons.lang3.math$NumberUtils#min(double[])": 479.0,
        "org.apache.commons.lang3.math$NumberUtils#min(float,float,float)": 483.0,
        "org.apache.commons.lang3.math$NumberUtils#min(float[])": 481.0,
        "org.apache.commons.lang3.math$NumberUtils#min(int,int,int)": 485.0,
        "org.apache.commons.lang3.math$NumberUtils#min(int[])": 481.0,
        "org.apache.commons.lang3.math$NumberUtils#min(long,long,long)": 485.0,
        "org.apache.commons.lang3.math$NumberUtils#min(long[])": 481.0,
        "org.apache.commons.lang3.math$NumberUtils#min(short,short,short)": 485.0,
        "org.apache.commons.lang3.math$NumberUtils#min(short[])": 481.0,
        "org.apache.commons.lang3.math$NumberUtils#toByte(java.lang.String)": 485.0,
        "org.apache.commons.lang3.math$NumberUtils#toByte(java.lang.String,byte)": 483.0,
        "org.apache.commons.lang3.math$NumberUtils#toDouble(java.lang.String)": 485.0,
        "org.apache.commons.lang3.math$NumberUtils#toDouble(java.lang.String,double)": 483.0,
        "org.apache.commons.lang3.math$NumberUtils#toFloat(java.lang.String)": 485.0,
        "org.apache.commons.lang3.math$NumberUtils#toFloat(java.lang.String,float)": 483.0,
        "org.apache.commons.lang3.math$NumberUtils#toInt(java.lang.String)": 485.0,
        "org.apache.commons.lang3.math$NumberUtils#toInt(java.lang.String,int)": 483.0,
        "org.apache.commons.lang3.math$NumberUtils#toLong(java.lang.String)": 485.0,
        "org.apache.commons.lang3.math$NumberUtils#toLong(java.lang.String,long)": 483.0,
        "org.apache.commons.lang3.math$NumberUtils#toShort(java.lang.String)": 485.0,
        "org.apache.commons.lang3.math$NumberUtils#toShort(java.lang.String,short)": 483.0,
        "org.apache.commons.lang3.math$NumberUtils#validateArray(java.lang.Object)": 413.0
    },
    "Lang-10": {
        "org.apache.commons.lang3.time$FastDateFormat#<clinit>()": 1286.0,
        "org.apache.commons.lang3.time$FastDateFormat#FastDateFormat(java.lang.String,java.util.TimeZone,java.util.Locale)": 1286.0,
        "org.apache.commons.lang3.time$FastDateFormat#applyRules(java.util.Calendar,java.lang.StringBuffer)": 116.0,
        "org.apache.commons.lang3.time$FastDateFormat#equals(java.lang.Object)": 102.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)": 114.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Calendar)": 46.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Calendar,java.lang.StringBuffer)": 116.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Date)": 50.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Date,java.lang.StringBuffer)": 116.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(long)": 114.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(long,java.lang.StringBuffer)": 116.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int)": 112.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.Locale)": 112.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.TimeZone)": 114.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.TimeZone,java.util.Locale)": 114.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int)": 110.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.Locale)": 110.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.TimeZone)": 114.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale)": 114.0,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance()": 112.0,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String)": 42.0,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.Locale)": 46.0,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.TimeZone)": 114.0,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 5430.0,
        "org.apache.commons.lang3.time$FastDateFormat#getLocale()": 100.0,
        "org.apache.commons.lang3.time$FastDateFormat#getMaxLengthEstimate()": 116.0,
        "org.apache.commons.lang3.time$FastDateFormat#getPattern()": 94.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int)": 114.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.Locale)": 114.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.TimeZone)": 114.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.TimeZone,java.util.Locale)": 114.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeZone()": 104.0,
        "org.apache.commons.lang3.time$FastDateFormat#hashCode()": 110.0,
        "org.apache.commons.lang3.time$FastDateFormat#parse(java.lang.String)": 10386.0,
        "org.apache.commons.lang3.time$FastDateFormat#parse(java.lang.String,java.text.ParsePosition)": 116.0,
        "org.apache.commons.lang3.time$FastDateFormat#parseObject(java.lang.String,java.text.ParsePosition)": 114.0,
        "org.apache.commons.lang3.time$FastDateFormat#toString()": 112.0,
        "org.apache.commons.lang3.time$FastDateFormat$1#createInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 1286.0,
        "org.apache.commons.lang3.time$FastDateParser#<clinit>()": 62.0,
        "org.apache.commons.lang3.time$FastDateParser#FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale)": 120.0,
        "org.apache.commons.lang3.time$FastDateParser#adjustYear(int)": 100.0,
        "org.apache.commons.lang3.time$FastDateParser#copy(org.apache.commons.lang3.time.FastDateParser$KeyValue[],int,java.lang.String[])": 3420.0,
        "org.apache.commons.lang3.time$FastDateParser#count(java.lang.String[])": 3420.0,
        "org.apache.commons.lang3.time$FastDateParser#createKeyValues(java.lang.String[],java.lang.String[])": 3420.0,
        "org.apache.commons.lang3.time$FastDateParser#equals(java.lang.Object)": 114.0,
        "org.apache.commons.lang3.time$FastDateParser#escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)": 186.0,
        "org.apache.commons.lang3.time$FastDateParser#getDisplayNames(int)": 3420.0,
        "org.apache.commons.lang3.time$FastDateParser#getFieldWidth()": 104.0,
        "org.apache.commons.lang3.time$FastDateParser#getLocale()": 114.0,
        "org.apache.commons.lang3.time$FastDateParser#getParsePattern()": 13922.0,
        "org.apache.commons.lang3.time$FastDateParser#getPattern()": 114.0,
        "org.apache.commons.lang3.time$FastDateParser#getStrategy(java.lang.String)": 120.0,
        "org.apache.commons.lang3.time$FastDateParser#getTimeZone()": 114.0,
        "org.apache.commons.lang3.time$FastDateParser#hashCode()": 112.0,
        "org.apache.commons.lang3.time$FastDateParser#init()": 120.0,
        "org.apache.commons.lang3.time$FastDateParser#isNextNumber()": 120.0,
        "org.apache.commons.lang3.time$FastDateParser#parse(java.lang.String)": 7362.0,
        "org.apache.commons.lang3.time$FastDateParser#parse(java.lang.String,java.text.ParsePosition)": 7190.0,
        "org.apache.commons.lang3.time$FastDateParser#parseObject(java.lang.String)": 116.0,
        "org.apache.commons.lang3.time$FastDateParser#parseObject(java.lang.String,java.text.ParsePosition)": 114.0,
        "org.apache.commons.lang3.time$FastDateParser#readObject(java.io.ObjectInputStream)": 110.0,
        "org.apache.commons.lang3.time$FastDateParser#toArray(java.util.Map)": 102.0,
        "org.apache.commons.lang3.time$FastDateParser#toString()": 114.0,
        "org.apache.commons.lang3.time$FastDateParser$1#compare(org.apache.commons.lang3.time.FastDateParser$KeyValue,org.apache.commons.lang3.time.FastDateParser$KeyValue)": 3420.0,
        "org.apache.commons.lang3.time$FastDateParser$2#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 92.0,
        "org.apache.commons.lang3.time$FastDateParser$3#modify(int)": 8622.0,
        "org.apache.commons.lang3.time$FastDateParser$4#modify(int)": 94.0,
        "org.apache.commons.lang3.time$FastDateParser$5#modify(int)": 88.0,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#FastDateParser$CopyQuotedStrategy(java.lang.String)": 186.0,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": 186.0,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#isNumber()": 222.0,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 116.0,
        "org.apache.commons.lang3.time$FastDateParser$KeyValue#FastDateParser$KeyValue(java.lang.String,int)": 3420.0,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#FastDateParser$NumberStrategy(int)": 62.0,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": 120.0,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#isNumber()": 104.0,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#modify(int)": 50.0,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 7190.0,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#FastDateParser$TextStrategy(int)": 62.0,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": 3420.0,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#isNumber()": 116.0,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 10386.0,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#FastDateParser$TimeZoneStrategy(java.util.Locale)": -4.0,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": -4.0,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#isNumber()": 50.0,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 86.0,
        "org.apache.commons.lang3.time$FastDatePrinter#<clinit>()": 480.0,
        "org.apache.commons.lang3.time$FastDatePrinter#FastDatePrinter(java.lang.String,java.util.TimeZone,java.util.Locale)": 480.0,
        "org.apache.commons.lang3.time$FastDatePrinter#applyRules(java.util.Calendar,java.lang.StringBuffer)": 20.0,
        "org.apache.commons.lang3.time$FastDatePrinter#equals(java.lang.Object)": 100.0,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)": 114.0,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Calendar)": 32.0,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Calendar,java.lang.StringBuffer)": 32.0,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Date)": 44.0,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Date,java.lang.StringBuffer)": 114.0,
        "org.apache.commons.lang3.time$FastDatePrinter#format(long)": 114.0,
        "org.apache.commons.lang3.time$FastDatePrinter#format(long,java.lang.StringBuffer)": 116.0,
        "org.apache.commons.lang3.time$FastDatePrinter#getLocale()": 94.0,
        "org.apache.commons.lang3.time$FastDatePrinter#getMaxLengthEstimate()": 116.0,
        "org.apache.commons.lang3.time$FastDatePrinter#getPattern()": 88.0,
        "org.apache.commons.lang3.time$FastDatePrinter#getTimeZone()": 98.0,
        "org.apache.commons.lang3.time$FastDatePrinter#getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)": 106.0,
        "org.apache.commons.lang3.time$FastDatePrinter#hashCode()": 108.0,
        "org.apache.commons.lang3.time$FastDatePrinter#init()": 480.0,
        "org.apache.commons.lang3.time$FastDatePrinter#parsePattern()": 480.0,
        "org.apache.commons.lang3.time$FastDatePrinter#parseToken(java.lang.String,int[])": 480.0,
        "org.apache.commons.lang3.time$FastDatePrinter#readObject(java.io.ObjectInputStream)": 110.0,
        "org.apache.commons.lang3.time$FastDatePrinter#selectNumberRule(int,int)": -72.0,
        "org.apache.commons.lang3.time$FastDatePrinter#toString()": 114.0,
        "org.apache.commons.lang3.time$FastDatePrinter$CharacterLiteral#FastDatePrinter$CharacterLiteral(char)": 636.0,
        "org.apache.commons.lang3.time$FastDatePrinter$CharacterLiteral#appendTo(java.lang.StringBuffer,java.util.Calendar)": 28.0,
        "org.apache.commons.lang3.time$FastDatePrinter$CharacterLiteral#estimateLength()": 636.0,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#FastDatePrinter$PaddedNumberField(int,int)": -62.0,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#appendTo(java.lang.StringBuffer,int)": 28.0,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 28.0,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#estimateLength()": -62.0,
        "org.apache.commons.lang3.time$FastDatePrinter$StringLiteral#FastDatePrinter$StringLiteral(java.lang.String)": 34.0,
        "org.apache.commons.lang3.time$FastDatePrinter$StringLiteral#appendTo(java.lang.StringBuffer,java.util.Calendar)": 110.0,
        "org.apache.commons.lang3.time$FastDatePrinter$StringLiteral#estimateLength()": 34.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TextField#FastDatePrinter$TextField(int,java.lang.String[])": 4170.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TextField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 106.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TextField#estimateLength()": 4170.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneDisplayKey#FastDatePrinter$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale)": 106.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneDisplayKey#equals(java.lang.Object)": 110.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneDisplayKey#hashCode()": 106.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNameRule#FastDatePrinter$TimeZoneNameRule(java.util.TimeZone,java.util.Locale,int)": 106.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNameRule#appendTo(java.lang.StringBuffer,java.util.Calendar)": 112.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNameRule#estimateLength()": 106.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#<clinit>()": 22.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#FastDatePrinter$TimeZoneNumberRule(boolean)": 22.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#appendTo(java.lang.StringBuffer,java.util.Calendar)": 96.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#estimateLength()": 22.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#FastDatePrinter$TwelveHourField(org.apache.commons.lang3.time.FastDatePrinter$NumberRule)": 90.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#appendTo(java.lang.StringBuffer,int)": 116.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 116.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#estimateLength()": 90.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#FastDatePrinter$TwentyFourHourField(org.apache.commons.lang3.time.FastDatePrinter$NumberRule)": 114.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#appendTo(java.lang.StringBuffer,int)": 116.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 116.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#estimateLength()": 114.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#<clinit>()": -36.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#FastDatePrinter$TwoDigitMonthField()": -36.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#appendTo(java.lang.StringBuffer,int)": 34.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 34.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#estimateLength()": -36.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#FastDatePrinter$TwoDigitNumberField(int)": -52.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#appendTo(java.lang.StringBuffer,int)": 24.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 24.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#estimateLength()": -52.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#<clinit>()": 100.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#FastDatePrinter$TwoDigitYearField()": 100.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#appendTo(java.lang.StringBuffer,int)": 108.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 108.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#estimateLength()": 100.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#<clinit>()": 10800.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#FastDatePrinter$UnpaddedMonthField()": 10800.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#appendTo(java.lang.StringBuffer,int)": 104.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 104.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#estimateLength()": 10800.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#FastDatePrinter$UnpaddedNumberField(int)": 76.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#appendTo(java.lang.StringBuffer,int)": 104.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 104.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#estimateLength()": 76.0,
        "org.apache.commons.lang3.time$FormatCache#<clinit>()": 1140.0,
        "org.apache.commons.lang3.time$FormatCache#FormatCache()": 1286.0,
        "org.apache.commons.lang3.time$FormatCache#getDateTimeInstance(java.lang.Integer,java.lang.Integer,java.util.TimeZone,java.util.Locale)": 100.0,
        "org.apache.commons.lang3.time$FormatCache#getInstance()": 112.0,
        "org.apache.commons.lang3.time$FormatCache#getInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 1286.0,
        "org.apache.commons.lang3.time$FormatCache#getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)": 92.0,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#FormatCache$MultipartKey(java.lang.Object[])": 1140.0,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#equals(java.lang.Object)": 72.0,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#hashCode()": 1140.0
    },
    "Lang-12": {
        "org.apache.commons.lang3$RandomStringUtils#<clinit>()": -5.0,
        "org.apache.commons.lang3$RandomStringUtils#RandomStringUtils()": -1.0,
        "org.apache.commons.lang3$RandomStringUtils#random(int)": -3.0,
        "org.apache.commons.lang3$RandomStringUtils#random(int,boolean,boolean)": -3.0,
        "org.apache.commons.lang3$RandomStringUtils#random(int,char[])": 1.0,
        "org.apache.commons.lang3$RandomStringUtils#random(int,int,int,boolean,boolean)": -3.0,
        "org.apache.commons.lang3$RandomStringUtils#random(int,int,int,boolean,boolean,char[])": 1.0,
        "org.apache.commons.lang3$RandomStringUtils#random(int,int,int,boolean,boolean,char[],java.util.Random)": -3.0,
        "org.apache.commons.lang3$RandomStringUtils#random(int,java.lang.String)": -1.0,
        "org.apache.commons.lang3$RandomStringUtils#randomAlphabetic(int)": -1.0,
        "org.apache.commons.lang3$RandomStringUtils#randomAlphanumeric(int)": -1.0,
        "org.apache.commons.lang3$RandomStringUtils#randomAscii(int)": -1.0,
        "org.apache.commons.lang3$RandomStringUtils#randomNumeric(int)": -1.0
    },
    "Lang-13": {
        "org.apache.commons.lang3$SerializationException#SerializationException()": 31.0,
        "org.apache.commons.lang3$SerializationException#SerializationException(java.lang.String)": 31.0,
        "org.apache.commons.lang3$SerializationException#SerializationException(java.lang.String,java.lang.Throwable)": 1087.0,
        "org.apache.commons.lang3$SerializationException#SerializationException(java.lang.Throwable)": 17.0,
        "org.apache.commons.lang3$SerializationUtils#SerializationUtils()": 31.0,
        "org.apache.commons.lang3$SerializationUtils#clone(java.io.Serializable)": 721.0,
        "org.apache.commons.lang3$SerializationUtils#deserialize(byte[])": 11.0,
        "org.apache.commons.lang3$SerializationUtils#deserialize(java.io.InputStream)": 3.0,
        "org.apache.commons.lang3$SerializationUtils#serialize(java.io.Serializable)": 307.0,
        "org.apache.commons.lang3$SerializationUtils#serialize(java.io.Serializable,java.io.OutputStream)": 121.0,
        "org.apache.commons.lang3$SerializationUtils$ClassLoaderAwareObjectInputStream#SerializationUtils$ClassLoaderAwareObjectInputStream(java.io.InputStream,java.lang.ClassLoader)": 835.0,
        "org.apache.commons.lang3$SerializationUtils$ClassLoaderAwareObjectInputStream#resolveClass(java.io.ObjectStreamClass)": 835.0
    },
    "Lang-14": {
        "org.apache.commons.lang3$CharSequenceUtils#CharSequenceUtils()": 311.0,
        "org.apache.commons.lang3$CharSequenceUtils#indexOf(java.lang.CharSequence,int,int)": 303.0,
        "org.apache.commons.lang3$CharSequenceUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 297.0,
        "org.apache.commons.lang3$CharSequenceUtils#lastIndexOf(java.lang.CharSequence,int,int)": 309.0,
        "org.apache.commons.lang3$CharSequenceUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 305.0,
        "org.apache.commons.lang3$CharSequenceUtils#regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)": 283.0,
        "org.apache.commons.lang3$CharSequenceUtils#subSequence(java.lang.CharSequence,int)": 311.0,
        "org.apache.commons.lang3$CharSequenceUtils#toCharArray(java.lang.CharSequence)": 307.0,
        "org.apache.commons.lang3$StringUtils#<clinit>()": -309.0,
        "org.apache.commons.lang3$StringUtils#StringUtils()": 311.0,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int)": 309.0,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int,int)": 309.0,
        "org.apache.commons.lang3$StringUtils#abbreviateMiddle(java.lang.String,java.lang.String,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#capitalize(java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,char)": 309.0,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String,java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#chop(java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,java.lang.CharSequence)": 305.0,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,char[])": 297.0,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,java.lang.CharSequence)": 307.0,
        "org.apache.commons.lang3$StringUtils#containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 309.0,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,char[])": 297.0,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,java.lang.String)": 307.0,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,char[])": 303.0,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#containsWhitespace(java.lang.CharSequence)": 311.0,
        "org.apache.commons.lang3$StringUtils#countMatches(java.lang.CharSequence,java.lang.CharSequence)": 311.0,
        "org.apache.commons.lang3$StringUtils#defaultIfBlank(java.lang.CharSequence,java.lang.CharSequence)": 305.0,
        "org.apache.commons.lang3$StringUtils#defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence)": 305.0,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String)": 307.0,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String,java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#deleteWhitespace(java.lang.String)": 283.0,
        "org.apache.commons.lang3$StringUtils#difference(java.lang.String,java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence)": 309.0,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 305.0,
        "org.apache.commons.lang3$StringUtils#endsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 311.0,
        "org.apache.commons.lang3$StringUtils#endsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 309.0,
        "org.apache.commons.lang3$StringUtils#equals(java.lang.CharSequence,java.lang.CharSequence)": 88787.0,
        "org.apache.commons.lang3$StringUtils#equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 311.0,
        "org.apache.commons.lang3$StringUtils#getCommonPrefix(java.lang.String[])": 311.0,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)": 311.0,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence)": 311.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,char[])": 305.0,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 311.0,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.String)": 309.0,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,char[])": 299.0,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)": 309.0,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)": 309.0,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence[])": 309.0,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 311.0,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 309.0,
        "org.apache.commons.lang3$StringUtils#isAllLowerCase(java.lang.CharSequence)": 311.0,
        "org.apache.commons.lang3$StringUtils#isAllUpperCase(java.lang.CharSequence)": 311.0,
        "org.apache.commons.lang3$StringUtils#isAlpha(java.lang.CharSequence)": 311.0,
        "org.apache.commons.lang3$StringUtils#isAlphaSpace(java.lang.CharSequence)": 311.0,
        "org.apache.commons.lang3$StringUtils#isAlphanumeric(java.lang.CharSequence)": 311.0,
        "org.apache.commons.lang3$StringUtils#isAlphanumericSpace(java.lang.CharSequence)": 311.0,
        "org.apache.commons.lang3$StringUtils#isAsciiPrintable(java.lang.CharSequence)": 311.0,
        "org.apache.commons.lang3$StringUtils#isBlank(java.lang.CharSequence)": 265.0,
        "org.apache.commons.lang3$StringUtils#isEmpty(java.lang.CharSequence)": -13.0,
        "org.apache.commons.lang3$StringUtils#isNotBlank(java.lang.CharSequence)": 311.0,
        "org.apache.commons.lang3$StringUtils#isNotEmpty(java.lang.CharSequence)": 295.0,
        "org.apache.commons.lang3$StringUtils#isNumeric(java.lang.CharSequence)": 311.0,
        "org.apache.commons.lang3$StringUtils#isNumericSpace(java.lang.CharSequence)": 311.0,
        "org.apache.commons.lang3$StringUtils#isWhitespace(java.lang.CharSequence)": 311.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,char)": 311.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[])": 307.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char)": 309.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char,int,int)": 309.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String)": 305.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String,int,int)": 305.0,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,char)": 309.0,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,java.lang.String)": 309.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence)": 311.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 311.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 311.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 309.0,
        "org.apache.commons.lang3$StringUtils#lastOrdinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#left(java.lang.String,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,char)": 277.0,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,java.lang.String)": 307.0,
        "org.apache.commons.lang3$StringUtils#length(java.lang.CharSequence)": 305.0,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String,java.util.Locale)": 311.0,
        "org.apache.commons.lang3$StringUtils#mid(java.lang.String,int,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#normalizeSpace(java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)": 309.0,
        "org.apache.commons.lang3$StringUtils#overlay(java.lang.String,java.lang.String,int,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,char)": 311.0,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#removeAccentsJava6(java.lang.CharSequence)": 311.0,
        "org.apache.commons.lang3$StringUtils#removeAccentsSUN(java.lang.CharSequence)": 313.0,
        "org.apache.commons.lang3$StringUtils#removeEnd(java.lang.String,java.lang.String)": 307.0,
        "org.apache.commons.lang3$StringUtils#removeEndIgnoreCase(java.lang.String,java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#removeStart(java.lang.String,java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#removeStartIgnoreCase(java.lang.String,java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#repeat(char,int)": 271.0,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,int)": 305.0,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,java.lang.String,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String)": 303.0,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String,int)": 293.0,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,char,char)": 309.0,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,java.lang.String,java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[])": 311.0,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)": 309.0,
        "org.apache.commons.lang3$StringUtils#replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[])": 311.0,
        "org.apache.commons.lang3$StringUtils#replaceOnce(java.lang.String,java.lang.String,java.lang.String)": 307.0,
        "org.apache.commons.lang3$StringUtils#reverse(java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#reverseDelimited(java.lang.String,char)": 311.0,
        "org.apache.commons.lang3$StringUtils#right(java.lang.String,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,char)": 301.0,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,java.lang.String)": 307.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,char)": 309.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String,int)": 309.0,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String,boolean)": 309.0,
        "org.apache.commons.lang3$StringUtils#splitByCharacterTypeCamelCase(java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String)": 313.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)": 307.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,char)": 311.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,char,boolean)": 307.0,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,java.lang.String,int,boolean)": 299.0,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence)": 309.0,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 305.0,
        "org.apache.commons.lang3$StringUtils#startsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 311.0,
        "org.apache.commons.lang3$StringUtils#startsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 309.0,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String,java.lang.String)": 303.0,
        "org.apache.commons.lang3$StringUtils#stripAccents(java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[])": 311.0,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[],java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#stripEnd(java.lang.String,java.lang.String)": 299.0,
        "org.apache.commons.lang3$StringUtils#stripStart(java.lang.String,java.lang.String)": 301.0,
        "org.apache.commons.lang3$StringUtils#stripToEmpty(java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#stripToNull(java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int,int)": 311.0,
        "org.apache.commons.lang3$StringUtils#substringAfter(java.lang.String,java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#substringAfterLast(java.lang.String,java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#substringBefore(java.lang.String,java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#substringBeforeLast(java.lang.String,java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String,java.lang.String)": 309.0,
        "org.apache.commons.lang3$StringUtils#substringsBetween(java.lang.String,java.lang.String,java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#swapCase(java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#toString(byte[],java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#trim(java.lang.String)": 307.0,
        "org.apache.commons.lang3$StringUtils#trimToEmpty(java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#trimToNull(java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#uncapitalize(java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String)": 311.0,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String,java.util.Locale)": 311.0,
        "org.apache.commons.lang3$StringUtils$InitStripAccents#<clinit>()": 311.0,
        "org.apache.commons.lang3$StringUtils$InitStripAccents#StringUtils$InitStripAccents()": 313.0
    },
    "Lang-15": {
        "org.apache.commons.lang3$ArrayUtils#<clinit>()": 92642.0,
        "org.apache.commons.lang3$ArrayUtils#ArrayUtils()": 682.0,
        "org.apache.commons.lang3$ArrayUtils#add(boolean[],boolean)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#add(boolean[],int,boolean)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#add(byte[],byte)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#add(byte[],int,byte)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#add(char[],char)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#add(char[],int,char)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#add(double[],double)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#add(double[],int,double)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#add(float[],float)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#add(float[],int,float)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#add(int[],int)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#add(int[],int,int)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#add(java.lang.Object,int,java.lang.Object,java.lang.Class)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#add(java.lang.Object[],int,java.lang.Object)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#add(java.lang.Object[],java.lang.Object)": 676.0,
        "org.apache.commons.lang3$ArrayUtils#add(long[],int,long)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#add(long[],long)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#add(short[],int,short)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#add(short[],short)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(boolean[],boolean[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(byte[],byte[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(char[],char[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(double[],double[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(float[],float[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(int[],int[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(java.lang.Object[],java.lang.Object[])": 676.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(long[],long[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(short[],short[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#clone(boolean[])": 676.0,
        "org.apache.commons.lang3$ArrayUtils#clone(byte[])": 676.0,
        "org.apache.commons.lang3$ArrayUtils#clone(char[])": 654.0,
        "org.apache.commons.lang3$ArrayUtils#clone(double[])": 676.0,
        "org.apache.commons.lang3$ArrayUtils#clone(float[])": 676.0,
        "org.apache.commons.lang3$ArrayUtils#clone(int[])": 570.0,
        "org.apache.commons.lang3$ArrayUtils#clone(java.lang.Object[])": 434252.0,
        "org.apache.commons.lang3$ArrayUtils#clone(long[])": 676.0,
        "org.apache.commons.lang3$ArrayUtils#clone(short[])": 676.0,
        "org.apache.commons.lang3$ArrayUtils#contains(boolean[],boolean)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#contains(byte[],byte)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#contains(char[],char)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#contains(double[],double)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#contains(double[],double,double)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#contains(float[],float)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#contains(int[],int)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#contains(java.lang.Object[],java.lang.Object)": 638.0,
        "org.apache.commons.lang3$ArrayUtils#contains(long[],long)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#contains(short[],short)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#copyArrayGrow1(java.lang.Object,java.lang.Class)": 662.0,
        "org.apache.commons.lang3$ArrayUtils#extractIndices(java.util.HashSet)": 666.0,
        "org.apache.commons.lang3$ArrayUtils#getLength(java.lang.Object)": 534.0,
        "org.apache.commons.lang3$ArrayUtils#hashCode(java.lang.Object)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(boolean[],boolean)": 678.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(boolean[],boolean,int)": 674.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(byte[],byte)": 678.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(byte[],byte,int)": 674.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(char[],char)": 678.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(char[],char,int)": 674.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double)": 678.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double,double)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double,int)": 674.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double,int,double)": 678.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(float[],float)": 678.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(float[],float,int)": 674.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(int[],int)": 678.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(int[],int,int)": 674.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(java.lang.Object[],java.lang.Object)": 634.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(java.lang.Object[],java.lang.Object,int)": 630.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(long[],long)": 678.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(long[],long,int)": 674.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(short[],short)": 678.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(short[],short,int)": 674.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(boolean[])": 668.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(byte[])": 680.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(char[])": 642.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(double[])": 658.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(float[])": 668.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(int[])": 680.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(java.lang.Object[])": 676.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(long[])": 680.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(short[])": 680.0,
        "org.apache.commons.lang3$ArrayUtils#isEquals(java.lang.Object,java.lang.Object)": 662.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(boolean[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(byte[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(char[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(double[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(float[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(int[])": 574.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(java.lang.Object[])": 680.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(long[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(short[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(boolean[],boolean[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(byte[],byte[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(char[],char[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(double[],double[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(float[],float[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(int[],int[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(java.lang.Object[],java.lang.Object[])": 656.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(long[],long[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(short[],short[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#isSameType(java.lang.Object,java.lang.Object)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(boolean[],boolean)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(boolean[],boolean,int)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(byte[],byte)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(byte[],byte,int)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(char[],char)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(char[],char,int)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double,double)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double,int)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double,int,double)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(float[],float)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(float[],float,int)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(int[],int)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(int[],int,int)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(java.lang.Object[],java.lang.Object)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(java.lang.Object[],java.lang.Object,int)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(long[],long)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(long[],long,int)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(short[],short)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(short[],short,int)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(boolean[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(byte[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(char[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(double[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(float[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(int[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Boolean[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Byte[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Character[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Double[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Float[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Integer[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Long[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Object[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Short[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.String[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(long[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(short[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#remove(boolean[],int)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#remove(byte[],int)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#remove(char[],int)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#remove(double[],int)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#remove(float[],int)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#remove(int[],int)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#remove(java.lang.Object,int)": 644.0,
        "org.apache.commons.lang3$ArrayUtils#remove(java.lang.Object[],int)": 676.0,
        "org.apache.commons.lang3$ArrayUtils#remove(long[],int)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#remove(short[],int)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#removeAll(boolean[],int[])": 672.0,
        "org.apache.commons.lang3$ArrayUtils#removeAll(byte[],int[])": 672.0,
        "org.apache.commons.lang3$ArrayUtils#removeAll(char[],int[])": 672.0,
        "org.apache.commons.lang3$ArrayUtils#removeAll(double[],int[])": 672.0,
        "org.apache.commons.lang3$ArrayUtils#removeAll(float[],int[])": 672.0,
        "org.apache.commons.lang3$ArrayUtils#removeAll(int[],int[])": 672.0,
        "org.apache.commons.lang3$ArrayUtils#removeAll(java.lang.Object,int[])": 576.0,
        "org.apache.commons.lang3$ArrayUtils#removeAll(java.lang.Object[],int[])": 672.0,
        "org.apache.commons.lang3$ArrayUtils#removeAll(long[],int[])": 672.0,
        "org.apache.commons.lang3$ArrayUtils#removeAll(short[],int[])": 672.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(boolean[],boolean)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(byte[],byte)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(char[],char)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(double[],double)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(float[],float)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(int[],int)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(java.lang.Object[],java.lang.Object)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(long[],long)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(short[],short)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#removeElements(boolean[],boolean[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#removeElements(byte[],byte[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#removeElements(char[],char[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#removeElements(double[],double[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#removeElements(float[],float[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#removeElements(int[],int[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#removeElements(java.lang.Object[],java.lang.Object[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#removeElements(long[],long[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#removeElements(short[],short[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(boolean[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(byte[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(char[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(double[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(float[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(int[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(java.lang.Object[])": 680.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(long[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(short[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(boolean[],int,int)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(byte[],int,int)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(char[],int,int)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(double[],int,int)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(float[],int,int)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(int[],int,int)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(java.lang.Object[],int,int)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(long[],int,int)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(short[],int,int)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toArray(java.lang.Object[])": 672.0,
        "org.apache.commons.lang3$ArrayUtils#toMap(java.lang.Object[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(boolean[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(byte[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(char[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(double[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(float[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(int[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(long[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(short[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Boolean[])": 664.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Boolean[],boolean)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Byte[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Byte[],byte)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Character[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Character[],char)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Double[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Double[],double)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Float[])": 680.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Float[],float)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Integer[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Integer[],int)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Long[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Long[],long)": 680.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Short[])": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Short[],short)": 682.0,
        "org.apache.commons.lang3$ArrayUtils#toString(java.lang.Object)": 666.0,
        "org.apache.commons.lang3$ArrayUtils#toString(java.lang.Object,java.lang.String)": 666.0,
        "org.apache.commons.lang3$ClassUtils#<clinit>()": 345644.0,
        "org.apache.commons.lang3$ClassUtils#ClassUtils()": 672.0,
        "org.apache.commons.lang3$ClassUtils#addAbbreviation(java.lang.String,java.lang.String)": 345644.0,
        "org.apache.commons.lang3$ClassUtils#convertClassNamesToClasses(java.util.List)": 682.0,
        "org.apache.commons.lang3$ClassUtils#convertClassesToClassNames(java.util.List)": 682.0,
        "org.apache.commons.lang3$ClassUtils#getAllInterfaces(java.lang.Class)": 660.0,
        "org.apache.commons.lang3$ClassUtils#getAllInterfaces(java.lang.Class,java.util.HashSet)": 660.0,
        "org.apache.commons.lang3$ClassUtils#getAllSuperclasses(java.lang.Class)": 680.0,
        "org.apache.commons.lang3$ClassUtils#getCanonicalName(java.lang.String)": 672.0,
        "org.apache.commons.lang3$ClassUtils#getClass(java.lang.ClassLoader,java.lang.String)": 684.0,
        "org.apache.commons.lang3$ClassUtils#getClass(java.lang.ClassLoader,java.lang.String,boolean)": 666.0,
        "org.apache.commons.lang3$ClassUtils#getClass(java.lang.String)": 666.0,
        "org.apache.commons.lang3$ClassUtils#getClass(java.lang.String,boolean)": 666.0,
        "org.apache.commons.lang3$ClassUtils#getPackageCanonicalName(java.lang.Class)": 682.0,
        "org.apache.commons.lang3$ClassUtils#getPackageCanonicalName(java.lang.Object,java.lang.String)": 682.0,
        "org.apache.commons.lang3$ClassUtils#getPackageCanonicalName(java.lang.String)": 678.0,
        "org.apache.commons.lang3$ClassUtils#getPackageName(java.lang.Class)": 680.0,
        "org.apache.commons.lang3$ClassUtils#getPackageName(java.lang.Object,java.lang.String)": 682.0,
        "org.apache.commons.lang3$ClassUtils#getPackageName(java.lang.String)": 672.0,
        "org.apache.commons.lang3$ClassUtils#getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])": 682.0,
        "org.apache.commons.lang3$ClassUtils#getShortCanonicalName(java.lang.Class)": 682.0,
        "org.apache.commons.lang3$ClassUtils#getShortCanonicalName(java.lang.Object,java.lang.String)": 682.0,
        "org.apache.commons.lang3$ClassUtils#getShortCanonicalName(java.lang.String)": 678.0,
        "org.apache.commons.lang3$ClassUtils#getShortClassName(java.lang.Class)": 632.0,
        "org.apache.commons.lang3$ClassUtils#getShortClassName(java.lang.Object,java.lang.String)": 678.0,
        "org.apache.commons.lang3$ClassUtils#getShortClassName(java.lang.String)": 624.0,
        "org.apache.commons.lang3$ClassUtils#getSimpleName(java.lang.Class)": 680.0,
        "org.apache.commons.lang3$ClassUtils#getSimpleName(java.lang.Object,java.lang.String)": 682.0,
        "org.apache.commons.lang3$ClassUtils#isAssignable(java.lang.Class,java.lang.Class)": 459674.0,
        "org.apache.commons.lang3$ClassUtils#isAssignable(java.lang.Class,java.lang.Class,boolean)": 439544.0,
        "org.apache.commons.lang3$ClassUtils#isAssignable(java.lang.Class[],java.lang.Class[])": 682.0,
        "org.apache.commons.lang3$ClassUtils#isAssignable(java.lang.Class[],java.lang.Class[],boolean)": 658.0,
        "org.apache.commons.lang3$ClassUtils#isInnerClass(java.lang.Class)": 682.0,
        "org.apache.commons.lang3$ClassUtils#isPrimitiveOrWrapper(java.lang.Class)": 682.0,
        "org.apache.commons.lang3$ClassUtils#isPrimitiveWrapper(java.lang.Class)": 680.0,
        "org.apache.commons.lang3$ClassUtils#primitiveToWrapper(java.lang.Class)": 458318.0,
        "org.apache.commons.lang3$ClassUtils#primitivesToWrappers(java.lang.Class[])": 682.0,
        "org.apache.commons.lang3$ClassUtils#toCanonicalName(java.lang.String)": 668.0,
        "org.apache.commons.lang3$ClassUtils#toClass(java.lang.Object[])": 682.0,
        "org.apache.commons.lang3$ClassUtils#wrapperToPrimitive(java.lang.Class)": 652.0,
        "org.apache.commons.lang3$ClassUtils#wrappersToPrimitives(java.lang.Class[])": 678.0,
        "org.apache.commons.lang3$JavaVersion#<clinit>()": 187234.0,
        "org.apache.commons.lang3$JavaVersion#JavaVersion(java.lang.String,int,float,java.lang.String)": 187234.0,
        "org.apache.commons.lang3$JavaVersion#atLeast(org.apache.commons.lang3.JavaVersion)": 436894.0,
        "org.apache.commons.lang3$JavaVersion#get(java.lang.String)": 188972.0,
        "org.apache.commons.lang3$JavaVersion#getJavaVersion(java.lang.String)": 682.0,
        "org.apache.commons.lang3$JavaVersion#toString()": 682.0,
        "org.apache.commons.lang3$StringEscapeUtils#<clinit>()": 439544.0,
        "org.apache.commons.lang3$StringEscapeUtils#StringEscapeUtils()": 682.0,
        "org.apache.commons.lang3$StringEscapeUtils#escapeCsv(java.lang.String)": 682.0,
        "org.apache.commons.lang3$StringEscapeUtils#escapeEcmaScript(java.lang.String)": 680.0,
        "org.apache.commons.lang3$StringEscapeUtils#escapeHtml3(java.lang.String)": 684.0,
        "org.apache.commons.lang3$StringEscapeUtils#escapeHtml4(java.lang.String)": 465118.0,
        "org.apache.commons.lang3$StringEscapeUtils#escapeJava(java.lang.String)": 678.0,
        "org.apache.commons.lang3$StringEscapeUtils#escapeXml(java.lang.String)": 680.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeCsv(java.lang.String)": 682.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeEcmaScript(java.lang.String)": 684.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeHtml3(java.lang.String)": 684.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeHtml4(java.lang.String)": 668.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeJava(java.lang.String)": 682.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeXml(java.lang.String)": 678.0,
        "org.apache.commons.lang3$StringEscapeUtils$CsvEscaper#<clinit>()": 439544.0,
        "org.apache.commons.lang3$StringEscapeUtils$CsvEscaper#StringEscapeUtils$CsvEscaper()": 439544.0,
        "org.apache.commons.lang3$StringEscapeUtils$CsvEscaper#translate(java.lang.CharSequence,int,java.io.Writer)": 680.0,
        "org.apache.commons.lang3$StringEscapeUtils$CsvUnescaper#<clinit>()": 439544.0,
        "org.apache.commons.lang3$StringEscapeUtils$CsvUnescaper#StringEscapeUtils$CsvUnescaper()": 439544.0,
        "org.apache.commons.lang3$StringEscapeUtils$CsvUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 680.0,
        "org.apache.commons.lang3$SystemUtils#<clinit>()": 189844.0,
        "org.apache.commons.lang3$SystemUtils#SystemUtils()": 682.0,
        "org.apache.commons.lang3$SystemUtils#getJavaHome()": 682.0,
        "org.apache.commons.lang3$SystemUtils#getJavaIoTmpDir()": 682.0,
        "org.apache.commons.lang3$SystemUtils#getJavaVersionMatches(java.lang.String)": 189844.0,
        "org.apache.commons.lang3$SystemUtils#getOSMatches(java.lang.String,java.lang.String)": 189844.0,
        "org.apache.commons.lang3$SystemUtils#getOSMatchesName(java.lang.String)": 189844.0,
        "org.apache.commons.lang3$SystemUtils#getSystemProperty(java.lang.String)": 189844.0,
        "org.apache.commons.lang3$SystemUtils#getUserDir()": 682.0,
        "org.apache.commons.lang3$SystemUtils#getUserHome()": 682.0,
        "org.apache.commons.lang3$SystemUtils#isJavaAwtHeadless()": 682.0,
        "org.apache.commons.lang3$SystemUtils#isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion)": 438218.0,
        "org.apache.commons.lang3$SystemUtils#isJavaVersionMatch(java.lang.String,java.lang.String)": 189844.0,
        "org.apache.commons.lang3$SystemUtils#isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 189844.0,
        "org.apache.commons.lang3$SystemUtils#isOSNameMatch(java.lang.String,java.lang.String)": 189844.0,
        "org.apache.commons.lang3.reflect$TypeUtils#TypeUtils()": 684.0,
        "org.apache.commons.lang3.reflect$TypeUtils#determineTypeArguments(java.lang.Class,java.lang.reflect.ParameterizedType)": 682.0,
        "org.apache.commons.lang3.reflect$TypeUtils#getArrayComponentType(java.lang.reflect.Type)": 680.0,
        "org.apache.commons.lang3.reflect$TypeUtils#getClosestParentType(java.lang.Class,java.lang.Class)": 465118.0,
        "org.apache.commons.lang3.reflect$TypeUtils#getImplicitBounds(java.lang.reflect.TypeVariable)": 682.0,
        "org.apache.commons.lang3.reflect$TypeUtils#getImplicitLowerBounds(java.lang.reflect.WildcardType)": 469222.0,
        "org.apache.commons.lang3.reflect$TypeUtils#getImplicitUpperBounds(java.lang.reflect.WildcardType)": 469222.0,
        "org.apache.commons.lang3.reflect$TypeUtils#getRawType(java.lang.reflect.ParameterizedType)": 465118.0,
        "org.apache.commons.lang3.reflect$TypeUtils#getRawType(java.lang.reflect.Type,java.lang.reflect.Type)": 682.0,
        "org.apache.commons.lang3.reflect$TypeUtils#getTypeArguments(java.lang.Class,java.lang.Class,java.util.Map)": 466484.0,
        "org.apache.commons.lang3.reflect$TypeUtils#getTypeArguments(java.lang.reflect.ParameterizedType)": 684.0,
        "org.apache.commons.lang3.reflect$TypeUtils#getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)": 465118.0,
        "org.apache.commons.lang3.reflect$TypeUtils#getTypeArguments(java.lang.reflect.Type,java.lang.Class)": 469222.0,
        "org.apache.commons.lang3.reflect$TypeUtils#getTypeArguments(java.lang.reflect.Type,java.lang.Class,java.util.Map)": 466484.0,
        "org.apache.commons.lang3.reflect$TypeUtils#isArrayType(java.lang.reflect.Type)": 680.0,
        "org.apache.commons.lang3.reflect$TypeUtils#isAssignable(java.lang.reflect.Type,java.lang.Class)": 465118.0,
        "org.apache.commons.lang3.reflect$TypeUtils#isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map)": 470594.0,
        "org.apache.commons.lang3.reflect$TypeUtils#isAssignable(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)": 467852.0,
        "org.apache.commons.lang3.reflect$TypeUtils#isAssignable(java.lang.reflect.Type,java.lang.reflect.Type)": 465118.0,
        "org.apache.commons.lang3.reflect$TypeUtils#isAssignable(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)": 465118.0,
        "org.apache.commons.lang3.reflect$TypeUtils#isAssignable(java.lang.reflect.Type,java.lang.reflect.TypeVariable,java.util.Map)": 684.0,
        "org.apache.commons.lang3.reflect$TypeUtils#isAssignable(java.lang.reflect.Type,java.lang.reflect.WildcardType,java.util.Map)": 469222.0,
        "org.apache.commons.lang3.reflect$TypeUtils#isInstance(java.lang.Object,java.lang.reflect.Type)": 682.0,
        "org.apache.commons.lang3.reflect$TypeUtils#mapTypeVariablesToArguments(java.lang.Class,java.lang.reflect.ParameterizedType,java.util.Map)": 682.0,
        "org.apache.commons.lang3.reflect$TypeUtils#normalizeUpperBounds(java.lang.reflect.Type[])": 469222.0,
        "org.apache.commons.lang3.reflect$TypeUtils#substituteTypeVariables(java.lang.reflect.Type,java.util.Map)": 469222.0,
        "org.apache.commons.lang3.reflect$TypeUtils#typesSatisfyVariables(java.util.Map)": 682.0,
        "org.apache.commons.lang3.reflect$TypeUtils#unrollVariableAssignments(java.lang.reflect.TypeVariable,java.util.Map)": 684.0,
        "org.apache.commons.lang3.text.translate$AggregateTranslator#AggregateTranslator(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])": 439544.0,
        "org.apache.commons.lang3.text.translate$AggregateTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": 446204.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#CharSequenceTranslator()": 419864.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#hex(int)": 672.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#translate(java.lang.CharSequence)": 425068.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#translate(java.lang.CharSequence,java.io.Writer)": 422462.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])": 439544.0,
        "org.apache.commons.lang3.text.translate$CodePointTranslator#CodePointTranslator()": 430304.0,
        "org.apache.commons.lang3.text.translate$CodePointTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": 658.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#<clinit>()": 435572.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#APOS_ESCAPE()": 439544.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#APOS_UNESCAPE()": 439544.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#BASIC_ESCAPE()": 439544.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#BASIC_UNESCAPE()": 439544.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#EntityArrays()": 682.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#HTML40_EXTENDED_ESCAPE()": 438218.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#HTML40_EXTENDED_UNESCAPE()": 439544.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#ISO8859_1_ESCAPE()": 438218.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#ISO8859_1_UNESCAPE()": 439544.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#JAVA_CTRL_CHARS_ESCAPE()": 439544.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#JAVA_CTRL_CHARS_UNESCAPE()": 439544.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#invert(java.lang.String[][])": 435572.0,
        "org.apache.commons.lang3.text.translate$LookupTranslator#LookupTranslator(java.lang.CharSequence[][])": 438218.0,
        "org.apache.commons.lang3.text.translate$LookupTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": 444868.0,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#NumericEntityUnescaper(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[])": 435572.0,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION)": 680.0,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 660.0,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper$OPTION#<clinit>()": 435572.0,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper$OPTION#NumericEntityUnescaper$OPTION(java.lang.String,int)": 435572.0,
        "org.apache.commons.lang3.text.translate$OctalUnescaper#<clinit>()": 438218.0,
        "org.apache.commons.lang3.text.translate$OctalUnescaper#OctalUnescaper()": 438218.0,
        "org.apache.commons.lang3.text.translate$OctalUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 680.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#UnicodeEscaper()": 684.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#UnicodeEscaper(int,int,boolean)": 435572.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#above(int)": 682.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#below(int)": 682.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#between(int,int)": 682.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#outsideOf(int,int)": 436894.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#translate(int,java.io.Writer)": 668.0,
        "org.apache.commons.lang3.text.translate$UnicodeUnescaper#UnicodeUnescaper()": 435572.0,
        "org.apache.commons.lang3.text.translate$UnicodeUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 676.0
    },
    "Lang-16": {
        "org.apache.commons.lang3$JavaVersion#<clinit>()": 135.0,
        "org.apache.commons.lang3$JavaVersion#JavaVersion(java.lang.String,int,float,java.lang.String)": 135.0,
        "org.apache.commons.lang3$JavaVersion#atLeast(org.apache.commons.lang3.JavaVersion)": 583.0,
        "org.apache.commons.lang3$JavaVersion#get(java.lang.String)": 139.0,
        "org.apache.commons.lang3$JavaVersion#getJavaVersion(java.lang.String)": 633.0,
        "org.apache.commons.lang3$JavaVersion#toString()": 633.0,
        "org.apache.commons.lang3$StringUtils#<clinit>()": 105965.0,
        "org.apache.commons.lang3$StringUtils#StringUtils()": 633.0,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int)": 631.0,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int,int)": 631.0,
        "org.apache.commons.lang3$StringUtils#abbreviateMiddle(java.lang.String,java.lang.String,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#capitalize(java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,char)": 631.0,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String,java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#chop(java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,java.lang.CharSequence)": 627.0,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,char[])": 619.0,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,java.lang.CharSequence)": 629.0,
        "org.apache.commons.lang3$StringUtils#containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 631.0,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,char[])": 619.0,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,java.lang.String)": 629.0,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,char[])": 625.0,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#containsWhitespace(java.lang.CharSequence)": 633.0,
        "org.apache.commons.lang3$StringUtils#countMatches(java.lang.CharSequence,java.lang.CharSequence)": 633.0,
        "org.apache.commons.lang3$StringUtils#defaultIfBlank(java.lang.CharSequence,java.lang.CharSequence)": 627.0,
        "org.apache.commons.lang3$StringUtils#defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence)": 627.0,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String)": 629.0,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String,java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#deleteWhitespace(java.lang.String)": 605.0,
        "org.apache.commons.lang3$StringUtils#difference(java.lang.String,java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence)": 631.0,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 627.0,
        "org.apache.commons.lang3$StringUtils#endsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 633.0,
        "org.apache.commons.lang3$StringUtils#endsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 631.0,
        "org.apache.commons.lang3$StringUtils#equals(java.lang.CharSequence,java.lang.CharSequence)": 603.0,
        "org.apache.commons.lang3$StringUtils#equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 633.0,
        "org.apache.commons.lang3$StringUtils#getCommonPrefix(java.lang.String[])": 633.0,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)": 633.0,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence)": 633.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,char[])": 627.0,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 633.0,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.String)": 631.0,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,char[])": 621.0,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)": 631.0,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)": 631.0,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence[])": 631.0,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 633.0,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 631.0,
        "org.apache.commons.lang3$StringUtils#isAllLowerCase(java.lang.CharSequence)": 633.0,
        "org.apache.commons.lang3$StringUtils#isAllUpperCase(java.lang.CharSequence)": 633.0,
        "org.apache.commons.lang3$StringUtils#isAlpha(java.lang.CharSequence)": 633.0,
        "org.apache.commons.lang3$StringUtils#isAlphaSpace(java.lang.CharSequence)": 633.0,
        "org.apache.commons.lang3$StringUtils#isAlphanumeric(java.lang.CharSequence)": 633.0,
        "org.apache.commons.lang3$StringUtils#isAlphanumericSpace(java.lang.CharSequence)": 633.0,
        "org.apache.commons.lang3$StringUtils#isAsciiPrintable(java.lang.CharSequence)": 633.0,
        "org.apache.commons.lang3$StringUtils#isBlank(java.lang.CharSequence)": 375745.0,
        "org.apache.commons.lang3$StringUtils#isEmpty(java.lang.CharSequence)": 224513.0,
        "org.apache.commons.lang3$StringUtils#isNotBlank(java.lang.CharSequence)": 633.0,
        "org.apache.commons.lang3$StringUtils#isNotEmpty(java.lang.CharSequence)": 617.0,
        "org.apache.commons.lang3$StringUtils#isNumeric(java.lang.CharSequence)": 633.0,
        "org.apache.commons.lang3$StringUtils#isNumericSpace(java.lang.CharSequence)": 633.0,
        "org.apache.commons.lang3$StringUtils#isWhitespace(java.lang.CharSequence)": 633.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,char)": 633.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[])": 629.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char)": 631.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char,int,int)": 631.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String)": 627.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String,int,int)": 627.0,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,char)": 631.0,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,java.lang.String)": 631.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence)": 633.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 633.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 633.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 631.0,
        "org.apache.commons.lang3$StringUtils#lastOrdinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#left(java.lang.String,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,char)": 599.0,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,java.lang.String)": 629.0,
        "org.apache.commons.lang3$StringUtils#length(java.lang.CharSequence)": 627.0,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String,java.util.Locale)": 633.0,
        "org.apache.commons.lang3$StringUtils#mid(java.lang.String,int,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#normalizeSpace(java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)": 631.0,
        "org.apache.commons.lang3$StringUtils#overlay(java.lang.String,java.lang.String,int,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,char)": 633.0,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#removeAccentsJava6(java.lang.CharSequence)": 633.0,
        "org.apache.commons.lang3$StringUtils#removeAccentsSUN(java.lang.CharSequence)": 635.0,
        "org.apache.commons.lang3$StringUtils#removeEnd(java.lang.String,java.lang.String)": 631.0,
        "org.apache.commons.lang3$StringUtils#removeEndIgnoreCase(java.lang.String,java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#removeStart(java.lang.String,java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#removeStartIgnoreCase(java.lang.String,java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#repeat(char,int)": 593.0,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,int)": 627.0,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,java.lang.String,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String)": 625.0,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String,int)": 615.0,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,char,char)": 631.0,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,java.lang.String,java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[])": 633.0,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)": 631.0,
        "org.apache.commons.lang3$StringUtils#replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[])": 633.0,
        "org.apache.commons.lang3$StringUtils#replaceOnce(java.lang.String,java.lang.String,java.lang.String)": 629.0,
        "org.apache.commons.lang3$StringUtils#reverse(java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#reverseDelimited(java.lang.String,char)": 633.0,
        "org.apache.commons.lang3$StringUtils#right(java.lang.String,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,char)": 623.0,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,java.lang.String)": 629.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,char)": 631.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String,int)": 631.0,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String,boolean)": 631.0,
        "org.apache.commons.lang3$StringUtils#splitByCharacterTypeCamelCase(java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String)": 635.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)": 629.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,char)": 633.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,char,boolean)": 629.0,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,java.lang.String,int,boolean)": 621.0,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence)": 631.0,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 627.0,
        "org.apache.commons.lang3$StringUtils#startsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 633.0,
        "org.apache.commons.lang3$StringUtils#startsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 631.0,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String,java.lang.String)": 625.0,
        "org.apache.commons.lang3$StringUtils#stripAccents(java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[])": 633.0,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[],java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#stripEnd(java.lang.String,java.lang.String)": 621.0,
        "org.apache.commons.lang3$StringUtils#stripStart(java.lang.String,java.lang.String)": 623.0,
        "org.apache.commons.lang3$StringUtils#stripToEmpty(java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#stripToNull(java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int,int)": 633.0,
        "org.apache.commons.lang3$StringUtils#substringAfter(java.lang.String,java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#substringAfterLast(java.lang.String,java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#substringBefore(java.lang.String,java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#substringBeforeLast(java.lang.String,java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String,java.lang.String)": 631.0,
        "org.apache.commons.lang3$StringUtils#substringsBetween(java.lang.String,java.lang.String,java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#swapCase(java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#trim(java.lang.String)": 629.0,
        "org.apache.commons.lang3$StringUtils#trimToEmpty(java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#trimToNull(java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#uncapitalize(java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String)": 633.0,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String,java.util.Locale)": 633.0,
        "org.apache.commons.lang3$SystemUtils#<clinit>()": 141.0,
        "org.apache.commons.lang3$SystemUtils#SystemUtils()": 633.0,
        "org.apache.commons.lang3$SystemUtils#getJavaHome()": 633.0,
        "org.apache.commons.lang3$SystemUtils#getJavaIoTmpDir()": 633.0,
        "org.apache.commons.lang3$SystemUtils#getJavaVersionMatches(java.lang.String)": 141.0,
        "org.apache.commons.lang3$SystemUtils#getOSMatches(java.lang.String,java.lang.String)": 141.0,
        "org.apache.commons.lang3$SystemUtils#getOSMatchesName(java.lang.String)": 141.0,
        "org.apache.commons.lang3$SystemUtils#getSystemProperty(java.lang.String)": 141.0,
        "org.apache.commons.lang3$SystemUtils#getUserDir()": 633.0,
        "org.apache.commons.lang3$SystemUtils#getUserHome()": 633.0,
        "org.apache.commons.lang3$SystemUtils#isJavaAwtHeadless()": 633.0,
        "org.apache.commons.lang3$SystemUtils#isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion)": 585.0,
        "org.apache.commons.lang3$SystemUtils#isJavaVersionMatch(java.lang.String,java.lang.String)": 141.0,
        "org.apache.commons.lang3$SystemUtils#isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 141.0,
        "org.apache.commons.lang3$SystemUtils#isOSNameMatch(java.lang.String,java.lang.String)": 141.0,
        "org.apache.commons.lang3.math$NumberUtils#<clinit>()": 309055.0,
        "org.apache.commons.lang3.math$NumberUtils#NumberUtils()": 633.0,
        "org.apache.commons.lang3.math$NumberUtils#createBigDecimal(java.lang.String)": 631.0,
        "org.apache.commons.lang3.math$NumberUtils#createBigInteger(java.lang.String)": 631.0,
        "org.apache.commons.lang3.math$NumberUtils#createDouble(java.lang.String)": 401953.0,
        "org.apache.commons.lang3.math$NumberUtils#createFloat(java.lang.String)": 401953.0,
        "org.apache.commons.lang3.math$NumberUtils#createInteger(java.lang.String)": 401953.0,
        "org.apache.commons.lang3.math$NumberUtils#createLong(java.lang.String)": 400685.0,
        "org.apache.commons.lang3.math$NumberUtils#createNumber(java.lang.String)": 401953.0,
        "org.apache.commons.lang3.math$NumberUtils#isAllZeros(java.lang.String)": 401953.0,
        "org.apache.commons.lang3.math$NumberUtils#isDigits(java.lang.String)": 400685.0,
        "org.apache.commons.lang3.math$NumberUtils#isNumber(java.lang.String)": 633.0,
        "org.apache.commons.lang3.math$NumberUtils#max(byte,byte,byte)": 633.0,
        "org.apache.commons.lang3.math$NumberUtils#max(byte[])": 629.0,
        "org.apache.commons.lang3.math$NumberUtils#max(double,double,double)": 631.0,
        "org.apache.commons.lang3.math$NumberUtils#max(double[])": 627.0,
        "org.apache.commons.lang3.math$NumberUtils#max(float,float,float)": 631.0,
        "org.apache.commons.lang3.math$NumberUtils#max(float[])": 627.0,
        "org.apache.commons.lang3.math$NumberUtils#max(int,int,int)": 633.0,
        "org.apache.commons.lang3.math$NumberUtils#max(int[])": 629.0,
        "org.apache.commons.lang3.math$NumberUtils#max(long,long,long)": 633.0,
        "org.apache.commons.lang3.math$NumberUtils#max(long[])": 629.0,
        "org.apache.commons.lang3.math$NumberUtils#max(short,short,short)": 633.0,
        "org.apache.commons.lang3.math$NumberUtils#max(short[])": 629.0,
        "org.apache.commons.lang3.math$NumberUtils#min(byte,byte,byte)": 633.0,
        "org.apache.commons.lang3.math$NumberUtils#min(byte[])": 629.0,
        "org.apache.commons.lang3.math$NumberUtils#min(double,double,double)": 631.0,
        "org.apache.commons.lang3.math$NumberUtils#min(double[])": 627.0,
        "org.apache.commons.lang3.math$NumberUtils#min(float,float,float)": 631.0,
        "org.apache.commons.lang3.math$NumberUtils#min(float[])": 629.0,
        "org.apache.commons.lang3.math$NumberUtils#min(int,int,int)": 633.0,
        "org.apache.commons.lang3.math$NumberUtils#min(int[])": 629.0,
        "org.apache.commons.lang3.math$NumberUtils#min(long,long,long)": 633.0,
        "org.apache.commons.lang3.math$NumberUtils#min(long[])": 629.0,
        "org.apache.commons.lang3.math$NumberUtils#min(short,short,short)": 633.0,
        "org.apache.commons.lang3.math$NumberUtils#min(short[])": 629.0,
        "org.apache.commons.lang3.math$NumberUtils#toByte(java.lang.String)": 633.0,
        "org.apache.commons.lang3.math$NumberUtils#toByte(java.lang.String,byte)": 631.0,
        "org.apache.commons.lang3.math$NumberUtils#toDouble(java.lang.String)": 633.0,
        "org.apache.commons.lang3.math$NumberUtils#toDouble(java.lang.String,double)": 631.0,
        "org.apache.commons.lang3.math$NumberUtils#toFloat(java.lang.String)": 633.0,
        "org.apache.commons.lang3.math$NumberUtils#toFloat(java.lang.String,float)": 631.0,
        "org.apache.commons.lang3.math$NumberUtils#toInt(java.lang.String)": 633.0,
        "org.apache.commons.lang3.math$NumberUtils#toInt(java.lang.String,int)": 631.0,
        "org.apache.commons.lang3.math$NumberUtils#toLong(java.lang.String)": 633.0,
        "org.apache.commons.lang3.math$NumberUtils#toLong(java.lang.String,long)": 631.0,
        "org.apache.commons.lang3.math$NumberUtils#toShort(java.lang.String)": 633.0,
        "org.apache.commons.lang3.math$NumberUtils#toShort(java.lang.String,short)": 631.0
    },
    "Lang-17": {
        "org.apache.commons.lang3$ArrayUtils#<clinit>()": 7.0,
        "org.apache.commons.lang3$ArrayUtils#ArrayUtils()": 331.0,
        "org.apache.commons.lang3$ArrayUtils#add(boolean[],boolean)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#add(boolean[],int,boolean)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#add(byte[],byte)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#add(byte[],int,byte)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#add(char[],char)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#add(char[],int,char)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#add(double[],double)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#add(double[],int,double)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#add(float[],float)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#add(float[],int,float)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#add(int[],int)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#add(int[],int,int)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#add(java.lang.Object,int,java.lang.Object,java.lang.Class)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#add(java.lang.Object[],int,java.lang.Object)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#add(java.lang.Object[],java.lang.Object)": 325.0,
        "org.apache.commons.lang3$ArrayUtils#add(long[],int,long)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#add(long[],long)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#add(short[],int,short)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#add(short[],short)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(boolean[],boolean[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(byte[],byte[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(char[],char[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(double[],double[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(float[],float[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(int[],int[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(java.lang.Object[],java.lang.Object[])": 325.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(long[],long[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(short[],short[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#clone(boolean[])": 327.0,
        "org.apache.commons.lang3$ArrayUtils#clone(byte[])": 327.0,
        "org.apache.commons.lang3$ArrayUtils#clone(char[])": 305.0,
        "org.apache.commons.lang3$ArrayUtils#clone(double[])": 327.0,
        "org.apache.commons.lang3$ArrayUtils#clone(float[])": 327.0,
        "org.apache.commons.lang3$ArrayUtils#clone(int[])": 327.0,
        "org.apache.commons.lang3$ArrayUtils#clone(java.lang.Object[])": 96697.0,
        "org.apache.commons.lang3$ArrayUtils#clone(long[])": 327.0,
        "org.apache.commons.lang3$ArrayUtils#clone(short[])": 327.0,
        "org.apache.commons.lang3$ArrayUtils#contains(boolean[],boolean)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#contains(byte[],byte)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#contains(char[],char)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#contains(double[],double)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#contains(double[],double,double)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#contains(float[],float)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#contains(int[],int)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#contains(java.lang.Object[],java.lang.Object)": 287.0,
        "org.apache.commons.lang3$ArrayUtils#contains(long[],long)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#contains(short[],short)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#copyArrayGrow1(java.lang.Object,java.lang.Class)": 311.0,
        "org.apache.commons.lang3$ArrayUtils#getLength(java.lang.Object)": 293.0,
        "org.apache.commons.lang3$ArrayUtils#hashCode(java.lang.Object)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(boolean[],boolean)": 327.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(boolean[],boolean,int)": 325.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(byte[],byte)": 327.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(byte[],byte,int)": 325.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(char[],char)": 327.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(char[],char,int)": 325.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double)": 327.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double,double)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double,int)": 325.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double,int,double)": 327.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(float[],float)": 327.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(float[],float,int)": 325.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(int[],int)": 327.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(int[],int,int)": 325.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(java.lang.Object[],java.lang.Object)": 283.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(java.lang.Object[],java.lang.Object,int)": 281.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(long[],long)": 327.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(long[],long,int)": 325.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(short[],short)": 327.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(short[],short,int)": 325.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(boolean[])": 319.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(byte[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(char[])": 293.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(double[])": 309.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(float[])": 319.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(int[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(java.lang.Object[])": 327.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(long[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(short[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#isEquals(java.lang.Object,java.lang.Object)": 311.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(boolean[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(byte[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(char[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(double[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(float[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(int[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(java.lang.Object[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(long[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(short[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(boolean[],boolean[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(byte[],byte[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(char[],char[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(double[],double[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(float[],float[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(int[],int[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(java.lang.Object[],java.lang.Object[])": 305.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(long[],long[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(short[],short[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#isSameType(java.lang.Object,java.lang.Object)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(boolean[],boolean)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(boolean[],boolean,int)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(byte[],byte)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(byte[],byte,int)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(char[],char)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(char[],char,int)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double,double)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double,int)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double,int,double)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(float[],float)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(float[],float,int)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(int[],int)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(int[],int,int)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(java.lang.Object[],java.lang.Object)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(java.lang.Object[],java.lang.Object,int)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(long[],long)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(long[],long,int)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(short[],short)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(short[],short,int)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(boolean[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(byte[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(char[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(double[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(float[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(int[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Boolean[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Byte[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Character[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Double[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Float[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Integer[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Long[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Object[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Short[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.String[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(long[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(short[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#remove(boolean[],int)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#remove(byte[],int)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#remove(char[],int)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#remove(double[],int)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#remove(float[],int)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#remove(int[],int)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#remove(java.lang.Object,int)": 295.0,
        "org.apache.commons.lang3$ArrayUtils#remove(java.lang.Object[],int)": 327.0,
        "org.apache.commons.lang3$ArrayUtils#remove(long[],int)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#remove(short[],int)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(boolean[],boolean)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(byte[],byte)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(char[],char)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(double[],double)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(float[],float)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(int[],int)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(java.lang.Object[],java.lang.Object)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(long[],long)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(short[],short)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(boolean[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(byte[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(char[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(double[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(float[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(int[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(java.lang.Object[])": 329.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(long[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(short[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(boolean[],int,int)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(byte[],int,int)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(char[],int,int)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(double[],int,int)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(float[],int,int)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(int[],int,int)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(java.lang.Object[],int,int)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(long[],int,int)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(short[],int,int)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toArray(java.lang.Object[])": 321.0,
        "org.apache.commons.lang3$ArrayUtils#toMap(java.lang.Object[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(boolean[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(byte[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(char[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(double[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(float[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(int[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(long[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(short[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Boolean[])": 325.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Boolean[],boolean)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Byte[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Byte[],byte)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Character[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Character[],char)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Double[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Double[],double)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Float[])": 329.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Float[],float)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Integer[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Integer[],int)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Long[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Long[],long)": 329.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Short[])": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Short[],short)": 331.0,
        "org.apache.commons.lang3$ArrayUtils#toString(java.lang.Object)": 315.0,
        "org.apache.commons.lang3$ArrayUtils#toString(java.lang.Object,java.lang.String)": 315.0,
        "org.apache.commons.lang3$StringEscapeUtils#<clinit>()": 98575.0,
        "org.apache.commons.lang3$StringEscapeUtils#StringEscapeUtils()": 331.0,
        "org.apache.commons.lang3$StringEscapeUtils#escapeCsv(java.lang.String)": 331.0,
        "org.apache.commons.lang3$StringEscapeUtils#escapeEcmaScript(java.lang.String)": 331.0,
        "org.apache.commons.lang3$StringEscapeUtils#escapeHtml3(java.lang.String)": 333.0,
        "org.apache.commons.lang3$StringEscapeUtils#escapeHtml4(java.lang.String)": 323.0,
        "org.apache.commons.lang3$StringEscapeUtils#escapeJava(java.lang.String)": 327.0,
        "org.apache.commons.lang3$StringEscapeUtils#escapeXml(java.lang.String)": 110887.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeCsv(java.lang.String)": 331.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeEcmaScript(java.lang.String)": 333.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeHtml3(java.lang.String)": 333.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeHtml4(java.lang.String)": 317.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeJava(java.lang.String)": 331.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeXml(java.lang.String)": 329.0,
        "org.apache.commons.lang3$StringEscapeUtils$CsvEscaper#<clinit>()": 98575.0,
        "org.apache.commons.lang3$StringEscapeUtils$CsvEscaper#StringEscapeUtils$CsvEscaper()": 98575.0,
        "org.apache.commons.lang3$StringEscapeUtils$CsvEscaper#translate(java.lang.CharSequence,int,java.io.Writer)": 329.0,
        "org.apache.commons.lang3$StringEscapeUtils$CsvUnescaper#<clinit>()": 98575.0,
        "org.apache.commons.lang3$StringEscapeUtils$CsvUnescaper#StringEscapeUtils$CsvUnescaper()": 98575.0,
        "org.apache.commons.lang3$StringEscapeUtils$CsvUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 329.0,
        "org.apache.commons.lang3.text.translate$AggregateTranslator#AggregateTranslator(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])": 98575.0,
        "org.apache.commons.lang3.text.translate$AggregateTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": 101745.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#CharSequenceTranslator()": 89365.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#hex(int)": 323.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#translate(java.lang.CharSequence)": 91777.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#translate(java.lang.CharSequence,java.io.Writer)": 90567.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])": 98575.0,
        "org.apache.commons.lang3.text.translate$CodePointTranslator#CodePointTranslator()": 94221.0,
        "org.apache.commons.lang3.text.translate$CodePointTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": 311.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#<clinit>()": 96697.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#APOS_ESCAPE()": 98575.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#APOS_UNESCAPE()": 98575.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#BASIC_ESCAPE()": 98575.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#BASIC_UNESCAPE()": 98575.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#EntityArrays()": 331.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#HTML40_EXTENDED_ESCAPE()": 97947.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#HTML40_EXTENDED_UNESCAPE()": 98575.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#ISO8859_1_ESCAPE()": 97947.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#ISO8859_1_UNESCAPE()": 98575.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#JAVA_CTRL_CHARS_ESCAPE()": 98575.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#JAVA_CTRL_CHARS_UNESCAPE()": 98575.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#invert(java.lang.String[][])": 96697.0,
        "org.apache.commons.lang3.text.translate$LookupTranslator#LookupTranslator(java.lang.CharSequence[][])": 97947.0,
        "org.apache.commons.lang3.text.translate$LookupTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": 101107.0,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#NumericEntityUnescaper(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[])": 96697.0,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION)": 329.0,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 311.0,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper$OPTION#<clinit>()": 96697.0,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper$OPTION#NumericEntityUnescaper$OPTION(java.lang.String,int)": 96697.0,
        "org.apache.commons.lang3.text.translate$OctalUnescaper#<clinit>()": 97947.0,
        "org.apache.commons.lang3.text.translate$OctalUnescaper#OctalUnescaper()": 97947.0,
        "org.apache.commons.lang3.text.translate$OctalUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 329.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#UnicodeEscaper()": 333.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#UnicodeEscaper(int,int,boolean)": 96697.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#above(int)": 331.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#below(int)": 331.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#between(int,int)": 331.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#outsideOf(int,int)": 97321.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#translate(int,java.io.Writer)": 319.0,
        "org.apache.commons.lang3.text.translate$UnicodeUnescaper#UnicodeUnescaper()": 96697.0,
        "org.apache.commons.lang3.text.translate$UnicodeUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 325.0
    },
    "Lang-18": {
        "org.apache.commons.lang3$Validate#Validate()": 124.0,
        "org.apache.commons.lang3$Validate#exclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable)": 124.0,
        "org.apache.commons.lang3$Validate#exclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable,java.lang.String,java.lang.Object[])": 124.0,
        "org.apache.commons.lang3$Validate#inclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable)": 124.0,
        "org.apache.commons.lang3$Validate#inclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable,java.lang.String,java.lang.Object[])": 124.0,
        "org.apache.commons.lang3$Validate#isAssignableFrom(java.lang.Class,java.lang.Class)": 124.0,
        "org.apache.commons.lang3$Validate#isAssignableFrom(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])": 124.0,
        "org.apache.commons.lang3$Validate#isInstanceOf(java.lang.Class,java.lang.Object)": 124.0,
        "org.apache.commons.lang3$Validate#isInstanceOf(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])": 124.0,
        "org.apache.commons.lang3$Validate#isTrue(boolean)": 114.0,
        "org.apache.commons.lang3$Validate#isTrue(boolean,java.lang.String,double)": 124.0,
        "org.apache.commons.lang3$Validate#isTrue(boolean,java.lang.String,java.lang.Object[])": 86.0,
        "org.apache.commons.lang3$Validate#isTrue(boolean,java.lang.String,long)": 8244.0,
        "org.apache.commons.lang3$Validate#matchesPattern(java.lang.CharSequence,java.lang.String)": 124.0,
        "org.apache.commons.lang3$Validate#matchesPattern(java.lang.CharSequence,java.lang.String,java.lang.String,java.lang.Object[])": 124.0,
        "org.apache.commons.lang3$Validate#noNullElements(java.lang.Iterable)": 124.0,
        "org.apache.commons.lang3$Validate#noNullElements(java.lang.Iterable,java.lang.String,java.lang.Object[])": 122.0,
        "org.apache.commons.lang3$Validate#noNullElements(java.lang.Object[])": 122.0,
        "org.apache.commons.lang3$Validate#noNullElements(java.lang.Object[],java.lang.String,java.lang.Object[])": 118.0,
        "org.apache.commons.lang3$Validate#notBlank(java.lang.CharSequence)": 110.0,
        "org.apache.commons.lang3$Validate#notBlank(java.lang.CharSequence,java.lang.String,java.lang.Object[])": 94.0,
        "org.apache.commons.lang3$Validate#notEmpty(java.lang.CharSequence)": 124.0,
        "org.apache.commons.lang3$Validate#notEmpty(java.lang.CharSequence,java.lang.String,java.lang.Object[])": 122.0,
        "org.apache.commons.lang3$Validate#notEmpty(java.lang.Object[])": 124.0,
        "org.apache.commons.lang3$Validate#notEmpty(java.lang.Object[],java.lang.String,java.lang.Object[])": 122.0,
        "org.apache.commons.lang3$Validate#notEmpty(java.util.Collection)": 124.0,
        "org.apache.commons.lang3$Validate#notEmpty(java.util.Collection,java.lang.String,java.lang.Object[])": 122.0,
        "org.apache.commons.lang3$Validate#notEmpty(java.util.Map)": 124.0,
        "org.apache.commons.lang3$Validate#notEmpty(java.util.Map,java.lang.String,java.lang.Object[])": 122.0,
        "org.apache.commons.lang3$Validate#notNull(java.lang.Object)": 104.0,
        "org.apache.commons.lang3$Validate#notNull(java.lang.Object,java.lang.String,java.lang.Object[])": 66.0,
        "org.apache.commons.lang3$Validate#validIndex(java.lang.CharSequence,int)": 124.0,
        "org.apache.commons.lang3$Validate#validIndex(java.lang.CharSequence,int,java.lang.String,java.lang.Object[])": 122.0,
        "org.apache.commons.lang3$Validate#validIndex(java.lang.Object[],int)": 124.0,
        "org.apache.commons.lang3$Validate#validIndex(java.lang.Object[],int,java.lang.String,java.lang.Object[])": 122.0,
        "org.apache.commons.lang3$Validate#validIndex(java.util.Collection,int)": 124.0,
        "org.apache.commons.lang3$Validate#validIndex(java.util.Collection,int,java.lang.String,java.lang.Object[])": 122.0,
        "org.apache.commons.lang3$Validate#validState(boolean)": 126.0,
        "org.apache.commons.lang3$Validate#validState(boolean,java.lang.String,java.lang.Object[])": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#<clinit>()": 6352.0,
        "org.apache.commons.lang3.time$FastDateFormat#FastDateFormat(java.lang.String,java.util.TimeZone,java.util.Locale)": 6352.0,
        "org.apache.commons.lang3.time$FastDateFormat#applyRules(java.util.Calendar,java.lang.StringBuffer)": 7882.0,
        "org.apache.commons.lang3.time$FastDateFormat#equals(java.lang.Object)": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Calendar)": 8614.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Calendar,java.lang.StringBuffer)": 8614.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Date)": 8992.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Date,java.lang.StringBuffer)": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(long)": 16128.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(long,java.lang.StringBuffer)": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int)": 124.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.Locale)": 122.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.TimeZone)": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.TimeZone,java.util.Locale)": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int)": 124.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.Locale)": 124.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.TimeZone)": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale)": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance()": 124.0,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String)": 7528.0,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.Locale)": 54.0,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.TimeZone)": 122.0,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 108.0,
        "org.apache.commons.lang3.time$FastDateFormat#getLocale()": 116.0,
        "org.apache.commons.lang3.time$FastDateFormat#getMaxLengthEstimate()": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#getPattern()": 108.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int)": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.Locale)": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.TimeZone)": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.TimeZone,java.util.Locale)": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeZone()": 120.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)": 15874.0,
        "org.apache.commons.lang3.time$FastDateFormat#hashCode()": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#init()": 6352.0,
        "org.apache.commons.lang3.time$FastDateFormat#parseObject(java.lang.String,java.text.ParsePosition)": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#parsePattern()": 6352.0,
        "org.apache.commons.lang3.time$FastDateFormat#parseToken(java.lang.String,int[])": 6352.0,
        "org.apache.commons.lang3.time$FastDateFormat#readObject(java.io.ObjectInputStream)": 124.0,
        "org.apache.commons.lang3.time$FastDateFormat#selectNumberRule(int,int)": 6352.0,
        "org.apache.commons.lang3.time$FastDateFormat#toString()": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat$1#createInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 6352.0,
        "org.apache.commons.lang3.time$FastDateFormat$CharacterLiteral#FastDateFormat$CharacterLiteral(char)": 6514.0,
        "org.apache.commons.lang3.time$FastDateFormat$CharacterLiteral#appendTo(java.lang.StringBuffer,java.util.Calendar)": 8428.0,
        "org.apache.commons.lang3.time$FastDateFormat$CharacterLiteral#estimateLength()": 6514.0,
        "org.apache.commons.lang3.time$FastDateFormat$PaddedNumberField#FastDateFormat$PaddedNumberField(int,int)": 6678.0,
        "org.apache.commons.lang3.time$FastDateFormat$PaddedNumberField#appendTo(java.lang.StringBuffer,int)": 8428.0,
        "org.apache.commons.lang3.time$FastDateFormat$PaddedNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 8428.0,
        "org.apache.commons.lang3.time$FastDateFormat$PaddedNumberField#estimateLength()": 6678.0,
        "org.apache.commons.lang3.time$FastDateFormat$StringLiteral#FastDateFormat$StringLiteral(java.lang.String)": 54.0,
        "org.apache.commons.lang3.time$FastDateFormat$StringLiteral#appendTo(java.lang.StringBuffer,java.util.Calendar)": 122.0,
        "org.apache.commons.lang3.time$FastDateFormat$StringLiteral#estimateLength()": 54.0,
        "org.apache.commons.lang3.time$FastDateFormat$TextField#FastDateFormat$TextField(int,java.lang.String[])": 8062.0,
        "org.apache.commons.lang3.time$FastDateFormat$TextField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 15622.0,
        "org.apache.commons.lang3.time$FastDateFormat$TextField#estimateLength()": 8062.0,
        "org.apache.commons.lang3.time$FastDateFormat$TimeZoneDisplayKey#FastDateFormat$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale)": 15874.0,
        "org.apache.commons.lang3.time$FastDateFormat$TimeZoneDisplayKey#equals(java.lang.Object)": 16128.0,
        "org.apache.commons.lang3.time$FastDateFormat$TimeZoneDisplayKey#hashCode()": 15874.0,
        "org.apache.commons.lang3.time$FastDateFormat$TimeZoneNameRule#FastDateFormat$TimeZoneNameRule(java.util.TimeZone,java.util.Locale,int)": 15874.0,
        "org.apache.commons.lang3.time$FastDateFormat$TimeZoneNameRule#appendTo(java.lang.StringBuffer,java.util.Calendar)": 16128.0,
        "org.apache.commons.lang3.time$FastDateFormat$TimeZoneNameRule#estimateLength()": 15874.0,
        "org.apache.commons.lang3.time$FastDateFormat$TimeZoneNumberRule#<clinit>()": 8802.0,
        "org.apache.commons.lang3.time$FastDateFormat$TimeZoneNumberRule#FastDateFormat$TimeZoneNumberRule(boolean)": 8802.0,
        "org.apache.commons.lang3.time$FastDateFormat$TimeZoneNumberRule#appendTo(java.lang.StringBuffer,java.util.Calendar)": 14392.0,
        "org.apache.commons.lang3.time$FastDateFormat$TimeZoneNumberRule#estimateLength()": 8802.0,
        "org.apache.commons.lang3.time$FastDateFormat$TwelveHourField#FastDateFormat$TwelveHourField(org.apache.commons.lang3.time.FastDateFormat$NumberRule)": 122.0,
        "org.apache.commons.lang3.time$FastDateFormat$TwelveHourField#appendTo(java.lang.StringBuffer,int)": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat$TwelveHourField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat$TwelveHourField#estimateLength()": 122.0,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitMonthField#<clinit>()": 7012.0,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitMonthField#FastDateFormat$TwoDigitMonthField()": 7012.0,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitMonthField#appendTo(java.lang.StringBuffer,int)": 8992.0,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitMonthField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 8992.0,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitMonthField#estimateLength()": 7012.0,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitNumberField#FastDateFormat$TwoDigitNumberField(int)": 6514.0,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitNumberField#appendTo(java.lang.StringBuffer,int)": 8244.0,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 8244.0,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitNumberField#estimateLength()": 6514.0,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitYearField#<clinit>()": 15622.0,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitYearField#FastDateFormat$TwoDigitYearField()": 15622.0,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitYearField#appendTo(java.lang.StringBuffer,int)": 15874.0,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitYearField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 15874.0,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitYearField#estimateLength()": 15622.0,
        "org.apache.commons.lang3.time$FastDateFormat$UnpaddedMonthField#<clinit>()": 15124.0,
        "org.apache.commons.lang3.time$FastDateFormat$UnpaddedMonthField#FastDateFormat$UnpaddedMonthField()": 15124.0,
        "org.apache.commons.lang3.time$FastDateFormat$UnpaddedMonthField#appendTo(java.lang.StringBuffer,int)": 15372.0,
        "org.apache.commons.lang3.time$FastDateFormat$UnpaddedMonthField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 15372.0,
        "org.apache.commons.lang3.time$FastDateFormat$UnpaddedMonthField#estimateLength()": 15124.0,
        "org.apache.commons.lang3.time$FastDateFormat$UnpaddedNumberField#FastDateFormat$UnpaddedNumberField(int)": 14634.0,
        "org.apache.commons.lang3.time$FastDateFormat$UnpaddedNumberField#appendTo(java.lang.StringBuffer,int)": 15372.0,
        "org.apache.commons.lang3.time$FastDateFormat$UnpaddedNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 15372.0,
        "org.apache.commons.lang3.time$FastDateFormat$UnpaddedNumberField#estimateLength()": 14634.0,
        "org.apache.commons.lang3.time$FormatCache#FormatCache()": 6352.0,
        "org.apache.commons.lang3.time$FormatCache#getDateTimeInstance(java.lang.Integer,java.lang.Integer,java.util.TimeZone,java.util.Locale)": 118.0,
        "org.apache.commons.lang3.time$FormatCache#getInstance()": 126.0,
        "org.apache.commons.lang3.time$FormatCache#getInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 6352.0,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#FormatCache$MultipartKey(java.lang.Object[])": 6352.0,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#equals(java.lang.Object)": 96.0,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#hashCode()": 6352.0
    },
    "Lang-19": {
        "org.apache.commons.lang3.text.translate$AggregateTranslator#AggregateTranslator(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])": -10.0,
        "org.apache.commons.lang3.text.translate$AggregateTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": 0.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#CharSequenceTranslator()": -34.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#hex(int)": 20.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#translate(java.lang.CharSequence)": -14.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#translate(java.lang.CharSequence,java.io.Writer)": -28.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])": -10.0,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#NumericEntityUnescaper()": 98.0,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 518.0
    },
    "Lang-20": {
        "org.apache.commons.lang3$StringUtils#<clinit>()": -235.0,
        "org.apache.commons.lang3$StringUtils#StringUtils()": 229.0,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int)": 227.0,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int,int)": 227.0,
        "org.apache.commons.lang3$StringUtils#abbreviateMiddle(java.lang.String,java.lang.String,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#capitalize(java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,char)": 227.0,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String,java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#chop(java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,java.lang.CharSequence)": 223.0,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,char[])": 215.0,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,java.lang.CharSequence)": 225.0,
        "org.apache.commons.lang3$StringUtils#containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 227.0,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,char[])": 215.0,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,java.lang.String)": 225.0,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,char[])": 221.0,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#containsWhitespace(java.lang.CharSequence)": 229.0,
        "org.apache.commons.lang3$StringUtils#countMatches(java.lang.CharSequence,java.lang.CharSequence)": 229.0,
        "org.apache.commons.lang3$StringUtils#defaultIfBlank(java.lang.CharSequence,java.lang.CharSequence)": 223.0,
        "org.apache.commons.lang3$StringUtils#defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence)": 223.0,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String)": 225.0,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String,java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#deleteWhitespace(java.lang.String)": 201.0,
        "org.apache.commons.lang3$StringUtils#difference(java.lang.String,java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence)": 227.0,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 223.0,
        "org.apache.commons.lang3$StringUtils#endsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 229.0,
        "org.apache.commons.lang3$StringUtils#endsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 227.0,
        "org.apache.commons.lang3$StringUtils#equals(java.lang.CharSequence,java.lang.CharSequence)": 229.0,
        "org.apache.commons.lang3$StringUtils#equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 229.0,
        "org.apache.commons.lang3$StringUtils#getCommonPrefix(java.lang.String[])": 229.0,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)": 229.0,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence)": 229.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,char[])": 223.0,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 229.0,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.String)": 227.0,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,char[])": 217.0,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)": 227.0,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)": 227.0,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence[])": 227.0,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 229.0,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 227.0,
        "org.apache.commons.lang3$StringUtils#isAllLowerCase(java.lang.CharSequence)": 229.0,
        "org.apache.commons.lang3$StringUtils#isAllUpperCase(java.lang.CharSequence)": 229.0,
        "org.apache.commons.lang3$StringUtils#isAlpha(java.lang.CharSequence)": 229.0,
        "org.apache.commons.lang3$StringUtils#isAlphaSpace(java.lang.CharSequence)": 229.0,
        "org.apache.commons.lang3$StringUtils#isAlphanumeric(java.lang.CharSequence)": 229.0,
        "org.apache.commons.lang3$StringUtils#isAlphanumericSpace(java.lang.CharSequence)": 229.0,
        "org.apache.commons.lang3$StringUtils#isAsciiPrintable(java.lang.CharSequence)": 229.0,
        "org.apache.commons.lang3$StringUtils#isBlank(java.lang.CharSequence)": 183.0,
        "org.apache.commons.lang3$StringUtils#isEmpty(java.lang.CharSequence)": 29.0,
        "org.apache.commons.lang3$StringUtils#isNotBlank(java.lang.CharSequence)": 229.0,
        "org.apache.commons.lang3$StringUtils#isNotEmpty(java.lang.CharSequence)": 213.0,
        "org.apache.commons.lang3$StringUtils#isNumeric(java.lang.CharSequence)": 229.0,
        "org.apache.commons.lang3$StringUtils#isNumericSpace(java.lang.CharSequence)": 229.0,
        "org.apache.commons.lang3$StringUtils#isWhitespace(java.lang.CharSequence)": 229.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,char)": 229.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[])": 53357.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char)": 53821.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char,int,int)": 53821.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String)": 52895.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String,int,int)": 52895.0,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,char)": 227.0,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,java.lang.String)": 227.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence)": 229.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 229.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 229.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 227.0,
        "org.apache.commons.lang3$StringUtils#lastOrdinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#left(java.lang.String,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,char)": 195.0,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,java.lang.String)": 225.0,
        "org.apache.commons.lang3$StringUtils#length(java.lang.CharSequence)": 223.0,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String,java.util.Locale)": 229.0,
        "org.apache.commons.lang3$StringUtils#mid(java.lang.String,int,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#normalizeSpace(java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)": 227.0,
        "org.apache.commons.lang3$StringUtils#overlay(java.lang.String,java.lang.String,int,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,char)": 229.0,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#removeAccentsJava6(java.lang.CharSequence)": 229.0,
        "org.apache.commons.lang3$StringUtils#removeAccentsSUN(java.lang.CharSequence)": 231.0,
        "org.apache.commons.lang3$StringUtils#removeEnd(java.lang.String,java.lang.String)": 227.0,
        "org.apache.commons.lang3$StringUtils#removeEndIgnoreCase(java.lang.String,java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#removeStart(java.lang.String,java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#removeStartIgnoreCase(java.lang.String,java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#repeat(char,int)": 189.0,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,int)": 223.0,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,java.lang.String,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String)": 221.0,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String,int)": 211.0,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,char,char)": 227.0,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,java.lang.String,java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[])": 229.0,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)": 227.0,
        "org.apache.commons.lang3$StringUtils#replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[])": 229.0,
        "org.apache.commons.lang3$StringUtils#replaceOnce(java.lang.String,java.lang.String,java.lang.String)": 225.0,
        "org.apache.commons.lang3$StringUtils#reverse(java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#reverseDelimited(java.lang.String,char)": 229.0,
        "org.apache.commons.lang3$StringUtils#right(java.lang.String,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,char)": 219.0,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,java.lang.String)": 225.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,char)": 227.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String,int)": 227.0,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String,boolean)": 227.0,
        "org.apache.commons.lang3$StringUtils#splitByCharacterTypeCamelCase(java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String)": 231.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)": 225.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,char)": 229.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,char,boolean)": 225.0,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,java.lang.String,int,boolean)": 217.0,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence)": 227.0,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 223.0,
        "org.apache.commons.lang3$StringUtils#startsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 229.0,
        "org.apache.commons.lang3$StringUtils#startsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 227.0,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String,java.lang.String)": 221.0,
        "org.apache.commons.lang3$StringUtils#stripAccents(java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[])": 229.0,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[],java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#stripEnd(java.lang.String,java.lang.String)": 217.0,
        "org.apache.commons.lang3$StringUtils#stripStart(java.lang.String,java.lang.String)": 219.0,
        "org.apache.commons.lang3$StringUtils#stripToEmpty(java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#stripToNull(java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int,int)": 229.0,
        "org.apache.commons.lang3$StringUtils#substringAfter(java.lang.String,java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#substringAfterLast(java.lang.String,java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#substringBefore(java.lang.String,java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#substringBeforeLast(java.lang.String,java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String,java.lang.String)": 227.0,
        "org.apache.commons.lang3$StringUtils#substringsBetween(java.lang.String,java.lang.String,java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#swapCase(java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#trim(java.lang.String)": 225.0,
        "org.apache.commons.lang3$StringUtils#trimToEmpty(java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#trimToNull(java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#uncapitalize(java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String)": 229.0,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String,java.util.Locale)": 229.0
    },
    "Lang-22": {},
    "Lang-24": {},
    "Lang-26": {},
    "Lang-27": {},
    "Lang-28": {},
    "Lang-3": {
        "org.apache.commons.lang3$StringUtils#<clinit>()": 5364.0,
        "org.apache.commons.lang3$StringUtils#StringUtils()": 484.0,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int)": 482.0,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int,int)": 482.0,
        "org.apache.commons.lang3$StringUtils#abbreviateMiddle(java.lang.String,java.lang.String,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])": 482.0,
        "org.apache.commons.lang3$StringUtils#appendIfMissing(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])": 484.0,
        "org.apache.commons.lang3$StringUtils#appendIfMissingIgnoreCase(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])": 484.0,
        "org.apache.commons.lang3$StringUtils#capitalize(java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,char)": 482.0,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String,java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#chop(java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,java.lang.CharSequence)": 478.0,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,char[])": 470.0,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,java.lang.CharSequence)": 480.0,
        "org.apache.commons.lang3$StringUtils#containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 482.0,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,char[])": 468.0,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,java.lang.String)": 480.0,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,char[])": 476.0,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#containsWhitespace(java.lang.CharSequence)": 484.0,
        "org.apache.commons.lang3$StringUtils#countMatches(java.lang.CharSequence,java.lang.CharSequence)": 484.0,
        "org.apache.commons.lang3$StringUtils#defaultIfBlank(java.lang.CharSequence,java.lang.CharSequence)": 478.0,
        "org.apache.commons.lang3$StringUtils#defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence)": 478.0,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String)": 480.0,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String,java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#deleteWhitespace(java.lang.String)": 456.0,
        "org.apache.commons.lang3$StringUtils#difference(java.lang.String,java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence)": 482.0,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 474.0,
        "org.apache.commons.lang3$StringUtils#endsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 484.0,
        "org.apache.commons.lang3$StringUtils#endsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 482.0,
        "org.apache.commons.lang3$StringUtils#equals(java.lang.CharSequence,java.lang.CharSequence)": 452.0,
        "org.apache.commons.lang3$StringUtils#equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 484.0,
        "org.apache.commons.lang3$StringUtils#getCommonPrefix(java.lang.String[])": 484.0,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)": 484.0,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence)": 484.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,char[])": 478.0,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 484.0,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.String)": 482.0,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,char[])": 472.0,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)": 482.0,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)": 482.0,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence[])": 482.0,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 484.0,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 482.0,
        "org.apache.commons.lang3$StringUtils#isAllLowerCase(java.lang.CharSequence)": 484.0,
        "org.apache.commons.lang3$StringUtils#isAllUpperCase(java.lang.CharSequence)": 484.0,
        "org.apache.commons.lang3$StringUtils#isAlpha(java.lang.CharSequence)": 484.0,
        "org.apache.commons.lang3$StringUtils#isAlphaSpace(java.lang.CharSequence)": 484.0,
        "org.apache.commons.lang3$StringUtils#isAlphanumeric(java.lang.CharSequence)": 484.0,
        "org.apache.commons.lang3$StringUtils#isAlphanumericSpace(java.lang.CharSequence)": 484.0,
        "org.apache.commons.lang3$StringUtils#isAsciiPrintable(java.lang.CharSequence)": 484.0,
        "org.apache.commons.lang3$StringUtils#isBlank(java.lang.CharSequence)": 209734.0,
        "org.apache.commons.lang3$StringUtils#isEmpty(java.lang.CharSequence)": -8.0,
        "org.apache.commons.lang3$StringUtils#isNotBlank(java.lang.CharSequence)": 484.0,
        "org.apache.commons.lang3$StringUtils#isNotEmpty(java.lang.CharSequence)": 464.0,
        "org.apache.commons.lang3$StringUtils#isNumeric(java.lang.CharSequence)": 484.0,
        "org.apache.commons.lang3$StringUtils#isNumericSpace(java.lang.CharSequence)": 484.0,
        "org.apache.commons.lang3$StringUtils#isWhitespace(java.lang.CharSequence)": 484.0,
        "org.apache.commons.lang3$StringUtils#join(byte[],char)": 484.0,
        "org.apache.commons.lang3$StringUtils#join(byte[],char,int,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#join(char[],char)": 484.0,
        "org.apache.commons.lang3$StringUtils#join(char[],char,int,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#join(double[],char)": 484.0,
        "org.apache.commons.lang3$StringUtils#join(double[],char,int,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#join(float[],char)": 484.0,
        "org.apache.commons.lang3$StringUtils#join(float[],char,int,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#join(int[],char)": 484.0,
        "org.apache.commons.lang3$StringUtils#join(int[],char,int,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,char)": 484.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[])": 480.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char)": 482.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char,int,int)": 482.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String)": 478.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String,int,int)": 478.0,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,char)": 482.0,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,java.lang.String)": 482.0,
        "org.apache.commons.lang3$StringUtils#join(long[],char)": 484.0,
        "org.apache.commons.lang3$StringUtils#join(long[],char,int,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#join(short[],char)": 484.0,
        "org.apache.commons.lang3$StringUtils#join(short[],char,int,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence)": 484.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 484.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 484.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 482.0,
        "org.apache.commons.lang3$StringUtils#lastOrdinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#left(java.lang.String,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,char)": 448.0,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,java.lang.String)": 480.0,
        "org.apache.commons.lang3$StringUtils#length(java.lang.CharSequence)": 478.0,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String,java.util.Locale)": 484.0,
        "org.apache.commons.lang3$StringUtils#mid(java.lang.String,int,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#normalizeSpace(java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)": 482.0,
        "org.apache.commons.lang3$StringUtils#overlay(java.lang.String,java.lang.String,int,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])": 482.0,
        "org.apache.commons.lang3$StringUtils#prependIfMissing(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])": 484.0,
        "org.apache.commons.lang3$StringUtils#prependIfMissingIgnoreCase(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])": 484.0,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,char)": 484.0,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#removeEnd(java.lang.String,java.lang.String)": 480.0,
        "org.apache.commons.lang3$StringUtils#removeEndIgnoreCase(java.lang.String,java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#removePattern(java.lang.String,java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#removeStart(java.lang.String,java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#removeStartIgnoreCase(java.lang.String,java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#repeat(char,int)": 444.0,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,int)": 478.0,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,java.lang.String,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String)": 476.0,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String,int)": 466.0,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,char,char)": 482.0,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,java.lang.String,java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[])": 484.0,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)": 482.0,
        "org.apache.commons.lang3$StringUtils#replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[])": 484.0,
        "org.apache.commons.lang3$StringUtils#replaceOnce(java.lang.String,java.lang.String,java.lang.String)": 480.0,
        "org.apache.commons.lang3$StringUtils#replacePattern(java.lang.String,java.lang.String,java.lang.String)": 482.0,
        "org.apache.commons.lang3$StringUtils#reverse(java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#reverseDelimited(java.lang.String,char)": 484.0,
        "org.apache.commons.lang3$StringUtils#right(java.lang.String,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,char)": 474.0,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,java.lang.String)": 480.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,char)": 482.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String,int)": 482.0,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String,boolean)": 482.0,
        "org.apache.commons.lang3$StringUtils#splitByCharacterTypeCamelCase(java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String)": 486.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)": 480.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,char)": 484.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,char,boolean)": 480.0,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,java.lang.String,int,boolean)": 472.0,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence)": 482.0,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 474.0,
        "org.apache.commons.lang3$StringUtils#startsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 484.0,
        "org.apache.commons.lang3$StringUtils#startsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 482.0,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String,java.lang.String)": 476.0,
        "org.apache.commons.lang3$StringUtils#stripAccents(java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[])": 484.0,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[],java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#stripEnd(java.lang.String,java.lang.String)": 472.0,
        "org.apache.commons.lang3$StringUtils#stripStart(java.lang.String,java.lang.String)": 474.0,
        "org.apache.commons.lang3$StringUtils#stripToEmpty(java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#stripToNull(java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int,int)": 484.0,
        "org.apache.commons.lang3$StringUtils#substringAfter(java.lang.String,java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#substringAfterLast(java.lang.String,java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#substringBefore(java.lang.String,java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#substringBeforeLast(java.lang.String,java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String,java.lang.String)": 482.0,
        "org.apache.commons.lang3$StringUtils#substringsBetween(java.lang.String,java.lang.String,java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#swapCase(java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#toString(byte[],java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#trim(java.lang.String)": 480.0,
        "org.apache.commons.lang3$StringUtils#trimToEmpty(java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#trimToNull(java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#uncapitalize(java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String)": 484.0,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String,java.util.Locale)": 484.0,
        "org.apache.commons.lang3.math$NumberUtils#<clinit>()": 160714.0,
        "org.apache.commons.lang3.math$NumberUtils#NumberUtils()": 484.0,
        "org.apache.commons.lang3.math$NumberUtils#createBigDecimal(java.lang.String)": 474.0,
        "org.apache.commons.lang3.math$NumberUtils#createBigInteger(java.lang.String)": 478.0,
        "org.apache.commons.lang3.math$NumberUtils#createDouble(java.lang.String)": 474.0,
        "org.apache.commons.lang3.math$NumberUtils#createFloat(java.lang.String)": 231354.0,
        "org.apache.commons.lang3.math$NumberUtils#createInteger(java.lang.String)": 478.0,
        "org.apache.commons.lang3.math$NumberUtils#createLong(java.lang.String)": 476.0,
        "org.apache.commons.lang3.math$NumberUtils#createNumber(java.lang.String)": 229432.0,
        "org.apache.commons.lang3.math$NumberUtils#isAllZeros(java.lang.String)": 231354.0,
        "org.apache.commons.lang3.math$NumberUtils#isDigits(java.lang.String)": 478.0,
        "org.apache.commons.lang3.math$NumberUtils#isNumber(java.lang.String)": 484.0,
        "org.apache.commons.lang3.math$NumberUtils#max(byte,byte,byte)": 484.0,
        "org.apache.commons.lang3.math$NumberUtils#max(byte[])": 480.0,
        "org.apache.commons.lang3.math$NumberUtils#max(double,double,double)": 482.0,
        "org.apache.commons.lang3.math$NumberUtils#max(double[])": 478.0,
        "org.apache.commons.lang3.math$NumberUtils#max(float,float,float)": 482.0,
        "org.apache.commons.lang3.math$NumberUtils#max(float[])": 478.0,
        "org.apache.commons.lang3.math$NumberUtils#max(int,int,int)": 484.0,
        "org.apache.commons.lang3.math$NumberUtils#max(int[])": 480.0,
        "org.apache.commons.lang3.math$NumberUtils#max(long,long,long)": 484.0,
        "org.apache.commons.lang3.math$NumberUtils#max(long[])": 480.0,
        "org.apache.commons.lang3.math$NumberUtils#max(short,short,short)": 484.0,
        "org.apache.commons.lang3.math$NumberUtils#max(short[])": 480.0,
        "org.apache.commons.lang3.math$NumberUtils#min(byte,byte,byte)": 484.0,
        "org.apache.commons.lang3.math$NumberUtils#min(byte[])": 480.0,
        "org.apache.commons.lang3.math$NumberUtils#min(double,double,double)": 482.0,
        "org.apache.commons.lang3.math$NumberUtils#min(double[])": 478.0,
        "org.apache.commons.lang3.math$NumberUtils#min(float,float,float)": 482.0,
        "org.apache.commons.lang3.math$NumberUtils#min(float[])": 480.0,
        "org.apache.commons.lang3.math$NumberUtils#min(int,int,int)": 484.0,
        "org.apache.commons.lang3.math$NumberUtils#min(int[])": 480.0,
        "org.apache.commons.lang3.math$NumberUtils#min(long,long,long)": 484.0,
        "org.apache.commons.lang3.math$NumberUtils#min(long[])": 480.0,
        "org.apache.commons.lang3.math$NumberUtils#min(short,short,short)": 484.0,
        "org.apache.commons.lang3.math$NumberUtils#min(short[])": 480.0,
        "org.apache.commons.lang3.math$NumberUtils#toByte(java.lang.String)": 484.0,
        "org.apache.commons.lang3.math$NumberUtils#toByte(java.lang.String,byte)": 482.0,
        "org.apache.commons.lang3.math$NumberUtils#toDouble(java.lang.String)": 484.0,
        "org.apache.commons.lang3.math$NumberUtils#toDouble(java.lang.String,double)": 482.0,
        "org.apache.commons.lang3.math$NumberUtils#toFloat(java.lang.String)": 484.0,
        "org.apache.commons.lang3.math$NumberUtils#toFloat(java.lang.String,float)": 482.0,
        "org.apache.commons.lang3.math$NumberUtils#toInt(java.lang.String)": 484.0,
        "org.apache.commons.lang3.math$NumberUtils#toInt(java.lang.String,int)": 482.0,
        "org.apache.commons.lang3.math$NumberUtils#toLong(java.lang.String)": 484.0,
        "org.apache.commons.lang3.math$NumberUtils#toLong(java.lang.String,long)": 482.0,
        "org.apache.commons.lang3.math$NumberUtils#toShort(java.lang.String)": 484.0,
        "org.apache.commons.lang3.math$NumberUtils#toShort(java.lang.String,short)": 482.0,
        "org.apache.commons.lang3.math$NumberUtils#validateArray(java.lang.Object)": 412.0
    },
    "Lang-30": {},
    "Lang-31": {},
    "Lang-32": {},
    "Lang-33": {},
    "Lang-34": {},
    "Lang-35": {},
    "Lang-36": {},
    "Lang-37": {},
    "Lang-38": {},
    "Lang-39": {},
    "Lang-4": {
        "org.apache.commons.lang3.text.translate$AggregateTranslator#AggregateTranslator(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])": -15.0,
        "org.apache.commons.lang3.text.translate$AggregateTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": -5.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#CharSequenceTranslator()": -45.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#hex(int)": 29.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#translate(java.lang.CharSequence)": -37.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#translate(java.lang.CharSequence,java.io.Writer)": -41.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])": -15.0,
        "org.apache.commons.lang3.text.translate$LookupTranslator#LookupTranslator(java.lang.CharSequence[][])": 165.0,
        "org.apache.commons.lang3.text.translate$LookupTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": 335.0
    },
    "Lang-40": {},
    "Lang-5": {
        "org.apache.commons.lang3$LocaleUtils#<clinit>()": -13.0,
        "org.apache.commons.lang3$LocaleUtils#LocaleUtils()": 9.0,
        "org.apache.commons.lang3$LocaleUtils#availableLocaleList()": -13.0,
        "org.apache.commons.lang3$LocaleUtils#availableLocaleSet()": 7.0,
        "org.apache.commons.lang3$LocaleUtils#countriesByLanguage(java.lang.String)": 9.0,
        "org.apache.commons.lang3$LocaleUtils#isAvailableLocale(java.util.Locale)": -13.0,
        "org.apache.commons.lang3$LocaleUtils#languagesByCountry(java.lang.String)": 9.0,
        "org.apache.commons.lang3$LocaleUtils#localeLookupList(java.util.Locale)": 7.0,
        "org.apache.commons.lang3$LocaleUtils#localeLookupList(java.util.Locale,java.util.Locale)": 7.0,
        "org.apache.commons.lang3$LocaleUtils#toLocale(java.lang.String)": 59.0,
        "org.apache.commons.lang3$LocaleUtils$SyncAvoid#<clinit>()": -13.0,
        "org.apache.commons.lang3$LocaleUtils$SyncAvoid#LocaleUtils$SyncAvoid()": 11.0
    },
    "Lang-6": {
        "org.apache.commons.lang3$ArrayUtils#<clinit>()": 132104.0,
        "org.apache.commons.lang3$ArrayUtils#ArrayUtils()": 752.0,
        "org.apache.commons.lang3$ArrayUtils#add(boolean[],boolean)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#add(boolean[],int,boolean)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#add(byte[],byte)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#add(byte[],int,byte)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#add(char[],char)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#add(char[],int,char)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#add(double[],double)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#add(double[],int,double)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#add(float[],float)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#add(float[],int,float)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#add(int[],int)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#add(int[],int,int)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#add(java.lang.Object,int,java.lang.Object,java.lang.Class)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#add(java.lang.Object[],int,java.lang.Object)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#add(java.lang.Object[],java.lang.Object)": 742.0,
        "org.apache.commons.lang3$ArrayUtils#add(long[],int,long)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#add(long[],long)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#add(short[],int,short)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#add(short[],short)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(boolean[],boolean[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(byte[],byte[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(char[],char[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(double[],double[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(float[],float[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(int[],int[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(java.lang.Object[],java.lang.Object[])": 746.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(long[],long[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#addAll(short[],short[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#clone(boolean[])": 746.0,
        "org.apache.commons.lang3$ArrayUtils#clone(byte[])": 746.0,
        "org.apache.commons.lang3$ArrayUtils#clone(char[])": 724.0,
        "org.apache.commons.lang3$ArrayUtils#clone(double[])": 746.0,
        "org.apache.commons.lang3$ArrayUtils#clone(float[])": 746.0,
        "org.apache.commons.lang3$ArrayUtils#clone(int[])": 656.0,
        "org.apache.commons.lang3$ArrayUtils#clone(java.lang.Object[])": 528500.0,
        "org.apache.commons.lang3$ArrayUtils#clone(long[])": 742.0,
        "org.apache.commons.lang3$ArrayUtils#clone(short[])": 746.0,
        "org.apache.commons.lang3$ArrayUtils#contains(boolean[],boolean)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#contains(byte[],byte)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#contains(char[],char)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#contains(double[],double)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#contains(double[],double,double)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#contains(float[],float)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#contains(int[],int)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#contains(java.lang.Object[],java.lang.Object)": 708.0,
        "org.apache.commons.lang3$ArrayUtils#contains(long[],long)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#contains(short[],short)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#copyArrayGrow1(java.lang.Object,java.lang.Class)": 728.0,
        "org.apache.commons.lang3$ArrayUtils#getLength(java.lang.Object)": 602.0,
        "org.apache.commons.lang3$ArrayUtils#hashCode(java.lang.Object)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(boolean[],boolean)": 748.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(boolean[],boolean,int)": 744.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(byte[],byte)": 748.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(byte[],byte,int)": 744.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(char[],char)": 748.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(char[],char,int)": 744.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double)": 748.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double,double)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double,int)": 744.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double,int,double)": 748.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(float[],float)": 748.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(float[],float,int)": 744.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(int[],int)": 748.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(int[],int,int)": 744.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(java.lang.Object[],java.lang.Object)": 704.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(java.lang.Object[],java.lang.Object,int)": 700.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(long[],long)": 748.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(long[],long,int)": 744.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(short[],short)": 748.0,
        "org.apache.commons.lang3$ArrayUtils#indexOf(short[],short,int)": 744.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(boolean[])": 738.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(byte[])": 750.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(char[])": 712.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(double[])": 728.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(float[])": 738.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(int[])": 750.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(java.lang.Object[])": 746.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(long[])": 750.0,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(short[])": 750.0,
        "org.apache.commons.lang3$ArrayUtils#isEquals(java.lang.Object,java.lang.Object)": 732.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(boolean[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(byte[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(char[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(double[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(float[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(int[])": 660.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(java.lang.Object[])": 750.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(long[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(short[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(boolean[],boolean[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(byte[],byte[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(char[],char[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(double[],double[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(float[],float[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(int[],int[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(java.lang.Object[],java.lang.Object[])": 722.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(long[],long[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(short[],short[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#isSameType(java.lang.Object,java.lang.Object)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(boolean[],boolean)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(boolean[],boolean,int)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(byte[],byte)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(byte[],byte,int)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(char[],char)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(char[],char,int)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double,double)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double,int)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double,int,double)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(float[],float)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(float[],float,int)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(int[],int)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(int[],int,int)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(java.lang.Object[],java.lang.Object)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(java.lang.Object[],java.lang.Object,int)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(long[],long)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(long[],long,int)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(short[],short)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(short[],short,int)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(boolean[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(byte[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(char[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(double[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(float[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(int[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Boolean[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Byte[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Character[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Double[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Float[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Integer[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Long[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Object[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Short[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.String[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(long[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(short[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#remove(boolean[],int)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#remove(byte[],int)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#remove(char[],int)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#remove(double[],int)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#remove(float[],int)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#remove(int[],int)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#remove(java.lang.Object,int)": 714.0,
        "org.apache.commons.lang3$ArrayUtils#remove(java.lang.Object[],int)": 746.0,
        "org.apache.commons.lang3$ArrayUtils#remove(long[],int)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#remove(short[],int)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#removeAll(boolean[],int[])": 744.0,
        "org.apache.commons.lang3$ArrayUtils#removeAll(byte[],int[])": 744.0,
        "org.apache.commons.lang3$ArrayUtils#removeAll(char[],int[])": 744.0,
        "org.apache.commons.lang3$ArrayUtils#removeAll(double[],int[])": 744.0,
        "org.apache.commons.lang3$ArrayUtils#removeAll(float[],int[])": 744.0,
        "org.apache.commons.lang3$ArrayUtils#removeAll(int[],int[])": 744.0,
        "org.apache.commons.lang3$ArrayUtils#removeAll(java.lang.Object,int[])": 662.0,
        "org.apache.commons.lang3$ArrayUtils#removeAll(java.lang.Object,java.util.BitSet)": 734.0,
        "org.apache.commons.lang3$ArrayUtils#removeAll(java.lang.Object[],int[])": 744.0,
        "org.apache.commons.lang3$ArrayUtils#removeAll(long[],int[])": 744.0,
        "org.apache.commons.lang3$ArrayUtils#removeAll(short[],int[])": 744.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(boolean[],boolean)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(byte[],byte)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(char[],char)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(double[],double)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(float[],float)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(int[],int)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(java.lang.Object[],java.lang.Object)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(long[],long)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#removeElement(short[],short)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#removeElements(boolean[],boolean[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#removeElements(byte[],byte[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#removeElements(char[],char[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#removeElements(double[],double[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#removeElements(float[],float[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#removeElements(int[],int[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#removeElements(java.lang.Object[],java.lang.Object[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#removeElements(long[],long[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#removeElements(short[],short[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(boolean[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(byte[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(char[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(double[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(float[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(int[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(java.lang.Object[])": 750.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(long[])": 744.0,
        "org.apache.commons.lang3$ArrayUtils#reverse(short[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(boolean[],int,int)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(byte[],int,int)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(char[],int,int)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(double[],int,int)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(float[],int,int)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(int[],int,int)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(java.lang.Object[],int,int)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(long[],int,int)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#subarray(short[],int,int)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toArray(java.lang.Object[])": 742.0,
        "org.apache.commons.lang3$ArrayUtils#toMap(java.lang.Object[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(boolean[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(byte[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(char[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(double[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(float[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(int[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(long[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toObject(short[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Boolean[])": 734.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Boolean[],boolean)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Byte[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Byte[],byte)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Character[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Character[],char)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Double[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Double[],double)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Float[])": 750.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Float[],float)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Integer[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Integer[],int)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Long[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Long[],long)": 750.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Short[])": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Short[],short)": 752.0,
        "org.apache.commons.lang3$ArrayUtils#toString(java.lang.Object)": 736.0,
        "org.apache.commons.lang3$ArrayUtils#toString(java.lang.Object,java.lang.String)": 736.0,
        "org.apache.commons.lang3$StringEscapeUtils#<clinit>()": 534336.0,
        "org.apache.commons.lang3$StringEscapeUtils#StringEscapeUtils()": 752.0,
        "org.apache.commons.lang3$StringEscapeUtils#escapeCsv(java.lang.String)": 568514.0,
        "org.apache.commons.lang3$StringEscapeUtils#escapeEcmaScript(java.lang.String)": 750.0,
        "org.apache.commons.lang3$StringEscapeUtils#escapeHtml3(java.lang.String)": 754.0,
        "org.apache.commons.lang3$StringEscapeUtils#escapeHtml4(java.lang.String)": 744.0,
        "org.apache.commons.lang3$StringEscapeUtils#escapeJava(java.lang.String)": 748.0,
        "org.apache.commons.lang3$StringEscapeUtils#escapeXml(java.lang.String)": 750.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeCsv(java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeEcmaScript(java.lang.String)": 754.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeHtml3(java.lang.String)": 754.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeHtml4(java.lang.String)": 738.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeJava(java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeXml(java.lang.String)": 748.0,
        "org.apache.commons.lang3$StringEscapeUtils$CsvEscaper#<clinit>()": 534336.0,
        "org.apache.commons.lang3$StringEscapeUtils$CsvEscaper#StringEscapeUtils$CsvEscaper()": 534336.0,
        "org.apache.commons.lang3$StringEscapeUtils$CsvEscaper#translate(java.lang.CharSequence,int,java.io.Writer)": 567006.0,
        "org.apache.commons.lang3$StringEscapeUtils$CsvUnescaper#<clinit>()": 534336.0,
        "org.apache.commons.lang3$StringEscapeUtils$CsvUnescaper#StringEscapeUtils$CsvUnescaper()": 534336.0,
        "org.apache.commons.lang3$StringEscapeUtils$CsvUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 750.0,
        "org.apache.commons.lang3$StringUtils#<clinit>()": 125624.0,
        "org.apache.commons.lang3$StringUtils#StringUtils()": 752.0,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int)": 750.0,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int,int)": 750.0,
        "org.apache.commons.lang3$StringUtils#abbreviateMiddle(java.lang.String,java.lang.String,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#capitalize(java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,char)": 750.0,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String,java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#chop(java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,java.lang.CharSequence)": 746.0,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,char[])": 738.0,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,java.lang.CharSequence)": 748.0,
        "org.apache.commons.lang3$StringUtils#containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 750.0,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,char[])": 558000.0,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,java.lang.String)": 748.0,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,char[])": 744.0,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#containsWhitespace(java.lang.CharSequence)": 752.0,
        "org.apache.commons.lang3$StringUtils#countMatches(java.lang.CharSequence,java.lang.CharSequence)": 752.0,
        "org.apache.commons.lang3$StringUtils#defaultIfBlank(java.lang.CharSequence,java.lang.CharSequence)": 746.0,
        "org.apache.commons.lang3$StringUtils#defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence)": 746.0,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String)": 748.0,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String,java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#deleteWhitespace(java.lang.String)": 724.0,
        "org.apache.commons.lang3$StringUtils#difference(java.lang.String,java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence)": 750.0,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 746.0,
        "org.apache.commons.lang3$StringUtils#endsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 752.0,
        "org.apache.commons.lang3$StringUtils#endsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 750.0,
        "org.apache.commons.lang3$StringUtils#equals(java.lang.CharSequence,java.lang.CharSequence)": 720.0,
        "org.apache.commons.lang3$StringUtils#equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 752.0,
        "org.apache.commons.lang3$StringUtils#getCommonPrefix(java.lang.String[])": 752.0,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)": 752.0,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence)": 752.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,char[])": 746.0,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 752.0,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.String)": 750.0,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,char[])": 740.0,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)": 750.0,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)": 750.0,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence[])": 750.0,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 752.0,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 750.0,
        "org.apache.commons.lang3$StringUtils#isAllLowerCase(java.lang.CharSequence)": 752.0,
        "org.apache.commons.lang3$StringUtils#isAllUpperCase(java.lang.CharSequence)": 752.0,
        "org.apache.commons.lang3$StringUtils#isAlpha(java.lang.CharSequence)": 752.0,
        "org.apache.commons.lang3$StringUtils#isAlphaSpace(java.lang.CharSequence)": 752.0,
        "org.apache.commons.lang3$StringUtils#isAlphanumeric(java.lang.CharSequence)": 752.0,
        "org.apache.commons.lang3$StringUtils#isAlphanumericSpace(java.lang.CharSequence)": 752.0,
        "org.apache.commons.lang3$StringUtils#isAsciiPrintable(java.lang.CharSequence)": 752.0,
        "org.apache.commons.lang3$StringUtils#isBlank(java.lang.CharSequence)": 704.0,
        "org.apache.commons.lang3$StringUtils#isEmpty(java.lang.CharSequence)": 272.0,
        "org.apache.commons.lang3$StringUtils#isNotBlank(java.lang.CharSequence)": 752.0,
        "org.apache.commons.lang3$StringUtils#isNotEmpty(java.lang.CharSequence)": 736.0,
        "org.apache.commons.lang3$StringUtils#isNumeric(java.lang.CharSequence)": 752.0,
        "org.apache.commons.lang3$StringUtils#isNumericSpace(java.lang.CharSequence)": 752.0,
        "org.apache.commons.lang3$StringUtils#isWhitespace(java.lang.CharSequence)": 752.0,
        "org.apache.commons.lang3$StringUtils#join(byte[],char)": 752.0,
        "org.apache.commons.lang3$StringUtils#join(byte[],char,int,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#join(char[],char)": 752.0,
        "org.apache.commons.lang3$StringUtils#join(char[],char,int,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#join(double[],char)": 752.0,
        "org.apache.commons.lang3$StringUtils#join(double[],char,int,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#join(float[],char)": 752.0,
        "org.apache.commons.lang3$StringUtils#join(float[],char,int,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#join(int[],char)": 752.0,
        "org.apache.commons.lang3$StringUtils#join(int[],char,int,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,char)": 752.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[])": 748.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char)": 750.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char,int,int)": 750.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String)": 746.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String,int,int)": 746.0,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,char)": 750.0,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,java.lang.String)": 750.0,
        "org.apache.commons.lang3$StringUtils#join(long[],char)": 752.0,
        "org.apache.commons.lang3$StringUtils#join(long[],char,int,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#join(short[],char)": 752.0,
        "org.apache.commons.lang3$StringUtils#join(short[],char,int,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence)": 752.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 752.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 752.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 750.0,
        "org.apache.commons.lang3$StringUtils#lastOrdinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#left(java.lang.String,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,char)": 716.0,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,java.lang.String)": 748.0,
        "org.apache.commons.lang3$StringUtils#length(java.lang.CharSequence)": 746.0,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String,java.util.Locale)": 752.0,
        "org.apache.commons.lang3$StringUtils#mid(java.lang.String,int,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#normalizeSpace(java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)": 750.0,
        "org.apache.commons.lang3$StringUtils#overlay(java.lang.String,java.lang.String,int,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,char)": 752.0,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#removeEnd(java.lang.String,java.lang.String)": 748.0,
        "org.apache.commons.lang3$StringUtils#removeEndIgnoreCase(java.lang.String,java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#removePattern(java.lang.String,java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#removeStart(java.lang.String,java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#removeStartIgnoreCase(java.lang.String,java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#repeat(char,int)": 712.0,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,int)": 746.0,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,java.lang.String,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String)": 744.0,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String,int)": 734.0,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,char,char)": 750.0,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,java.lang.String,java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[])": 752.0,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)": 750.0,
        "org.apache.commons.lang3$StringUtils#replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[])": 752.0,
        "org.apache.commons.lang3$StringUtils#replaceOnce(java.lang.String,java.lang.String,java.lang.String)": 748.0,
        "org.apache.commons.lang3$StringUtils#replacePattern(java.lang.String,java.lang.String,java.lang.String)": 750.0,
        "org.apache.commons.lang3$StringUtils#reverse(java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#reverseDelimited(java.lang.String,char)": 752.0,
        "org.apache.commons.lang3$StringUtils#right(java.lang.String,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,char)": 742.0,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,java.lang.String)": 748.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,char)": 750.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String,int)": 750.0,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String,boolean)": 750.0,
        "org.apache.commons.lang3$StringUtils#splitByCharacterTypeCamelCase(java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String)": 754.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)": 748.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,char)": 752.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,char,boolean)": 748.0,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,java.lang.String,int,boolean)": 740.0,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence)": 750.0,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 746.0,
        "org.apache.commons.lang3$StringUtils#startsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 752.0,
        "org.apache.commons.lang3$StringUtils#startsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 750.0,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String,java.lang.String)": 744.0,
        "org.apache.commons.lang3$StringUtils#stripAccents(java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[])": 752.0,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[],java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#stripEnd(java.lang.String,java.lang.String)": 740.0,
        "org.apache.commons.lang3$StringUtils#stripStart(java.lang.String,java.lang.String)": 742.0,
        "org.apache.commons.lang3$StringUtils#stripToEmpty(java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#stripToNull(java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int,int)": 752.0,
        "org.apache.commons.lang3$StringUtils#substringAfter(java.lang.String,java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#substringAfterLast(java.lang.String,java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#substringBefore(java.lang.String,java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#substringBeforeLast(java.lang.String,java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String,java.lang.String)": 750.0,
        "org.apache.commons.lang3$StringUtils#substringsBetween(java.lang.String,java.lang.String,java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#swapCase(java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#toString(byte[],java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#trim(java.lang.String)": 748.0,
        "org.apache.commons.lang3$StringUtils#trimToEmpty(java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#trimToNull(java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#uncapitalize(java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String)": 752.0,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String,java.util.Locale)": 752.0,
        "org.apache.commons.lang3.text.translate$AggregateTranslator#AggregateTranslator(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])": 534336.0,
        "org.apache.commons.lang3.text.translate$AggregateTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": 716.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#CharSequenceTranslator()": 512616.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#hex(int)": 742.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#translate(java.lang.CharSequence)": 518364.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#translate(java.lang.CharSequence,java.io.Writer)": 515486.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])": 534336.0,
        "org.apache.commons.lang3.text.translate$CodePointTranslator#CodePointTranslator()": 524144.0,
        "org.apache.commons.lang3.text.translate$CodePointTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": 728.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#<clinit>()": 529956.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#APOS_ESCAPE()": 534336.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#APOS_UNESCAPE()": 534336.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#BASIC_ESCAPE()": 534336.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#BASIC_UNESCAPE()": 534336.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#EntityArrays()": 752.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#HTML40_EXTENDED_ESCAPE()": 532874.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#HTML40_EXTENDED_UNESCAPE()": 534336.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#ISO8859_1_ESCAPE()": 532874.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#ISO8859_1_UNESCAPE()": 534336.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#JAVA_CTRL_CHARS_ESCAPE()": 534336.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#JAVA_CTRL_CHARS_UNESCAPE()": 534336.0,
        "org.apache.commons.lang3.text.translate$EntityArrays#invert(java.lang.String[][])": 529956.0,
        "org.apache.commons.lang3.text.translate$LookupTranslator#LookupTranslator(java.lang.CharSequence[][])": 532874.0,
        "org.apache.commons.lang3.text.translate$LookupTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": 714.0,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#NumericEntityUnescaper(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[])": 529956.0,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION)": 750.0,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 730.0,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper$OPTION#<clinit>()": 529956.0,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper$OPTION#NumericEntityUnescaper$OPTION(java.lang.String,int)": 529956.0,
        "org.apache.commons.lang3.text.translate$OctalUnescaper#<clinit>()": 532874.0,
        "org.apache.commons.lang3.text.translate$OctalUnescaper#OctalUnescaper()": 532874.0,
        "org.apache.commons.lang3.text.translate$OctalUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 750.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#UnicodeEscaper()": 754.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#UnicodeEscaper(int,int,boolean)": 529956.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#above(int)": 752.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#below(int)": 752.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#between(int,int)": 752.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#outsideOf(int,int)": 531414.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#translate(int,java.io.Writer)": 738.0,
        "org.apache.commons.lang3.text.translate$UnicodeUnescaper#UnicodeUnescaper()": 529956.0,
        "org.apache.commons.lang3.text.translate$UnicodeUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 746.0
    },
    "Lang-7": {
        "org.apache.commons.lang3$JavaVersion#<clinit>()": 195991.0,
        "org.apache.commons.lang3$JavaVersion#JavaVersion(java.lang.String,int,float,java.lang.String)": 195991.0,
        "org.apache.commons.lang3$JavaVersion#atLeast(org.apache.commons.lang3.JavaVersion)": 454249.0,
        "org.apache.commons.lang3$JavaVersion#get(java.lang.String)": 197769.0,
        "org.apache.commons.lang3$JavaVersion#getJavaVersion(java.lang.String)": 697.0,
        "org.apache.commons.lang3$JavaVersion#toString()": 697.0,
        "org.apache.commons.lang3$StringUtils#<clinit>()": 90805.0,
        "org.apache.commons.lang3$StringUtils#StringUtils()": 697.0,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int)": 695.0,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int,int)": 695.0,
        "org.apache.commons.lang3$StringUtils#abbreviateMiddle(java.lang.String,java.lang.String,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#capitalize(java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,char)": 695.0,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String,java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#chop(java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,java.lang.CharSequence)": 691.0,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,char[])": 683.0,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,java.lang.CharSequence)": 693.0,
        "org.apache.commons.lang3$StringUtils#containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 695.0,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,char[])": 683.0,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,java.lang.String)": 693.0,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,char[])": 689.0,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#containsWhitespace(java.lang.CharSequence)": 697.0,
        "org.apache.commons.lang3$StringUtils#countMatches(java.lang.CharSequence,java.lang.CharSequence)": 697.0,
        "org.apache.commons.lang3$StringUtils#defaultIfBlank(java.lang.CharSequence,java.lang.CharSequence)": 691.0,
        "org.apache.commons.lang3$StringUtils#defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence)": 691.0,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String)": 693.0,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String,java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#deleteWhitespace(java.lang.String)": 669.0,
        "org.apache.commons.lang3$StringUtils#difference(java.lang.String,java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence)": 695.0,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 691.0,
        "org.apache.commons.lang3$StringUtils#endsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 697.0,
        "org.apache.commons.lang3$StringUtils#endsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 695.0,
        "org.apache.commons.lang3$StringUtils#equals(java.lang.CharSequence,java.lang.CharSequence)": 665.0,
        "org.apache.commons.lang3$StringUtils#equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 697.0,
        "org.apache.commons.lang3$StringUtils#getCommonPrefix(java.lang.String[])": 697.0,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)": 697.0,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence)": 697.0,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,char[])": 691.0,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 697.0,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.String)": 695.0,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,char[])": 685.0,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)": 695.0,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)": 695.0,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence[])": 695.0,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 697.0,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 695.0,
        "org.apache.commons.lang3$StringUtils#isAllLowerCase(java.lang.CharSequence)": 697.0,
        "org.apache.commons.lang3$StringUtils#isAllUpperCase(java.lang.CharSequence)": 697.0,
        "org.apache.commons.lang3$StringUtils#isAlpha(java.lang.CharSequence)": 697.0,
        "org.apache.commons.lang3$StringUtils#isAlphaSpace(java.lang.CharSequence)": 697.0,
        "org.apache.commons.lang3$StringUtils#isAlphanumeric(java.lang.CharSequence)": 697.0,
        "org.apache.commons.lang3$StringUtils#isAlphanumericSpace(java.lang.CharSequence)": 697.0,
        "org.apache.commons.lang3$StringUtils#isAsciiPrintable(java.lang.CharSequence)": 697.0,
        "org.apache.commons.lang3$StringUtils#isBlank(java.lang.CharSequence)": 458305.0,
        "org.apache.commons.lang3$StringUtils#isEmpty(java.lang.CharSequence)": 211359.0,
        "org.apache.commons.lang3$StringUtils#isNotBlank(java.lang.CharSequence)": 697.0,
        "org.apache.commons.lang3$StringUtils#isNotEmpty(java.lang.CharSequence)": 681.0,
        "org.apache.commons.lang3$StringUtils#isNumeric(java.lang.CharSequence)": 697.0,
        "org.apache.commons.lang3$StringUtils#isNumericSpace(java.lang.CharSequence)": 697.0,
        "org.apache.commons.lang3$StringUtils#isWhitespace(java.lang.CharSequence)": 697.0,
        "org.apache.commons.lang3$StringUtils#join(byte[],char)": 697.0,
        "org.apache.commons.lang3$StringUtils#join(byte[],char,int,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#join(char[],char)": 697.0,
        "org.apache.commons.lang3$StringUtils#join(char[],char,int,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#join(double[],char)": 697.0,
        "org.apache.commons.lang3$StringUtils#join(double[],char,int,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#join(float[],char)": 697.0,
        "org.apache.commons.lang3$StringUtils#join(float[],char,int,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#join(int[],char)": 697.0,
        "org.apache.commons.lang3$StringUtils#join(int[],char,int,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,char)": 697.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[])": 693.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char)": 695.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char,int,int)": 695.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String)": 691.0,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String,int,int)": 691.0,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,char)": 695.0,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,java.lang.String)": 695.0,
        "org.apache.commons.lang3$StringUtils#join(long[],char)": 697.0,
        "org.apache.commons.lang3$StringUtils#join(long[],char,int,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#join(short[],char)": 697.0,
        "org.apache.commons.lang3$StringUtils#join(short[],char,int,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence)": 697.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 697.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 697.0,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 695.0,
        "org.apache.commons.lang3$StringUtils#lastOrdinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#left(java.lang.String,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,char)": 661.0,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,java.lang.String)": 693.0,
        "org.apache.commons.lang3$StringUtils#length(java.lang.CharSequence)": 691.0,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String,java.util.Locale)": 697.0,
        "org.apache.commons.lang3$StringUtils#mid(java.lang.String,int,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#normalizeSpace(java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)": 695.0,
        "org.apache.commons.lang3$StringUtils#overlay(java.lang.String,java.lang.String,int,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,char)": 697.0,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#removeEnd(java.lang.String,java.lang.String)": 693.0,
        "org.apache.commons.lang3$StringUtils#removeEndIgnoreCase(java.lang.String,java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#removePattern(java.lang.String,java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#removeStart(java.lang.String,java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#removeStartIgnoreCase(java.lang.String,java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#repeat(char,int)": 657.0,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,int)": 691.0,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,java.lang.String,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String)": 689.0,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String,int)": 679.0,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,char,char)": 695.0,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,java.lang.String,java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[])": 697.0,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)": 695.0,
        "org.apache.commons.lang3$StringUtils#replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[])": 697.0,
        "org.apache.commons.lang3$StringUtils#replaceOnce(java.lang.String,java.lang.String,java.lang.String)": 693.0,
        "org.apache.commons.lang3$StringUtils#replacePattern(java.lang.String,java.lang.String,java.lang.String)": 695.0,
        "org.apache.commons.lang3$StringUtils#reverse(java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#reverseDelimited(java.lang.String,char)": 697.0,
        "org.apache.commons.lang3$StringUtils#right(java.lang.String,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,char)": 687.0,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,java.lang.String)": 693.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,char)": 695.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String,int)": 695.0,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String,boolean)": 695.0,
        "org.apache.commons.lang3$StringUtils#splitByCharacterTypeCamelCase(java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String)": 699.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)": 693.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,char)": 697.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,char,boolean)": 693.0,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,java.lang.String,int,boolean)": 685.0,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence)": 695.0,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 691.0,
        "org.apache.commons.lang3$StringUtils#startsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 697.0,
        "org.apache.commons.lang3$StringUtils#startsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 695.0,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String,java.lang.String)": 689.0,
        "org.apache.commons.lang3$StringUtils#stripAccents(java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[])": 697.0,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[],java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#stripEnd(java.lang.String,java.lang.String)": 685.0,
        "org.apache.commons.lang3$StringUtils#stripStart(java.lang.String,java.lang.String)": 687.0,
        "org.apache.commons.lang3$StringUtils#stripToEmpty(java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#stripToNull(java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int,int)": 697.0,
        "org.apache.commons.lang3$StringUtils#substringAfter(java.lang.String,java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#substringAfterLast(java.lang.String,java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#substringBefore(java.lang.String,java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#substringBeforeLast(java.lang.String,java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String,java.lang.String)": 695.0,
        "org.apache.commons.lang3$StringUtils#substringsBetween(java.lang.String,java.lang.String,java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#swapCase(java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#toString(byte[],java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#trim(java.lang.String)": 693.0,
        "org.apache.commons.lang3$StringUtils#trimToEmpty(java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#trimToNull(java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#uncapitalize(java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String)": 697.0,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String,java.util.Locale)": 697.0,
        "org.apache.commons.lang3$SystemUtils#<clinit>()": 198661.0,
        "org.apache.commons.lang3$SystemUtils#SystemUtils()": 697.0,
        "org.apache.commons.lang3$SystemUtils#getJavaHome()": 697.0,
        "org.apache.commons.lang3$SystemUtils#getJavaIoTmpDir()": 697.0,
        "org.apache.commons.lang3$SystemUtils#getJavaVersionMatches(java.lang.String)": 198661.0,
        "org.apache.commons.lang3$SystemUtils#getOSMatches(java.lang.String,java.lang.String)": 198661.0,
        "org.apache.commons.lang3$SystemUtils#getOSMatchesName(java.lang.String)": 198661.0,
        "org.apache.commons.lang3$SystemUtils#getSystemProperty(java.lang.String)": 198661.0,
        "org.apache.commons.lang3$SystemUtils#getUserDir()": 697.0,
        "org.apache.commons.lang3$SystemUtils#getUserHome()": 697.0,
        "org.apache.commons.lang3$SystemUtils#isJavaAwtHeadless()": 697.0,
        "org.apache.commons.lang3$SystemUtils#isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion)": 455599.0,
        "org.apache.commons.lang3$SystemUtils#isJavaVersionMatch(java.lang.String,java.lang.String)": 198661.0,
        "org.apache.commons.lang3$SystemUtils#isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 198661.0,
        "org.apache.commons.lang3$SystemUtils#isOSNameMatch(java.lang.String,java.lang.String)": 198661.0,
        "org.apache.commons.lang3.math$NumberUtils#<clinit>()": 384319.0,
        "org.apache.commons.lang3.math$NumberUtils#NumberUtils()": 697.0,
        "org.apache.commons.lang3.math$NumberUtils#createBigDecimal(java.lang.String)": 487201.0,
        "org.apache.commons.lang3.math$NumberUtils#createBigInteger(java.lang.String)": 487201.0,
        "org.apache.commons.lang3.math$NumberUtils#createDouble(java.lang.String)": 487201.0,
        "org.apache.commons.lang3.math$NumberUtils#createFloat(java.lang.String)": 487201.0,
        "org.apache.commons.lang3.math$NumberUtils#createInteger(java.lang.String)": 487201.0,
        "org.apache.commons.lang3.math$NumberUtils#createLong(java.lang.String)": 485805.0,
        "org.apache.commons.lang3.math$NumberUtils#createNumber(java.lang.String)": 487201.0,
        "org.apache.commons.lang3.math$NumberUtils#isAllZeros(java.lang.String)": 487201.0,
        "org.apache.commons.lang3.math$NumberUtils#isDigits(java.lang.String)": 485805.0,
        "org.apache.commons.lang3.math$NumberUtils#isNumber(java.lang.String)": 697.0,
        "org.apache.commons.lang3.math$NumberUtils#max(byte,byte,byte)": 697.0,
        "org.apache.commons.lang3.math$NumberUtils#max(byte[])": 693.0,
        "org.apache.commons.lang3.math$NumberUtils#max(double,double,double)": 695.0,
        "org.apache.commons.lang3.math$NumberUtils#max(double[])": 691.0,
        "org.apache.commons.lang3.math$NumberUtils#max(float,float,float)": 695.0,
        "org.apache.commons.lang3.math$NumberUtils#max(float[])": 691.0,
        "org.apache.commons.lang3.math$NumberUtils#max(int,int,int)": 697.0,
        "org.apache.commons.lang3.math$NumberUtils#max(int[])": 693.0,
        "org.apache.commons.lang3.math$NumberUtils#max(long,long,long)": 697.0,
        "org.apache.commons.lang3.math$NumberUtils#max(long[])": 693.0,
        "org.apache.commons.lang3.math$NumberUtils#max(short,short,short)": 697.0,
        "org.apache.commons.lang3.math$NumberUtils#max(short[])": 693.0,
        "org.apache.commons.lang3.math$NumberUtils#min(byte,byte,byte)": 697.0,
        "org.apache.commons.lang3.math$NumberUtils#min(byte[])": 693.0,
        "org.apache.commons.lang3.math$NumberUtils#min(double,double,double)": 695.0,
        "org.apache.commons.lang3.math$NumberUtils#min(double[])": 691.0,
        "org.apache.commons.lang3.math$NumberUtils#min(float,float,float)": 695.0,
        "org.apache.commons.lang3.math$NumberUtils#min(float[])": 693.0,
        "org.apache.commons.lang3.math$NumberUtils#min(int,int,int)": 697.0,
        "org.apache.commons.lang3.math$NumberUtils#min(int[])": 693.0,
        "org.apache.commons.lang3.math$NumberUtils#min(long,long,long)": 697.0,
        "org.apache.commons.lang3.math$NumberUtils#min(long[])": 693.0,
        "org.apache.commons.lang3.math$NumberUtils#min(short,short,short)": 697.0,
        "org.apache.commons.lang3.math$NumberUtils#min(short[])": 693.0,
        "org.apache.commons.lang3.math$NumberUtils#toByte(java.lang.String)": 697.0,
        "org.apache.commons.lang3.math$NumberUtils#toByte(java.lang.String,byte)": 695.0,
        "org.apache.commons.lang3.math$NumberUtils#toDouble(java.lang.String)": 697.0,
        "org.apache.commons.lang3.math$NumberUtils#toDouble(java.lang.String,double)": 695.0,
        "org.apache.commons.lang3.math$NumberUtils#toFloat(java.lang.String)": 697.0,
        "org.apache.commons.lang3.math$NumberUtils#toFloat(java.lang.String,float)": 695.0,
        "org.apache.commons.lang3.math$NumberUtils#toInt(java.lang.String)": 697.0,
        "org.apache.commons.lang3.math$NumberUtils#toInt(java.lang.String,int)": 695.0,
        "org.apache.commons.lang3.math$NumberUtils#toLong(java.lang.String)": 697.0,
        "org.apache.commons.lang3.math$NumberUtils#toLong(java.lang.String,long)": 695.0,
        "org.apache.commons.lang3.math$NumberUtils#toShort(java.lang.String)": 697.0,
        "org.apache.commons.lang3.math$NumberUtils#toShort(java.lang.String,short)": 695.0
    },
    "Lang-8": {
        "org.apache.commons.lang3.time$FastDateFormat#<clinit>()": 1676.0,
        "org.apache.commons.lang3.time$FastDateFormat#FastDateFormat(java.lang.String,java.util.TimeZone,java.util.Locale)": 1676.0,
        "org.apache.commons.lang3.time$FastDateFormat#applyRules(java.util.Calendar,java.lang.StringBuffer)": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#equals(java.lang.Object)": 112.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)": 124.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Calendar)": 8612.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Calendar,java.lang.StringBuffer)": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Date)": 60.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Date,java.lang.StringBuffer)": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(long)": 124.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(long,java.lang.StringBuffer)": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int)": 122.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.Locale)": 122.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.TimeZone)": 124.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.TimeZone,java.util.Locale)": 124.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int)": 120.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.Locale)": 120.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.TimeZone)": 124.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale)": 124.0,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance()": 122.0,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String)": 8242.0,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.Locale)": 56.0,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.TimeZone)": 124.0,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 28.0,
        "org.apache.commons.lang3.time$FastDateFormat#getLocale()": 110.0,
        "org.apache.commons.lang3.time$FastDateFormat#getMaxLengthEstimate()": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#getPattern()": 104.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int)": 124.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.Locale)": 124.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.TimeZone)": 124.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.TimeZone,java.util.Locale)": 124.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeZone()": 114.0,
        "org.apache.commons.lang3.time$FastDateFormat#hashCode()": 120.0,
        "org.apache.commons.lang3.time$FastDateFormat#parse(java.lang.String)": 84.0,
        "org.apache.commons.lang3.time$FastDateFormat#parse(java.lang.String,java.text.ParsePosition)": 126.0,
        "org.apache.commons.lang3.time$FastDateFormat#parseObject(java.lang.String,java.text.ParsePosition)": 124.0,
        "org.apache.commons.lang3.time$FastDateFormat#toString()": 122.0,
        "org.apache.commons.lang3.time$FastDateFormat$1#createInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 1676.0,
        "org.apache.commons.lang3.time$FastDateParser#<clinit>()": 52.0,
        "org.apache.commons.lang3.time$FastDateParser#FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale)": 110.0,
        "org.apache.commons.lang3.time$FastDateParser#adjustYear(int)": 106.0,
        "org.apache.commons.lang3.time$FastDateParser#equals(java.lang.Object)": 124.0,
        "org.apache.commons.lang3.time$FastDateParser#escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)": 176.0,
        "org.apache.commons.lang3.time$FastDateParser#getCache(int)": 2840.0,
        "org.apache.commons.lang3.time$FastDateParser#getDisplayNames(int,java.util.Calendar,java.util.Locale)": 3902.0,
        "org.apache.commons.lang3.time$FastDateParser#getFieldWidth()": 110.0,
        "org.apache.commons.lang3.time$FastDateParser#getLocale()": 124.0,
        "org.apache.commons.lang3.time$FastDateParser#getLocaleSpecificStrategy(int,java.util.Calendar)": 2840.0,
        "org.apache.commons.lang3.time$FastDateParser#getParsePattern()": 126.0,
        "org.apache.commons.lang3.time$FastDateParser#getPattern()": 124.0,
        "org.apache.commons.lang3.time$FastDateParser#getStrategy(java.lang.String,java.util.Calendar)": 110.0,
        "org.apache.commons.lang3.time$FastDateParser#getTimeZone()": 124.0,
        "org.apache.commons.lang3.time$FastDateParser#hashCode()": 122.0,
        "org.apache.commons.lang3.time$FastDateParser#init()": 110.0,
        "org.apache.commons.lang3.time$FastDateParser#isNextNumber()": 110.0,
        "org.apache.commons.lang3.time$FastDateParser#parse(java.lang.String)": 42.0,
        "org.apache.commons.lang3.time$FastDateParser#parse(java.lang.String,java.text.ParsePosition)": 40.0,
        "org.apache.commons.lang3.time$FastDateParser#parseObject(java.lang.String)": 126.0,
        "org.apache.commons.lang3.time$FastDateParser#parseObject(java.lang.String,java.text.ParsePosition)": 124.0,
        "org.apache.commons.lang3.time$FastDateParser#readObject(java.io.ObjectInputStream)": 120.0,
        "org.apache.commons.lang3.time$FastDateParser#toString()": 124.0,
        "org.apache.commons.lang3.time$FastDateParser$1#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 98.0,
        "org.apache.commons.lang3.time$FastDateParser$2#modify(int)": 68.0,
        "org.apache.commons.lang3.time$FastDateParser$3#modify(int)": 100.0,
        "org.apache.commons.lang3.time$FastDateParser$4#modify(int)": 90.0,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#FastDateParser$CopyQuotedStrategy(java.lang.String)": 176.0,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": 176.0,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#isNumber()": 290.0,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 126.0,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#FastDateParser$NumberStrategy(int)": 52.0,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": 110.0,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#isNumber()": 110.0,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#modify(int)": 44.0,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 44.0,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#FastDateParser$TextStrategy(int,java.util.Calendar,java.util.Locale)": 3902.0,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": 3902.0,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#isNumber()": 16382.0,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 86.0,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#FastDateParser$TimeZoneStrategy(java.util.Locale)": 4030.0,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": 4030.0,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#isNumber()": 60.0,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 88.0,
        "org.apache.commons.lang3.time$FastDatePrinter#<clinit>()": 740.0,
        "org.apache.commons.lang3.time$FastDatePrinter#FastDatePrinter(java.lang.String,java.util.TimeZone,java.util.Locale)": 740.0,
        "org.apache.commons.lang3.time$FastDatePrinter#applyRules(java.util.Calendar,java.lang.StringBuffer)": 6350.0,
        "org.apache.commons.lang3.time$FastDatePrinter#equals(java.lang.Object)": 110.0,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)": 124.0,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Calendar)": 7352.0,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Calendar,java.lang.StringBuffer)": 7352.0,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Date)": 54.0,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Date,java.lang.StringBuffer)": 124.0,
        "org.apache.commons.lang3.time$FastDatePrinter#format(long)": 124.0,
        "org.apache.commons.lang3.time$FastDatePrinter#format(long,java.lang.StringBuffer)": 126.0,
        "org.apache.commons.lang3.time$FastDatePrinter#getLocale()": 104.0,
        "org.apache.commons.lang3.time$FastDatePrinter#getMaxLengthEstimate()": 126.0,
        "org.apache.commons.lang3.time$FastDatePrinter#getPattern()": 98.0,
        "org.apache.commons.lang3.time$FastDatePrinter#getTimeZone()": 108.0,
        "org.apache.commons.lang3.time$FastDatePrinter#getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)": 15122.0,
        "org.apache.commons.lang3.time$FastDatePrinter#hashCode()": 118.0,
        "org.apache.commons.lang3.time$FastDatePrinter#init()": 740.0,
        "org.apache.commons.lang3.time$FastDatePrinter#parsePattern()": 740.0,
        "org.apache.commons.lang3.time$FastDatePrinter#parseToken(java.lang.String,int[])": 740.0,
        "org.apache.commons.lang3.time$FastDatePrinter#readObject(java.io.ObjectInputStream)": 120.0,
        "org.apache.commons.lang3.time$FastDatePrinter#selectNumberRule(int,int)": 800.0,
        "org.apache.commons.lang3.time$FastDatePrinter#toString()": 124.0,
        "org.apache.commons.lang3.time$FastDatePrinter$CharacterLiteral#FastDatePrinter$CharacterLiteral(char)": 926.0,
        "org.apache.commons.lang3.time$FastDatePrinter$CharacterLiteral#appendTo(java.lang.StringBuffer,java.util.Calendar)": 7010.0,
        "org.apache.commons.lang3.time$FastDatePrinter$CharacterLiteral#estimateLength()": 926.0,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#FastDatePrinter$PaddedNumberField(int,int)": -58.0,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#appendTo(java.lang.StringBuffer,int)": 38.0,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 38.0,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#estimateLength()": -58.0,
        "org.apache.commons.lang3.time$FastDatePrinter$StringLiteral#FastDatePrinter$StringLiteral(java.lang.String)": 40.0,
        "org.apache.commons.lang3.time$FastDatePrinter$StringLiteral#appendTo(java.lang.StringBuffer,java.util.Calendar)": 120.0,
        "org.apache.commons.lang3.time$FastDatePrinter$StringLiteral#estimateLength()": 40.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TextField#FastDatePrinter$TextField(int,java.lang.String[])": 5126.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TextField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 15122.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TextField#estimateLength()": 5126.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneDisplayKey#FastDatePrinter$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale)": 15122.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneDisplayKey#equals(java.lang.Object)": 15620.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneDisplayKey#hashCode()": 15122.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNameRule#FastDatePrinter$TimeZoneNameRule(java.util.TimeZone,java.util.Locale,int)": 15122.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNameRule#appendTo(java.lang.StringBuffer,java.util.Calendar)": 15872.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNameRule#estimateLength()": 15122.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#<clinit>()": 28.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#FastDatePrinter$TimeZoneNumberRule(boolean)": 28.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#appendTo(java.lang.StringBuffer,java.util.Calendar)": 106.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#estimateLength()": 28.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#FastDatePrinter$TwelveHourField(org.apache.commons.lang3.time.FastDatePrinter$NumberRule)": 12752.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#appendTo(java.lang.StringBuffer,int)": 126.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 16382.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#estimateLength()": 12752.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#FastDatePrinter$TwentyFourHourField(org.apache.commons.lang3.time.FastDatePrinter$NumberRule)": 124.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#appendTo(java.lang.StringBuffer,int)": 126.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 126.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#estimateLength()": 124.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#<clinit>()": -28.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#FastDatePrinter$TwoDigitMonthField()": -28.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#appendTo(java.lang.StringBuffer,int)": 44.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 44.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#estimateLength()": -28.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#FastDatePrinter$TwoDigitNumberField(int)": 1762.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#appendTo(java.lang.StringBuffer,int)": 6676.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 6676.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#estimateLength()": 1762.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#<clinit>()": 110.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#FastDatePrinter$TwoDigitYearField()": 110.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#appendTo(java.lang.StringBuffer,int)": 118.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 118.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#estimateLength()": 110.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#<clinit>()": 94.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#FastDatePrinter$UnpaddedMonthField()": 94.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#appendTo(java.lang.StringBuffer,int)": 114.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 114.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#estimateLength()": 94.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#FastDatePrinter$UnpaddedNumberField(int)": 11000.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#appendTo(java.lang.StringBuffer,int)": 14876.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 114.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#estimateLength()": 11000.0,
        "org.apache.commons.lang3.time$FormatCache#<clinit>()": 1510.0,
        "org.apache.commons.lang3.time$FormatCache#FormatCache()": 1676.0,
        "org.apache.commons.lang3.time$FormatCache#getDateTimeInstance(java.lang.Integer,java.lang.Integer,java.util.TimeZone,java.util.Locale)": 110.0,
        "org.apache.commons.lang3.time$FormatCache#getInstance()": 122.0,
        "org.apache.commons.lang3.time$FormatCache#getInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 1676.0,
        "org.apache.commons.lang3.time$FormatCache#getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)": 102.0,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#FormatCache$MultipartKey(java.lang.Object[])": 1510.0,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#equals(java.lang.Object)": 82.0,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#hashCode()": 1510.0
    },
    "Lang-9": {
        "org.apache.commons.lang3.time$FastDateFormat#<clinit>()": 1360.0,
        "org.apache.commons.lang3.time$FastDateFormat#FastDateFormat(java.lang.String,java.util.TimeZone,java.util.Locale)": 1360.0,
        "org.apache.commons.lang3.time$FastDateFormat#applyRules(java.util.Calendar,java.lang.StringBuffer)": 118.0,
        "org.apache.commons.lang3.time$FastDateFormat#equals(java.lang.Object)": 104.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)": 116.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Calendar)": 48.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Calendar,java.lang.StringBuffer)": 118.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Date)": 52.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Date,java.lang.StringBuffer)": 118.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(long)": 116.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(long,java.lang.StringBuffer)": 118.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int)": 114.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.Locale)": 114.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.TimeZone)": 116.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.TimeZone,java.util.Locale)": 116.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int)": 112.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.Locale)": 112.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.TimeZone)": 116.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale)": 116.0,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance()": 114.0,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String)": 44.0,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.Locale)": 48.0,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.TimeZone)": 116.0,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 5578.0,
        "org.apache.commons.lang3.time$FastDateFormat#getLocale()": 102.0,
        "org.apache.commons.lang3.time$FastDateFormat#getMaxLengthEstimate()": 118.0,
        "org.apache.commons.lang3.time$FastDateFormat#getPattern()": 96.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int)": 116.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.Locale)": 116.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.TimeZone)": 116.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.TimeZone,java.util.Locale)": 116.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeZone()": 106.0,
        "org.apache.commons.lang3.time$FastDateFormat#hashCode()": 112.0,
        "org.apache.commons.lang3.time$FastDateFormat#parse(java.lang.String)": 10590.0,
        "org.apache.commons.lang3.time$FastDateFormat#parse(java.lang.String,java.text.ParsePosition)": 118.0,
        "org.apache.commons.lang3.time$FastDateFormat#parseObject(java.lang.String,java.text.ParsePosition)": 116.0,
        "org.apache.commons.lang3.time$FastDateFormat#toString()": 114.0,
        "org.apache.commons.lang3.time$FastDateFormat$1#createInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 1360.0,
        "org.apache.commons.lang3.time$FastDateParser#<clinit>()": 60.0,
        "org.apache.commons.lang3.time$FastDateParser#FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale)": 118.0,
        "org.apache.commons.lang3.time$FastDateParser#adjustYear(int)": 102.0,
        "org.apache.commons.lang3.time$FastDateParser#copy(org.apache.commons.lang3.time.FastDateParser$KeyValue[],int,java.lang.String[])": -4.0,
        "org.apache.commons.lang3.time$FastDateParser#count(java.lang.String[])": -4.0,
        "org.apache.commons.lang3.time$FastDateParser#createKeyValues(java.lang.String[],java.lang.String[])": -4.0,
        "org.apache.commons.lang3.time$FastDateParser#equals(java.lang.Object)": 116.0,
        "org.apache.commons.lang3.time$FastDateParser#escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)": 184.0,
        "org.apache.commons.lang3.time$FastDateParser#getDisplayNames(int)": -4.0,
        "org.apache.commons.lang3.time$FastDateParser#getFieldWidth()": 106.0,
        "org.apache.commons.lang3.time$FastDateParser#getLocale()": 116.0,
        "org.apache.commons.lang3.time$FastDateParser#getParsePattern()": 14398.0,
        "org.apache.commons.lang3.time$FastDateParser#getPattern()": 116.0,
        "org.apache.commons.lang3.time$FastDateParser#getStrategy(java.lang.String)": 118.0,
        "org.apache.commons.lang3.time$FastDateParser#getTimeZone()": 116.0,
        "org.apache.commons.lang3.time$FastDateParser#hashCode()": 114.0,
        "org.apache.commons.lang3.time$FastDateParser#init()": 118.0,
        "org.apache.commons.lang3.time$FastDateParser#isNextNumber()": 118.0,
        "org.apache.commons.lang3.time$FastDateParser#parse(java.lang.String)": 7360.0,
        "org.apache.commons.lang3.time$FastDateParser#parse(java.lang.String,java.text.ParsePosition)": 7188.0,
        "org.apache.commons.lang3.time$FastDateParser#parseObject(java.lang.String)": 118.0,
        "org.apache.commons.lang3.time$FastDateParser#parseObject(java.lang.String,java.text.ParsePosition)": 116.0,
        "org.apache.commons.lang3.time$FastDateParser#readObject(java.io.ObjectInputStream)": 112.0,
        "org.apache.commons.lang3.time$FastDateParser#toArray(java.util.Map)": 104.0,
        "org.apache.commons.lang3.time$FastDateParser#toString()": 116.0,
        "org.apache.commons.lang3.time$FastDateParser$1#compare(org.apache.commons.lang3.time.FastDateParser$KeyValue,org.apache.commons.lang3.time.FastDateParser$KeyValue)": -4.0,
        "org.apache.commons.lang3.time$FastDateParser$2#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 94.0,
        "org.apache.commons.lang3.time$FastDateParser$3#modify(int)": 68.0,
        "org.apache.commons.lang3.time$FastDateParser$4#modify(int)": 96.0,
        "org.apache.commons.lang3.time$FastDateParser$5#modify(int)": 90.0,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#FastDateParser$CopyQuotedStrategy(java.lang.String)": 184.0,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": 184.0,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#isNumber()": -86.0,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 118.0,
        "org.apache.commons.lang3.time$FastDateParser$KeyValue#FastDateParser$KeyValue(java.lang.String,int)": -4.0,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#FastDateParser$NumberStrategy(int)": 60.0,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": 118.0,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#isNumber()": 106.0,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#modify(int)": 7534.0,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 7534.0,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#FastDateParser$TextStrategy(int)": 60.0,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": -4.0,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#isNumber()": 118.0,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 86.0,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#FastDateParser$TimeZoneStrategy(java.util.Locale)": -2.0,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": -2.0,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#isNumber()": 52.0,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 88.0,
        "org.apache.commons.lang3.time$FastDatePrinter#<clinit>()": 528.0,
        "org.apache.commons.lang3.time$FastDatePrinter#FastDatePrinter(java.lang.String,java.util.TimeZone,java.util.Locale)": 528.0,
        "org.apache.commons.lang3.time$FastDatePrinter#applyRules(java.util.Calendar,java.lang.StringBuffer)": 22.0,
        "org.apache.commons.lang3.time$FastDatePrinter#equals(java.lang.Object)": 102.0,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)": 116.0,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Calendar)": 34.0,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Calendar,java.lang.StringBuffer)": 34.0,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Date)": 46.0,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Date,java.lang.StringBuffer)": 116.0,
        "org.apache.commons.lang3.time$FastDatePrinter#format(long)": 116.0,
        "org.apache.commons.lang3.time$FastDatePrinter#format(long,java.lang.StringBuffer)": 118.0,
        "org.apache.commons.lang3.time$FastDatePrinter#getLocale()": 96.0,
        "org.apache.commons.lang3.time$FastDatePrinter#getMaxLengthEstimate()": 118.0,
        "org.apache.commons.lang3.time$FastDatePrinter#getPattern()": 90.0,
        "org.apache.commons.lang3.time$FastDatePrinter#getTimeZone()": 100.0,
        "org.apache.commons.lang3.time$FastDatePrinter#getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)": 108.0,
        "org.apache.commons.lang3.time$FastDatePrinter#hashCode()": 110.0,
        "org.apache.commons.lang3.time$FastDatePrinter#init()": 528.0,
        "org.apache.commons.lang3.time$FastDatePrinter#parsePattern()": 528.0,
        "org.apache.commons.lang3.time$FastDatePrinter#parseToken(java.lang.String,int[])": 528.0,
        "org.apache.commons.lang3.time$FastDatePrinter#readObject(java.io.ObjectInputStream)": 112.0,
        "org.apache.commons.lang3.time$FastDatePrinter#selectNumberRule(int,int)": 580.0,
        "org.apache.commons.lang3.time$FastDatePrinter#toString()": 116.0,
        "org.apache.commons.lang3.time$FastDatePrinter$CharacterLiteral#FastDatePrinter$CharacterLiteral(char)": 690.0,
        "org.apache.commons.lang3.time$FastDatePrinter$CharacterLiteral#appendTo(java.lang.StringBuffer,java.util.Calendar)": 30.0,
        "org.apache.commons.lang3.time$FastDatePrinter$CharacterLiteral#estimateLength()": 690.0,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#FastDatePrinter$PaddedNumberField(int,int)": -60.0,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#appendTo(java.lang.StringBuffer,int)": 30.0,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 30.0,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#estimateLength()": -60.0,
        "org.apache.commons.lang3.time$FastDatePrinter$StringLiteral#FastDatePrinter$StringLiteral(java.lang.String)": 6198.0,
        "org.apache.commons.lang3.time$FastDatePrinter$StringLiteral#appendTo(java.lang.StringBuffer,java.util.Calendar)": 112.0,
        "org.apache.commons.lang3.time$FastDatePrinter$StringLiteral#estimateLength()": 6198.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TextField#FastDatePrinter$TextField(int,java.lang.String[])": 10.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TextField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 108.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TextField#estimateLength()": 10.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneDisplayKey#FastDatePrinter$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale)": 108.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneDisplayKey#equals(java.lang.Object)": 112.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneDisplayKey#hashCode()": 108.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNameRule#FastDatePrinter$TimeZoneNameRule(java.util.TimeZone,java.util.Locale,int)": 108.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNameRule#appendTo(java.lang.StringBuffer,java.util.Calendar)": 114.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNameRule#estimateLength()": 108.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#<clinit>()": 24.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#FastDatePrinter$TimeZoneNumberRule(boolean)": 24.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#appendTo(java.lang.StringBuffer,java.util.Calendar)": 98.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#estimateLength()": 24.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#FastDatePrinter$TwelveHourField(org.apache.commons.lang3.time.FastDatePrinter$NumberRule)": 92.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#appendTo(java.lang.StringBuffer,int)": 118.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 118.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#estimateLength()": 92.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#FastDatePrinter$TwentyFourHourField(org.apache.commons.lang3.time.FastDatePrinter$NumberRule)": 116.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#appendTo(java.lang.StringBuffer,int)": 118.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 118.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#estimateLength()": 116.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#<clinit>()": -34.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#FastDatePrinter$TwoDigitMonthField()": -34.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#appendTo(java.lang.StringBuffer,int)": 36.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 36.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#estimateLength()": -34.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#FastDatePrinter$TwoDigitNumberField(int)": -50.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#appendTo(java.lang.StringBuffer,int)": 26.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 26.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#estimateLength()": -50.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#<clinit>()": 102.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#FastDatePrinter$TwoDigitYearField()": 102.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#appendTo(java.lang.StringBuffer,int)": 110.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 110.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#estimateLength()": 102.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#<clinit>()": 88.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#FastDatePrinter$UnpaddedMonthField()": 88.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#appendTo(java.lang.StringBuffer,int)": 106.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 106.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#estimateLength()": 88.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#FastDatePrinter$UnpaddedNumberField(int)": 9978.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#appendTo(java.lang.StringBuffer,int)": 106.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 106.0,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#estimateLength()": 9978.0,
        "org.apache.commons.lang3.time$FormatCache#<clinit>()": 1210.0,
        "org.apache.commons.lang3.time$FormatCache#FormatCache()": 1360.0,
        "org.apache.commons.lang3.time$FormatCache#getDateTimeInstance(java.lang.Integer,java.lang.Integer,java.util.TimeZone,java.util.Locale)": 102.0,
        "org.apache.commons.lang3.time$FormatCache#getInstance()": 114.0,
        "org.apache.commons.lang3.time$FormatCache#getInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 1360.0,
        "org.apache.commons.lang3.time$FormatCache#getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)": 94.0,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#FormatCache$MultipartKey(java.lang.Object[])": 1210.0,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#equals(java.lang.Object)": 74.0,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#hashCode()": 1210.0
    },
    "Math-1": {
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException()": 4353.0,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 18792199.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 4335.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4249.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 4357.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 4357.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 4355.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 2499.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 4339.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 4357.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 4353.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#<clinit>()": 2849.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2849.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 4329.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 18361149.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4357.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 18130461.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 18386871.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 18974731.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 4357.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 4339.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 4315.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 4313.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 4331.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 4253.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4197.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 4123.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3833.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 4351.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 4351.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 4353.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4333.0,
        "org.apache.commons.math3.exception.util$LocalizedFormats#<clinit>()": 10270869.0,
        "org.apache.commons.math3.exception.util$LocalizedFormats#LocalizedFormats(java.lang.String,int,java.lang.String)": 10270869.0,
        "org.apache.commons.math3.exception.util$LocalizedFormats#getLocalizedString(java.util.Locale)": 18896395.0,
        "org.apache.commons.math3.exception.util$LocalizedFormats#getSourceString()": 4353.0,
        "org.apache.commons.math3.fraction$BigFraction#<clinit>()": 18284091.0,
        "org.apache.commons.math3.fraction$BigFraction#BigFraction(double)": 4345.0,
        "org.apache.commons.math3.fraction$BigFraction#BigFraction(double,double,int)": 4347.0,
        "org.apache.commons.math3.fraction$BigFraction#BigFraction(double,double,int,int)": 18948601.0,
        "org.apache.commons.math3.fraction$BigFraction#BigFraction(double,int)": 18992161.0,
        "org.apache.commons.math3.fraction$BigFraction#BigFraction(int)": 18284091.0,
        "org.apache.commons.math3.fraction$BigFraction#BigFraction(int,int)": 18284091.0,
        "org.apache.commons.math3.fraction$BigFraction#BigFraction(java.math.BigInteger)": 4353.0,
        "org.apache.commons.math3.fraction$BigFraction#BigFraction(java.math.BigInteger,java.math.BigInteger)": 18284091.0,
        "org.apache.commons.math3.fraction$BigFraction#BigFraction(long)": 4355.0,
        "org.apache.commons.math3.fraction$BigFraction#BigFraction(long,long)": 4355.0,
        "org.apache.commons.math3.fraction$BigFraction#abs()": 4355.0,
        "org.apache.commons.math3.fraction$BigFraction#add(int)": 4355.0,
        "org.apache.commons.math3.fraction$BigFraction#add(java.math.BigInteger)": 4355.0,
        "org.apache.commons.math3.fraction$BigFraction#add(long)": 4355.0,
        "org.apache.commons.math3.fraction$BigFraction#add(org.apache.commons.math3.fraction.BigFraction)": 4309.0,
        "org.apache.commons.math3.fraction$BigFraction#bigDecimalValue()": 4355.0,
        "org.apache.commons.math3.fraction$BigFraction#bigDecimalValue(int)": 4355.0,
        "org.apache.commons.math3.fraction$BigFraction#bigDecimalValue(int,int)": 4353.0,
        "org.apache.commons.math3.fraction$BigFraction#compareTo(org.apache.commons.math3.fraction.BigFraction)": 4353.0,
        "org.apache.commons.math3.fraction$BigFraction#divide(int)": 4353.0,
        "org.apache.commons.math3.fraction$BigFraction#divide(java.math.BigInteger)": 4353.0,
        "org.apache.commons.math3.fraction$BigFraction#divide(long)": 4355.0,
        "org.apache.commons.math3.fraction$BigFraction#divide(org.apache.commons.math3.fraction.BigFraction)": 4327.0,
        "org.apache.commons.math3.fraction$BigFraction#doubleValue()": 4273.0,
        "org.apache.commons.math3.fraction$BigFraction#equals(java.lang.Object)": 4261.0,
        "org.apache.commons.math3.fraction$BigFraction#floatValue()": 4353.0,
        "org.apache.commons.math3.fraction$BigFraction#getDenominator()": 4337.0,
        "org.apache.commons.math3.fraction$BigFraction#getDenominatorAsInt()": 18879009.0,
        "org.apache.commons.math3.fraction$BigFraction#getDenominatorAsLong()": 4353.0,
        "org.apache.commons.math3.fraction$BigFraction#getField()": 4315.0,
        "org.apache.commons.math3.fraction$BigFraction#getNumerator()": 4337.0,
        "org.apache.commons.math3.fraction$BigFraction#getNumeratorAsInt()": 18870319.0,
        "org.apache.commons.math3.fraction$BigFraction#getNumeratorAsLong()": 4353.0,
        "org.apache.commons.math3.fraction$BigFraction#getReducedFraction(int,int)": 4355.0,
        "org.apache.commons.math3.fraction$BigFraction#hashCode()": 4355.0,
        "org.apache.commons.math3.fraction$BigFraction#intValue()": 4355.0,
        "org.apache.commons.math3.fraction$BigFraction#longValue()": 4355.0,
        "org.apache.commons.math3.fraction$BigFraction#multiply(int)": 4349.0,
        "org.apache.commons.math3.fraction$BigFraction#multiply(java.math.BigInteger)": 4347.0,
        "org.apache.commons.math3.fraction$BigFraction#multiply(long)": 4355.0,
        "org.apache.commons.math3.fraction$BigFraction#multiply(org.apache.commons.math3.fraction.BigFraction)": 4277.0,
        "org.apache.commons.math3.fraction$BigFraction#negate()": 4351.0,
        "org.apache.commons.math3.fraction$BigFraction#percentageValue()": 4355.0,
        "org.apache.commons.math3.fraction$BigFraction#pow(double)": 4357.0,
        "org.apache.commons.math3.fraction$BigFraction#pow(int)": 4353.0,
        "org.apache.commons.math3.fraction$BigFraction#pow(java.math.BigInteger)": 4355.0,
        "org.apache.commons.math3.fraction$BigFraction#pow(long)": 4355.0,
        "org.apache.commons.math3.fraction$BigFraction#reciprocal()": 4315.0,
        "org.apache.commons.math3.fraction$BigFraction#reduce()": 4265.0,
        "org.apache.commons.math3.fraction$BigFraction#subtract(int)": 4355.0,
        "org.apache.commons.math3.fraction$BigFraction#subtract(java.math.BigInteger)": 4355.0,
        "org.apache.commons.math3.fraction$BigFraction#subtract(long)": 4357.0,
        "org.apache.commons.math3.fraction$BigFraction#subtract(org.apache.commons.math3.fraction.BigFraction)": 4281.0,
        "org.apache.commons.math3.fraction$BigFraction#toString()": 4357.0,
        "org.apache.commons.math3.fraction$Fraction#<clinit>()": 17205691.0,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double)": 4255.0,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double,double,int)": 4249.0,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double,double,int,int)": 18524359.0,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double,int)": 18992161.0,
        "org.apache.commons.math3.fraction$Fraction#Fraction(int)": 4027.0,
        "org.apache.commons.math3.fraction$Fraction#Fraction(int,int)": 17205691.0,
        "org.apache.commons.math3.fraction$Fraction#abs()": 4355.0,
        "org.apache.commons.math3.fraction$Fraction#add(int)": 4355.0,
        "org.apache.commons.math3.fraction$Fraction#add(org.apache.commons.math3.fraction.Fraction)": 4263.0,
        "org.apache.commons.math3.fraction$Fraction#addSub(org.apache.commons.math3.fraction.Fraction,boolean)": 4233.0,
        "org.apache.commons.math3.fraction$Fraction#compareTo(org.apache.commons.math3.fraction.Fraction)": 4355.0,
        "org.apache.commons.math3.fraction$Fraction#divide(int)": 4355.0,
        "org.apache.commons.math3.fraction$Fraction#divide(org.apache.commons.math3.fraction.Fraction)": 4309.0,
        "org.apache.commons.math3.fraction$Fraction#doubleValue()": 4303.0,
        "org.apache.commons.math3.fraction$Fraction#equals(java.lang.Object)": 4063.0,
        "org.apache.commons.math3.fraction$Fraction#floatValue()": 4355.0,
        "org.apache.commons.math3.fraction$Fraction#getDenominator()": 18766195.0,
        "org.apache.commons.math3.fraction$Fraction#getField()": 4175.0,
        "org.apache.commons.math3.fraction$Fraction#getNumerator()": 18757531.0,
        "org.apache.commons.math3.fraction$Fraction#getReducedFraction(int,int)": 4251.0,
        "org.apache.commons.math3.fraction$Fraction#hashCode()": 4345.0,
        "org.apache.commons.math3.fraction$Fraction#intValue()": 4355.0,
        "org.apache.commons.math3.fraction$Fraction#longValue()": 4355.0,
        "org.apache.commons.math3.fraction$Fraction#multiply(int)": 4355.0,
        "org.apache.commons.math3.fraction$Fraction#multiply(org.apache.commons.math3.fraction.Fraction)": 4253.0,
        "org.apache.commons.math3.fraction$Fraction#negate()": 4307.0,
        "org.apache.commons.math3.fraction$Fraction#percentageValue()": 4353.0,
        "org.apache.commons.math3.fraction$Fraction#reciprocal()": 4307.0,
        "org.apache.commons.math3.fraction$Fraction#subtract(int)": 4355.0,
        "org.apache.commons.math3.fraction$Fraction#subtract(org.apache.commons.math3.fraction.Fraction)": 4301.0,
        "org.apache.commons.math3.fraction$Fraction#toString()": 4351.0,
        "org.apache.commons.math3.fraction$FractionConversionException#FractionConversionException(double,int)": 4353.0,
        "org.apache.commons.math3.fraction$FractionConversionException#FractionConversionException(double,long,long)": 18974731.0,
        "org.apache.commons.math3.util$ArithmeticUtils#ArithmeticUtils()": 4357.0,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(int,int)": 4275.0,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long)": 4351.0,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long,org.apache.commons.math3.exception.util.Localizable)": 4349.0,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficient(int,int)": 4357.0,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientDouble(int,int)": 4357.0,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)": 4357.0,
        "org.apache.commons.math3.util$ArithmeticUtils#factorial(int)": 4357.0,
        "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)": 4357.0,
        "org.apache.commons.math3.util$ArithmeticUtils#factorialLog(int)": 4357.0,
        "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)": 17147661.0,
        "org.apache.commons.math3.util$ArithmeticUtils#gcd(long,long)": 4351.0,
        "org.apache.commons.math3.util$ArithmeticUtils#gcdPositive(int,int)": 17147661.0,
        "org.apache.commons.math3.util$ArithmeticUtils#isPowerOfTwo(long)": 4267.0,
        "org.apache.commons.math3.util$ArithmeticUtils#lcm(int,int)": 4355.0,
        "org.apache.commons.math3.util$ArithmeticUtils#lcm(long,long)": 4355.0,
        "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(int,int)": 4227.0,
        "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(long,long)": 4329.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(int,int)": 4351.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(int,long)": 4353.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,int)": 4355.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,java.math.BigInteger)": 4353.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,long)": 4353.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(long,int)": 4355.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(long,long)": 4355.0,
        "org.apache.commons.math3.util$ArithmeticUtils#stirlingS2(int,int)": 4357.0,
        "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(int,int)": 4299.0,
        "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(long,long)": 4355.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 425319.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 4357.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 4339.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 4598809.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 4353.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 16208341.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 11477571.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 4285.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 4347.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 4283.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 4347.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 4279.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 4093.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 4167.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 4347.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 4265.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 3753.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 4309.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 4353.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 3703.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 3539.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 4289.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 4173.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 2671.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 2097.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 4321.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 4277.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 12708429.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 4195.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 4353.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 4205.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 2493.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 4355.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1925.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 4245.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 3273.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 4357.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 2357.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 4353.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 2953.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 4331.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 3267.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 4353.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 2269.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 4257.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 4327.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 4351.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 4351.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 4355.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 3449.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 3449.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 2867.0,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 3881.0,
        "org.apache.commons.math3.util$FastMath#random()": 4319.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4347.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 4209.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 4309.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 4355.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 4227.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 4353.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 4329.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 4353.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 3509.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 3495.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 4289.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 187.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 4295.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 4295.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 4327.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 4349.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 4349.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 3777.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 4355.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double)": 3663.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 3663.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 3663.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 3663.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 2129.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 4357.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 2139.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 4357.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1965.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 4357.0,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 4357.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 4323.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 4355.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 1843.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 18258441.0,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 4349.0,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 4349.0,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 4353.0,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 4353.0,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 4261.0,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 4281.0,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 4247.0,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 4347.0
    },
    "Math-10": {
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#<clinit>()": 11559765.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#DSCompiler(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler)": 11559765.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#acos(double[],int,double[],int)": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#acosh(double[],int,double[],int)": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#add(double[],int,double[],int,double[],int)": 12376207.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#asin(double[],int,double[],int)": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#asinh(double[],int,double[],int)": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#atan(double[],int,double[],int)": 13176895.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#atan2(double[],int,double[],int,double[],int)": 13191421.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#atanh(double[],int,double[],int)": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#checkCompatibility(org.apache.commons.math3.analysis.differentiation.DSCompiler)": 12110245.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compileCompositionIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[][],int[][])": 11559765.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compileDerivativesIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler)": 11559765.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compileLowerIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler)": 11559765.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compileMultiplicationIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[])": 11559765.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compileSizes(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler)": 11559765.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compose(double[],int,double[],double[],int)": 12496125.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#convertIndex(int,int,int[][],int,int,int[][])": 12595315.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#cos(double[],int,double[],int)": 3615.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#cosh(double[],int,double[],int)": 3627.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#divide(double[],int,double[],int,double[],int)": 13060975.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#exp(double[],int,double[],int)": 3601.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#expm1(double[],int,double[],int)": 3629.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getCompiler(int,int)": 11559765.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getFreeParameters()": 3201.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getOrder()": 3307.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getPartialDerivativeIndex(int,int,int[][],int[])": 11580177.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getPartialDerivativeIndex(int[])": 3201.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getPartialDerivativeOrders(int)": 3621.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getSize()": 11559765.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#linearCombination(double,double[],int,double,double[],int,double,double[],int,double,double[],int,double[],int)": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#linearCombination(double,double[],int,double,double[],int,double,double[],int,double[],int)": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#linearCombination(double,double[],int,double,double[],int,double[],int)": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#log(double[],int,double[],int)": 3617.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#log10(double[],int,double[],int)": 3629.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#log1p(double[],int,double[],int)": 3629.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#multiply(double[],int,double[],int,double[],int)": 12531505.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#pow(double[],int,double,double[],int)": 3623.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#pow(double[],int,double[],int,double[],int)": 3629.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#pow(double[],int,int,double[],int)": 12959965.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#remainder(double[],int,double[],int,double[],int)": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#rootN(double[],int,int,double[],int)": 12981577.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#sin(double[],int,double[],int)": 3607.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#sinh(double[],int,double[],int)": 3629.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#subtract(double[],int,double[],int,double[],int)": 3533.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#tan(double[],int,double[],int)": 3627.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#tanh(double[],int,double[],int)": 3629.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#taylor(double[],int,double[])": 3629.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(int,int)": 11607421.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(int,int,double)": 11621055.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(int,int,double[])": 3423.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(int,int,int,double)": 11641521.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)": 11607421.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3331.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#abs()": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#acos()": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#acosh()": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#add(double)": 3497.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#add(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3405.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#asin()": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#asinh()": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#atan()": 3627.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#atan2(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 13191421.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#atanh()": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#cbrt()": 3629.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#ceil()": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#compose(double[])": 3595.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#copySign(double)": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#cos()": 3615.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#cosh()": 3627.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#divide(double)": 3609.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#divide(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3595.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#exp()": 3605.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#expm1()": 3629.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#floor()": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getAllDerivatives()": 3603.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getExponent()": 3625.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getField()": 3483.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getFreeParameters()": 3395.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getOrder()": 3361.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getPartialDerivative(int[])": 3203.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getValue()": 12110245.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#hypot(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3625.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#log()": 3621.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#log10()": 3629.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#log1p()": 3629.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#multiply(double)": 3455.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#multiply(int)": 3611.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3477.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#negate()": 3603.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#pow(double)": 3623.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#pow(int)": 3623.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#pow(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3629.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#reciprocal()": 3607.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#remainder(double)": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#remainder(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#rint()": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#rootN(int)": 3575.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#round()": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#scalb(int)": 3625.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#signum()": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#sin()": 3607.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#sinh()": 3629.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#sqrt()": 3581.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#subtract(double)": 3535.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#subtract(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3533.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#tan()": 3627.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#tanh()": 3629.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#taylor(double[])": 3629.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#toDegrees()": 3629.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#toRadians()": 3629.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#writeReplace()": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure$1#getOne()": 3599.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure$1#getRuntimeClass()": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure$1#getZero()": 3491.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure$DataTransferObject#DerivativeStructure$DataTransferObject(int,int,double[])": 3631.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure$DataTransferObject#readResolve()": 3631.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 3293.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 3251.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 3627.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 1961.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 3615.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 3633.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 3633.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2263.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 3605.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 3565.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3369.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 3631.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 3631.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 159985.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 3633.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 3631.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": -125.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3629.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 2973.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 1777.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 3583.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 3629.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 3587.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 3629.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 12974371.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 12425515.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 3459.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 3629.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 3549.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 3049.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 3607.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 3629.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 3043.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 2883.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 3573.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 3475.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 2111.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 1659.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 3603.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 3573.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 2047.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 3481.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 3629.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 3491.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 1931.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 3631.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1481.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 3521.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 2673.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 3633.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 1853.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 3629.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 9412057.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 3631.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 2689.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 3629.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 8059125.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 3563.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 3603.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 3627.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 3627.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 3631.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 2803.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 2803.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 2371.0,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 11860945.0,
        "org.apache.commons.math3.util$FastMath#random()": 3595.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 3623.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3497.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 3589.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 3631.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 3517.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 3629.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 3609.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 3629.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 2853.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 2841.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 3573.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 3274275.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 3579.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 3579.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 3609.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3625.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3625.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 3063.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 3631.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double)": 2983.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 2983.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 2983.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 2983.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 1691.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 3633.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 1699.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 3633.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1511.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 3633.0
    },
    "Math-11": {
        "org.apache.commons.math3.distribution$AbstractMultivariateRealDistribution#AbstractMultivariateRealDistribution(org.apache.commons.math3.random.RandomGenerator,int)": 18215814.0,
        "org.apache.commons.math3.distribution$AbstractMultivariateRealDistribution#getDimension()": 18224352.0,
        "org.apache.commons.math3.distribution$AbstractMultivariateRealDistribution#reseedRandomGenerator(long)": 4272.0,
        "org.apache.commons.math3.distribution$AbstractMultivariateRealDistribution#sample(int)": 4272.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#AbstractRealDistribution()": 4276.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#AbstractRealDistribution(org.apache.commons.math3.random.RandomGenerator)": 13183514.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#cumulativeProbability(double,double)": 4186.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#getSolverAbsoluteAccuracy()": 4272.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#inverseCumulativeProbability(double)": 4054.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#probability(double)": 4276.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#probability(double,double)": 4180.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#reseedRandomGenerator(long)": 4230.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#sample()": 4122.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#sample(int)": 4250.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution$1#value(double)": 4078.0,
        "org.apache.commons.math3.distribution$MultivariateNormalDistribution#MultivariateNormalDistribution(double[],double[][])": 18215814.0,
        "org.apache.commons.math3.distribution$MultivariateNormalDistribution#MultivariateNormalDistribution(org.apache.commons.math3.random.RandomGenerator,double[],double[][])": 18215814.0,
        "org.apache.commons.math3.distribution$MultivariateNormalDistribution#density(double[])": 18275622.0,
        "org.apache.commons.math3.distribution$MultivariateNormalDistribution#getCovariances()": 4274.0,
        "org.apache.commons.math3.distribution$MultivariateNormalDistribution#getExponentTerm(double[])": 18275622.0,
        "org.apache.commons.math3.distribution$MultivariateNormalDistribution#getMeans()": 18267072.0,
        "org.apache.commons.math3.distribution$MultivariateNormalDistribution#getStandardDeviations()": 4276.0,
        "org.apache.commons.math3.distribution$MultivariateNormalDistribution#sample()": 4272.0,
        "org.apache.commons.math3.distribution$NormalDistribution#<clinit>()": 17413824.0,
        "org.apache.commons.math3.distribution$NormalDistribution#NormalDistribution()": 4276.0,
        "org.apache.commons.math3.distribution$NormalDistribution#NormalDistribution(double,double)": 17859024.0,
        "org.apache.commons.math3.distribution$NormalDistribution#NormalDistribution(double,double,double)": 17859024.0,
        "org.apache.commons.math3.distribution$NormalDistribution#NormalDistribution(org.apache.commons.math3.random.RandomGenerator,double,double,double)": 17413824.0,
        "org.apache.commons.math3.distribution$NormalDistribution#cumulativeProbability(double)": 4244.0,
        "org.apache.commons.math3.distribution$NormalDistribution#cumulativeProbability(double,double)": 4218.0,
        "org.apache.commons.math3.distribution$NormalDistribution#density(double)": 18036978.0,
        "org.apache.commons.math3.distribution$NormalDistribution#getMean()": 4260.0,
        "org.apache.commons.math3.distribution$NormalDistribution#getNumericalMean()": 4264.0,
        "org.apache.commons.math3.distribution$NormalDistribution#getNumericalVariance()": 4264.0,
        "org.apache.commons.math3.distribution$NormalDistribution#getSolverAbsoluteAccuracy()": 4266.0,
        "org.apache.commons.math3.distribution$NormalDistribution#getStandardDeviation()": 4260.0,
        "org.apache.commons.math3.distribution$NormalDistribution#getSupportLowerBound()": 4262.0,
        "org.apache.commons.math3.distribution$NormalDistribution#getSupportUpperBound()": 4262.0,
        "org.apache.commons.math3.distribution$NormalDistribution#isSupportConnected()": 4266.0,
        "org.apache.commons.math3.distribution$NormalDistribution#isSupportLowerBoundInclusive()": 4274.0,
        "org.apache.commons.math3.distribution$NormalDistribution#isSupportUpperBoundInclusive()": 4274.0,
        "org.apache.commons.math3.distribution$NormalDistribution#probability(double,double)": 4218.0,
        "org.apache.commons.math3.distribution$NormalDistribution#sample()": 4250.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 3936.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 3894.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 4270.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 4254.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4188.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 4276.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 4276.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 4274.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 2604.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 4258.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 4276.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 4276.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2906.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 4248.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 4150.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4276.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4100.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 4156.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 4274.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 4276.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int)": 4276.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int,java.lang.Class)": 4250.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException()": 4238.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4238.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getContext()": 4276.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getLocalizedMessage()": 4276.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getMessage()": 4276.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 4218.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 4218.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 4250.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(java.lang.Integer[],java.lang.Integer[])": 4276.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,java.lang.Integer[],java.lang.Integer[])": 4198.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimension(int)": 4274.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimensions()": 4276.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimension(int)": 4274.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimensions()": 4276.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 4254.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 4222.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 4274.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 4244.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 4274.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 4274.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 4274.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 4274.0,
        "org.apache.commons.math3.exception$NotANumberException#NotANumberException()": 4250.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 4262.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 4240.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 4240.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 4252.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 4180.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 4114.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 4182.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4128.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 4208.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 4012.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 4274.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 4274.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 4080.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3806.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 4270.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 4270.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 4194.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 3886.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 4274.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 4274.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 4272.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4254.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix()": 4272.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field)": 4132.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field,int,int)": 4070.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 4268.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int)": 4142.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int,int)": 4038.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkAdditionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 4256.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkColumnIndex(int)": 4024.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkMultiplicationCompatible(org.apache.commons.math3.linear.FieldMatrix)": 4240.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkRowIndex(int)": 4024.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int,int,int,int)": 4256.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int[],int[])": 4266.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubtractionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 4268.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int,int,int,int,org.apache.commons.math3.FieldElement[][])": 4272.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int[],int[],org.apache.commons.math3.FieldElement[][])": 4272.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#equals(java.lang.Object)": 4212.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[])": 4276.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[][])": 4094.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumn(int)": 4256.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnMatrix(int)": 4270.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnVector(int)": 4264.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getData()": 4272.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getField()": 4014.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRow(int)": 4262.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowMatrix(int)": 4268.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowVector(int)": 4270.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int,int,int,int)": 4272.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int[],int[])": 4270.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getTrace()": 4270.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#hashCode()": 4270.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#isSquare()": 4200.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 4256.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 4272.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.linear.FieldVector)": 4270.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#power(int)": 4274.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 4274.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldMatrix)": 4270.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldVector)": 4276.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 4272.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 4272.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 4274.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 4274.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 4274.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 4274.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 4274.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 4274.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 4272.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 4274.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#toString()": 4272.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#transpose()": 4264.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4274.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4274.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4274.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4274.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4270.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4274.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4230.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4272.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4274.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4276.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4272.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4276.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$1#visit(int,int,org.apache.commons.math3.FieldElement)": 4270.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#start(int,int,int,int,int,int)": 4272.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#visit(int,int,org.apache.commons.math3.FieldElement)": 4272.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$3#visit(int,int,org.apache.commons.math3.FieldElement)": 4264.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#<clinit>()": 12389642.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix()": 13808094.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix(int,int)": 13190778.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 4202.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#addToEntry(int,int,double)": 4276.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int,int,int,int,double[][])": 4218.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int[],int[],double[][])": 4272.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#equals(java.lang.Object)": 4170.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumn(int)": 4164.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnMatrix(int)": 4202.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnVector(int)": 4244.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getData()": 4272.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getFrobeniusNorm()": 4208.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getNorm()": 4114.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRow(int)": 3990.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowMatrix(int)": 4268.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowVector(int)": 4170.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int,int,int,int)": 4254.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int[],int[])": 4270.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getTrace()": 4270.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#hashCode()": 4262.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#isSquare()": 16638042.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 17023724.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiplyEntry(int,int,double)": 4276.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(double[])": 4272.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(org.apache.commons.math3.linear.RealVector)": 3840.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#power(int)": 4272.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(double[])": 4274.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealMatrix)": 4270.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealVector)": 4276.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarAdd(double)": 4206.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarMultiply(double)": 3956.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumn(int,double[])": 18207278.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 4272.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 4190.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRow(int,double[])": 4274.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 4274.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 4166.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setSubMatrix(double[][],int,int)": 4266.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 4066.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#toString()": 4262.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#transpose()": 16654364.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4274.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4274.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 4260.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4274.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4266.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4274.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 16638042.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4220.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4274.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4276.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 4272.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4276.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#end()": 4114.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#start(int,int,int,int,int,int)": 4114.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#visit(int,int,double)": 4114.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#end()": 4208.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#start(int,int,int,int,int,int)": 4208.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#visit(int,int,double)": 4208.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$3#visit(int,int,double)": 4270.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#start(int,int,int,int,int,int)": 4218.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#visit(int,int,double)": 4218.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$5#visit(int,int,double)": 16654364.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field)": 4272.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,int,int)": 4206.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[])": 4276.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][])": 4178.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],boolean)": 4214.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 4276.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][])": 4198.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][],boolean)": 4240.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#add(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 4272.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 4276.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copy()": 4272.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyIn(org.apache.commons.math3.FieldElement[][])": 4178.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyOut()": 4210.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#createMatrix(int,int)": 4240.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getColumnDimension()": 4118.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getData()": 4214.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getDataRef()": 4276.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getEntry(int,int)": 4144.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getRowDimension()": 4118.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 4274.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 4276.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 4272.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 4274.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 4200.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 4178.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 4274.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4274.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4274.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4274.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4274.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4272.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4274.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4232.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4272.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix()": 4268.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[])": 4268.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][])": 14333304.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][],boolean)": 3660.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(int,int)": 14454728.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#add(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 4272.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#addToEntry(int,int,double)": 4276.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copy()": 4248.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyIn(double[][])": 14318162.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyOut()": 15405272.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#createMatrix(int,int)": 15483882.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getColumnDimension()": 13460952.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getData()": 15468144.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getDataRef()": 4130.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getEntry(int,int)": 14069474.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getRowDimension()": 13468292.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 4254.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiplyEntry(int,int,double)": 18215814.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#operate(double[])": 4154.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#preMultiply(double[])": 18258524.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setEntry(int,int,double)": 14523254.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setSubMatrix(double[][],int,int)": 14318162.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 4274.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4274.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4274.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 4124.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4274.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4268.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4274.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 16646202.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4220.0,
        "org.apache.commons.math3.linear$ArrayRealVector#<clinit>()": 13227128.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector()": 4270.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[])": 14722128.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],boolean)": 3304.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],double[])": 4274.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],int,int)": 4274.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],org.apache.commons.math3.linear.ArrayRealVector)": 4274.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int)": 3924.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int,double)": 4270.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[])": 4274.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[],int,int)": 4274.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector)": 4274.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean)": 17205774.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,double[])": 4274.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector)": 4270.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.RealVector)": 4272.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector)": 4274.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.ArrayRealVector)": 4274.0,
        "org.apache.commons.math3.linear$ArrayRealVector#add(org.apache.commons.math3.linear.RealVector)": 4258.0,
        "org.apache.commons.math3.linear$ArrayRealVector#addToEntry(int,double)": 4270.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(double)": 4272.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.ArrayRealVector)": 4276.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.RealVector)": 4272.0,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(int)": 3574.0,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 4242.0,
        "org.apache.commons.math3.linear$ArrayRealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 4242.0,
        "org.apache.commons.math3.linear$ArrayRealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 4194.0,
        "org.apache.commons.math3.linear$ArrayRealVector#copy()": 17214072.0,
        "org.apache.commons.math3.linear$ArrayRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 3724.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": 4276.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 4224.0,
        "org.apache.commons.math3.linear$ArrayRealVector#equals(java.lang.Object)": 4178.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDataRef()": 16337528.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDimension()": 3500.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 4266.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getEntry(int)": 3622.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 4268.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Norm()": 4272.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 4268.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfNorm()": 4272.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getNorm()": 4164.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getSubVector(int,int)": 4262.0,
        "org.apache.commons.math3.linear$ArrayRealVector#hashCode()": 4218.0,
        "org.apache.commons.math3.linear$ArrayRealVector#isInfinite()": 4272.0,
        "org.apache.commons.math3.linear$ArrayRealVector#isNaN()": 4120.0,
        "org.apache.commons.math3.linear$ArrayRealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 4270.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapAddToSelf(double)": 4270.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapDivideToSelf(double)": 4266.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapMultiplyToSelf(double)": 4120.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapSubtractToSelf(double)": 4270.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 4268.0,
        "org.apache.commons.math3.linear$ArrayRealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 4270.0,
        "org.apache.commons.math3.linear$ArrayRealVector#set(double)": 4186.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setEntry(int,double)": 4102.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,double[])": 4226.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 4224.0,
        "org.apache.commons.math3.linear$ArrayRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 4072.0,
        "org.apache.commons.math3.linear$ArrayRealVector#toArray()": 16785228.0,
        "org.apache.commons.math3.linear$ArrayRealVector#toString()": 4276.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 4272.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 4268.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 4272.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 4268.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 4274.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 4272.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 4274.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 4272.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(int,int,org.apache.commons.math3.FieldElement[][],boolean)": 4206.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.Field,int,int)": 4222.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.FieldElement[][])": 4206.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.BlockFieldMatrix)": 4268.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 4272.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 4276.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockHeight(int)": 4194.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockWidth(int)": 4184.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copy()": 4274.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copyBlockPart(org.apache.commons.math3.FieldElement[],int,int,int,int,int,org.apache.commons.math3.FieldElement[],int,int,int)": 4270.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createBlocksLayout(org.apache.commons.math3.Field,int,int)": 4222.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createMatrix(int,int)": 4274.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumn(int)": 4266.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnDimension()": 4194.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnMatrix(int)": 4270.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnVector(int)": 4270.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getData()": 4266.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getEntry(int,int)": 4220.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRow(int)": 4266.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowDimension()": 4192.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowMatrix(int)": 4268.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowVector(int)": 4270.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getSubMatrix(int,int,int,int)": 4270.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.BlockFieldMatrix)": 4262.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 4264.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 4276.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 4270.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 4272.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 4268.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 4274.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 4268.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 4272.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 4272.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 4272.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 4266.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 4268.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 4272.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 4272.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 4272.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 4272.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.BlockFieldMatrix)": 4272.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 4274.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#toBlocksLayout(org.apache.commons.math3.FieldElement[][])": 4206.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#transpose()": 4270.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4272.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4274.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4274.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4272.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4274.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4274.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4274.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4274.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(double[][])": 3940.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int)": 4132.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int,double[][],boolean)": 3890.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.BlockRealMatrix)": 4268.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 4272.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#addToEntry(int,int,double)": 4274.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockHeight(int)": 3876.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockWidth(int)": 3860.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#copy()": 4266.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#copyBlockPart(double[],int,int,int,int,int,double[],int,int,int)": 4268.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#createBlocksLayout(int,int)": 4084.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#createMatrix(int,int)": 4274.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumn(int)": 4234.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnDimension()": 3878.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnMatrix(int)": 4270.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnVector(int)": 4270.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getData()": 4070.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getEntry(int,int)": 4110.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getFrobeniusNorm()": 4274.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getNorm()": 4230.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRow(int)": 4266.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowDimension()": 3876.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowMatrix(int)": 4268.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowVector(int)": 4270.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getSubMatrix(int,int,int,int)": 4268.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.BlockRealMatrix)": 4250.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 4250.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiplyEntry(int,int,double)": 4276.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#operate(double[])": 4118.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#preMultiply(double[])": 4272.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarAdd(double)": 4268.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarMultiply(double)": 4274.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumn(int,double[])": 4260.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 4272.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 4272.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 4272.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setEntry(int,int,double)": 4226.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRow(int,double[])": 4268.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 4272.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 4272.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 4272.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setSubMatrix(double[][],int,int)": 4272.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.BlockRealMatrix)": 4238.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 4232.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#toBlocksLayout(double[][])": 3940.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#transpose()": 4222.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4258.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4274.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 4270.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4268.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4274.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4274.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 4274.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4274.0,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#DefaultRealMatrixPreservingVisitor()": 16605422.0,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#end()": 16605422.0,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#start(int,int,int,int,int,int)": 16638042.0,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#visit(int,int,double)": 4276.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(double[],double[])": 4268.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(double[],double[],double)": 4276.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(org.apache.commons.math3.linear.RealMatrix)": 17724032.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(org.apache.commons.math3.linear.RealMatrix,double)": 4276.0,
        "org.apache.commons.math3.linear$EigenDecomposition#cdiv(double,double,double,double)": 4272.0,
        "org.apache.commons.math3.linear$EigenDecomposition#findEigenVectors(double[][])": 17715612.0,
        "org.apache.commons.math3.linear$EigenDecomposition#findEigenVectorsFromSchur(org.apache.commons.math3.linear.SchurTransformer)": 4270.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getD()": 4202.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getDeterminant()": 18215814.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getEigenvector(int)": 18181682.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getImagEigenvalue(int)": 4276.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getImagEigenvalues()": 4276.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getRealEigenvalue(int)": 4260.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getRealEigenvalues()": 18139062.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getSolver()": 18181682.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getSquareRoot()": 4270.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getV()": 4192.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getVT()": 4268.0,
        "org.apache.commons.math3.linear$EigenDecomposition#hasComplexEigenvalues()": 18181682.0,
        "org.apache.commons.math3.linear$EigenDecomposition#transformToSchur(org.apache.commons.math3.linear.RealMatrix)": 4270.0,
        "org.apache.commons.math3.linear$EigenDecomposition#transformToTridiagonal(org.apache.commons.math3.linear.RealMatrix)": 17749304.0,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#EigenDecomposition$Solver(double[],double[],org.apache.commons.math3.linear.ArrayRealVector[])": 18181682.0,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#getInverse()": 18198744.0,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#isNonSingular()": 18181682.0,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#solve(org.apache.commons.math3.linear.RealMatrix)": 4272.0,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#solve(org.apache.commons.math3.linear.RealVector)": 4272.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#MatrixDimensionMismatchException(int,int,int,int)": 4198.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedColumnDimension()": 4274.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedRowDimension()": 4274.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongColumnDimension()": 4274.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongRowDimension()": 4274.0,
        "org.apache.commons.math3.linear$MatrixUtils#<clinit>()": 12794228.0,
        "org.apache.commons.math3.linear$MatrixUtils#MatrixUtils()": 4276.0,
        "org.apache.commons.math3.linear$MatrixUtils#bigFractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 4246.0,
        "org.apache.commons.math3.linear$MatrixUtils#blockInverse(org.apache.commons.math3.linear.RealMatrix,int)": 4274.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkAdditionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 4172.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 13103742.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)": 13343784.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 15476012.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 13103742.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int,int,int)": 4182.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int[],int[])": 4266.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubtractionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 4028.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSymmetric(org.apache.commons.math3.linear.RealMatrix,double)": 4272.0,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnFieldMatrix(org.apache.commons.math3.FieldElement[])": 4274.0,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnRealMatrix(double[])": 4208.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldDiagonalMatrix(org.apache.commons.math3.FieldElement[])": 4276.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldIdentityMatrix(org.apache.commons.math3.Field,int)": 4272.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.Field,int,int)": 4272.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.FieldElement[][])": 4274.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldVector(org.apache.commons.math3.FieldElement[])": 4276.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealDiagonalMatrix(double[])": 4144.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealIdentityMatrix(int)": 4156.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(double[][])": 15178434.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(int,int)": 3956.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealVector(double[])": 4274.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 4274.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRowRealMatrix(double[])": 4274.0,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealMatrix(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 4272.0,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealVector(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 4272.0,
        "org.apache.commons.math3.linear$MatrixUtils#fractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 4274.0,
        "org.apache.commons.math3.linear$MatrixUtils#isSymmetric(org.apache.commons.math3.linear.RealMatrix,double)": 17707194.0,
        "org.apache.commons.math3.linear$MatrixUtils#isSymmetricInternal(org.apache.commons.math3.linear.RealMatrix,double,boolean)": 17690364.0,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealMatrix(org.apache.commons.math3.linear.RealMatrix,java.io.ObjectOutputStream)": 4272.0,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealVector(org.apache.commons.math3.linear.RealVector,java.io.ObjectOutputStream)": 4272.0,
        "org.apache.commons.math3.linear$MatrixUtils#solveLowerTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 4274.0,
        "org.apache.commons.math3.linear$MatrixUtils#solveUpperTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 4274.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#MatrixUtils$BigFractionMatrixConverter()": 4246.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#getConvertedMatrix()": 4246.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#start(int,int,int,int,int,int)": 4246.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.BigFraction)": 4246.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#MatrixUtils$FractionMatrixConverter()": 4274.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#getConvertedMatrix()": 4274.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#start(int,int,int,int,int,int)": 4274.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.Fraction)": 4274.0,
        "org.apache.commons.math3.linear$NonPositiveDefiniteMatrixException#NonPositiveDefiniteMatrixException(double,int,double)": 4272.0,
        "org.apache.commons.math3.linear$NonPositiveDefiniteMatrixException#getColumn()": 4276.0,
        "org.apache.commons.math3.linear$NonPositiveDefiniteMatrixException#getRow()": 4276.0,
        "org.apache.commons.math3.linear$NonPositiveDefiniteMatrixException#getThreshold()": 4276.0,
        "org.apache.commons.math3.linear$NonSquareMatrixException#NonSquareMatrixException(int,int)": 4248.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#NonSymmetricMatrixException(int,int,double)": 4272.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getColumn()": 4276.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getRow()": 4276.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getThreshold()": 4276.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(int,int)": 4214.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(org.apache.commons.math3.linear.OpenMapRealMatrix)": 4258.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#add(org.apache.commons.math3.linear.OpenMapRealMatrix)": 4272.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#addToEntry(int,int,double)": 4276.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#computeKey(int,int)": 4216.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#copy()": 4272.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#createMatrix(int,int)": 4262.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getColumnDimension()": 4216.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getEntry(int,int)": 4220.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getRowDimension()": 4216.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.OpenMapRealMatrix)": 4268.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 4268.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiplyEntry(int,int,double)": 4276.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#setEntry(int,int,double)": 4216.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.OpenMapRealMatrix)": 4264.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 4264.0,
        "org.apache.commons.math3.linear$RealLinearOperator#RealLinearOperator()": 12137462.0,
        "org.apache.commons.math3.linear$RealLinearOperator#isTransposable()": 4276.0,
        "org.apache.commons.math3.linear$RealLinearOperator#operateTranspose(org.apache.commons.math3.linear.RealVector)": 4276.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat()": 4274.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 12794228.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 12326354.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.text.NumberFormat)": 12326354.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix)": 4240.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition)": 4240.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getAvailableLocales()": 4276.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getColumnSeparator()": 4276.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getFormat()": 12382602.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance()": 12794228.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance(java.util.Locale)": 12326354.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getPrefix()": 4276.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowPrefix()": 4276.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSeparator()": 4276.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSuffix()": 4276.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getSuffix()": 4276.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String)": 4252.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String,java.text.ParsePosition)": 4244.0,
        "org.apache.commons.math3.linear$RealVector#RealVector()": 11915478.0,
        "org.apache.commons.math3.linear$RealVector#add(org.apache.commons.math3.linear.RealVector)": 4268.0,
        "org.apache.commons.math3.linear$RealVector#addToEntry(int,double)": 4264.0,
        "org.apache.commons.math3.linear$RealVector#checkIndex(int)": 3912.0,
        "org.apache.commons.math3.linear$RealVector#checkIndices(int,int)": 4228.0,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(int)": 4134.0,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 4156.0,
        "org.apache.commons.math3.linear$RealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 4258.0,
        "org.apache.commons.math3.linear$RealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 4242.0,
        "org.apache.commons.math3.linear$RealVector#cosine(org.apache.commons.math3.linear.RealVector)": 4242.0,
        "org.apache.commons.math3.linear$RealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 4220.0,
        "org.apache.commons.math3.linear$RealVector#equals(java.lang.Object)": 4276.0,
        "org.apache.commons.math3.linear$RealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 4268.0,
        "org.apache.commons.math3.linear$RealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 4268.0,
        "org.apache.commons.math3.linear$RealVector#getL1Norm()": 4272.0,
        "org.apache.commons.math3.linear$RealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 4268.0,
        "org.apache.commons.math3.linear$RealVector#getLInfNorm()": 4272.0,
        "org.apache.commons.math3.linear$RealVector#getMaxIndex()": 4266.0,
        "org.apache.commons.math3.linear$RealVector#getMaxValue()": 4266.0,
        "org.apache.commons.math3.linear$RealVector#getMinIndex()": 4266.0,
        "org.apache.commons.math3.linear$RealVector#getMinValue()": 4266.0,
        "org.apache.commons.math3.linear$RealVector#getNorm()": 4232.0,
        "org.apache.commons.math3.linear$RealVector#hashCode()": 4276.0,
        "org.apache.commons.math3.linear$RealVector#iterator()": 4134.0,
        "org.apache.commons.math3.linear$RealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 4272.0,
        "org.apache.commons.math3.linear$RealVector#mapAdd(double)": 4270.0,
        "org.apache.commons.math3.linear$RealVector#mapAddToSelf(double)": 4268.0,
        "org.apache.commons.math3.linear$RealVector#mapDivide(double)": 4262.0,
        "org.apache.commons.math3.linear$RealVector#mapDivideToSelf(double)": 4262.0,
        "org.apache.commons.math3.linear$RealVector#mapMultiply(double)": 4102.0,
        "org.apache.commons.math3.linear$RealVector#mapMultiplyToSelf(double)": 4250.0,
        "org.apache.commons.math3.linear$RealVector#mapSubtract(double)": 4266.0,
        "org.apache.commons.math3.linear$RealVector#mapSubtractToSelf(double)": 4266.0,
        "org.apache.commons.math3.linear$RealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 4226.0,
        "org.apache.commons.math3.linear$RealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 4266.0,
        "org.apache.commons.math3.linear$RealVector#projection(org.apache.commons.math3.linear.RealVector)": 4248.0,
        "org.apache.commons.math3.linear$RealVector#set(double)": 4272.0,
        "org.apache.commons.math3.linear$RealVector#sparseIterator()": 4272.0,
        "org.apache.commons.math3.linear$RealVector#subtract(org.apache.commons.math3.linear.RealVector)": 4268.0,
        "org.apache.commons.math3.linear$RealVector#toArray()": 4270.0,
        "org.apache.commons.math3.linear$RealVector#unitVector()": 4266.0,
        "org.apache.commons.math3.linear$RealVector#unitize()": 4266.0,
        "org.apache.commons.math3.linear$RealVector#unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)": 4220.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 4268.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 4260.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 4268.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 4260.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 4272.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 4268.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 4272.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 4268.0,
        "org.apache.commons.math3.linear$RealVector$1#hasNext()": 4134.0,
        "org.apache.commons.math3.linear$RealVector$1#next()": 4134.0,
        "org.apache.commons.math3.linear$RealVector$1#remove()": 4270.0,
        "org.apache.commons.math3.linear$RealVector$2#add(org.apache.commons.math3.linear.RealVector)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#addToEntry(int,double)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#append(double)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#append(org.apache.commons.math3.linear.RealVector)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#combine(double,double,org.apache.commons.math3.linear.RealVector)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#copy()": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#cosine(org.apache.commons.math3.linear.RealVector)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#dotProduct(org.apache.commons.math3.linear.RealVector)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeDivide(org.apache.commons.math3.linear.RealVector)": 4276.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 4276.0,
        "org.apache.commons.math3.linear$RealVector$2#getDimension()": 4264.0,
        "org.apache.commons.math3.linear$RealVector$2#getDistance(org.apache.commons.math3.linear.RealVector)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#getEntry(int)": 4260.0,
        "org.apache.commons.math3.linear$RealVector$2#getL1Distance(org.apache.commons.math3.linear.RealVector)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#getL1Norm()": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#getLInfNorm()": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#getNorm()": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#getSubVector(int,int)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#isInfinite()": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#isNaN()": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#iterator()": 4268.0,
        "org.apache.commons.math3.linear$RealVector$2#map(org.apache.commons.math3.analysis.UnivariateFunction)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#mapAdd(double)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#mapAddToSelf(double)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#mapDivide(double)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#mapDivideToSelf(double)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiply(double)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiplyToSelf(double)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtract(double)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtractToSelf(double)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#outerProduct(org.apache.commons.math3.linear.RealVector)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#set(double)": 4270.0,
        "org.apache.commons.math3.linear$RealVector$2#setEntry(int,double)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#sparseIterator()": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#subtract(org.apache.commons.math3.linear.RealVector)": 4268.0,
        "org.apache.commons.math3.linear$RealVector$2#toArray()": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#unitVector()": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2#unitize()": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2$1#hasNext()": 4268.0,
        "org.apache.commons.math3.linear$RealVector$2$1#next()": 4268.0,
        "org.apache.commons.math3.linear$RealVector$2$1#remove()": 4276.0,
        "org.apache.commons.math3.linear$RealVector$2$2#hasNext()": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2$2#next()": 4272.0,
        "org.apache.commons.math3.linear$RealVector$2$2#remove()": 4276.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2)": 4264.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#getValue()": 4264.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#setValue(double)": 4268.0,
        "org.apache.commons.math3.linear$RealVector$Entry#RealVector$Entry(org.apache.commons.math3.linear.RealVector)": 4128.0,
        "org.apache.commons.math3.linear$RealVector$Entry#getIndex()": 4128.0,
        "org.apache.commons.math3.linear$RealVector$Entry#getValue()": 4134.0,
        "org.apache.commons.math3.linear$RealVector$Entry#setIndex(int)": 4128.0,
        "org.apache.commons.math3.linear$RealVector$Entry#setValue(double)": 4222.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#RealVector$SparseEntryIterator(org.apache.commons.math3.linear.RealVector)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#advance(org.apache.commons.math3.linear.RealVector$Entry)": 4272.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#hasNext()": 4272.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#next()": 4272.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#remove()": 4276.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat()": 4260.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String)": 4276.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 13154478.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.text.NumberFormat)": 13154478.0,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector)": 4232.0,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition)": 4232.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getAvailableLocales()": 4276.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getFormat()": 4272.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance()": 13227128.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance(java.util.Locale)": 13154478.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getPrefix()": 4276.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSeparator()": 4276.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSuffix()": 4276.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String)": 4220.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String,java.text.ParsePosition)": 4204.0,
        "org.apache.commons.math3.linear$SingularMatrixException#SingularMatrixException()": 4238.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#TriDiagonalTransformer(org.apache.commons.math3.linear.RealMatrix)": 17673542.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getHouseholderVectorsRef()": 4276.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getMainDiagonalRef()": 17740878.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getQ()": 17707194.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getQT()": 17698778.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getSecondaryDiagonalRef()": 17740878.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getT()": 4266.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#transform()": 17681952.0,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int)": 12944924.0,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,int)": 3524.0,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,int[])": 10554972.0,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,long)": 2886.0,
        "org.apache.commons.math3.random$AbstractWell#setSeed(int)": 4264.0,
        "org.apache.commons.math3.random$AbstractWell#setSeed(int[])": 10554972.0,
        "org.apache.commons.math3.random$AbstractWell#setSeed(long)": 10731174.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#BitsStreamGenerator()": 9940284.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#clear()": 9940284.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBoolean()": 4220.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBytes(byte[])": 4236.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextDouble()": 3312.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextFloat()": 4220.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextGaussian()": 4072.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt()": 4204.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt(int)": 4202.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong()": 4220.0,
        "org.apache.commons.math3.random$RandomDataGenerator#RandomDataGenerator()": 10665744.0,
        "org.apache.commons.math3.random$RandomDataGenerator#RandomDataGenerator(org.apache.commons.math3.random.RandomGenerator)": 3058.0,
        "org.apache.commons.math3.random$RandomDataGenerator#getNatural(int)": 4228.0,
        "org.apache.commons.math3.random$RandomDataGenerator#getRan()": 2902.0,
        "org.apache.commons.math3.random$RandomDataGenerator#getSecRan()": 4240.0,
        "org.apache.commons.math3.random$RandomDataGenerator#initRan()": 2908.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextBeta(double,double)": 4254.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextBinomial(int,double)": 4254.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextCauchy(double,double)": 4254.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextChiSquare(double)": 4254.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextExponential(double)": 4250.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextF(double,double)": 4254.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextGamma(double,double)": 4254.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextGaussian(double,double)": 4236.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextHexString(int)": 4254.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextHypergeometric(int,int,int)": 4254.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextInt(int,int)": 4138.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextLong(long,long)": 4142.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPascal(int,double)": 4254.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPermutation(int,int)": 4228.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPoisson(double)": 4232.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSample(java.util.Collection,int)": 4252.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureHexString(int)": 4252.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureInt(int,int)": 4268.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureLong(long,long)": 4246.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextT(double)": 4254.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextUniform(double,double)": 4036.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextUniform(double,double,boolean)": 4036.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextWeibull(double,double)": 4254.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextZipf(int,double)": 4254.0,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeed()": 4254.0,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeed(long)": 2914.0,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeedSecure()": 4254.0,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeedSecure(long)": 4254.0,
        "org.apache.commons.math3.random$RandomDataGenerator#setSecureAlgorithm(java.lang.String,java.lang.String)": 4276.0,
        "org.apache.commons.math3.random$RandomDataGenerator#shuffle(int[],int)": 4228.0,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl()": 10665744.0,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl(org.apache.commons.math3.random.RandomGenerator)": 3060.0,
        "org.apache.commons.math3.random$RandomDataImpl#getDelegate()": 4270.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextBeta(double,double)": 4254.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextBinomial(int,double)": 4254.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextCauchy(double,double)": 4254.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextChiSquare(double)": 4254.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextExponential(double)": 4250.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextF(double,double)": 4254.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextGamma(double,double)": 4254.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextGaussian(double,double)": 4250.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextHexString(int)": 4254.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextHypergeometric(int,int,int)": 4254.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInt(int,int)": 4186.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.IntegerDistribution)": 4276.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.RealDistribution)": 4254.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextLong(long,long)": 4142.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextPascal(int,double)": 4254.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextPermutation(int,int)": 4252.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextPoisson(double)": 4232.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSample(java.util.Collection,int)": 4252.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureHexString(int)": 4252.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureInt(int,int)": 4268.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureLong(long,long)": 4246.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextT(double)": 4254.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double)": 4052.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double,boolean)": 4276.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextWeibull(double,double)": 4254.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextZipf(int,double)": 4254.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed()": 4254.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed(long)": 2926.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure()": 4254.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure(long)": 4254.0,
        "org.apache.commons.math3.random$RandomDataImpl#setSecureAlgorithm(java.lang.String,java.lang.String)": 4276.0,
        "org.apache.commons.math3.random$Well19937c#Well19937c()": 12944924.0,
        "org.apache.commons.math3.random$Well19937c#Well19937c(int)": 4124.0,
        "org.apache.commons.math3.random$Well19937c#Well19937c(int[])": 4274.0,
        "org.apache.commons.math3.random$Well19937c#Well19937c(long)": 2908.0,
        "org.apache.commons.math3.random$Well19937c#next(int)": 3966.0,
        "org.apache.commons.math3.util$CompositeFormat#CompositeFormat()": 4276.0,
        "org.apache.commons.math3.util$CompositeFormat#formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)": 4092.0,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat()": 12651528.0,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat(java.util.Locale)": 10155878.0,
        "org.apache.commons.math3.util$CompositeFormat#parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)": 4056.0,
        "org.apache.commons.math3.util$CompositeFormat#parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)": 4060.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNextCharacter(java.lang.String,java.text.ParsePosition)": 4056.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,double,java.text.ParsePosition)": 4228.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)": 4066.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 1128882.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 4276.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 4274.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 5782152.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 4272.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 3618.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 11228274.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 4232.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 4272.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 4230.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 4272.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 4212.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 4062.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 4106.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 4272.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 4192.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 3692.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 4250.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 4272.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 3698.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 3538.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 4216.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 4122.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 12368528.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 10829694.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 4246.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 4216.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 2690.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 4124.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 4272.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 4134.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 2578.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 4274.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 10251728.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 4164.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 3316.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 4276.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 2498.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 4272.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 3156.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 4274.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 3332.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 4272.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 12179312.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 4206.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 4246.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 4270.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 4270.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 4274.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 3458.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 3458.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 13299978.0,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 16703378.0,
        "org.apache.commons.math3.util$FastMath#random()": 4238.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4266.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 4140.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 4232.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 4274.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 4160.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 4272.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 4252.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 4272.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 3508.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 3496.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 4216.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 6064554.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 4222.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 4222.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 4252.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 4268.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 4268.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 3708.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 4274.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double)": 3638.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 3638.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 3638.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 3638.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 10935278.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 4276.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 10961754.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 4276.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 10348028.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 4276.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 9683378.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 4276.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 10935278.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 10935278.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 10961754.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 10961754.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 10348028.0,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 4276.0,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[])": 3514.0,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[][])": 4266.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 4178.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 4176.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 3986.0,
        "org.apache.commons.math3.util$MathArrays#checkPositive(double[])": 3532.0,
        "org.apache.commons.math3.util$MathArrays#checkRectangular(long[][])": 4266.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 17825228.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 17597942.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 4264.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": 4194.0,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 4270.0,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 4262.0,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 4274.0,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 4274.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 4274.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 4274.0,
        "org.apache.commons.math3.util$MathArrays#ebeAdd(double[],double[])": 4272.0,
        "org.apache.commons.math3.util$MathArrays#ebeDivide(double[],double[])": 4258.0,
        "org.apache.commons.math3.util$MathArrays#ebeMultiply(double[],double[])": 4272.0,
        "org.apache.commons.math3.util$MathArrays#ebeSubtract(double[],double[])": 4272.0,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 4274.0,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 4276.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 4266.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 4276.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 4274.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 4274.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 4176.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 4172.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 4270.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": 4270.0,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": 4272.0,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 4276.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 4258.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 4258.0,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 4260.0,
        "org.apache.commons.math3.util$MathArrays$2#<clinit>()": 3986.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 3976.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 3976.0,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 4276.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 4242.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 4274.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 10451244.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4122.0,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 4268.0,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 4268.0,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 4272.0,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 4272.0,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 4182.0,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 4206.0,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 4190.0,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 4266.0,
        "org.apache.commons.math3.util$Precision#<clinit>()": 8968742.0,
        "org.apache.commons.math3.util$Precision#Precision()": 4276.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 4086.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 4176.0,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 3910.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 14340878.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 11634054.0,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 4274.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 4276.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 4116.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 4006.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 4172.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 4274.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 4118.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 4276.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 4276.0,
        "org.apache.commons.math3.util$Precision#equalsWithRelativeTolerance(double,double,double)": 4274.0,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 4274.0,
        "org.apache.commons.math3.util$Precision#round(double,int)": 4274.0,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 4274.0,
        "org.apache.commons.math3.util$Precision#round(float,int)": 4274.0,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 4274.0,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 4274.0
    },
    "Math-13": {
        "org.apache.commons.math3.analysis$FunctionUtils#FunctionUtils()": 4107.0,
        "org.apache.commons.math3.analysis$FunctionUtils#add(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[])": 4107.0,
        "org.apache.commons.math3.analysis$FunctionUtils#add(org.apache.commons.math3.analysis.UnivariateFunction[])": 4097.0,
        "org.apache.commons.math3.analysis$FunctionUtils#add(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[])": 4103.0,
        "org.apache.commons.math3.analysis$FunctionUtils#collector(org.apache.commons.math3.analysis.BivariateFunction,double)": 4105.0,
        "org.apache.commons.math3.analysis$FunctionUtils#collector(org.apache.commons.math3.analysis.BivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction,double)": 4105.0,
        "org.apache.commons.math3.analysis$FunctionUtils#combine(org.apache.commons.math3.analysis.BivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction)": 4103.0,
        "org.apache.commons.math3.analysis$FunctionUtils#compose(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[])": 4107.0,
        "org.apache.commons.math3.analysis$FunctionUtils#compose(org.apache.commons.math3.analysis.UnivariateFunction[])": 4101.0,
        "org.apache.commons.math3.analysis$FunctionUtils#compose(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[])": 4099.0,
        "org.apache.commons.math3.analysis$FunctionUtils#fix1stArgument(org.apache.commons.math3.analysis.BivariateFunction,double)": 4105.0,
        "org.apache.commons.math3.analysis$FunctionUtils#fix2ndArgument(org.apache.commons.math3.analysis.BivariateFunction,double)": 4059.0,
        "org.apache.commons.math3.analysis$FunctionUtils#multiply(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[])": 4107.0,
        "org.apache.commons.math3.analysis$FunctionUtils#multiply(org.apache.commons.math3.analysis.UnivariateFunction[])": 4105.0,
        "org.apache.commons.math3.analysis$FunctionUtils#multiply(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[])": 4103.0,
        "org.apache.commons.math3.analysis$FunctionUtils#sample(org.apache.commons.math3.analysis.UnivariateFunction,double,double,int)": 4041.0,
        "org.apache.commons.math3.analysis$FunctionUtils#toDifferentiableMultivariateFunction(org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction)": 4079.0,
        "org.apache.commons.math3.analysis$FunctionUtils#toDifferentiableMultivariateVectorFunction(org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction)": 16160311.0,
        "org.apache.commons.math3.analysis$FunctionUtils#toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)": 4105.0,
        "org.apache.commons.math3.analysis$FunctionUtils#toMultivariateDifferentiableFunction(org.apache.commons.math3.analysis.DifferentiableMultivariateFunction)": 4105.0,
        "org.apache.commons.math3.analysis$FunctionUtils#toMultivariateDifferentiableVectorFunction(org.apache.commons.math3.analysis.DifferentiableMultivariateVectorFunction)": 16160311.0,
        "org.apache.commons.math3.analysis$FunctionUtils#toUnivariateDifferential(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction)": 4105.0,
        "org.apache.commons.math3.analysis$FunctionUtils$1#value(double)": 4101.0,
        "org.apache.commons.math3.analysis$FunctionUtils$10#value(double)": 4103.0,
        "org.apache.commons.math3.analysis$FunctionUtils$11#value(double[])": 4105.0,
        "org.apache.commons.math3.analysis$FunctionUtils$12#value(double)": 4105.0,
        "org.apache.commons.math3.analysis$FunctionUtils$13#value(double)": 4059.0,
        "org.apache.commons.math3.analysis$FunctionUtils$14#derivative()": 4105.0,
        "org.apache.commons.math3.analysis$FunctionUtils$14#value(double)": 4105.0,
        "org.apache.commons.math3.analysis$FunctionUtils$14$1#value(double)": 4105.0,
        "org.apache.commons.math3.analysis$FunctionUtils$15#value(double)": 4107.0,
        "org.apache.commons.math3.analysis$FunctionUtils$15#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 4105.0,
        "org.apache.commons.math3.analysis$FunctionUtils$16#gradient()": 4079.0,
        "org.apache.commons.math3.analysis$FunctionUtils$16#partialDerivative(int)": 4107.0,
        "org.apache.commons.math3.analysis$FunctionUtils$16#value(double[])": 4079.0,
        "org.apache.commons.math3.analysis$FunctionUtils$16$2#value(double[])": 4079.0,
        "org.apache.commons.math3.analysis$FunctionUtils$17#value(double[])": 4107.0,
        "org.apache.commons.math3.analysis$FunctionUtils$17#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[])": 4105.0,
        "org.apache.commons.math3.analysis$FunctionUtils$18#jacobian()": 3937.0,
        "org.apache.commons.math3.analysis$FunctionUtils$18#value(double[])": 3931.0,
        "org.apache.commons.math3.analysis$FunctionUtils$18$1#value(double[])": 3937.0,
        "org.apache.commons.math3.analysis$FunctionUtils$19#value(double[])": 4061.0,
        "org.apache.commons.math3.analysis$FunctionUtils$19#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[])": 3937.0,
        "org.apache.commons.math3.analysis$FunctionUtils$2#value(double)": 4107.0,
        "org.apache.commons.math3.analysis$FunctionUtils$2#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 4099.0,
        "org.apache.commons.math3.analysis$FunctionUtils$4#value(double)": 4097.0,
        "org.apache.commons.math3.analysis$FunctionUtils$5#value(double)": 4107.0,
        "org.apache.commons.math3.analysis$FunctionUtils$5#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 4103.0,
        "org.apache.commons.math3.analysis$FunctionUtils$7#value(double)": 4105.0,
        "org.apache.commons.math3.analysis$FunctionUtils$8#value(double)": 4107.0,
        "org.apache.commons.math3.analysis$FunctionUtils$8#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 4103.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#<clinit>()": 3653.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#DSCompiler(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler)": 3653.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#acos(double[],int,double[],int)": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#acosh(double[],int,double[],int)": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#add(double[],int,double[],int,double[],int)": 3883.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#asin(double[],int,double[],int)": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#asinh(double[],int,double[],int)": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#atan(double[],int,double[],int)": 4099.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#atan2(double[],int,double[],int,double[],int)": 4103.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#atanh(double[],int,double[],int)": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#checkCompatibility(org.apache.commons.math3.analysis.differentiation.DSCompiler)": 3811.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compileCompositionIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[][],int[][])": 3653.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compileDerivativesIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler)": 3653.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compileLowerIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler)": 3653.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compileMultiplicationIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[])": 3653.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compileSizes(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler)": 3653.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compose(double[],int,double[],double[],int)": 3913.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#convertIndex(int,int,int[][],int,int,int[][])": 3939.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#cos(double[],int,double[],int)": 4093.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#cosh(double[],int,double[],int)": 4101.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#divide(double[],int,double[],int,double[],int)": 4071.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#exp(double[],int,double[],int)": 4075.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#expm1(double[],int,double[],int)": 4103.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getCompiler(int,int)": 3653.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getFreeParameters()": 3689.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getOrder()": 3791.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getPartialDerivativeIndex(int,int,int[][],int[])": 3659.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getPartialDerivativeIndex(int[])": 3689.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getPartialDerivativeOrders(int)": 4095.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getSize()": 3653.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#linearCombination(double,double[],int,double,double[],int,double,double[],int,double,double[],int,double[],int)": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#linearCombination(double,double[],int,double,double[],int,double,double[],int,double[],int)": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#linearCombination(double,double[],int,double,double[],int,double[],int)": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#log(double[],int,double[],int)": 4091.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#log10(double[],int,double[],int)": 4103.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#log1p(double[],int,double[],int)": 4103.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#multiply(double[],int,double[],int,double[],int)": 3927.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#pow(double[],int,double,double[],int)": 4097.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#pow(double[],int,double[],int,double[],int)": 4103.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#pow(double[],int,int,double[],int)": 4043.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#remainder(double[],int,double[],int,double[],int)": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#rootN(double[],int,int,double[],int)": 4045.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#sin(double[],int,double[],int)": 4085.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#sinh(double[],int,double[],int)": 4103.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#subtract(double[],int,double[],int,double[],int)": 4007.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#tan(double[],int,double[],int)": 4101.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#tanh(double[],int,double[],int)": 4103.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#taylor(double[],int,double[])": 4103.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(int,int)": 3667.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(int,int,double)": 3671.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(int,int,double[])": 3907.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(int,int,int,double)": 3677.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)": 3667.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3817.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#abs()": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#acos()": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#acosh()": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#add(double)": 3975.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#add(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3887.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#asin()": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#asinh()": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#atan()": 4101.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#atan2(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 4103.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#atanh()": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#cbrt()": 4103.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#ceil()": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#compose(double[])": 4069.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#copySign(double)": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#cos()": 4093.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#cosh()": 4101.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#divide(double)": 4083.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#divide(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 4073.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#exp()": 4079.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#expm1()": 4103.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#floor()": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getAllDerivatives()": 4085.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getExponent()": 4099.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getField()": 3961.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getFreeParameters()": 3879.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getOrder()": 3845.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getPartialDerivative(int[])": 3691.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getValue()": 3809.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#hypot(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 4099.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#log()": 4095.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#log10()": 4103.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#log1p()": 4103.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#multiply(double)": 3937.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#multiply(int)": 4089.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3959.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#negate()": 4077.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#pow(double)": 4097.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#pow(int)": 4101.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#pow(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 4103.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#reciprocal()": 4081.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#remainder(double)": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#remainder(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#rint()": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#rootN(int)": 4049.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#round()": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#scalb(int)": 4099.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#signum()": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#sin()": 4085.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#sinh()": 4103.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#sqrt()": 4055.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#subtract(double)": 4009.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#subtract(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 4007.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#tan()": 4101.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#tanh()": 4103.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#taylor(double[])": 4103.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#toDegrees()": 4103.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#toRadians()": 4103.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#writeReplace()": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure$1#getOne()": 4073.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure$1#getRuntimeClass()": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure$1#getZero()": 3969.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure$DataTransferObject#DerivativeStructure$DataTransferObject(int,int,double[])": 4105.0,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure$DataTransferObject#readResolve()": 4105.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#PolynomialFunction(double[])": 16256947.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#add(org.apache.commons.math3.analysis.polynomials.PolynomialFunction)": 4083.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#degree()": 4071.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#derivative()": 4097.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#differentiate(double[])": 4065.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#equals(java.lang.Object)": 4105.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#evaluate(double[],double)": 16394341.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#getCoefficients()": 4047.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#hashCode()": 4107.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#multiply(org.apache.commons.math3.analysis.polynomials.PolynomialFunction)": 4079.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#negate()": 4107.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#polynomialDerivative()": 4065.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#subtract(org.apache.commons.math3.analysis.polynomials.PolynomialFunction)": 4103.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#toString()": 4089.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#toString(double)": 4089.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#value(double)": 16442971.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 4107.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction$Parametric#PolynomialFunction$Parametric()": 16711723.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction$Parametric#gradient(double,double[])": 4067.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction$Parametric#value(double,double[])": 4067.0,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException()": 4105.0,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4071.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 3767.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 3725.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 4101.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 4085.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4019.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 4107.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 4107.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 4105.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 2437.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 4089.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 4107.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 4107.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2739.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 4079.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 3981.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4107.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3931.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 3987.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 4105.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 4107.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int)": 4107.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int,java.lang.Class)": 4081.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException()": 4071.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4071.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getContext()": 4107.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getLocalizedMessage()": 4107.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getMessage()": 4107.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 4049.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 4049.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 4081.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(java.lang.Integer[],java.lang.Integer[])": 4107.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,java.lang.Integer[],java.lang.Integer[])": 4029.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimension(int)": 4105.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimensions()": 4107.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimension(int)": 4105.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimensions()": 4107.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 4085.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 4053.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 4093.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 4071.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 4071.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 4083.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 4011.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3945.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 4013.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3959.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 4039.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3843.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 4105.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 4105.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 3911.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3637.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 4101.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 4101.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 4025.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 3719.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 4105.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 4105.0,
        "org.apache.commons.math3.exception$TooManyEvaluationsException#TooManyEvaluationsException(java.lang.Number)": 4063.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 4103.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4085.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix()": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field)": 3963.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field,int,int)": 3901.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 4099.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int)": 3973.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int,int)": 3869.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkAdditionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 4087.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkColumnIndex(int)": 3855.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkMultiplicationCompatible(org.apache.commons.math3.linear.FieldMatrix)": 4071.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkRowIndex(int)": 3855.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int,int,int,int)": 4087.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int[],int[])": 4097.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubtractionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 4099.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int,int,int,int,org.apache.commons.math3.FieldElement[][])": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int[],int[],org.apache.commons.math3.FieldElement[][])": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#equals(java.lang.Object)": 4043.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[])": 4107.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[][])": 3925.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumn(int)": 4087.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnMatrix(int)": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnVector(int)": 4095.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getData()": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getField()": 3845.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRow(int)": 4093.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowMatrix(int)": 4099.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowVector(int)": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int[],int[])": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getTrace()": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#hashCode()": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#isSquare()": 4031.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 4087.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.linear.FieldVector)": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#power(int)": 4105.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 4105.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldMatrix)": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldVector)": 4107.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 4105.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 4105.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 4105.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 4105.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 4105.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 4105.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 4105.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#toString()": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#transpose()": 4095.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4105.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4105.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4061.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4105.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4107.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4107.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$1#visit(int,int,org.apache.commons.math3.FieldElement)": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#start(int,int,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#visit(int,int,org.apache.commons.math3.FieldElement)": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$3#visit(int,int,org.apache.commons.math3.FieldElement)": 4095.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#<clinit>()": 11322481.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix()": 12651697.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix(int,int)": 2829.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 4033.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#addToEntry(int,int,double)": 4107.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int,int,int,int,double[][])": 4049.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int[],int[],double[][])": 4103.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#equals(java.lang.Object)": 4001.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumn(int)": 3995.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnMatrix(int)": 4033.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnVector(int)": 4075.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getData()": 4103.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getFrobeniusNorm()": 4039.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getNorm()": 3945.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRow(int)": 3831.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowMatrix(int)": 4099.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowVector(int)": 4001.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int,int,int,int)": 4085.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int[],int[])": 4101.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getTrace()": 4101.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#hashCode()": 4093.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#isSquare()": 14791453.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3691.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiplyEntry(int,int,double)": 4107.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(double[])": 4103.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(org.apache.commons.math3.linear.RealVector)": 3673.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#power(int)": 4103.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(double[])": 4105.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealMatrix)": 4101.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealVector)": 4107.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarAdd(double)": 4037.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarMultiply(double)": 3815.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumn(int,double[])": 4087.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 4103.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 3889.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRow(int,double[])": 4105.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 4105.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 3865.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setSubMatrix(double[][],int,int)": 4097.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 3897.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#toString()": 4093.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#transpose()": 3599.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4105.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 4091.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4097.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3595.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4051.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4105.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4107.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4107.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#end()": 3945.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#start(int,int,int,int,int,int)": 3945.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#visit(int,int,double)": 3945.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#end()": 4039.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#start(int,int,int,int,int,int)": 4039.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#visit(int,int,double)": 4039.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$3#visit(int,int,double)": 4101.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#start(int,int,int,int,int,int)": 4049.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#visit(int,int,double)": 4049.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$5#visit(int,int,double)": 3599.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field)": 4103.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,int,int)": 4037.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[])": 4107.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][])": 4009.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],boolean)": 4045.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 4107.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][])": 4029.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][],boolean)": 4071.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#add(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 4103.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 4107.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copy()": 4103.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyIn(org.apache.commons.math3.FieldElement[][])": 4009.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyOut()": 4041.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#createMatrix(int,int)": 4071.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getColumnDimension()": 3949.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getData()": 4045.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getDataRef()": 4107.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getEntry(int,int)": 3975.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getRowDimension()": 3949.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 4105.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 4107.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 4103.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 4105.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 4031.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 4009.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 4105.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4105.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4105.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4063.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix()": 4099.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[])": 4099.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][])": 3129.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][],boolean)": 3571.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(int,int)": 3153.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#add(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 4103.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#addToEntry(int,int,double)": 4107.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copy()": 3985.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyIn(double[][])": 3125.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyOut()": 3401.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#createMatrix(int,int)": 3423.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getColumnDimension()": 2897.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getData()": 3417.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getDataRef()": 3961.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getEntry(int,int)": 3057.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getRowDimension()": 2899.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 4085.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiplyEntry(int,int,double)": 4089.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#operate(double[])": 3893.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#preMultiply(double[])": 4101.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setEntry(int,int,double)": 3171.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setSubMatrix(double[][],int,int)": 3125.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 4105.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4105.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3955.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4099.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3597.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4051.0,
        "org.apache.commons.math3.linear$ArrayRealVector#<clinit>()": 2827.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector()": 4101.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[])": 3213.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],boolean)": 3137.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],double[])": 4105.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],int,int)": 4105.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],org.apache.commons.math3.linear.ArrayRealVector)": 4105.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int)": 3755.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int,double)": 4101.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[])": 4105.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[],int,int)": 4105.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector)": 4105.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean)": 3849.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,double[])": 4105.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector)": 4101.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.RealVector)": 4103.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector)": 4105.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.ArrayRealVector)": 4105.0,
        "org.apache.commons.math3.linear$ArrayRealVector#add(org.apache.commons.math3.linear.RealVector)": 4089.0,
        "org.apache.commons.math3.linear$ArrayRealVector#addToEntry(int,double)": 4101.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(double)": 4103.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.ArrayRealVector)": 4107.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.RealVector)": 4103.0,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(int)": 3407.0,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 4073.0,
        "org.apache.commons.math3.linear$ArrayRealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 4073.0,
        "org.apache.commons.math3.linear$ArrayRealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 4025.0,
        "org.apache.commons.math3.linear$ArrayRealVector#copy()": 3851.0,
        "org.apache.commons.math3.linear$ArrayRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 3557.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": 4107.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 4055.0,
        "org.apache.commons.math3.linear$ArrayRealVector#equals(java.lang.Object)": 4009.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDataRef()": 3635.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDimension()": 3237.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 4097.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getEntry(int)": 3353.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 4099.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Norm()": 4103.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 4099.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfNorm()": 4103.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getNorm()": 3995.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getSubVector(int,int)": 4093.0,
        "org.apache.commons.math3.linear$ArrayRealVector#hashCode()": 4049.0,
        "org.apache.commons.math3.linear$ArrayRealVector#isInfinite()": 4103.0,
        "org.apache.commons.math3.linear$ArrayRealVector#isNaN()": 3951.0,
        "org.apache.commons.math3.linear$ArrayRealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 4101.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapAddToSelf(double)": 4101.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapDivideToSelf(double)": 4097.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapMultiplyToSelf(double)": 3951.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapSubtractToSelf(double)": 4101.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 4099.0,
        "org.apache.commons.math3.linear$ArrayRealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 4101.0,
        "org.apache.commons.math3.linear$ArrayRealVector#set(double)": 4017.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setEntry(int,double)": 3933.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,double[])": 4057.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 4055.0,
        "org.apache.commons.math3.linear$ArrayRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3903.0,
        "org.apache.commons.math3.linear$ArrayRealVector#toArray()": 3747.0,
        "org.apache.commons.math3.linear$ArrayRealVector#toString()": 4107.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 4099.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 4099.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 4105.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 4103.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 4105.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(int,int,org.apache.commons.math3.FieldElement[][],boolean)": 4037.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.Field,int,int)": 4053.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.FieldElement[][])": 4037.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.BlockFieldMatrix)": 4099.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 4107.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockHeight(int)": 4025.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockWidth(int)": 4015.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copy()": 4105.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copyBlockPart(org.apache.commons.math3.FieldElement[],int,int,int,int,int,org.apache.commons.math3.FieldElement[],int,int,int)": 4101.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createBlocksLayout(org.apache.commons.math3.Field,int,int)": 4053.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createMatrix(int,int)": 4105.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumn(int)": 4097.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnDimension()": 4025.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnMatrix(int)": 4101.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnVector(int)": 4101.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getData()": 4097.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getEntry(int,int)": 4051.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRow(int)": 4097.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowDimension()": 4023.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowMatrix(int)": 4099.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowVector(int)": 4101.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getSubMatrix(int,int,int,int)": 4101.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.BlockFieldMatrix)": 4093.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 4095.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 4107.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 4101.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 4099.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 4105.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 4099.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 4097.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 4099.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.BlockFieldMatrix)": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 4105.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#toBlocksLayout(org.apache.commons.math3.FieldElement[][])": 4037.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#transpose()": 4101.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4105.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4105.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4105.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(double[][])": 3737.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int)": 3915.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int,double[][],boolean)": 3693.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.BlockRealMatrix)": 4099.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 4103.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#addToEntry(int,int,double)": 4105.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockHeight(int)": 3679.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockWidth(int)": 3663.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#copy()": 4069.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#copyBlockPart(double[],int,int,int,int,int,double[],int,int,int)": 4099.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#createBlocksLayout(int,int)": 3875.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#createMatrix(int,int)": 4105.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumn(int)": 4065.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnDimension()": 3681.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnMatrix(int)": 4101.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnVector(int)": 4101.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getData()": 3871.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getEntry(int,int)": 3943.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getFrobeniusNorm()": 4105.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getNorm()": 4061.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRow(int)": 4085.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowDimension()": 3679.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowMatrix(int)": 4099.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowVector(int)": 4101.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getSubMatrix(int,int,int,int)": 4099.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.BlockRealMatrix)": 4033.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 4033.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiplyEntry(int,int,double)": 4107.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#operate(double[])": 3921.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#preMultiply(double[])": 4103.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarAdd(double)": 4099.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarMultiply(double)": 4077.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumn(int,double[])": 4043.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 4103.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 4103.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 4055.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setEntry(int,int,double)": 4009.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRow(int,double[])": 4051.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 4103.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 4103.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 4055.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setSubMatrix(double[][],int,int)": 4103.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.BlockRealMatrix)": 4069.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 4063.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#toBlocksLayout(double[][])": 3737.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#transpose()": 4005.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4089.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 4101.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4099.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4105.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 4105.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#DiagonalMatrix()": 4107.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#DiagonalMatrix(double[])": 15429003.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#DiagonalMatrix(double[],boolean)": 3779.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#DiagonalMatrix(int)": 3923.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#add(org.apache.commons.math3.linear.DiagonalMatrix)": 4107.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#addToEntry(int,int,double)": 4107.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#copy()": 15429003.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#createMatrix(int,int)": 4107.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#getColumnDimension()": 15429003.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#getData()": 16160311.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#getDataRef()": 3779.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#getEntry(int,int)": 15429003.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#getRowDimension()": 15429003.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#multiply(org.apache.commons.math3.linear.DiagonalMatrix)": 3779.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3929.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#multiplyEntry(int,int,double)": 4107.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#operate(double[])": 3779.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#preMultiply(double[])": 4107.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#setEntry(int,int,double)": 3923.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#setSubMatrix(double[][],int,int)": 4107.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#subtract(org.apache.commons.math3.linear.DiagonalMatrix)": 4107.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4107.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4107.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 4107.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4107.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4107.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4107.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 4107.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4107.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#MatrixDimensionMismatchException(int,int,int,int)": 4029.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedColumnDimension()": 4105.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedRowDimension()": 4105.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongColumnDimension()": 4105.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongRowDimension()": 4105.0,
        "org.apache.commons.math3.linear$MatrixUtils#<clinit>()": 11695711.0,
        "org.apache.commons.math3.linear$MatrixUtils#MatrixUtils()": 4107.0,
        "org.apache.commons.math3.linear$MatrixUtils#bigFractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 4077.0,
        "org.apache.commons.math3.linear$MatrixUtils#blockInverse(org.apache.commons.math3.linear.RealMatrix,int)": 4105.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkAdditionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 4005.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 11970951.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)": 12207421.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 3429.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 11977873.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int,int,int)": 4013.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int[],int[])": 4097.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubtractionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 3859.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSymmetric(org.apache.commons.math3.linear.RealMatrix,double)": 4103.0,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnFieldMatrix(org.apache.commons.math3.FieldElement[])": 4105.0,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnRealMatrix(double[])": 4039.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldDiagonalMatrix(org.apache.commons.math3.FieldElement[])": 4107.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldIdentityMatrix(org.apache.commons.math3.Field,int)": 4103.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.Field,int,int)": 4103.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.FieldElement[][])": 4105.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldVector(org.apache.commons.math3.FieldElement[])": 4107.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealDiagonalMatrix(double[])": 3799.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealIdentityMatrix(int)": 3987.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(double[][])": 3341.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(int,int)": 3627.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealVector(double[])": 4105.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 4105.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRowRealMatrix(double[])": 4105.0,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealMatrix(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 4103.0,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealVector(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 4103.0,
        "org.apache.commons.math3.linear$MatrixUtils#fractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 4105.0,
        "org.apache.commons.math3.linear$MatrixUtils#isSymmetric(org.apache.commons.math3.linear.RealMatrix,double)": 15610243.0,
        "org.apache.commons.math3.linear$MatrixUtils#isSymmetricInternal(org.apache.commons.math3.linear.RealMatrix,double,boolean)": 15594441.0,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealMatrix(org.apache.commons.math3.linear.RealMatrix,java.io.ObjectOutputStream)": 4103.0,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealVector(org.apache.commons.math3.linear.RealVector,java.io.ObjectOutputStream)": 4103.0,
        "org.apache.commons.math3.linear$MatrixUtils#solveLowerTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 4105.0,
        "org.apache.commons.math3.linear$MatrixUtils#solveUpperTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 4105.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#MatrixUtils$BigFractionMatrixConverter()": 4077.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#getConvertedMatrix()": 4077.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#start(int,int,int,int,int,int)": 4077.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.BigFraction)": 4077.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#MatrixUtils$FractionMatrixConverter()": 4105.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#getConvertedMatrix()": 4105.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#start(int,int,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.Fraction)": 4105.0,
        "org.apache.commons.math3.linear$NonSquareMatrixException#NonSquareMatrixException(int,int)": 4079.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#NonSymmetricMatrixException(int,int,double)": 4103.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getColumn()": 4107.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getRow()": 4107.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getThreshold()": 4107.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(int,int)": 4045.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(org.apache.commons.math3.linear.OpenMapRealMatrix)": 4089.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#add(org.apache.commons.math3.linear.OpenMapRealMatrix)": 4103.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#addToEntry(int,int,double)": 4107.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#computeKey(int,int)": 4047.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#copy()": 4103.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#createMatrix(int,int)": 4093.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getColumnDimension()": 4047.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getEntry(int,int)": 4051.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getRowDimension()": 4047.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.OpenMapRealMatrix)": 4099.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 4099.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiplyEntry(int,int,double)": 4107.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#setEntry(int,int,double)": 4047.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.OpenMapRealMatrix)": 4095.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 4095.0,
        "org.apache.commons.math3.linear$RealLinearOperator#RealLinearOperator()": 11081461.0,
        "org.apache.commons.math3.linear$RealLinearOperator#isTransposable()": 4107.0,
        "org.apache.commons.math3.linear$RealLinearOperator#operateTranspose(org.apache.commons.math3.linear.RealVector)": 4107.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat()": 4105.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 11695711.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 11261983.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.text.NumberFormat)": 11261983.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix)": 4071.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition)": 4071.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getAvailableLocales()": 4107.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getColumnSeparator()": 4107.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getFormat()": 11315751.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance()": 11695711.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance(java.util.Locale)": 11261983.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getPrefix()": 4107.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowPrefix()": 4107.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSeparator()": 4107.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSuffix()": 4107.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getSuffix()": 4107.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String)": 4083.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String,java.text.ParsePosition)": 4075.0,
        "org.apache.commons.math3.linear$RealVector#RealVector()": 2457.0,
        "org.apache.commons.math3.linear$RealVector#add(org.apache.commons.math3.linear.RealVector)": 4099.0,
        "org.apache.commons.math3.linear$RealVector#addToEntry(int,double)": 4095.0,
        "org.apache.commons.math3.linear$RealVector#checkIndex(int)": 3743.0,
        "org.apache.commons.math3.linear$RealVector#checkIndices(int,int)": 4059.0,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(int)": 3965.0,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 3987.0,
        "org.apache.commons.math3.linear$RealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 4089.0,
        "org.apache.commons.math3.linear$RealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 4073.0,
        "org.apache.commons.math3.linear$RealVector#cosine(org.apache.commons.math3.linear.RealVector)": 4073.0,
        "org.apache.commons.math3.linear$RealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 4051.0,
        "org.apache.commons.math3.linear$RealVector#equals(java.lang.Object)": 4107.0,
        "org.apache.commons.math3.linear$RealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 4099.0,
        "org.apache.commons.math3.linear$RealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 4099.0,
        "org.apache.commons.math3.linear$RealVector#getL1Norm()": 4103.0,
        "org.apache.commons.math3.linear$RealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 4099.0,
        "org.apache.commons.math3.linear$RealVector#getLInfNorm()": 4103.0,
        "org.apache.commons.math3.linear$RealVector#getMaxIndex()": 4097.0,
        "org.apache.commons.math3.linear$RealVector#getMaxValue()": 4097.0,
        "org.apache.commons.math3.linear$RealVector#getMinIndex()": 4097.0,
        "org.apache.commons.math3.linear$RealVector#getMinValue()": 4097.0,
        "org.apache.commons.math3.linear$RealVector#getNorm()": 4063.0,
        "org.apache.commons.math3.linear$RealVector#hashCode()": 4107.0,
        "org.apache.commons.math3.linear$RealVector#iterator()": 3965.0,
        "org.apache.commons.math3.linear$RealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 4103.0,
        "org.apache.commons.math3.linear$RealVector#mapAdd(double)": 4101.0,
        "org.apache.commons.math3.linear$RealVector#mapAddToSelf(double)": 4099.0,
        "org.apache.commons.math3.linear$RealVector#mapDivide(double)": 4093.0,
        "org.apache.commons.math3.linear$RealVector#mapDivideToSelf(double)": 4093.0,
        "org.apache.commons.math3.linear$RealVector#mapMultiply(double)": 3933.0,
        "org.apache.commons.math3.linear$RealVector#mapMultiplyToSelf(double)": 4081.0,
        "org.apache.commons.math3.linear$RealVector#mapSubtract(double)": 4097.0,
        "org.apache.commons.math3.linear$RealVector#mapSubtractToSelf(double)": 4097.0,
        "org.apache.commons.math3.linear$RealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 4057.0,
        "org.apache.commons.math3.linear$RealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 4097.0,
        "org.apache.commons.math3.linear$RealVector#projection(org.apache.commons.math3.linear.RealVector)": 4079.0,
        "org.apache.commons.math3.linear$RealVector#set(double)": 4103.0,
        "org.apache.commons.math3.linear$RealVector#sparseIterator()": 4103.0,
        "org.apache.commons.math3.linear$RealVector#subtract(org.apache.commons.math3.linear.RealVector)": 4099.0,
        "org.apache.commons.math3.linear$RealVector#toArray()": 4101.0,
        "org.apache.commons.math3.linear$RealVector#unitVector()": 4097.0,
        "org.apache.commons.math3.linear$RealVector#unitize()": 4097.0,
        "org.apache.commons.math3.linear$RealVector#unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)": 4051.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 4099.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 4091.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 4099.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 4091.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 4099.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 4099.0,
        "org.apache.commons.math3.linear$RealVector$1#hasNext()": 3965.0,
        "org.apache.commons.math3.linear$RealVector$1#next()": 3965.0,
        "org.apache.commons.math3.linear$RealVector$1#remove()": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#add(org.apache.commons.math3.linear.RealVector)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#addToEntry(int,double)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#append(double)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#append(org.apache.commons.math3.linear.RealVector)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#combine(double,double,org.apache.commons.math3.linear.RealVector)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#copy()": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#cosine(org.apache.commons.math3.linear.RealVector)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#dotProduct(org.apache.commons.math3.linear.RealVector)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeDivide(org.apache.commons.math3.linear.RealVector)": 4107.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 4107.0,
        "org.apache.commons.math3.linear$RealVector$2#getDimension()": 4095.0,
        "org.apache.commons.math3.linear$RealVector$2#getDistance(org.apache.commons.math3.linear.RealVector)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#getEntry(int)": 4091.0,
        "org.apache.commons.math3.linear$RealVector$2#getL1Distance(org.apache.commons.math3.linear.RealVector)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#getL1Norm()": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#getLInfNorm()": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#getNorm()": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#getSubVector(int,int)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#isInfinite()": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#isNaN()": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#iterator()": 4099.0,
        "org.apache.commons.math3.linear$RealVector$2#map(org.apache.commons.math3.analysis.UnivariateFunction)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#mapAdd(double)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#mapAddToSelf(double)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#mapDivide(double)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#mapDivideToSelf(double)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiply(double)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiplyToSelf(double)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtract(double)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtractToSelf(double)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#outerProduct(org.apache.commons.math3.linear.RealVector)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#set(double)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#setEntry(int,double)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#sparseIterator()": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#subtract(org.apache.commons.math3.linear.RealVector)": 4099.0,
        "org.apache.commons.math3.linear$RealVector$2#toArray()": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#unitVector()": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2#unitize()": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2$1#hasNext()": 4099.0,
        "org.apache.commons.math3.linear$RealVector$2$1#next()": 4099.0,
        "org.apache.commons.math3.linear$RealVector$2$1#remove()": 4107.0,
        "org.apache.commons.math3.linear$RealVector$2$2#hasNext()": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2$2#next()": 4103.0,
        "org.apache.commons.math3.linear$RealVector$2$2#remove()": 4107.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2)": 4095.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#getValue()": 4095.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#setValue(double)": 4099.0,
        "org.apache.commons.math3.linear$RealVector$Entry#RealVector$Entry(org.apache.commons.math3.linear.RealVector)": 3959.0,
        "org.apache.commons.math3.linear$RealVector$Entry#getIndex()": 3959.0,
        "org.apache.commons.math3.linear$RealVector$Entry#getValue()": 3965.0,
        "org.apache.commons.math3.linear$RealVector$Entry#setIndex(int)": 3959.0,
        "org.apache.commons.math3.linear$RealVector$Entry#setValue(double)": 4053.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#RealVector$SparseEntryIterator(org.apache.commons.math3.linear.RealVector)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#advance(org.apache.commons.math3.linear.RealVector$Entry)": 4103.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#hasNext()": 4103.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#next()": 4103.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#remove()": 4107.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat()": 4091.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String)": 4107.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 2807.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.text.NumberFormat)": 2807.0,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector)": 4063.0,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition)": 4063.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getAvailableLocales()": 4107.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getFormat()": 4103.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance()": 2827.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance(java.util.Locale)": 2807.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getPrefix()": 4107.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSeparator()": 4107.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSuffix()": 4107.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String)": 4051.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String,java.text.ParsePosition)": 4035.0,
        "org.apache.commons.math3.optimization$InitialGuess#InitialGuess(double[])": 15507673.0,
        "org.apache.commons.math3.optimization$InitialGuess#getInitialGuess()": 15515551.0,
        "org.apache.commons.math3.optimization$PointVectorValuePair#PointVectorValuePair(double[],double[])": 3929.0,
        "org.apache.commons.math3.optimization$PointVectorValuePair#PointVectorValuePair(double[],double[],boolean)": 3929.0,
        "org.apache.commons.math3.optimization$PointVectorValuePair#getPoint()": 3953.0,
        "org.apache.commons.math3.optimization$PointVectorValuePair#getPointRef()": 4011.0,
        "org.apache.commons.math3.optimization$PointVectorValuePair#getValue()": 4095.0,
        "org.apache.commons.math3.optimization$PointVectorValuePair#getValueRef()": 4063.0,
        "org.apache.commons.math3.optimization$PointVectorValuePair#writeReplace()": 4105.0,
        "org.apache.commons.math3.optimization$PointVectorValuePair$DataTransferObject#PointVectorValuePair$DataTransferObject(double[],double[])": 4105.0,
        "org.apache.commons.math3.optimization$PointVectorValuePair$DataTransferObject#readResolve()": 4105.0,
        "org.apache.commons.math3.optimization$Target#Target(double[])": 16160311.0,
        "org.apache.commons.math3.optimization$Target#getTarget()": 16160311.0,
        "org.apache.commons.math3.optimization$Weight#Weight(double[])": 16160311.0,
        "org.apache.commons.math3.optimization$Weight#Weight(org.apache.commons.math3.linear.RealMatrix)": 4107.0,
        "org.apache.commons.math3.optimization$Weight#getWeight()": 16160311.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#BaseAbstractMultivariateVectorOptimizer()": 4107.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#BaseAbstractMultivariateVectorOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker)": 16136197.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#checkParameters()": 16160311.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#computeObjectiveValue(double[])": 3931.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#getConvergenceChecker()": 3941.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#getEvaluations()": 4097.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#getMaxEvaluations()": 4107.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#getObjectiveFunction()": 3931.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#getStartPoint()": 3931.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#getTarget()": 3931.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#getTargetRef()": 4107.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#getWeight()": 16160311.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#getWeightRef()": 4107.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#optimize(int,org.apache.commons.math3.analysis.MultivariateVectorFunction,double[],double[],double[])": 4107.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#optimize(int,org.apache.commons.math3.analysis.MultivariateVectorFunction,org.apache.commons.math3.optimization.OptimizationData[])": 4107.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#optimizeInternal(int,org.apache.commons.math3.analysis.MultivariateVectorFunction,double[],double[],double[])": 4107.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#optimizeInternal(int,org.apache.commons.math3.analysis.MultivariateVectorFunction,org.apache.commons.math3.optimization.OptimizationData[])": 16160311.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#parseOptimizationData(org.apache.commons.math3.optimization.OptimizationData[])": 16160311.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#setUp()": 16160311.0,
        "org.apache.commons.math3.optimization.fitting$CurveFitter#CurveFitter(org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer)": 16662697.0,
        "org.apache.commons.math3.optimization.fitting$CurveFitter#CurveFitter(org.apache.commons.math3.optimization.MultivariateDifferentiableVectorOptimizer)": 4107.0,
        "org.apache.commons.math3.optimization.fitting$CurveFitter#addObservedPoint(double,double)": 4077.0,
        "org.apache.commons.math3.optimization.fitting$CurveFitter#addObservedPoint(double,double,double)": 16679031.0,
        "org.apache.commons.math3.optimization.fitting$CurveFitter#addObservedPoint(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint)": 4107.0,
        "org.apache.commons.math3.optimization.fitting$CurveFitter#clearObservations()": 4107.0,
        "org.apache.commons.math3.optimization.fitting$CurveFitter#fit(int,org.apache.commons.math3.analysis.ParametricUnivariateFunction,double[])": 16687201.0,
        "org.apache.commons.math3.optimization.fitting$CurveFitter#fit(org.apache.commons.math3.analysis.ParametricUnivariateFunction,double[])": 16711723.0,
        "org.apache.commons.math3.optimization.fitting$CurveFitter#getObservations()": 4079.0,
        "org.apache.commons.math3.optimization.fitting$CurveFitter$OldTheoreticalValuesFunction#CurveFitter$OldTheoreticalValuesFunction(org.apache.commons.math3.optimization.fitting.CurveFitter,org.apache.commons.math3.analysis.ParametricUnivariateFunction)": 16687201.0,
        "org.apache.commons.math3.optimization.fitting$CurveFitter$OldTheoreticalValuesFunction#jacobian()": 4061.0,
        "org.apache.commons.math3.optimization.fitting$CurveFitter$OldTheoreticalValuesFunction#value(double[])": 4061.0,
        "org.apache.commons.math3.optimization.fitting$CurveFitter$OldTheoreticalValuesFunction$1#value(double[])": 4061.0,
        "org.apache.commons.math3.optimization.fitting$PolynomialFitter#PolynomialFitter(int,org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer)": 4107.0,
        "org.apache.commons.math3.optimization.fitting$PolynomialFitter#PolynomialFitter(org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer)": 16834603.0,
        "org.apache.commons.math3.optimization.fitting$PolynomialFitter#fit()": 4107.0,
        "org.apache.commons.math3.optimization.fitting$PolynomialFitter#fit(double[])": 16834603.0,
        "org.apache.commons.math3.optimization.fitting$PolynomialFitter#fit(int,double[])": 4107.0,
        "org.apache.commons.math3.optimization.fitting$WeightedObservedPoint#WeightedObservedPoint(double,double,double)": 16670863.0,
        "org.apache.commons.math3.optimization.fitting$WeightedObservedPoint#getWeight()": 16687201.0,
        "org.apache.commons.math3.optimization.fitting$WeightedObservedPoint#getX()": 4059.0,
        "org.apache.commons.math3.optimization.fitting$WeightedObservedPoint#getY()": 16679031.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#AbstractLeastSquaresOptimizer()": 4107.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#AbstractLeastSquaresOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker)": 16136197.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#computeCost(double[])": 3947.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#computeCovariances(double[],double)": 4091.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#computeResiduals(double[])": 3933.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#computeSigma(double[],double)": 4101.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#computeWeightedJacobian(double[])": 3937.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#getChiSquare()": 4003.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#getCovariances()": 4107.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#getCovariances(double)": 4107.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#getJacobianEvaluations()": 4101.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#getRMS()": 4011.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#getWeightSquareRoot()": 3987.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#guessParametersErrors()": 4101.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#optimize(int,org.apache.commons.math3.analysis.DifferentiableMultivariateVectorFunction,double[],double[],double[])": 16687201.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#optimize(int,org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction,double[],double[],double[])": 3977.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#optimizeInternal(int,org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction,org.apache.commons.math3.optimization.OptimizationData[])": 16160311.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#setCost(double)": 3977.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#setUp()": 16160311.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#squareRoot(org.apache.commons.math3.linear.RealMatrix)": 16160311.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#updateJacobian()": 4107.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#updateResidualsAndCost()": 4107.0,
        "org.apache.commons.math3.optimization.general$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer()": 16532313.0,
        "org.apache.commons.math3.optimization.general$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(double,double,double)": 4071.0,
        "org.apache.commons.math3.optimization.general$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(double,double,double,double,double)": 16378147.0,
        "org.apache.commons.math3.optimization.general$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(double,org.apache.commons.math3.optimization.ConvergenceChecker,double,double,double,double)": 4103.0,
        "org.apache.commons.math3.optimization.general$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker)": 4103.0,
        "org.apache.commons.math3.optimization.general$LevenbergMarquardtOptimizer#determineLMDirection(double[],double[],double[],double[])": 4059.0,
        "org.apache.commons.math3.optimization.general$LevenbergMarquardtOptimizer#determineLMParameter(double[],double,double[],double[],double[],double[])": 3987.0,
        "org.apache.commons.math3.optimization.general$LevenbergMarquardtOptimizer#doOptimize()": 3987.0,
        "org.apache.commons.math3.optimization.general$LevenbergMarquardtOptimizer#qTy(double[])": 3987.0,
        "org.apache.commons.math3.optimization.general$LevenbergMarquardtOptimizer#qrDecomposition(org.apache.commons.math3.linear.RealMatrix)": 3987.0,
        "org.apache.commons.math3.util$CompositeFormat#CompositeFormat()": 4107.0,
        "org.apache.commons.math3.util$CompositeFormat#formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)": 3923.0,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat()": 11559291.0,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat(java.util.Locale)": 9191947.0,
        "org.apache.commons.math3.util$CompositeFormat#parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)": 3887.0,
        "org.apache.commons.math3.util$CompositeFormat#parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)": 3891.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNextCharacter(java.lang.String,java.text.ParsePosition)": 3887.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,double,java.text.ParsePosition)": 4059.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)": 3897.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 823081.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 4107.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 4105.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 5011251.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 4103.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 3449.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 2267.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 4063.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 4103.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 4061.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 4103.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 4043.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 3893.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 3937.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 4103.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 4023.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 3525.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 4081.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 4103.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 3537.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 3377.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 4047.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 3953.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 2599.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 2149.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 4077.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 4047.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 2525.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 3955.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 4103.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 3965.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 2427.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 4105.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1975.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 3995.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 3153.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 4107.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 10335331.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 4103.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 2991.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 4105.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 3169.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 4103.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 2537.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 4037.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 4077.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 4101.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 4101.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 4105.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 3299.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 3299.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 2853.0,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 3729.0,
        "org.apache.commons.math3.util$FastMath#random()": 4069.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4097.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3973.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 4063.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 4105.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 3991.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 4103.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 4083.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 4103.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 3347.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 3335.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 4047.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 497.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 4055.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 4055.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 4083.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 4099.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 4099.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 3541.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 4105.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double)": 3471.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 3471.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 3471.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 3471.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 2181.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 4107.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 2189.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 4107.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 2005.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 4107.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor()": 12291433.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int)": 11901841.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int,org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback)": 10522671.0,
        "org.apache.commons.math3.util$Incrementor#canIncrement()": 4103.0,
        "org.apache.commons.math3.util$Incrementor#getCount()": 3653.0,
        "org.apache.commons.math3.util$Incrementor#getMaximalCount()": 4019.0,
        "org.apache.commons.math3.util$Incrementor#incrementCount()": 2517.0,
        "org.apache.commons.math3.util$Incrementor#incrementCount(int)": 4105.0,
        "org.apache.commons.math3.util$Incrementor#resetCount()": 10796973.0,
        "org.apache.commons.math3.util$Incrementor#setMaximalCount(int)": 11041543.0,
        "org.apache.commons.math3.util$Incrementor$1#trigger(int)": 4071.0,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 4107.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 4073.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 4105.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 9430003.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3953.0,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 4099.0,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 4099.0,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 4103.0,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 4103.0,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 4013.0,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 4037.0,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 4021.0,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 4097.0,
        "org.apache.commons.math3.util$Pair#Pair(java.lang.Object,java.lang.Object)": 3119.0,
        "org.apache.commons.math3.util$Pair#Pair(org.apache.commons.math3.util.Pair)": 4107.0,
        "org.apache.commons.math3.util$Pair#equals(java.lang.Object)": 4105.0,
        "org.apache.commons.math3.util$Pair#getFirst()": 3923.0,
        "org.apache.commons.math3.util$Pair#getKey()": 3417.0,
        "org.apache.commons.math3.util$Pair#getSecond()": 3923.0,
        "org.apache.commons.math3.util$Pair#getValue()": 3607.0,
        "org.apache.commons.math3.util$Pair#hashCode()": 4105.0,
        "org.apache.commons.math3.util$Precision#<clinit>()": 7996303.0,
        "org.apache.commons.math3.util$Precision#Precision()": 4107.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 3917.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 4007.0,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 3747.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 3135.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 2387.0,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 4105.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 4107.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 3947.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 3841.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 4007.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 4105.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 3949.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 4107.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 4107.0,
        "org.apache.commons.math3.util$Precision#equalsWithRelativeTolerance(double,double,double)": 4105.0,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 4105.0,
        "org.apache.commons.math3.util$Precision#round(double,int)": 4105.0,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 4105.0,
        "org.apache.commons.math3.util$Precision#round(float,int)": 4105.0,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 4105.0,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 4105.0
    },
    "Math-14": {
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#PolynomialFunction(double[])": 16248885.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#add(org.apache.commons.math3.analysis.polynomials.PolynomialFunction)": 4081.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#degree()": 4069.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#derivative()": 4095.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#differentiate(double[])": 4063.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#equals(java.lang.Object)": 4103.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#evaluate(double[],double)": 16386245.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#getCoefficients()": 4045.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#hashCode()": 4105.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#multiply(org.apache.commons.math3.analysis.polynomials.PolynomialFunction)": 4077.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#negate()": 4105.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#polynomialDerivative()": 4063.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#subtract(org.apache.commons.math3.analysis.polynomials.PolynomialFunction)": 4101.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#toString()": 4087.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#toString(double)": 4087.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#value(double)": 16434863.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 4105.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction$Parametric#PolynomialFunction$Parametric()": 16703549.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction$Parametric#gradient(double,double[])": 4067.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction$Parametric#value(double,double[])": 4067.0,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException()": 4103.0,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4069.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 3765.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 3723.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 4099.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 4083.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4017.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 4105.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 4105.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 4103.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 2435.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 4087.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 4105.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 4105.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2737.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 4077.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 3977.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4105.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3927.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 3985.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 4103.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 4105.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int)": 4105.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int,java.lang.Class)": 4079.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException()": 4069.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4069.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getContext()": 4105.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getLocalizedMessage()": 4105.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getMessage()": 4105.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 4047.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 4047.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 4079.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(java.lang.Integer[],java.lang.Integer[])": 4105.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,java.lang.Integer[],java.lang.Integer[])": 4027.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimension(int)": 4103.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimensions()": 4105.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimension(int)": 4103.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimensions()": 4105.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 4083.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 4051.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 4091.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 4069.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 4069.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 4081.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 4009.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3943.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 4011.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3957.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 4037.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3841.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 4103.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 4103.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 3909.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3635.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 4099.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 4099.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 4023.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 3717.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 4103.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 4103.0,
        "org.apache.commons.math3.exception$TooManyEvaluationsException#TooManyEvaluationsException(java.lang.Number)": 4061.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 4101.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4083.0,
        "org.apache.commons.math3.fitting$CurveFitter#CurveFitter(org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer)": 16621899.0,
        "org.apache.commons.math3.fitting$CurveFitter#addObservedPoint(double,double)": 4075.0,
        "org.apache.commons.math3.fitting$CurveFitter#addObservedPoint(double,double,double)": 16638213.0,
        "org.apache.commons.math3.fitting$CurveFitter#addObservedPoint(org.apache.commons.math3.fitting.WeightedObservedPoint)": 4105.0,
        "org.apache.commons.math3.fitting$CurveFitter#clearObservations()": 4099.0,
        "org.apache.commons.math3.fitting$CurveFitter#fit(int,org.apache.commons.math3.analysis.ParametricUnivariateFunction,double[])": 16646373.0,
        "org.apache.commons.math3.fitting$CurveFitter#fit(org.apache.commons.math3.analysis.ParametricUnivariateFunction,double[])": 16670865.0,
        "org.apache.commons.math3.fitting$CurveFitter#getObservations()": 4077.0,
        "org.apache.commons.math3.fitting$CurveFitter$TheoreticalValuesFunction#CurveFitter$TheoreticalValuesFunction(org.apache.commons.math3.fitting.CurveFitter,org.apache.commons.math3.analysis.ParametricUnivariateFunction)": 16646373.0,
        "org.apache.commons.math3.fitting$CurveFitter$TheoreticalValuesFunction#getModelFunction()": 16646373.0,
        "org.apache.commons.math3.fitting$CurveFitter$TheoreticalValuesFunction#getModelFunctionJacobian()": 16646373.0,
        "org.apache.commons.math3.fitting$CurveFitter$TheoreticalValuesFunction$1#value(double[])": 4053.0,
        "org.apache.commons.math3.fitting$CurveFitter$TheoreticalValuesFunction$2#value(double[])": 4053.0,
        "org.apache.commons.math3.fitting$PolynomialFitter#PolynomialFitter(org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer)": 16793595.0,
        "org.apache.commons.math3.fitting$PolynomialFitter#fit(double[])": 16793595.0,
        "org.apache.commons.math3.fitting$PolynomialFitter#fit(int,double[])": 4105.0,
        "org.apache.commons.math3.fitting$WeightedObservedPoint#WeightedObservedPoint(double,double,double)": 16630055.0,
        "org.apache.commons.math3.fitting$WeightedObservedPoint#getWeight()": 16646373.0,
        "org.apache.commons.math3.fitting$WeightedObservedPoint#getX()": 4051.0,
        "org.apache.commons.math3.fitting$WeightedObservedPoint#getY()": 16638213.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix()": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field)": 3961.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field,int,int)": 3899.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 4097.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int)": 3971.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int,int)": 3867.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkAdditionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 4085.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkColumnIndex(int)": 3853.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkMultiplicationCompatible(org.apache.commons.math3.linear.FieldMatrix)": 4069.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkRowIndex(int)": 3853.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int,int,int,int)": 4085.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int[],int[])": 4095.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubtractionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 4097.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int,int,int,int,org.apache.commons.math3.FieldElement[][])": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int[],int[],org.apache.commons.math3.FieldElement[][])": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#equals(java.lang.Object)": 4041.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[])": 4105.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[][])": 3923.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumn(int)": 4085.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnMatrix(int)": 4099.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnVector(int)": 4093.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getData()": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getField()": 3843.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRow(int)": 4091.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowMatrix(int)": 4097.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowVector(int)": 4099.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int,int,int,int)": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int[],int[])": 4099.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getTrace()": 4099.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#hashCode()": 4099.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#isSquare()": 4029.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 4085.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.linear.FieldVector)": 4099.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#power(int)": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldMatrix)": 4099.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldVector)": 4105.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#toString()": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#transpose()": 4093.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4099.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4059.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$1#visit(int,int,org.apache.commons.math3.FieldElement)": 4099.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#start(int,int,int,int,int,int)": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#visit(int,int,org.apache.commons.math3.FieldElement)": 4101.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$3#visit(int,int,org.apache.commons.math3.FieldElement)": 4093.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#<clinit>()": 11315753.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix()": 3009.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix(int,int)": 12026385.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 4031.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#addToEntry(int,int,double)": 4105.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int,int,int,int,double[][])": 4047.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int[],int[],double[][])": 4101.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#equals(java.lang.Object)": 3999.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumn(int)": 3993.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnMatrix(int)": 4031.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnVector(int)": 4073.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getData()": 4101.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getFrobeniusNorm()": 4037.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getNorm()": 3943.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRow(int)": 3839.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowMatrix(int)": 4097.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowVector(int)": 3999.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int,int,int,int)": 4083.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int[],int[])": 4099.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getTrace()": 4099.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#hashCode()": 4091.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#isSquare()": 3447.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3567.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiplyEntry(int,int,double)": 4105.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(double[])": 4101.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(org.apache.commons.math3.linear.RealVector)": 3673.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#power(int)": 4101.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(double[])": 4103.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealMatrix)": 4099.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealVector)": 4105.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarAdd(double)": 4035.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarMultiply(double)": 3841.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumn(int,double[])": 4085.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 4101.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 3749.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRow(int,double[])": 4103.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 4103.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 3725.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setSubMatrix(double[][],int,int)": 4095.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 3895.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#toString()": 4091.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#transpose()": 3475.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 4089.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4095.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3471.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4049.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 4101.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4105.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#end()": 3943.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#start(int,int,int,int,int,int)": 3943.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#visit(int,int,double)": 3943.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#end()": 4037.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#start(int,int,int,int,int,int)": 4037.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#visit(int,int,double)": 4037.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$3#visit(int,int,double)": 4099.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#start(int,int,int,int,int,int)": 4047.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#visit(int,int,double)": 4047.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$5#visit(int,int,double)": 3475.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field)": 4101.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,int,int)": 4035.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[])": 4105.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][])": 4007.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],boolean)": 4043.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 4105.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][])": 4027.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][],boolean)": 4069.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#add(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 4101.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 4105.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copy()": 4101.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyIn(org.apache.commons.math3.FieldElement[][])": 4007.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyOut()": 4039.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#createMatrix(int,int)": 4069.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getColumnDimension()": 3947.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getData()": 4043.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getDataRef()": 4105.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getEntry(int,int)": 3973.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getRowDimension()": 3947.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 4103.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 4105.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 4101.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 4103.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 4029.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 4007.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 4103.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4101.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4061.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4101.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix()": 4097.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[])": 4097.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][])": 3125.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][],boolean)": 3527.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(int,int)": 3099.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#add(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 4101.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#addToEntry(int,int,double)": 4105.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copy()": 3763.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyIn(double[][])": 3121.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyOut()": 3347.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#createMatrix(int,int)": 3413.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getColumnDimension()": 2891.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getData()": 3363.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getDataRef()": 3959.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getEntry(int,int)": 3051.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getRowDimension()": 2893.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 4083.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiplyEntry(int,int,double)": 4087.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#operate(double[])": 3699.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#preMultiply(double[])": 4099.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setEntry(int,int,double)": 3117.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setSubMatrix(double[][],int,int)": 3121.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 4103.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3953.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4097.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3473.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4049.0,
        "org.apache.commons.math3.linear$ArrayRealVector#<clinit>()": 2827.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector()": 4099.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[])": 3197.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],boolean)": 3137.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],double[])": 4103.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],int,int)": 4103.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],org.apache.commons.math3.linear.ArrayRealVector)": 4103.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int)": 3753.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int,double)": 4099.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[])": 4103.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[],int,int)": 4103.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector)": 4103.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean)": 3847.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,double[])": 4103.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector)": 4099.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.RealVector)": 4101.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector)": 4103.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.ArrayRealVector)": 4103.0,
        "org.apache.commons.math3.linear$ArrayRealVector#add(org.apache.commons.math3.linear.RealVector)": 4087.0,
        "org.apache.commons.math3.linear$ArrayRealVector#addToEntry(int,double)": 4099.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(double)": 4101.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.ArrayRealVector)": 4105.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.RealVector)": 4101.0,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(int)": 3407.0,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 4071.0,
        "org.apache.commons.math3.linear$ArrayRealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 4071.0,
        "org.apache.commons.math3.linear$ArrayRealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 4023.0,
        "org.apache.commons.math3.linear$ArrayRealVector#copy()": 3849.0,
        "org.apache.commons.math3.linear$ArrayRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 3557.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": 4105.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 4053.0,
        "org.apache.commons.math3.linear$ArrayRealVector#equals(java.lang.Object)": 4007.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDataRef()": 3631.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDimension()": 3141.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 4095.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getEntry(int)": 3245.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 4097.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Norm()": 4101.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 4097.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfNorm()": 4101.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getNorm()": 3993.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getSubVector(int,int)": 4091.0,
        "org.apache.commons.math3.linear$ArrayRealVector#hashCode()": 4047.0,
        "org.apache.commons.math3.linear$ArrayRealVector#isInfinite()": 4101.0,
        "org.apache.commons.math3.linear$ArrayRealVector#isNaN()": 3949.0,
        "org.apache.commons.math3.linear$ArrayRealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 4099.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapAddToSelf(double)": 4099.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapDivideToSelf(double)": 4095.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapMultiplyToSelf(double)": 3949.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapSubtractToSelf(double)": 4099.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 4097.0,
        "org.apache.commons.math3.linear$ArrayRealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 4099.0,
        "org.apache.commons.math3.linear$ArrayRealVector#set(double)": 4015.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setEntry(int,double)": 3931.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,double[])": 4055.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 4053.0,
        "org.apache.commons.math3.linear$ArrayRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3901.0,
        "org.apache.commons.math3.linear$ArrayRealVector#toArray()": 3745.0,
        "org.apache.commons.math3.linear$ArrayRealVector#toString()": 4105.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 4101.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 4097.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 4101.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 4097.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 4101.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 4101.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(int,int,org.apache.commons.math3.FieldElement[][],boolean)": 4035.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.Field,int,int)": 4051.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.FieldElement[][])": 4035.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.BlockFieldMatrix)": 4097.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 4101.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 4105.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockHeight(int)": 4023.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockWidth(int)": 4013.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copy()": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copyBlockPart(org.apache.commons.math3.FieldElement[],int,int,int,int,int,org.apache.commons.math3.FieldElement[],int,int,int)": 4099.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createBlocksLayout(org.apache.commons.math3.Field,int,int)": 4051.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createMatrix(int,int)": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumn(int)": 4095.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnDimension()": 4023.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnMatrix(int)": 4099.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnVector(int)": 4099.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getData()": 4095.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getEntry(int,int)": 4049.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRow(int)": 4095.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowDimension()": 4021.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowMatrix(int)": 4097.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowVector(int)": 4099.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getSubMatrix(int,int,int,int)": 4099.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.BlockFieldMatrix)": 4091.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 4093.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 4105.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 4099.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 4101.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 4097.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 4097.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 4101.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 4101.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 4101.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 4095.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 4097.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 4101.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 4101.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 4101.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 4101.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.BlockFieldMatrix)": 4101.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#toBlocksLayout(org.apache.commons.math3.FieldElement[][])": 4035.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#transpose()": 4099.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4101.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4101.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(double[][])": 3701.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int)": 15888075.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int,double[][],boolean)": 3663.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.BlockRealMatrix)": 4097.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 4101.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#addToEntry(int,int,double)": 4103.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockHeight(int)": 3649.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockWidth(int)": 3633.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#copy()": 4019.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#copyBlockPart(double[],int,int,int,int,int,double[],int,int,int)": 4097.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#createBlocksLayout(int,int)": 15760763.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#createMatrix(int,int)": 4103.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumn(int)": 4063.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnDimension()": 3651.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnMatrix(int)": 4099.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnVector(int)": 4099.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getData()": 3839.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getEntry(int,int)": 3895.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getFrobeniusNorm()": 4103.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getNorm()": 4059.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRow(int)": 4071.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowDimension()": 3649.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowMatrix(int)": 4097.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowVector(int)": 4099.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getSubMatrix(int,int,int,int)": 4097.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.BlockRealMatrix)": 3983.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3983.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiplyEntry(int,int,double)": 4105.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#operate(double[])": 3875.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#preMultiply(double[])": 4101.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarAdd(double)": 4097.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarMultiply(double)": 4047.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumn(int,double[])": 3993.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 4101.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 4101.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 4005.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setEntry(int,int,double)": 3959.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRow(int,double[])": 4001.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 4101.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 4101.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 4005.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setSubMatrix(double[][],int,int)": 4101.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.BlockRealMatrix)": 4067.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 4061.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#toBlocksLayout(double[][])": 3701.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#transpose()": 3955.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4087.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 4099.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4097.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 4103.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#MatrixDimensionMismatchException(int,int,int,int)": 4027.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedColumnDimension()": 4103.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedRowDimension()": 4103.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongColumnDimension()": 4103.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongRowDimension()": 4103.0,
        "org.apache.commons.math3.linear$MatrixUtils#<clinit>()": 11688873.0,
        "org.apache.commons.math3.linear$MatrixUtils#MatrixUtils()": 4105.0,
        "org.apache.commons.math3.linear$MatrixUtils#bigFractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 4075.0,
        "org.apache.commons.math3.linear$MatrixUtils#blockInverse(org.apache.commons.math3.linear.RealMatrix,int)": 4103.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkAdditionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 4003.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 2811.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)": 2879.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 3427.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 2813.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int,int,int)": 4011.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int[],int[])": 4095.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubtractionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 3857.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSymmetric(org.apache.commons.math3.linear.RealMatrix,double)": 4101.0,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnFieldMatrix(org.apache.commons.math3.FieldElement[])": 4103.0,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnRealMatrix(double[])": 4037.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldDiagonalMatrix(org.apache.commons.math3.FieldElement[])": 4105.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldIdentityMatrix(org.apache.commons.math3.Field,int)": 4101.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.Field,int,int)": 4101.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.FieldElement[][])": 4103.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldVector(org.apache.commons.math3.FieldElement[])": 4105.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealDiagonalMatrix(double[])": 3615.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealIdentityMatrix(int)": 3985.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(double[][])": 3335.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(int,int)": 14310765.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealVector(double[])": 4103.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 4103.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRowRealMatrix(double[])": 4103.0,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealMatrix(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 4101.0,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealVector(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 4101.0,
        "org.apache.commons.math3.linear$MatrixUtils#fractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 4103.0,
        "org.apache.commons.math3.linear$MatrixUtils#isSymmetric(org.apache.commons.math3.linear.RealMatrix,double)": 3609.0,
        "org.apache.commons.math3.linear$MatrixUtils#isSymmetricInternal(org.apache.commons.math3.linear.RealMatrix,double,boolean)": 3605.0,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealMatrix(org.apache.commons.math3.linear.RealMatrix,java.io.ObjectOutputStream)": 4101.0,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealVector(org.apache.commons.math3.linear.RealVector,java.io.ObjectOutputStream)": 4101.0,
        "org.apache.commons.math3.linear$MatrixUtils#solveLowerTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 4103.0,
        "org.apache.commons.math3.linear$MatrixUtils#solveUpperTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 4103.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#MatrixUtils$BigFractionMatrixConverter()": 4075.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#getConvertedMatrix()": 4075.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#start(int,int,int,int,int,int)": 4075.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.BigFraction)": 4075.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#MatrixUtils$FractionMatrixConverter()": 4103.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#getConvertedMatrix()": 4103.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#start(int,int,int,int,int,int)": 4103.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.Fraction)": 4103.0,
        "org.apache.commons.math3.linear$NonSquareMatrixException#NonSquareMatrixException(int,int)": 4077.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#NonSymmetricMatrixException(int,int,double)": 4101.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getColumn()": 4105.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getRow()": 4105.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getThreshold()": 4105.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(int,int)": 4043.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(org.apache.commons.math3.linear.OpenMapRealMatrix)": 4087.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#add(org.apache.commons.math3.linear.OpenMapRealMatrix)": 4101.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#addToEntry(int,int,double)": 4105.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#computeKey(int,int)": 4045.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#copy()": 4101.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#createMatrix(int,int)": 4091.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getColumnDimension()": 4045.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getEntry(int,int)": 4049.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getRowDimension()": 4045.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.OpenMapRealMatrix)": 4097.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 4097.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiplyEntry(int,int,double)": 4105.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#setEntry(int,int,double)": 4045.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.OpenMapRealMatrix)": 4093.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 4093.0,
        "org.apache.commons.math3.linear$RealLinearOperator#RealLinearOperator()": 11074805.0,
        "org.apache.commons.math3.linear$RealLinearOperator#isTransposable()": 4105.0,
        "org.apache.commons.math3.linear$RealLinearOperator#operateTranspose(org.apache.commons.math3.linear.RealVector)": 4105.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat()": 4103.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 11688873.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 11255273.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.text.NumberFormat)": 11255273.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix)": 4069.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition)": 4069.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getAvailableLocales()": 4105.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getColumnSeparator()": 4105.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getFormat()": 11309025.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance()": 11688873.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance(java.util.Locale)": 11255273.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getPrefix()": 4105.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowPrefix()": 4105.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSeparator()": 4105.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSuffix()": 4105.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getSuffix()": 4105.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String)": 4081.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String,java.text.ParsePosition)": 4073.0,
        "org.apache.commons.math3.linear$RealVector#RealVector()": 2457.0,
        "org.apache.commons.math3.linear$RealVector#add(org.apache.commons.math3.linear.RealVector)": 4097.0,
        "org.apache.commons.math3.linear$RealVector#addToEntry(int,double)": 4093.0,
        "org.apache.commons.math3.linear$RealVector#checkIndex(int)": 3741.0,
        "org.apache.commons.math3.linear$RealVector#checkIndices(int,int)": 4057.0,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(int)": 3963.0,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 3985.0,
        "org.apache.commons.math3.linear$RealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 4087.0,
        "org.apache.commons.math3.linear$RealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 4071.0,
        "org.apache.commons.math3.linear$RealVector#cosine(org.apache.commons.math3.linear.RealVector)": 4071.0,
        "org.apache.commons.math3.linear$RealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 4049.0,
        "org.apache.commons.math3.linear$RealVector#equals(java.lang.Object)": 4105.0,
        "org.apache.commons.math3.linear$RealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 4097.0,
        "org.apache.commons.math3.linear$RealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 4097.0,
        "org.apache.commons.math3.linear$RealVector#getL1Norm()": 4101.0,
        "org.apache.commons.math3.linear$RealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 4097.0,
        "org.apache.commons.math3.linear$RealVector#getLInfNorm()": 4101.0,
        "org.apache.commons.math3.linear$RealVector#getMaxIndex()": 4095.0,
        "org.apache.commons.math3.linear$RealVector#getMaxValue()": 4095.0,
        "org.apache.commons.math3.linear$RealVector#getMinIndex()": 4095.0,
        "org.apache.commons.math3.linear$RealVector#getMinValue()": 4095.0,
        "org.apache.commons.math3.linear$RealVector#getNorm()": 4061.0,
        "org.apache.commons.math3.linear$RealVector#hashCode()": 4105.0,
        "org.apache.commons.math3.linear$RealVector#iterator()": 3963.0,
        "org.apache.commons.math3.linear$RealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 4101.0,
        "org.apache.commons.math3.linear$RealVector#mapAdd(double)": 4099.0,
        "org.apache.commons.math3.linear$RealVector#mapAddToSelf(double)": 4097.0,
        "org.apache.commons.math3.linear$RealVector#mapDivide(double)": 4091.0,
        "org.apache.commons.math3.linear$RealVector#mapDivideToSelf(double)": 4091.0,
        "org.apache.commons.math3.linear$RealVector#mapMultiply(double)": 3931.0,
        "org.apache.commons.math3.linear$RealVector#mapMultiplyToSelf(double)": 4079.0,
        "org.apache.commons.math3.linear$RealVector#mapSubtract(double)": 4095.0,
        "org.apache.commons.math3.linear$RealVector#mapSubtractToSelf(double)": 4095.0,
        "org.apache.commons.math3.linear$RealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 4055.0,
        "org.apache.commons.math3.linear$RealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 4095.0,
        "org.apache.commons.math3.linear$RealVector#projection(org.apache.commons.math3.linear.RealVector)": 4077.0,
        "org.apache.commons.math3.linear$RealVector#set(double)": 4101.0,
        "org.apache.commons.math3.linear$RealVector#sparseIterator()": 4101.0,
        "org.apache.commons.math3.linear$RealVector#subtract(org.apache.commons.math3.linear.RealVector)": 4097.0,
        "org.apache.commons.math3.linear$RealVector#toArray()": 4099.0,
        "org.apache.commons.math3.linear$RealVector#unitVector()": 4095.0,
        "org.apache.commons.math3.linear$RealVector#unitize()": 4095.0,
        "org.apache.commons.math3.linear$RealVector#unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)": 4049.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 4097.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 4089.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 4097.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 4089.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 4101.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 4097.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 4101.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 4097.0,
        "org.apache.commons.math3.linear$RealVector$1#hasNext()": 3963.0,
        "org.apache.commons.math3.linear$RealVector$1#next()": 3963.0,
        "org.apache.commons.math3.linear$RealVector$1#remove()": 4099.0,
        "org.apache.commons.math3.linear$RealVector$2#add(org.apache.commons.math3.linear.RealVector)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#addToEntry(int,double)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#append(double)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#append(org.apache.commons.math3.linear.RealVector)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#combine(double,double,org.apache.commons.math3.linear.RealVector)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#copy()": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#cosine(org.apache.commons.math3.linear.RealVector)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#dotProduct(org.apache.commons.math3.linear.RealVector)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeDivide(org.apache.commons.math3.linear.RealVector)": 4105.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 4105.0,
        "org.apache.commons.math3.linear$RealVector$2#getDimension()": 4093.0,
        "org.apache.commons.math3.linear$RealVector$2#getDistance(org.apache.commons.math3.linear.RealVector)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#getEntry(int)": 4089.0,
        "org.apache.commons.math3.linear$RealVector$2#getL1Distance(org.apache.commons.math3.linear.RealVector)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#getL1Norm()": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#getLInfNorm()": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#getNorm()": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#getSubVector(int,int)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#isInfinite()": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#isNaN()": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#iterator()": 4097.0,
        "org.apache.commons.math3.linear$RealVector$2#map(org.apache.commons.math3.analysis.UnivariateFunction)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#mapAdd(double)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#mapAddToSelf(double)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#mapDivide(double)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#mapDivideToSelf(double)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiply(double)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiplyToSelf(double)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtract(double)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtractToSelf(double)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#outerProduct(org.apache.commons.math3.linear.RealVector)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#set(double)": 4099.0,
        "org.apache.commons.math3.linear$RealVector$2#setEntry(int,double)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#sparseIterator()": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#subtract(org.apache.commons.math3.linear.RealVector)": 4097.0,
        "org.apache.commons.math3.linear$RealVector$2#toArray()": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#unitVector()": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2#unitize()": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2$1#hasNext()": 4097.0,
        "org.apache.commons.math3.linear$RealVector$2$1#next()": 4097.0,
        "org.apache.commons.math3.linear$RealVector$2$1#remove()": 4105.0,
        "org.apache.commons.math3.linear$RealVector$2$2#hasNext()": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2$2#next()": 4101.0,
        "org.apache.commons.math3.linear$RealVector$2$2#remove()": 4105.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2)": 4093.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#getValue()": 4093.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#setValue(double)": 4097.0,
        "org.apache.commons.math3.linear$RealVector$Entry#RealVector$Entry(org.apache.commons.math3.linear.RealVector)": 3957.0,
        "org.apache.commons.math3.linear$RealVector$Entry#getIndex()": 3957.0,
        "org.apache.commons.math3.linear$RealVector$Entry#getValue()": 3963.0,
        "org.apache.commons.math3.linear$RealVector$Entry#setIndex(int)": 3957.0,
        "org.apache.commons.math3.linear$RealVector$Entry#setValue(double)": 4051.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#RealVector$SparseEntryIterator(org.apache.commons.math3.linear.RealVector)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#advance(org.apache.commons.math3.linear.RealVector$Entry)": 4101.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#hasNext()": 4101.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#next()": 4101.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#remove()": 4105.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat()": 4089.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String)": 4105.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 2807.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.text.NumberFormat)": 2807.0,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector)": 4061.0,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition)": 4061.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getAvailableLocales()": 4105.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getFormat()": 4101.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance()": 2827.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance(java.util.Locale)": 2807.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getPrefix()": 4105.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSeparator()": 4105.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSuffix()": 4105.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String)": 4049.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String,java.text.ParsePosition)": 4033.0,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#BaseMultivariateOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 15209793.0,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#checkParameters()": 3703.0,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#getLowerBound()": 4027.0,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#getStartPoint()": 3765.0,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#getUpperBound()": 4027.0,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 3703.0,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 3703.0,
        "org.apache.commons.math3.optim$BaseOptimizer#BaseOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 15093003.0,
        "org.apache.commons.math3.optim$BaseOptimizer#getConvergenceChecker()": 3777.0,
        "org.apache.commons.math3.optim$BaseOptimizer#getEvaluations()": 4007.0,
        "org.apache.commons.math3.optim$BaseOptimizer#getIterations()": 4105.0,
        "org.apache.commons.math3.optim$BaseOptimizer#getMaxEvaluations()": 4057.0,
        "org.apache.commons.math3.optim$BaseOptimizer#getMaxIterations()": 4105.0,
        "org.apache.commons.math3.optim$BaseOptimizer#incrementEvaluationCount()": 3745.0,
        "org.apache.commons.math3.optim$BaseOptimizer#incrementIterationCount()": 4057.0,
        "org.apache.commons.math3.optim$BaseOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 3683.0,
        "org.apache.commons.math3.optim$BaseOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 3683.0,
        "org.apache.commons.math3.optim$BaseOptimizer$MaxEvalCallback#BaseOptimizer$MaxEvalCallback()": 15093003.0,
        "org.apache.commons.math3.optim$BaseOptimizer$MaxEvalCallback#trigger(int)": 4089.0,
        "org.apache.commons.math3.optim$BaseOptimizer$MaxIterCallback#BaseOptimizer$MaxIterCallback()": 15093003.0,
        "org.apache.commons.math3.optim$BaseOptimizer$MaxIterCallback#trigger(int)": 4105.0,
        "org.apache.commons.math3.optim$InitialGuess#InitialGuess(double[])": 3753.0,
        "org.apache.commons.math3.optim$InitialGuess#getInitialGuess()": 3755.0,
        "org.apache.commons.math3.optim$MaxEval#MaxEval(int)": 15334865.0,
        "org.apache.commons.math3.optim$MaxEval#getMaxEval()": 3737.0,
        "org.apache.commons.math3.optim$MaxEval#unlimited()": 4105.0,
        "org.apache.commons.math3.optim$MaxIter#MaxIter(int)": 4053.0,
        "org.apache.commons.math3.optim$MaxIter#getMaxIter()": 4053.0,
        "org.apache.commons.math3.optim$MaxIter#unlimited()": 4105.0,
        "org.apache.commons.math3.optim$PointVectorValuePair#PointVectorValuePair(double[],double[])": 3921.0,
        "org.apache.commons.math3.optim$PointVectorValuePair#PointVectorValuePair(double[],double[],boolean)": 3921.0,
        "org.apache.commons.math3.optim$PointVectorValuePair#getPoint()": 4051.0,
        "org.apache.commons.math3.optim$PointVectorValuePair#getPointRef()": 4003.0,
        "org.apache.commons.math3.optim$PointVectorValuePair#getValue()": 4093.0,
        "org.apache.commons.math3.optim$PointVectorValuePair#getValueRef()": 4055.0,
        "org.apache.commons.math3.optim$PointVectorValuePair#writeReplace()": 4103.0,
        "org.apache.commons.math3.optim$PointVectorValuePair$DataTransferObject#PointVectorValuePair$DataTransferObject(double[],double[])": 4103.0,
        "org.apache.commons.math3.optim$PointVectorValuePair$DataTransferObject#readResolve()": 4103.0,
        "org.apache.commons.math3.optim$SimpleBounds#SimpleBounds(double[],double[])": 4023.0,
        "org.apache.commons.math3.optim$SimpleBounds#getLower()": 4025.0,
        "org.apache.commons.math3.optim$SimpleBounds#getUpper()": 4025.0,
        "org.apache.commons.math3.optim$SimpleBounds#unbounded(int)": 4045.0,
        "org.apache.commons.math3.optim.nonlinear.vector$JacobianMultivariateVectorOptimizer#JacobianMultivariateVectorOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 16088025.0,
        "org.apache.commons.math3.optim.nonlinear.vector$JacobianMultivariateVectorOptimizer#computeJacobian(double[])": 3929.0,
        "org.apache.commons.math3.optim.nonlinear.vector$JacobianMultivariateVectorOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 3923.0,
        "org.apache.commons.math3.optim.nonlinear.vector$JacobianMultivariateVectorOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 3923.0,
        "org.apache.commons.math3.optim.nonlinear.vector$ModelFunction#ModelFunction(org.apache.commons.math3.analysis.MultivariateVectorFunction)": 16120133.0,
        "org.apache.commons.math3.optim.nonlinear.vector$ModelFunction#getModelFunction()": 3923.0,
        "org.apache.commons.math3.optim.nonlinear.vector$ModelFunctionJacobian#ModelFunctionJacobian(org.apache.commons.math3.analysis.MultivariateMatrixFunction)": 16128165.0,
        "org.apache.commons.math3.optim.nonlinear.vector$ModelFunctionJacobian#getModelFunctionJacobian()": 3925.0,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#MultivariateVectorOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 16088025.0,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#checkParameters()": 3923.0,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#computeObjectiveValue(double[])": 3923.0,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#getTarget()": 3921.0,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#getTargetSize()": 4009.0,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#getWeight()": 3923.0,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 3923.0,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 3923.0,
        "org.apache.commons.math3.optim.nonlinear.vector$Target#Target(double[])": 16120133.0,
        "org.apache.commons.math3.optim.nonlinear.vector$Target#getTarget()": 3923.0,
        "org.apache.commons.math3.optim.nonlinear.vector$Weight#Weight(double[])": 16120133.0,
        "org.apache.commons.math3.optim.nonlinear.vector$Weight#Weight(org.apache.commons.math3.linear.RealMatrix)": 4105.0,
        "org.apache.commons.math3.optim.nonlinear.vector$Weight#getWeight()": 3923.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#AbstractLeastSquaresOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 16088025.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#computeCost(double[])": 3939.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#computeCovariances(double[],double)": 4089.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#computeResiduals(double[])": 3925.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#computeSigma(double[],double)": 4097.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#computeWeightedJacobian(double[])": 3929.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#getChiSquare()": 4003.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#getRMS()": 4009.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#getWeightSquareRoot()": 3985.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 3923.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 3923.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#setCost(double)": 3939.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#squareRoot(org.apache.commons.math3.linear.RealMatrix)": 3923.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$GaussNewtonOptimizer#GaussNewtonOptimizer(boolean,org.apache.commons.math3.optim.ConvergenceChecker)": 4047.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$GaussNewtonOptimizer#GaussNewtonOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 4061.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$GaussNewtonOptimizer#doOptimize()": 4049.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer()": 16516053.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(double,double,double)": 4069.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(double,double,double,double,double)": 16361963.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(double,org.apache.commons.math3.optim.ConvergenceChecker,double,double,double,double)": 4101.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 4101.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#determineLMDirection(double[],double[],double[],double[])": 4055.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#determineLMParameter(double[],double,double[],double[],double[],double[])": 3985.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#doOptimize()": 3985.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#qTy(double[])": 3985.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#qrDecomposition(org.apache.commons.math3.linear.RealMatrix)": 3985.0,
        "org.apache.commons.math3.util$CompositeFormat#CompositeFormat()": 4105.0,
        "org.apache.commons.math3.util$CompositeFormat#formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)": 3921.0,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat()": 11552493.0,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat(java.util.Locale)": 9185885.0,
        "org.apache.commons.math3.util$CompositeFormat#parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)": 3885.0,
        "org.apache.commons.math3.util$CompositeFormat#parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)": 3889.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNextCharacter(java.lang.String,java.text.ParsePosition)": 3885.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,double,java.text.ParsePosition)": 4057.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)": 3895.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 821265.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 4105.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 4103.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 363.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 4101.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 3447.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 2265.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 4061.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 4101.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 4059.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 4101.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 4041.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 3891.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 3935.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 4101.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 4021.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 3523.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 4079.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 4101.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 3535.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 3375.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 4045.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 3951.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 2597.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 2147.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 4075.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 4045.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 2523.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 3953.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 4101.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 3963.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 2425.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 4103.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1973.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 3993.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 3151.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 4105.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 2305.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 4101.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 2989.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 4103.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 3169.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 4101.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 11034899.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 4035.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 4075.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 4099.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 4099.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 4103.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 3297.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 3297.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 2851.0,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 3727.0,
        "org.apache.commons.math3.util$FastMath#random()": 4067.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4095.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3971.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 4061.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 4103.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 3989.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 4101.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 4081.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 4101.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 3345.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 3333.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 4045.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 497.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 4053.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 4053.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 4081.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 4097.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 4097.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 3539.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 4103.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double)": 3469.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 3469.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 3469.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 3469.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 2179.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 4105.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 2187.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 4105.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 2003.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 4105.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor()": 2901.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int)": 2789.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int,org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback)": 10516185.0,
        "org.apache.commons.math3.util$Incrementor#canIncrement()": 4101.0,
        "org.apache.commons.math3.util$Incrementor#getCount()": 3651.0,
        "org.apache.commons.math3.util$Incrementor#getMaximalCount()": 4017.0,
        "org.apache.commons.math3.util$Incrementor#incrementCount()": 2517.0,
        "org.apache.commons.math3.util$Incrementor#incrementCount(int)": 4103.0,
        "org.apache.commons.math3.util$Incrementor#resetCount()": 2463.0,
        "org.apache.commons.math3.util$Incrementor#setMaximalCount(int)": 2537.0,
        "org.apache.commons.math3.util$Incrementor$1#trigger(int)": 4069.0,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 4105.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 4071.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 4103.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 9417723.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3951.0,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 4097.0,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 4097.0,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 4101.0,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 4101.0,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 4011.0,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 4035.0,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 4019.0,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 4095.0,
        "org.apache.commons.math3.util$Pair#Pair(java.lang.Object,java.lang.Object)": 3119.0,
        "org.apache.commons.math3.util$Pair#Pair(org.apache.commons.math3.util.Pair)": 4105.0,
        "org.apache.commons.math3.util$Pair#equals(java.lang.Object)": 4103.0,
        "org.apache.commons.math3.util$Pair#getFirst()": 3921.0,
        "org.apache.commons.math3.util$Pair#getKey()": 3417.0,
        "org.apache.commons.math3.util$Pair#getSecond()": 3921.0,
        "org.apache.commons.math3.util$Pair#getValue()": 3605.0,
        "org.apache.commons.math3.util$Pair#hashCode()": 4103.0,
        "org.apache.commons.math3.util$Precision#<clinit>()": 7833093.0,
        "org.apache.commons.math3.util$Precision#Precision()": 4105.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 3915.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 4005.0,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 3745.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 3133.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 2385.0,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 4103.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 4105.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 3945.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 3839.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 4005.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 4103.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 3947.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 4105.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 4105.0,
        "org.apache.commons.math3.util$Precision#equalsWithRelativeTolerance(double,double,double)": 4103.0,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 4103.0,
        "org.apache.commons.math3.util$Precision#round(double,int)": 4103.0,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 4103.0,
        "org.apache.commons.math3.util$Precision#round(float,int)": 4103.0,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 4103.0,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 4103.0
    },
    "Math-15": {
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.Dfp)": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField)": 3543.0,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,byte)": 3543.0,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,byte,byte)": 3487.0,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,double)": 3491.0,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,int)": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,java.lang.String)": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,long)": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#abs()": 3543.0,
        "org.apache.commons.math3.dfp$Dfp#add(org.apache.commons.math3.dfp.Dfp)": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#align(int)": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#ceil()": 3545.0,
        "org.apache.commons.math3.dfp$Dfp#classify()": 3509.0,
        "org.apache.commons.math3.dfp$Dfp#compare(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#complement(int)": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#copysign(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 3539.0,
        "org.apache.commons.math3.dfp$Dfp#dfp2sci()": 3545.0,
        "org.apache.commons.math3.dfp$Dfp#dfp2string()": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#divide(int)": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#divide(org.apache.commons.math3.dfp.Dfp)": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#equals(java.lang.Object)": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#floor()": 3531.0,
        "org.apache.commons.math3.dfp$Dfp#getField()": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#getOne()": 3475.0,
        "org.apache.commons.math3.dfp$Dfp#getRadixDigits()": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#getTwo()": 3499.0,
        "org.apache.commons.math3.dfp$Dfp#getZero()": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#greaterThan(org.apache.commons.math3.dfp.Dfp)": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#hashCode()": 3547.0,
        "org.apache.commons.math3.dfp$Dfp#intValue()": 3521.0,
        "org.apache.commons.math3.dfp$Dfp#isInfinite()": 3495.0,
        "org.apache.commons.math3.dfp$Dfp#isNaN()": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#isZero()": 3541.0,
        "org.apache.commons.math3.dfp$Dfp#lessThan(org.apache.commons.math3.dfp.Dfp)": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#log10()": 3499.0,
        "org.apache.commons.math3.dfp$Dfp#log10K()": 3531.0,
        "org.apache.commons.math3.dfp$Dfp#multiply(int)": 3493.0,
        "org.apache.commons.math3.dfp$Dfp#multiply(org.apache.commons.math3.dfp.Dfp)": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#multiplyFast(int)": 3493.0,
        "org.apache.commons.math3.dfp$Dfp#negate()": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#negativeOrNull()": 3541.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance()": 3547.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(byte)": 3547.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(byte,byte)": 3541.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(double)": 3547.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(int)": 3519.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(java.lang.String)": 3491.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(long)": 3503.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(org.apache.commons.math3.dfp.Dfp)": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#nextAfter(org.apache.commons.math3.dfp.Dfp)": 3545.0,
        "org.apache.commons.math3.dfp$Dfp#positiveOrNull()": 3541.0,
        "org.apache.commons.math3.dfp$Dfp#power10(int)": 3543.0,
        "org.apache.commons.math3.dfp$Dfp#power10K(int)": 3511.0,
        "org.apache.commons.math3.dfp$Dfp#reciprocal()": 3545.0,
        "org.apache.commons.math3.dfp$Dfp#remainder(org.apache.commons.math3.dfp.Dfp)": 3529.0,
        "org.apache.commons.math3.dfp$Dfp#rint()": 3491.0,
        "org.apache.commons.math3.dfp$Dfp#round(int)": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#shiftLeft()": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#shiftRight()": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#sqrt()": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#strictlyNegative()": 3545.0,
        "org.apache.commons.math3.dfp$Dfp#strictlyPositive()": 3545.0,
        "org.apache.commons.math3.dfp$Dfp#subtract(org.apache.commons.math3.dfp.Dfp)": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#toDouble()": 3501.0,
        "org.apache.commons.math3.dfp$Dfp#toSplitDouble()": 3547.0,
        "org.apache.commons.math3.dfp$Dfp#toString()": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#trap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp#trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode)": 3487.0,
        "org.apache.commons.math3.dfp$Dfp#unequal(org.apache.commons.math3.dfp.Dfp)": 12006141.0,
        "org.apache.commons.math3.dfp$Dfp$1#<clinit>()": 12006141.0,
        "org.apache.commons.math3.dfp$DfpField#DfpField(int)": 12006141.0,
        "org.apache.commons.math3.dfp$DfpField#DfpField(int,boolean)": 12006141.0,
        "org.apache.commons.math3.dfp$DfpField#clearIEEEFlags()": 3485.0,
        "org.apache.commons.math3.dfp$DfpField#computeExp(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 12006141.0,
        "org.apache.commons.math3.dfp$DfpField#computeLn(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 12006141.0,
        "org.apache.commons.math3.dfp$DfpField#computePi(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 12006141.0,
        "org.apache.commons.math3.dfp$DfpField#computeStringConstants(int)": 12006141.0,
        "org.apache.commons.math3.dfp$DfpField#getE()": 3547.0,
        "org.apache.commons.math3.dfp$DfpField#getESplit()": 3529.0,
        "org.apache.commons.math3.dfp$DfpField#getIEEEFlags()": 3505.0,
        "org.apache.commons.math3.dfp$DfpField#getLn10()": 3547.0,
        "org.apache.commons.math3.dfp$DfpField#getLn2()": 3541.0,
        "org.apache.commons.math3.dfp$DfpField#getLn2Split()": 3533.0,
        "org.apache.commons.math3.dfp$DfpField#getLn5()": 3547.0,
        "org.apache.commons.math3.dfp$DfpField#getLn5Split()": 3533.0,
        "org.apache.commons.math3.dfp$DfpField#getOne()": 3471.0,
        "org.apache.commons.math3.dfp$DfpField#getPi()": 3523.0,
        "org.apache.commons.math3.dfp$DfpField#getPiSplit()": 3527.0,
        "org.apache.commons.math3.dfp$DfpField#getRadixDigits()": 12006141.0,
        "org.apache.commons.math3.dfp$DfpField#getRoundingMode()": 12006141.0,
        "org.apache.commons.math3.dfp$DfpField#getRuntimeClass()": 3547.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr2()": 3547.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr2Reciprocal()": 3547.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr2Split()": 3537.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr3()": 3547.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr3Reciprocal()": 3547.0,
        "org.apache.commons.math3.dfp$DfpField#getTwo()": 3491.0,
        "org.apache.commons.math3.dfp$DfpField#getZero()": 12006141.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp()": 3543.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(byte)": 3547.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(byte,byte)": 3487.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(double)": 3491.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(int)": 3545.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(java.lang.String)": 3489.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(long)": 3547.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(org.apache.commons.math3.dfp.Dfp)": 3547.0,
        "org.apache.commons.math3.dfp$DfpField#setIEEEFlags(int)": 3547.0,
        "org.apache.commons.math3.dfp$DfpField#setIEEEFlagsBits(int)": 12006141.0,
        "org.apache.commons.math3.dfp$DfpField#setRoundingMode(org.apache.commons.math3.dfp.DfpField$RoundingMode)": 3541.0,
        "org.apache.commons.math3.dfp$DfpField#split(java.lang.String)": 12006141.0,
        "org.apache.commons.math3.dfp$DfpField$RoundingMode#<clinit>()": 12006141.0,
        "org.apache.commons.math3.dfp$DfpField$RoundingMode#DfpField$RoundingMode(java.lang.String,int)": 12006141.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 1961.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 3529.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 3547.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 3547.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2249.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 3521.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 3461.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3385.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 3373.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3101.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 3541.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 3541.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#BitsStreamGenerator()": 6194061.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#clear()": 6194061.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBoolean()": 3491.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBytes(byte[])": 3507.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextDouble()": 2653.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextFloat()": 3491.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextGaussian()": 3395.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt()": 3475.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt(int)": 3473.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong()": 3491.0,
        "org.apache.commons.math3.random$MersenneTwister#<clinit>()": 11675757.0,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister()": 3499.0,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(int)": 3425.0,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(int[])": 3545.0,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(long)": 12263957.0,
        "org.apache.commons.math3.random$MersenneTwister#next(int)": 3379.0,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(int)": 11675757.0,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(int[])": 11992283.0,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(long)": 11999211.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 320781.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 3547.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 3545.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 263.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3543.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 2889.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 1897.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 3503.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 3543.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 3501.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 3543.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 3501.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 3359.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 3385.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 3543.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 3463.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 2993.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 3521.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 3543.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 3037.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 2891.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 3487.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 3401.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 2117.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 6811161.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 3517.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 3487.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 1925.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 3395.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 3543.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 3405.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 1947.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 3545.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 6364503.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 3435.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 2601.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 3547.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 2293.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 3543.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 9180381.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 3545.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 3009.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 3543.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 2263.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 3477.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 3517.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 3541.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 3541.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 3545.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 2813.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 2813.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 8555001.0,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 3169.0,
        "org.apache.commons.math3.util$FastMath#random()": 3509.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 3537.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3501.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 3503.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 3545.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 3431.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 3543.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 3523.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 3543.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 2861.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 2849.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 3487.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 237.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 3495.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 3495.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 3523.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3539.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3539.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 3047.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 3545.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 2985.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 2985.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 2985.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 2985.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 6894953.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 3547.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 6915981.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 3547.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 6440433.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 3547.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 5952491.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 3547.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 6894953.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 6894953.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 6915981.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 6915981.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 6440433.0
    },
    "Math-16": {
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.Dfp)": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField)": 3539.0,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,byte)": 3539.0,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,byte,byte)": 3483.0,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,double)": 3487.0,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,int)": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,java.lang.String)": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,long)": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#abs()": 3539.0,
        "org.apache.commons.math3.dfp$Dfp#add(org.apache.commons.math3.dfp.Dfp)": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#align(int)": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#ceil()": 3541.0,
        "org.apache.commons.math3.dfp$Dfp#classify()": 3505.0,
        "org.apache.commons.math3.dfp$Dfp#compare(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#complement(int)": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#copysign(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 3535.0,
        "org.apache.commons.math3.dfp$Dfp#dfp2sci()": 3541.0,
        "org.apache.commons.math3.dfp$Dfp#dfp2string()": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#divide(int)": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#divide(org.apache.commons.math3.dfp.Dfp)": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#equals(java.lang.Object)": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#floor()": 3527.0,
        "org.apache.commons.math3.dfp$Dfp#getField()": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#getOne()": 3471.0,
        "org.apache.commons.math3.dfp$Dfp#getRadixDigits()": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#getTwo()": 3495.0,
        "org.apache.commons.math3.dfp$Dfp#getZero()": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#greaterThan(org.apache.commons.math3.dfp.Dfp)": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#hashCode()": 3543.0,
        "org.apache.commons.math3.dfp$Dfp#intValue()": 3517.0,
        "org.apache.commons.math3.dfp$Dfp#isInfinite()": 3491.0,
        "org.apache.commons.math3.dfp$Dfp#isNaN()": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#isZero()": 3537.0,
        "org.apache.commons.math3.dfp$Dfp#lessThan(org.apache.commons.math3.dfp.Dfp)": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#log10()": 3495.0,
        "org.apache.commons.math3.dfp$Dfp#log10K()": 3527.0,
        "org.apache.commons.math3.dfp$Dfp#multiply(int)": 3489.0,
        "org.apache.commons.math3.dfp$Dfp#multiply(org.apache.commons.math3.dfp.Dfp)": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#multiplyFast(int)": 3489.0,
        "org.apache.commons.math3.dfp$Dfp#negate()": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#negativeOrNull()": 3537.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance()": 3543.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(byte)": 3543.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(byte,byte)": 3537.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(double)": 3543.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(int)": 3515.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(java.lang.String)": 3487.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(long)": 3499.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(org.apache.commons.math3.dfp.Dfp)": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#nextAfter(org.apache.commons.math3.dfp.Dfp)": 3541.0,
        "org.apache.commons.math3.dfp$Dfp#positiveOrNull()": 3537.0,
        "org.apache.commons.math3.dfp$Dfp#power10(int)": 3539.0,
        "org.apache.commons.math3.dfp$Dfp#power10K(int)": 3507.0,
        "org.apache.commons.math3.dfp$Dfp#reciprocal()": 3541.0,
        "org.apache.commons.math3.dfp$Dfp#remainder(org.apache.commons.math3.dfp.Dfp)": 3525.0,
        "org.apache.commons.math3.dfp$Dfp#rint()": 3487.0,
        "org.apache.commons.math3.dfp$Dfp#round(int)": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#shiftLeft()": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#shiftRight()": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#sqrt()": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#strictlyNegative()": 3541.0,
        "org.apache.commons.math3.dfp$Dfp#strictlyPositive()": 3541.0,
        "org.apache.commons.math3.dfp$Dfp#subtract(org.apache.commons.math3.dfp.Dfp)": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#toDouble()": 3497.0,
        "org.apache.commons.math3.dfp$Dfp#toSplitDouble()": 3543.0,
        "org.apache.commons.math3.dfp$Dfp#toString()": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#trap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp#trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode)": 3483.0,
        "org.apache.commons.math3.dfp$Dfp#unequal(org.apache.commons.math3.dfp.Dfp)": 11999213.0,
        "org.apache.commons.math3.dfp$Dfp$1#<clinit>()": 11999213.0,
        "org.apache.commons.math3.dfp$DfpField#DfpField(int)": 11999213.0,
        "org.apache.commons.math3.dfp$DfpField#DfpField(int,boolean)": 11999213.0,
        "org.apache.commons.math3.dfp$DfpField#clearIEEEFlags()": 3481.0,
        "org.apache.commons.math3.dfp$DfpField#computeExp(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 11999213.0,
        "org.apache.commons.math3.dfp$DfpField#computeLn(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 11999213.0,
        "org.apache.commons.math3.dfp$DfpField#computePi(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 11999213.0,
        "org.apache.commons.math3.dfp$DfpField#computeStringConstants(int)": 11999213.0,
        "org.apache.commons.math3.dfp$DfpField#getE()": 3543.0,
        "org.apache.commons.math3.dfp$DfpField#getESplit()": 3525.0,
        "org.apache.commons.math3.dfp$DfpField#getIEEEFlags()": 3501.0,
        "org.apache.commons.math3.dfp$DfpField#getLn10()": 3543.0,
        "org.apache.commons.math3.dfp$DfpField#getLn2()": 3537.0,
        "org.apache.commons.math3.dfp$DfpField#getLn2Split()": 3529.0,
        "org.apache.commons.math3.dfp$DfpField#getLn5()": 3543.0,
        "org.apache.commons.math3.dfp$DfpField#getLn5Split()": 3529.0,
        "org.apache.commons.math3.dfp$DfpField#getOne()": 3467.0,
        "org.apache.commons.math3.dfp$DfpField#getPi()": 3519.0,
        "org.apache.commons.math3.dfp$DfpField#getPiSplit()": 3523.0,
        "org.apache.commons.math3.dfp$DfpField#getRadixDigits()": 11999213.0,
        "org.apache.commons.math3.dfp$DfpField#getRoundingMode()": 11999213.0,
        "org.apache.commons.math3.dfp$DfpField#getRuntimeClass()": 3543.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr2()": 3543.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr2Reciprocal()": 3543.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr2Split()": 3533.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr3()": 3543.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr3Reciprocal()": 3543.0,
        "org.apache.commons.math3.dfp$DfpField#getTwo()": 3487.0,
        "org.apache.commons.math3.dfp$DfpField#getZero()": 11999213.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp()": 3539.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(byte)": 3543.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(byte,byte)": 3483.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(double)": 3487.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(int)": 3541.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(java.lang.String)": 3485.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(long)": 3543.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(org.apache.commons.math3.dfp.Dfp)": 3543.0,
        "org.apache.commons.math3.dfp$DfpField#setIEEEFlags(int)": 3543.0,
        "org.apache.commons.math3.dfp$DfpField#setIEEEFlagsBits(int)": 11999213.0,
        "org.apache.commons.math3.dfp$DfpField#setRoundingMode(org.apache.commons.math3.dfp.DfpField$RoundingMode)": 3537.0,
        "org.apache.commons.math3.dfp$DfpField#split(java.lang.String)": 11999213.0,
        "org.apache.commons.math3.dfp$DfpField$RoundingMode#<clinit>()": 11999213.0,
        "org.apache.commons.math3.dfp$DfpField$RoundingMode#DfpField$RoundingMode(java.lang.String,int)": 11999213.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 1957.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 3525.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 3543.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 3543.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2245.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 3517.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 3457.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3381.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 3369.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3097.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 3537.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 3537.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#BitsStreamGenerator()": 6189085.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#clear()": 6189085.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBoolean()": 3487.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBytes(byte[])": 3503.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextDouble()": 2649.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextFloat()": 3487.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextGaussian()": 3391.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt()": 3471.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt(int)": 3469.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong()": 3487.0,
        "org.apache.commons.math3.random$MersenneTwister#<clinit>()": 11668925.0,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister()": 3495.0,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(int)": 3421.0,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(int[])": 3541.0,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(long)": 12256955.0,
        "org.apache.commons.math3.random$MersenneTwister#next(int)": 3375.0,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(int)": 11668925.0,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(int[])": 11985359.0,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(long)": 11992285.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 320783.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 3543.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 3541.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 3627383.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3539.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 2885.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 1891.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 3499.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 3539.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 3497.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 3539.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 3497.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 3355.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 3381.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 3539.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 3459.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 2989.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 3517.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 3539.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 3033.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 2887.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 12369259.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 3397.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 8019509.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 6805943.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 3513.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 3483.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 1925.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 3391.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 3539.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 3401.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 1945.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 3541.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1495.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 3431.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 2597.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 3543.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 8525773.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 3539.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 9174323.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 3541.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 3005.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 3539.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 2259.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 3473.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 3513.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 3537.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 3537.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 3541.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 2809.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 2809.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 2297.0,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 3165.0,
        "org.apache.commons.math3.util$FastMath#random()": 3505.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 3533.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3501.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 3499.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 3541.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 3427.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 3539.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 3519.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 3539.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 2857.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 2845.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 3487.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 233.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 3491.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 3491.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 3519.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3535.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3535.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 10869959.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 3541.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 2981.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 2981.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 2981.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 2981.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 6889703.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 3543.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 6910723.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 3543.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1525.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 3543.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 5952493.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 3543.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 6889703.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 6889703.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 6910723.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 6910723.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 1525.0
    },
    "Math-17": {
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.Dfp)": -81.0,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField)": 75.0,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,byte)": 75.0,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,byte,byte)": 2571.0,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,double)": 23.0,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,int)": -81.0,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,java.lang.String)": -81.0,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,long)": -81.0,
        "org.apache.commons.math3.dfp$Dfp#abs()": 75.0,
        "org.apache.commons.math3.dfp$Dfp#add(org.apache.commons.math3.dfp.Dfp)": -81.0,
        "org.apache.commons.math3.dfp$Dfp#align(int)": -81.0,
        "org.apache.commons.math3.dfp$Dfp#ceil()": 77.0,
        "org.apache.commons.math3.dfp$Dfp#classify()": 41.0,
        "org.apache.commons.math3.dfp$Dfp#compare(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": -81.0,
        "org.apache.commons.math3.dfp$Dfp#complement(int)": -81.0,
        "org.apache.commons.math3.dfp$Dfp#copysign(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 71.0,
        "org.apache.commons.math3.dfp$Dfp#dfp2sci()": 77.0,
        "org.apache.commons.math3.dfp$Dfp#dfp2string()": -81.0,
        "org.apache.commons.math3.dfp$Dfp#divide(int)": -81.0,
        "org.apache.commons.math3.dfp$Dfp#divide(org.apache.commons.math3.dfp.Dfp)": -81.0,
        "org.apache.commons.math3.dfp$Dfp#dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": -81.0,
        "org.apache.commons.math3.dfp$Dfp#equals(java.lang.Object)": -81.0,
        "org.apache.commons.math3.dfp$Dfp#floor()": 63.0,
        "org.apache.commons.math3.dfp$Dfp#getField()": -81.0,
        "org.apache.commons.math3.dfp$Dfp#getOne()": 7.0,
        "org.apache.commons.math3.dfp$Dfp#getRadixDigits()": -81.0,
        "org.apache.commons.math3.dfp$Dfp#getTwo()": 31.0,
        "org.apache.commons.math3.dfp$Dfp#getZero()": -81.0,
        "org.apache.commons.math3.dfp$Dfp#greaterThan(org.apache.commons.math3.dfp.Dfp)": -81.0,
        "org.apache.commons.math3.dfp$Dfp#hashCode()": 79.0,
        "org.apache.commons.math3.dfp$Dfp#intValue()": 53.0,
        "org.apache.commons.math3.dfp$Dfp#isInfinite()": 27.0,
        "org.apache.commons.math3.dfp$Dfp#isNaN()": -81.0,
        "org.apache.commons.math3.dfp$Dfp#isZero()": 73.0,
        "org.apache.commons.math3.dfp$Dfp#lessThan(org.apache.commons.math3.dfp.Dfp)": -81.0,
        "org.apache.commons.math3.dfp$Dfp#log10()": 31.0,
        "org.apache.commons.math3.dfp$Dfp#log10K()": 63.0,
        "org.apache.commons.math3.dfp$Dfp#multiply(int)": 2889.0,
        "org.apache.commons.math3.dfp$Dfp#multiply(org.apache.commons.math3.dfp.Dfp)": -81.0,
        "org.apache.commons.math3.dfp$Dfp#multiplyFast(int)": 2889.0,
        "org.apache.commons.math3.dfp$Dfp#negate()": -81.0,
        "org.apache.commons.math3.dfp$Dfp#negativeOrNull()": 73.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance()": 79.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(byte)": 79.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(byte,byte)": 73.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(double)": 79.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(int)": 53.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(java.lang.String)": 23.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(long)": 35.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(org.apache.commons.math3.dfp.Dfp)": -81.0,
        "org.apache.commons.math3.dfp$Dfp#nextAfter(org.apache.commons.math3.dfp.Dfp)": 77.0,
        "org.apache.commons.math3.dfp$Dfp#positiveOrNull()": 73.0,
        "org.apache.commons.math3.dfp$Dfp#power10(int)": 75.0,
        "org.apache.commons.math3.dfp$Dfp#power10K(int)": 43.0,
        "org.apache.commons.math3.dfp$Dfp#reciprocal()": 77.0,
        "org.apache.commons.math3.dfp$Dfp#remainder(org.apache.commons.math3.dfp.Dfp)": 61.0,
        "org.apache.commons.math3.dfp$Dfp#rint()": 23.0,
        "org.apache.commons.math3.dfp$Dfp#round(int)": -81.0,
        "org.apache.commons.math3.dfp$Dfp#shiftLeft()": -81.0,
        "org.apache.commons.math3.dfp$Dfp#shiftRight()": -81.0,
        "org.apache.commons.math3.dfp$Dfp#sqrt()": -81.0,
        "org.apache.commons.math3.dfp$Dfp#strictlyNegative()": 77.0,
        "org.apache.commons.math3.dfp$Dfp#strictlyPositive()": 77.0,
        "org.apache.commons.math3.dfp$Dfp#subtract(org.apache.commons.math3.dfp.Dfp)": -81.0,
        "org.apache.commons.math3.dfp$Dfp#toDouble()": 33.0,
        "org.apache.commons.math3.dfp$Dfp#toSplitDouble()": 79.0,
        "org.apache.commons.math3.dfp$Dfp#toString()": -81.0,
        "org.apache.commons.math3.dfp$Dfp#trap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": -81.0,
        "org.apache.commons.math3.dfp$Dfp#trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode)": 19.0,
        "org.apache.commons.math3.dfp$Dfp#unequal(org.apache.commons.math3.dfp.Dfp)": -81.0,
        "org.apache.commons.math3.dfp$Dfp$1#<clinit>()": -81.0,
        "org.apache.commons.math3.dfp$DfpField#DfpField(int)": -81.0,
        "org.apache.commons.math3.dfp$DfpField#DfpField(int,boolean)": -81.0,
        "org.apache.commons.math3.dfp$DfpField#clearIEEEFlags()": 2469.0,
        "org.apache.commons.math3.dfp$DfpField#computeExp(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": -81.0,
        "org.apache.commons.math3.dfp$DfpField#computeLn(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": -81.0,
        "org.apache.commons.math3.dfp$DfpField#computePi(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": -81.0,
        "org.apache.commons.math3.dfp$DfpField#computeStringConstants(int)": -81.0,
        "org.apache.commons.math3.dfp$DfpField#getE()": 79.0,
        "org.apache.commons.math3.dfp$DfpField#getESplit()": 61.0,
        "org.apache.commons.math3.dfp$DfpField#getIEEEFlags()": 3579.0,
        "org.apache.commons.math3.dfp$DfpField#getLn10()": 79.0,
        "org.apache.commons.math3.dfp$DfpField#getLn2()": 73.0,
        "org.apache.commons.math3.dfp$DfpField#getLn2Split()": 65.0,
        "org.apache.commons.math3.dfp$DfpField#getLn5()": 79.0,
        "org.apache.commons.math3.dfp$DfpField#getLn5Split()": 65.0,
        "org.apache.commons.math3.dfp$DfpField#getOne()": 3.0,
        "org.apache.commons.math3.dfp$DfpField#getPi()": 55.0,
        "org.apache.commons.math3.dfp$DfpField#getPiSplit()": 59.0,
        "org.apache.commons.math3.dfp$DfpField#getRadixDigits()": -81.0,
        "org.apache.commons.math3.dfp$DfpField#getRoundingMode()": -81.0,
        "org.apache.commons.math3.dfp$DfpField#getRuntimeClass()": 79.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr2()": 79.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr2Reciprocal()": 79.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr2Split()": 69.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr3()": 79.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr3Reciprocal()": 79.0,
        "org.apache.commons.math3.dfp$DfpField#getTwo()": 23.0,
        "org.apache.commons.math3.dfp$DfpField#getZero()": -81.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp()": 75.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(byte)": 79.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(byte,byte)": 2571.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(double)": 23.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(int)": 77.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(java.lang.String)": 2675.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(long)": 79.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(org.apache.commons.math3.dfp.Dfp)": 79.0,
        "org.apache.commons.math3.dfp$DfpField#setIEEEFlags(int)": 79.0,
        "org.apache.commons.math3.dfp$DfpField#setIEEEFlagsBits(int)": -81.0,
        "org.apache.commons.math3.dfp$DfpField#setRoundingMode(org.apache.commons.math3.dfp.DfpField$RoundingMode)": 73.0,
        "org.apache.commons.math3.dfp$DfpField#split(java.lang.String)": -81.0,
        "org.apache.commons.math3.dfp$DfpField$RoundingMode#<clinit>()": -81.0,
        "org.apache.commons.math3.dfp$DfpField$RoundingMode#DfpField$RoundingMode(java.lang.String,int)": -81.0
    },
    "Math-18": {
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 3620.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 3580.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 3924.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 3908.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3844.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 3930.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 3930.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 3928.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 2398.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 3914.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 3930.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 3930.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2686.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 3904.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 3834.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3930.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3794.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 3836.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 3928.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 3930.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int)": 3930.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int,java.lang.Class)": 3904.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException()": 3894.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3894.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getContext()": 3930.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getLocalizedMessage()": 3930.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getMessage()": 3930.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 3888.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 3888.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 3904.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(java.lang.Integer[],java.lang.Integer[])": 3930.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,java.lang.Integer[],java.lang.Integer[])": 3852.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimension(int)": 3928.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimensions()": 3930.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimension(int)": 3928.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimensions()": 3930.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 3908.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 3876.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 3928.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3898.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 3928.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 3928.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 3928.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 3928.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 3916.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 3894.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 3910.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3906.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 3856.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3770.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 3840.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3786.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 3868.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3676.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 3928.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 3928.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 3794.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3522.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 3924.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 3924.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 3868.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 3564.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 3928.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 3928.0,
        "org.apache.commons.math3.exception$TooManyEvaluationsException#TooManyEvaluationsException(java.lang.Number)": 3902.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 3928.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3910.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix()": 3926.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field)": 3786.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field,int,int)": 3724.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 3922.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int)": 3796.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int,int)": 3692.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkAdditionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3910.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkColumnIndex(int)": 3678.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkMultiplicationCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3894.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkRowIndex(int)": 3678.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int,int,int,int)": 3910.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int[],int[])": 3920.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubtractionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3922.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int,int,int,int,org.apache.commons.math3.FieldElement[][])": 3926.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int[],int[],org.apache.commons.math3.FieldElement[][])": 3926.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#equals(java.lang.Object)": 3866.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[])": 3930.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[][])": 3748.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumn(int)": 3910.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnMatrix(int)": 3924.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnVector(int)": 3918.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getData()": 3926.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getField()": 3668.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRow(int)": 3916.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowMatrix(int)": 3922.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowVector(int)": 3924.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int,int,int,int)": 3926.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int[],int[])": 3924.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getTrace()": 3924.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#hashCode()": 3924.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#isSquare()": 3854.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 3910.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 3926.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.linear.FieldVector)": 3924.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#power(int)": 3928.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 3928.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldMatrix)": 3924.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldVector)": 3930.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 3926.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 3926.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 3928.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 3928.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 3928.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 3928.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 3928.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 3928.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 3926.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 3928.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#toString()": 3926.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#transpose()": 3918.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3928.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3928.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3928.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3928.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3924.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3928.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3884.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3926.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3928.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3930.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3926.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3930.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$1#visit(int,int,org.apache.commons.math3.FieldElement)": 3924.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#start(int,int,int,int,int,int)": 3926.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#visit(int,int,org.apache.commons.math3.FieldElement)": 3926.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$3#visit(int,int,org.apache.commons.math3.FieldElement)": 3918.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#<clinit>()": 11641224.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix()": 12995698.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix(int,int)": 12312658.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 15319378.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#addToEntry(int,int,double)": 3930.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int,int,int,int,double[][])": 3880.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int[],int[],double[][])": 3926.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#equals(java.lang.Object)": 3826.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumn(int)": 15170988.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnMatrix(int)": 15319378.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnVector(int)": 3898.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getData()": 3926.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getFrobeniusNorm()": 15342874.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getNorm()": 3768.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRow(int)": 15077640.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowMatrix(int)": 3922.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowVector(int)": 3874.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int,int,int,int)": 3908.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int[],int[])": 3924.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getTrace()": 3924.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#hashCode()": 3916.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#isSquare()": 14326078.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 14630518.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiplyEntry(int,int,double)": 3930.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(double[])": 3926.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(org.apache.commons.math3.linear.RealVector)": 3850.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#power(int)": 3926.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(double[])": 3928.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealMatrix)": 3924.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealVector)": 3930.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarAdd(double)": 15335040.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarMultiply(double)": 15311550.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumn(int,double[])": 3920.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3926.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 15272440.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRow(int,double[])": 3928.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3928.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 3872.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setSubMatrix(double[][],int,int)": 3924.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 14791630.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#toString()": 3916.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#transpose()": 14197660.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3928.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3928.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3914.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3928.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3920.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3928.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 14182590.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3882.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3928.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3930.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3926.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3930.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#end()": 3768.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#start(int,int,int,int,int,int)": 3768.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#visit(int,int,double)": 3768.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#end()": 15342874.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#start(int,int,int,int,int,int)": 15342874.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#visit(int,int,double)": 15342874.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$3#visit(int,int,double)": 3924.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#start(int,int,int,int,int,int)": 3880.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#visit(int,int,double)": 3880.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$5#visit(int,int,double)": 14197660.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field)": 3926.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,int,int)": 3860.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[])": 3930.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][])": 3832.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],boolean)": 3868.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 3930.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][])": 3852.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][],boolean)": 3894.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#add(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 3926.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 3930.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copy()": 3926.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyIn(org.apache.commons.math3.FieldElement[][])": 3832.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyOut()": 3864.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#createMatrix(int,int)": 3894.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getColumnDimension()": 3772.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getData()": 3868.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getDataRef()": 3930.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getEntry(int,int)": 3798.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getRowDimension()": 3772.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 3928.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 3930.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 3926.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 3928.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 3854.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 3832.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 3928.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3928.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3928.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3928.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3928.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3926.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3928.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3886.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3926.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix()": 3922.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[])": 3922.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][])": 13373374.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][],boolean)": 14615220.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(int,int)": 13307620.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#add(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 3926.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#addToEntry(int,int,double)": 3930.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copy()": 3904.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyIn(double[][])": 13358748.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyOut()": 13905238.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#createMatrix(int,int)": 13964974.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getColumnDimension()": 12737398.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getData()": 13957500.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getDataRef()": 3844.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getEntry(int,int)": 13366060.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getRowDimension()": 12744538.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 3908.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiplyEntry(int,int,double)": 3922.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#operate(double[])": 3844.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#preMultiply(double[])": 3926.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setEntry(int,int,double)": 13373374.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setSubMatrix(double[][],int,int)": 13358748.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 3928.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3928.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3928.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3778.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3928.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3922.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3928.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 14190124.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3882.0,
        "org.apache.commons.math3.linear$ArrayRealVector#<clinit>()": 12368874.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector()": 3924.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[])": 13890324.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],boolean)": 3350.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],double[])": 3928.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],int,int)": 3928.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],org.apache.commons.math3.linear.ArrayRealVector)": 3928.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int)": 3658.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int,double)": 3924.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[])": 3928.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[],int,int)": 3928.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector)": 3928.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean)": 3724.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,double[])": 3928.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector)": 3924.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.RealVector)": 3926.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector)": 3928.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.ArrayRealVector)": 3928.0,
        "org.apache.commons.math3.linear$ArrayRealVector#add(org.apache.commons.math3.linear.RealVector)": 3912.0,
        "org.apache.commons.math3.linear$ArrayRealVector#addToEntry(int,double)": 3924.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(double)": 3926.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.ArrayRealVector)": 3930.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.RealVector)": 3926.0,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(int)": 3642.0,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 3896.0,
        "org.apache.commons.math3.linear$ArrayRealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 3896.0,
        "org.apache.commons.math3.linear$ArrayRealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 3848.0,
        "org.apache.commons.math3.linear$ArrayRealVector#copy()": 3726.0,
        "org.apache.commons.math3.linear$ArrayRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 3752.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": 3916.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 3904.0,
        "org.apache.commons.math3.linear$ArrayRealVector#equals(java.lang.Object)": 3836.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDataRef()": 3826.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDimension()": 13191124.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 3920.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getEntry(int)": 13578978.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3922.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Norm()": 3926.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3922.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfNorm()": 3926.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getNorm()": 3818.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getSubVector(int,int)": 3916.0,
        "org.apache.commons.math3.linear$ArrayRealVector#hashCode()": 3924.0,
        "org.apache.commons.math3.linear$ArrayRealVector#isInfinite()": 3926.0,
        "org.apache.commons.math3.linear$ArrayRealVector#isNaN()": 3828.0,
        "org.apache.commons.math3.linear$ArrayRealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 3924.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapAddToSelf(double)": 3924.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapDivideToSelf(double)": 3920.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapMultiplyToSelf(double)": 3816.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapSubtractToSelf(double)": 3924.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3922.0,
        "org.apache.commons.math3.linear$ArrayRealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 3924.0,
        "org.apache.commons.math3.linear$ArrayRealVector#set(double)": 3840.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setEntry(int,double)": 3784.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,double[])": 3880.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 3878.0,
        "org.apache.commons.math3.linear$ArrayRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3778.0,
        "org.apache.commons.math3.linear$ArrayRealVector#toArray()": 3726.0,
        "org.apache.commons.math3.linear$ArrayRealVector#toString()": 3930.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3926.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3922.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3926.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3922.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3928.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3926.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3928.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3926.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(int,int,org.apache.commons.math3.FieldElement[][],boolean)": 3860.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.Field,int,int)": 3876.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.FieldElement[][])": 3860.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.BlockFieldMatrix)": 3922.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 3926.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 3930.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockHeight(int)": 3848.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockWidth(int)": 3838.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copy()": 3928.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copyBlockPart(org.apache.commons.math3.FieldElement[],int,int,int,int,int,org.apache.commons.math3.FieldElement[],int,int,int)": 3924.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createBlocksLayout(org.apache.commons.math3.Field,int,int)": 3876.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createMatrix(int,int)": 3928.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumn(int)": 3920.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnDimension()": 3848.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnMatrix(int)": 3924.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnVector(int)": 3924.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getData()": 3920.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getEntry(int,int)": 3874.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRow(int)": 3920.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowDimension()": 3846.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowMatrix(int)": 3922.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowVector(int)": 3924.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getSubMatrix(int,int,int,int)": 3924.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.BlockFieldMatrix)": 3916.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 3918.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 3930.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 3924.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 3926.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 3922.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 3928.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 3922.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 3926.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 3926.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 3926.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 3920.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 3922.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 3926.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 3926.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 3926.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 3926.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.BlockFieldMatrix)": 3926.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 3928.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#toBlocksLayout(org.apache.commons.math3.FieldElement[][])": 3860.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#transpose()": 3924.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3926.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3928.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3928.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3926.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3928.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3928.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3928.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3928.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(double[][])": 3698.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int)": 3808.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int,double[][],boolean)": 3656.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.BlockRealMatrix)": 3922.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 3926.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#addToEntry(int,int,double)": 3928.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockHeight(int)": 3642.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockWidth(int)": 3626.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#copy()": 3920.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#copyBlockPart(double[],int,int,int,int,int,double[],int,int,int)": 3922.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#createBlocksLayout(int,int)": 3768.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#createMatrix(int,int)": 3928.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumn(int)": 3888.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnDimension()": 3642.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnMatrix(int)": 3924.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnVector(int)": 3924.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getData()": 3808.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getEntry(int,int)": 3768.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getFrobeniusNorm()": 3928.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getNorm()": 3884.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRow(int)": 3920.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowDimension()": 3640.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowMatrix(int)": 3922.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowVector(int)": 3924.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getSubMatrix(int,int,int,int)": 3922.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.BlockRealMatrix)": 3904.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3904.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiplyEntry(int,int,double)": 3930.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#operate(double[])": 3848.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#preMultiply(double[])": 3926.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarAdd(double)": 3922.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarMultiply(double)": 3928.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumn(int,double[])": 3914.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 3926.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3926.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 3926.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setEntry(int,int,double)": 3882.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRow(int,double[])": 3922.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 3926.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3926.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 3926.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setSubMatrix(double[][],int,int)": 3926.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.BlockRealMatrix)": 3892.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 3886.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#toBlocksLayout(double[][])": 3698.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#transpose()": 3898.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3912.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3928.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3924.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3922.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3928.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3928.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3928.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3928.0,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#DefaultRealMatrixPreservingVisitor()": 14152474.0,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#end()": 14152474.0,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#start(int,int,int,int,int,int)": 14182590.0,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#visit(int,int,double)": 3930.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(double[],double[])": 3922.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(double[],double[],double)": 3930.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(org.apache.commons.math3.linear.RealMatrix)": 15139840.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(org.apache.commons.math3.linear.RealMatrix,double)": 3930.0,
        "org.apache.commons.math3.linear$EigenDecomposition#cdiv(double,double,double,double)": 3926.0,
        "org.apache.commons.math3.linear$EigenDecomposition#findEigenVectors(double[][])": 15124278.0,
        "org.apache.commons.math3.linear$EigenDecomposition#findEigenVectorsFromSchur(org.apache.commons.math3.linear.SchurTransformer)": 3926.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getD()": 15311550.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getDeterminant()": 3922.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getEigenvector(int)": 3914.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getImagEigenvalue(int)": 3930.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getImagEigenvalues()": 3930.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getRealEigenvalue(int)": 3914.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getRealEigenvalues()": 3904.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getSolver()": 3914.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getV()": 15280258.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getVT()": 3924.0,
        "org.apache.commons.math3.linear$EigenDecomposition#hasComplexEigenvalues()": 3914.0,
        "org.apache.commons.math3.linear$EigenDecomposition#isSymmetric(org.apache.commons.math3.linear.RealMatrix,boolean)": 15139840.0,
        "org.apache.commons.math3.linear$EigenDecomposition#transformToSchur(org.apache.commons.math3.linear.RealMatrix)": 3926.0,
        "org.apache.commons.math3.linear$EigenDecomposition#transformToTridiagonal(org.apache.commons.math3.linear.RealMatrix)": 15155410.0,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#EigenDecomposition$Solver(double[],double[],org.apache.commons.math3.linear.ArrayRealVector[])": 3914.0,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#getInverse()": 3918.0,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#isNonSingular()": 3914.0,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#solve(org.apache.commons.math3.linear.RealMatrix)": 3926.0,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#solve(org.apache.commons.math3.linear.RealVector)": 3926.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#MatrixDimensionMismatchException(int,int,int,int)": 3852.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedColumnDimension()": 3928.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedRowDimension()": 3928.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongColumnDimension()": 3928.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongRowDimension()": 3928.0,
        "org.apache.commons.math3.linear$MatrixUtils#<clinit>()": 11984974.0,
        "org.apache.commons.math3.linear$MatrixUtils#MatrixUtils()": 3930.0,
        "org.apache.commons.math3.linear$MatrixUtils#bigFractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 3900.0,
        "org.apache.commons.math3.linear$MatrixUtils#blockInverse(org.apache.commons.math3.linear.RealMatrix,int)": 3928.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkAdditionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 15209968.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 12263574.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)": 12502900.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 14432268.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 12270580.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int,int,int)": 3844.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int[],int[])": 3920.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubtractionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 14645824.0,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnFieldMatrix(org.apache.commons.math3.FieldElement[])": 3928.0,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnRealMatrix(double[])": 15342874.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldDiagonalMatrix(org.apache.commons.math3.FieldElement[])": 3930.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldIdentityMatrix(org.apache.commons.math3.Field,int)": 3926.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.Field,int,int)": 3926.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.FieldElement[][])": 3928.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldVector(org.apache.commons.math3.FieldElement[])": 3930.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealDiagonalMatrix(double[])": 15288078.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealIdentityMatrix(int)": 3820.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(double[][])": 14024838.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(int,int)": 14569374.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealVector(double[])": 3928.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 3928.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRowRealMatrix(double[])": 3928.0,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealMatrix(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 3928.0,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealVector(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 3928.0,
        "org.apache.commons.math3.linear$MatrixUtils#fractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 3928.0,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealMatrix(org.apache.commons.math3.linear.RealMatrix,java.io.ObjectOutputStream)": 3928.0,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealVector(org.apache.commons.math3.linear.RealVector,java.io.ObjectOutputStream)": 3928.0,
        "org.apache.commons.math3.linear$MatrixUtils#solveLowerTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 3928.0,
        "org.apache.commons.math3.linear$MatrixUtils#solveUpperTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 3928.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#MatrixUtils$BigFractionMatrixConverter()": 3900.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#getConvertedMatrix()": 3900.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#start(int,int,int,int,int,int)": 3900.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.BigFraction)": 3900.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#MatrixUtils$FractionMatrixConverter()": 3928.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#getConvertedMatrix()": 3928.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#start(int,int,int,int,int,int)": 3928.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.Fraction)": 3928.0,
        "org.apache.commons.math3.linear$NonSquareMatrixException#NonSquareMatrixException(int,int)": 3902.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#NonSymmetricMatrixException(int,int,double)": 3928.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getColumn()": 3930.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getRow()": 3930.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getThreshold()": 3930.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(int,int)": 3868.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3912.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#add(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3926.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#addToEntry(int,int,double)": 3930.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#computeKey(int,int)": 3870.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#copy()": 3926.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#createMatrix(int,int)": 3916.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getColumnDimension()": 3870.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getEntry(int,int)": 3874.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getRowDimension()": 3870.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3922.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3922.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiplyEntry(int,int,double)": 3930.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#setEntry(int,int,double)": 3870.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3918.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 3918.0,
        "org.apache.commons.math3.linear$RealLinearOperator#RealLinearOperator()": 11396820.0,
        "org.apache.commons.math3.linear$RealLinearOperator#isTransposable()": 3930.0,
        "org.apache.commons.math3.linear$RealLinearOperator#operateTranspose(org.apache.commons.math3.linear.RealVector)": 3930.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat()": 3928.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 11984974.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 11579880.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.text.NumberFormat)": 11579880.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix)": 3894.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition)": 3894.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getAvailableLocales()": 3930.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getColumnSeparator()": 3930.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getFormat()": 11634400.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance()": 11984974.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance(java.util.Locale)": 11579880.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getPrefix()": 3930.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowPrefix()": 3930.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSeparator()": 3930.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSuffix()": 3930.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getSuffix()": 3930.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String)": 3906.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String,java.text.ParsePosition)": 3898.0,
        "org.apache.commons.math3.linear$RealVector#RealVector()": 11094960.0,
        "org.apache.commons.math3.linear$RealVector#add(org.apache.commons.math3.linear.RealVector)": 3922.0,
        "org.apache.commons.math3.linear$RealVector#addToEntry(int,double)": 3918.0,
        "org.apache.commons.math3.linear$RealVector#checkIndex(int)": 3582.0,
        "org.apache.commons.math3.linear$RealVector#checkIndices(int,int)": 3882.0,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(int)": 3788.0,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 3810.0,
        "org.apache.commons.math3.linear$RealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 3912.0,
        "org.apache.commons.math3.linear$RealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 3896.0,
        "org.apache.commons.math3.linear$RealVector#cosine(org.apache.commons.math3.linear.RealVector)": 3896.0,
        "org.apache.commons.math3.linear$RealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 3874.0,
        "org.apache.commons.math3.linear$RealVector#equals(java.lang.Object)": 3930.0,
        "org.apache.commons.math3.linear$RealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 3922.0,
        "org.apache.commons.math3.linear$RealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3922.0,
        "org.apache.commons.math3.linear$RealVector#getL1Norm()": 3926.0,
        "org.apache.commons.math3.linear$RealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3922.0,
        "org.apache.commons.math3.linear$RealVector#getLInfNorm()": 3926.0,
        "org.apache.commons.math3.linear$RealVector#getMaxIndex()": 3920.0,
        "org.apache.commons.math3.linear$RealVector#getMaxValue()": 3920.0,
        "org.apache.commons.math3.linear$RealVector#getMinIndex()": 3920.0,
        "org.apache.commons.math3.linear$RealVector#getMinValue()": 3920.0,
        "org.apache.commons.math3.linear$RealVector#getNorm()": 3886.0,
        "org.apache.commons.math3.linear$RealVector#hashCode()": 3930.0,
        "org.apache.commons.math3.linear$RealVector#iterator()": 3860.0,
        "org.apache.commons.math3.linear$RealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 3926.0,
        "org.apache.commons.math3.linear$RealVector#mapAdd(double)": 3924.0,
        "org.apache.commons.math3.linear$RealVector#mapAddToSelf(double)": 3922.0,
        "org.apache.commons.math3.linear$RealVector#mapDivide(double)": 3916.0,
        "org.apache.commons.math3.linear$RealVector#mapDivideToSelf(double)": 3916.0,
        "org.apache.commons.math3.linear$RealVector#mapMultiply(double)": 3798.0,
        "org.apache.commons.math3.linear$RealVector#mapMultiplyToSelf(double)": 3904.0,
        "org.apache.commons.math3.linear$RealVector#mapSubtract(double)": 3920.0,
        "org.apache.commons.math3.linear$RealVector#mapSubtractToSelf(double)": 3920.0,
        "org.apache.commons.math3.linear$RealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3880.0,
        "org.apache.commons.math3.linear$RealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 3920.0,
        "org.apache.commons.math3.linear$RealVector#projection(org.apache.commons.math3.linear.RealVector)": 3902.0,
        "org.apache.commons.math3.linear$RealVector#set(double)": 3926.0,
        "org.apache.commons.math3.linear$RealVector#sparseIterator()": 3868.0,
        "org.apache.commons.math3.linear$RealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3922.0,
        "org.apache.commons.math3.linear$RealVector#toArray()": 3924.0,
        "org.apache.commons.math3.linear$RealVector#unitVector()": 3920.0,
        "org.apache.commons.math3.linear$RealVector#unitize()": 3920.0,
        "org.apache.commons.math3.linear$RealVector#unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)": 3874.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3922.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3914.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3922.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3914.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3926.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3922.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3926.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3922.0,
        "org.apache.commons.math3.linear$RealVector$1#hasNext()": 3860.0,
        "org.apache.commons.math3.linear$RealVector$1#next()": 3860.0,
        "org.apache.commons.math3.linear$RealVector$1#remove()": 3924.0,
        "org.apache.commons.math3.linear$RealVector$2#add(org.apache.commons.math3.linear.RealVector)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#addToEntry(int,double)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#append(double)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#append(org.apache.commons.math3.linear.RealVector)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#combine(double,double,org.apache.commons.math3.linear.RealVector)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#copy()": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#cosine(org.apache.commons.math3.linear.RealVector)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#dotProduct(org.apache.commons.math3.linear.RealVector)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeDivide(org.apache.commons.math3.linear.RealVector)": 3930.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 3930.0,
        "org.apache.commons.math3.linear$RealVector$2#getDimension()": 3918.0,
        "org.apache.commons.math3.linear$RealVector$2#getDistance(org.apache.commons.math3.linear.RealVector)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#getEntry(int)": 3914.0,
        "org.apache.commons.math3.linear$RealVector$2#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#getL1Norm()": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#getLInfNorm()": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#getNorm()": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#getSubVector(int,int)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#isInfinite()": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#isNaN()": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#iterator()": 3922.0,
        "org.apache.commons.math3.linear$RealVector$2#map(org.apache.commons.math3.analysis.UnivariateFunction)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#mapAdd(double)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#mapAddToSelf(double)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#mapDivide(double)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#mapDivideToSelf(double)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiply(double)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiplyToSelf(double)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtract(double)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtractToSelf(double)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#outerProduct(org.apache.commons.math3.linear.RealVector)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#set(double)": 3924.0,
        "org.apache.commons.math3.linear$RealVector$2#setEntry(int,double)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#sparseIterator()": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#subtract(org.apache.commons.math3.linear.RealVector)": 3922.0,
        "org.apache.commons.math3.linear$RealVector$2#toArray()": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#unitVector()": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2#unitize()": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2$1#hasNext()": 3922.0,
        "org.apache.commons.math3.linear$RealVector$2$1#next()": 3922.0,
        "org.apache.commons.math3.linear$RealVector$2$1#remove()": 3930.0,
        "org.apache.commons.math3.linear$RealVector$2$2#hasNext()": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2$2#next()": 3926.0,
        "org.apache.commons.math3.linear$RealVector$2$2#remove()": 3930.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2)": 3918.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#getValue()": 3918.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#setValue(double)": 3922.0,
        "org.apache.commons.math3.linear$RealVector$Entry#RealVector$Entry(org.apache.commons.math3.linear.RealVector)": 3782.0,
        "org.apache.commons.math3.linear$RealVector$Entry#getIndex()": 3808.0,
        "org.apache.commons.math3.linear$RealVector$Entry#getValue()": 3814.0,
        "org.apache.commons.math3.linear$RealVector$Entry#setIndex(int)": 3782.0,
        "org.apache.commons.math3.linear$RealVector$Entry#setValue(double)": 3880.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#RealVector$SparseEntryIterator(org.apache.commons.math3.linear.RealVector)": 3868.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#advance(org.apache.commons.math3.linear.RealVector$Entry)": 3868.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#hasNext()": 3868.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#next()": 3872.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#remove()": 3930.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat()": 3914.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String)": 3930.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 12298624.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.text.NumberFormat)": 12298624.0,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector)": 3886.0,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition)": 3886.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getAvailableLocales()": 3930.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getFormat()": 3926.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance()": 12368874.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance(java.util.Locale)": 12298624.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getPrefix()": 3930.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSeparator()": 3930.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSuffix()": 3930.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String)": 3874.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String,java.text.ParsePosition)": 3858.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#TriDiagonalTransformer(org.apache.commons.math3.linear.RealMatrix)": 15085408.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getHouseholderVectorsRef()": 3930.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getMainDiagonalRef()": 15147624.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getQ()": 15116500.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getQT()": 15108724.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getSecondaryDiagonalRef()": 15147624.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getT()": 3920.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#transform()": 15093178.0,
        "org.apache.commons.math3.optimization$AbstractConvergenceChecker#<clinit>()": 14722474.0,
        "org.apache.commons.math3.optimization$AbstractConvergenceChecker#AbstractConvergenceChecker()": 15256810.0,
        "org.apache.commons.math3.optimization$AbstractConvergenceChecker#AbstractConvergenceChecker(double,double)": 3792.0,
        "org.apache.commons.math3.optimization$AbstractConvergenceChecker#getAbsoluteThreshold()": 14830120.0,
        "org.apache.commons.math3.optimization$AbstractConvergenceChecker#getRelativeThreshold()": 14822418.0,
        "org.apache.commons.math3.optimization$GoalType#<clinit>()": 14447470.0,
        "org.apache.commons.math3.optimization$GoalType#GoalType(java.lang.String,int)": 14447470.0,
        "org.apache.commons.math3.optimization$PointValuePair#PointValuePair(double[],double)": 14668798.0,
        "org.apache.commons.math3.optimization$PointValuePair#PointValuePair(double[],double,boolean)": 14668798.0,
        "org.apache.commons.math3.optimization$PointValuePair#getPoint()": 14868660.0,
        "org.apache.commons.math3.optimization$PointValuePair#getPointRef()": 3872.0,
        "org.apache.commons.math3.optimization$PointValuePair#writeReplace()": 3928.0,
        "org.apache.commons.math3.optimization$PointValuePair$DataTransferObject#PointValuePair$DataTransferObject(double[],double)": 3928.0,
        "org.apache.commons.math3.optimization$PointValuePair$DataTransferObject#readResolve()": 3928.0,
        "org.apache.commons.math3.optimization$SimpleValueChecker#SimpleValueChecker()": 15280258.0,
        "org.apache.commons.math3.optimization$SimpleValueChecker#SimpleValueChecker(double,double)": 3854.0,
        "org.apache.commons.math3.optimization$SimpleValueChecker#converged(int,org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.PointValuePair)": 15054348.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#BaseAbstractMultivariateOptimizer()": 3930.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#BaseAbstractMultivariateOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker)": 14807020.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#computeObjectiveValue(double[])": 14899528.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#getConvergenceChecker()": 15007818.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#getEvaluations()": 3866.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#getGoalType()": 14899528.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#getMaxEvaluations()": 15248998.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#getStartPoint()": 14845530.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[])": 14945890.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#optimizeInternal(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[])": 14845530.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#BaseAbstractMultivariateSimpleBoundsOptimizer()": 3930.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#BaseAbstractMultivariateSimpleBoundsOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker)": 15147624.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#getLowerBound()": 15186574.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#getUpperBound()": 15186574.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[])": 15452760.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[],double[],double[])": 15147624.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#<clinit>()": 15280258.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#CMAESOptimizer()": 15437038.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#CMAESOptimizer(int)": 15437038.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#CMAESOptimizer(int,double[])": 3930.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#CMAESOptimizer(int,double[],int,double,boolean,int,int,org.apache.commons.math3.random.RandomGenerator,boolean)": 15280258.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#CMAESOptimizer(int,double[],int,double,boolean,int,int,org.apache.commons.math3.random.RandomGenerator,boolean,org.apache.commons.math3.optimization.ConvergenceChecker)": 15280258.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#checkParameters()": 15303724.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#copyColumn(org.apache.commons.math3.linear.RealMatrix,int,org.apache.commons.math3.linear.RealMatrix,int)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#diag(org.apache.commons.math3.linear.RealMatrix)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#divide(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#doOptimize()": 15303724.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#eye(int,int)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#getStatisticsDHistory()": 3930.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#getStatisticsFitnessHistory()": 3930.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#getStatisticsMeanHistory()": 3930.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#getStatisticsSigmaHistory()": 3930.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#initializeCMA(double[])": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#inverse(int[])": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#log(org.apache.commons.math3.linear.RealMatrix)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#max(double[])": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#max(org.apache.commons.math3.linear.RealMatrix)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#min(double[])": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#min(org.apache.commons.math3.linear.RealMatrix)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#ones(int,int)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#push(double[],double)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#randn(int)": 3930.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#randn1(int,int)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#repmat(org.apache.commons.math3.linear.RealMatrix,int,int)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#reverse(int[])": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#selectColumns(org.apache.commons.math3.linear.RealMatrix,int[])": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#sequence(double,double,double)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#sortedIndices(double[])": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#sqrt(org.apache.commons.math3.linear.RealMatrix)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#square(org.apache.commons.math3.linear.RealMatrix)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#sumRows(org.apache.commons.math3.linear.RealMatrix)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#times(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#triu(org.apache.commons.math3.linear.RealMatrix,int)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#updateBD(double)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#updateCovariance(boolean,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix,int[],org.apache.commons.math3.linear.RealMatrix)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#updateCovarianceDiagonalOnly(boolean,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": 3930.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#updateEvolutionPaths(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#zeros(int,int)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$DoubleIndex#CMAESOptimizer$DoubleIndex(double,int)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$DoubleIndex#compareTo(org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$DoubleIndex#equals(java.lang.Object)": 3930.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$DoubleIndex#hashCode()": 3930.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#CMAESOptimizer$FitnessFunction(org.apache.commons.math3.optimization.direct.CMAESOptimizer)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#decode(double[])": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#encode(double[])": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#isFeasible(double[])": 3930.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#penalty(double[],double[])": 15437038.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#repair(double[])": 15437038.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#repairAndDecode(double[])": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#setValueRange(double)": 15350710.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#value(double[])": 15350710.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#BitsStreamGenerator()": 8368410.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#clear()": 8368410.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBoolean()": 3876.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBytes(byte[])": 3892.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextDouble()": 12172678.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextFloat()": 3876.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextGaussian()": 14899528.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt()": 3860.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt(int)": 3858.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong()": 3876.0,
        "org.apache.commons.math3.random$MersenneTwister#<clinit>()": 14462680.0,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister()": 15264624.0,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(int)": 3810.0,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(int[])": 3928.0,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(long)": 3842.0,
        "org.apache.commons.math3.random$MersenneTwister#next(int)": 14830120.0,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(int)": 14462680.0,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(int[])": 14807020.0,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(long)": 14814718.0,
        "org.apache.commons.math3.util$CompositeFormat#CompositeFormat()": 3930.0,
        "org.apache.commons.math3.util$CompositeFormat#formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)": 3746.0,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat()": 11846874.0,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat(java.util.Locale)": 9479388.0,
        "org.apache.commons.math3.util$CompositeFormat#parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)": 3710.0,
        "org.apache.commons.math3.util$CompositeFormat#parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)": 3714.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNextCharacter(java.lang.String,java.text.ParsePosition)": 3710.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,double,java.text.ParsePosition)": 3882.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)": 3720.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 1013140.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 3930.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 3928.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 5422638.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3926.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 3280.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 9739830.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 3886.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 3926.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 3884.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 3926.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 3884.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 3752.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 3778.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 3926.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 3846.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 3230.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 3904.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 3926.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 13601100.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 13067908.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 3874.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 3794.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 2532.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 2088.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 3900.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 3870.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 2210.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 3792.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 3926.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 3802.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 9972190.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 3928.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 8613228.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 3818.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 3006.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 3930.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 11101624.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 3926.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 11881324.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 3928.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 3394.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 3926.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 10757748.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 3860.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 3898.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 3924.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 3922.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 3928.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 12787420.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 12787420.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 2714.0,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 3554.0,
        "org.apache.commons.math3.util$FastMath#random()": 3892.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 3920.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3888.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 3890.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 3924.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 3828.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 3926.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 3906.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 3926.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 12959668.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 12916498.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 3874.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 5352978.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 3878.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 3878.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 3906.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3922.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3922.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 3440.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 3928.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 13402650.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 13402650.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 13402650.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 13402650.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 2120.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 3930.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 2128.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 3930.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 8701518.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 3930.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 8144238.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 3930.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 2120.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 2120.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 2128.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 2128.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 8701518.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor()": 11215218.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int)": 10843210.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int,org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback)": 10836624.0,
        "org.apache.commons.math3.util$Incrementor#canIncrement()": 3926.0,
        "org.apache.commons.math3.util$Incrementor#getCount()": 3600.0,
        "org.apache.commons.math3.util$Incrementor#getMaximalCount()": 15194370.0,
        "org.apache.commons.math3.util$Incrementor#incrementCount()": 11201824.0,
        "org.apache.commons.math3.util$Incrementor#incrementCount(int)": 3928.0,
        "org.apache.commons.math3.util$Incrementor#resetCount()": 11074980.0,
        "org.apache.commons.math3.util$Incrementor#setMaximalCount(int)": 11315928.0,
        "org.apache.commons.math3.util$Incrementor$1#trigger(int)": 3894.0,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 3930.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 3836.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3834.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 3646.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 3856.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 3802.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 3918.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": 15288078.0,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 3928.0,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 3918.0,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 3928.0,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 3928.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 3928.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 3928.0,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 3928.0,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 3930.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 3920.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 3930.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3928.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3928.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 3830.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 3828.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 3924.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": 3924.0,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": 3926.0,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 3930.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 3912.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 3912.0,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 3914.0,
        "org.apache.commons.math3.util$MathArrays$2#<clinit>()": 3646.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 3636.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 3636.0,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 3930.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 3896.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 3928.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 9833700.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3776.0,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 3922.0,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 3922.0,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 3926.0,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 3926.0,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 3836.0,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 3912.0,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 3858.0,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 3920.0,
        "org.apache.commons.math3.util$Pair#Pair(java.lang.Object,java.lang.Object)": 13300324.0,
        "org.apache.commons.math3.util$Pair#Pair(org.apache.commons.math3.util.Pair)": 3930.0,
        "org.apache.commons.math3.util$Pair#equals(java.lang.Object)": 3928.0,
        "org.apache.commons.math3.util$Pair#getFirst()": 3758.0,
        "org.apache.commons.math3.util$Pair#getKey()": 14152474.0,
        "org.apache.commons.math3.util$Pair#getSecond()": 3758.0,
        "org.apache.commons.math3.util$Pair#getValue()": 14470288.0,
        "org.apache.commons.math3.util$Pair#hashCode()": 3928.0,
        "org.apache.commons.math3.util$Precision#<clinit>()": 8070190.0,
        "org.apache.commons.math3.util$Precision#Precision()": 3930.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 15077640.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 3878.0,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 3634.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 12432270.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 10118010.0,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 3928.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 3930.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 3770.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 3668.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 3834.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 3928.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 3772.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 3930.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 3930.0,
        "org.apache.commons.math3.util$Precision#equalsWithRelativeTolerance(double,double,double)": 3928.0,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 3928.0,
        "org.apache.commons.math3.util$Precision#round(double,int)": 3928.0,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 3928.0,
        "org.apache.commons.math3.util$Precision#round(float,int)": 3928.0,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 3928.0,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 3928.0
    },
    "Math-2": {
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#AbstractIntegerDistribution()": 4396.0,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#AbstractIntegerDistribution(org.apache.commons.math3.random.RandomGenerator)": 16974122.0,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#checkedCumulativeProbability(int)": 4268.0,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#cumulativeProbability(int,int)": 4356.0,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#inverseCumulativeProbability(double)": 18601884.0,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#reseedRandomGenerator(long)": 4356.0,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#sample()": 18870282.0,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#sample(int)": 4380.0,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#solveInverseCumulativeProbability(double,int,int)": 18731514.0,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#HypergeometricDistribution(int,int,int)": 19096872.0,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#HypergeometricDistribution(org.apache.commons.math3.random.RandomGenerator,int,int,int)": 19096872.0,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#calculateNumericalVariance()": 19175622.0,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#cumulativeProbability(int)": 4352.0,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#getDomain(int,int,int)": 4350.0,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#getLowerDomain(int,int,int)": 4350.0,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#getNumberOfSuccesses()": 19158108.0,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#getNumericalMean()": 19175622.0,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#getNumericalVariance()": 19175622.0,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#getPopulationSize()": 19158108.0,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#getSampleSize()": 19158108.0,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#getSupportLowerBound()": 19175622.0,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#getSupportUpperBound()": 19175622.0,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#getUpperDomain(int,int)": 4350.0,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#innerCumulativeProbability(int,int,int)": 4358.0,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#isSupportConnected()": 4396.0,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#probability(int)": 4350.0,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#upperCumulativeProbability(int)": 4390.0,
        "org.apache.commons.math3.distribution$SaddlePointExpansion#<clinit>()": 4316.0,
        "org.apache.commons.math3.distribution$SaddlePointExpansion#SaddlePointExpansion()": 4396.0,
        "org.apache.commons.math3.distribution$SaddlePointExpansion#getDeviancePart(double,double)": 4318.0,
        "org.apache.commons.math3.distribution$SaddlePointExpansion#getStirlingError(double)": 4320.0,
        "org.apache.commons.math3.distribution$SaddlePointExpansion#logBinomialProbability(int,int,double,double)": 4342.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 2558.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 4378.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 4396.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 4392.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#<clinit>()": 2908.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2908.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 4368.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 4248.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4396.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4194.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 4256.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 4394.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 4396.0,
        "org.apache.commons.math3.exception$NotANumberException#NotANumberException()": 4364.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 4378.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 4354.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 4352.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 4372.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 4288.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 4222.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 4320.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 4084.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 4394.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 4394.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 4174.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3886.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 4390.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 4390.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 4296.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 3988.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 4394.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 4394.0,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int)": 13081908.0,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,int)": 3596.0,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,int[])": 9978042.0,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,long)": 2676.0,
        "org.apache.commons.math3.random$AbstractWell#setSeed(int)": 4360.0,
        "org.apache.commons.math3.random$AbstractWell#setSeed(int[])": 9978042.0,
        "org.apache.commons.math3.random$AbstractWell#setSeed(long)": 10502924.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#BitsStreamGenerator()": 9374508.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#clear()": 9374508.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBoolean()": 4340.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBytes(byte[])": 4356.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextDouble()": 15697008.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextFloat()": 4340.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextGaussian()": 4174.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt()": 4284.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt(int)": 4114.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong()": 4300.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong(long)": 4396.0,
        "org.apache.commons.math3.random$RandomDataGenerator#RandomDataGenerator()": 10354344.0,
        "org.apache.commons.math3.random$RandomDataGenerator#RandomDataGenerator(org.apache.commons.math3.random.RandomGenerator)": 2992.0,
        "org.apache.commons.math3.random$RandomDataGenerator#getNatural(int)": 4344.0,
        "org.apache.commons.math3.random$RandomDataGenerator#getRandomGenerator()": 2802.0,
        "org.apache.commons.math3.random$RandomDataGenerator#getSecRan()": 4356.0,
        "org.apache.commons.math3.random$RandomDataGenerator#initRan()": 2808.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextBeta(double,double)": 4372.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextBinomial(int,double)": 4372.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextCauchy(double,double)": 4372.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextChiSquare(double)": 4372.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextExponential(double)": 4368.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextF(double,double)": 4372.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextGamma(double,double)": 4372.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextGaussian(double,double)": 4368.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextHexString(int)": 4372.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextHypergeometric(int,int,int)": 4372.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextInt(int,int)": 4252.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextLong(long,long)": 4226.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextLong(org.apache.commons.math3.random.RandomGenerator,long)": 4396.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPascal(int,double)": 4372.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPermutation(int,int)": 4344.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPoisson(double)": 4348.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSample(java.util.Collection,int)": 4370.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureHexString(int)": 4370.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureInt(int,int)": 4388.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureLong(long,long)": 4364.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextT(double)": 4372.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextUniform(double,double)": 4132.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextUniform(double,double,boolean)": 4132.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextWeibull(double,double)": 4372.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextZipf(int,double)": 4372.0,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeed()": 4372.0,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeed(long)": 2832.0,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeedSecure()": 4372.0,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeedSecure(long)": 4372.0,
        "org.apache.commons.math3.random$RandomDataGenerator#setSecureAlgorithm(java.lang.String,java.lang.String)": 4396.0,
        "org.apache.commons.math3.random$RandomDataGenerator#shuffle(int[],int)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl()": 12502434.0,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl(org.apache.commons.math3.random.RandomGenerator)": 4378.0,
        "org.apache.commons.math3.random$RandomDataImpl#getDelegate()": 4390.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextBeta(double,double)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextBinomial(int,double)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextCauchy(double,double)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextChiSquare(double)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextExponential(double)": 4392.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextF(double,double)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextGamma(double,double)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextGaussian(double,double)": 4392.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextHexString(int)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextHypergeometric(int,int,int)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInt(int,int)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.IntegerDistribution)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.RealDistribution)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextLong(long,long)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextPascal(int,double)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextPermutation(int,int)": 4394.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextPoisson(double)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSample(java.util.Collection,int)": 4394.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureHexString(int)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureInt(int,int)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureLong(long,long)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextT(double)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double)": 4392.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double,boolean)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextWeibull(double,double)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextZipf(int,double)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed()": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed(long)": 4298.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure()": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure(long)": 4396.0,
        "org.apache.commons.math3.random$RandomDataImpl#setSecureAlgorithm(java.lang.String,java.lang.String)": 4396.0,
        "org.apache.commons.math3.random$Well19937c#Well19937c()": 13081908.0,
        "org.apache.commons.math3.random$Well19937c#Well19937c(int)": 4216.0,
        "org.apache.commons.math3.random$Well19937c#Well19937c(int[])": 4394.0,
        "org.apache.commons.math3.random$Well19937c#Well19937c(long)": 2800.0,
        "org.apache.commons.math3.random$Well19937c#next(int)": 17757612.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 503258.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 4396.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 4378.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": -8.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 4392.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 3728.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 2456.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 4324.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 4386.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 4322.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 4386.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 4318.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 4132.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 4206.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 4386.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 4304.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 3792.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 4348.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 4392.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 3742.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 3578.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 4328.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 4212.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 2734.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 2160.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 4360.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 4316.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 2806.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 4234.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 4392.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 4244.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 2550.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 4394.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1982.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 4284.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 3312.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 4396.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 2416.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 4392.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 13674504.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 4370.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 3326.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 4392.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 11328924.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 4296.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 4366.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 4390.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 4390.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 4394.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 3488.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 3488.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 2908.0,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 3920.0,
        "org.apache.commons.math3.util$FastMath#random()": 4358.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4386.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 4248.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 4348.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 4394.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 4266.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 4392.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 4368.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 4392.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 3548.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 3534.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 4328.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 5403552.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 4334.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 4334.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 4366.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 4388.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 4388.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 3816.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 4394.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double)": 3702.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 3702.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 3702.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 3702.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 2192.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 4396.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 2202.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 4396.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 2022.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 4396.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 1768.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 4396.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 2192.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 2192.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 2202.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 2202.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 2022.0
    },
    "Math-20": {
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 3613.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 3573.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 3917.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 3901.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3837.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 3923.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 3923.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 3921.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 2395.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 3909.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 3923.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 3923.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2683.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 3897.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 3827.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3923.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3787.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 3829.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 3921.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 3923.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int)": 3923.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int,java.lang.Class)": 3897.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException()": 3887.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3887.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getContext()": 3923.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getLocalizedMessage()": 3923.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getMessage()": 3923.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 3881.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 3881.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 3897.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(java.lang.Integer[],java.lang.Integer[])": 3923.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,java.lang.Integer[],java.lang.Integer[])": 3845.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimension(int)": 3921.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimensions()": 3923.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimension(int)": 3921.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimensions()": 3923.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 3901.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 3869.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 3921.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3891.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 3921.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 3921.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 3921.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 3921.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 3909.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 3887.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 3903.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3899.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 3849.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3763.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 3833.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3779.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 3863.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3671.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 3921.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 3921.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 3787.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3515.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 3917.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 3917.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 3863.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 3559.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 3921.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 3921.0,
        "org.apache.commons.math3.exception$TooManyEvaluationsException#TooManyEvaluationsException(java.lang.Number)": 3895.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 3921.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3903.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix()": 3919.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field)": 3779.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field,int,int)": 3717.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 3915.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int)": 3789.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int,int)": 3685.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkAdditionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3903.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkColumnIndex(int)": 3671.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkMultiplicationCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3887.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkRowIndex(int)": 3671.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int,int,int,int)": 3903.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int[],int[])": 3913.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubtractionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3915.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int,int,int,int,org.apache.commons.math3.FieldElement[][])": 3919.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int[],int[],org.apache.commons.math3.FieldElement[][])": 3919.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#equals(java.lang.Object)": 3859.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[])": 3923.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[][])": 3741.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumn(int)": 3903.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnMatrix(int)": 3917.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnVector(int)": 3911.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getData()": 3919.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getField()": 3661.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRow(int)": 3909.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowMatrix(int)": 3915.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowVector(int)": 3917.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int,int,int,int)": 3919.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int[],int[])": 3917.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getTrace()": 3917.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#hashCode()": 3917.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#isSquare()": 3847.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 3903.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 3919.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.linear.FieldVector)": 3917.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#power(int)": 3921.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 3921.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldMatrix)": 3917.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldVector)": 3923.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 3919.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 3919.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 3921.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 3921.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 3921.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 3921.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 3921.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 3921.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 3919.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 3921.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#toString()": 3919.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#transpose()": 3911.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3921.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3921.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3921.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3921.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3917.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3921.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3877.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3919.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3921.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3923.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3919.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3923.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$1#visit(int,int,org.apache.commons.math3.FieldElement)": 3917.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#start(int,int,int,int,int,int)": 3919.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#visit(int,int,org.apache.commons.math3.FieldElement)": 3919.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$3#visit(int,int,org.apache.commons.math3.FieldElement)": 3911.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#<clinit>()": 11620765.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix()": 12974081.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix(int,int)": 12291617.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 15272447.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#addToEntry(int,int,double)": 3923.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int,int,int,int,double[][])": 3873.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int[],int[],double[][])": 3919.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#equals(java.lang.Object)": 3819.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumn(int)": 15124285.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnMatrix(int)": 15272447.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnVector(int)": 3891.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getData()": 3919.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getFrobeniusNorm()": 15295907.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getNorm()": 3765.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRow(int)": 15031081.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowMatrix(int)": 3915.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowVector(int)": 3867.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int,int,int,int)": 3903.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int[],int[])": 3917.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getTrace()": 3917.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#hashCode()": 3909.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#isSquare()": 14295817.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 14607581.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiplyEntry(int,int,double)": 3923.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(double[])": 3919.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(org.apache.commons.math3.linear.RealVector)": 3843.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#power(int)": 3919.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(double[])": 3921.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealMatrix)": 3917.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealVector)": 3923.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarAdd(double)": 15288085.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarMultiply(double)": 15272447.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumn(int,double[])": 3913.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3919.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 15233387.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRow(int,double[])": 3921.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3921.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 3865.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setSubMatrix(double[][],int,int)": 3919.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 14768567.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#toString()": 3911.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#transpose()": 14175065.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3921.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3921.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3907.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3921.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3913.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3921.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 14160007.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3875.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3921.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3923.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3919.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3923.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#end()": 3765.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#start(int,int,int,int,int,int)": 3765.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#visit(int,int,double)": 3765.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#end()": 15295907.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#start(int,int,int,int,int,int)": 15295907.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#visit(int,int,double)": 15295907.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$3#visit(int,int,double)": 3917.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#start(int,int,int,int,int,int)": 3873.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#visit(int,int,double)": 3873.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$5#visit(int,int,double)": 14175065.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field)": 3919.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,int,int)": 3853.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[])": 3923.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][])": 3825.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],boolean)": 3861.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 3923.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][])": 3845.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][],boolean)": 3887.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#add(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 3919.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 3923.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copy()": 3919.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyIn(org.apache.commons.math3.FieldElement[][])": 3825.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyOut()": 3857.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#createMatrix(int,int)": 3887.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getColumnDimension()": 3765.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getData()": 3861.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getDataRef()": 3923.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getEntry(int,int)": 3791.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getRowDimension()": 3765.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 3921.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 3923.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 3919.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 3921.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 3847.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 3825.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 3921.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3921.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3921.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3921.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3921.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3919.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3921.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3879.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3919.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix()": 3915.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[])": 3915.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][])": 13351445.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][],boolean)": 14584655.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(int,int)": 13285745.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#add(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 3919.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#addToEntry(int,int,double)": 3923.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copy()": 3897.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyIn(double[][])": 13336831.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyOut()": 13882877.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#createMatrix(int,int)": 13942565.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getColumnDimension()": 12715997.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getData()": 13935097.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getDataRef()": 3837.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getEntry(int,int)": 13344137.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getRowDimension()": 12723131.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 3901.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiplyEntry(int,int,double)": 3915.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#operate(double[])": 3837.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#preMultiply(double[])": 3919.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setEntry(int,int,double)": 13351445.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setSubMatrix(double[][],int,int)": 13336831.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 3921.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3921.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3921.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3775.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3921.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3915.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3921.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 14167535.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3875.0,
        "org.apache.commons.math3.linear$ArrayRealVector#<clinit>()": 12333731.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector()": 3917.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[])": 13853081.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],boolean)": 3343.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],double[])": 3921.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],int,int)": 3921.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],org.apache.commons.math3.linear.ArrayRealVector)": 3921.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int)": 3651.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int,double)": 3917.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[])": 3921.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[],int,int)": 3921.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector)": 3921.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean)": 3717.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,double[])": 3921.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector)": 3917.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.RealVector)": 3919.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector)": 3921.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.ArrayRealVector)": 3921.0,
        "org.apache.commons.math3.linear$ArrayRealVector#add(org.apache.commons.math3.linear.RealVector)": 3905.0,
        "org.apache.commons.math3.linear$ArrayRealVector#addToEntry(int,double)": 3917.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(double)": 3919.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.ArrayRealVector)": 3923.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.RealVector)": 3919.0,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(int)": 3635.0,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 3889.0,
        "org.apache.commons.math3.linear$ArrayRealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 3889.0,
        "org.apache.commons.math3.linear$ArrayRealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 3841.0,
        "org.apache.commons.math3.linear$ArrayRealVector#copy()": 3719.0,
        "org.apache.commons.math3.linear$ArrayRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 3745.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": 3909.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 3897.0,
        "org.apache.commons.math3.linear$ArrayRealVector#equals(java.lang.Object)": 3829.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDataRef()": 3819.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDimension()": 13154831.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 3913.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getEntry(int)": 13542155.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3915.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Norm()": 3919.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3915.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfNorm()": 3919.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getNorm()": 3811.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getSubVector(int,int)": 3909.0,
        "org.apache.commons.math3.linear$ArrayRealVector#hashCode()": 3917.0,
        "org.apache.commons.math3.linear$ArrayRealVector#isInfinite()": 3919.0,
        "org.apache.commons.math3.linear$ArrayRealVector#isNaN()": 3821.0,
        "org.apache.commons.math3.linear$ArrayRealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 3917.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapAddToSelf(double)": 3917.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapDivideToSelf(double)": 3913.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapMultiplyToSelf(double)": 3809.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapSubtractToSelf(double)": 3917.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3915.0,
        "org.apache.commons.math3.linear$ArrayRealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 3917.0,
        "org.apache.commons.math3.linear$ArrayRealVector#set(double)": 3833.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setEntry(int,double)": 3777.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,double[])": 3873.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 3871.0,
        "org.apache.commons.math3.linear$ArrayRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3771.0,
        "org.apache.commons.math3.linear$ArrayRealVector#toArray()": 3719.0,
        "org.apache.commons.math3.linear$ArrayRealVector#toString()": 3923.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3919.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3915.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3919.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3915.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3921.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3919.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3921.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3919.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(int,int,org.apache.commons.math3.FieldElement[][],boolean)": 3853.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.Field,int,int)": 3869.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.FieldElement[][])": 3853.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.BlockFieldMatrix)": 3915.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 3919.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 3923.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockHeight(int)": 3841.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockWidth(int)": 3831.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copy()": 3921.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copyBlockPart(org.apache.commons.math3.FieldElement[],int,int,int,int,int,org.apache.commons.math3.FieldElement[],int,int,int)": 3917.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createBlocksLayout(org.apache.commons.math3.Field,int,int)": 3869.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createMatrix(int,int)": 3921.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumn(int)": 3913.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnDimension()": 3841.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnMatrix(int)": 3917.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnVector(int)": 3917.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getData()": 3913.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getEntry(int,int)": 3867.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRow(int)": 3913.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowDimension()": 3839.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowMatrix(int)": 3915.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowVector(int)": 3917.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getSubMatrix(int,int,int,int)": 3917.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.BlockFieldMatrix)": 3909.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 3911.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 3923.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 3917.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 3919.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 3915.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 3921.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 3915.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 3919.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 3919.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 3919.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 3913.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 3915.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 3919.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 3919.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 3919.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 3919.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.BlockFieldMatrix)": 3919.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 3921.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#toBlocksLayout(org.apache.commons.math3.FieldElement[][])": 3853.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#transpose()": 3917.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3919.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3921.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3921.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3919.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3921.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3921.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3921.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3921.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(double[][])": 3691.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int)": 3801.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int,double[][],boolean)": 3649.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.BlockRealMatrix)": 3915.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 3919.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#addToEntry(int,int,double)": 3921.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockHeight(int)": 3635.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockWidth(int)": 3619.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#copy()": 3913.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#copyBlockPart(double[],int,int,int,int,int,double[],int,int,int)": 3915.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#createBlocksLayout(int,int)": 3761.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#createMatrix(int,int)": 3921.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumn(int)": 3881.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnDimension()": 3635.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnMatrix(int)": 3917.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnVector(int)": 3917.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getData()": 3801.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getEntry(int,int)": 3761.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getFrobeniusNorm()": 3921.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getNorm()": 3877.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRow(int)": 3913.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowDimension()": 3633.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowMatrix(int)": 3915.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowVector(int)": 3917.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getSubMatrix(int,int,int,int)": 3915.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.BlockRealMatrix)": 3897.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3897.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiplyEntry(int,int,double)": 3923.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#operate(double[])": 3841.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#preMultiply(double[])": 3919.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarAdd(double)": 3915.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarMultiply(double)": 3921.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumn(int,double[])": 3907.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 3919.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3919.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 3919.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setEntry(int,int,double)": 3875.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRow(int,double[])": 3915.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 3919.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3919.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 3919.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setSubMatrix(double[][],int,int)": 3919.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.BlockRealMatrix)": 3885.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 3879.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#toBlocksLayout(double[][])": 3691.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#transpose()": 3891.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3905.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3921.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3917.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3915.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3921.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3921.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3921.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3921.0,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#DefaultRealMatrixPreservingVisitor()": 14129915.0,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#end()": 14129915.0,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#start(int,int,int,int,int,int)": 14160007.0,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#visit(int,int,double)": 3923.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(double[],double[])": 3915.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(double[],double[],double)": 3923.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(org.apache.commons.math3.linear.RealMatrix)": 15100957.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(org.apache.commons.math3.linear.RealMatrix,double)": 3923.0,
        "org.apache.commons.math3.linear$EigenDecomposition#cdiv(double,double,double,double)": 3921.0,
        "org.apache.commons.math3.linear$EigenDecomposition#findEigenVectors(double[][])": 15077647.0,
        "org.apache.commons.math3.linear$EigenDecomposition#findEigenVectorsFromSchur(org.apache.commons.math3.linear.SchurTransformer)": 3921.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getD()": 15272447.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getDeterminant()": 3915.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getEigenvector(int)": 3907.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getImagEigenvalue(int)": 3923.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getImagEigenvalues()": 3923.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getRealEigenvalue(int)": 3907.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getRealEigenvalues()": 3897.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getSolver()": 3907.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getV()": 15241195.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getVT()": 3917.0,
        "org.apache.commons.math3.linear$EigenDecomposition#hasComplexEigenvalues()": 3907.0,
        "org.apache.commons.math3.linear$EigenDecomposition#isSymmetric(org.apache.commons.math3.linear.RealMatrix,boolean)": 15100957.0,
        "org.apache.commons.math3.linear$EigenDecomposition#transformToSchur(org.apache.commons.math3.linear.RealMatrix)": 3921.0,
        "org.apache.commons.math3.linear$EigenDecomposition#transformToTridiagonal(org.apache.commons.math3.linear.RealMatrix)": 15108731.0,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#EigenDecomposition$Solver(double[],double[],org.apache.commons.math3.linear.ArrayRealVector[])": 3907.0,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#getInverse()": 3911.0,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#isNonSingular()": 3907.0,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#solve(org.apache.commons.math3.linear.RealMatrix)": 3919.0,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#solve(org.apache.commons.math3.linear.RealVector)": 3919.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#MatrixDimensionMismatchException(int,int,int,int)": 3845.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedColumnDimension()": 3921.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedRowDimension()": 3921.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongColumnDimension()": 3921.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongRowDimension()": 3921.0,
        "org.apache.commons.math3.linear$MatrixUtils#<clinit>()": 11964215.0,
        "org.apache.commons.math3.linear$MatrixUtils#MatrixUtils()": 3923.0,
        "org.apache.commons.math3.linear$MatrixUtils#bigFractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 3893.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkAdditionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 15163205.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 12242575.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)": 12481697.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 14409487.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 12249575.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int,int,int)": 3839.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int[],int[])": 3913.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubtractionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 14622875.0,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnFieldMatrix(org.apache.commons.math3.FieldElement[])": 3921.0,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnRealMatrix(double[])": 15295907.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldDiagonalMatrix(org.apache.commons.math3.FieldElement[])": 3923.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldIdentityMatrix(org.apache.commons.math3.Field,int)": 3919.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.Field,int,int)": 3919.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.FieldElement[][])": 3921.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldVector(org.apache.commons.math3.FieldElement[])": 3923.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealDiagonalMatrix(double[])": 15249005.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealIdentityMatrix(int)": 3815.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(double[][])": 14002381.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(int,int)": 14531231.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealVector(double[])": 3921.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 3921.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRowRealMatrix(double[])": 3921.0,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealMatrix(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 3921.0,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealVector(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 3921.0,
        "org.apache.commons.math3.linear$MatrixUtils#fractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 3921.0,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealMatrix(org.apache.commons.math3.linear.RealMatrix,java.io.ObjectOutputStream)": 3921.0,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealVector(org.apache.commons.math3.linear.RealVector,java.io.ObjectOutputStream)": 3921.0,
        "org.apache.commons.math3.linear$MatrixUtils#solveLowerTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 3921.0,
        "org.apache.commons.math3.linear$MatrixUtils#solveUpperTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 3921.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#MatrixUtils$BigFractionMatrixConverter()": 3893.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#getConvertedMatrix()": 3893.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#start(int,int,int,int,int,int)": 3893.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.BigFraction)": 3893.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#MatrixUtils$FractionMatrixConverter()": 3921.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#getConvertedMatrix()": 3921.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#start(int,int,int,int,int,int)": 3921.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.Fraction)": 3921.0,
        "org.apache.commons.math3.linear$NonSquareMatrixException#NonSquareMatrixException(int,int)": 3895.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#NonSymmetricMatrixException(int,int,double)": 3921.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getColumn()": 3923.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getRow()": 3923.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getThreshold()": 3923.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(int,int)": 3861.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3905.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#add(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3919.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#addToEntry(int,int,double)": 3923.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#computeKey(int,int)": 3863.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#copy()": 3919.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#createMatrix(int,int)": 3909.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getColumnDimension()": 3863.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getEntry(int,int)": 3867.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getRowDimension()": 3863.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3915.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3915.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiplyEntry(int,int,double)": 3923.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#setEntry(int,int,double)": 3863.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3911.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 3911.0,
        "org.apache.commons.math3.linear$RealLinearOperator#RealLinearOperator()": 11376577.0,
        "org.apache.commons.math3.linear$RealLinearOperator#isTransposable()": 3923.0,
        "org.apache.commons.math3.linear$RealLinearOperator#operateTranspose(org.apache.commons.math3.linear.RealVector)": 3923.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat()": 3921.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 11964215.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 11559475.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.text.NumberFormat)": 11559475.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix)": 3889.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition)": 3889.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getAvailableLocales()": 3923.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getColumnSeparator()": 3923.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getFormat()": 11613947.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance()": 11964215.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance(java.util.Locale)": 11559475.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getPrefix()": 3923.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowPrefix()": 3923.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSeparator()": 3923.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSuffix()": 3923.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getSuffix()": 3923.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String)": 3899.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String,java.text.ParsePosition)": 3891.0,
        "org.apache.commons.math3.linear$RealVector#RealVector()": 11061677.0,
        "org.apache.commons.math3.linear$RealVector#add(org.apache.commons.math3.linear.RealVector)": 3915.0,
        "org.apache.commons.math3.linear$RealVector#addToEntry(int,double)": 3911.0,
        "org.apache.commons.math3.linear$RealVector#checkIndex(int)": 3575.0,
        "org.apache.commons.math3.linear$RealVector#checkIndices(int,int)": 3875.0,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(int)": 3781.0,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 3803.0,
        "org.apache.commons.math3.linear$RealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 3905.0,
        "org.apache.commons.math3.linear$RealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 3889.0,
        "org.apache.commons.math3.linear$RealVector#cosine(org.apache.commons.math3.linear.RealVector)": 3889.0,
        "org.apache.commons.math3.linear$RealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 3867.0,
        "org.apache.commons.math3.linear$RealVector#equals(java.lang.Object)": 3923.0,
        "org.apache.commons.math3.linear$RealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 3915.0,
        "org.apache.commons.math3.linear$RealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3915.0,
        "org.apache.commons.math3.linear$RealVector#getL1Norm()": 3919.0,
        "org.apache.commons.math3.linear$RealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3915.0,
        "org.apache.commons.math3.linear$RealVector#getLInfNorm()": 3919.0,
        "org.apache.commons.math3.linear$RealVector#getMaxIndex()": 3913.0,
        "org.apache.commons.math3.linear$RealVector#getMaxValue()": 3913.0,
        "org.apache.commons.math3.linear$RealVector#getMinIndex()": 3913.0,
        "org.apache.commons.math3.linear$RealVector#getMinValue()": 3913.0,
        "org.apache.commons.math3.linear$RealVector#getNorm()": 3879.0,
        "org.apache.commons.math3.linear$RealVector#hashCode()": 3923.0,
        "org.apache.commons.math3.linear$RealVector#iterator()": 3853.0,
        "org.apache.commons.math3.linear$RealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 3919.0,
        "org.apache.commons.math3.linear$RealVector#mapAdd(double)": 3917.0,
        "org.apache.commons.math3.linear$RealVector#mapAddToSelf(double)": 3915.0,
        "org.apache.commons.math3.linear$RealVector#mapDivide(double)": 3909.0,
        "org.apache.commons.math3.linear$RealVector#mapDivideToSelf(double)": 3909.0,
        "org.apache.commons.math3.linear$RealVector#mapMultiply(double)": 3791.0,
        "org.apache.commons.math3.linear$RealVector#mapMultiplyToSelf(double)": 3897.0,
        "org.apache.commons.math3.linear$RealVector#mapSubtract(double)": 3913.0,
        "org.apache.commons.math3.linear$RealVector#mapSubtractToSelf(double)": 3913.0,
        "org.apache.commons.math3.linear$RealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3873.0,
        "org.apache.commons.math3.linear$RealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 3913.0,
        "org.apache.commons.math3.linear$RealVector#projection(org.apache.commons.math3.linear.RealVector)": 3895.0,
        "org.apache.commons.math3.linear$RealVector#set(double)": 3919.0,
        "org.apache.commons.math3.linear$RealVector#sparseIterator()": 3861.0,
        "org.apache.commons.math3.linear$RealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3915.0,
        "org.apache.commons.math3.linear$RealVector#toArray()": 3917.0,
        "org.apache.commons.math3.linear$RealVector#unitVector()": 3913.0,
        "org.apache.commons.math3.linear$RealVector#unitize()": 3913.0,
        "org.apache.commons.math3.linear$RealVector#unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)": 3867.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3915.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3907.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3915.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3907.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3919.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3915.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3919.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3915.0,
        "org.apache.commons.math3.linear$RealVector$1#hasNext()": 3853.0,
        "org.apache.commons.math3.linear$RealVector$1#next()": 3853.0,
        "org.apache.commons.math3.linear$RealVector$1#remove()": 3917.0,
        "org.apache.commons.math3.linear$RealVector$2#add(org.apache.commons.math3.linear.RealVector)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#addToEntry(int,double)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#append(double)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#append(org.apache.commons.math3.linear.RealVector)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#combine(double,double,org.apache.commons.math3.linear.RealVector)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#copy()": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#cosine(org.apache.commons.math3.linear.RealVector)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#dotProduct(org.apache.commons.math3.linear.RealVector)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeDivide(org.apache.commons.math3.linear.RealVector)": 3923.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 3923.0,
        "org.apache.commons.math3.linear$RealVector$2#getDimension()": 3911.0,
        "org.apache.commons.math3.linear$RealVector$2#getDistance(org.apache.commons.math3.linear.RealVector)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#getEntry(int)": 3907.0,
        "org.apache.commons.math3.linear$RealVector$2#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#getL1Norm()": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#getLInfNorm()": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#getNorm()": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#getSubVector(int,int)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#isInfinite()": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#isNaN()": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#iterator()": 3915.0,
        "org.apache.commons.math3.linear$RealVector$2#map(org.apache.commons.math3.analysis.UnivariateFunction)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#mapAdd(double)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#mapAddToSelf(double)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#mapDivide(double)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#mapDivideToSelf(double)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiply(double)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiplyToSelf(double)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtract(double)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtractToSelf(double)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#outerProduct(org.apache.commons.math3.linear.RealVector)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#set(double)": 3917.0,
        "org.apache.commons.math3.linear$RealVector$2#setEntry(int,double)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#sparseIterator()": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#subtract(org.apache.commons.math3.linear.RealVector)": 3915.0,
        "org.apache.commons.math3.linear$RealVector$2#toArray()": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#unitVector()": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2#unitize()": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2$1#hasNext()": 3915.0,
        "org.apache.commons.math3.linear$RealVector$2$1#next()": 3915.0,
        "org.apache.commons.math3.linear$RealVector$2$1#remove()": 3923.0,
        "org.apache.commons.math3.linear$RealVector$2$2#hasNext()": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2$2#next()": 3919.0,
        "org.apache.commons.math3.linear$RealVector$2$2#remove()": 3923.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2)": 3911.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#getValue()": 3911.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#setValue(double)": 3915.0,
        "org.apache.commons.math3.linear$RealVector$Entry#RealVector$Entry(org.apache.commons.math3.linear.RealVector)": 3775.0,
        "org.apache.commons.math3.linear$RealVector$Entry#getIndex()": 3801.0,
        "org.apache.commons.math3.linear$RealVector$Entry#getValue()": 3807.0,
        "org.apache.commons.math3.linear$RealVector$Entry#setIndex(int)": 3775.0,
        "org.apache.commons.math3.linear$RealVector$Entry#setValue(double)": 3873.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#RealVector$SparseEntryIterator(org.apache.commons.math3.linear.RealVector)": 3861.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#advance(org.apache.commons.math3.linear.RealVector$Entry)": 3861.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#hasNext()": 3861.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#next()": 3865.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#remove()": 3923.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat()": 3907.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String)": 3923.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 12263581.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.text.NumberFormat)": 12263581.0,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector)": 3879.0,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition)": 3879.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getAvailableLocales()": 3923.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getFormat()": 3919.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance()": 12333731.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance(java.util.Locale)": 12263581.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getPrefix()": 3923.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSeparator()": 3923.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSuffix()": 3923.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String)": 3867.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String,java.text.ParsePosition)": 3851.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#TriDiagonalTransformer(org.apache.commons.math3.linear.RealMatrix)": 15038837.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getHouseholderVectorsRef()": 3923.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getMainDiagonalRef()": 15100957.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getQ()": 15069881.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getQT()": 15062117.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getSecondaryDiagonalRef()": 15100957.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getT()": 3913.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#transform()": 15046595.0,
        "org.apache.commons.math3.optimization$AbstractConvergenceChecker#<clinit>()": 14684131.0,
        "org.apache.commons.math3.optimization$AbstractConvergenceChecker#AbstractConvergenceChecker()": 15217777.0,
        "org.apache.commons.math3.optimization$AbstractConvergenceChecker#AbstractConvergenceChecker(double,double)": 3785.0,
        "org.apache.commons.math3.optimization$AbstractConvergenceChecker#getAbsoluteThreshold()": 14783945.0,
        "org.apache.commons.math3.optimization$AbstractConvergenceChecker#getRelativeThreshold()": 14776255.0,
        "org.apache.commons.math3.optimization$GoalType#<clinit>()": 14409487.0,
        "org.apache.commons.math3.optimization$GoalType#GoalType(java.lang.String,int)": 14409487.0,
        "org.apache.commons.math3.optimization$PointValuePair#PointValuePair(double[],double)": 14622875.0,
        "org.apache.commons.math3.optimization$PointValuePair#PointValuePair(double[],double,boolean)": 14622875.0,
        "org.apache.commons.math3.optimization$PointValuePair#getPoint()": 14822425.0,
        "org.apache.commons.math3.optimization$PointValuePair#getPointRef()": 3865.0,
        "org.apache.commons.math3.optimization$PointValuePair#writeReplace()": 3921.0,
        "org.apache.commons.math3.optimization$PointValuePair$DataTransferObject#PointValuePair$DataTransferObject(double[],double)": 3921.0,
        "org.apache.commons.math3.optimization$PointValuePair$DataTransferObject#readResolve()": 3921.0,
        "org.apache.commons.math3.optimization$SimpleValueChecker#SimpleValueChecker()": 15241195.0,
        "org.apache.commons.math3.optimization$SimpleValueChecker#SimpleValueChecker(double,double)": 3847.0,
        "org.apache.commons.math3.optimization$SimpleValueChecker#converged(int,org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.PointValuePair)": 15007825.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#BaseAbstractMultivariateOptimizer()": 3923.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#BaseAbstractMultivariateOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker)": 14768567.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#computeObjectiveValue(double[])": 14853245.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#getConvergenceChecker()": 14961367.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#getEvaluations()": 3859.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#getGoalType()": 14853245.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#getMaxEvaluations()": 15202175.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#getStartPoint()": 14807027.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[])": 14907257.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#optimizeInternal(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[])": 14807027.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#BaseAbstractMultivariateSimpleBoundsOptimizer()": 3923.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#BaseAbstractMultivariateSimpleBoundsOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker)": 15108731.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#getLowerBound()": 15147631.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#getUpperBound()": 15147631.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[])": 3923.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[],double[],double[])": 15108731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#<clinit>()": 15241195.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#CMAESOptimizer()": 15397775.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#CMAESOptimizer(int)": 15397775.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#CMAESOptimizer(int,double[])": 3923.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#CMAESOptimizer(int,double[],int,double,boolean,int,int,org.apache.commons.math3.random.RandomGenerator,boolean)": 15241195.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#CMAESOptimizer(int,double[],int,double,boolean,int,int,org.apache.commons.math3.random.RandomGenerator,boolean,org.apache.commons.math3.optimization.ConvergenceChecker)": 15241195.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#checkParameters()": 15264631.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#copyColumn(org.apache.commons.math3.linear.RealMatrix,int,org.apache.commons.math3.linear.RealMatrix,int)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#diag(org.apache.commons.math3.linear.RealMatrix)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#divide(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#doOptimize()": 15264631.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#eye(int,int)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#getStatisticsDHistory()": 3923.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#getStatisticsFitnessHistory()": 3923.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#getStatisticsMeanHistory()": 3923.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#getStatisticsSigmaHistory()": 3923.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#initializeCMA(double[])": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#inverse(int[])": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#log(org.apache.commons.math3.linear.RealMatrix)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#max(double[])": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#max(org.apache.commons.math3.linear.RealMatrix)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#min(double[])": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#min(org.apache.commons.math3.linear.RealMatrix)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#ones(int,int)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#push(double[],double)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#randn(int)": 3923.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#randn1(int,int)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#repmat(org.apache.commons.math3.linear.RealMatrix,int,int)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#reverse(int[])": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#selectColumns(org.apache.commons.math3.linear.RealMatrix,int[])": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#sequence(double,double,double)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#sortedIndices(double[])": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#sqrt(org.apache.commons.math3.linear.RealMatrix)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#square(org.apache.commons.math3.linear.RealMatrix)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#sumRows(org.apache.commons.math3.linear.RealMatrix)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#times(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#triu(org.apache.commons.math3.linear.RealMatrix,int)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#updateBD(double)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#updateCovariance(boolean,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix,int[],org.apache.commons.math3.linear.RealMatrix)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#updateCovarianceDiagonalOnly(boolean,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": 3923.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#updateEvolutionPaths(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#zeros(int,int)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$DoubleIndex#CMAESOptimizer$DoubleIndex(double,int)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$DoubleIndex#compareTo(org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$DoubleIndex#equals(java.lang.Object)": 3923.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$DoubleIndex#hashCode()": 3923.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#CMAESOptimizer$FitnessFunction(org.apache.commons.math3.optimization.direct.CMAESOptimizer)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#decode(double[])": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#encode(double[])": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#isFeasible(double[])": 3923.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#penalty(double[],double[])": 15389927.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#repair(double[])": 15389927.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#repairAndDecode(double[])": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#setValueRange(double)": 15303731.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#value(double[])": 15303731.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#BitsStreamGenerator()": 8339507.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#clear()": 8339507.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBoolean()": 3869.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBytes(byte[])": 3885.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextDouble()": 12130847.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextFloat()": 3869.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextGaussian()": 14853245.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt()": 3853.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt(int)": 3851.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong()": 3869.0,
        "org.apache.commons.math3.random$MersenneTwister#<clinit>()": 14424677.0,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister()": 15225581.0,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(int)": 3803.0,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(int[])": 3921.0,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(long)": 3835.0,
        "org.apache.commons.math3.random$MersenneTwister#next(int)": 14783945.0,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(int)": 14424677.0,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(int[])": 14768567.0,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(long)": 14776255.0,
        "org.apache.commons.math3.util$CompositeFormat#CompositeFormat()": 3923.0,
        "org.apache.commons.math3.util$CompositeFormat#formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)": 3741.0,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat()": 11826235.0,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat(java.util.Locale)": 9460927.0,
        "org.apache.commons.math3.util$CompositeFormat#parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)": 3703.0,
        "org.apache.commons.math3.util$CompositeFormat#parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)": 3707.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNextCharacter(java.lang.String,java.text.ParsePosition)": 3703.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,double,java.text.ParsePosition)": 3875.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)": 3713.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 1011131.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 3923.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 3921.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 5399375.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3919.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 3275.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 9714881.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 3879.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 3919.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 3877.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 3919.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 3877.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 3745.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 3771.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 3919.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 3841.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 3223.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 3897.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 3919.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 13556881.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 13024565.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 3867.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 3787.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 2525.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 2081.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 3893.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 3863.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 2203.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 3787.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 3919.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 3797.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 9934331.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 3921.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 8578045.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 3811.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 2999.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 3923.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 11081645.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 3919.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 11874437.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 3921.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 3387.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 3919.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 10744637.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 3853.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 3893.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 3917.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 3917.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 3921.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 12744545.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 12744545.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 2709.0,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 3549.0,
        "org.apache.commons.math3.util$FastMath#random()": 3885.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 3913.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3881.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 3883.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 3917.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 3823.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 3919.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 3899.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 3919.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 12916505.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 12873407.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 3867.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 5343731.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 3871.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 3871.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 3899.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3915.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3915.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 3433.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 3921.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 13351445.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 13351445.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 13351445.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 13351445.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 2113.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 3923.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 2121.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 3923.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 8666155.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 3923.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 8110027.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 3923.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 2113.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 2113.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 2121.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 2121.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 8666155.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor()": 11181755.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int)": 10810307.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int,org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback)": 10803731.0,
        "org.apache.commons.math3.util$Incrementor#canIncrement()": 3919.0,
        "org.apache.commons.math3.util$Incrementor#getCount()": 3593.0,
        "org.apache.commons.math3.util$Incrementor#getMaximalCount()": 15147631.0,
        "org.apache.commons.math3.util$Incrementor#incrementCount()": 11161697.0,
        "org.apache.commons.math3.util$Incrementor#incrementCount(int)": 3921.0,
        "org.apache.commons.math3.util$Incrementor#resetCount()": 11041727.0,
        "org.apache.commons.math3.util$Incrementor#setMaximalCount(int)": 11282315.0,
        "org.apache.commons.math3.util$Incrementor$1#trigger(int)": 3887.0,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 3923.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 3829.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3827.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 3639.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 3849.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 3795.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 3911.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": 15241195.0,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 3921.0,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 3911.0,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 3921.0,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 3921.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 3921.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 3921.0,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 3921.0,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 3923.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 3913.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 3923.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3921.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3921.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 3823.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 3821.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 3917.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": 3917.0,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": 3919.0,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 3923.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 3905.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 3905.0,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 3907.0,
        "org.apache.commons.math3.util$MathArrays$2#<clinit>()": 3639.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 3629.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 3629.0,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 3923.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 3889.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 3921.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 9814897.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3769.0,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 3915.0,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 3915.0,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 3919.0,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 3919.0,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 3829.0,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 3905.0,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 3851.0,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 3913.0,
        "org.apache.commons.math3.util$Pair#Pair(java.lang.Object,java.lang.Object)": 13256597.0,
        "org.apache.commons.math3.util$Pair#Pair(org.apache.commons.math3.util.Pair)": 3923.0,
        "org.apache.commons.math3.util$Pair#equals(java.lang.Object)": 3921.0,
        "org.apache.commons.math3.util$Pair#getFirst()": 3751.0,
        "org.apache.commons.math3.util$Pair#getKey()": 14107367.0,
        "org.apache.commons.math3.util$Pair#getSecond()": 3751.0,
        "org.apache.commons.math3.util$Pair#getValue()": 14424677.0,
        "org.apache.commons.math3.util$Pair#hashCode()": 3921.0,
        "org.apache.commons.math3.util$Precision#<clinit>()": 8058835.0,
        "org.apache.commons.math3.util$Precision#Precision()": 3923.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 15038837.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 3871.0,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 3631.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 12404081.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 10092581.0,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 3921.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 3923.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 3763.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 3661.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 3827.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 3921.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 3765.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 3923.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 3923.0,
        "org.apache.commons.math3.util$Precision#equalsWithRelativeTolerance(double,double,double)": 3921.0,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 3921.0,
        "org.apache.commons.math3.util$Precision#round(double,int)": 3921.0,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 3921.0,
        "org.apache.commons.math3.util$Precision#round(float,int)": 3921.0,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 3921.0,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 3921.0
    },
    "Math-21": {
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 3397.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 3357.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 3695.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 3679.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3615.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 3701.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 3701.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 3699.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 2193.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 3687.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 3701.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 3701.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2481.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 3675.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 3605.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3701.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3565.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 3607.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 3699.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 3701.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int)": 3701.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int,java.lang.Class)": 3675.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(java.lang.Integer[],java.lang.Integer[])": 3701.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,java.lang.Integer[],java.lang.Integer[])": 3623.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimension(int)": 3699.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimensions()": 3701.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimension(int)": 3699.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimensions()": 3701.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 3679.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 3647.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 3687.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 3665.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 3627.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3541.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 3611.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3557.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 3569.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3299.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 3695.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 3695.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 3641.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 3337.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 3699.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 3699.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 3699.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3685.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix()": 3697.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field)": 3557.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field,int,int)": 3495.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 3693.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int)": 3567.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int,int)": 3463.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkAdditionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3681.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkColumnIndex(int)": 3449.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkMultiplicationCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3665.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkRowIndex(int)": 3449.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int,int,int,int)": 3681.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int[],int[])": 3691.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubtractionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3693.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int,int,int,int,org.apache.commons.math3.FieldElement[][])": 3697.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int[],int[],org.apache.commons.math3.FieldElement[][])": 3697.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#equals(java.lang.Object)": 3637.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[])": 3701.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[][])": 3519.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumn(int)": 3681.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnMatrix(int)": 3695.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnVector(int)": 3689.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getData()": 3697.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getField()": 3439.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRow(int)": 3687.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowMatrix(int)": 3693.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowVector(int)": 3695.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int,int,int,int)": 3697.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int[],int[])": 3695.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getTrace()": 3695.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#hashCode()": 3695.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#isSquare()": 3625.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 3681.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 3697.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.linear.FieldVector)": 3695.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#power(int)": 3699.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 3699.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldMatrix)": 3695.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldVector)": 3701.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 3697.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 3697.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 3699.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 3699.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 3699.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 3699.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 3699.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 3699.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 3697.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 3699.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#toString()": 3697.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#transpose()": 3689.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3699.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3699.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3699.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3699.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3695.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3699.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3655.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3697.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3699.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3701.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3697.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3701.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$1#visit(int,int,org.apache.commons.math3.FieldElement)": 3695.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#start(int,int,int,int,int,int)": 3697.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#visit(int,int,org.apache.commons.math3.FieldElement)": 3697.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$3#visit(int,int,org.apache.commons.math3.FieldElement)": 3689.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#<clinit>()": 10188349.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix()": 11457903.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix(int,int)": 10817103.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 3669.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#addToEntry(int,int,double)": 3701.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int,int,int,int,double[][])": 3651.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int[],int[],double[][])": 3697.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#equals(java.lang.Object)": 3597.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumn(int)": 3631.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnMatrix(int)": 3669.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnVector(int)": 3669.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getData()": 3697.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getFrobeniusNorm()": 3675.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getNorm()": 13162305.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRow(int)": 3607.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowMatrix(int)": 3693.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowVector(int)": 3645.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int,int,int,int)": 3681.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int[],int[])": 3695.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getTrace()": 3695.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#hashCode()": 3687.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#isSquare()": 3415.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 12995923.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiplyEntry(int,int,double)": 3701.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(double[])": 3697.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(org.apache.commons.math3.linear.RealVector)": 3621.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#power(int)": 3697.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(double[])": 3699.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealMatrix)": 3695.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealVector)": 3701.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarAdd(double)": 3673.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarMultiply(double)": 3669.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumn(int,double[])": 3691.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3697.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 3659.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRow(int,double[])": 3699.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3699.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 3643.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setSubMatrix(double[][],int,int)": 3697.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 13140543.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#toString()": 3689.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#transpose()": 12588145.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3699.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3699.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3685.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3699.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3691.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3699.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 12573955.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3653.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3699.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3701.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3697.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3701.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#end()": 13162305.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#start(int,int,int,int,int,int)": 13162305.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#visit(int,int,double)": 13162305.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#end()": 3675.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#start(int,int,int,int,int,int)": 3675.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#visit(int,int,double)": 3675.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$3#visit(int,int,double)": 3695.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#start(int,int,int,int,int,int)": 3651.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#visit(int,int,double)": 3651.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$5#visit(int,int,double)": 12588145.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field)": 3697.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,int,int)": 3631.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[])": 3701.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][])": 3603.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],boolean)": 3639.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 3701.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][])": 3623.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][],boolean)": 3665.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#add(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 3697.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 3701.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copy()": 3697.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyIn(org.apache.commons.math3.FieldElement[][])": 3603.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyOut()": 3635.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#createMatrix(int,int)": 3665.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getColumnDimension()": 3543.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getData()": 3639.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getDataRef()": 3701.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getEntry(int,int)": 3569.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getRowDimension()": 3543.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 3699.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 3701.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 3697.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 3699.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 3625.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 3603.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 3699.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3699.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3699.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3699.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3699.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3697.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3699.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3657.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3697.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix()": 3693.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[])": 3693.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][])": 11812699.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][],boolean)": 3491.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(int,int)": 11750905.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#add(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 3697.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#addToEntry(int,int,double)": 3701.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copy()": 3675.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyIn(double[][])": 11798953.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyOut()": 12312883.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#createMatrix(int,int)": 12369099.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getColumnDimension()": 11215443.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getData()": 12362065.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getDataRef()": 3615.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getEntry(int,int)": 11805825.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getRowDimension()": 11222143.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 3679.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiplyEntry(int,int,double)": 3693.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#operate(double[])": 3615.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#preMultiply(double[])": 3697.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setEntry(int,int,double)": 11812699.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setSubMatrix(double[][],int,int)": 11798953.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 3699.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3699.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3699.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 13198615.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3699.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3693.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3699.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 12581049.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3653.0,
        "org.apache.commons.math3.linear$ArrayRealVector#<clinit>()": 2877.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector()": 3695.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[])": 3297.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],boolean)": 3121.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],double[])": 3699.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],int,int)": 3699.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],org.apache.commons.math3.linear.ArrayRealVector)": 3699.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int)": 3429.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int,double)": 3695.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[])": 3699.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[],int,int)": 3699.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector)": 3699.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean)": 3495.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,double[])": 3699.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector)": 3695.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.RealVector)": 3697.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector)": 3699.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.ArrayRealVector)": 3699.0,
        "org.apache.commons.math3.linear$ArrayRealVector#add(org.apache.commons.math3.linear.RealVector)": 3683.0,
        "org.apache.commons.math3.linear$ArrayRealVector#addToEntry(int,double)": 3695.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(double)": 3697.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.ArrayRealVector)": 3701.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.RealVector)": 3697.0,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(int)": 3413.0,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 3667.0,
        "org.apache.commons.math3.linear$ArrayRealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 3667.0,
        "org.apache.commons.math3.linear$ArrayRealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 3619.0,
        "org.apache.commons.math3.linear$ArrayRealVector#copy()": 3497.0,
        "org.apache.commons.math3.linear$ArrayRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 3523.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": 3687.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 3675.0,
        "org.apache.commons.math3.linear$ArrayRealVector#equals(java.lang.Object)": 3607.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDataRef()": 3597.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDimension()": 3107.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 3691.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getEntry(int)": 3213.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3693.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Norm()": 3697.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3693.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfNorm()": 3697.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getNorm()": 3589.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getSubVector(int,int)": 3687.0,
        "org.apache.commons.math3.linear$ArrayRealVector#hashCode()": 3695.0,
        "org.apache.commons.math3.linear$ArrayRealVector#isInfinite()": 3697.0,
        "org.apache.commons.math3.linear$ArrayRealVector#isNaN()": 3599.0,
        "org.apache.commons.math3.linear$ArrayRealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 3695.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapAddToSelf(double)": 3695.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapDivideToSelf(double)": 3691.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapMultiplyToSelf(double)": 3587.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapSubtractToSelf(double)": 3695.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3693.0,
        "org.apache.commons.math3.linear$ArrayRealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 3695.0,
        "org.apache.commons.math3.linear$ArrayRealVector#set(double)": 3611.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setEntry(int,double)": 3555.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,double[])": 3651.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 3649.0,
        "org.apache.commons.math3.linear$ArrayRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3549.0,
        "org.apache.commons.math3.linear$ArrayRealVector#toArray()": 3497.0,
        "org.apache.commons.math3.linear$ArrayRealVector#toString()": 3701.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3697.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3693.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3697.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3693.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3699.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3697.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3699.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3697.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(int,int,org.apache.commons.math3.FieldElement[][],boolean)": 3631.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.Field,int,int)": 3647.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.FieldElement[][])": 3631.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.BlockFieldMatrix)": 3693.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 3697.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 3701.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockHeight(int)": 3619.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockWidth(int)": 3609.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copy()": 3699.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copyBlockPart(org.apache.commons.math3.FieldElement[],int,int,int,int,int,org.apache.commons.math3.FieldElement[],int,int,int)": 3695.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createBlocksLayout(org.apache.commons.math3.Field,int,int)": 3647.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createMatrix(int,int)": 3699.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumn(int)": 3691.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnDimension()": 3619.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnMatrix(int)": 3695.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnVector(int)": 3695.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getData()": 3691.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getEntry(int,int)": 3645.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRow(int)": 3691.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowDimension()": 3617.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowMatrix(int)": 3693.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowVector(int)": 3695.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getSubMatrix(int,int,int,int)": 3695.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.BlockFieldMatrix)": 3687.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 3689.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 3701.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 3695.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 3697.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 3693.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 3699.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 3693.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 3697.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 3697.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 3697.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 3691.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 3693.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 3697.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 3697.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 3697.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 3697.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.BlockFieldMatrix)": 3697.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 3699.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#toBlocksLayout(org.apache.commons.math3.FieldElement[][])": 3631.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#transpose()": 3695.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3697.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3699.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3699.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3697.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3699.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3699.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3699.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3699.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(double[][])": 3469.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int)": 3557.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int,double[][],boolean)": 3427.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.BlockRealMatrix)": 3693.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 3697.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#addToEntry(int,int,double)": 3699.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockHeight(int)": 3413.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockWidth(int)": 3397.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#copy()": 3691.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#copyBlockPart(double[],int,int,int,int,int,double[],int,int,int)": 3693.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#createBlocksLayout(int,int)": 3517.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#createMatrix(int,int)": 3699.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumn(int)": 3659.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnDimension()": 3413.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnMatrix(int)": 3695.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnVector(int)": 3695.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getData()": 3553.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getEntry(int,int)": 3615.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getFrobeniusNorm()": 3699.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getNorm()": 3655.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRow(int)": 3691.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowDimension()": 3411.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowMatrix(int)": 3693.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowVector(int)": 3695.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getSubMatrix(int,int,int,int)": 3693.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.BlockRealMatrix)": 3675.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3675.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiplyEntry(int,int,double)": 3701.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#operate(double[])": 3619.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#preMultiply(double[])": 3697.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarAdd(double)": 3693.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarMultiply(double)": 3699.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumn(int,double[])": 3685.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 3697.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3697.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 3697.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setEntry(int,int,double)": 3653.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRow(int,double[])": 3693.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 3697.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3697.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 3697.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setSubMatrix(double[][],int,int)": 3697.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.BlockRealMatrix)": 3663.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 3657.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#toBlocksLayout(double[][])": 3469.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#transpose()": 3647.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3683.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3699.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3695.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3693.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3699.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3699.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3699.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3699.0,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#DefaultRealMatrixPreservingVisitor()": 12545599.0,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#end()": 12545599.0,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#start(int,int,int,int,int,int)": 12573955.0,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#visit(int,int,double)": 3701.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#MatrixDimensionMismatchException(int,int,int,int)": 3623.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedColumnDimension()": 3699.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedRowDimension()": 3699.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongColumnDimension()": 3699.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongRowDimension()": 3699.0,
        "org.apache.commons.math3.linear$MatrixUtils#<clinit>()": 10751413.0,
        "org.apache.commons.math3.linear$MatrixUtils#MatrixUtils()": 3701.0,
        "org.apache.commons.math3.linear$MatrixUtils#bigFractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 3671.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkAdditionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 3641.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 11015373.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)": 11242255.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 12809113.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 11022013.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int,int,int)": 3617.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int[],int[])": 3691.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubtractionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 13003135.0,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnFieldMatrix(org.apache.commons.math3.FieldElement[])": 3699.0,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnRealMatrix(double[])": 3675.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldDiagonalMatrix(org.apache.commons.math3.FieldElement[])": 3701.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldIdentityMatrix(org.apache.commons.math3.Field,int)": 3697.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.Field,int,int)": 3697.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.FieldElement[][])": 3699.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldVector(org.apache.commons.math3.FieldElement[])": 3701.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealDiagonalMatrix(double[])": 3663.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealIdentityMatrix(int)": 3593.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(double[][])": 12418393.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(int,int)": 12923913.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealVector(double[])": 3699.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 3699.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRowRealMatrix(double[])": 3699.0,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealMatrix(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 3699.0,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealVector(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 3699.0,
        "org.apache.commons.math3.linear$MatrixUtils#fractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 3699.0,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealMatrix(org.apache.commons.math3.linear.RealMatrix,java.io.ObjectOutputStream)": 3699.0,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealVector(org.apache.commons.math3.linear.RealVector,java.io.ObjectOutputStream)": 3699.0,
        "org.apache.commons.math3.linear$MatrixUtils#solveLowerTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 3699.0,
        "org.apache.commons.math3.linear$MatrixUtils#solveUpperTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 3699.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#MatrixUtils$BigFractionMatrixConverter()": 3671.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#getConvertedMatrix()": 3671.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#start(int,int,int,int,int,int)": 3671.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.BigFraction)": 3671.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#MatrixUtils$FractionMatrixConverter()": 3699.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#getConvertedMatrix()": 3699.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#start(int,int,int,int,int,int)": 3699.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.Fraction)": 3699.0,
        "org.apache.commons.math3.linear$NonPositiveDefiniteMatrixException#NonPositiveDefiniteMatrixException(double,int,double)": 3697.0,
        "org.apache.commons.math3.linear$NonPositiveDefiniteMatrixException#getColumn()": 3701.0,
        "org.apache.commons.math3.linear$NonPositiveDefiniteMatrixException#getRow()": 3701.0,
        "org.apache.commons.math3.linear$NonPositiveDefiniteMatrixException#getThreshold()": 3701.0,
        "org.apache.commons.math3.linear$NonSquareMatrixException#NonSquareMatrixException(int,int)": 3673.0,
        "org.apache.commons.math3.linear$RealLinearOperator#RealLinearOperator()": 9959785.0,
        "org.apache.commons.math3.linear$RealLinearOperator#isTransposable()": 3701.0,
        "org.apache.commons.math3.linear$RealLinearOperator#operateTranspose(org.apache.commons.math3.linear.RealVector)": 3701.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat()": 3699.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 10751413.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 10130965.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.text.NumberFormat)": 10130965.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix)": 3667.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition)": 3667.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getAvailableLocales()": 3701.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getColumnSeparator()": 3701.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getFormat()": 10181965.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance()": 10751413.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance(java.util.Locale)": 10130965.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getPrefix()": 3701.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowPrefix()": 3701.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSeparator()": 3701.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSuffix()": 3701.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getSuffix()": 3701.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String)": 3677.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String,java.text.ParsePosition)": 3669.0,
        "org.apache.commons.math3.linear$RealVector#RealVector()": 2505.0,
        "org.apache.commons.math3.linear$RealVector#add(org.apache.commons.math3.linear.RealVector)": 3693.0,
        "org.apache.commons.math3.linear$RealVector#addToEntry(int,double)": 3689.0,
        "org.apache.commons.math3.linear$RealVector#checkIndex(int)": 3353.0,
        "org.apache.commons.math3.linear$RealVector#checkIndices(int,int)": 3653.0,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(int)": 3559.0,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 3581.0,
        "org.apache.commons.math3.linear$RealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 3683.0,
        "org.apache.commons.math3.linear$RealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 3667.0,
        "org.apache.commons.math3.linear$RealVector#cosine(org.apache.commons.math3.linear.RealVector)": 3667.0,
        "org.apache.commons.math3.linear$RealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 3645.0,
        "org.apache.commons.math3.linear$RealVector#equals(java.lang.Object)": 3701.0,
        "org.apache.commons.math3.linear$RealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 3693.0,
        "org.apache.commons.math3.linear$RealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3693.0,
        "org.apache.commons.math3.linear$RealVector#getL1Norm()": 3697.0,
        "org.apache.commons.math3.linear$RealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3693.0,
        "org.apache.commons.math3.linear$RealVector#getLInfNorm()": 3697.0,
        "org.apache.commons.math3.linear$RealVector#getMaxIndex()": 3691.0,
        "org.apache.commons.math3.linear$RealVector#getMaxValue()": 3691.0,
        "org.apache.commons.math3.linear$RealVector#getMinIndex()": 3691.0,
        "org.apache.commons.math3.linear$RealVector#getMinValue()": 3691.0,
        "org.apache.commons.math3.linear$RealVector#getNorm()": 3657.0,
        "org.apache.commons.math3.linear$RealVector#hashCode()": 3701.0,
        "org.apache.commons.math3.linear$RealVector#iterator()": 3631.0,
        "org.apache.commons.math3.linear$RealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 3697.0,
        "org.apache.commons.math3.linear$RealVector#mapAdd(double)": 3695.0,
        "org.apache.commons.math3.linear$RealVector#mapAddToSelf(double)": 3693.0,
        "org.apache.commons.math3.linear$RealVector#mapDivide(double)": 3687.0,
        "org.apache.commons.math3.linear$RealVector#mapDivideToSelf(double)": 3687.0,
        "org.apache.commons.math3.linear$RealVector#mapMultiply(double)": 3569.0,
        "org.apache.commons.math3.linear$RealVector#mapMultiplyToSelf(double)": 3675.0,
        "org.apache.commons.math3.linear$RealVector#mapSubtract(double)": 3691.0,
        "org.apache.commons.math3.linear$RealVector#mapSubtractToSelf(double)": 3691.0,
        "org.apache.commons.math3.linear$RealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3651.0,
        "org.apache.commons.math3.linear$RealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 3691.0,
        "org.apache.commons.math3.linear$RealVector#projection(org.apache.commons.math3.linear.RealVector)": 3673.0,
        "org.apache.commons.math3.linear$RealVector#set(double)": 3697.0,
        "org.apache.commons.math3.linear$RealVector#sparseIterator()": 3639.0,
        "org.apache.commons.math3.linear$RealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3693.0,
        "org.apache.commons.math3.linear$RealVector#toArray()": 3695.0,
        "org.apache.commons.math3.linear$RealVector#unitVector()": 3691.0,
        "org.apache.commons.math3.linear$RealVector#unitize()": 3691.0,
        "org.apache.commons.math3.linear$RealVector#unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)": 3645.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3693.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3685.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3693.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3685.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3697.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3693.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3697.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3693.0,
        "org.apache.commons.math3.linear$RealVector$1#hasNext()": 3631.0,
        "org.apache.commons.math3.linear$RealVector$1#next()": 3631.0,
        "org.apache.commons.math3.linear$RealVector$1#remove()": 3695.0,
        "org.apache.commons.math3.linear$RealVector$2#add(org.apache.commons.math3.linear.RealVector)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#addToEntry(int,double)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#append(double)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#append(org.apache.commons.math3.linear.RealVector)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#combine(double,double,org.apache.commons.math3.linear.RealVector)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#copy()": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#cosine(org.apache.commons.math3.linear.RealVector)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#dotProduct(org.apache.commons.math3.linear.RealVector)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeDivide(org.apache.commons.math3.linear.RealVector)": 3701.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 3701.0,
        "org.apache.commons.math3.linear$RealVector$2#getDimension()": 3689.0,
        "org.apache.commons.math3.linear$RealVector$2#getDistance(org.apache.commons.math3.linear.RealVector)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#getEntry(int)": 3685.0,
        "org.apache.commons.math3.linear$RealVector$2#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#getL1Norm()": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#getLInfNorm()": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#getNorm()": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#getSubVector(int,int)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#isInfinite()": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#isNaN()": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#iterator()": 3693.0,
        "org.apache.commons.math3.linear$RealVector$2#map(org.apache.commons.math3.analysis.UnivariateFunction)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#mapAdd(double)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#mapAddToSelf(double)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#mapDivide(double)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#mapDivideToSelf(double)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiply(double)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiplyToSelf(double)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtract(double)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtractToSelf(double)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#outerProduct(org.apache.commons.math3.linear.RealVector)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#set(double)": 3695.0,
        "org.apache.commons.math3.linear$RealVector$2#setEntry(int,double)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#sparseIterator()": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#subtract(org.apache.commons.math3.linear.RealVector)": 3693.0,
        "org.apache.commons.math3.linear$RealVector$2#toArray()": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#unitVector()": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2#unitize()": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2$1#hasNext()": 3693.0,
        "org.apache.commons.math3.linear$RealVector$2$1#next()": 3693.0,
        "org.apache.commons.math3.linear$RealVector$2$1#remove()": 3701.0,
        "org.apache.commons.math3.linear$RealVector$2$2#hasNext()": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2$2#next()": 3697.0,
        "org.apache.commons.math3.linear$RealVector$2$2#remove()": 3701.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2)": 3689.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#getValue()": 3689.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#setValue(double)": 3693.0,
        "org.apache.commons.math3.linear$RealVector$Entry#RealVector$Entry(org.apache.commons.math3.linear.RealVector)": 3553.0,
        "org.apache.commons.math3.linear$RealVector$Entry#getIndex()": 3579.0,
        "org.apache.commons.math3.linear$RealVector$Entry#getValue()": 3585.0,
        "org.apache.commons.math3.linear$RealVector$Entry#setIndex(int)": 3553.0,
        "org.apache.commons.math3.linear$RealVector$Entry#setValue(double)": 3651.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#RealVector$SparseEntryIterator(org.apache.commons.math3.linear.RealVector)": 3639.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#advance(org.apache.commons.math3.linear.RealVector$Entry)": 3639.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#hasNext()": 3639.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#next()": 3643.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#remove()": 3701.0,
        "org.apache.commons.math3.linear$RectangularCholeskyDecomposition#RectangularCholeskyDecomposition(org.apache.commons.math3.linear.RealMatrix,double)": 13675195.0,
        "org.apache.commons.math3.linear$RectangularCholeskyDecomposition#getRank()": 13682593.0,
        "org.apache.commons.math3.linear$RectangularCholeskyDecomposition#getRootMatrix()": 13675195.0,
        "org.apache.commons.math3.util$CompositeFormat#CompositeFormat()": 3701.0,
        "org.apache.commons.math3.util$CompositeFormat#formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)": 3519.0,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat()": 10620633.0,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat(java.util.Locale)": 8173033.0,
        "org.apache.commons.math3.util$CompositeFormat#parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)": 3481.0,
        "org.apache.commons.math3.util$CompositeFormat#parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)": 3485.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNextCharacter(java.lang.String,java.text.ParsePosition)": 3481.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,double,java.text.ParsePosition)": 3653.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)": 3491.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 659703.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 3701.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 3699.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 4475865.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3697.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 3053.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 8432413.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 3659.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 3697.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 3657.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 3697.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 3655.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 3525.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 3549.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 3697.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 3619.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 3001.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 3675.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 3697.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 3225.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 3079.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 3647.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 3567.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 2307.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 1865.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 3671.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 3643.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 1981.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 3567.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 3697.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 3577.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 2157.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 3699.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1711.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 3589.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 2777.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 3701.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 9708865.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 3697.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 2925.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 3699.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 3165.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 3697.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 2437.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 3631.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 3673.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 3695.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 3697.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 3699.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 3001.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 3001.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 2487.0,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 3353.0,
        "org.apache.commons.math3.util$FastMath#random()": 3663.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 3691.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3659.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 3661.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 3695.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 3603.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 3697.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 3677.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 3697.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 3049.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 3037.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 3647.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 4429423.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 3649.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 3649.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 3677.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3693.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3693.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 3211.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 3699.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 3165.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 3165.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 3165.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 3165.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 1897.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 3701.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 1905.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 3701.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1741.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 3701.0,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 3701.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 3667.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 3699.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 8502265.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3547.0,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 3693.0,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 3693.0,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 3697.0,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 3697.0,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 3607.0,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 3683.0,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 3629.0,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 3691.0
    },
    "Math-22": {
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#BaseAbstractUnivariateIntegrator(double,double)": 3440.0,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#BaseAbstractUnivariateIntegrator(double,double,int,int)": 3372.0,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#BaseAbstractUnivariateIntegrator(int,int)": 3420.0,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#computeObjectiveValue(double)": 3378.0,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#getAbsoluteAccuracy()": 3380.0,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#getEvaluations()": 3424.0,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#getIterations()": 3424.0,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#getMax()": 3378.0,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#getMaximalIterationCount()": 3440.0,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#getMin()": 3378.0,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#getMinimalIterationCount()": 3378.0,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#getRelativeAccuracy()": 3378.0,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#integrate(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 3372.0,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#setup(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 3372.0,
        "org.apache.commons.math3.analysis.integration$IterativeLegendreGaussIntegrator#<clinit>()": 3400.0,
        "org.apache.commons.math3.analysis.integration$IterativeLegendreGaussIntegrator#IterativeLegendreGaussIntegrator(int,double,double)": 3418.0,
        "org.apache.commons.math3.analysis.integration$IterativeLegendreGaussIntegrator#IterativeLegendreGaussIntegrator(int,double,double,int,int)": 3400.0,
        "org.apache.commons.math3.analysis.integration$IterativeLegendreGaussIntegrator#IterativeLegendreGaussIntegrator(int,int,int)": 3438.0,
        "org.apache.commons.math3.analysis.integration$IterativeLegendreGaussIntegrator#doIntegrate()": 3400.0,
        "org.apache.commons.math3.analysis.integration$IterativeLegendreGaussIntegrator#stage(int)": 3400.0,
        "org.apache.commons.math3.analysis.integration$IterativeLegendreGaussIntegrator$1#value(double)": 3400.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#AbstractRealDistribution()": 3440.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#AbstractRealDistribution(org.apache.commons.math3.random.RandomGenerator)": 8133312.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#cumulativeProbability(double,double)": 3358.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#getSolverAbsoluteAccuracy()": 3436.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#inverseCumulativeProbability(double)": 3228.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#probability(double)": 3440.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#probability(double,double)": 3352.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#reseedRandomGenerator(long)": 3418.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#sample()": 3298.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#sample(int)": 3416.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution$1#value(double)": 3252.0,
        "org.apache.commons.math3.distribution$FDistribution#FDistribution(double,double)": 11641712.0,
        "org.apache.commons.math3.distribution$FDistribution#FDistribution(double,double,double)": 11641712.0,
        "org.apache.commons.math3.distribution$FDistribution#FDistribution(org.apache.commons.math3.random.RandomGenerator,double,double,double)": 11641712.0,
        "org.apache.commons.math3.distribution$FDistribution#calculateNumericalVariance()": 3406.0,
        "org.apache.commons.math3.distribution$FDistribution#cumulativeProbability(double)": 3394.0,
        "org.apache.commons.math3.distribution$FDistribution#density(double)": 11826716.0,
        "org.apache.commons.math3.distribution$FDistribution#getDenominatorDegreesOfFreedom()": 3404.0,
        "org.apache.commons.math3.distribution$FDistribution#getNumeratorDegreesOfFreedom()": 3406.0,
        "org.apache.commons.math3.distribution$FDistribution#getNumericalMean()": 3406.0,
        "org.apache.commons.math3.distribution$FDistribution#getNumericalVariance()": 3406.0,
        "org.apache.commons.math3.distribution$FDistribution#getSolverAbsoluteAccuracy()": 3408.0,
        "org.apache.commons.math3.distribution$FDistribution#getSupportLowerBound()": 11730606.0,
        "org.apache.commons.math3.distribution$FDistribution#getSupportUpperBound()": 3404.0,
        "org.apache.commons.math3.distribution$FDistribution#isSupportConnected()": 3408.0,
        "org.apache.commons.math3.distribution$FDistribution#isSupportLowerBoundInclusive()": 11847362.0,
        "org.apache.commons.math3.distribution$FDistribution#isSupportUpperBoundInclusive()": 3438.0,
        "org.apache.commons.math3.distribution$UniformRealDistribution#UniformRealDistribution()": 3440.0,
        "org.apache.commons.math3.distribution$UniformRealDistribution#UniformRealDistribution(double,double)": 11730606.0,
        "org.apache.commons.math3.distribution$UniformRealDistribution#UniformRealDistribution(double,double,double)": 11730606.0,
        "org.apache.commons.math3.distribution$UniformRealDistribution#UniformRealDistribution(org.apache.commons.math3.random.RandomGenerator,double,double,double)": 11710062.0,
        "org.apache.commons.math3.distribution$UniformRealDistribution#cumulativeProbability(double)": 3430.0,
        "org.apache.commons.math3.distribution$UniformRealDistribution#density(double)": 11826716.0,
        "org.apache.commons.math3.distribution$UniformRealDistribution#getNumericalMean()": 3434.0,
        "org.apache.commons.math3.distribution$UniformRealDistribution#getNumericalVariance()": 3434.0,
        "org.apache.commons.math3.distribution$UniformRealDistribution#getSolverAbsoluteAccuracy()": 3436.0,
        "org.apache.commons.math3.distribution$UniformRealDistribution#getSupportLowerBound()": 3432.0,
        "org.apache.commons.math3.distribution$UniformRealDistribution#getSupportUpperBound()": 11826716.0,
        "org.apache.commons.math3.distribution$UniformRealDistribution#isSupportConnected()": 3436.0,
        "org.apache.commons.math3.distribution$UniformRealDistribution#isSupportLowerBoundInclusive()": 3438.0,
        "org.apache.commons.math3.distribution$UniformRealDistribution#isSupportUpperBoundInclusive()": 11847362.0,
        "org.apache.commons.math3.distribution$UniformRealDistribution#sample()": 3424.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 1934.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 3426.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 3440.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 3440.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2268.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 3414.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 3344.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3440.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3302.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 3346.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 3438.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 3440.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 3398.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 3398.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 3414.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 3366.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3280.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 3386.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3240.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 3438.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 3438.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 3308.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3038.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 3434.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 3434.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 3380.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 3076.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 3438.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 3438.0,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int)": 7946136.0,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,int)": 2706.0,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,int[])": 6119706.0,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,long)": 2080.0,
        "org.apache.commons.math3.random$AbstractWell#setSeed(int)": 3428.0,
        "org.apache.commons.math3.random$AbstractWell#setSeed(int[])": 6119706.0,
        "org.apache.commons.math3.random$AbstractWell#setSeed(long)": 6214098.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#BitsStreamGenerator()": 5797428.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#clear()": 5797428.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBoolean()": 3386.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBytes(byte[])": 3402.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextDouble()": 2558.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextFloat()": 3386.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextGaussian()": 3300.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt()": 3370.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt(int)": 3368.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong()": 3386.0,
        "org.apache.commons.math3.random$RandomDataGenerator#RandomDataGenerator()": 6080178.0,
        "org.apache.commons.math3.random$RandomDataGenerator#RandomDataGenerator(org.apache.commons.math3.random.RandomGenerator)": 2240.0,
        "org.apache.commons.math3.random$RandomDataGenerator#getNatural(int)": 3392.0,
        "org.apache.commons.math3.random$RandomDataGenerator#getRan()": 2094.0,
        "org.apache.commons.math3.random$RandomDataGenerator#getSecRan()": 3404.0,
        "org.apache.commons.math3.random$RandomDataGenerator#initRan()": 2096.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextBeta(double,double)": 3418.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextBinomial(int,double)": 3418.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextCauchy(double,double)": 3418.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextChiSquare(double)": 3418.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextExponential(double)": 3414.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextF(double,double)": 3418.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextGamma(double,double)": 3418.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextGaussian(double,double)": 3404.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextHexString(int)": 3418.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextHypergeometric(int,int,int)": 3418.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextInt(int,int)": 3302.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextLong(long,long)": 3306.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPascal(int,double)": 3418.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPermutation(int,int)": 3392.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPoisson(double)": 3396.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSample(java.util.Collection,int)": 3416.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureHexString(int)": 3416.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureInt(int,int)": 3432.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureLong(long,long)": 3410.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextT(double)": 3418.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextUniform(double,double)": 3204.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextUniform(double,double,boolean)": 3204.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextWeibull(double,double)": 3418.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextZipf(int,double)": 3418.0,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeed()": 3418.0,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeed(long)": 2106.0,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeedSecure()": 3418.0,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeedSecure(long)": 3418.0,
        "org.apache.commons.math3.random$RandomDataGenerator#setSecureAlgorithm(java.lang.String,java.lang.String)": 3440.0,
        "org.apache.commons.math3.random$RandomDataGenerator#shuffle(int[],int)": 3392.0,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl()": 6080178.0,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl(org.apache.commons.math3.random.RandomGenerator)": 2240.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextBeta(double,double)": 3418.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextBinomial(int,double)": 3418.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextCauchy(double,double)": 3418.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextChiSquare(double)": 3418.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextExponential(double)": 3414.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextF(double,double)": 3418.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextGamma(double,double)": 3418.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextGaussian(double,double)": 3404.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextHexString(int)": 3418.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextHypergeometric(int,int,int)": 3418.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInt(int,int)": 3350.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.IntegerDistribution)": 3440.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.RealDistribution)": 3418.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextLong(long,long)": 3306.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextPascal(int,double)": 3418.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextPermutation(int,int)": 3416.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextPoisson(double)": 3396.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSample(java.util.Collection,int)": 3416.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureHexString(int)": 3416.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureInt(int,int)": 3432.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureLong(long,long)": 3410.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextT(double)": 3418.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double)": 3204.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double,boolean)": 3440.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextWeibull(double,double)": 3418.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextZipf(int,double)": 3418.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed()": 3418.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed(long)": 2106.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure()": 3418.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure(long)": 3418.0,
        "org.apache.commons.math3.random$RandomDataImpl#setSecureAlgorithm(java.lang.String,java.lang.String)": 3440.0,
        "org.apache.commons.math3.random$Well19937c#Well19937c()": 7946136.0,
        "org.apache.commons.math3.random$Well19937c#Well19937c(int)": 3306.0,
        "org.apache.commons.math3.random$Well19937c#Well19937c(int[])": 3438.0,
        "org.apache.commons.math3.random$Well19937c#Well19937c(long)": 2096.0,
        "org.apache.commons.math3.random$Well19937c#next(int)": 3160.0,
        "org.apache.commons.math3.special$Beta#Beta()": 3440.0,
        "org.apache.commons.math3.special$Beta#logBeta(double,double)": 11778612.0,
        "org.apache.commons.math3.special$Beta#logBeta(double,double,double,int)": 10929498.0,
        "org.apache.commons.math3.special$Beta#regularizedBeta(double,double,double)": 3170.0,
        "org.apache.commons.math3.special$Beta#regularizedBeta(double,double,double,double)": 3440.0,
        "org.apache.commons.math3.special$Beta#regularizedBeta(double,double,double,double,int)": 3170.0,
        "org.apache.commons.math3.special$Beta#regularizedBeta(double,double,double,int)": 3440.0,
        "org.apache.commons.math3.special$Beta$1#getA(int,double)": 3186.0,
        "org.apache.commons.math3.special$Beta$1#getB(int,double)": 3186.0,
        "org.apache.commons.math3.special$Gamma#<clinit>()": 8648978.0,
        "org.apache.commons.math3.special$Gamma#Gamma()": 3440.0,
        "org.apache.commons.math3.special$Gamma#digamma(double)": 3436.0,
        "org.apache.commons.math3.special$Gamma#gamma(double)": 3438.0,
        "org.apache.commons.math3.special$Gamma#invGamma1pm1(double)": 8963586.0,
        "org.apache.commons.math3.special$Gamma#lanczos(double)": 2634.0,
        "org.apache.commons.math3.special$Gamma#logGamma(double)": 8885898.0,
        "org.apache.commons.math3.special$Gamma#logGamma1p(double)": 8975568.0,
        "org.apache.commons.math3.special$Gamma#regularizedGammaP(double,double)": 2748.0,
        "org.apache.commons.math3.special$Gamma#regularizedGammaP(double,double,double,int)": 2670.0,
        "org.apache.commons.math3.special$Gamma#regularizedGammaQ(double,double)": 3426.0,
        "org.apache.commons.math3.special$Gamma#regularizedGammaQ(double,double,double,int)": 2978.0,
        "org.apache.commons.math3.special$Gamma#trigamma(double)": 3438.0,
        "org.apache.commons.math3.special$Gamma$1#getA(int,double)": 3008.0,
        "org.apache.commons.math3.special$Gamma$1#getB(int,double)": 3008.0,
        "org.apache.commons.math3.util$ContinuedFraction#ContinuedFraction()": 2768.0,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double)": 3440.0,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double,double)": 3438.0,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double,double,int)": 2768.0,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double,int)": 3440.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 308478.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 3440.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 3438.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 272.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3436.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 2792.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 1846.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 3398.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 3436.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 3396.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 3436.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 3394.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 3264.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 3288.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 3436.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 3358.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 2740.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 3414.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 3436.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 2966.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 2820.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 3386.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 3306.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 7539818.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 6374706.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 3410.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 3382.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 6671028.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 3306.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 3436.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 3316.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 7133468.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 3438.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 5991708.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 3328.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 8885898.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 3440.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 2266.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 3436.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 2676.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 3438.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 2906.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 3436.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 2188.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 3370.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 3412.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 3434.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 3436.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 3438.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 2742.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 2742.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 2226.0,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 3092.0,
        "org.apache.commons.math3.util$FastMath#random()": 3402.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 3430.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3398.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 3400.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 3434.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 3342.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 3436.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 3416.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 3436.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 2790.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 2778.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 3386.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 248.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 3388.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 3388.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 3416.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3432.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3432.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 2950.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 3438.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 2906.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 2906.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 2906.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 2906.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 6455778.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 3440.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 6476126.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 3440.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 6065388.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 3440.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 5615826.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 3440.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 6455778.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 6455778.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 6476126.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 6476126.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 6065388.0
    },
    "Math-23": {
        "org.apache.commons.math3.analysis$FunctionUtils#FunctionUtils()": 3343.0,
        "org.apache.commons.math3.analysis$FunctionUtils#add(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[])": 3339.0,
        "org.apache.commons.math3.analysis$FunctionUtils#add(org.apache.commons.math3.analysis.UnivariateFunction[])": 11168961.0,
        "org.apache.commons.math3.analysis$FunctionUtils#add(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[])": 3343.0,
        "org.apache.commons.math3.analysis$FunctionUtils#collector(org.apache.commons.math3.analysis.BivariateFunction,double)": 3341.0,
        "org.apache.commons.math3.analysis$FunctionUtils#collector(org.apache.commons.math3.analysis.BivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction,double)": 3341.0,
        "org.apache.commons.math3.analysis$FunctionUtils#combine(org.apache.commons.math3.analysis.BivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction)": 3339.0,
        "org.apache.commons.math3.analysis$FunctionUtils#compose(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[])": 3339.0,
        "org.apache.commons.math3.analysis$FunctionUtils#compose(org.apache.commons.math3.analysis.UnivariateFunction[])": 3337.0,
        "org.apache.commons.math3.analysis$FunctionUtils#compose(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[])": 3339.0,
        "org.apache.commons.math3.analysis$FunctionUtils#fix1stArgument(org.apache.commons.math3.analysis.BivariateFunction,double)": 3341.0,
        "org.apache.commons.math3.analysis$FunctionUtils#fix2ndArgument(org.apache.commons.math3.analysis.BivariateFunction,double)": 3295.0,
        "org.apache.commons.math3.analysis$FunctionUtils#multiply(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[])": 3339.0,
        "org.apache.commons.math3.analysis$FunctionUtils#multiply(org.apache.commons.math3.analysis.UnivariateFunction[])": 3341.0,
        "org.apache.commons.math3.analysis$FunctionUtils#multiply(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[])": 3343.0,
        "org.apache.commons.math3.analysis$FunctionUtils#sample(org.apache.commons.math3.analysis.UnivariateFunction,double,double,int)": 3277.0,
        "org.apache.commons.math3.analysis$FunctionUtils#toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable)": 3331.0,
        "org.apache.commons.math3.analysis$FunctionUtils#toUnivariateDifferential(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction)": 3343.0,
        "org.apache.commons.math3.analysis$FunctionUtils$1#value(double)": 3337.0,
        "org.apache.commons.math3.analysis$FunctionUtils$10#value(double)": 3339.0,
        "org.apache.commons.math3.analysis$FunctionUtils$11#value(double[])": 3341.0,
        "org.apache.commons.math3.analysis$FunctionUtils$12#value(double)": 3341.0,
        "org.apache.commons.math3.analysis$FunctionUtils$13#value(double)": 3295.0,
        "org.apache.commons.math3.analysis$FunctionUtils$14#derivative()": 3331.0,
        "org.apache.commons.math3.analysis$FunctionUtils$14#value(double)": 3343.0,
        "org.apache.commons.math3.analysis$FunctionUtils$14$1#value(double)": 3333.0,
        "org.apache.commons.math3.analysis$FunctionUtils$2#value(double)": 3343.0,
        "org.apache.commons.math3.analysis$FunctionUtils$2#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3339.0,
        "org.apache.commons.math3.analysis$FunctionUtils$3#derivative()": 3339.0,
        "org.apache.commons.math3.analysis$FunctionUtils$3#value(double)": 3341.0,
        "org.apache.commons.math3.analysis$FunctionUtils$3$1#value(double)": 3339.0,
        "org.apache.commons.math3.analysis$FunctionUtils$4#value(double)": 11168961.0,
        "org.apache.commons.math3.analysis$FunctionUtils$6#derivative()": 3339.0,
        "org.apache.commons.math3.analysis$FunctionUtils$6#value(double)": 3343.0,
        "org.apache.commons.math3.analysis$FunctionUtils$6$1#value(double)": 3339.0,
        "org.apache.commons.math3.analysis$FunctionUtils$7#value(double)": 3341.0,
        "org.apache.commons.math3.analysis$FunctionUtils$9#derivative()": 3339.0,
        "org.apache.commons.math3.analysis$FunctionUtils$9#value(double)": 3343.0,
        "org.apache.commons.math3.analysis$FunctionUtils$9$1#value(double)": 3339.0,
        "org.apache.commons.math3.analysis.function$Sin#Sin()": 10549407.0,
        "org.apache.commons.math3.analysis.function$Sin#derivative()": 3339.0,
        "org.apache.commons.math3.analysis.function$Sin#value(double)": 10666677.0,
        "org.apache.commons.math3.analysis.function$Sin#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3337.0,
        "org.apache.commons.math3.analysis.function$StepFunction#StepFunction(double[],double[])": 11115545.0,
        "org.apache.commons.math3.analysis.function$StepFunction#value(double)": 11155595.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 3039.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 2999.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 3337.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 3321.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3257.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 3343.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 3343.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 3341.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 1837.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 3329.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 3343.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 3343.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2171.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 3317.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 3245.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3343.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3203.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 3249.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 3341.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 3343.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 3301.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 3301.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 3317.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 3321.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 3291.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 3341.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3311.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 3341.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 3341.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 3341.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 3341.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 3269.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3183.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 3253.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3199.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 3289.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3143.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 3341.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 3341.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 3211.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 2941.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 3337.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 3337.0,
        "org.apache.commons.math3.exception$TooManyEvaluationsException#TooManyEvaluationsException(java.lang.Number)": 3315.0,
        "org.apache.commons.math3.optimization$GoalType#<clinit>()": 10348961.0,
        "org.apache.commons.math3.optimization$GoalType#GoalType(java.lang.String,int)": 10348961.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#BaseAbstractUnivariateOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker)": 11075567.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#computeObjectiveValue(double)": 11075567.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getConvergenceChecker()": 11075567.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getEvaluations()": 11135561.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getGoalType()": 11075567.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getMax()": 11075567.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getMaxEvaluations()": 3341.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getMin()": 11075567.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getStartValue()": 11075567.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double)": 3327.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double,double)": 11075567.0,
        "org.apache.commons.math3.optimization.univariate$BrentOptimizer#<clinit>()": 11075567.0,
        "org.apache.commons.math3.optimization.univariate$BrentOptimizer#BrentOptimizer(double,double)": 11108877.0,
        "org.apache.commons.math3.optimization.univariate$BrentOptimizer#BrentOptimizer(double,double,org.apache.commons.math3.optimization.ConvergenceChecker)": 11075567.0,
        "org.apache.commons.math3.optimization.univariate$BrentOptimizer#best(org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair,org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair,boolean)": 11082225.0,
        "org.apache.commons.math3.optimization.univariate$BrentOptimizer#doOptimize()": 11075567.0,
        "org.apache.commons.math3.optimization.univariate$UnivariatePointValuePair#UnivariatePointValuePair(double,double)": 11082225.0,
        "org.apache.commons.math3.optimization.univariate$UnivariatePointValuePair#getPoint()": 11082225.0,
        "org.apache.commons.math3.optimization.univariate$UnivariatePointValuePair#getValue()": 11082225.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 225617.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 3343.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 3341.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 3106587.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3339.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 2695.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 6496605.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 3301.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 3339.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 3299.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 3339.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 3297.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 3167.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 3191.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 3339.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 3261.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 2647.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 3317.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 3339.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 2869.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 9210915.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 3289.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 3209.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 1979.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 1537.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 3313.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 3285.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 1635.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 3209.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 3339.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 3219.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 1821.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 3341.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1375.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 3231.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 2431.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 3343.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 2173.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 3339.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 2579.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 3341.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 2809.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 3339.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 7392335.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 3273.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 3315.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 3337.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 3339.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 3341.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 8975667.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 8975667.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 2141.0,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 2999.0,
        "org.apache.commons.math3.util$FastMath#random()": 3305.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 3333.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3301.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 3303.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 3337.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 3245.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 3339.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 3319.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 3339.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 9120075.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 9083865.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 3289.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 3085461.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 3291.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 3291.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 3319.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3335.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3335.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 9622161.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 3341.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 9479975.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 9479975.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 9479975.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 9479975.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 1555.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 3343.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 1563.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 3343.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1403.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 3343.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor()": 7644645.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int)": 7338045.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int,org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback)": 7332627.0,
        "org.apache.commons.math3.util$Incrementor#canIncrement()": 3339.0,
        "org.apache.commons.math3.util$Incrementor#getCount()": 10112235.0,
        "org.apache.commons.math3.util$Incrementor#getMaximalCount()": 3279.0,
        "org.apache.commons.math3.util$Incrementor#incrementCount()": 7628061.0,
        "org.apache.commons.math3.util$Incrementor#incrementCount(int)": 3341.0,
        "org.apache.commons.math3.util$Incrementor#resetCount()": 7528935.0,
        "org.apache.commons.math3.util$Incrementor#setMaximalCount(int)": 7727835.0,
        "org.apache.commons.math3.util$Incrementor$1#trigger(int)": 3307.0,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 3343.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 10876757.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 10870161.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 10259067.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 10942827.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 10764897.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 3331.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": 3303.0,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 3341.0,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 3331.0,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 3341.0,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 3341.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 3341.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 3341.0,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 3341.0,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 3343.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 3333.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 3343.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3341.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3341.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 3247.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 3245.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 3337.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": 3337.0,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": 3339.0,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 3343.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 3325.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 3325.0,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 3327.0,
        "org.apache.commons.math3.util$MathArrays$2#<clinit>()": 10259067.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 10227057.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 10227057.0,
        "org.apache.commons.math3.util$Precision#<clinit>()": 5174555.0,
        "org.apache.commons.math3.util$Precision#Precision()": 3343.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 3251.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 3291.0,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 10233455.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 2547.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 6806145.0,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 3341.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 3343.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 3183.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 3093.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 3259.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 3341.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 3185.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 3343.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 3343.0,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 3341.0,
        "org.apache.commons.math3.util$Precision#round(double,int)": 3341.0,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 3341.0,
        "org.apache.commons.math3.util$Precision#round(float,int)": 3341.0,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 3341.0,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 3341.0
    },
    "Math-24": {
        "org.apache.commons.math3.analysis$FunctionUtils#FunctionUtils()": 3342.0,
        "org.apache.commons.math3.analysis$FunctionUtils#add(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[])": 3338.0,
        "org.apache.commons.math3.analysis$FunctionUtils#add(org.apache.commons.math3.analysis.UnivariateFunction[])": 11168962.0,
        "org.apache.commons.math3.analysis$FunctionUtils#add(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[])": 3342.0,
        "org.apache.commons.math3.analysis$FunctionUtils#collector(org.apache.commons.math3.analysis.BivariateFunction,double)": 3340.0,
        "org.apache.commons.math3.analysis$FunctionUtils#collector(org.apache.commons.math3.analysis.BivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction,double)": 3340.0,
        "org.apache.commons.math3.analysis$FunctionUtils#combine(org.apache.commons.math3.analysis.BivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction)": 3338.0,
        "org.apache.commons.math3.analysis$FunctionUtils#compose(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[])": 3338.0,
        "org.apache.commons.math3.analysis$FunctionUtils#compose(org.apache.commons.math3.analysis.UnivariateFunction[])": 3336.0,
        "org.apache.commons.math3.analysis$FunctionUtils#compose(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[])": 3338.0,
        "org.apache.commons.math3.analysis$FunctionUtils#fix1stArgument(org.apache.commons.math3.analysis.BivariateFunction,double)": 3340.0,
        "org.apache.commons.math3.analysis$FunctionUtils#fix2ndArgument(org.apache.commons.math3.analysis.BivariateFunction,double)": 3294.0,
        "org.apache.commons.math3.analysis$FunctionUtils#multiply(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[])": 3338.0,
        "org.apache.commons.math3.analysis$FunctionUtils#multiply(org.apache.commons.math3.analysis.UnivariateFunction[])": 3340.0,
        "org.apache.commons.math3.analysis$FunctionUtils#multiply(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[])": 3342.0,
        "org.apache.commons.math3.analysis$FunctionUtils#sample(org.apache.commons.math3.analysis.UnivariateFunction,double,double,int)": 3276.0,
        "org.apache.commons.math3.analysis$FunctionUtils#toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable)": 3330.0,
        "org.apache.commons.math3.analysis$FunctionUtils#toUnivariateDifferential(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction)": 3342.0,
        "org.apache.commons.math3.analysis$FunctionUtils$1#value(double)": 3336.0,
        "org.apache.commons.math3.analysis$FunctionUtils$10#value(double)": 3338.0,
        "org.apache.commons.math3.analysis$FunctionUtils$11#value(double[])": 3340.0,
        "org.apache.commons.math3.analysis$FunctionUtils$12#value(double)": 3340.0,
        "org.apache.commons.math3.analysis$FunctionUtils$13#value(double)": 3294.0,
        "org.apache.commons.math3.analysis$FunctionUtils$14#derivative()": 3330.0,
        "org.apache.commons.math3.analysis$FunctionUtils$14#value(double)": 3342.0,
        "org.apache.commons.math3.analysis$FunctionUtils$14$1#value(double)": 3332.0,
        "org.apache.commons.math3.analysis$FunctionUtils$2#value(double)": 3342.0,
        "org.apache.commons.math3.analysis$FunctionUtils$2#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3338.0,
        "org.apache.commons.math3.analysis$FunctionUtils$3#derivative()": 3338.0,
        "org.apache.commons.math3.analysis$FunctionUtils$3#value(double)": 3340.0,
        "org.apache.commons.math3.analysis$FunctionUtils$3$1#value(double)": 3338.0,
        "org.apache.commons.math3.analysis$FunctionUtils$4#value(double)": 11168962.0,
        "org.apache.commons.math3.analysis$FunctionUtils$6#derivative()": 3338.0,
        "org.apache.commons.math3.analysis$FunctionUtils$6#value(double)": 3342.0,
        "org.apache.commons.math3.analysis$FunctionUtils$6$1#value(double)": 3338.0,
        "org.apache.commons.math3.analysis$FunctionUtils$7#value(double)": 3340.0,
        "org.apache.commons.math3.analysis$FunctionUtils$9#derivative()": 3338.0,
        "org.apache.commons.math3.analysis$FunctionUtils$9#value(double)": 3342.0,
        "org.apache.commons.math3.analysis$FunctionUtils$9$1#value(double)": 3338.0,
        "org.apache.commons.math3.analysis.function$Sin#Sin()": 10549408.0,
        "org.apache.commons.math3.analysis.function$Sin#derivative()": 3338.0,
        "org.apache.commons.math3.analysis.function$Sin#value(double)": 10666678.0,
        "org.apache.commons.math3.analysis.function$Sin#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3336.0,
        "org.apache.commons.math3.analysis.function$StepFunction#StepFunction(double[],double[])": 11115546.0,
        "org.apache.commons.math3.analysis.function$StepFunction#value(double)": 11155596.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 3038.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 2998.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 3336.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 3320.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3256.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 3342.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 3342.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 3340.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 1836.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 3328.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 3342.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 3342.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2170.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 3316.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 3244.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3342.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3202.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 3248.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 3340.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 3342.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 3300.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 3300.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 3316.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 3320.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 3290.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 3340.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3310.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 3340.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 3340.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 3340.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 3340.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 3268.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3182.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 3252.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3198.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 3288.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3142.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 3340.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 3340.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 3210.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 2940.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 3336.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 3336.0,
        "org.apache.commons.math3.exception$TooManyEvaluationsException#TooManyEvaluationsException(java.lang.Number)": 3314.0,
        "org.apache.commons.math3.optimization$GoalType#<clinit>()": 10348962.0,
        "org.apache.commons.math3.optimization$GoalType#GoalType(java.lang.String,int)": 10348962.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#BaseAbstractUnivariateOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker)": 11075568.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#computeObjectiveValue(double)": 11075568.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getConvergenceChecker()": 11075568.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getEvaluations()": 11135562.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getGoalType()": 11075568.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getMax()": 11075568.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getMaxEvaluations()": 3340.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getMin()": 11075568.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getStartValue()": 11075568.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double)": 11128888.0,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double,double)": 11075568.0,
        "org.apache.commons.math3.optimization.univariate$BrentOptimizer#<clinit>()": 11075568.0,
        "org.apache.commons.math3.optimization.univariate$BrentOptimizer#BrentOptimizer(double,double)": 11108878.0,
        "org.apache.commons.math3.optimization.univariate$BrentOptimizer#BrentOptimizer(double,double,org.apache.commons.math3.optimization.ConvergenceChecker)": 11075568.0,
        "org.apache.commons.math3.optimization.univariate$BrentOptimizer#best(org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair,org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair,boolean)": 3342.0,
        "org.apache.commons.math3.optimization.univariate$BrentOptimizer#doOptimize()": 11075568.0,
        "org.apache.commons.math3.optimization.univariate$UnivariatePointValuePair#UnivariatePointValuePair(double,double)": 11082226.0,
        "org.apache.commons.math3.optimization.univariate$UnivariatePointValuePair#getPoint()": 11082226.0,
        "org.apache.commons.math3.optimization.univariate$UnivariatePointValuePair#getValue()": 3328.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 225618.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 3342.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 3340.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 3106588.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3338.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 2694.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 6501706.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 3300.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 3338.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 3298.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 3338.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 3296.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 3166.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 3190.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 3338.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 3260.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 2646.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 3316.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 3338.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 2868.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 9210916.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 3288.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 3208.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 1978.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 1536.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 3312.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 3284.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 1634.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 3208.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 3338.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 3218.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 1820.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 3340.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1374.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 3230.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 2430.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 3342.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 2172.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 3338.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 2578.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 3340.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 2808.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 3338.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 7392336.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 3272.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 3314.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 3336.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 3338.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 3340.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 8975668.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 8975668.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 2140.0,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 2998.0,
        "org.apache.commons.math3.util$FastMath#random()": 3304.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 3332.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3300.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 3302.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 3336.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 3244.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 3338.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 3318.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 3338.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 9120076.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 9083866.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 3288.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 3085462.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 3290.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 3290.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 3318.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3334.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3334.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 9622162.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 3340.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 9479976.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 9479976.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 9479976.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 9479976.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 1554.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 3342.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 1562.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 3342.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1402.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 3342.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor()": 7644646.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int)": 7338046.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int,org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback)": 7332628.0,
        "org.apache.commons.math3.util$Incrementor#canIncrement()": 3338.0,
        "org.apache.commons.math3.util$Incrementor#getCount()": 10112236.0,
        "org.apache.commons.math3.util$Incrementor#getMaximalCount()": 3278.0,
        "org.apache.commons.math3.util$Incrementor#incrementCount()": 7628062.0,
        "org.apache.commons.math3.util$Incrementor#incrementCount(int)": 3340.0,
        "org.apache.commons.math3.util$Incrementor#resetCount()": 7528936.0,
        "org.apache.commons.math3.util$Incrementor#setMaximalCount(int)": 7727836.0,
        "org.apache.commons.math3.util$Incrementor$1#trigger(int)": 3306.0,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 3342.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 10876758.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 10870162.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 10259068.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 10942828.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 10764898.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 3330.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": 3302.0,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 3340.0,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 3330.0,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 3340.0,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 3340.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 3340.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 3340.0,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 3340.0,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 3342.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 3332.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 3342.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3340.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3340.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 3246.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 3244.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 3336.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": 3336.0,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": 3338.0,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 3342.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 3324.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 3324.0,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 3326.0,
        "org.apache.commons.math3.util$MathArrays$2#<clinit>()": 10259068.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 10227058.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 10227058.0,
        "org.apache.commons.math3.util$Precision#<clinit>()": 5179108.0,
        "org.apache.commons.math3.util$Precision#Precision()": 3342.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 3250.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 3290.0,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 10233456.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 2548.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 6811366.0,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 3340.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 3342.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 3182.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 3092.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 3258.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 3340.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 3184.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 3342.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 3342.0,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 3340.0,
        "org.apache.commons.math3.util$Precision#round(double,int)": 3340.0,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 3340.0,
        "org.apache.commons.math3.util$Precision#round(float,int)": 3340.0,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 3340.0,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 3340.0
    },
    "Math-25": {
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": -545.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 941.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 955.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 955.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": -255.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 929.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 857.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 955.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 815.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 861.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 953.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 953.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 829.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 559.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 949.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 949.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 953.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 941.0,
        "org.apache.commons.math3.exception.util$ArgUtils#ArgUtils()": 955.0,
        "org.apache.commons.math3.exception.util$ArgUtils#flatten(java.lang.Object[])": -789.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#ExceptionContext(java.lang.Throwable)": -789.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": -787.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#buildMessage(java.util.Locale,java.lang.String)": 943.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#deSerializeContext(java.io.ObjectInputStream)": 951.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#deSerializeMessages(java.io.ObjectInputStream)": 951.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getKeys()": 951.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getLocalizedMessage()": 953.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getMessage()": 947.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getMessage(java.util.Locale)": 945.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getMessage(java.util.Locale,java.lang.String)": 953.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getThrowable()": 955.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getValue(java.lang.String)": 949.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#nonSerializableReplacement(java.lang.Object)": 953.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#readObject(java.io.ObjectInputStream)": 951.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#serializeContext(java.io.ObjectOutputStream)": 951.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#serializeMessages(java.io.ObjectOutputStream)": 951.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#setValue(java.lang.String,java.lang.Object)": 939.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#writeObject(java.io.ObjectOutputStream)": 951.0,
        "org.apache.commons.math3.exception.util$LocalizedFormats#<clinit>()": -917.0,
        "org.apache.commons.math3.exception.util$LocalizedFormats#LocalizedFormats(java.lang.String,int,java.lang.String)": -917.0,
        "org.apache.commons.math3.exception.util$LocalizedFormats#getLocalizedString(java.util.Locale)": 937.0,
        "org.apache.commons.math3.exception.util$LocalizedFormats#getSourceString()": 951.0,
        "org.apache.commons.math3.optimization.fitting$HarmonicFitter#HarmonicFitter(org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer)": 943.0,
        "org.apache.commons.math3.optimization.fitting$HarmonicFitter#fit()": 945.0,
        "org.apache.commons.math3.optimization.fitting$HarmonicFitter#fit(double[])": 945.0,
        "org.apache.commons.math3.optimization.fitting$HarmonicFitter$ParameterGuesser#HarmonicFitter$ParameterGuesser(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint[])": 904395.0,
        "org.apache.commons.math3.optimization.fitting$HarmonicFitter$ParameterGuesser#guess()": 906299.0,
        "org.apache.commons.math3.optimization.fitting$HarmonicFitter$ParameterGuesser#guessAOmega()": 906299.0,
        "org.apache.commons.math3.optimization.fitting$HarmonicFitter$ParameterGuesser#guessPhi()": 906299.0,
        "org.apache.commons.math3.optimization.fitting$HarmonicFitter$ParameterGuesser#sortObservations()": 906299.0,
        "org.apache.commons.math3.optimization.fitting$WeightedObservedPoint#WeightedObservedPoint(double,double,double)": 864873.0,
        "org.apache.commons.math3.optimization.fitting$WeightedObservedPoint#getWeight()": 905.0,
        "org.apache.commons.math3.optimization.fitting$WeightedObservedPoint#getX()": 866735.0,
        "org.apache.commons.math3.optimization.fitting$WeightedObservedPoint#getY()": 866735.0
    },
    "Math-26": {
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException()": 3351.0,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 11168951.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 3331.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3271.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 3353.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 3353.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 3351.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 1877.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 3339.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 3353.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 3353.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2159.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 3327.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 10936201.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3353.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 10797727.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 10942817.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 3351.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 3351.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 3339.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3331.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 3263.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3209.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 3311.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3119.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 3351.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 3351.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 3229.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 2959.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 3347.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 3347.0,
        "org.apache.commons.math3.exception.util$ArgUtils#ArgUtils()": 3353.0,
        "org.apache.commons.math3.exception.util$ArgUtils#flatten(java.lang.Object[])": 6234151.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#ExceptionContext(java.lang.Throwable)": 6234151.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 6239147.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#buildMessage(java.util.Locale,java.lang.String)": 3341.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#deSerializeContext(java.io.ObjectInputStream)": 3349.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#deSerializeMessages(java.io.ObjectInputStream)": 3349.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getKeys()": 3349.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getLocalizedMessage()": 3351.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getMessage()": 3345.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getMessage(java.util.Locale)": 3343.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getMessage(java.util.Locale,java.lang.String)": 3351.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getThrowable()": 3353.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getValue(java.lang.String)": 3347.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#nonSerializableReplacement(java.lang.Object)": 3351.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#readObject(java.io.ObjectInputStream)": 3349.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#serializeContext(java.io.ObjectOutputStream)": 3349.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#serializeMessages(java.io.ObjectOutputStream)": 3349.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#setValue(java.lang.String,java.lang.Object)": 3337.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#writeObject(java.io.ObjectOutputStream)": 3349.0,
        "org.apache.commons.math3.exception.util$LocalizedFormats#<clinit>()": 5918567.0,
        "org.apache.commons.math3.exception.util$LocalizedFormats#LocalizedFormats(java.lang.String,int,java.lang.String)": 5918567.0,
        "org.apache.commons.math3.exception.util$LocalizedFormats#getLocalizedString(java.util.Locale)": 3335.0,
        "org.apache.commons.math3.exception.util$LocalizedFormats#getSourceString()": 3349.0,
        "org.apache.commons.math3.fraction$Fraction#<clinit>()": 9915995.0,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double)": 3251.0,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double,double,int)": 10896547.0,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double,double,int,int)": 10883345.0,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double,int)": 3349.0,
        "org.apache.commons.math3.fraction$Fraction#Fraction(int)": 3035.0,
        "org.apache.commons.math3.fraction$Fraction#Fraction(int,int)": 9915995.0,
        "org.apache.commons.math3.fraction$Fraction#abs()": 3351.0,
        "org.apache.commons.math3.fraction$Fraction#add(int)": 3351.0,
        "org.apache.commons.math3.fraction$Fraction#add(org.apache.commons.math3.fraction.Fraction)": 3259.0,
        "org.apache.commons.math3.fraction$Fraction#addSub(org.apache.commons.math3.fraction.Fraction,boolean)": 3229.0,
        "org.apache.commons.math3.fraction$Fraction#compareTo(org.apache.commons.math3.fraction.Fraction)": 3351.0,
        "org.apache.commons.math3.fraction$Fraction#divide(int)": 3351.0,
        "org.apache.commons.math3.fraction$Fraction#divide(org.apache.commons.math3.fraction.Fraction)": 3305.0,
        "org.apache.commons.math3.fraction$Fraction#doubleValue()": 3299.0,
        "org.apache.commons.math3.fraction$Fraction#equals(java.lang.Object)": 3059.0,
        "org.apache.commons.math3.fraction$Fraction#floatValue()": 3351.0,
        "org.apache.commons.math3.fraction$Fraction#getDenominator()": 3297.0,
        "org.apache.commons.math3.fraction$Fraction#getField()": 3171.0,
        "org.apache.commons.math3.fraction$Fraction#getNumerator()": 3295.0,
        "org.apache.commons.math3.fraction$Fraction#getReducedFraction(int,int)": 3247.0,
        "org.apache.commons.math3.fraction$Fraction#hashCode()": 3341.0,
        "org.apache.commons.math3.fraction$Fraction#intValue()": 3351.0,
        "org.apache.commons.math3.fraction$Fraction#longValue()": 3351.0,
        "org.apache.commons.math3.fraction$Fraction#multiply(int)": 3351.0,
        "org.apache.commons.math3.fraction$Fraction#multiply(org.apache.commons.math3.fraction.Fraction)": 3249.0,
        "org.apache.commons.math3.fraction$Fraction#negate()": 3303.0,
        "org.apache.commons.math3.fraction$Fraction#percentageValue()": 3349.0,
        "org.apache.commons.math3.fraction$Fraction#reciprocal()": 3303.0,
        "org.apache.commons.math3.fraction$Fraction#subtract(int)": 3351.0,
        "org.apache.commons.math3.fraction$Fraction#subtract(org.apache.commons.math3.fraction.Fraction)": 3297.0,
        "org.apache.commons.math3.fraction$Fraction#toString()": 3347.0,
        "org.apache.commons.math3.fraction$FractionConversionException#FractionConversionException(double,int)": 3349.0,
        "org.apache.commons.math3.fraction$FractionConversionException#FractionConversionException(double,long,long)": 11235901.0,
        "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()": 4522901.0,
        "org.apache.commons.math3.util$ArithmeticUtils#ArithmeticUtils()": 3353.0,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(int,int)": 3271.0,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long)": 3347.0,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long,org.apache.commons.math3.exception.util.Localizable)": 3345.0,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficient(int,int)": 3319.0,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientDouble(int,int)": 3337.0,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)": 3345.0,
        "org.apache.commons.math3.util$ArithmeticUtils#checkBinomial(int,int)": 3317.0,
        "org.apache.commons.math3.util$ArithmeticUtils#factorial(int)": 1453.0,
        "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)": 3349.0,
        "org.apache.commons.math3.util$ArithmeticUtils#factorialLog(int)": 3327.0,
        "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)": 9878237.0,
        "org.apache.commons.math3.util$ArithmeticUtils#gcd(long,long)": 3347.0,
        "org.apache.commons.math3.util$ArithmeticUtils#isPowerOfTwo(long)": 3263.0,
        "org.apache.commons.math3.util$ArithmeticUtils#lcm(int,int)": 3351.0,
        "org.apache.commons.math3.util$ArithmeticUtils#lcm(long,long)": 3351.0,
        "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(int,int)": 3223.0,
        "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(long,long)": 3327.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(int,int)": 3351.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(int,long)": 3351.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,int)": 3351.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,java.math.BigInteger)": 3349.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,long)": 3349.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(long,int)": 3351.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(long,long)": 3351.0,
        "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(int,int)": 3295.0,
        "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(long,long)": 3351.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 130235.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 3353.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 3351.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 3260087.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3349.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 9186637.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 1893.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 3313.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 3351.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 3311.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 3351.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 3315.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 3189.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 3203.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 3351.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 3275.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 941.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 3327.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 3349.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 2897.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 2755.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 3307.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 3229.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 2031.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 709.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 3327.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 3311.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 3911107.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 3223.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 3349.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 3229.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 1137.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 3351.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 701.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 3245.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 3325.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 3353.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 2213.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 3349.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 2795.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 3351.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 2841.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 3349.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 2295.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 3327.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 3327.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 3347.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 3349.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 3351.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 2679.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 2679.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 997.0,
        "org.apache.commons.math3.util$FastMath#random()": 3315.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 3343.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3313.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 3315.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 3347.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 3259.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 3349.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 3331.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 3349.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 2727.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 2713.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 3307.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 241.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 3307.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 3307.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 3333.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3349.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3349.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 2887.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 3351.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 2833.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 2833.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 2833.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 2833.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 719.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 3353.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 727.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 3353.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 727.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 3353.0
    },
    "Math-27": {
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException()": 3309.0,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3285.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 3289.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3229.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 3311.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 3311.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 3309.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 1835.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 3297.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 3311.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 3311.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2117.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 3285.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 3213.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3311.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3171.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 3217.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 3309.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 3309.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 3297.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3289.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 3221.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3167.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 3269.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3077.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 3309.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 3309.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 3187.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 2917.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 3305.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 3305.0,
        "org.apache.commons.math3.fraction$Fraction#<clinit>()": 9653243.0,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double)": 3209.0,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double,double,int)": 3203.0,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double,double,int,int)": 3199.0,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double,int)": 3307.0,
        "org.apache.commons.math3.fraction$Fraction#Fraction(int)": 2993.0,
        "org.apache.commons.math3.fraction$Fraction#Fraction(int,int)": 9653243.0,
        "org.apache.commons.math3.fraction$Fraction#abs()": 3309.0,
        "org.apache.commons.math3.fraction$Fraction#add(int)": 3309.0,
        "org.apache.commons.math3.fraction$Fraction#add(org.apache.commons.math3.fraction.Fraction)": 3217.0,
        "org.apache.commons.math3.fraction$Fraction#addSub(org.apache.commons.math3.fraction.Fraction,boolean)": 3187.0,
        "org.apache.commons.math3.fraction$Fraction#compareTo(org.apache.commons.math3.fraction.Fraction)": 3309.0,
        "org.apache.commons.math3.fraction$Fraction#divide(int)": 3309.0,
        "org.apache.commons.math3.fraction$Fraction#divide(org.apache.commons.math3.fraction.Fraction)": 3263.0,
        "org.apache.commons.math3.fraction$Fraction#doubleValue()": 10797769.0,
        "org.apache.commons.math3.fraction$Fraction#equals(java.lang.Object)": 3017.0,
        "org.apache.commons.math3.fraction$Fraction#floatValue()": 3309.0,
        "org.apache.commons.math3.fraction$Fraction#getDenominator()": 3255.0,
        "org.apache.commons.math3.fraction$Fraction#getField()": 3129.0,
        "org.apache.commons.math3.fraction$Fraction#getNumerator()": 3253.0,
        "org.apache.commons.math3.fraction$Fraction#getReducedFraction(int,int)": 3205.0,
        "org.apache.commons.math3.fraction$Fraction#hashCode()": 3299.0,
        "org.apache.commons.math3.fraction$Fraction#intValue()": 3309.0,
        "org.apache.commons.math3.fraction$Fraction#longValue()": 3309.0,
        "org.apache.commons.math3.fraction$Fraction#multiply(int)": 10956097.0,
        "org.apache.commons.math3.fraction$Fraction#multiply(org.apache.commons.math3.fraction.Fraction)": 3207.0,
        "org.apache.commons.math3.fraction$Fraction#negate()": 3261.0,
        "org.apache.commons.math3.fraction$Fraction#percentageValue()": 10962719.0,
        "org.apache.commons.math3.fraction$Fraction#reciprocal()": 3261.0,
        "org.apache.commons.math3.fraction$Fraction#subtract(int)": 3309.0,
        "org.apache.commons.math3.fraction$Fraction#subtract(org.apache.commons.math3.fraction.Fraction)": 3255.0,
        "org.apache.commons.math3.fraction$Fraction#toString()": 3305.0,
        "org.apache.commons.math3.fraction$FractionConversionException#FractionConversionException(double,int)": 3307.0,
        "org.apache.commons.math3.fraction$FractionConversionException#FractionConversionException(double,long,long)": 3305.0,
        "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()": 4345997.0,
        "org.apache.commons.math3.util$ArithmeticUtils#ArithmeticUtils()": 3311.0,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(int,int)": 3229.0,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long)": 3305.0,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long,org.apache.commons.math3.exception.util.Localizable)": 3303.0,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficient(int,int)": 3277.0,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientDouble(int,int)": 3295.0,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)": 3303.0,
        "org.apache.commons.math3.util$ArithmeticUtils#checkBinomial(int,int)": 3275.0,
        "org.apache.commons.math3.util$ArithmeticUtils#factorial(int)": 1411.0,
        "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)": 3307.0,
        "org.apache.commons.math3.util$ArithmeticUtils#factorialLog(int)": 3285.0,
        "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)": 9615989.0,
        "org.apache.commons.math3.util$ArithmeticUtils#gcd(long,long)": 3305.0,
        "org.apache.commons.math3.util$ArithmeticUtils#isPowerOfTwo(long)": 3221.0,
        "org.apache.commons.math3.util$ArithmeticUtils#lcm(int,int)": 3309.0,
        "org.apache.commons.math3.util$ArithmeticUtils#lcm(long,long)": 3309.0,
        "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(int,int)": 3181.0,
        "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(long,long)": 3285.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(int,int)": 3309.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(int,long)": 3309.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,int)": 3309.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,java.math.BigInteger)": 3307.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,long)": 3307.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(long,int)": 3309.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(long,long)": 3309.0,
        "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(int,int)": 3253.0,
        "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(long,long)": 3309.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 101339.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 3311.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 3309.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 213.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3307.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 8933797.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 1853.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 3271.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 3309.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 3269.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 3309.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 3273.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 3147.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 3161.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 3309.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 3233.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 899.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 3285.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 3307.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 2855.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 2713.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 3265.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 3187.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 1989.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 667.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 3285.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 3269.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 557.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 3181.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 3307.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 3187.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 1095.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 3309.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 659.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 3203.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 3283.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 3311.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 2171.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 3307.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 2753.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 3309.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 2799.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 3307.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 2253.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 3285.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 3285.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 3305.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 3307.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 3309.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 2637.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 2637.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 955.0,
        "org.apache.commons.math3.util$FastMath#random()": 3273.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 3301.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3271.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 3273.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 3305.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 3217.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 3307.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 3289.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 3307.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 2685.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 2671.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 3265.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 199.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 3265.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 3265.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 3291.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3307.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3307.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 2845.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 3309.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 2789.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 2789.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 2789.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 2789.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 677.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 3311.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 685.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 3311.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 685.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 3311.0
    },
    "Math-28": {
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 3439.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 3399.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 3729.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 3713.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3653.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 3735.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 3735.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 3733.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 2259.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 3721.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 3735.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 3735.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2541.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 3709.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 13601295.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3735.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 13446819.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 13608673.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 13942753.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 3733.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int)": 3735.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int,java.lang.Class)": 3709.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 13801203.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 13801203.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 3709.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(java.lang.Integer[],java.lang.Integer[])": 3735.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,java.lang.Integer[],java.lang.Integer[])": 3657.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimension(int)": 3733.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimensions()": 3735.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimension(int)": 3733.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimensions()": 3735.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 3713.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 3683.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 3721.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 3721.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 3721.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3713.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 3661.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3575.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 3645.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3591.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 3693.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3501.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 3733.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 3733.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 3611.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3341.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 3729.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 3729.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 3677.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 3373.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 3733.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 3733.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 3733.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3721.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix()": 3731.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field)": 3591.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field,int,int)": 3529.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 3727.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int)": 3601.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int,int)": 3497.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkAdditionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3715.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkColumnIndex(int)": 3483.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkMultiplicationCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3699.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkRowIndex(int)": 3483.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int,int,int,int)": 3715.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int[],int[])": 3725.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubtractionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3727.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int,int,int,int,org.apache.commons.math3.FieldElement[][])": 3731.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int[],int[],org.apache.commons.math3.FieldElement[][])": 3731.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#equals(java.lang.Object)": 3671.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[])": 3735.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[][])": 3553.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumn(int)": 3715.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnMatrix(int)": 3729.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnVector(int)": 3723.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getData()": 3731.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getField()": 3473.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRow(int)": 3721.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowMatrix(int)": 3727.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowVector(int)": 3729.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int,int,int,int)": 3731.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int[],int[])": 3729.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getTrace()": 3729.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#hashCode()": 3729.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#isSquare()": 3659.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 3715.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 3731.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.linear.FieldVector)": 3729.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#power(int)": 3733.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 3733.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldMatrix)": 3729.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldVector)": 3735.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 3731.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 3731.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 3733.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 3733.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 3733.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 3733.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 3733.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 3733.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 3731.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 3733.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#toString()": 3731.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#transpose()": 3723.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3733.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3733.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3733.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3733.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3729.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3733.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3689.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3731.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3733.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3735.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3731.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3735.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$1#visit(int,int,org.apache.commons.math3.FieldElement)": 3729.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#start(int,int,int,int,int,int)": 3731.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#visit(int,int,org.apache.commons.math3.FieldElement)": 3731.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$3#visit(int,int,org.apache.commons.math3.FieldElement)": 3723.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#<clinit>()": 10419475.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix()": 11702925.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix(int,int)": 11055213.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 3703.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#addToEntry(int,int,double)": 3735.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int,int,int,int,double[][])": 3685.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int[],int[],double[][])": 3731.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#equals(java.lang.Object)": 3631.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumn(int)": 3665.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnMatrix(int)": 3703.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnVector(int)": 3703.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getData()": 3731.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getFrobeniusNorm()": 3709.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getNorm()": 3581.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRow(int)": 13616053.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowMatrix(int)": 3727.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowVector(int)": 13756653.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int,int,int,int)": 3715.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int[],int[])": 3729.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getTrace()": 3729.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#hashCode()": 3721.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#isSquare()": 3453.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3543.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiplyEntry(int,int,double)": 3735.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(double[])": 3731.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(org.apache.commons.math3.linear.RealVector)": 3655.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#power(int)": 3731.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(double[])": 3733.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealMatrix)": 3729.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealVector)": 3735.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarAdd(double)": 3707.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarMultiply(double)": 3703.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumn(int,double[])": 3733.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3731.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 3689.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRow(int,double[])": 3733.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3733.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 13749235.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setSubMatrix(double[][],int,int)": 3731.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 3575.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#toString()": 3725.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#transpose()": 3429.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3733.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3733.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3719.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3733.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3725.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3733.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3425.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3687.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3733.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3735.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3731.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3735.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#end()": 3581.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#start(int,int,int,int,int,int)": 3581.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#visit(int,int,double)": 3581.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#end()": 3709.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#start(int,int,int,int,int,int)": 3709.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#visit(int,int,double)": 3709.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$3#visit(int,int,double)": 3729.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#start(int,int,int,int,int,int)": 3685.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#visit(int,int,double)": 3685.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$5#visit(int,int,double)": 3429.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field)": 3731.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,int,int)": 3665.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[])": 3735.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][])": 3637.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],boolean)": 3673.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 3735.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][])": 3657.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][],boolean)": 3699.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#add(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 3731.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 3735.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copy()": 3731.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyIn(org.apache.commons.math3.FieldElement[][])": 3637.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyOut()": 3669.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#createMatrix(int,int)": 3699.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getColumnDimension()": 3577.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getData()": 3673.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getDataRef()": 3735.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getEntry(int,int)": 3603.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getRowDimension()": 3577.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 3733.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 3735.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 3731.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 3733.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 3659.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 3637.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 3733.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3733.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3733.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3733.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3733.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3731.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3733.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3691.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3731.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix()": 3727.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[])": 3727.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][])": 12061465.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][],boolean)": 3523.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(int,int)": 11999023.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#add(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 3731.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#addToEntry(int,int,double)": 3735.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copy()": 3711.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyIn(double[][])": 12047575.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyOut()": 3351.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#createMatrix(int,int)": 3367.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getColumnDimension()": 11457873.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getData()": 3365.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getDataRef()": 13645593.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getEntry(int,int)": 12054519.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getRowDimension()": 11464645.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 3713.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiplyEntry(int,int,double)": 3735.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#operate(double[])": 3651.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#preMultiply(double[])": 3733.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setEntry(int,int,double)": 12061465.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setSubMatrix(double[][],int,int)": 12047575.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 3733.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3733.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3733.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3591.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3733.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3727.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3733.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3427.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3687.0,
        "org.apache.commons.math3.linear$ArrayRealVector#<clinit>()": 11068519.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector()": 3729.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[])": 12510169.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],boolean)": 11881519.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],double[])": 3733.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],int,int)": 3733.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],org.apache.commons.math3.linear.ArrayRealVector)": 3733.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int)": 12967065.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int,double)": 3729.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[])": 3733.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[],int,int)": 3733.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector)": 3733.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean)": 3537.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,double[])": 3733.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector)": 3729.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.RealVector)": 3731.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector)": 3733.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.ArrayRealVector)": 3733.0,
        "org.apache.commons.math3.linear$ArrayRealVector#add(org.apache.commons.math3.linear.RealVector)": 3717.0,
        "org.apache.commons.math3.linear$ArrayRealVector#addToEntry(int,double)": 3729.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(double)": 3731.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.ArrayRealVector)": 3735.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.RealVector)": 3731.0,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(int)": 12909505.0,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 3701.0,
        "org.apache.commons.math3.linear$ArrayRealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 3701.0,
        "org.apache.commons.math3.linear$ArrayRealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 3653.0,
        "org.apache.commons.math3.linear$ArrayRealVector#copy()": 3539.0,
        "org.apache.commons.math3.linear$ArrayRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 3559.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": 3721.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 3709.0,
        "org.apache.commons.math3.linear$ArrayRealVector#equals(java.lang.Object)": 3641.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDataRef()": 3639.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDimension()": 11819545.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 3725.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getEntry(int)": 12186835.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3727.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Norm()": 3731.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3727.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfNorm()": 3731.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getNorm()": 3623.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getSubVector(int,int)": 3721.0,
        "org.apache.commons.math3.linear$ArrayRealVector#hashCode()": 3729.0,
        "org.apache.commons.math3.linear$ArrayRealVector#isInfinite()": 3731.0,
        "org.apache.commons.math3.linear$ArrayRealVector#isNaN()": 3633.0,
        "org.apache.commons.math3.linear$ArrayRealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 3729.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapAddToSelf(double)": 3729.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapDivideToSelf(double)": 3725.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapMultiplyToSelf(double)": 3621.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapSubtractToSelf(double)": 3729.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3727.0,
        "org.apache.commons.math3.linear$ArrayRealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 3729.0,
        "org.apache.commons.math3.linear$ArrayRealVector#set(double)": 3645.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setEntry(int,double)": 3589.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,double[])": 3685.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 3683.0,
        "org.apache.commons.math3.linear$ArrayRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 13402845.0,
        "org.apache.commons.math3.linear$ArrayRealVector#toArray()": 13242223.0,
        "org.apache.commons.math3.linear$ArrayRealVector#toString()": 3735.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3731.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3727.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3731.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3727.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3733.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3731.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3733.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3731.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(int,int,org.apache.commons.math3.FieldElement[][],boolean)": 3665.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.Field,int,int)": 3681.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.FieldElement[][])": 3665.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.BlockFieldMatrix)": 3727.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 3731.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 3735.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockHeight(int)": 3653.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockWidth(int)": 3643.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copy()": 3733.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copyBlockPart(org.apache.commons.math3.FieldElement[],int,int,int,int,int,org.apache.commons.math3.FieldElement[],int,int,int)": 3729.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createBlocksLayout(org.apache.commons.math3.Field,int,int)": 3681.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createMatrix(int,int)": 3733.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumn(int)": 3725.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnDimension()": 3653.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnMatrix(int)": 3729.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnVector(int)": 3729.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getData()": 3725.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getEntry(int,int)": 3679.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRow(int)": 3725.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowDimension()": 3651.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowMatrix(int)": 3727.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowVector(int)": 3729.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getSubMatrix(int,int,int,int)": 3729.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.BlockFieldMatrix)": 3721.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 3723.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 3735.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 3729.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 3731.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 3727.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 3733.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 3727.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 3731.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 3731.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 3731.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 3725.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 3727.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 3731.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 3731.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 3731.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 3731.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.BlockFieldMatrix)": 3731.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 3733.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#toBlocksLayout(org.apache.commons.math3.FieldElement[][])": 3665.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#transpose()": 3729.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3731.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3733.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3733.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3731.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3733.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3733.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3733.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3733.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(double[][])": 3505.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int)": 3593.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int,double[][],boolean)": 3463.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.BlockRealMatrix)": 3727.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 3731.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#addToEntry(int,int,double)": 3733.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockHeight(int)": 3449.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockWidth(int)": 3433.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#copy()": 3725.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#copyBlockPart(double[],int,int,int,int,int,double[],int,int,int)": 3727.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#createBlocksLayout(int,int)": 3553.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#createMatrix(int,int)": 3733.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumn(int)": 3695.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnDimension()": 3449.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnMatrix(int)": 3729.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnVector(int)": 3729.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getData()": 3589.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getEntry(int,int)": 3649.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getFrobeniusNorm()": 3733.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getNorm()": 3689.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRow(int)": 3725.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowDimension()": 3447.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowMatrix(int)": 3727.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowVector(int)": 3729.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getSubMatrix(int,int,int,int)": 3727.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.BlockRealMatrix)": 3709.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3709.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiplyEntry(int,int,double)": 3735.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#operate(double[])": 3653.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#preMultiply(double[])": 3731.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarAdd(double)": 3727.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarMultiply(double)": 3733.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumn(int,double[])": 3719.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 3731.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3731.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 3731.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setEntry(int,int,double)": 3689.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRow(int,double[])": 3727.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 3731.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3731.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 3731.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setSubMatrix(double[][],int,int)": 3731.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.BlockRealMatrix)": 3697.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 3691.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#toBlocksLayout(double[][])": 3505.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#transpose()": 3681.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3717.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3733.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3729.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3727.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3733.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3733.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3733.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3733.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#MatrixDimensionMismatchException(int,int,int,int)": 3657.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedColumnDimension()": 3733.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedRowDimension()": 3733.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongColumnDimension()": 3733.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongRowDimension()": 3733.0,
        "org.apache.commons.math3.linear$MatrixUtils#<clinit>()": 10988803.0,
        "org.apache.commons.math3.linear$MatrixUtils#MatrixUtils()": 3735.0,
        "org.apache.commons.math3.linear$MatrixUtils#bigFractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 3705.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkAdditionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 3675.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 11255643.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)": 11484973.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 3491.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 11262355.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int,int,int)": 3651.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int[],int[])": 3725.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubtractionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 3537.0,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnFieldMatrix(org.apache.commons.math3.FieldElement[])": 3733.0,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnRealMatrix(double[])": 3709.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldDiagonalMatrix(org.apache.commons.math3.FieldElement[])": 3735.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldIdentityMatrix(org.apache.commons.math3.Field,int)": 3731.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.Field,int,int)": 3731.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.FieldElement[][])": 3733.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldVector(org.apache.commons.math3.FieldElement[])": 3735.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealDiagonalMatrix(double[])": 3693.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealIdentityMatrix(int)": 3623.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(double[][])": 3381.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(int,int)": 3515.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealVector(double[])": 3733.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 3733.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRowRealMatrix(double[])": 3733.0,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealMatrix(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 3733.0,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealVector(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 3733.0,
        "org.apache.commons.math3.linear$MatrixUtils#fractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 3733.0,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealMatrix(org.apache.commons.math3.linear.RealMatrix,java.io.ObjectOutputStream)": 3733.0,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealVector(org.apache.commons.math3.linear.RealVector,java.io.ObjectOutputStream)": 3733.0,
        "org.apache.commons.math3.linear$MatrixUtils#solveLowerTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 3733.0,
        "org.apache.commons.math3.linear$MatrixUtils#solveUpperTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 3733.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#MatrixUtils$BigFractionMatrixConverter()": 3705.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#getConvertedMatrix()": 3705.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#start(int,int,int,int,int,int)": 3705.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.BigFraction)": 3705.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#MatrixUtils$FractionMatrixConverter()": 3733.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#getConvertedMatrix()": 3733.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#start(int,int,int,int,int,int)": 3733.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.Fraction)": 3733.0,
        "org.apache.commons.math3.linear$NonSquareMatrixException#NonSquareMatrixException(int,int)": 3707.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(int,int)": 3673.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3717.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#add(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3731.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#addToEntry(int,int,double)": 3735.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#computeKey(int,int)": 3675.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#copy()": 3731.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#createMatrix(int,int)": 3721.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getColumnDimension()": 3675.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getEntry(int,int)": 3679.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getRowDimension()": 3675.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3727.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3727.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiplyEntry(int,int,double)": 3735.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#setEntry(int,int,double)": 3675.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3723.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 3723.0,
        "org.apache.commons.math3.linear$RealLinearOperator#RealLinearOperator()": 10188319.0,
        "org.apache.commons.math3.linear$RealLinearOperator#isTransposable()": 3735.0,
        "org.apache.commons.math3.linear$RealLinearOperator#operateTranspose(org.apache.commons.math3.linear.RealVector)": 3735.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat()": 3727.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 10988803.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 10361443.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.text.NumberFormat)": 10361443.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix)": 3703.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition)": 3703.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getAvailableLocales()": 3735.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getColumnSeparator()": 3735.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getFormat()": 10413019.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance()": 10393663.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance(java.util.Locale)": 10361443.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getPrefix()": 3735.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowPrefix()": 3735.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSeparator()": 3735.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSuffix()": 3735.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getSuffix()": 3735.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String)": 3711.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String,java.text.ParsePosition)": 3703.0,
        "org.apache.commons.math3.linear$RealVector#RealVector()": 9865285.0,
        "org.apache.commons.math3.linear$RealVector#add(org.apache.commons.math3.linear.RealVector)": 3727.0,
        "org.apache.commons.math3.linear$RealVector#addToEntry(int,double)": 3723.0,
        "org.apache.commons.math3.linear$RealVector#checkIndex(int)": 3387.0,
        "org.apache.commons.math3.linear$RealVector#checkIndices(int,int)": 3687.0,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(int)": 3593.0,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 3615.0,
        "org.apache.commons.math3.linear$RealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 3717.0,
        "org.apache.commons.math3.linear$RealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 3701.0,
        "org.apache.commons.math3.linear$RealVector#cosine(org.apache.commons.math3.linear.RealVector)": 3701.0,
        "org.apache.commons.math3.linear$RealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 3679.0,
        "org.apache.commons.math3.linear$RealVector#equals(java.lang.Object)": 3735.0,
        "org.apache.commons.math3.linear$RealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 3727.0,
        "org.apache.commons.math3.linear$RealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3727.0,
        "org.apache.commons.math3.linear$RealVector#getL1Norm()": 3731.0,
        "org.apache.commons.math3.linear$RealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3727.0,
        "org.apache.commons.math3.linear$RealVector#getLInfNorm()": 3731.0,
        "org.apache.commons.math3.linear$RealVector#getMaxIndex()": 3725.0,
        "org.apache.commons.math3.linear$RealVector#getMaxValue()": 3725.0,
        "org.apache.commons.math3.linear$RealVector#getMinIndex()": 3725.0,
        "org.apache.commons.math3.linear$RealVector#getMinValue()": 3725.0,
        "org.apache.commons.math3.linear$RealVector#getNorm()": 3691.0,
        "org.apache.commons.math3.linear$RealVector#hashCode()": 3735.0,
        "org.apache.commons.math3.linear$RealVector#iterator()": 3665.0,
        "org.apache.commons.math3.linear$RealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 3731.0,
        "org.apache.commons.math3.linear$RealVector#mapAdd(double)": 3729.0,
        "org.apache.commons.math3.linear$RealVector#mapAddToSelf(double)": 3727.0,
        "org.apache.commons.math3.linear$RealVector#mapDivide(double)": 3721.0,
        "org.apache.commons.math3.linear$RealVector#mapDivideToSelf(double)": 3721.0,
        "org.apache.commons.math3.linear$RealVector#mapMultiply(double)": 3603.0,
        "org.apache.commons.math3.linear$RealVector#mapMultiplyToSelf(double)": 3709.0,
        "org.apache.commons.math3.linear$RealVector#mapSubtract(double)": 3725.0,
        "org.apache.commons.math3.linear$RealVector#mapSubtractToSelf(double)": 3725.0,
        "org.apache.commons.math3.linear$RealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3685.0,
        "org.apache.commons.math3.linear$RealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 3725.0,
        "org.apache.commons.math3.linear$RealVector#projection(org.apache.commons.math3.linear.RealVector)": 3707.0,
        "org.apache.commons.math3.linear$RealVector#set(double)": 3731.0,
        "org.apache.commons.math3.linear$RealVector#sparseIterator()": 3673.0,
        "org.apache.commons.math3.linear$RealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3727.0,
        "org.apache.commons.math3.linear$RealVector#toArray()": 3729.0,
        "org.apache.commons.math3.linear$RealVector#unitVector()": 3725.0,
        "org.apache.commons.math3.linear$RealVector#unitize()": 3725.0,
        "org.apache.commons.math3.linear$RealVector#unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)": 3679.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3727.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3719.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3727.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3719.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3731.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3727.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3731.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3727.0,
        "org.apache.commons.math3.linear$RealVector$1#hasNext()": 3665.0,
        "org.apache.commons.math3.linear$RealVector$1#next()": 3665.0,
        "org.apache.commons.math3.linear$RealVector$1#remove()": 3729.0,
        "org.apache.commons.math3.linear$RealVector$2#add(org.apache.commons.math3.linear.RealVector)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#addToEntry(int,double)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#append(double)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#append(org.apache.commons.math3.linear.RealVector)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#combine(double,double,org.apache.commons.math3.linear.RealVector)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#copy()": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#cosine(org.apache.commons.math3.linear.RealVector)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#dotProduct(org.apache.commons.math3.linear.RealVector)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeDivide(org.apache.commons.math3.linear.RealVector)": 3735.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 3735.0,
        "org.apache.commons.math3.linear$RealVector$2#getDimension()": 3723.0,
        "org.apache.commons.math3.linear$RealVector$2#getDistance(org.apache.commons.math3.linear.RealVector)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#getEntry(int)": 3719.0,
        "org.apache.commons.math3.linear$RealVector$2#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#getL1Norm()": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#getLInfNorm()": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#getNorm()": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#getSubVector(int,int)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#isInfinite()": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#isNaN()": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#iterator()": 3727.0,
        "org.apache.commons.math3.linear$RealVector$2#map(org.apache.commons.math3.analysis.UnivariateFunction)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#mapAdd(double)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#mapAddToSelf(double)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#mapDivide(double)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#mapDivideToSelf(double)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiply(double)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiplyToSelf(double)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtract(double)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtractToSelf(double)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#outerProduct(org.apache.commons.math3.linear.RealVector)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#set(double)": 3729.0,
        "org.apache.commons.math3.linear$RealVector$2#setEntry(int,double)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#sparseIterator()": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#subtract(org.apache.commons.math3.linear.RealVector)": 3727.0,
        "org.apache.commons.math3.linear$RealVector$2#toArray()": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#unitVector()": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2#unitize()": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2$1#hasNext()": 3727.0,
        "org.apache.commons.math3.linear$RealVector$2$1#next()": 3727.0,
        "org.apache.commons.math3.linear$RealVector$2$1#remove()": 3735.0,
        "org.apache.commons.math3.linear$RealVector$2$2#hasNext()": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2$2#next()": 3731.0,
        "org.apache.commons.math3.linear$RealVector$2$2#remove()": 3735.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2)": 3723.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#getValue()": 3723.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#setValue(double)": 3727.0,
        "org.apache.commons.math3.linear$RealVector$Entry#RealVector$Entry(org.apache.commons.math3.linear.RealVector)": 3587.0,
        "org.apache.commons.math3.linear$RealVector$Entry#getIndex()": 3613.0,
        "org.apache.commons.math3.linear$RealVector$Entry#getValue()": 3619.0,
        "org.apache.commons.math3.linear$RealVector$Entry#setIndex(int)": 3587.0,
        "org.apache.commons.math3.linear$RealVector$Entry#setValue(double)": 3685.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#RealVector$SparseEntryIterator(org.apache.commons.math3.linear.RealVector)": 3673.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#advance(org.apache.commons.math3.linear.RealVector$Entry)": 3673.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#hasNext()": 3673.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#next()": 3677.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#remove()": 3735.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat()": 3719.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String)": 3735.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 11002069.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.text.NumberFormat)": 11002069.0,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector)": 3691.0,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition)": 3691.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getAvailableLocales()": 3735.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getFormat()": 3731.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance()": 11068519.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance(java.util.Locale)": 11002069.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getPrefix()": 3735.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSeparator()": 3735.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSuffix()": 3735.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String)": 3679.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String,java.text.ParsePosition)": 3663.0,
        "org.apache.commons.math3.optimization$GoalType#<clinit>()": 13039195.0,
        "org.apache.commons.math3.optimization$GoalType#GoalType(java.lang.String,int)": 13039195.0,
        "org.apache.commons.math3.optimization$PointValuePair#PointValuePair(double[],double)": 3537.0,
        "org.apache.commons.math3.optimization$PointValuePair#PointValuePair(double[],double,boolean)": 3537.0,
        "org.apache.commons.math3.optimization$PointValuePair#getPoint()": 3589.0,
        "org.apache.commons.math3.optimization$PointValuePair#getPointRef()": 3677.0,
        "org.apache.commons.math3.optimization$PointValuePair#writeReplace()": 3733.0,
        "org.apache.commons.math3.optimization$PointValuePair$DataTransferObject#PointValuePair$DataTransferObject(double[],double)": 3733.0,
        "org.apache.commons.math3.optimization$PointValuePair$DataTransferObject#readResolve()": 3733.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#AbstractLinearOptimizer()": 13771495.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#getConstraints()": 13771495.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#getFunction()": 13771495.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#getGoalType()": 13771495.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#getIterations()": 3735.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#getMaxIterations()": 3735.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#incrementIterationsCounter()": 13786345.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#optimize(org.apache.commons.math3.optimization.linear.LinearObjectiveFunction,java.util.Collection,org.apache.commons.math3.optimization.GoalType,boolean)": 13771495.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#restrictToNonNegative()": 13771495.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#setMaxIterations(int)": 13771495.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#LinearConstraint(double[],double,org.apache.commons.math3.optimization.linear.Relationship,double[],double)": 3735.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#LinearConstraint(double[],org.apache.commons.math3.optimization.linear.Relationship,double)": 13741819.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#LinearConstraint(org.apache.commons.math3.linear.RealVector,double,org.apache.commons.math3.optimization.linear.Relationship,org.apache.commons.math3.linear.RealVector,double)": 3735.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#LinearConstraint(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.optimization.linear.Relationship,double)": 13741819.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#equals(java.lang.Object)": 3733.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#getCoefficients()": 13741819.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#getRelationship()": 13741819.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#getValue()": 13741819.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#hashCode()": 3735.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#readObject(java.io.ObjectInputStream)": 3733.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#writeObject(java.io.ObjectOutputStream)": 3733.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#LinearObjectiveFunction(double[],double)": 13741819.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#LinearObjectiveFunction(org.apache.commons.math3.linear.RealVector,double)": 13741819.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#equals(java.lang.Object)": 3733.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#getCoefficients()": 13741819.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#getConstantTerm()": 13741819.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#getValue(double[])": 3693.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#getValue(org.apache.commons.math3.linear.RealVector)": 3735.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#hashCode()": 3735.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#readObject(java.io.ObjectInputStream)": 3733.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#writeObject(java.io.ObjectOutputStream)": 3733.0,
        "org.apache.commons.math3.optimization.linear$NoFeasibleSolutionException#NoFeasibleSolutionException()": 3729.0,
        "org.apache.commons.math3.optimization.linear$Relationship#<clinit>()": 13741819.0,
        "org.apache.commons.math3.optimization.linear$Relationship#Relationship(java.lang.String,int,java.lang.String)": 13741819.0,
        "org.apache.commons.math3.optimization.linear$Relationship#oppositeRelationship()": 3725.0,
        "org.apache.commons.math3.optimization.linear$Relationship#toString()": 3735.0,
        "org.apache.commons.math3.optimization.linear$Relationship$1#<clinit>()": 3725.0,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#SimplexSolver()": 13771495.0,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#SimplexSolver(double,int)": 13771495.0,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#doIteration(org.apache.commons.math3.optimization.linear.SimplexTableau)": 13786345.0,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#doOptimize()": 13771495.0,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#getPivotColumn(org.apache.commons.math3.optimization.linear.SimplexTableau)": 13786345.0,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#getPivotRow(org.apache.commons.math3.optimization.linear.SimplexTableau,int)": 13786345.0,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#solvePhase1(org.apache.commons.math3.optimization.linear.SimplexTableau)": 13771495.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#SimplexTableau(org.apache.commons.math3.optimization.linear.LinearObjectiveFunction,java.util.Collection,org.apache.commons.math3.optimization.GoalType,boolean,double)": 3727.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#SimplexTableau(org.apache.commons.math3.optimization.linear.LinearObjectiveFunction,java.util.Collection,org.apache.commons.math3.optimization.GoalType,boolean,double,int)": 13741819.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#copyArray(double[],double[])": 13741819.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#createTableau(boolean)": 13741819.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#divideRow(int,double)": 13786345.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#dropPhase1Objective()": 13786345.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#equals(java.lang.Object)": 3733.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getArtificialVariableOffset()": 13778919.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getBasicRow(int)": 13786345.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getConstraintTypeCounts(org.apache.commons.math3.optimization.linear.Relationship)": 13741819.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getData()": 3729.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getEntry(int,int)": 13764073.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getHeight()": 13771495.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getInvertedCoefficientSum(org.apache.commons.math3.linear.RealVector)": 3703.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getNumArtificialVariables()": 13741819.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getNumDecisionVariables()": 3735.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getNumObjectiveFunctions()": 13741819.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getNumSlackVariables()": 13741819.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getOriginalNumDecisionVariables()": 13741819.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getRhsOffset()": 13778919.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getSlackVariableOffset()": 13764073.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getSolution()": 3693.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getWidth()": 13764073.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#hashCode()": 3735.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#initializeColumnLabels()": 13741819.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#isOptimal()": 13771495.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#normalize(org.apache.commons.math3.optimization.linear.LinearConstraint)": 13741819.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#normalizeConstraints(java.util.Collection)": 13741819.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#readObject(java.io.ObjectInputStream)": 3733.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#setEntry(int,int,double)": 3735.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#subtractRow(int,int,double)": 13786345.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#writeObject(java.io.ObjectOutputStream)": 3733.0,
        "org.apache.commons.math3.optimization.linear$UnboundedSolutionException#UnboundedSolutionException()": 3733.0,
        "org.apache.commons.math3.util$CompositeFormat#CompositeFormat()": 3735.0,
        "org.apache.commons.math3.util$CompositeFormat#formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)": 3555.0,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat()": 10836819.0,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat(java.util.Locale)": 8380183.0,
        "org.apache.commons.math3.util$CompositeFormat#parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)": 3515.0,
        "org.apache.commons.math3.util$CompositeFormat#parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)": 3519.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNextCharacter(java.lang.String,java.text.ParsePosition)": 3515.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,double,java.text.ParsePosition)": 3687.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)": 3525.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 556515.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 3735.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 3733.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 4785795.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3731.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 3089.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 9041319.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 3695.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 3733.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 3693.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 3733.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 3697.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 3571.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 3585.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 3733.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 3657.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 1323.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 3709.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 3731.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 3279.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 3137.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 3689.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 3611.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 2413.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 1091.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 3709.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 3693.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 981.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 3605.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 3731.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 3611.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 1519.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 3733.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1083.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 3627.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 3707.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 3735.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 2595.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 3731.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 3177.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 3733.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 3223.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 3731.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 2677.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 3709.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 3709.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 3729.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 3731.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 3733.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 3061.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 3061.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 1379.0,
        "org.apache.commons.math3.util$FastMath#random()": 3697.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 3725.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3695.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 3697.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 3729.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 3641.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 3731.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 3713.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 3731.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 3109.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 3095.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 3689.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 623.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 3689.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 3689.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 3715.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3731.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3731.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 3269.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 3733.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 3213.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 3213.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 3213.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 3213.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 1101.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 3735.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 1109.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 3735.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1109.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 3735.0,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 3735.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 3701.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 3733.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 8796385.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3581.0,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 3727.0,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 3727.0,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 3731.0,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 3731.0,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 3641.0,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 3717.0,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 3663.0,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 3725.0,
        "org.apache.commons.math3.util$Pair#Pair(java.lang.Object,java.lang.Object)": 3203.0,
        "org.apache.commons.math3.util$Pair#Pair(org.apache.commons.math3.util.Pair)": 3735.0,
        "org.apache.commons.math3.util$Pair#equals(java.lang.Object)": 3733.0,
        "org.apache.commons.math3.util$Pair#getFirst()": 3595.0,
        "org.apache.commons.math3.util$Pair#getKey()": 3401.0,
        "org.apache.commons.math3.util$Pair#getSecond()": 3595.0,
        "org.apache.commons.math3.util$Pair#getValue()": 3485.0,
        "org.apache.commons.math3.util$Pair#hashCode()": 3733.0,
        "org.apache.commons.math3.util$Precision#<clinit>()": 7218919.0,
        "org.apache.commons.math3.util$Precision#Precision()": 3735.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 13564435.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 13771495.0,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 3443.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 11202019.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 9065395.0,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 3733.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 3735.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 3575.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 3485.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 3651.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 3733.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 3577.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 3735.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 3735.0,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 3733.0,
        "org.apache.commons.math3.util$Precision#round(double,int)": 3733.0,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 3733.0,
        "org.apache.commons.math3.util$Precision#round(float,int)": 3733.0,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 3733.0,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 3733.0
    },
    "Math-29": {
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 2991.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 2951.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 3259.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 3243.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3197.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 3265.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 3265.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 3263.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 1819.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 3251.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 3265.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 3265.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2095.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 3239.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 3251.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3243.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 3141.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 2871.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 3259.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 3259.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 3209.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 2905.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 3263.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 3263.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix()": 2695.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix(int,int)": 2463.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 3233.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#addToEntry(int,int,double)": 3265.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int,int,int,int,double[][])": 3215.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int[],int[],double[][])": 3261.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#equals(java.lang.Object)": 3181.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumn(int)": 3195.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnMatrix(int)": 3233.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnVector(int)": 3233.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getData()": 3261.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getFrobeniusNorm()": 3239.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getNorm()": 3123.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRow(int)": 3169.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowMatrix(int)": 3257.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowVector(int)": 3207.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int,int,int,int)": 3245.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int[],int[])": 3259.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getTrace()": 3259.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#hashCode()": 3251.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#isSquare()": 2997.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3085.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiplyEntry(int,int,double)": 3265.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(double[])": 3261.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(org.apache.commons.math3.linear.RealVector)": 3185.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#power(int)": 3261.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(double[])": 3263.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealMatrix)": 3259.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealVector)": 3265.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarAdd(double)": 3237.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarMultiply(double)": 3233.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumn(int,double[])": 3263.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3261.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 3223.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRow(int,double[])": 3263.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3263.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 3205.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setSubMatrix(double[][],int,int)": 3261.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 3117.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#toString()": 3255.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#transpose()": 2971.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3263.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3263.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3249.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3263.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3255.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3263.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 2967.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3217.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3263.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3265.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3261.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3265.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#end()": 3123.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#start(int,int,int,int,int,int)": 3123.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#visit(int,int,double)": 3123.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#end()": 3239.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#start(int,int,int,int,int,int)": 3239.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#visit(int,int,double)": 3239.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$3#visit(int,int,double)": 3259.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#start(int,int,int,int,int,int)": 3215.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#visit(int,int,double)": 3215.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$5#visit(int,int,double)": 2971.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix()": 3257.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[])": 3257.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][])": 2799.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][],boolean)": 3057.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(int,int)": 2737.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#add(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 3261.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#addToEntry(int,int,double)": 3265.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copy()": 3241.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyIn(double[][])": 2795.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyOut()": 2893.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#createMatrix(int,int)": 2909.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getColumnDimension()": 2625.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getData()": 2907.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getDataRef()": 3183.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getEntry(int,int)": 2797.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getRowDimension()": 2625.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 3243.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiplyEntry(int,int,double)": 3265.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#operate(double[])": 3181.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#preMultiply(double[])": 3263.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setEntry(int,int,double)": 2755.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setSubMatrix(double[][],int,int)": 2795.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 3263.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3263.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3263.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3133.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3263.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3257.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3263.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 2969.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3217.0,
        "org.apache.commons.math3.linear$ArrayRealVector#<clinit>()": 2513.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector()": 3259.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[])": 2863.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],boolean)": 2753.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],double[])": 3263.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],int,int)": 3263.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],org.apache.commons.math3.linear.ArrayRealVector)": 3263.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int)": 2985.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int,double)": 3259.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[])": 3263.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[],int,int)": 3263.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector)": 3263.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean)": 3065.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,double[])": 3263.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector)": 3259.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.RealVector)": 3261.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.ArrayRealVector)": 3263.0,
        "org.apache.commons.math3.linear$ArrayRealVector#add(org.apache.commons.math3.linear.RealVector)": 3247.0,
        "org.apache.commons.math3.linear$ArrayRealVector#addToEntry(int,double)": 3259.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(double)": 3261.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.ArrayRealVector)": 3265.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.RealVector)": 3261.0,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(int)": 3001.0,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 3247.0,
        "org.apache.commons.math3.linear$ArrayRealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 3231.0,
        "org.apache.commons.math3.linear$ArrayRealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 3183.0,
        "org.apache.commons.math3.linear$ArrayRealVector#copy()": 3067.0,
        "org.apache.commons.math3.linear$ArrayRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 3107.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": 3243.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 3231.0,
        "org.apache.commons.math3.linear$ArrayRealVector#equals(java.lang.Object)": 3169.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDataRef()": 3167.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDimension()": 2717.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 3259.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getEntry(int)": 2813.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3261.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Norm()": 3261.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3261.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfNorm()": 3261.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getNorm()": 3161.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getSubVector(int,int)": 3251.0,
        "org.apache.commons.math3.linear$ArrayRealVector#hashCode()": 3259.0,
        "org.apache.commons.math3.linear$ArrayRealVector#isInfinite()": 3261.0,
        "org.apache.commons.math3.linear$ArrayRealVector#isNaN()": 3163.0,
        "org.apache.commons.math3.linear$ArrayRealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 3255.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapAddToSelf(double)": 3261.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapDivideToSelf(double)": 3259.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapMultiplyToSelf(double)": 3141.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapSubtractToSelf(double)": 3261.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3255.0,
        "org.apache.commons.math3.linear$ArrayRealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 3259.0,
        "org.apache.commons.math3.linear$ArrayRealVector#projection(org.apache.commons.math3.linear.RealVector)": 3261.0,
        "org.apache.commons.math3.linear$ArrayRealVector#set(double)": 3177.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setEntry(int,double)": 3115.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,double[])": 3213.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 3211.0,
        "org.apache.commons.math3.linear$ArrayRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3109.0,
        "org.apache.commons.math3.linear$ArrayRealVector#toArray()": 3059.0,
        "org.apache.commons.math3.linear$ArrayRealVector#toString()": 3263.0,
        "org.apache.commons.math3.linear$ArrayRealVector#unitVector()": 3261.0,
        "org.apache.commons.math3.linear$ArrayRealVector#unitize()": 3261.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3261.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3257.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3261.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3257.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3263.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3261.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3263.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3261.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(int,int)": 3205.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3247.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#add(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3261.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#addToEntry(int,int,double)": 3265.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#computeKey(int,int)": 3207.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#copy()": 3261.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#createMatrix(int,int)": 3251.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getColumnDimension()": 3207.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getEntry(int,int)": 3211.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getRowDimension()": 3207.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3257.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3257.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiplyEntry(int,int,double)": 3265.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#setEntry(int,int,double)": 3207.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3253.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 3253.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector()": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(double[])": 10259141.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(double[],double)": 10259141.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(int)": 3257.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(int,double)": 3243.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(int,int)": 3265.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(int,int,double)": 3265.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(java.lang.Double[])": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(java.lang.Double[],double)": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(org.apache.commons.math3.linear.OpenMapRealVector)": 10588499.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(org.apache.commons.math3.linear.OpenMapRealVector,int)": 3261.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#add(org.apache.commons.math3.linear.OpenMapRealVector)": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#add(org.apache.commons.math3.linear.RealVector)": 3259.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#append(double)": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#append(org.apache.commons.math3.linear.OpenMapRealVector)": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#append(org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#copy()": 3241.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#dotProduct(org.apache.commons.math3.linear.OpenMapRealVector)": 3259.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 3259.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": 10666751.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 10666751.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#equals(java.lang.Object)": 3259.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#getDimension()": 10220735.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#getDistance(org.apache.commons.math3.linear.OpenMapRealVector)": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#getEntries()": 10581991.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#getEntry(int)": 10426399.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#getL1Distance(org.apache.commons.math3.linear.OpenMapRealVector)": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector)": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#getSparsity()": 3265.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#getSubVector(int,int)": 3251.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#hashCode()": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#isDefaultValue(double)": 10207949.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#isInfinite()": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#isNaN()": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#mapAdd(double)": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#mapAddToSelf(double)": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#projection(org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#set(double)": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#setEntry(int,double)": 10458719.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 3253.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#sparseIterator()": 3245.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#subtract(org.apache.commons.math3.linear.OpenMapRealVector)": 3261.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3257.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#toArray()": 3253.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#unitVector()": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#unitize()": 3263.0,
        "org.apache.commons.math3.linear$OpenMapRealVector$OpenMapEntry#OpenMapRealVector$OpenMapEntry(org.apache.commons.math3.linear.OpenMapRealVector,org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator)": 3245.0,
        "org.apache.commons.math3.linear$OpenMapRealVector$OpenMapEntry#getIndex()": 3255.0,
        "org.apache.commons.math3.linear$OpenMapRealVector$OpenMapEntry#getValue()": 3245.0,
        "org.apache.commons.math3.linear$OpenMapRealVector$OpenMapEntry#setValue(double)": 3261.0,
        "org.apache.commons.math3.linear$OpenMapRealVector$OpenMapSparseIterator#OpenMapRealVector$OpenMapSparseIterator(org.apache.commons.math3.linear.OpenMapRealVector)": 3245.0,
        "org.apache.commons.math3.linear$OpenMapRealVector$OpenMapSparseIterator#hasNext()": 3245.0,
        "org.apache.commons.math3.linear$OpenMapRealVector$OpenMapSparseIterator#next()": 3245.0,
        "org.apache.commons.math3.linear$OpenMapRealVector$OpenMapSparseIterator#remove()": 3265.0,
        "org.apache.commons.math3.linear$RealLinearOperator#RealLinearOperator()": 2243.0,
        "org.apache.commons.math3.linear$RealLinearOperator#isTransposable()": 3265.0,
        "org.apache.commons.math3.linear$RealLinearOperator#operateTranspose(org.apache.commons.math3.linear.RealVector)": 3265.0,
        "org.apache.commons.math3.linear$RealVector#RealVector()": 7689031.0,
        "org.apache.commons.math3.linear$RealVector#add(org.apache.commons.math3.linear.RealVector)": 3257.0,
        "org.apache.commons.math3.linear$RealVector#addToEntry(int,double)": 3253.0,
        "org.apache.commons.math3.linear$RealVector#checkIndex(int)": 10278371.0,
        "org.apache.commons.math3.linear$RealVector#checkIndices(int,int)": 3217.0,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(int)": 10419941.0,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 3203.0,
        "org.apache.commons.math3.linear$RealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 3249.0,
        "org.apache.commons.math3.linear$RealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 3229.0,
        "org.apache.commons.math3.linear$RealVector#cosine(org.apache.commons.math3.linear.RealVector)": 3239.0,
        "org.apache.commons.math3.linear$RealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 3259.0,
        "org.apache.commons.math3.linear$RealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$RealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$RealVector#getL1Norm()": 3263.0,
        "org.apache.commons.math3.linear$RealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$RealVector#getLInfNorm()": 3263.0,
        "org.apache.commons.math3.linear$RealVector#getMaxIndex()": 3257.0,
        "org.apache.commons.math3.linear$RealVector#getMaxValue()": 3257.0,
        "org.apache.commons.math3.linear$RealVector#getMinIndex()": 3257.0,
        "org.apache.commons.math3.linear$RealVector#getMinValue()": 3257.0,
        "org.apache.commons.math3.linear$RealVector#getNorm()": 3247.0,
        "org.apache.commons.math3.linear$RealVector#iterator()": 3245.0,
        "org.apache.commons.math3.linear$RealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 3259.0,
        "org.apache.commons.math3.linear$RealVector#mapAdd(double)": 3259.0,
        "org.apache.commons.math3.linear$RealVector#mapAddToSelf(double)": 3265.0,
        "org.apache.commons.math3.linear$RealVector#mapDivide(double)": 3253.0,
        "org.apache.commons.math3.linear$RealVector#mapDivideToSelf(double)": 3261.0,
        "org.apache.commons.math3.linear$RealVector#mapMultiply(double)": 3133.0,
        "org.apache.commons.math3.linear$RealVector#mapMultiplyToSelf(double)": 3261.0,
        "org.apache.commons.math3.linear$RealVector#mapSubtract(double)": 3257.0,
        "org.apache.commons.math3.linear$RealVector#mapSubtractToSelf(double)": 3263.0,
        "org.apache.commons.math3.linear$RealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3257.0,
        "org.apache.commons.math3.linear$RealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 3259.0,
        "org.apache.commons.math3.linear$RealVector#set(double)": 3265.0,
        "org.apache.commons.math3.linear$RealVector#sparseIterator()": 3237.0,
        "org.apache.commons.math3.linear$RealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3257.0,
        "org.apache.commons.math3.linear$RealVector#toArray()": 3265.0,
        "org.apache.commons.math3.linear$RealVector#unitVector()": 3265.0,
        "org.apache.commons.math3.linear$RealVector#unitize()": 3265.0,
        "org.apache.commons.math3.linear$RealVector#unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)": 3211.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3257.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3249.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3257.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3249.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3261.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3257.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3261.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3257.0,
        "org.apache.commons.math3.linear$RealVector$1#hasNext()": 3245.0,
        "org.apache.commons.math3.linear$RealVector$1#next()": 3245.0,
        "org.apache.commons.math3.linear$RealVector$1#remove()": 3265.0,
        "org.apache.commons.math3.linear$RealVector$2#add(org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#addToEntry(int,double)": 3261.0,
        "org.apache.commons.math3.linear$RealVector$2#append(double)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#append(org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#combine(double,double,org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#copy()": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#cosine(org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#dotProduct(org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeDivide(org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#getDimension()": 3255.0,
        "org.apache.commons.math3.linear$RealVector$2#getDistance(org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#getEntry(int)": 3251.0,
        "org.apache.commons.math3.linear$RealVector$2#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#getL1Norm()": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#getLInfNorm()": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#getNorm()": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#getSubVector(int,int)": 3261.0,
        "org.apache.commons.math3.linear$RealVector$2#isInfinite()": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#isNaN()": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#iterator()": 3259.0,
        "org.apache.commons.math3.linear$RealVector$2#map(org.apache.commons.math3.analysis.UnivariateFunction)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#mapAdd(double)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#mapAddToSelf(double)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#mapDivide(double)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#mapDivideToSelf(double)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiply(double)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiplyToSelf(double)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtract(double)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtractToSelf(double)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#outerProduct(org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#projection(org.apache.commons.math3.linear.RealVector)": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#set(double)": 3261.0,
        "org.apache.commons.math3.linear$RealVector$2#setEntry(int,double)": 3261.0,
        "org.apache.commons.math3.linear$RealVector$2#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 3261.0,
        "org.apache.commons.math3.linear$RealVector$2#sparseIterator()": 3261.0,
        "org.apache.commons.math3.linear$RealVector$2#subtract(org.apache.commons.math3.linear.RealVector)": 3259.0,
        "org.apache.commons.math3.linear$RealVector$2#toArray()": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#unitVector()": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2#unitize()": 3263.0,
        "org.apache.commons.math3.linear$RealVector$2$1#hasNext()": 3259.0,
        "org.apache.commons.math3.linear$RealVector$2$1#next()": 3259.0,
        "org.apache.commons.math3.linear$RealVector$2$1#remove()": 3265.0,
        "org.apache.commons.math3.linear$RealVector$2$2#hasNext()": 3261.0,
        "org.apache.commons.math3.linear$RealVector$2$2#next()": 3261.0,
        "org.apache.commons.math3.linear$RealVector$2$2#remove()": 3265.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2)": 3255.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#getValue()": 3255.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#setValue(double)": 3257.0,
        "org.apache.commons.math3.linear$RealVector$Entry#RealVector$Entry(org.apache.commons.math3.linear.RealVector)": 3197.0,
        "org.apache.commons.math3.linear$RealVector$Entry#getIndex()": 3211.0,
        "org.apache.commons.math3.linear$RealVector$Entry#getValue()": 3221.0,
        "org.apache.commons.math3.linear$RealVector$Entry#setIndex(int)": 3197.0,
        "org.apache.commons.math3.linear$RealVector$Entry#setValue(double)": 3259.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#RealVector$SparseEntryIterator(org.apache.commons.math3.linear.RealVector)": 3237.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#advance(org.apache.commons.math3.linear.RealVector$Entry)": 3237.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#hasNext()": 3237.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#next()": 3237.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#remove()": 3265.0,
        "org.apache.commons.math3.linear$SparseRealVector#SparseRealVector()": 10207949.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 145339.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 3265.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 3263.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 3191885.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3257.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 2619.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 1837.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 3227.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 3263.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 3225.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 3263.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 3229.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 3103.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 3115.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 3263.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 3189.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 4408829.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 3241.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 3261.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 2823.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 2683.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 3221.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 3135.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 1947.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 755.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 3241.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 3225.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 3719699.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 3135.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 3261.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 3141.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 1061.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 3263.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 749.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 3159.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 3239.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 3265.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 2165.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 3261.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 2737.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 3263.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 2765.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 3261.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 2153.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 3239.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 3239.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 3259.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 3261.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 3263.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 2609.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 2609.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 1045.0,
        "org.apache.commons.math3.util$FastMath#random()": 3227.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 3255.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3227.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 3227.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 3259.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 3171.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 3261.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 3245.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 3261.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 2653.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 2643.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 3221.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 223.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 3221.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 3221.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 3247.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3261.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3261.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 2803.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 3259.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 765.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 3265.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 773.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 3265.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 775.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 3265.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#OpenIntToDoubleHashMap()": 3235.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#OpenIntToDoubleHashMap(double)": 10036121.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#OpenIntToDoubleHashMap(int)": 3261.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#OpenIntToDoubleHashMap(int,double)": 9928681.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#OpenIntToDoubleHashMap(org.apache.commons.math3.util.OpenIntToDoubleHashMap)": 10510535.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#changeIndexSign(int)": 10471661.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#computeCapacity(int)": 9928681.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#containsKey(int)": 10542985.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#containsKey(int,int)": 10163261.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#doRemove(int)": 10542985.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#findInsertionIndex(int)": 10036121.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#findInsertionIndex(int[],byte[],int,int)": 10036121.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#get(int)": 10188785.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#growTable()": 10523509.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#hashOf(int)": 10023451.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#iterator()": 10445785.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#nextPowerOfTwo(int)": 3263.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#perturb(int)": 10478135.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#probe(int,int)": 10478135.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#put(int,double)": 10036121.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#readObject(java.io.ObjectInputStream)": 3261.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#remove(int)": 10445785.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#shouldGrowTable()": 10036121.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#size()": 3235.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap$Iterator#OpenIntToDoubleHashMap$Iterator(org.apache.commons.math3.util.OpenIntToDoubleHashMap)": 10445785.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap$Iterator#advance()": 10445785.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap$Iterator#hasNext()": 10452251.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap$Iterator#key()": 10491089.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap$Iterator#value()": 10452251.0
    },
    "Math-3": {
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 1524.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 1482.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 1874.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 1858.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 1772.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 1880.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 1880.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 1878.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 92.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 1862.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 1880.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 1876.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 422.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 1852.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 1750.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 1880.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 1696.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 1756.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 1878.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 1880.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 1856.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 1820.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 1878.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 1848.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 1878.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 1878.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 1878.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 1878.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 1836.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 1856.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 1776.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 1716.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 1776.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 1722.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 1662.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 1384.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 1874.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 1874.0,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 1880.0,
        "org.apache.commons.math3.util$MathArrays#buildArray(org.apache.commons.math3.Field,int)": 1614.0,
        "org.apache.commons.math3.util$MathArrays#buildArray(org.apache.commons.math3.Field,int,int)": 1618.0,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[])": 1068.0,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[][])": 1870.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 1784.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 1782.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 1514.0,
        "org.apache.commons.math3.util$MathArrays#checkPositive(double[])": 1086.0,
        "org.apache.commons.math3.util$MathArrays#checkRectangular(long[][])": 1870.0,
        "org.apache.commons.math3.util$MathArrays#convolve(double[],double[])": 1878.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 1754.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 1698.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 1868.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": 1798.0,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 1856.0,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 1866.0,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 1874.0,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 1878.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 1874.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 1878.0,
        "org.apache.commons.math3.util$MathArrays#ebeAdd(double[],double[])": 1876.0,
        "org.apache.commons.math3.util$MathArrays#ebeDivide(double[],double[])": 1862.0,
        "org.apache.commons.math3.util$MathArrays#ebeMultiply(double[],double[])": 1876.0,
        "org.apache.commons.math3.util$MathArrays#ebeSubtract(double[],double[])": 1872.0,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 1874.0,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 1880.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 1870.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 1880.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 1878.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 1878.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 1732.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 1728.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 1856.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": 3496888.0,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": 1830.0,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 1880.0,
        "org.apache.commons.math3.util$MathArrays#scale(double,double[])": 1878.0,
        "org.apache.commons.math3.util$MathArrays#scaleInPlace(double,double[])": 1866.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 1862.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 1860.0,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 1864.0,
        "org.apache.commons.math3.util$MathArrays$2#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 1878.0,
        "org.apache.commons.math3.util$MathArrays$3#<clinit>()": 1522.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 1502.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 1502.0
    },
    "Math-30": {
        "org.apache.commons.math3.distribution$AbstractRealDistribution#AbstractRealDistribution()": 6842923.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#cumulativeProbability(double,double)": 3077.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#getSolverAbsoluteAccuracy()": 3143.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#inverseCumulativeProbability(double)": 2935.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#reseedRandomGenerator(long)": 3127.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#sample()": 3137.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#sample(int)": 3127.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution$1#value(double)": 2959.0,
        "org.apache.commons.math3.distribution$NormalDistribution#<clinit>()": 9578971.0,
        "org.apache.commons.math3.distribution$NormalDistribution#NormalDistribution()": 3147.0,
        "org.apache.commons.math3.distribution$NormalDistribution#NormalDistribution(double,double)": 9578971.0,
        "org.apache.commons.math3.distribution$NormalDistribution#NormalDistribution(double,double,double)": 9578971.0,
        "org.apache.commons.math3.distribution$NormalDistribution#cumulativeProbability(double)": 9847033.0,
        "org.apache.commons.math3.distribution$NormalDistribution#cumulativeProbability(double,double)": 3139.0,
        "org.apache.commons.math3.distribution$NormalDistribution#density(double)": 3141.0,
        "org.apache.commons.math3.distribution$NormalDistribution#getMean()": 3135.0,
        "org.apache.commons.math3.distribution$NormalDistribution#getNumericalMean()": 3139.0,
        "org.apache.commons.math3.distribution$NormalDistribution#getNumericalVariance()": 3139.0,
        "org.apache.commons.math3.distribution$NormalDistribution#getSolverAbsoluteAccuracy()": 3141.0,
        "org.apache.commons.math3.distribution$NormalDistribution#getStandardDeviation()": 3135.0,
        "org.apache.commons.math3.distribution$NormalDistribution#getSupportLowerBound()": 3139.0,
        "org.apache.commons.math3.distribution$NormalDistribution#getSupportUpperBound()": 3139.0,
        "org.apache.commons.math3.distribution$NormalDistribution#isSupportConnected()": 3141.0,
        "org.apache.commons.math3.distribution$NormalDistribution#isSupportLowerBoundInclusive()": 3147.0,
        "org.apache.commons.math3.distribution$NormalDistribution#isSupportUpperBoundInclusive()": 3147.0,
        "org.apache.commons.math3.distribution$NormalDistribution#probability(double)": 3147.0,
        "org.apache.commons.math3.distribution$NormalDistribution#sample()": 3145.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 3125.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3079.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 3147.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 3147.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 3145.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 1733.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 3133.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 3147.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 3147.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2009.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 3121.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 3057.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3147.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3017.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 3059.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 3145.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 3145.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 3109.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 3109.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 3125.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 3125.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 3095.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 3133.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3125.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 3073.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 2987.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 3057.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3003.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 3105.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 2913.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 3145.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 3145.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 3023.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 2753.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 3141.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 3141.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 3091.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 2799.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 3145.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 3145.0,
        "org.apache.commons.math3.random$RandomDataImpl#<clinit>()": 4865493.0,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl()": 4883161.0,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl(org.apache.commons.math3.random.RandomGenerator)": 1941.0,
        "org.apache.commons.math3.random$RandomDataImpl#getNatural(int)": 3099.0,
        "org.apache.commons.math3.random$RandomDataImpl#getRan()": 2301.0,
        "org.apache.commons.math3.random$RandomDataImpl#getSecRan()": 3111.0,
        "org.apache.commons.math3.random$RandomDataImpl#initRan()": 1789.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextBeta(double,double)": 3125.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextBinomial(int,double)": 3125.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextCauchy(double,double)": 3125.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextChiSquare(double)": 3125.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextExponential(double)": 3097.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextF(double,double)": 3125.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextGamma(double,double)": 3123.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextGaussian(double,double)": 3073.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextHexString(int)": 3125.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextHypergeometric(int,int,int)": 3125.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInt(int,int)": 2993.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.IntegerDistribution)": 3051.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.RealDistribution)": 2983.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextLong(long,long)": 3013.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextPascal(int,double)": 3125.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextPermutation(int,int)": 3099.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextPoisson(double)": 3079.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSample(java.util.Collection,int)": 3123.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureHexString(int)": 3123.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureInt(int,int)": 3139.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureLong(long,long)": 3117.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextT(double)": 3125.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double)": 2611.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double,boolean)": 2609.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextWeibull(double,double)": 3125.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextZipf(int,double)": 3125.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed()": 3125.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed(long)": 1813.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure()": 3125.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure(long)": 3125.0,
        "org.apache.commons.math3.random$RandomDataImpl#setSecureAlgorithm(java.lang.String,java.lang.String)": 3147.0,
        "org.apache.commons.math3.random$RandomDataImpl#shuffle(int[],int)": 3099.0,
        "org.apache.commons.math3.special$Erf#Erf()": 3147.0,
        "org.apache.commons.math3.special$Erf#erf(double)": 9759351.0,
        "org.apache.commons.math3.special$Erf#erf(double,double)": 3133.0,
        "org.apache.commons.math3.special$Erf#erfc(double)": 3117.0,
        "org.apache.commons.math3.special$Gamma#<clinit>()": 7139107.0,
        "org.apache.commons.math3.special$Gamma#Gamma()": 3147.0,
        "org.apache.commons.math3.special$Gamma#digamma(double)": 3143.0,
        "org.apache.commons.math3.special$Gamma#lanczos(double)": 2221.0,
        "org.apache.commons.math3.special$Gamma#logGamma(double)": 2241.0,
        "org.apache.commons.math3.special$Gamma#regularizedGammaP(double,double)": 2459.0,
        "org.apache.commons.math3.special$Gamma#regularizedGammaP(double,double,double,int)": 7661443.0,
        "org.apache.commons.math3.special$Gamma#regularizedGammaQ(double,double)": 3133.0,
        "org.apache.commons.math3.special$Gamma#regularizedGammaQ(double,double,double,int)": 2697.0,
        "org.apache.commons.math3.special$Gamma#trigamma(double)": 3145.0,
        "org.apache.commons.math3.special$Gamma$1#getA(int,double)": 2727.0,
        "org.apache.commons.math3.special$Gamma$1#getB(int,double)": 2727.0,
        "org.apache.commons.math3.stat.inference$MannWhitneyUTest#MannWhitneyUTest()": 9897313.0,
        "org.apache.commons.math3.stat.inference$MannWhitneyUTest#MannWhitneyUTest(org.apache.commons.math3.stat.ranking.NaNStrategy,org.apache.commons.math3.stat.ranking.TiesStrategy)": 3147.0,
        "org.apache.commons.math3.stat.inference$MannWhitneyUTest#calculateAsymptoticPValue(double,int,int)": 9903607.0,
        "org.apache.commons.math3.stat.inference$MannWhitneyUTest#concatenateSamples(double[],double[])": 9903607.0,
        "org.apache.commons.math3.stat.inference$MannWhitneyUTest#ensureDataConformance(double[],double[])": 9897313.0,
        "org.apache.commons.math3.stat.inference$MannWhitneyUTest#mannWhitneyU(double[],double[])": 9903607.0,
        "org.apache.commons.math3.stat.inference$MannWhitneyUTest#mannWhitneyUTest(double[],double[])": 9897313.0,
        "org.apache.commons.math3.stat.ranking$NaNStrategy#<clinit>()": 9809407.0,
        "org.apache.commons.math3.stat.ranking$NaNStrategy#NaNStrategy(java.lang.String,int)": 9809407.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#<clinit>()": 9809407.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#NaturalRanking()": 3135.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#NaturalRanking(org.apache.commons.math3.random.RandomGenerator)": 3147.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#NaturalRanking(org.apache.commons.math3.stat.ranking.NaNStrategy)": 3143.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#NaturalRanking(org.apache.commons.math3.stat.ranking.NaNStrategy,org.apache.commons.math3.random.RandomGenerator)": 3145.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#NaturalRanking(org.apache.commons.math3.stat.ranking.NaNStrategy,org.apache.commons.math3.stat.ranking.TiesStrategy)": 9872157.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#NaturalRanking(org.apache.commons.math3.stat.ranking.TiesStrategy)": 3145.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#containsNaNs(org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair[])": 3145.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#fill(double[],java.util.List,double)": 3131.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#getNanPositions(org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair[])": 9884731.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#getNanStrategy()": 3147.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#getTiesStrategy()": 3147.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#rank(double[])": 9815673.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#recodeNaNs(org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair[],double)": 3127.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#removeNaNs(org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair[])": 3145.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#resolveTie(double[],java.util.List)": 3127.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#restoreNaNs(double[],java.util.List)": 9884731.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking$1#<clinit>()": 9815673.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking$IntDoublePair#NaturalRanking$IntDoublePair(double,int)": 9815673.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking$IntDoublePair#compareTo(org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair)": 9815673.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking$IntDoublePair#getPosition()": 9815673.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking$IntDoublePair#getValue()": 9815673.0,
        "org.apache.commons.math3.stat.ranking$TiesStrategy#<clinit>()": 9809407.0,
        "org.apache.commons.math3.stat.ranking$TiesStrategy#TiesStrategy(java.lang.String,int)": 9809407.0,
        "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()": 3712107.0,
        "org.apache.commons.math3.util$ArithmeticUtils#ArithmeticUtils()": 3147.0,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(int,int)": 3065.0,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long)": 3141.0,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long,org.apache.commons.math3.exception.util.Localizable)": 3139.0,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficient(int,int)": 3113.0,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientDouble(int,int)": 3131.0,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)": 3139.0,
        "org.apache.commons.math3.util$ArithmeticUtils#checkBinomial(int,int)": 3111.0,
        "org.apache.commons.math3.util$ArithmeticUtils#factorial(int)": 4856671.0,
        "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)": 3143.0,
        "org.apache.commons.math3.util$ArithmeticUtils#factorialLog(int)": 3121.0,
        "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)": 2725.0,
        "org.apache.commons.math3.util$ArithmeticUtils#gcd(long,long)": 3141.0,
        "org.apache.commons.math3.util$ArithmeticUtils#isPowerOfTwo(long)": 3057.0,
        "org.apache.commons.math3.util$ArithmeticUtils#lcm(int,int)": 3145.0,
        "org.apache.commons.math3.util$ArithmeticUtils#lcm(long,long)": 3145.0,
        "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(int,int)": 3017.0,
        "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(long,long)": 3121.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(int,int)": 3145.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(int,long)": 3145.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,int)": 3145.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,java.math.BigInteger)": 3143.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,long)": 3143.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(long,int)": 3145.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(long,long)": 3145.0,
        "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(int,int)": 3089.0,
        "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(long,long)": 3145.0,
        "org.apache.commons.math3.util$ContinuedFraction#ContinuedFraction()": 2491.0,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double)": 3147.0,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double,double)": 3145.0,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double,double,int)": 2491.0,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double,int)": 3147.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 78933.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 3147.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 3145.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 2827657.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3139.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 2501.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 1719.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 3109.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 3145.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 3107.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 3145.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 3111.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 2985.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 2997.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 3145.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 3071.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 3978871.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 3123.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 3143.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 2705.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 2565.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 3103.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 3017.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 1831.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 3585981.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 3123.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 3107.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 3325651.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 3017.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 3143.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 3023.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 4189107.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 3145.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 3574623.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 3041.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 3121.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 3147.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 6749053.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 3143.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 2619.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 3145.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 2647.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 3143.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 2047.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 3121.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 3121.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 3141.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 3143.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 3145.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 2489.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 2489.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 4156411.0,
        "org.apache.commons.math3.util$FastMath#random()": 3109.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 3137.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3109.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 3109.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 3141.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 3053.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 3143.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 3127.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 3143.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 2533.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 2523.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 3103.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 2645607.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 3103.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 3103.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 3129.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3143.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3143.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 2685.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 3141.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 3604951.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 3147.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 3620163.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 3147.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 3623971.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 3147.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 3311071.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 3147.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 3604951.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 3604951.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 3620163.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 3620163.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 3623971.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray()": 3045.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(double[])": 3145.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(int)": 4861081.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(int,float)": 3145.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(int,float,float)": 3141.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(int,float,float,int)": 3139.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(org.apache.commons.math3.util.ResizableDoubleArray)": 3143.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#addElement(double)": 4694907.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#addElementRolling(double)": 3131.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#addElements(double[])": 3145.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#checkContractExpand(float,float)": 3133.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#clear()": 3129.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#contract()": 4699243.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#copy()": 3141.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#copy(org.apache.commons.math3.util.ResizableDoubleArray,org.apache.commons.math3.util.ResizableDoubleArray)": 3139.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#discardExtremeElements(int,boolean)": 3133.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#discardFrontElements(int)": 3139.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#discardMostRecentElements(int)": 3137.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#equals(java.lang.Object)": 3143.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#expand()": 4720953.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#expandTo(int)": 3143.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#getContractionCriteria()": 3143.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#getElement(int)": 3133.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#getElements()": 4834651.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#getExpansionFactor()": 3133.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#getExpansionMode()": 3143.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#getInternalLength()": 3137.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#getInternalValues()": 3095.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#getNumElements()": 3065.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#hashCode()": 3145.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#setContractionCriteria(float)": 3133.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#setElement(int,double)": 3145.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#setExpansionFactor(float)": 3145.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#setExpansionMode(int)": 3137.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#setInitialCapacity(int)": 4843453.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#setNumElements(int)": 3145.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#shouldContract()": 4694907.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#start()": 3095.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#substituteMostRecentElement(double)": 3141.0
    },
    "Math-31": {
        "org.apache.commons.math3.analysis.solvers$AbstractUnivariateSolver#AbstractUnivariateSolver(double)": 8921976.0,
        "org.apache.commons.math3.analysis.solvers$AbstractUnivariateSolver#AbstractUnivariateSolver(double,double)": 3158.0,
        "org.apache.commons.math3.analysis.solvers$AbstractUnivariateSolver#AbstractUnivariateSolver(double,double,double)": 3158.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#BaseAbstractUnivariateSolver(double)": 8880200.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#BaseAbstractUnivariateSolver(double,double)": 3158.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#BaseAbstractUnivariateSolver(double,double,double)": 8820690.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#computeObjectiveValue(double)": 8868282.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getAbsoluteAccuracy()": 2806.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getEvaluations()": 3108.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getFunctionValueAccuracy()": 8957862.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getMax()": 8874240.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getMaxEvaluations()": 3176.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getMin()": 8874240.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getRelativeAccuracy()": 2818.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getStartValue()": 9138372.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#incrementEvaluationCount()": 8868282.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#isBracketing(double,double)": 3170.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#isSequence(double,double,double)": 3164.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#setup(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 8862326.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double)": 3170.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 9053910.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 8862326.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#verifyBracketing(double,double)": 3096.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#verifyInterval(double,double)": 3162.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#verifySequence(double,double,double)": 9150470.0,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#BrentSolver()": 3138.0,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#BrentSolver(double)": 9375726.0,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#BrentSolver(double,double)": 3172.0,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#BrentSolver(double,double,double)": 3176.0,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#brent(double,double,double,double)": 2952.0,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#doSolve()": 9363480.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#UnivariateSolverUtils()": 3176.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 3166.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,int)": 3164.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#forceSide(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver,double,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution)": 3166.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#isBracketing(org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 3096.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#isSequence(double,double,double)": 3164.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#midpoint(double,double)": 3164.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#solve(org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 3168.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#solve(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 9492462.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#verifyBracketing(org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 3096.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#verifyInterval(double,double)": 8767302.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#verifySequence(double,double,double)": 9126282.0,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#AbstractIntegerDistribution()": 9290172.0,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#checkedCumulativeProbability(int)": 9740582.0,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#cumulativeProbability(int,int)": 3140.0,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#inverseCumulativeProbability(double)": 9628532.0,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#reseedRandomGenerator(long)": 3142.0,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#sample()": 3168.0,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#sample(int)": 3164.0,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#solveInverseCumulativeProbability(double,int,int)": 9709392.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#AbstractRealDistribution()": 7128390.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#cumulativeProbability(double,double)": 3106.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#getSolverAbsoluteAccuracy()": 3172.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#inverseCumulativeProbability(double)": 9443222.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#reseedRandomGenerator(long)": 3156.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#sample()": 3164.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#sample(int)": 3156.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution$1#value(double)": 9517130.0,
        "org.apache.commons.math3.distribution$BinomialDistribution#BinomialDistribution(int,double)": 9972942.0,
        "org.apache.commons.math3.distribution$BinomialDistribution#cumulativeProbability(int)": 9991902.0,
        "org.apache.commons.math3.distribution$BinomialDistribution#getNumberOfTrials()": 3154.0,
        "org.apache.commons.math3.distribution$BinomialDistribution#getNumericalMean()": 9998226.0,
        "org.apache.commons.math3.distribution$BinomialDistribution#getNumericalVariance()": 9998226.0,
        "org.apache.commons.math3.distribution$BinomialDistribution#getProbabilityOfSuccess()": 3154.0,
        "org.apache.commons.math3.distribution$BinomialDistribution#getSupportLowerBound()": 9998226.0,
        "org.apache.commons.math3.distribution$BinomialDistribution#getSupportUpperBound()": 9998226.0,
        "org.apache.commons.math3.distribution$BinomialDistribution#isSupportConnected()": 3176.0,
        "org.apache.commons.math3.distribution$BinomialDistribution#probability(int)": 3168.0,
        "org.apache.commons.math3.distribution$FDistribution#FDistribution(double,double)": 9928772.0,
        "org.apache.commons.math3.distribution$FDistribution#FDistribution(double,double,double)": 9928772.0,
        "org.apache.commons.math3.distribution$FDistribution#calculateNumericalVariance()": 9998226.0,
        "org.apache.commons.math3.distribution$FDistribution#cumulativeProbability(double)": 9966626.0,
        "org.apache.commons.math3.distribution$FDistribution#density(double)": 3174.0,
        "org.apache.commons.math3.distribution$FDistribution#getDenominatorDegreesOfFreedom()": 9991902.0,
        "org.apache.commons.math3.distribution$FDistribution#getNumeratorDegreesOfFreedom()": 9998226.0,
        "org.apache.commons.math3.distribution$FDistribution#getNumericalMean()": 9998226.0,
        "org.apache.commons.math3.distribution$FDistribution#getNumericalVariance()": 9998226.0,
        "org.apache.commons.math3.distribution$FDistribution#getSolverAbsoluteAccuracy()": 10004552.0,
        "org.apache.commons.math3.distribution$FDistribution#getSupportLowerBound()": 9998226.0,
        "org.apache.commons.math3.distribution$FDistribution#getSupportUpperBound()": 9998226.0,
        "org.apache.commons.math3.distribution$FDistribution#isSupportConnected()": 3146.0,
        "org.apache.commons.math3.distribution$FDistribution#isSupportLowerBoundInclusive()": 3176.0,
        "org.apache.commons.math3.distribution$FDistribution#isSupportUpperBoundInclusive()": 3176.0,
        "org.apache.commons.math3.distribution$FDistribution#probability(double)": 3176.0,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException()": 3174.0,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 10017210.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 3154.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3118.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 3176.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 3176.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 3174.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 1864.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 3162.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 3176.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 3176.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2138.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 3150.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 9809376.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3176.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 9684476.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 9821910.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 10086972.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 3174.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 3138.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 3138.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 3154.0,
        "org.apache.commons.math3.exception$NoBracketingException#NoBracketingException(double,double,double,double)": 3154.0,
        "org.apache.commons.math3.exception$NoBracketingException#NoBracketingException(org.apache.commons.math3.exception.util.Localizable,double,double,double,double,java.lang.Object[])": 3154.0,
        "org.apache.commons.math3.exception$NoBracketingException#getFHi()": 3176.0,
        "org.apache.commons.math3.exception$NoBracketingException#getFLo()": 3176.0,
        "org.apache.commons.math3.exception$NoBracketingException#getHi()": 3176.0,
        "org.apache.commons.math3.exception$NoBracketingException#getLo()": 3176.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 3162.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 3162.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 3162.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3158.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 3102.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3016.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 3086.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3032.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 3136.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 2944.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 3174.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 3174.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 3052.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 2810.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 3170.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 3170.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 3120.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 2900.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 3174.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 3174.0,
        "org.apache.commons.math3.exception$TooManyEvaluationsException#TooManyEvaluationsException(java.lang.Number)": 3152.0,
        "org.apache.commons.math3.random$RandomDataImpl#<clinit>()": 5016660.0,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl()": 5034600.0,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl(org.apache.commons.math3.random.RandomGenerator)": 1970.0,
        "org.apache.commons.math3.random$RandomDataImpl#getNatural(int)": 3128.0,
        "org.apache.commons.math3.random$RandomDataImpl#getRan()": 2332.0,
        "org.apache.commons.math3.random$RandomDataImpl#getSecRan()": 3140.0,
        "org.apache.commons.math3.random$RandomDataImpl#initRan()": 1820.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextBeta(double,double)": 3154.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextBinomial(int,double)": 3154.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextCauchy(double,double)": 3154.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextChiSquare(double)": 3154.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextExponential(double)": 3126.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextF(double,double)": 3154.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextGamma(double,double)": 3154.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextGaussian(double,double)": 3102.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextHexString(int)": 3154.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextHypergeometric(int,int,int)": 3154.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInt(int,int)": 3022.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.IntegerDistribution)": 3080.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.RealDistribution)": 3010.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextLong(long,long)": 3042.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextPascal(int,double)": 3154.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextPermutation(int,int)": 3128.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextPoisson(double)": 3108.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSample(java.util.Collection,int)": 3152.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureHexString(int)": 3152.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureInt(int,int)": 3168.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureLong(long,long)": 3146.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextT(double)": 3154.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double)": 2642.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double,boolean)": 2640.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextWeibull(double,double)": 3154.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextZipf(int,double)": 3154.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed()": 3154.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed(long)": 1844.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure()": 3154.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure(long)": 3154.0,
        "org.apache.commons.math3.random$RandomDataImpl#setSecureAlgorithm(java.lang.String,java.lang.String)": 3176.0,
        "org.apache.commons.math3.random$RandomDataImpl#shuffle(int[],int)": 3128.0,
        "org.apache.commons.math3.special$Beta#Beta()": 3176.0,
        "org.apache.commons.math3.special$Beta#logBeta(double,double)": 3160.0,
        "org.apache.commons.math3.special$Beta#logBeta(double,double,double,int)": 9284076.0,
        "org.apache.commons.math3.special$Beta#regularizedBeta(double,double,double)": 9284076.0,
        "org.apache.commons.math3.special$Beta#regularizedBeta(double,double,double,double)": 3176.0,
        "org.apache.commons.math3.special$Beta#regularizedBeta(double,double,double,double,int)": 9284076.0,
        "org.apache.commons.math3.special$Beta#regularizedBeta(double,double,double,int)": 3176.0,
        "org.apache.commons.math3.special$Beta$1#getA(int,double)": 9332900.0,
        "org.apache.commons.math3.special$Beta$1#getB(int,double)": 9332900.0,
        "org.apache.commons.math3.special$Gamma#<clinit>()": 7436076.0,
        "org.apache.commons.math3.special$Gamma#Gamma()": 3176.0,
        "org.apache.commons.math3.special$Gamma#digamma(double)": 3172.0,
        "org.apache.commons.math3.special$Gamma#lanczos(double)": 7507160.0,
        "org.apache.commons.math3.special$Gamma#logGamma(double)": 7562070.0,
        "org.apache.commons.math3.special$Gamma#regularizedGammaP(double,double)": 2534.0,
        "org.apache.commons.math3.special$Gamma#regularizedGammaP(double,double,double,int)": 2462.0,
        "org.apache.commons.math3.special$Gamma#regularizedGammaQ(double,double)": 3162.0,
        "org.apache.commons.math3.special$Gamma#regularizedGammaQ(double,double,double,int)": 2736.0,
        "org.apache.commons.math3.special$Gamma#trigamma(double)": 3174.0,
        "org.apache.commons.math3.special$Gamma$1#getA(int,double)": 2766.0,
        "org.apache.commons.math3.special$Gamma$1#getB(int,double)": 2766.0,
        "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()": 3844302.0,
        "org.apache.commons.math3.util$ArithmeticUtils#ArithmeticUtils()": 3176.0,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(int,int)": 3094.0,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long)": 3170.0,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long,org.apache.commons.math3.exception.util.Localizable)": 3168.0,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficient(int,int)": 3110.0,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientDouble(int,int)": 3158.0,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)": 3134.0,
        "org.apache.commons.math3.util$ArithmeticUtils#checkBinomial(int,int)": 3106.0,
        "org.apache.commons.math3.util$ArithmeticUtils#factorial(int)": 5007702.0,
        "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)": 3172.0,
        "org.apache.commons.math3.util$ArithmeticUtils#factorialLog(int)": 3150.0,
        "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)": 2754.0,
        "org.apache.commons.math3.util$ArithmeticUtils#gcd(long,long)": 3170.0,
        "org.apache.commons.math3.util$ArithmeticUtils#isPowerOfTwo(long)": 3086.0,
        "org.apache.commons.math3.util$ArithmeticUtils#lcm(int,int)": 3174.0,
        "org.apache.commons.math3.util$ArithmeticUtils#lcm(long,long)": 3174.0,
        "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(int,int)": 3046.0,
        "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(long,long)": 3150.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(int,int)": 3174.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(int,long)": 3174.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,int)": 3174.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,java.math.BigInteger)": 3172.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,long)": 3172.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(long,int)": 3174.0,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(long,long)": 3174.0,
        "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(int,int)": 3118.0,
        "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(long,long)": 3174.0,
        "org.apache.commons.math3.util$ContinuedFraction#ContinuedFraction()": 8162126.0,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double)": 3176.0,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double,double)": 3174.0,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double,double,int)": 8162126.0,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double,int)": 3176.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 161250.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 3176.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 3174.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 3089142.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3168.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 2530.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 6115022.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 3140.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 3174.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 3140.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 3174.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 3142.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 3020.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 3026.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 3174.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 3102.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 4275512.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 3152.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 3172.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 2738.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 2598.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 3134.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 3048.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 6486576.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 3719790.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 3154.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 3138.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 3597326.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 3046.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 3172.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 3052.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 4333626.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 3174.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 3708222.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 3072.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 3152.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 3176.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 2076.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 3172.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 2650.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 3174.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 2680.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 3172.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 2176.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 3150.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 3150.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 3170.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 3172.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 3174.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 2522.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 2522.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 4300370.0,
        "org.apache.commons.math3.util$FastMath#random()": 3138.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 3166.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3140.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 3138.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 3170.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 3082.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 3172.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 3158.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 3172.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 2566.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 2556.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 3134.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 2868150.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 3134.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 3134.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 3160.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3172.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3172.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 2716.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 3170.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 3739110.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 3176.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 3754602.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 3176.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 3758480.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 3176.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 3439700.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 3176.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 3739110.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 3739110.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 3754602.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 3754602.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 3758480.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor()": 6614576.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int)": 6599150.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int,org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback)": 6594012.0,
        "org.apache.commons.math3.util$Incrementor#canIncrement()": 3172.0,
        "org.apache.commons.math3.util$Incrementor#getCount()": 2882.0,
        "org.apache.commons.math3.util$Incrementor#getMaximalCount()": 3112.0,
        "org.apache.commons.math3.util$Incrementor#incrementCount()": 6874326.0,
        "org.apache.commons.math3.util$Incrementor#incrementCount(int)": 3174.0,
        "org.apache.commons.math3.util$Incrementor#resetCount()": 6780240.0,
        "org.apache.commons.math3.util$Incrementor#setMaximalCount(int)": 6691976.0,
        "org.apache.commons.math3.util$Incrementor$1#trigger(int)": 3144.0,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 3176.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 3142.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 3174.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 6026300.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3022.0,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 3168.0,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 3168.0,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 3172.0,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 3172.0,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 3082.0,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 3158.0,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 3104.0,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 3166.0,
        "org.apache.commons.math3.util$Precision#<clinit>()": 4523076.0,
        "org.apache.commons.math3.util$Precision#Precision()": 3176.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 3080.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 3130.0,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 2902.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 7878876.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 6134826.0,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 3174.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 3176.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 3016.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 2928.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 3094.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 3174.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 3018.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 3176.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 3176.0,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 3174.0,
        "org.apache.commons.math3.util$Precision#round(double,int)": 3174.0,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 3174.0,
        "org.apache.commons.math3.util$Precision#round(float,int)": 3174.0,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 3174.0,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 3174.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray()": 3074.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(double[])": 3174.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(int)": 5012180.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(int,float)": 3174.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(int,float,float)": 3170.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(int,float,float,int)": 3168.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(org.apache.commons.math3.util.ResizableDoubleArray)": 3172.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#addElement(double)": 4843422.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#addElementRolling(double)": 3160.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#addElements(double[])": 3174.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#checkContractExpand(float,float)": 3162.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#clear()": 3158.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#contract()": 4847826.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#copy()": 3170.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#copy(org.apache.commons.math3.util.ResizableDoubleArray,org.apache.commons.math3.util.ResizableDoubleArray)": 3168.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#discardExtremeElements(int,boolean)": 3162.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#discardFrontElements(int)": 3168.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#discardMostRecentElements(int)": 3166.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#equals(java.lang.Object)": 3172.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#expand()": 4869876.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#expandTo(int)": 3172.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#getContractionCriteria()": 3172.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#getElement(int)": 3162.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#getElements()": 4985342.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#getExpansionFactor()": 3162.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#getExpansionMode()": 3172.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#getInternalLength()": 3166.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#getInternalValues()": 3124.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#getNumElements()": 3094.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#hashCode()": 3174.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#setContractionCriteria(float)": 3162.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#setElement(int,double)": 3174.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#setExpansionFactor(float)": 3174.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#setExpansionMode(int)": 3166.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#setInitialCapacity(int)": 4994280.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#setNumElements(int)": 3174.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#shouldContract()": 4843422.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#start()": 3124.0,
        "org.apache.commons.math3.util$ResizableDoubleArray#substituteMostRecentElement(double)": 3170.0
    },
    "Math-32": {
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 2973.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 2933.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 3199.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 3183.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3147.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 3205.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 3205.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 3203.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 1893.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 3191.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 3205.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 3205.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2167.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 3179.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 3115.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3205.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3075.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 3117.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 3203.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 3203.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 3203.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3173.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 3203.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 3203.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 3203.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 3203.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 3191.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 3191.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 3115.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3061.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Interval#Interval(double,double)": 10048863.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Interval#getLength()": 10156949.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Interval#getLower()": 10086945.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Interval#getMidPoint()": 10156949.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Interval#getUpper()": 10086945.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#IntervalsSet()": 10112373.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#IntervalsSet(double,double)": 10023515.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#IntervalsSet(java.util.Collection)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#IntervalsSet(org.apache.commons.math3.geometry.partitioning.BSPTree)": 10099655.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#asList()": 10036185.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree)": 10112373.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#buildTree(double,double)": 10023515.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#computeGeometricalProperties()": 10156949.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#getInf()": 3199.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#getSup()": 3199.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double)": 10036185.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#OrientedPoint(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,boolean)": 9985553.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#copySelf()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#getLocation()": 10061549.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#getOffset(org.apache.commons.math3.geometry.Vector)": 10029849.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#isDirect()": 10061549.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#revertSelf()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 10137833.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#wholeHyperplane()": 9985553.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#wholeSpace()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$SubOrientedPoint#SubOrientedPoint(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": 9985553.0,
        "org.apache.commons.math3.geometry.euclidean.oned$SubOrientedPoint#buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": 10112373.0,
        "org.apache.commons.math3.geometry.euclidean.oned$SubOrientedPoint#getSize()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$SubOrientedPoint#side(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 10118735.0,
        "org.apache.commons.math3.geometry.euclidean.oned$SubOrientedPoint#split(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 10131465.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#<clinit>()": 9953973.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#Vector1D(double)": 9953973.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#add(double,org.apache.commons.math3.geometry.Vector)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#add(org.apache.commons.math3.geometry.Vector)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distance(org.apache.commons.math3.geometry.Vector)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distance(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distance1(org.apache.commons.math3.geometry.Vector)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distanceInf(org.apache.commons.math3.geometry.Vector)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distanceInf(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distanceSq(org.apache.commons.math3.geometry.Vector)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distanceSq(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#dotProduct(org.apache.commons.math3.geometry.Vector)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#equals(java.lang.Object)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getNorm()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getNorm1()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getNormInf()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getNormSq()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getSpace()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getX()": 9953973.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getZero()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#hashCode()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#isInfinite()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#isNaN()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#negate()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#normalize()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#scalarMultiply(double)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#subtract(double,org.apache.commons.math3.geometry.Vector)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#subtract(org.apache.commons.math3.geometry.Vector)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#toString()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#toString(java.text.NumberFormat)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#Line(org.apache.commons.math3.geometry.euclidean.threed.Line)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#Line(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 10118735.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#closestPoint(org.apache.commons.math3.geometry.euclidean.threed.Line)": 3189.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#contains(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3183.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#distance(org.apache.commons.math3.geometry.euclidean.threed.Line)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3179.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#getAbscissa(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3191.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#getDirection()": 10227195.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#getOrigin()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#intersection(org.apache.commons.math3.geometry.euclidean.threed.Line)": 3191.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#isSimilarTo(org.apache.commons.math3.geometry.euclidean.threed.Line)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#pointAt(double)": 10208013.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 10118735.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#revert()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#toSpace(org.apache.commons.math3.geometry.Vector)": 10208013.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#toSubSpace(org.apache.commons.math3.geometry.Vector)": 3191.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#wholeLine()": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#Plane(org.apache.commons.math3.geometry.euclidean.threed.Plane)": 10246395.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#Plane(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 10239993.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#Plane(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 10182465.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#Plane(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 10233593.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#contains(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3193.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#copySelf()": 10246395.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#getNormal()": 10214405.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#getOffset(org.apache.commons.math3.geometry.Vector)": 3187.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#getOffset(org.apache.commons.math3.geometry.euclidean.threed.Plane)": 10259205.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#getOrigin()": 3201.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#getPointAt(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#getU()": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#getV()": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#intersection(org.apache.commons.math3.geometry.euclidean.threed.Line)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane)": 10239993.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane)": 10233593.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#isSimilarTo(org.apache.commons.math3.geometry.euclidean.threed.Plane)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#reset(org.apache.commons.math3.geometry.euclidean.threed.Plane)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#revertSelf()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#rotate(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Rotation)": 3201.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 10259205.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#setFrame()": 10182465.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#setNormal(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 10182465.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#toSpace(org.apache.commons.math3.geometry.Vector)": 10246395.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#toSubSpace(org.apache.commons.math3.geometry.Vector)": 10246395.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#translate(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3201.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#wholeHyperplane()": 10246395.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#wholeSpace()": 3195.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#PolyhedronsSet()": 3195.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#PolyhedronsSet(double,double,double,double,double,double)": 3199.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#PolyhedronsSet(java.util.Collection)": 10278435.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#PolyhedronsSet(org.apache.commons.math3.geometry.partitioning.BSPTree)": 3197.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#boundaryFacet(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.partitioning.BSPTree)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree)": 3201.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#computeGeometricalProperties()": 10246395.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#firstIntersection(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Line)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#recurseFirstIntersection(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Line)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#rotate(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Rotation)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#translate(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$FacetsContributionVisitor#PolyhedronsSet$FacetsContributionVisitor(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet)": 10246395.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$FacetsContributionVisitor#addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean)": 10246395.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$FacetsContributionVisitor#visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": 10246395.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$FacetsContributionVisitor#visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": 10246395.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$FacetsContributionVisitor#visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)": 10246395.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$RotationTransform#PolyhedronsSet$RotationTransform(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Rotation)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$RotationTransform#apply(org.apache.commons.math3.geometry.Vector)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$RotationTransform#apply(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$RotationTransform#apply(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$TranslationTransform#PolyhedronsSet$TranslationTransform(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$TranslationTransform#apply(org.apache.commons.math3.geometry.Vector)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$TranslationTransform#apply(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$TranslationTransform#apply(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$SubPlane#SubPlane(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": 10246395.0,
        "org.apache.commons.math3.geometry.euclidean.threed$SubPlane#buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": 10246395.0,
        "org.apache.commons.math3.geometry.euclidean.threed$SubPlane#side(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 10246395.0,
        "org.apache.commons.math3.geometry.euclidean.threed$SubPlane#split(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 10246395.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#<clinit>()": 9523275.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,double)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,double,double)": 9523275.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 10042523.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 10074243.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 10239993.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double[])": 3201.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#add(double,org.apache.commons.math3.geometry.Vector)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#add(org.apache.commons.math3.geometry.Vector)": 10188849.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#angle(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3197.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#crossProduct(org.apache.commons.math3.geometry.Vector)": 10112373.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 10131465.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance(org.apache.commons.math3.geometry.Vector)": 3181.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3201.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance1(org.apache.commons.math3.geometry.Vector)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceInf(org.apache.commons.math3.geometry.Vector)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceSq(org.apache.commons.math3.geometry.Vector)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#dotProduct(org.apache.commons.math3.geometry.Vector)": 10004525.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#dotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3197.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#equals(java.lang.Object)": 3153.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getAlpha()": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getDelta()": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNorm()": 9972915.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNorm1()": 3201.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNormInf()": 3201.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNormSq()": 10106013.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getSpace()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getX()": 9928745.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getY()": 9928745.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getZ()": 9928745.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getZero()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#hashCode()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#isInfinite()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#isNaN()": 3153.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#negate()": 3201.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#normalize()": 3201.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#orthogonal()": 10150575.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#scalarMultiply(double)": 3197.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#subtract(double,org.apache.commons.math3.geometry.Vector)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#subtract(org.apache.commons.math3.geometry.Vector)": 10004525.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#toArray()": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#toString()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#toString(java.text.NumberFormat)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#Line(double,double,double,double)": 3187.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#Line(org.apache.commons.math3.geometry.euclidean.twod.Line)": 10137833.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#Line(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double)": 3201.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#Line(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 10017183.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#contains(org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#copySelf()": 10137833.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getAngle()": 10131465.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getOffset(org.apache.commons.math3.geometry.Vector)": 3173.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getOffset(org.apache.commons.math3.geometry.euclidean.twod.Line)": 10144203.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getOriginOffset()": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getPointAt(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getReverse()": 3191.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getTransform(java.awt.geom.AffineTransform)": 3201.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#intersection(org.apache.commons.math3.geometry.euclidean.twod.Line)": 10093299.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#isParallelTo(org.apache.commons.math3.geometry.euclidean.twod.Line)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double)": 3201.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 10017183.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#revertSelf()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 10239993.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#setAngle(double)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#setOriginOffset(double)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#toSpace(org.apache.commons.math3.geometry.Vector)": 10118735.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#toSubSpace(org.apache.commons.math3.geometry.Vector)": 10080593.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#translateToPoint(org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#wholeHyperplane()": 10131465.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#wholeSpace()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line$LineTransform#Line$LineTransform(java.awt.geom.AffineTransform)": 3201.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line$LineTransform#apply(org.apache.commons.math3.geometry.Vector)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line$LineTransform#apply(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 3201.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line$LineTransform#apply(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet#PolygonsSet()": 10246395.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet#PolygonsSet(double,double,double,double)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet#PolygonsSet(java.util.Collection)": 10188849.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet#PolygonsSet(org.apache.commons.math3.geometry.partitioning.BSPTree)": 10182465.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet#boxBoundary(double,double,double,double)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet#buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree)": 10195235.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet#computeGeometricalProperties()": 10239993.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet#followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree)": 10163325.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet#getVertices()": 10163325.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$ComparableSegment#PolygonsSet$ComparableSegment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,double)": 10163325.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$ComparableSegment#PolygonsSet$ComparableSegment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Line)": 10163325.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$ComparableSegment#compareTo(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment)": 10163325.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$ComparableSegment#equals(java.lang.Object)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$ComparableSegment#hashCode()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$SegmentsBuilder#PolygonsSet$SegmentsBuilder()": 10163325.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$SegmentsBuilder#addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean)": 10163325.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$SegmentsBuilder#getSorted()": 10163325.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$SegmentsBuilder#visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": 10163325.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$SegmentsBuilder#visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": 10163325.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$SegmentsBuilder#visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)": 10163325.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Segment#Segment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Line)": 10131465.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Segment#getEnd()": 10137833.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Segment#getLine()": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Segment#getStart()": 10137833.0,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#SubLine(org.apache.commons.math3.geometry.euclidean.twod.Segment)": 3203.0,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#SubLine(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 10239993.0,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#SubLine(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": 10106013.0,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#buildIntervalSet(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 10233593.0,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": 10137833.0,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#getSegments()": 3193.0,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#intersection(org.apache.commons.math3.geometry.euclidean.twod.SubLine,boolean)": 3193.0,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#side(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 10137833.0,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#split(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 10137833.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#<clinit>()": 10010853.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double,double)": 10010853.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double[])": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#add(double,org.apache.commons.math3.geometry.Vector)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#add(org.apache.commons.math3.geometry.Vector)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distance(org.apache.commons.math3.geometry.Vector)": 10125099.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distance(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distance1(org.apache.commons.math3.geometry.Vector)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distanceInf(org.apache.commons.math3.geometry.Vector)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distanceInf(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distanceSq(org.apache.commons.math3.geometry.Vector)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distanceSq(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#dotProduct(org.apache.commons.math3.geometry.Vector)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#equals(java.lang.Object)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getNorm()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getNorm1()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getNormInf()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getNormSq()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getSpace()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getX()": 10010853.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getY()": 10010853.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getZero()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#hashCode()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#isInfinite()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#isNaN()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#negate()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#normalize()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#scalarMultiply(double)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#subtract(double,org.apache.commons.math3.geometry.Vector)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#subtract(org.apache.commons.math3.geometry.Vector)": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#toArray()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#toString()": 3205.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#toString(java.text.NumberFormat)": 3205.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#AbstractRegion()": 10112373.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#AbstractRegion(java.util.Collection)": 10188849.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#AbstractRegion(org.apache.commons.math3.geometry.partitioning.BSPTree)": 9972915.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#AbstractRegion(org.apache.commons.math3.geometry.partitioning.Hyperplane[])": 3205.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#applyTransform(org.apache.commons.math3.geometry.partitioning.Transform)": 3203.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.Characterization)": 10156949.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#checkPoint(org.apache.commons.math3.geometry.Vector)": 3153.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.Vector)": 9985553.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#contains(org.apache.commons.math3.geometry.partitioning.Region)": 3203.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#copySelf()": 3193.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#getBarycenter()": 10227195.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#getBoundarySize()": 3195.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#getSize()": 10125099.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#getTree(boolean)": 10036185.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection)": 10188849.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#intersection(org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 3203.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#isEmpty()": 10137833.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#isEmpty(org.apache.commons.math3.geometry.partitioning.BSPTree)": 10137833.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#recurseBuildBoundary(org.apache.commons.math3.geometry.partitioning.BSPTree)": 10156949.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#recurseIntersection(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 3203.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides)": 10137833.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#recurseTransform(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.Transform)": 3203.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#setBarycenter(org.apache.commons.math3.geometry.Vector)": 10125099.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#setSize(double)": 10125099.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#side(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 10137833.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$1#compare(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 10188849.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$2#visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": 10188849.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$2#visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": 10188849.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$2#visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)": 10188849.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$3#<clinit>()": 10137833.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$Sides#AbstractRegion$Sides()": 10137833.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$Sides#minusFound()": 10137833.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$Sides#plusFound()": 10137833.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$Sides#rememberMinusFound()": 10137833.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$Sides#rememberPlusFound()": 10137833.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#AbstractSubHyperplane(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": 9972915.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#applyTransform(org.apache.commons.math3.geometry.partitioning.Transform)": 3203.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#copySelf()": 10112373.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#getHyperplane()": 9972915.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#getRemainingRegion()": 10061549.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#getSize()": 10156949.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#isEmpty()": 10137833.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#recurseTransform(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Transform)": 3203.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#reunite(org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 10150575.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#BSPTree()": 10156949.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#BSPTree(java.lang.Object)": 9960285.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#BSPTree(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,java.lang.Object)": 9985553.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#chopOffMinus(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 10131465.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#chopOffPlus(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 10150575.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#condense()": 10118735.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#copySelf()": 10118735.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#fitToCell(org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 10118735.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getAttribute()": 9960285.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getCell(org.apache.commons.math3.geometry.Vector)": 9985553.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getCut()": 9960285.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getMinus()": 10023515.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getParent()": 10188849.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getPlus()": 10023515.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#insertCut(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 10156949.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#insertInTree(org.apache.commons.math3.geometry.partitioning.BSPTree,boolean)": 10118735.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger)": 10118735.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean)": 10118735.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#setAttribute(java.lang.Object)": 10118735.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#split(org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 10118735.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)": 10118735.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree$1#<clinit>()": 10118735.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTreeVisitor$Order#<clinit>()": 10118735.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTreeVisitor$Order#BSPTreeVisitor$Order(java.lang.String,int)": 10118735.0,
        "org.apache.commons.math3.geometry.partitioning$BoundaryAttribute#BoundaryAttribute(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 10156949.0,
        "org.apache.commons.math3.geometry.partitioning$BoundaryAttribute#getPlusInside()": 10156949.0,
        "org.apache.commons.math3.geometry.partitioning$BoundaryAttribute#getPlusOutside()": 10156949.0,
        "org.apache.commons.math3.geometry.partitioning$BoundarySizeVisitor#BoundarySizeVisitor()": 3195.0,
        "org.apache.commons.math3.geometry.partitioning$BoundarySizeVisitor#getSize()": 3195.0,
        "org.apache.commons.math3.geometry.partitioning$BoundarySizeVisitor#visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": 3195.0,
        "org.apache.commons.math3.geometry.partitioning$BoundarySizeVisitor#visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": 3195.0,
        "org.apache.commons.math3.geometry.partitioning$BoundarySizeVisitor#visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)": 3195.0,
        "org.apache.commons.math3.geometry.partitioning$Characterization#Characterization()": 10156949.0,
        "org.apache.commons.math3.geometry.partitioning$Characterization#add(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean)": 10156949.0,
        "org.apache.commons.math3.geometry.partitioning$Characterization#getIn()": 10156949.0,
        "org.apache.commons.math3.geometry.partitioning$Characterization#getOut()": 10156949.0,
        "org.apache.commons.math3.geometry.partitioning$Characterization#hasIn()": 10156949.0,
        "org.apache.commons.math3.geometry.partitioning$Characterization#hasOut()": 10156949.0,
        "org.apache.commons.math3.geometry.partitioning$Region$Location#<clinit>()": 9985553.0,
        "org.apache.commons.math3.geometry.partitioning$Region$Location#Region$Location(java.lang.String,int)": 9985553.0,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory#RegionFactory()": 10099655.0,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory#buildConvex(org.apache.commons.math3.geometry.partitioning.Hyperplane[])": 3195.0,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory#difference(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region)": 3197.0,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory#getComplement(org.apache.commons.math3.geometry.partitioning.Region)": 3199.0,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory#intersection(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region)": 3201.0,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory#recurseComplement(org.apache.commons.math3.geometry.partitioning.BSPTree)": 3189.0,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory#union(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region)": 10131465.0,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory#xor(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region)": 3203.0,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$DifferenceMerger#RegionFactory$DifferenceMerger(org.apache.commons.math3.geometry.partitioning.RegionFactory)": 3197.0,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$DifferenceMerger#merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean)": 3197.0,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$IntersectionMerger#RegionFactory$IntersectionMerger(org.apache.commons.math3.geometry.partitioning.RegionFactory)": 3201.0,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$IntersectionMerger#merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean)": 3201.0,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$NodesCleaner#RegionFactory$NodesCleaner(org.apache.commons.math3.geometry.partitioning.RegionFactory)": 10099655.0,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$NodesCleaner#visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": 10131465.0,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$NodesCleaner#visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": 10118735.0,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$NodesCleaner#visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)": 10131465.0,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$UnionMerger#RegionFactory$UnionMerger(org.apache.commons.math3.geometry.partitioning.RegionFactory)": 10131465.0,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$UnionMerger#merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean)": 10131465.0,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$XorMerger#RegionFactory$XorMerger(org.apache.commons.math3.geometry.partitioning.RegionFactory)": 3203.0,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$XorMerger#merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean)": 3203.0,
        "org.apache.commons.math3.geometry.partitioning$Side#<clinit>()": 10118735.0,
        "org.apache.commons.math3.geometry.partitioning$Side#Side(java.lang.String,int)": 10118735.0,
        "org.apache.commons.math3.geometry.partitioning$SubHyperplane$SplitSubHyperplane#SubHyperplane$SplitSubHyperplane(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 10118735.0,
        "org.apache.commons.math3.geometry.partitioning$SubHyperplane$SplitSubHyperplane#getMinus()": 10118735.0,
        "org.apache.commons.math3.geometry.partitioning$SubHyperplane$SplitSubHyperplane#getPlus()": 10118735.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree#AVLTree()": 10131465.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree#delete(java.lang.Comparable)": 3203.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree#getLargest()": 3203.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree#getNotLarger(java.lang.Comparable)": 3201.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree#getNotSmaller(java.lang.Comparable)": 10137833.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree#getSmallest()": 10137833.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree#insert(java.lang.Comparable)": 10131465.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree#isEmpty()": 10163325.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree#size()": 3199.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$1#<clinit>()": 10131465.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#AVLTree$Node(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree,java.lang.Comparable,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node)": 10131465.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#delete()": 10156949.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#getElement()": 10131465.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#getLargest()": 10176083.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#getNext()": 10137833.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#getPrevious()": 3201.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#getSmallest()": 10131465.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#insert(java.lang.Comparable)": 10131465.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#rebalanceLeftGrown()": 10156949.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#rebalanceLeftShrunk()": 10163325.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#rebalanceRightGrown()": 10131465.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#rebalanceRightShrunk()": 10156949.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#rotateCCW()": 10137833.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#rotateCW()": 10163325.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#size()": 3199.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Skew#<clinit>()": 10131465.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Skew#AVLTree$Skew(java.lang.String,int)": 10131465.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#OrderedTuple(double[])": 10163325.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#compareTo(org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple)": 10163325.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#computeLSB(long)": 10163325.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#computeMSB(long)": 10163325.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#encode(int)": 10163325.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#equals(java.lang.Object)": 3205.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#exponent(long)": 10163325.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#getBit(int,int)": 10163325.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#getComponents()": 3205.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#hashCode()": 3205.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#mantissa(long)": 10163325.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#sign(long)": 10163325.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 191715.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 3205.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 3203.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 3217023.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3197.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 2559.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 2261.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 3169.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 3203.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 3169.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 3203.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 3171.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 9790563.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 9809349.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 3203.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 3131.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 999.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 3181.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 3201.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 8939883.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 8526113.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 3163.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 9878385.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 1971.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 721.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 3183.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 3167.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 3735215.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 9872099.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 3201.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 9890963.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 1027.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 3203.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 715.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 3101.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 3189.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 3205.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 2105.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 3201.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 8666873.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 3203.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 2709.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 3201.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 7338183.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 3179.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 3179.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 3199.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 3201.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 3203.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 8305599.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 8305599.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 1011.0,
        "org.apache.commons.math3.util$FastMath#random()": 3167.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 3195.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3169.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 3167.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 3199.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 9985553.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 3201.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 3187.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 3201.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 8432913.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 8403893.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 3163.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 3715905.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 3163.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 3163.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 3189.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3201.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3201.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 2755.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 3199.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 731.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 3205.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 739.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 3205.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 741.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 3205.0,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 3205.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 3115.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3113.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 3093.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 3155.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 3101.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 3193.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": 3165.0,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 3203.0,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 3193.0,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 3203.0,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 3203.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 3203.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 3203.0,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 3203.0,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 3205.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 3195.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 3205.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3203.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3203.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 9991875.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 9979233.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 3201.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": 3199.0,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": 3201.0,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 3205.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 3187.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 3187.0,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 3189.0,
        "org.apache.commons.math3.util$MathArrays$2#<clinit>()": 3089.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 3083.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 3083.0,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 3205.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 3171.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 3203.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 1763.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3051.0,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 3197.0,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 3197.0,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 3201.0,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 3201.0,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 3111.0,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 3187.0,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 10055205.0,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 3195.0,
        "org.apache.commons.math3.util$Precision#<clinit>()": 5716065.0,
        "org.apache.commons.math3.util$Precision#Precision()": 3205.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 3109.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 3159.0,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 2931.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 3105.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 2269.0,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 3203.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 3205.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 3045.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 2957.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 3123.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 3203.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 3047.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 3205.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 3205.0,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 3203.0,
        "org.apache.commons.math3.util$Precision#round(double,int)": 3203.0,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 3203.0,
        "org.apache.commons.math3.util$Precision#round(float,int)": 3203.0,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 3203.0,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 3203.0
    },
    "Math-33": {
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 3101.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 3065.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 3327.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 3311.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3275.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 3333.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 3333.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 3331.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 2025.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 3319.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 3333.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 3333.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2299.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 3307.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 3241.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3333.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3201.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 3245.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 3331.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 3331.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int)": 3333.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int,java.lang.Class)": 3309.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 3295.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 3295.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 3311.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(java.lang.Integer[],java.lang.Integer[])": 3333.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,java.lang.Integer[],java.lang.Integer[])": 3255.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimension(int)": 3331.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimensions()": 3333.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimension(int)": 3331.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimensions()": 3333.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 3311.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 3281.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 3319.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 3319.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 3259.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3173.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 3243.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3189.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 3293.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3101.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 3331.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 3331.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 3209.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 2967.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 3327.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 3327.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 3277.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 3057.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 3331.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 3331.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 3331.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3319.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix()": 3329.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field)": 3189.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field,int,int)": 3127.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 3325.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int)": 3199.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int,int)": 3095.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkAdditionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3313.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkColumnIndex(int)": 3081.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkMultiplicationCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3297.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkRowIndex(int)": 3081.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int,int,int,int)": 3313.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int[],int[])": 3323.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubtractionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3325.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int,int,int,int,org.apache.commons.math3.FieldElement[][])": 3329.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int[],int[],org.apache.commons.math3.FieldElement[][])": 3329.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#equals(java.lang.Object)": 3269.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[])": 3333.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[][])": 3151.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumn(int)": 3313.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnMatrix(int)": 3327.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnVector(int)": 3321.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getData()": 3329.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getField()": 3071.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRow(int)": 3319.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowMatrix(int)": 3325.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowVector(int)": 3327.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int,int,int,int)": 3329.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int[],int[])": 3327.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getTrace()": 3327.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#hashCode()": 3327.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#isSquare()": 3257.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 3313.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 3329.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.linear.FieldVector)": 3327.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#power(int)": 3331.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 3331.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldMatrix)": 3327.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldVector)": 3333.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 3329.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 3329.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 3331.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 3331.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 3331.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 3331.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 3331.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 3331.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 3329.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 3331.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#toString()": 3329.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#transpose()": 3321.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3331.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3331.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3331.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3331.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3327.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3331.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3287.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3329.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3331.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3333.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3329.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3333.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$1#visit(int,int,org.apache.commons.math3.FieldElement)": 3327.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#start(int,int,int,int,int,int)": 3329.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#visit(int,int,org.apache.commons.math3.FieldElement)": 3329.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$3#visit(int,int,org.apache.commons.math3.FieldElement)": 3321.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix()": 9400087.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix(int,int)": 8684421.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 3301.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#addToEntry(int,int,double)": 3333.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int,int,int,int,double[][])": 3287.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int[],int[],double[][])": 3329.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#equals(java.lang.Object)": 3249.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumn(int)": 3263.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnMatrix(int)": 3301.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnVector(int)": 3301.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getData()": 3329.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getFrobeniusNorm()": 3307.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getNorm()": 3211.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRow(int)": 10804321.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowMatrix(int)": 3325.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowVector(int)": 10929607.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int,int,int,int)": 3313.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int[],int[])": 3327.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getTrace()": 3327.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#hashCode()": 3319.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#isSquare()": 3095.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3169.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiplyEntry(int,int,double)": 3333.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(double[])": 3329.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(org.apache.commons.math3.linear.RealVector)": 3253.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#power(int)": 3329.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(double[])": 3331.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealMatrix)": 3327.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealVector)": 3333.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarAdd(double)": 3305.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarMultiply(double)": 3301.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumn(int,double[])": 3331.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3329.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 3295.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRow(int,double[])": 3331.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3331.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 10929607.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setSubMatrix(double[][],int,int)": 3329.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 3205.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#toString()": 3323.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#transpose()": 3059.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3331.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3331.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3317.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3331.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3323.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3331.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3055.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3289.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3331.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3333.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3329.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3333.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#end()": 3211.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#start(int,int,int,int,int,int)": 3211.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#visit(int,int,double)": 3211.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#end()": 3307.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#start(int,int,int,int,int,int)": 3307.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#visit(int,int,double)": 3307.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$3#visit(int,int,double)": 3327.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#start(int,int,int,int,int,int)": 3287.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#visit(int,int,double)": 3287.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$5#visit(int,int,double)": 3059.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field)": 3329.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,int,int)": 3263.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[])": 3333.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][])": 3235.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],boolean)": 3271.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 3333.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][])": 3255.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][],boolean)": 3297.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#add(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 3329.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 3333.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copy()": 3329.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyIn(org.apache.commons.math3.FieldElement[][])": 3235.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyOut()": 3267.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#createMatrix(int,int)": 3297.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getColumnDimension()": 3175.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getData()": 3271.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getDataRef()": 3333.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getEntry(int,int)": 3201.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getRowDimension()": 3175.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 3331.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 3333.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 3329.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 3331.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 3257.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 3235.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 3331.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3331.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3331.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3331.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3331.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3329.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3331.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3289.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3329.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix()": 3325.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[])": 3325.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][])": 9721707.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][],boolean)": 3127.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(int,int)": 9510805.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#add(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 3329.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#addToEntry(int,int,double)": 3333.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copy()": 3309.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyIn(double[][])": 9709237.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyOut()": 2989.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#createMatrix(int,int)": 3001.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getColumnDimension()": 9192721.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getData()": 3003.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getDataRef()": 10850395.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getEntry(int,int)": 9696775.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getRowDimension()": 9192721.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 3311.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiplyEntry(int,int,double)": 3333.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#operate(double[])": 3249.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#preMultiply(double[])": 3331.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setEntry(int,int,double)": 9566407.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setSubMatrix(double[][],int,int)": 9709237.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 3331.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3331.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3331.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3221.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3331.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3325.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3331.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3057.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3289.0,
        "org.apache.commons.math3.linear$ArrayRealVector#<clinit>()": 9065797.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector()": 3327.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[])": 9784177.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],boolean)": 9871971.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],double[])": 3331.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],int,int)": 3331.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],org.apache.commons.math3.linear.ArrayRealVector)": 3331.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int)": 10227067.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int,double)": 3327.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[])": 3331.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[],int,int)": 3331.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector)": 3331.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean)": 10478071.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,double[])": 3331.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector)": 3327.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.RealVector)": 3329.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector)": 3331.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.ArrayRealVector)": 3331.0,
        "org.apache.commons.math3.linear$ArrayRealVector#add(org.apache.commons.math3.linear.RealVector)": 3319.0,
        "org.apache.commons.math3.linear$ArrayRealVector#addToEntry(int,double)": 3331.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(double)": 3329.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.ArrayRealVector)": 3331.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.RealVector)": 3329.0,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(int)": 10336105.0,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 3319.0,
        "org.apache.commons.math3.linear$ArrayRealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 3299.0,
        "org.apache.commons.math3.linear$ArrayRealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 3251.0,
        "org.apache.commons.math3.linear$ArrayRealVector#copy()": 10484547.0,
        "org.apache.commons.math3.linear$ArrayRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 10601457.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": 3315.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 3303.0,
        "org.apache.commons.math3.linear$ArrayRealVector#equals(java.lang.Object)": 3237.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDataRef()": 3235.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDimension()": 9541675.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 3327.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getEntry(int)": 9815487.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3329.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Norm()": 3329.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3329.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfNorm()": 3329.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getNorm()": 3229.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getSubVector(int,int)": 3327.0,
        "org.apache.commons.math3.linear$ArrayRealVector#hashCode()": 3327.0,
        "org.apache.commons.math3.linear$ArrayRealVector#isInfinite()": 3329.0,
        "org.apache.commons.math3.linear$ArrayRealVector#isNaN()": 3235.0,
        "org.apache.commons.math3.linear$ArrayRealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 3327.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapAddToSelf(double)": 3329.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapDivideToSelf(double)": 3327.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapMultiplyToSelf(double)": 10712467.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapSubtractToSelf(double)": 3329.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3327.0,
        "org.apache.commons.math3.linear$ArrayRealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 3327.0,
        "org.apache.commons.math3.linear$ArrayRealVector#projection(org.apache.commons.math3.linear.RealVector)": 3329.0,
        "org.apache.commons.math3.linear$ArrayRealVector#set(double)": 3245.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setEntry(int,double)": 3187.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,double[])": 3291.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 3289.0,
        "org.apache.commons.math3.linear$ArrayRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 10627525.0,
        "org.apache.commons.math3.linear$ArrayRealVector#toArray()": 10465125.0,
        "org.apache.commons.math3.linear$ArrayRealVector#toString()": 3331.0,
        "org.apache.commons.math3.linear$ArrayRealVector#unitVector()": 3329.0,
        "org.apache.commons.math3.linear$ArrayRealVector#unitize()": 3329.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(int,int,org.apache.commons.math3.FieldElement[][],boolean)": 3263.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.Field,int,int)": 3279.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.FieldElement[][])": 3263.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.BlockFieldMatrix)": 3325.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 3329.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 3333.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockHeight(int)": 3251.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockWidth(int)": 3241.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copy()": 3331.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copyBlockPart(org.apache.commons.math3.FieldElement[],int,int,int,int,int,org.apache.commons.math3.FieldElement[],int,int,int)": 3327.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createBlocksLayout(org.apache.commons.math3.Field,int,int)": 3279.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createMatrix(int,int)": 3331.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumn(int)": 3323.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnDimension()": 3251.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnMatrix(int)": 3327.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnVector(int)": 3327.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getData()": 3323.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getEntry(int,int)": 3277.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRow(int)": 3323.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowDimension()": 3249.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowMatrix(int)": 3325.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowVector(int)": 3327.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getSubMatrix(int,int,int,int)": 3327.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.BlockFieldMatrix)": 3319.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 3321.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 3333.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 3327.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 3329.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 3325.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 3331.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 3325.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 3329.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 3329.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 3329.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 3323.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 3325.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 3329.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 3329.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 3329.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 3329.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.BlockFieldMatrix)": 3329.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 3331.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#toBlocksLayout(org.apache.commons.math3.FieldElement[][])": 3263.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#transpose()": 3327.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3329.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3331.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3331.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3329.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 3331.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 3331.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 3331.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 3331.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(double[][])": 3107.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int)": 3191.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int,double[][],boolean)": 3069.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.BlockRealMatrix)": 3325.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 3329.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#addToEntry(int,int,double)": 3331.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockHeight(int)": 3055.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockWidth(int)": 3039.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#copy()": 3323.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#copyBlockPart(double[],int,int,int,int,int,double[],int,int,int)": 3325.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#createBlocksLayout(int,int)": 3155.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#createMatrix(int,int)": 3331.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumn(int)": 3293.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnDimension()": 3055.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnMatrix(int)": 3327.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnVector(int)": 3327.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getData()": 3195.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getEntry(int,int)": 3247.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getFrobeniusNorm()": 3331.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getNorm()": 3287.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRow(int)": 3323.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowDimension()": 3053.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowMatrix(int)": 3325.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowVector(int)": 3327.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getSubMatrix(int,int,int,int)": 3325.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.BlockRealMatrix)": 3307.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3307.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiplyEntry(int,int,double)": 3333.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#operate(double[])": 3251.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#preMultiply(double[])": 3329.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarAdd(double)": 3325.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarMultiply(double)": 3331.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumn(int,double[])": 3317.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 3329.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3329.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 3329.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setEntry(int,int,double)": 3287.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRow(int,double[])": 3325.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 3329.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 3329.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 3329.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setSubMatrix(double[][],int,int)": 3329.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.BlockRealMatrix)": 3295.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 3289.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#toBlocksLayout(double[][])": 3107.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#transpose()": 3279.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3315.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3331.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3327.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3325.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3331.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 3331.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 3331.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3331.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#MatrixDimensionMismatchException(int,int,int,int)": 3255.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedColumnDimension()": 3331.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedRowDimension()": 3331.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongColumnDimension()": 3331.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongRowDimension()": 3331.0,
        "org.apache.commons.math3.linear$MatrixUtils#MatrixUtils()": 3333.0,
        "org.apache.commons.math3.linear$MatrixUtils#bigFractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 3303.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkAdditionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 3273.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 8993665.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)": 9198787.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 3117.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 8999665.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int,int,int)": 3253.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int[],int[])": 3323.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubtractionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 3167.0,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnFieldMatrix(org.apache.commons.math3.FieldElement[])": 3331.0,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnRealMatrix(double[])": 3307.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldDiagonalMatrix(org.apache.commons.math3.FieldElement[])": 3333.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldIdentityMatrix(org.apache.commons.math3.Field,int)": 3329.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.Field,int,int)": 3329.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.FieldElement[][])": 3331.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldVector(org.apache.commons.math3.FieldElement[])": 3333.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealDiagonalMatrix(double[])": 3299.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealIdentityMatrix(int)": 3239.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(double[][])": 3069.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(int,int)": 3133.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealVector(double[])": 3331.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 3331.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRowRealMatrix(double[])": 3331.0,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealMatrix(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 3331.0,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealVector(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 3331.0,
        "org.apache.commons.math3.linear$MatrixUtils#fractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 3331.0,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealMatrix(org.apache.commons.math3.linear.RealMatrix,java.io.ObjectOutputStream)": 3331.0,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealVector(org.apache.commons.math3.linear.RealVector,java.io.ObjectOutputStream)": 3331.0,
        "org.apache.commons.math3.linear$MatrixUtils#solveLowerTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 3331.0,
        "org.apache.commons.math3.linear$MatrixUtils#solveUpperTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 3331.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#MatrixUtils$BigFractionMatrixConverter()": 3303.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#getConvertedMatrix()": 3303.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#start(int,int,int,int,int,int)": 3303.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.BigFraction)": 3303.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#MatrixUtils$FractionMatrixConverter()": 3331.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#getConvertedMatrix()": 3331.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#start(int,int,int,int,int,int)": 3331.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.Fraction)": 3331.0,
        "org.apache.commons.math3.linear$NonSquareMatrixException#NonSquareMatrixException(int,int)": 3309.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(int,int)": 3271.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3315.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#add(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3329.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#addToEntry(int,int,double)": 3333.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#computeKey(int,int)": 3273.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#copy()": 3329.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#createMatrix(int,int)": 3319.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getColumnDimension()": 3273.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getEntry(int,int)": 3277.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getRowDimension()": 3273.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3325.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3325.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiplyEntry(int,int,double)": 3333.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#setEntry(int,int,double)": 3273.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3321.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 3321.0,
        "org.apache.commons.math3.linear$RealLinearOperator#RealLinearOperator()": 8070787.0,
        "org.apache.commons.math3.linear$RealLinearOperator#isTransposable()": 3333.0,
        "org.apache.commons.math3.linear$RealLinearOperator#operateTranspose(org.apache.commons.math3.linear.RealVector)": 3333.0,
        "org.apache.commons.math3.linear$RealVector#RealVector()": 8921821.0,
        "org.apache.commons.math3.linear$RealVector#add(org.apache.commons.math3.linear.RealVector)": 3331.0,
        "org.apache.commons.math3.linear$RealVector#addToEntry(int,double)": 3331.0,
        "org.apache.commons.math3.linear$RealVector#checkIndex(int)": 3297.0,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(int)": 3317.0,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 3321.0,
        "org.apache.commons.math3.linear$RealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 3327.0,
        "org.apache.commons.math3.linear$RealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 3323.0,
        "org.apache.commons.math3.linear$RealVector#cosine(org.apache.commons.math3.linear.RealVector)": 3321.0,
        "org.apache.commons.math3.linear$RealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 3331.0,
        "org.apache.commons.math3.linear$RealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 3331.0,
        "org.apache.commons.math3.linear$RealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3331.0,
        "org.apache.commons.math3.linear$RealVector#getL1Norm()": 3329.0,
        "org.apache.commons.math3.linear$RealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3331.0,
        "org.apache.commons.math3.linear$RealVector#getLInfNorm()": 3329.0,
        "org.apache.commons.math3.linear$RealVector#getMaxIndex()": 3327.0,
        "org.apache.commons.math3.linear$RealVector#getMaxValue()": 3327.0,
        "org.apache.commons.math3.linear$RealVector#getMinIndex()": 3327.0,
        "org.apache.commons.math3.linear$RealVector#getMinValue()": 3327.0,
        "org.apache.commons.math3.linear$RealVector#getNorm()": 3329.0,
        "org.apache.commons.math3.linear$RealVector#iterator()": 3317.0,
        "org.apache.commons.math3.linear$RealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 3327.0,
        "org.apache.commons.math3.linear$RealVector#mapAdd(double)": 3329.0,
        "org.apache.commons.math3.linear$RealVector#mapAddToSelf(double)": 3333.0,
        "org.apache.commons.math3.linear$RealVector#mapDivide(double)": 3321.0,
        "org.apache.commons.math3.linear$RealVector#mapDivideToSelf(double)": 3327.0,
        "org.apache.commons.math3.linear$RealVector#mapMultiply(double)": 10699377.0,
        "org.apache.commons.math3.linear$RealVector#mapMultiplyToSelf(double)": 3327.0,
        "org.apache.commons.math3.linear$RealVector#mapSubtract(double)": 3325.0,
        "org.apache.commons.math3.linear$RealVector#mapSubtractToSelf(double)": 3329.0,
        "org.apache.commons.math3.linear$RealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3325.0,
        "org.apache.commons.math3.linear$RealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 3327.0,
        "org.apache.commons.math3.linear$RealVector#set(double)": 3333.0,
        "org.apache.commons.math3.linear$RealVector#sparseIterator()": 3325.0,
        "org.apache.commons.math3.linear$RealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3331.0,
        "org.apache.commons.math3.linear$RealVector#toArray()": 3333.0,
        "org.apache.commons.math3.linear$RealVector#unitVector()": 3333.0,
        "org.apache.commons.math3.linear$RealVector#unitize()": 3333.0,
        "org.apache.commons.math3.linear$RealVector#unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)": 3277.0,
        "org.apache.commons.math3.linear$RealVector$1#hasNext()": 3317.0,
        "org.apache.commons.math3.linear$RealVector$1#next()": 3317.0,
        "org.apache.commons.math3.linear$RealVector$1#remove()": 3333.0,
        "org.apache.commons.math3.linear$RealVector$2#add(org.apache.commons.math3.linear.RealVector)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#addToEntry(int,double)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#append(double)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#append(org.apache.commons.math3.linear.RealVector)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#combine(double,double,org.apache.commons.math3.linear.RealVector)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#copy()": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#cosine(org.apache.commons.math3.linear.RealVector)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#dotProduct(org.apache.commons.math3.linear.RealVector)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeDivide(org.apache.commons.math3.linear.RealVector)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#getDimension()": 3321.0,
        "org.apache.commons.math3.linear$RealVector$2#getDistance(org.apache.commons.math3.linear.RealVector)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#getEntry(int)": 3317.0,
        "org.apache.commons.math3.linear$RealVector$2#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#getL1Norm()": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#getLInfNorm()": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#getNorm()": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#getSubVector(int,int)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#isInfinite()": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#isNaN()": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#iterator()": 3325.0,
        "org.apache.commons.math3.linear$RealVector$2#map(org.apache.commons.math3.analysis.UnivariateFunction)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#mapAdd(double)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#mapAddToSelf(double)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#mapDivide(double)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#mapDivideToSelf(double)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiply(double)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiplyToSelf(double)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtract(double)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtractToSelf(double)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#outerProduct(org.apache.commons.math3.linear.RealVector)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#projection(org.apache.commons.math3.linear.RealVector)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#set(double)": 3327.0,
        "org.apache.commons.math3.linear$RealVector$2#setEntry(int,double)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#sparseIterator()": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#subtract(org.apache.commons.math3.linear.RealVector)": 3325.0,
        "org.apache.commons.math3.linear$RealVector$2#toArray()": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#unitVector()": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2#unitize()": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2$1#hasNext()": 3325.0,
        "org.apache.commons.math3.linear$RealVector$2$1#next()": 3325.0,
        "org.apache.commons.math3.linear$RealVector$2$1#remove()": 3333.0,
        "org.apache.commons.math3.linear$RealVector$2$2#hasNext()": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2$2#next()": 3329.0,
        "org.apache.commons.math3.linear$RealVector$2$2#remove()": 3333.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2)": 3321.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#getValue()": 3321.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#setValue(double)": 3325.0,
        "org.apache.commons.math3.linear$RealVector$Entry#RealVector$Entry(org.apache.commons.math3.linear.RealVector)": 3303.0,
        "org.apache.commons.math3.linear$RealVector$Entry#getIndex()": 3305.0,
        "org.apache.commons.math3.linear$RealVector$Entry#getValue()": 3311.0,
        "org.apache.commons.math3.linear$RealVector$Entry#setIndex(int)": 3303.0,
        "org.apache.commons.math3.linear$RealVector$Entry#setValue(double)": 3329.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#RealVector$SparseEntryIterator(org.apache.commons.math3.linear.RealVector)": 3325.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#advance(org.apache.commons.math3.linear.RealVector$Entry)": 3325.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#hasNext()": 3325.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#next()": 3325.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#remove()": 3333.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat()": 3317.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String)": 3333.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 9005667.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.text.NumberFormat)": 9005667.0,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector)": 3287.0,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition)": 3287.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getAvailableLocales()": 3333.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getFormat()": 3329.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance()": 9065797.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance(java.util.Locale)": 9005667.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getPrefix()": 3333.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSeparator()": 3333.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSuffix()": 3333.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String)": 3277.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String,java.text.ParsePosition)": 3261.0,
        "org.apache.commons.math3.optimization$GoalType#<clinit>()": 10316821.0,
        "org.apache.commons.math3.optimization$GoalType#GoalType(java.lang.String,int)": 10316821.0,
        "org.apache.commons.math3.optimization$PointValuePair#PointValuePair(double[],double)": 10484547.0,
        "org.apache.commons.math3.optimization$PointValuePair#PointValuePair(double[],double,boolean)": 10484547.0,
        "org.apache.commons.math3.optimization$PointValuePair#getPoint()": 10647097.0,
        "org.apache.commons.math3.optimization$PointValuePair#getPointRef()": 3275.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#AbstractLinearOptimizer()": 10962697.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#getConstraints()": 10962697.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#getFunction()": 10962697.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#getGoalType()": 10962697.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#getIterations()": 3333.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#getMaxIterations()": 3333.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#incrementIterationsCounter()": 10975947.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#optimize(org.apache.commons.math3.optimization.linear.LinearObjectiveFunction,java.util.Collection,org.apache.commons.math3.optimization.GoalType,boolean)": 10962697.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#restrictToNonNegative()": 10962697.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#setMaxIterations(int)": 10962697.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#LinearConstraint(double[],double,org.apache.commons.math3.optimization.linear.Relationship,double[],double)": 3333.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#LinearConstraint(double[],org.apache.commons.math3.optimization.linear.Relationship,double)": 10936221.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#LinearConstraint(org.apache.commons.math3.linear.RealVector,double,org.apache.commons.math3.optimization.linear.Relationship,org.apache.commons.math3.linear.RealVector,double)": 3333.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#LinearConstraint(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.optimization.linear.Relationship,double)": 10936221.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#equals(java.lang.Object)": 3331.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#getCoefficients()": 10936221.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#getRelationship()": 10936221.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#getValue()": 10936221.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#hashCode()": 3333.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#readObject(java.io.ObjectInputStream)": 3331.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#writeObject(java.io.ObjectOutputStream)": 3331.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#LinearObjectiveFunction(double[],double)": 10936221.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#LinearObjectiveFunction(org.apache.commons.math3.linear.RealVector,double)": 10936221.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#equals(java.lang.Object)": 3331.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#getCoefficients()": 10936221.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#getConstantTerm()": 10936221.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#getValue(double[])": 10989205.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#getValue(org.apache.commons.math3.linear.RealVector)": 3333.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#hashCode()": 3333.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#readObject(java.io.ObjectInputStream)": 3331.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#writeObject(java.io.ObjectOutputStream)": 3331.0,
        "org.apache.commons.math3.optimization.linear$NoFeasibleSolutionException#NoFeasibleSolutionException()": 3327.0,
        "org.apache.commons.math3.optimization.linear$Relationship#<clinit>()": 10936221.0,
        "org.apache.commons.math3.optimization.linear$Relationship#Relationship(java.lang.String,int,java.lang.String)": 10936221.0,
        "org.apache.commons.math3.optimization.linear$Relationship#oppositeRelationship()": 11088895.0,
        "org.apache.commons.math3.optimization.linear$Relationship#toString()": 3333.0,
        "org.apache.commons.math3.optimization.linear$Relationship$1#<clinit>()": 11088895.0,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#SimplexSolver()": 10962697.0,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#SimplexSolver(double,int)": 10962697.0,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#doIteration(org.apache.commons.math3.optimization.linear.SimplexTableau)": 10975947.0,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#doOptimize()": 10962697.0,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#getPivotColumn(org.apache.commons.math3.optimization.linear.SimplexTableau)": 10975947.0,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#getPivotRow(org.apache.commons.math3.optimization.linear.SimplexTableau,int)": 10975947.0,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#solvePhase1(org.apache.commons.math3.optimization.linear.SimplexTableau)": 10962697.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#SimplexTableau(org.apache.commons.math3.optimization.linear.LinearObjectiveFunction,java.util.Collection,org.apache.commons.math3.optimization.GoalType,boolean,double)": 3325.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#SimplexTableau(org.apache.commons.math3.optimization.linear.LinearObjectiveFunction,java.util.Collection,org.apache.commons.math3.optimization.GoalType,boolean,double,int)": 10936221.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#copyArray(double[],double[])": 10936221.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#createTableau(boolean)": 10936221.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#divideRow(int,double)": 10975947.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#dropPhase1Objective()": 10975947.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#equals(java.lang.Object)": 3331.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getArtificialVariableOffset()": 10969321.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getBasicRow(int)": 10975947.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getConstraintTypeCounts(org.apache.commons.math3.optimization.linear.Relationship)": 10936221.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getData()": 3327.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getEntry(int,int)": 10956075.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getHeight()": 10962697.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getInvertedCoefficientSum(org.apache.commons.math3.linear.RealVector)": 11015745.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getNumArtificialVariables()": 10936221.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getNumDecisionVariables()": 3333.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getNumObjectiveFunctions()": 10936221.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getNumSlackVariables()": 10936221.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getOriginalNumDecisionVariables()": 10936221.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getRhsOffset()": 10969321.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getSlackVariableOffset()": 10956075.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getSolution()": 10989205.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getWidth()": 10956075.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#hashCode()": 3333.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#initializeColumnLabels()": 10936221.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#isOptimal()": 10962697.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#normalize(org.apache.commons.math3.optimization.linear.LinearConstraint)": 10936221.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#normalizeConstraints(java.util.Collection)": 10936221.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#readObject(java.io.ObjectInputStream)": 3331.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#setEntry(int,int,double)": 3333.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#subtractRow(int,int,double)": 10975947.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#writeObject(java.io.ObjectOutputStream)": 3331.0,
        "org.apache.commons.math3.optimization.linear$UnboundedSolutionException#UnboundedSolutionException()": 3331.0,
        "org.apache.commons.math3.util$CompositeFormat#CompositeFormat()": 3333.0,
        "org.apache.commons.math3.util$CompositeFormat#formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)": 3183.0,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat()": 3293.0,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat(java.util.Locale)": 8311237.0,
        "org.apache.commons.math3.util$CompositeFormat#parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)": 3145.0,
        "org.apache.commons.math3.util$CompositeFormat#parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)": 3149.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNextCharacter(java.lang.String,java.text.ParsePosition)": 3145.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,double,java.text.ParsePosition)": 3293.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)": 3153.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 335971.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 3333.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 3331.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 3746697.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3325.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 2687.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 8345875.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 3297.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 3331.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 3297.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 3331.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 3299.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 3179.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 3185.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 3331.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 3259.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 1127.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 3309.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 3329.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 2901.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 2761.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 3291.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 3207.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 2099.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 849.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 3311.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 3295.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 787.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 3205.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 3329.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 3211.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 1155.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 3331.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 843.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 3229.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 3317.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 3333.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 2253.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 3329.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 2819.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 3331.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 2837.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 3329.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 2351.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 3307.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 3307.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 3327.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 3329.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 3331.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 2685.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 2685.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 1139.0,
        "org.apache.commons.math3.util$FastMath#random()": 3295.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 3323.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3297.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 3295.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 3327.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 3241.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 3329.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 3315.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 3329.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 2729.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 2719.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 3291.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 801.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 3291.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 3291.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 3317.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3329.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3329.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 2883.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 3327.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 859.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 3333.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 867.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 3333.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 869.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 3333.0,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 3333.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 3299.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 3331.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 6905677.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3179.0,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 3325.0,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 3325.0,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 3329.0,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 3329.0,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 3239.0,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 3315.0,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 3263.0,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 3323.0,
        "org.apache.commons.math3.util$Pair#Pair(java.lang.Object,java.lang.Object)": 9903421.0,
        "org.apache.commons.math3.util$Pair#Pair(org.apache.commons.math3.util.Pair)": 3333.0,
        "org.apache.commons.math3.util$Pair#equals(java.lang.Object)": 3331.0,
        "org.apache.commons.math3.util$Pair#getKey()": 10080465.0,
        "org.apache.commons.math3.util$Pair#getValue()": 2987.0,
        "org.apache.commons.math3.util$Pair#hashCode()": 3333.0,
        "org.apache.commons.math3.util$Precision#<clinit>()": 6415287.0,
        "org.apache.commons.math3.util$Precision#Precision()": 3333.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 10942837.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 10962697.0,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 3081.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 10929607.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 8369007.0,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 3331.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 3333.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 3173.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 3085.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 3251.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 3331.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 3175.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 3333.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 3333.0,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 3331.0,
        "org.apache.commons.math3.util$Precision#round(double,int)": 3331.0,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 3331.0,
        "org.apache.commons.math3.util$Precision#round(float,int)": 3331.0,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 3331.0,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 3331.0
    },
    "Math-34": {
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": -613.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 675.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 689.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 689.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": -341.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 663.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 675.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 671.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 599.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 545.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 649.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 457.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 687.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 687.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 565.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 325.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 683.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 683.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 633.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 413.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 687.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 687.0,
        "org.apache.commons.math3.genetics$AbstractListChromosome#AbstractListChromosome(java.lang.Object[])": 683.0,
        "org.apache.commons.math3.genetics$AbstractListChromosome#AbstractListChromosome(java.util.List)": 442199.0,
        "org.apache.commons.math3.genetics$AbstractListChromosome#getLength()": 661.0,
        "org.apache.commons.math3.genetics$AbstractListChromosome#getRepresentation()": 659.0,
        "org.apache.commons.math3.genetics$AbstractListChromosome#toString()": 687.0,
        "org.apache.commons.math3.genetics$BinaryChromosome#BinaryChromosome(java.lang.Integer[])": 683.0,
        "org.apache.commons.math3.genetics$BinaryChromosome#BinaryChromosome(java.util.List)": 461029.0,
        "org.apache.commons.math3.genetics$BinaryChromosome#checkValidity(java.util.List)": 458315.0,
        "org.apache.commons.math3.genetics$BinaryChromosome#isSame(org.apache.commons.math3.genetics.Chromosome)": 687.0,
        "org.apache.commons.math3.genetics$BinaryChromosome#randomBinaryRepresentation(int)": 462389.0,
        "org.apache.commons.math3.genetics$Chromosome#Chromosome()": 435569.0,
        "org.apache.commons.math3.genetics$Chromosome#compareTo(org.apache.commons.math3.genetics.Chromosome)": 675.0,
        "org.apache.commons.math3.genetics$Chromosome#findSameChromosome(org.apache.commons.math3.genetics.Population)": 687.0,
        "org.apache.commons.math3.genetics$Chromosome#getFitness()": 671.0,
        "org.apache.commons.math3.genetics$Chromosome#isSame(org.apache.commons.math3.genetics.Chromosome)": 689.0,
        "org.apache.commons.math3.genetics$Chromosome#searchForFitnessUpdate(org.apache.commons.math3.genetics.Population)": 687.0,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#<clinit>()": 455609.0,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#GeneticAlgorithm(org.apache.commons.math3.genetics.CrossoverPolicy,double,org.apache.commons.math3.genetics.MutationPolicy,double,org.apache.commons.math3.genetics.SelectionPolicy)": 683.0,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#evolve(org.apache.commons.math3.genetics.Population,org.apache.commons.math3.genetics.StoppingCondition)": 683.0,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#getCrossoverPolicy()": 683.0,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#getCrossoverRate()": 683.0,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#getGenerationsEvolved()": 687.0,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#getMutationPolicy()": 683.0,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#getMutationRate()": 683.0,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#getRandomGenerator()": 455609.0,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#getSelectionPolicy()": 683.0,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#nextGeneration(org.apache.commons.math3.genetics.Population)": 683.0,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#setRandomGenerator(org.apache.commons.math3.random.RandomGenerator)": 689.0,
        "org.apache.commons.math3.genetics$InvalidRepresentationException#InvalidRepresentationException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 681.0,
        "org.apache.commons.math3.genetics$ListPopulation#ListPopulation(int)": 455609.0,
        "org.apache.commons.math3.genetics$ListPopulation#ListPopulation(java.util.List,int)": 446201.0,
        "org.apache.commons.math3.genetics$ListPopulation#addChromosome(org.apache.commons.math3.genetics.Chromosome)": 677.0,
        "org.apache.commons.math3.genetics$ListPopulation#addChromosomes(java.util.Collection)": 473341.0,
        "org.apache.commons.math3.genetics$ListPopulation#getChromosomeList()": 681.0,
        "org.apache.commons.math3.genetics$ListPopulation#getChromosomes()": 679.0,
        "org.apache.commons.math3.genetics$ListPopulation#getFittestChromosome()": 679.0,
        "org.apache.commons.math3.genetics$ListPopulation#getPopulationLimit()": 675.0,
        "org.apache.commons.math3.genetics$ListPopulation#getPopulationSize()": 679.0,
        "org.apache.commons.math3.genetics$ListPopulation#iterator()": 474719.0,
        "org.apache.commons.math3.genetics$ListPopulation#setChromosomes(java.util.List)": 689.0,
        "org.apache.commons.math3.genetics$ListPopulation#setPopulationLimit(int)": 683.0,
        "org.apache.commons.math3.genetics$ListPopulation#toString()": 687.0,
        "org.apache.commons.math3.random$JDKRandomGenerator#JDKRandomGenerator()": 431615.0,
        "org.apache.commons.math3.random$JDKRandomGenerator#setSeed(int)": 685.0,
        "org.apache.commons.math3.random$JDKRandomGenerator#setSeed(int[])": 689.0
    },
    "Math-35": {
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": -457.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 809.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 823.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 823.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": -185.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 797.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 809.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 811.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 783.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 597.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 821.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 821.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 701.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 467.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 817.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 817.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 767.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 555.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 821.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 821.0,
        "org.apache.commons.math3.exception.util$ArgUtils#ArgUtils()": 823.0,
        "org.apache.commons.math3.exception.util$ArgUtils#flatten(java.lang.Object[])": -659.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#ExceptionContext(java.lang.Throwable)": -659.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": -657.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#buildMessage(java.util.Locale,java.lang.String)": 811.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#deSerializeContext(java.io.ObjectInputStream)": 819.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#deSerializeMessages(java.io.ObjectInputStream)": 819.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getKeys()": 819.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getLocalizedMessage()": 821.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getMessage()": 815.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getMessage(java.util.Locale)": 813.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getMessage(java.util.Locale,java.lang.String)": 821.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getThrowable()": 823.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getValue(java.lang.String)": 817.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#nonSerializableReplacement(java.lang.Object)": 821.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#readObject(java.io.ObjectInputStream)": 819.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#serializeContext(java.io.ObjectOutputStream)": 819.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#serializeMessages(java.io.ObjectOutputStream)": 819.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#setValue(java.lang.String,java.lang.Object)": 807.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#writeObject(java.io.ObjectOutputStream)": 819.0,
        "org.apache.commons.math3.exception.util$LocalizedFormats#<clinit>()": -787.0,
        "org.apache.commons.math3.exception.util$LocalizedFormats#LocalizedFormats(java.lang.String,int,java.lang.String)": -787.0,
        "org.apache.commons.math3.exception.util$LocalizedFormats#getLocalizedString(java.util.Locale)": 805.0,
        "org.apache.commons.math3.exception.util$LocalizedFormats#getSourceString()": 819.0,
        "org.apache.commons.math3.genetics$Chromosome#Chromosome()": 775.0,
        "org.apache.commons.math3.genetics$Chromosome#compareTo(org.apache.commons.math3.genetics.Chromosome)": 809.0,
        "org.apache.commons.math3.genetics$Chromosome#findSameChromosome(org.apache.commons.math3.genetics.Population)": 821.0,
        "org.apache.commons.math3.genetics$Chromosome#getFitness()": 807.0,
        "org.apache.commons.math3.genetics$Chromosome#isSame(org.apache.commons.math3.genetics.Chromosome)": 823.0,
        "org.apache.commons.math3.genetics$Chromosome#searchForFitnessUpdate(org.apache.commons.math3.genetics.Population)": 821.0,
        "org.apache.commons.math3.genetics$ElitisticListPopulation#ElitisticListPopulation(int,double)": 670749.0,
        "org.apache.commons.math3.genetics$ElitisticListPopulation#ElitisticListPopulation(java.util.List,int,double)": 678969.0,
        "org.apache.commons.math3.genetics$ElitisticListPopulation#getElitismRate()": 813.0,
        "org.apache.commons.math3.genetics$ElitisticListPopulation#nextGeneration()": 815.0,
        "org.apache.commons.math3.genetics$ElitisticListPopulation#setElitismRate(double)": 817.0,
        "org.apache.commons.math3.genetics$ListPopulation#ListPopulation(int)": 670749.0,
        "org.apache.commons.math3.genetics$ListPopulation#ListPopulation(java.util.List,int)": 675675.0,
        "org.apache.commons.math3.genetics$ListPopulation#addChromosome(org.apache.commons.math3.genetics.Chromosome)": 813.0,
        "org.apache.commons.math3.genetics$ListPopulation#getChromosomes()": 813.0,
        "org.apache.commons.math3.genetics$ListPopulation#getFittestChromosome()": 813.0,
        "org.apache.commons.math3.genetics$ListPopulation#getPopulationLimit()": 813.0,
        "org.apache.commons.math3.genetics$ListPopulation#getPopulationSize()": 813.0,
        "org.apache.commons.math3.genetics$ListPopulation#iterator()": 821.0,
        "org.apache.commons.math3.genetics$ListPopulation#setChromosomes(java.util.List)": 823.0,
        "org.apache.commons.math3.genetics$ListPopulation#setPopulationLimit(int)": 823.0,
        "org.apache.commons.math3.genetics$ListPopulation#toString()": 823.0
    },
    "Math-36": {},
    "Math-37": {},
    "Math-38": {},
    "Math-39": {},
    "Math-4": {
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 3775.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 3733.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 4125.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 4109.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4023.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 4131.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 4131.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 4129.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 2349.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 4113.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 4131.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 4127.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2679.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 4103.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 4001.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4131.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3947.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 4007.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 4129.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 4131.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 4107.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 4071.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 4129.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 4099.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 4129.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 4129.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 4129.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 4129.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 4087.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 4107.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 4027.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3967.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 4027.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3973.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 3915.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3637.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 4125.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 4125.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#IntervalsSet()": 4071.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#IntervalsSet(double,double)": 16744421.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#IntervalsSet(java.util.Collection)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#IntervalsSet(org.apache.commons.math3.geometry.partitioning.BSPTree)": 4067.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#asList()": 4051.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree)": 4075.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#buildTree(double,double)": 16744421.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#computeGeometricalProperties()": 4091.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#getInf()": 4125.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#getSup()": 4125.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double)": 4051.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#OrientedPoint(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,boolean)": 16670837.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#copySelf()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#getLocation()": 4055.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#getOffset(org.apache.commons.math3.geometry.Vector)": 4045.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#isDirect()": 4059.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#revertSelf()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 4083.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#wholeHyperplane()": 16670837.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#wholeSpace()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$SubOrientedPoint#SubOrientedPoint(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": 16670837.0,
        "org.apache.commons.math3.geometry.euclidean.oned$SubOrientedPoint#buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": 4071.0,
        "org.apache.commons.math3.geometry.euclidean.oned$SubOrientedPoint#getSize()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$SubOrientedPoint#side(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 4073.0,
        "org.apache.commons.math3.geometry.euclidean.oned$SubOrientedPoint#split(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 4081.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#<clinit>()": 16630027.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#Vector1D(double)": 16630027.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#add(double,org.apache.commons.math3.geometry.Vector)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#add(org.apache.commons.math3.geometry.Vector)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distance(org.apache.commons.math3.geometry.Vector)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distance(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distance1(org.apache.commons.math3.geometry.Vector)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distanceInf(org.apache.commons.math3.geometry.Vector)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distanceInf(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distanceSq(org.apache.commons.math3.geometry.Vector)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distanceSq(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#dotProduct(org.apache.commons.math3.geometry.Vector)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#equals(java.lang.Object)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getNorm()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getNorm1()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getNormInf()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getNormSq()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getSpace()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getX()": 16630027.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getZero()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#hashCode()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#isInfinite()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#isNaN()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#negate()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#normalize()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#scalarMultiply(double)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#subtract(double,org.apache.commons.math3.geometry.Vector)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#subtract(org.apache.commons.math3.geometry.Vector)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#toString()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#toString(java.text.NumberFormat)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#Line(org.apache.commons.math3.geometry.euclidean.threed.Line)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#Line(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 16859207.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#closestPoint(org.apache.commons.math3.geometry.euclidean.threed.Line)": 17015615.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#contains(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 16990871.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#distance(org.apache.commons.math3.geometry.euclidean.threed.Line)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 16974385.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#getAbscissa(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 17023867.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#getDirection()": 4111.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#getOrigin()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#intersection(org.apache.commons.math3.geometry.euclidean.threed.Line)": 17023867.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#isSimilarTo(org.apache.commons.math3.geometry.euclidean.threed.Line)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#pointAt(double)": 4107.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 16859207.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#revert()": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#toSpace(org.apache.commons.math3.geometry.Vector)": 4107.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#toSubSpace(org.apache.commons.math3.geometry.Vector)": 17023867.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#wholeLine()": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$SubLine#SubLine(org.apache.commons.math3.geometry.euclidean.threed.Line,org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet)": 16982627.0,
        "org.apache.commons.math3.geometry.euclidean.threed$SubLine#SubLine(org.apache.commons.math3.geometry.euclidean.threed.Segment)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$SubLine#SubLine(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 17032121.0,
        "org.apache.commons.math3.geometry.euclidean.threed$SubLine#buildIntervalSet(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 17023867.0,
        "org.apache.commons.math3.geometry.euclidean.threed$SubLine#getSegments()": 4119.0,
        "org.apache.commons.math3.geometry.euclidean.threed$SubLine#intersection(org.apache.commons.math3.geometry.euclidean.threed.SubLine,boolean)": 17032121.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#<clinit>()": 15768677.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,double)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,double,double)": 15768677.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 16777177.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 16818167.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 4115.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double[])": 4121.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#add(double,org.apache.commons.math3.geometry.Vector)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#add(org.apache.commons.math3.geometry.Vector)": 4097.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#angle(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 4121.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#crossProduct(org.apache.commons.math3.geometry.Vector)": 4069.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 4077.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance(org.apache.commons.math3.geometry.Vector)": 4101.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 4127.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance1(org.apache.commons.math3.geometry.Vector)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceInf(org.apache.commons.math3.geometry.Vector)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceSq(org.apache.commons.math3.geometry.Vector)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#dotProduct(org.apache.commons.math3.geometry.Vector)": 16687175.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#dotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 4117.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#equals(java.lang.Object)": 4077.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getAlpha()": 4125.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getDelta()": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNorm()": 16597415.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNorm1()": 4127.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNormInf()": 4127.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNormSq()": 16850995.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getSpace()": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getX()": 3963.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getY()": 3963.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getZ()": 3961.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getZero()": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#hashCode()": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#isInfinite()": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#isNaN()": 4071.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#negate()": 4123.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#normalize()": 4121.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#orthogonal()": 4089.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#scalarMultiply(double)": 4113.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#subtract(double,org.apache.commons.math3.geometry.Vector)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#subtract(org.apache.commons.math3.geometry.Vector)": 16703521.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#toArray()": 4127.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#toString()": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#toString(java.text.NumberFormat)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#Line(double,double,double,double)": 4111.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#Line(org.apache.commons.math3.geometry.euclidean.twod.Line)": 4079.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#Line(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double)": 4127.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#Line(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 16695347.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#contains(org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#copySelf()": 4079.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#distance(org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getAngle()": 4077.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getOffset(org.apache.commons.math3.geometry.Vector)": 4091.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getOffset(org.apache.commons.math3.geometry.euclidean.twod.Line)": 4085.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getOriginOffset()": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getPointAt(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getReverse()": 4115.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getTransform(java.awt.geom.AffineTransform)": 4127.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#intersection(org.apache.commons.math3.geometry.euclidean.twod.Line)": 16809965.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#isParallelTo(org.apache.commons.math3.geometry.euclidean.twod.Line)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double)": 4127.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 16695347.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#revertSelf()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 4117.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#setAngle(double)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#setOriginOffset(double)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#toSpace(org.apache.commons.math3.geometry.Vector)": 4077.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#toSubSpace(org.apache.commons.math3.geometry.Vector)": 16793567.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#translateToPoint(org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#wholeHyperplane()": 4077.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#wholeSpace()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line$LineTransform#Line$LineTransform(java.awt.geom.AffineTransform)": 4127.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line$LineTransform#apply(org.apache.commons.math3.geometry.Vector)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line$LineTransform#apply(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 4127.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line$LineTransform#apply(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#SubLine(org.apache.commons.math3.geometry.euclidean.twod.Segment)": 4129.0,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#SubLine(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 17023867.0,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#SubLine(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": 4069.0,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#buildIntervalSet(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 17015615.0,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": 4083.0,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#getSegments()": 4119.0,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#intersection(org.apache.commons.math3.geometry.euclidean.twod.SubLine,boolean)": 17032121.0,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#side(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 4083.0,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#split(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 4079.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#<clinit>()": 16507897.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double,double)": 16507897.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double[])": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#add(double,org.apache.commons.math3.geometry.Vector)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#add(org.apache.commons.math3.geometry.Vector)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distance(org.apache.commons.math3.geometry.Vector)": 4037.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distance(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distance1(org.apache.commons.math3.geometry.Vector)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distanceInf(org.apache.commons.math3.geometry.Vector)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distanceInf(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distanceSq(org.apache.commons.math3.geometry.Vector)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distanceSq(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#dotProduct(org.apache.commons.math3.geometry.Vector)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#equals(java.lang.Object)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getNorm()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getNorm1()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getNormInf()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getNormSq()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getSpace()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getX()": 16507897.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getY()": 16507897.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getZero()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#hashCode()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#isInfinite()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#isNaN()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#negate()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#normalize()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#scalarMultiply(double)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#subtract(double,org.apache.commons.math3.geometry.Vector)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#subtract(org.apache.commons.math3.geometry.Vector)": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#toArray()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#toString()": 4131.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#toString(java.text.NumberFormat)": 4131.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#AbstractRegion()": 4071.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#AbstractRegion(java.util.Collection)": 4101.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#AbstractRegion(org.apache.commons.math3.geometry.partitioning.BSPTree)": 16654507.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#AbstractRegion(org.apache.commons.math3.geometry.partitioning.Hyperplane[])": 4131.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#applyTransform(org.apache.commons.math3.geometry.partitioning.Transform)": 4129.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#checkPoint(org.apache.commons.math3.geometry.Vector)": 4073.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.Vector)": 4031.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#contains(org.apache.commons.math3.geometry.partitioning.Region)": 4129.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#copySelf()": 4117.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#getBarycenter()": 4113.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#getBoundarySize()": 4119.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#getSize()": 4081.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#getTree(boolean)": 4047.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection)": 4101.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#intersection(org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 4129.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#isEmpty()": 4079.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#isEmpty(org.apache.commons.math3.geometry.partitioning.BSPTree)": 4079.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#recurseIntersection(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 4129.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides)": 4083.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#recurseTransform(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.Transform)": 4129.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#setBarycenter(org.apache.commons.math3.geometry.Vector)": 4081.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#setSize(double)": 4081.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#side(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 4083.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$1#compare(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 4101.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$2#visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": 4101.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$2#visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": 4101.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$2#visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)": 4101.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$3#<clinit>()": 4083.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$BoundaryBuilder#AbstractRegion$BoundaryBuilder()": 4089.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$BoundaryBuilder#characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[])": 4089.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$BoundaryBuilder#visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": 4089.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$BoundaryBuilder#visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": 4089.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$BoundaryBuilder#visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)": 4089.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$Sides#AbstractRegion$Sides()": 4083.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$Sides#minusFound()": 4083.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$Sides#plusFound()": 4083.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$Sides#rememberMinusFound()": 4083.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$Sides#rememberPlusFound()": 4083.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#AbstractSubHyperplane(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": 16654507.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#applyTransform(org.apache.commons.math3.geometry.partitioning.Transform)": 4129.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#copySelf()": 4071.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#getHyperplane()": 16654507.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#getRemainingRegion()": 16768985.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#getSize()": 4091.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#isEmpty()": 4079.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#recurseTransform(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Transform)": 4129.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#reunite(org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 4087.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#BSPTree()": 4085.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#BSPTree(java.lang.Object)": 16638185.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#BSPTree(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,java.lang.Object)": 16670837.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#chopOffMinus(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 4081.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#chopOffPlus(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 4087.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#condense()": 4073.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#copySelf()": 4073.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#fitToCell(org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 4073.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getAttribute()": 4023.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getCell(org.apache.commons.math3.geometry.Vector)": 4031.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getCut()": 4023.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getMinus()": 4043.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getParent()": 4099.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getPlus()": 4043.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#insertCut(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 4085.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#insertInTree(org.apache.commons.math3.geometry.partitioning.BSPTree,boolean)": 4077.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger)": 4077.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean)": 4077.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#setAttribute(java.lang.Object)": 4073.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#split(org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 4073.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)": 4077.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTree$1#<clinit>()": 4073.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTreeVisitor$Order#<clinit>()": 4073.0,
        "org.apache.commons.math3.geometry.partitioning$BSPTreeVisitor$Order#BSPTreeVisitor$Order(java.lang.String,int)": 4073.0,
        "org.apache.commons.math3.geometry.partitioning$Region$Location#<clinit>()": 4025.0,
        "org.apache.commons.math3.geometry.partitioning$Region$Location#Region$Location(java.lang.String,int)": 4025.0,
        "org.apache.commons.math3.geometry.partitioning$SubHyperplane$SplitSubHyperplane#SubHyperplane$SplitSubHyperplane(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 4073.0,
        "org.apache.commons.math3.geometry.partitioning$SubHyperplane$SplitSubHyperplane#getMinus()": 4073.0,
        "org.apache.commons.math3.geometry.partitioning$SubHyperplane$SplitSubHyperplane#getPlus()": 4073.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 352871.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 4131.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 4113.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 4130987.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 4127.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 3469.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 2225.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 4059.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 4121.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 4057.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 4121.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 4055.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 3869.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 16313425.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 4121.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 4039.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 3529.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 4083.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 4127.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 14538647.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 13927421.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 4063.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 3947.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 2545.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 2029.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 4095.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 4051.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 2565.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 16426727.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 4127.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 16467287.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 2357.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 4129.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1849.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 4019.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 3105.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 4131.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 2279.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 4127.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 2741.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 4107.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 3157.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 4127.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 2255.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 4039.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 4101.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 4125.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 4125.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 4129.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 13600897.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 13600897.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 2763.0,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 3667.0,
        "org.apache.commons.math3.util$FastMath#random()": 4093.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4121.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3985.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 4083.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 4129.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 4001.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 4127.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 4103.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 4127.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 13815671.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 13763675.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 4063.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 4824871.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 4071.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 4071.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 4101.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 4123.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 4123.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 3551.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 4129.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double)": 3451.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 3451.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 3451.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 3451.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 2061.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 4131.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 2071.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 4131.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1889.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 4131.0,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 4131.0,
        "org.apache.commons.math3.util$MathArrays#buildArray(org.apache.commons.math3.Field,int)": 3865.0,
        "org.apache.commons.math3.util$MathArrays#buildArray(org.apache.commons.math3.Field,int,int)": 3869.0,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[])": 3319.0,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[][])": 4121.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 4039.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 4037.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 3843.0,
        "org.apache.commons.math3.util$MathArrays#checkPositive(double[])": 3337.0,
        "org.apache.commons.math3.util$MathArrays#checkRectangular(long[][])": 4121.0,
        "org.apache.commons.math3.util$MathArrays#convolve(double[],double[])": 4129.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 4005.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 3949.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 4119.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": 4049.0,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 4107.0,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 4117.0,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 4125.0,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 4129.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 4125.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 4129.0,
        "org.apache.commons.math3.util$MathArrays#ebeAdd(double[],double[])": 4127.0,
        "org.apache.commons.math3.util$MathArrays#ebeDivide(double[],double[])": 4113.0,
        "org.apache.commons.math3.util$MathArrays#ebeMultiply(double[],double[])": 4127.0,
        "org.apache.commons.math3.util$MathArrays#ebeSubtract(double[],double[])": 4123.0,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 4125.0,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 4131.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 4121.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 4131.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 4129.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 4129.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 16483525.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 16467287.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 4107.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": 4109.0,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": 4081.0,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 4131.0,
        "org.apache.commons.math3.util$MathArrays#scale(double,double[])": 4129.0,
        "org.apache.commons.math3.util$MathArrays#scaleInPlace(double,double[])": 4117.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 4113.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 4113.0,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 4115.0,
        "org.apache.commons.math3.util$MathArrays$2#<clinit>()": 3843.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 3833.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 3833.0,
        "org.apache.commons.math3.util$Precision#<clinit>()": 7805095.0,
        "org.apache.commons.math3.util$Precision#Precision()": 4131.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 3939.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 4029.0,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 3769.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 3121.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 2345.0,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 4129.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 4131.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 3971.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 3861.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 4027.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 4129.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 3973.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 4131.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 4131.0,
        "org.apache.commons.math3.util$Precision#equalsWithRelativeTolerance(double,double,double)": 4129.0,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 4129.0,
        "org.apache.commons.math3.util$Precision#round(double,int)": 4129.0,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 4129.0,
        "org.apache.commons.math3.util$Precision#round(float,int)": 4129.0,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 4129.0,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 4129.0
    },
    "Math-40": {},
    "Math-41": {},
    "Math-42": {},
    "Math-43": {},
    "Math-44": {},
    "Math-45": {},
    "Math-46": {},
    "Math-47": {},
    "Math-48": {},
    "Math-49": {},
    "Math-5": {
        "org.apache.commons.math3.complex$Complex#<clinit>()": 758427.0,
        "org.apache.commons.math3.complex$Complex#Complex(double)": 1051.0,
        "org.apache.commons.math3.complex$Complex#Complex(double,double)": 758427.0,
        "org.apache.commons.math3.complex$Complex#abs()": 1013.0,
        "org.apache.commons.math3.complex$Complex#acos()": 1077.0,
        "org.apache.commons.math3.complex$Complex#add(double)": 1077.0,
        "org.apache.commons.math3.complex$Complex#add(org.apache.commons.math3.complex.Complex)": 1049.0,
        "org.apache.commons.math3.complex$Complex#asin()": 1077.0,
        "org.apache.commons.math3.complex$Complex#atan()": 1075.0,
        "org.apache.commons.math3.complex$Complex#conjugate()": 1077.0,
        "org.apache.commons.math3.complex$Complex#cos()": 1077.0,
        "org.apache.commons.math3.complex$Complex#cosh()": 1077.0,
        "org.apache.commons.math3.complex$Complex#createComplex(double,double)": 925.0,
        "org.apache.commons.math3.complex$Complex#divide(double)": 1075.0,
        "org.apache.commons.math3.complex$Complex#divide(org.apache.commons.math3.complex.Complex)": 1043.0,
        "org.apache.commons.math3.complex$Complex#equals(java.lang.Object)": 1044421.0,
        "org.apache.commons.math3.complex$Complex#exp()": 1055.0,
        "org.apache.commons.math3.complex$Complex#getArgument()": 1069.0,
        "org.apache.commons.math3.complex$Complex#getField()": 1083.0,
        "org.apache.commons.math3.complex$Complex#getImaginary()": 813.0,
        "org.apache.commons.math3.complex$Complex#getReal()": 813.0,
        "org.apache.commons.math3.complex$Complex#hashCode()": 1081.0,
        "org.apache.commons.math3.complex$Complex#isInfinite()": 987.0,
        "org.apache.commons.math3.complex$Complex#isNaN()": 1039.0,
        "org.apache.commons.math3.complex$Complex#log()": 1041.0,
        "org.apache.commons.math3.complex$Complex#multiply(double)": 1067.0,
        "org.apache.commons.math3.complex$Complex#multiply(int)": 1079.0,
        "org.apache.commons.math3.complex$Complex#multiply(org.apache.commons.math3.complex.Complex)": 1021.0,
        "org.apache.commons.math3.complex$Complex#negate()": 1067.0,
        "org.apache.commons.math3.complex$Complex#nthRoot(int)": 1073.0,
        "org.apache.commons.math3.complex$Complex#pow(double)": 1073.0,
        "org.apache.commons.math3.complex$Complex#pow(org.apache.commons.math3.complex.Complex)": 1065.0,
        "org.apache.commons.math3.complex$Complex#readResolve()": 1081.0,
        "org.apache.commons.math3.complex$Complex#reciprocal()": 1164235.0,
        "org.apache.commons.math3.complex$Complex#sin()": 1077.0,
        "org.apache.commons.math3.complex$Complex#sinh()": 1077.0,
        "org.apache.commons.math3.complex$Complex#sqrt()": 1049.0,
        "org.apache.commons.math3.complex$Complex#sqrt1z()": 1071.0,
        "org.apache.commons.math3.complex$Complex#subtract(double)": 1077.0,
        "org.apache.commons.math3.complex$Complex#subtract(org.apache.commons.math3.complex.Complex)": 1045.0,
        "org.apache.commons.math3.complex$Complex#tan()": 1075.0,
        "org.apache.commons.math3.complex$Complex#tanh()": 1075.0,
        "org.apache.commons.math3.complex$Complex#toString()": 1175055.0,
        "org.apache.commons.math3.complex$Complex#valueOf(double)": 1083.0,
        "org.apache.commons.math3.complex$Complex#valueOf(double,double)": 1079.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": -665.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 1065.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 1083.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 1079.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": -343.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 1055.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 1043.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 1059.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 987.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 933.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 875.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 599.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 1077.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 1077.0
    },
    "Math-50": {},
    "Math-6": {
        "org.apache.commons.math3.analysis.function$Sinc#Sinc()": 21362832.0,
        "org.apache.commons.math3.analysis.function$Sinc#Sinc(boolean)": 21325868.0,
        "org.apache.commons.math3.analysis.function$Sinc#derivative()": 4618.0,
        "org.apache.commons.math3.analysis.function$Sinc#value(double)": 21446118.0,
        "org.apache.commons.math3.analysis.function$Sinc#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 4610.0,
        "org.apache.commons.math3.analysis.solvers$AbstractUnivariateSolver#AbstractUnivariateSolver(double)": 19686732.0,
        "org.apache.commons.math3.analysis.solvers$AbstractUnivariateSolver#AbstractUnivariateSolver(double,double)": 4596.0,
        "org.apache.commons.math3.analysis.solvers$AbstractUnivariateSolver#AbstractUnivariateSolver(double,double,double)": 4600.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#BaseAbstractUnivariateSolver(double)": 19598082.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#BaseAbstractUnivariateSolver(double,double)": 4596.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#BaseAbstractUnivariateSolver(double,double,double)": 19491966.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#computeObjectiveValue(double)": 19598082.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getAbsoluteAccuracy()": 19713366.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getEvaluations()": 21150726.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getFunctionValueAccuracy()": 19722248.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getMax()": 19606938.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getMaxEvaluations()": 4618.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getMin()": 19606938.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getRelativeAccuracy()": 19784478.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getStartValue()": 19980696.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#incrementEvaluationCount()": 19571526.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#isBracketing(double,double)": 4612.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#isSequence(double,double,double)": 4606.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#setup(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 19562678.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double)": 4608.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 4268.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 19571526.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#verifyBracketing(double,double)": 4538.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#verifyInterval(double,double)": 4604.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#verifySequence(double,double,double)": 20016476.0,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#BrentSolver()": 21298166.0,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#BrentSolver(double)": 20394098.0,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#BrentSolver(double,double)": 4610.0,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#BrentSolver(double,double,double)": 4618.0,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#brent(double,double,double,double)": 20430246.0,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#doSolve()": 20367008.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#UnivariateSolverUtils()": 4618.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 4608.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,int)": 4606.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#forceSide(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver,double,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution)": 4608.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#isBracketing(org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 4538.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#isSequence(double,double,double)": 4606.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#midpoint(double,double)": 4602.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#solve(org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 4610.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#solve(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 4420.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#verifyBracketing(org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 4538.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#verifyInterval(double,double)": 19298168.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#verifySequence(double,double,double)": 19980696.0,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException()": 4616.0,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4582.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 4268.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 4226.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 4612.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 4596.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4510.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 4618.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 4618.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 4616.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 2882.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 4600.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 4618.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 4614.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 3204.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 4590.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 4488.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4618.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4434.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 4496.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 4616.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 4618.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int)": 4618.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int,java.lang.Class)": 4592.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException()": 4582.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4570.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getContext()": 4618.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getLocalizedMessage()": 4618.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getMessage()": 4618.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 4558.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 4558.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 4592.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(java.lang.Integer[],java.lang.Integer[])": 4618.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,java.lang.Integer[],java.lang.Integer[])": 4540.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimension(int)": 4616.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimensions()": 4618.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimension(int)": 4616.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimensions()": 4618.0,
        "org.apache.commons.math3.exception$NoBracketingException#NoBracketingException(double,double,double,double)": 4596.0,
        "org.apache.commons.math3.exception$NoBracketingException#NoBracketingException(org.apache.commons.math3.exception.util.Localizable,double,double,double,double,java.lang.Object[])": 4596.0,
        "org.apache.commons.math3.exception$NoBracketingException#getFHi()": 4618.0,
        "org.apache.commons.math3.exception$NoBracketingException#getFLo()": 4618.0,
        "org.apache.commons.math3.exception$NoBracketingException#getHi()": 4618.0,
        "org.apache.commons.math3.exception$NoBracketingException#getLo()": 4618.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 4596.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 4560.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 4616.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 4586.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 4616.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 4616.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 4616.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 4616.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 4600.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 4578.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 4578.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 4594.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 4520.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 4456.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 4522.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4468.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 4544.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 4324.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 4616.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 4616.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 4416.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 4142.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 4612.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 4612.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 4534.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 4226.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 4616.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 4616.0,
        "org.apache.commons.math3.exception$TooManyEvaluationsException#TooManyEvaluationsException(java.lang.Number)": 4572.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 4614.0,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4594.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix()": 4614.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field)": 4474.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field,int,int)": 4412.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 4610.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int)": 4618.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int,int)": 4618.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkAdditionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 4598.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkColumnIndex(int)": 4366.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkMultiplicationCompatible(org.apache.commons.math3.linear.FieldMatrix)": 4582.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkRowIndex(int)": 4366.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int,int,int,int)": 4598.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int[],int[])": 4608.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubtractionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 4610.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int,int,int,int,org.apache.commons.math3.FieldElement[][])": 4614.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int[],int[],org.apache.commons.math3.FieldElement[][])": 4614.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#equals(java.lang.Object)": 4554.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[])": 4618.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[][])": 4436.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumn(int)": 4598.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnMatrix(int)": 4612.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnVector(int)": 4606.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getData()": 4614.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getField()": 4356.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRow(int)": 4604.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowMatrix(int)": 4610.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowVector(int)": 4612.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int,int,int,int)": 4614.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int[],int[])": 4612.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getTrace()": 4612.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#hashCode()": 4612.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#isSquare()": 4542.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 4598.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 4614.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.linear.FieldVector)": 4612.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#power(int)": 4616.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 4616.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldMatrix)": 4612.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldVector)": 4618.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 4614.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 4614.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 4616.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 4616.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 4616.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 4616.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 4616.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 4616.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 4614.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 4616.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#toString()": 4614.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#transpose()": 4606.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4616.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4616.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4616.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4616.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4612.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4616.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4572.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4614.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4616.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4618.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4614.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4618.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$1#visit(int,int,org.apache.commons.math3.FieldElement)": 4612.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#start(int,int,int,int,int,int)": 4614.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#visit(int,int,org.apache.commons.math3.FieldElement)": 4614.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$3#visit(int,int,org.apache.commons.math3.FieldElement)": 4606.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#<clinit>()": 14999328.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix()": 16621332.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix(int,int)": 15927398.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 21390576.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#addToEntry(int,int,double)": 4618.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int,int,int,int,double[][])": 4554.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int[],int[],double[][])": 4614.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#equals(java.lang.Object)": 4512.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumn(int)": 21187538.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnMatrix(int)": 21390576.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnVector(int)": 4580.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getData()": 4614.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getFrobeniusNorm()": 21409082.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getNorm()": 4450.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRow(int)": 20394098.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowMatrix(int)": 4610.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowVector(int)": 4510.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int,int,int,int)": 4594.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int[],int[])": 4612.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getTrace()": 4612.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#hashCode()": 4604.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#isSquare()": 19900308.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 20303868.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiplyEntry(int,int,double)": 4618.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(double[])": 4614.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(org.apache.commons.math3.linear.RealVector)": 19589228.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#power(int)": 4614.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(double[])": 4616.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealMatrix)": 4612.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealVector)": 4618.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarAdd(double)": 21409082.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarMultiply(double)": 20267832.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumn(int,double[])": 4596.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 4614.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 21325868.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRow(int,double[])": 4616.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 4616.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 4506.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setSubMatrix(double[][],int,int)": 4604.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 20738796.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#toString()": 4604.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#transpose()": 19837896.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4616.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4616.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 4602.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4616.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4606.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4616.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 19820082.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4560.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4616.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4618.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 4614.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4618.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#end()": 4450.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#start(int,int,int,int,int,int)": 4450.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#visit(int,int,double)": 4450.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#end()": 21409082.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#start(int,int,int,int,int,int)": 21409082.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#visit(int,int,double)": 21409082.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$3#visit(int,int,double)": 4612.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#start(int,int,int,int,int,int)": 4554.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#visit(int,int,double)": 4554.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$5#visit(int,int,double)": 19837896.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field)": 4614.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,int,int)": 4548.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[])": 4618.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][])": 4520.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],boolean)": 4556.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 4618.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][])": 4540.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][],boolean)": 4582.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#add(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 4614.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 4618.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copy()": 4614.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyIn(org.apache.commons.math3.FieldElement[][])": 4520.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyOut()": 4552.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#createMatrix(int,int)": 4582.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getColumnDimension()": 4460.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getData()": 4556.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getDataRef()": 4618.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getEntry(int,int)": 4486.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getRowDimension()": 4460.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 4616.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 4618.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 4614.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 4616.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 4542.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 4520.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 4616.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4616.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4616.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4616.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4616.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4614.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4616.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4574.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4614.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix()": 4610.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[])": 4610.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][])": 17263506.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][],boolean)": 18939582.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(int,int)": 17405082.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#add(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 4614.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#addToEntry(int,int,double)": 4618.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copy()": 4590.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyIn(double[][])": 17246888.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyOut()": 18455238.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#createMatrix(int,int)": 18549882.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getColumnDimension()": 16304808.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getData()": 18524046.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getDataRef()": 4470.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getEntry(int,int)": 17015076.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getRowDimension()": 16312886.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 4596.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiplyEntry(int,int,double)": 4598.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#operate(double[])": 4494.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#preMultiply(double[])": 4608.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setEntry(int,int,double)": 17488632.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setSubMatrix(double[][],int,int)": 17246888.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 4616.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4616.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4616.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 4460.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4616.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4608.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4616.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 19828988.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4560.0,
        "org.apache.commons.math3.linear$ArrayRealVector#<clinit>()": 16119566.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector()": 4612.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[])": 17791068.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],boolean)": 17263506.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],double[])": 4616.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],int,int)": 4616.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],org.apache.commons.math3.linear.ArrayRealVector)": 4616.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int)": 4262.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int,double)": 4612.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[])": 4616.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[],int,int)": 4616.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector)": 4616.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean)": 4358.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,double[])": 4616.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector)": 4612.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.RealVector)": 4614.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector)": 4616.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.ArrayRealVector)": 4616.0,
        "org.apache.commons.math3.linear$ArrayRealVector#add(org.apache.commons.math3.linear.RealVector)": 4600.0,
        "org.apache.commons.math3.linear$ArrayRealVector#addToEntry(int,double)": 4612.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(double)": 4614.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.ArrayRealVector)": 4618.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.RealVector)": 4614.0,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(int)": 18420882.0,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 4584.0,
        "org.apache.commons.math3.linear$ArrayRealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 4584.0,
        "org.apache.commons.math3.linear$ArrayRealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 4536.0,
        "org.apache.commons.math3.linear$ArrayRealVector#copy()": 4360.0,
        "org.apache.commons.math3.linear$ArrayRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 19079118.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": 4618.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 4566.0,
        "org.apache.commons.math3.linear$ArrayRealVector#equals(java.lang.Object)": 4518.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDataRef()": 19430198.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDimension()": 18215418.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 4608.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getEntry(int)": 18765882.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 4610.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Norm()": 4614.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 4610.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfNorm()": 4614.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getNorm()": 4504.0,
        "org.apache.commons.math3.linear$ArrayRealVector#getSubVector(int,int)": 4604.0,
        "org.apache.commons.math3.linear$ArrayRealVector#hashCode()": 4558.0,
        "org.apache.commons.math3.linear$ArrayRealVector#isInfinite()": 4614.0,
        "org.apache.commons.math3.linear$ArrayRealVector#isNaN()": 4460.0,
        "org.apache.commons.math3.linear$ArrayRealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 4612.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapAddToSelf(double)": 4612.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapDivideToSelf(double)": 4608.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapMultiplyToSelf(double)": 4462.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapSubtractToSelf(double)": 4612.0,
        "org.apache.commons.math3.linear$ArrayRealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 4610.0,
        "org.apache.commons.math3.linear$ArrayRealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 4612.0,
        "org.apache.commons.math3.linear$ArrayRealVector#set(double)": 4528.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setEntry(int,double)": 4444.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,double[])": 4568.0,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 4566.0,
        "org.apache.commons.math3.linear$ArrayRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 4410.0,
        "org.apache.commons.math3.linear$ArrayRealVector#toArray()": 19909232.0,
        "org.apache.commons.math3.linear$ArrayRealVector#toString()": 4618.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 4614.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 4610.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 4614.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 4610.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 4616.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 4614.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 4616.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 4614.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(int,int,org.apache.commons.math3.FieldElement[][],boolean)": 4548.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.Field,int,int)": 4564.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.FieldElement[][])": 4548.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.BlockFieldMatrix)": 4610.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 4614.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 4618.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockHeight(int)": 4536.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockWidth(int)": 4526.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copy()": 4616.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copyBlockPart(org.apache.commons.math3.FieldElement[],int,int,int,int,int,org.apache.commons.math3.FieldElement[],int,int,int)": 4612.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createBlocksLayout(org.apache.commons.math3.Field,int,int)": 4564.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createMatrix(int,int)": 4616.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumn(int)": 4608.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnDimension()": 4536.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnMatrix(int)": 4612.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnVector(int)": 4612.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getData()": 4608.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getEntry(int,int)": 4562.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRow(int)": 4608.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowDimension()": 4534.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowMatrix(int)": 4610.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowVector(int)": 4612.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getSubMatrix(int,int,int,int)": 4612.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.BlockFieldMatrix)": 4604.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 4606.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 4618.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 4612.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 4614.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 4610.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 4616.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 4610.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 4614.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 4614.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 4614.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 4608.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 4610.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 4614.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 4614.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 4614.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 4614.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.BlockFieldMatrix)": 4614.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 4616.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#toBlocksLayout(org.apache.commons.math3.FieldElement[][])": 4548.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#transpose()": 4612.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4614.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4616.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4616.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4614.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 4616.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 4616.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 4616.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 4616.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(double[][])": 19989638.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int)": 20857382.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int,double[][],boolean)": 19740018.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.BlockRealMatrix)": 4610.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 4614.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#addToEntry(int,int,double)": 4616.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockHeight(int)": 19686732.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockWidth(int)": 19615796.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#copy()": 4608.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#copyBlockPart(double[],int,int,int,int,int,double[],int,int,int)": 4608.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#createBlocksLayout(int,int)": 20629632.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#createMatrix(int,int)": 4616.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumn(int)": 4574.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnDimension()": 19695608.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnMatrix(int)": 4612.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnVector(int)": 4612.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getData()": 20566086.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getEntry(int,int)": 4448.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getFrobeniusNorm()": 4616.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getNorm()": 4564.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRow(int)": 4608.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowDimension()": 19686732.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowMatrix(int)": 4610.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowVector(int)": 4612.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#getSubMatrix(int,int,int,int)": 4608.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.BlockRealMatrix)": 4584.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 4584.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiplyEntry(int,int,double)": 4618.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#operate(double[])": 20857382.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#preMultiply(double[])": 4614.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarAdd(double)": 4610.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarMultiply(double)": 4616.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumn(int,double[])": 4602.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 4614.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 4614.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 4614.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setEntry(int,int,double)": 4558.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRow(int,double[])": 4610.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 4614.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 4614.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 4614.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setSubMatrix(double[][],int,int)": 4614.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.BlockRealMatrix)": 4574.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 4566.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#toBlocksLayout(double[][])": 19989638.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#transpose()": 21279708.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4586.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4616.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 4608.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4606.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4616.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 4616.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 4616.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 4616.0,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#DefaultRealMatrixPreservingVisitor()": 19766688.0,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#end()": 19766688.0,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#start(int,int,int,int,int,int)": 19820082.0,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#visit(int,int,double)": 4618.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#DiagonalMatrix(double[])": 19802276.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#DiagonalMatrix(double[],boolean)": 19766688.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#DiagonalMatrix(int)": 19820082.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#add(org.apache.commons.math3.linear.DiagonalMatrix)": 4616.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#addToEntry(int,int,double)": 4612.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#copy()": 19900308.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#createMatrix(int,int)": 4614.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#ensureZero(double)": 4606.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#getColumnDimension()": 19740018.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#getData()": 4610.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#getDataRef()": 20052288.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#getEntry(int,int)": 19793376.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#getRowDimension()": 19722248.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#multiply(org.apache.commons.math3.linear.DiagonalMatrix)": 20043332.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 19962818.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#multiplyEntry(int,int,double)": 4612.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#operate(double[])": 20052288.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#preMultiply(double[])": 4616.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#setEntry(int,int,double)": 19855718.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#subtract(org.apache.commons.math3.linear.DiagonalMatrix)": 4616.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(double[],double[])": 4610.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(double[],double[],double)": 4618.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(org.apache.commons.math3.linear.RealMatrix)": 21095568.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(org.apache.commons.math3.linear.RealMatrix,double)": 4618.0,
        "org.apache.commons.math3.linear$EigenDecomposition#cdiv(double,double,double,double)": 4614.0,
        "org.apache.commons.math3.linear$EigenDecomposition#findEigenVectors(double[][])": 21086382.0,
        "org.apache.commons.math3.linear$EigenDecomposition#findEigenVectorsFromSchur(org.apache.commons.math3.linear.SchurTransformer)": 4612.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getD()": 21381326.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getDeterminant()": 4598.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getEigenvector(int)": 4590.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getImagEigenvalue(int)": 4618.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getImagEigenvalues()": 4618.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getRealEigenvalue(int)": 4602.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getRealEigenvalues()": 4580.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getSolver()": 4590.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getSquareRoot()": 4612.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getV()": 21335106.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getVT()": 4610.0,
        "org.apache.commons.math3.linear$EigenDecomposition#hasComplexEigenvalues()": 4590.0,
        "org.apache.commons.math3.linear$EigenDecomposition#transformToSchur(org.apache.commons.math3.linear.RealMatrix)": 4612.0,
        "org.apache.commons.math3.linear$EigenDecomposition#transformToTridiagonal(org.apache.commons.math3.linear.RealMatrix)": 21123138.0,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#EigenDecomposition$Solver(double[],double[],org.apache.commons.math3.linear.ArrayRealVector[])": 4590.0,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#getInverse()": 4594.0,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#isNonSingular()": 4590.0,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#solve(org.apache.commons.math3.linear.RealMatrix)": 4614.0,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#solve(org.apache.commons.math3.linear.RealVector)": 4614.0,
        "org.apache.commons.math3.linear$LUDecomposition#LUDecomposition(org.apache.commons.math3.linear.RealMatrix)": 20793486.0,
        "org.apache.commons.math3.linear$LUDecomposition#LUDecomposition(org.apache.commons.math3.linear.RealMatrix,double)": 20784366.0,
        "org.apache.commons.math3.linear$LUDecomposition#getDeterminant()": 4616.0,
        "org.apache.commons.math3.linear$LUDecomposition#getL()": 4608.0,
        "org.apache.commons.math3.linear$LUDecomposition#getP()": 4608.0,
        "org.apache.commons.math3.linear$LUDecomposition#getPivot()": 4614.0,
        "org.apache.commons.math3.linear$LUDecomposition#getSolver()": 20857382.0,
        "org.apache.commons.math3.linear$LUDecomposition#getU()": 4608.0,
        "org.apache.commons.math3.linear$LUDecomposition$Solver#LUDecomposition$Solver(double[][],int[],boolean)": 20857382.0,
        "org.apache.commons.math3.linear$LUDecomposition$Solver#getInverse()": 4574.0,
        "org.apache.commons.math3.linear$LUDecomposition$Solver#isNonSingular()": 4610.0,
        "org.apache.commons.math3.linear$LUDecomposition$Solver#solve(org.apache.commons.math3.linear.RealMatrix)": 4568.0,
        "org.apache.commons.math3.linear$LUDecomposition$Solver#solve(org.apache.commons.math3.linear.RealVector)": 21068016.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#MatrixDimensionMismatchException(int,int,int,int)": 4540.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedColumnDimension()": 4616.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedRowDimension()": 4616.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongColumnDimension()": 4616.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongRowDimension()": 4616.0,
        "org.apache.commons.math3.linear$MatrixUtils#<clinit>()": 15467748.0,
        "org.apache.commons.math3.linear$MatrixUtils#MatrixUtils()": 4618.0,
        "org.apache.commons.math3.linear$MatrixUtils#bigFractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 4588.0,
        "org.apache.commons.math3.linear$MatrixUtils#blockInverse(org.apache.commons.math3.linear.RealMatrix,int)": 4616.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkAdditionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 21252036.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 15823788.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)": 16103508.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 18584358.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 15815832.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int,int,int)": 4516.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int[],int[])": 4608.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubtractionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 20538882.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkSymmetric(org.apache.commons.math3.linear.RealMatrix,double)": 4614.0,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnFieldMatrix(org.apache.commons.math3.FieldElement[])": 4616.0,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnRealMatrix(double[])": 21418338.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldDiagonalMatrix(org.apache.commons.math3.FieldElement[])": 4618.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldIdentityMatrix(org.apache.commons.math3.Field,int)": 4614.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.Field,int,int)": 4614.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.FieldElement[][])": 4616.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldVector(org.apache.commons.math3.FieldElement[])": 4618.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealDiagonalMatrix(double[])": 21113946.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealIdentityMatrix(int)": 4494.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(double[][])": 18189816.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(int,int)": 20159916.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealVector(double[])": 4616.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 4616.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRowRealMatrix(double[])": 4616.0,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealMatrix(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 4614.0,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealVector(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 4614.0,
        "org.apache.commons.math3.linear$MatrixUtils#fractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 4616.0,
        "org.apache.commons.math3.linear$MatrixUtils#isSymmetric(org.apache.commons.math3.linear.RealMatrix,double)": 21077198.0,
        "org.apache.commons.math3.linear$MatrixUtils#isSymmetricInternal(org.apache.commons.math3.linear.RealMatrix,double,boolean)": 21058836.0,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealMatrix(org.apache.commons.math3.linear.RealMatrix,java.io.ObjectOutputStream)": 4614.0,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealVector(org.apache.commons.math3.linear.RealVector,java.io.ObjectOutputStream)": 4614.0,
        "org.apache.commons.math3.linear$MatrixUtils#solveLowerTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 4616.0,
        "org.apache.commons.math3.linear$MatrixUtils#solveUpperTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 4616.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#MatrixUtils$BigFractionMatrixConverter()": 4588.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#getConvertedMatrix()": 4588.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#start(int,int,int,int,int,int)": 4588.0,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.BigFraction)": 4588.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#MatrixUtils$FractionMatrixConverter()": 4616.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#getConvertedMatrix()": 4616.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#start(int,int,int,int,int,int)": 4616.0,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.Fraction)": 4616.0,
        "org.apache.commons.math3.linear$NonSquareMatrixException#NonSquareMatrixException(int,int)": 4590.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#NonSymmetricMatrixException(int,int,double)": 4614.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getColumn()": 4618.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getRow()": 4618.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getThreshold()": 4618.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(int,int)": 4556.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(org.apache.commons.math3.linear.OpenMapRealMatrix)": 4600.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#add(org.apache.commons.math3.linear.OpenMapRealMatrix)": 4614.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#addToEntry(int,int,double)": 4618.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#computeKey(int,int)": 4558.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#copy()": 4614.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#createMatrix(int,int)": 4604.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getColumnDimension()": 4558.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getEntry(int,int)": 4562.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getRowDimension()": 4558.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.OpenMapRealMatrix)": 4610.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 4610.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiplyEntry(int,int,double)": 4618.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#setEntry(int,int,double)": 4558.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.OpenMapRealMatrix)": 4606.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 4606.0,
        "org.apache.commons.math3.linear$RealLinearOperator#RealLinearOperator()": 14721732.0,
        "org.apache.commons.math3.linear$RealLinearOperator#isTransposable()": 4618.0,
        "org.apache.commons.math3.linear$RealLinearOperator#operateTranspose(org.apache.commons.math3.linear.RealVector)": 4618.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat()": 4616.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 15467748.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 14929686.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.text.NumberFormat)": 14929686.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix)": 4582.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition)": 4582.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getAvailableLocales()": 4618.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getColumnSeparator()": 4618.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getFormat()": 14991582.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance()": 15467748.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance(java.util.Locale)": 14929686.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getPrefix()": 4618.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowPrefix()": 4618.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSeparator()": 4618.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSuffix()": 4618.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getSuffix()": 4618.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String)": 4594.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String,java.text.ParsePosition)": 4586.0,
        "org.apache.commons.math3.linear$RealVector#RealVector()": 14668056.0,
        "org.apache.commons.math3.linear$RealVector#add(org.apache.commons.math3.linear.RealVector)": 4610.0,
        "org.apache.commons.math3.linear$RealVector#addToEntry(int,double)": 4606.0,
        "org.apache.commons.math3.linear$RealVector#checkIndex(int)": 4252.0,
        "org.apache.commons.math3.linear$RealVector#checkIndices(int,int)": 4570.0,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(int)": 4476.0,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 4498.0,
        "org.apache.commons.math3.linear$RealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 4600.0,
        "org.apache.commons.math3.linear$RealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 4584.0,
        "org.apache.commons.math3.linear$RealVector#cosine(org.apache.commons.math3.linear.RealVector)": 4584.0,
        "org.apache.commons.math3.linear$RealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 4562.0,
        "org.apache.commons.math3.linear$RealVector#equals(java.lang.Object)": 4618.0,
        "org.apache.commons.math3.linear$RealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 4610.0,
        "org.apache.commons.math3.linear$RealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 4610.0,
        "org.apache.commons.math3.linear$RealVector#getL1Norm()": 4614.0,
        "org.apache.commons.math3.linear$RealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 4610.0,
        "org.apache.commons.math3.linear$RealVector#getLInfNorm()": 4614.0,
        "org.apache.commons.math3.linear$RealVector#getMaxIndex()": 4608.0,
        "org.apache.commons.math3.linear$RealVector#getMaxValue()": 4608.0,
        "org.apache.commons.math3.linear$RealVector#getMinIndex()": 4608.0,
        "org.apache.commons.math3.linear$RealVector#getMinValue()": 4608.0,
        "org.apache.commons.math3.linear$RealVector#getNorm()": 4574.0,
        "org.apache.commons.math3.linear$RealVector#hashCode()": 4618.0,
        "org.apache.commons.math3.linear$RealVector#iterator()": 4476.0,
        "org.apache.commons.math3.linear$RealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 4614.0,
        "org.apache.commons.math3.linear$RealVector#mapAdd(double)": 4612.0,
        "org.apache.commons.math3.linear$RealVector#mapAddToSelf(double)": 4610.0,
        "org.apache.commons.math3.linear$RealVector#mapDivide(double)": 4604.0,
        "org.apache.commons.math3.linear$RealVector#mapDivideToSelf(double)": 4604.0,
        "org.apache.commons.math3.linear$RealVector#mapMultiply(double)": 4444.0,
        "org.apache.commons.math3.linear$RealVector#mapMultiplyToSelf(double)": 4592.0,
        "org.apache.commons.math3.linear$RealVector#mapSubtract(double)": 4608.0,
        "org.apache.commons.math3.linear$RealVector#mapSubtractToSelf(double)": 4608.0,
        "org.apache.commons.math3.linear$RealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 4568.0,
        "org.apache.commons.math3.linear$RealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 4608.0,
        "org.apache.commons.math3.linear$RealVector#projection(org.apache.commons.math3.linear.RealVector)": 4590.0,
        "org.apache.commons.math3.linear$RealVector#set(double)": 4614.0,
        "org.apache.commons.math3.linear$RealVector#sparseIterator()": 4614.0,
        "org.apache.commons.math3.linear$RealVector#subtract(org.apache.commons.math3.linear.RealVector)": 4610.0,
        "org.apache.commons.math3.linear$RealVector#toArray()": 4610.0,
        "org.apache.commons.math3.linear$RealVector#unitVector()": 4608.0,
        "org.apache.commons.math3.linear$RealVector#unitize()": 4608.0,
        "org.apache.commons.math3.linear$RealVector#unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)": 4562.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 4610.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 4602.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 4610.0,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 4602.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 4614.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 4610.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 4614.0,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 4610.0,
        "org.apache.commons.math3.linear$RealVector$1#hasNext()": 4476.0,
        "org.apache.commons.math3.linear$RealVector$1#next()": 4476.0,
        "org.apache.commons.math3.linear$RealVector$1#remove()": 4612.0,
        "org.apache.commons.math3.linear$RealVector$2#add(org.apache.commons.math3.linear.RealVector)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#addToEntry(int,double)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#append(double)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#append(org.apache.commons.math3.linear.RealVector)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#combine(double,double,org.apache.commons.math3.linear.RealVector)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#copy()": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#cosine(org.apache.commons.math3.linear.RealVector)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#dotProduct(org.apache.commons.math3.linear.RealVector)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeDivide(org.apache.commons.math3.linear.RealVector)": 4618.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 4618.0,
        "org.apache.commons.math3.linear$RealVector$2#getDimension()": 4606.0,
        "org.apache.commons.math3.linear$RealVector$2#getDistance(org.apache.commons.math3.linear.RealVector)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#getEntry(int)": 4602.0,
        "org.apache.commons.math3.linear$RealVector$2#getL1Distance(org.apache.commons.math3.linear.RealVector)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#getL1Norm()": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#getLInfNorm()": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#getNorm()": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#getSubVector(int,int)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#isInfinite()": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#isNaN()": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#iterator()": 4610.0,
        "org.apache.commons.math3.linear$RealVector$2#map(org.apache.commons.math3.analysis.UnivariateFunction)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#mapAdd(double)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#mapAddToSelf(double)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#mapDivide(double)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#mapDivideToSelf(double)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiply(double)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiplyToSelf(double)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtract(double)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtractToSelf(double)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#outerProduct(org.apache.commons.math3.linear.RealVector)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#set(double)": 4612.0,
        "org.apache.commons.math3.linear$RealVector$2#setEntry(int,double)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#sparseIterator()": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#subtract(org.apache.commons.math3.linear.RealVector)": 4610.0,
        "org.apache.commons.math3.linear$RealVector$2#toArray()": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#unitVector()": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2#unitize()": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2$1#hasNext()": 4610.0,
        "org.apache.commons.math3.linear$RealVector$2$1#next()": 4610.0,
        "org.apache.commons.math3.linear$RealVector$2$1#remove()": 4618.0,
        "org.apache.commons.math3.linear$RealVector$2$2#hasNext()": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2$2#next()": 4614.0,
        "org.apache.commons.math3.linear$RealVector$2$2#remove()": 4618.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2)": 4606.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#getValue()": 4606.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#setValue(double)": 4610.0,
        "org.apache.commons.math3.linear$RealVector$Entry#RealVector$Entry(org.apache.commons.math3.linear.RealVector)": 4470.0,
        "org.apache.commons.math3.linear$RealVector$Entry#getIndex()": 4470.0,
        "org.apache.commons.math3.linear$RealVector$Entry#getValue()": 4476.0,
        "org.apache.commons.math3.linear$RealVector$Entry#setIndex(int)": 4470.0,
        "org.apache.commons.math3.linear$RealVector$Entry#setValue(double)": 4564.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#RealVector$SparseEntryIterator(org.apache.commons.math3.linear.RealVector)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#advance(org.apache.commons.math3.linear.RealVector$Entry)": 4614.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#hasNext()": 4614.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#next()": 4614.0,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#remove()": 4618.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat()": 4602.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String)": 4618.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 16039356.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.text.NumberFormat)": 16039356.0,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector)": 4574.0,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition)": 4574.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getAvailableLocales()": 4618.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getFormat()": 4614.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance()": 16119566.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance(java.util.Locale)": 16039356.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getPrefix()": 4618.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSeparator()": 4618.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSuffix()": 4618.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String)": 4562.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String,java.text.ParsePosition)": 4546.0,
        "org.apache.commons.math3.linear$SingularMatrixException#SingularMatrixException()": 4576.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#TriDiagonalTransformer(org.apache.commons.math3.linear.RealMatrix)": 21040482.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getHouseholderVectorsRef()": 4618.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getMainDiagonalRef()": 21113946.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getQ()": 21077198.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getQT()": 21068016.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getSecondaryDiagonalRef()": 21113946.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getT()": 4608.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#transform()": 21049658.0,
        "org.apache.commons.math3.optim$AbstractConvergenceChecker#AbstractConvergenceChecker(double,double)": 20829986.0,
        "org.apache.commons.math3.optim$AbstractConvergenceChecker#getAbsoluteThreshold()": 21003798.0,
        "org.apache.commons.math3.optim$AbstractConvergenceChecker#getRelativeThreshold()": 20994632.0,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#BaseMultivariateOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 19864632.0,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#checkParameters()": 19909232.0,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#getLowerBound()": 20240826.0,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#getStartPoint()": 20249826.0,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#getUpperBound()": 20294856.0,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 19909232.0,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 19909232.0,
        "org.apache.commons.math3.optim$BaseOptimizer#BaseOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 19731132.0,
        "org.apache.commons.math3.optim$BaseOptimizer#getConvergenceChecker()": 20303868.0,
        "org.apache.commons.math3.optim$BaseOptimizer#getEvaluations()": 21187538.0,
        "org.apache.commons.math3.optim$BaseOptimizer#getIterations()": 21585288.0,
        "org.apache.commons.math3.optim$BaseOptimizer#getMaxEvaluations()": 21353588.0,
        "org.apache.commons.math3.optim$BaseOptimizer#getMaxIterations()": 4618.0,
        "org.apache.commons.math3.optim$BaseOptimizer#incrementEvaluationCount()": 20159916.0,
        "org.apache.commons.math3.optim$BaseOptimizer#incrementIterationCount()": 4568.0,
        "org.apache.commons.math3.optim$BaseOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 19775582.0,
        "org.apache.commons.math3.optim$BaseOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 19775582.0,
        "org.apache.commons.math3.optim$BaseOptimizer$MaxEvalCallback#BaseOptimizer$MaxEvalCallback()": 19731132.0,
        "org.apache.commons.math3.optim$BaseOptimizer$MaxEvalCallback#trigger(int)": 4602.0,
        "org.apache.commons.math3.optim$BaseOptimizer$MaxIterCallback#BaseOptimizer$MaxIterCallback()": 19731132.0,
        "org.apache.commons.math3.optim$BaseOptimizer$MaxIterCallback#trigger(int)": 4618.0,
        "org.apache.commons.math3.optim$InitialGuess#InitialGuess(double[])": 20141958.0,
        "org.apache.commons.math3.optim$InitialGuess#getInitialGuess()": 20150936.0,
        "org.apache.commons.math3.optim$MaxEval#MaxEval(int)": 20016476.0,
        "org.apache.commons.math3.optim$MaxEval#getMaxEval()": 20025426.0,
        "org.apache.commons.math3.optim$MaxEval#unlimited()": 4618.0,
        "org.apache.commons.math3.optim$MaxIter#MaxIter(int)": 4564.0,
        "org.apache.commons.math3.optim$MaxIter#getMaxIter()": 4564.0,
        "org.apache.commons.math3.optim$MaxIter#unlimited()": 4618.0,
        "org.apache.commons.math3.optim$PointValuePair#PointValuePair(double[],double)": 20839116.0,
        "org.apache.commons.math3.optim$PointValuePair#PointValuePair(double[],double,boolean)": 20839116.0,
        "org.apache.commons.math3.optim$PointValuePair#getPoint()": 21086382.0,
        "org.apache.commons.math3.optim$PointValuePair#getPointRef()": 21390576.0,
        "org.apache.commons.math3.optim$PointValuePair#writeReplace()": 4616.0,
        "org.apache.commons.math3.optim$PointValuePair$DataTransferObject#PointValuePair$DataTransferObject(double[],double)": 4616.0,
        "org.apache.commons.math3.optim$PointValuePair$DataTransferObject#readResolve()": 4616.0,
        "org.apache.commons.math3.optim$PointVectorValuePair#PointVectorValuePair(double[],double[])": 20720582.0,
        "org.apache.commons.math3.optim$PointVectorValuePair#PointVectorValuePair(double[],double[],boolean)": 20720582.0,
        "org.apache.commons.math3.optim$PointVectorValuePair#getPoint()": 4564.0,
        "org.apache.commons.math3.optim$PointVectorValuePair#getPointRef()": 4514.0,
        "org.apache.commons.math3.optim$PointVectorValuePair#getValue()": 4606.0,
        "org.apache.commons.math3.optim$PointVectorValuePair#getValueRef()": 21344346.0,
        "org.apache.commons.math3.optim$PointVectorValuePair#writeReplace()": 4616.0,
        "org.apache.commons.math3.optim$PointVectorValuePair$DataTransferObject#PointVectorValuePair$DataTransferObject(double[],double[])": 4616.0,
        "org.apache.commons.math3.optim$PointVectorValuePair$DataTransferObject#readResolve()": 4616.0,
        "org.apache.commons.math3.optim$SimpleBounds#SimpleBounds(double[],double[])": 21288936.0,
        "org.apache.commons.math3.optim$SimpleBounds#getLower()": 21298166.0,
        "org.apache.commons.math3.optim$SimpleBounds#getUpper()": 21298166.0,
        "org.apache.commons.math3.optim$SimpleBounds#unbounded(int)": 21436856.0,
        "org.apache.commons.math3.optim$SimpleValueChecker#SimpleValueChecker(double,double)": 21279708.0,
        "org.apache.commons.math3.optim$SimpleValueChecker#SimpleValueChecker(double,double,int)": 4614.0,
        "org.apache.commons.math3.optim$SimpleValueChecker#converged(int,org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair)": 21298166.0,
        "org.apache.commons.math3.optim$SimpleVectorValueChecker#SimpleVectorValueChecker(double,double)": 21298166.0,
        "org.apache.commons.math3.optim$SimpleVectorValueChecker#SimpleVectorValueChecker(double,double,int)": 4612.0,
        "org.apache.commons.math3.optim$SimpleVectorValueChecker#converged(int,org.apache.commons.math3.optim.PointVectorValuePair,org.apache.commons.math3.optim.PointVectorValuePair)": 21335106.0,
        "org.apache.commons.math3.optim.nonlinear.scalar$GoalType#<clinit>()": 20547948.0,
        "org.apache.commons.math3.optim.nonlinear.scalar$GoalType#GoalType(java.lang.String,int)": 20547948.0,
        "org.apache.commons.math3.optim.nonlinear.scalar$GradientMultivariateOptimizer#GradientMultivariateOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 21464648.0,
        "org.apache.commons.math3.optim.nonlinear.scalar$GradientMultivariateOptimizer#computeObjectiveGradient(double[])": 21473916.0,
        "org.apache.commons.math3.optim.nonlinear.scalar$GradientMultivariateOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 21464648.0,
        "org.apache.commons.math3.optim.nonlinear.scalar$GradientMultivariateOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 21464648.0,
        "org.apache.commons.math3.optim.nonlinear.scalar$MultivariateOptimizer#MultivariateOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 20757018.0,
        "org.apache.commons.math3.optim.nonlinear.scalar$MultivariateOptimizer#computeObjectiveValue(double[])": 21123138.0,
        "org.apache.commons.math3.optim.nonlinear.scalar$MultivariateOptimizer#getGoalType()": 20875656.0,
        "org.apache.commons.math3.optim.nonlinear.scalar$MultivariateOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 20766132.0,
        "org.apache.commons.math3.optim.nonlinear.scalar$MultivariateOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 20766132.0,
        "org.apache.commons.math3.optim.nonlinear.scalar$ObjectiveFunction#ObjectiveFunction(org.apache.commons.math3.analysis.MultivariateFunction)": 21003798.0,
        "org.apache.commons.math3.optim.nonlinear.scalar$ObjectiveFunction#getObjectiveFunction()": 21058836.0,
        "org.apache.commons.math3.optim.nonlinear.scalar$ObjectiveFunctionGradient#ObjectiveFunctionGradient(org.apache.commons.math3.analysis.MultivariateVectorFunction)": 21464648.0,
        "org.apache.commons.math3.optim.nonlinear.scalar$ObjectiveFunctionGradient#getObjectiveFunctionGradient()": 21464648.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer#NonLinearConjugateGradientOptimizer(org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula,org.apache.commons.math3.optim.ConvergenceChecker)": 21492458.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer#NonLinearConjugateGradientOptimizer(org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula,org.apache.commons.math3.optim.ConvergenceChecker,org.apache.commons.math3.analysis.solvers.UnivariateSolver)": 4614.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer#NonLinearConjugateGradientOptimizer(org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula,org.apache.commons.math3.optim.ConvergenceChecker,org.apache.commons.math3.analysis.solvers.UnivariateSolver,org.apache.commons.math3.optim.nonlinear.scalar.gradient.Preconditioner)": 21464648.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer#checkParameters()": 21464648.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer#doOptimize()": 21473916.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer#findUpperBound(org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 21473916.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 21464648.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 21464648.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer$1#<clinit>()": 21473916.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer$Formula#<clinit>()": 21464648.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer$Formula#NonLinearConjugateGradientOptimizer$Formula(java.lang.String,int)": 21464648.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer$IdentityPreconditioner#NonLinearConjugateGradientOptimizer$IdentityPreconditioner()": 21473916.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer$IdentityPreconditioner#precondition(double[],double[])": 21483186.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer$LineSearchFunction#NonLinearConjugateGradientOptimizer$LineSearchFunction(org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer,double[],double[])": 21473916.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer$LineSearchFunction#value(double)": 21473916.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#AbstractSimplex(double[])": 21455382.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#AbstractSimplex(double[][])": 4604.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#AbstractSimplex(int)": 4618.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#AbstractSimplex(int,double)": 4604.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#build(double[])": 21409082.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#createHypercubeSteps(int,double)": 4604.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#evaluate(org.apache.commons.math3.analysis.MultivariateFunction,java.util.Comparator)": 21409082.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#getDimension()": 21409082.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#getPoint(int)": 21409082.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#getPoints()": 21409082.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#getSize()": 21409082.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#replaceWorstPoint(org.apache.commons.math3.optim.PointValuePair,java.util.Comparator)": 21436856.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#setPoint(int,org.apache.commons.math3.optim.PointValuePair)": 21529566.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#setPoints(org.apache.commons.math3.optim.PointValuePair[])": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#CMAESOptimizer(int,double,boolean,int,int,org.apache.commons.math3.random.RandomGenerator,boolean,org.apache.commons.math3.optim.ConvergenceChecker)": 21511008.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#checkParameters()": 21548132.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#copyColumn(org.apache.commons.math3.linear.RealMatrix,int,org.apache.commons.math3.linear.RealMatrix,int)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#diag(org.apache.commons.math3.linear.RealMatrix)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#divide(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#doOptimize()": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#eye(int,int)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#getStatisticsDHistory()": 4618.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#getStatisticsFitnessHistory()": 4618.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#getStatisticsMeanHistory()": 4618.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#getStatisticsSigmaHistory()": 4618.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#initializeCMA(double[])": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#inverse(int[])": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#log(org.apache.commons.math3.linear.RealMatrix)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#max(double[])": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#max(org.apache.commons.math3.linear.RealMatrix)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#min(double[])": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#min(org.apache.commons.math3.linear.RealMatrix)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#ones(int,int)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 21520286.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 21520286.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#push(double[],double)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#randn(int)": 4618.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#randn1(int,int)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#repmat(org.apache.commons.math3.linear.RealMatrix,int,int)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#reverse(int[])": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#selectColumns(org.apache.commons.math3.linear.RealMatrix,int[])": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#sequence(double,double,double)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#sortedIndices(double[])": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#sqrt(org.apache.commons.math3.linear.RealMatrix)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#square(org.apache.commons.math3.linear.RealMatrix)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#sumRows(org.apache.commons.math3.linear.RealMatrix)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#times(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#triu(org.apache.commons.math3.linear.RealMatrix,int)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#updateBD(double)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#updateCovariance(boolean,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix,int[],org.apache.commons.math3.linear.RealMatrix)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#updateCovarianceDiagonalOnly(boolean,org.apache.commons.math3.linear.RealMatrix)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#updateEvolutionPaths(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#zeros(int,int)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$DoubleIndex#CMAESOptimizer$DoubleIndex(double,int)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$DoubleIndex#compareTo(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$DoubleIndex#equals(java.lang.Object)": 4618.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$DoubleIndex#hashCode()": 4618.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$FitnessFunction#CMAESOptimizer$FitnessFunction(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$FitnessFunction#isFeasible(double[])": 4618.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$FitnessFunction#penalty(double[],double[])": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$FitnessFunction#repair(double[])": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$FitnessFunction#setValueRange(double)": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$FitnessFunction#value(double[])": 21566706.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$PopulationSize#CMAESOptimizer$PopulationSize(int)": 21520286.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$PopulationSize#getPopulationSize()": 21548132.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$Sigma#CMAESOptimizer$Sigma(double[])": 21511008.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$Sigma#getSigma()": 21548132.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$MultiDirectionalSimplex#MultiDirectionalSimplex(double[])": 21585288.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$MultiDirectionalSimplex#MultiDirectionalSimplex(double[],double,double)": 21585288.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$MultiDirectionalSimplex#MultiDirectionalSimplex(double[][])": 4616.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$MultiDirectionalSimplex#MultiDirectionalSimplex(double[][],double,double)": 4616.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$MultiDirectionalSimplex#MultiDirectionalSimplex(int)": 4614.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$MultiDirectionalSimplex#MultiDirectionalSimplex(int,double)": 4614.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$MultiDirectionalSimplex#MultiDirectionalSimplex(int,double,double)": 4618.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$MultiDirectionalSimplex#MultiDirectionalSimplex(int,double,double,double)": 4614.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$MultiDirectionalSimplex#evaluateNewSimplex(org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optim.PointValuePair[],double,java.util.Comparator)": 21557418.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$MultiDirectionalSimplex#iterate(org.apache.commons.math3.analysis.MultivariateFunction,java.util.Comparator)": 21557418.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$NelderMeadSimplex#NelderMeadSimplex(double[])": 21520286.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$NelderMeadSimplex#NelderMeadSimplex(double[],double,double,double,double)": 21520286.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$NelderMeadSimplex#NelderMeadSimplex(double[][])": 4606.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$NelderMeadSimplex#NelderMeadSimplex(double[][],double,double,double,double)": 4606.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$NelderMeadSimplex#NelderMeadSimplex(int)": 4608.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$NelderMeadSimplex#NelderMeadSimplex(int,double)": 4608.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$NelderMeadSimplex#NelderMeadSimplex(int,double,double,double,double)": 4618.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$NelderMeadSimplex#NelderMeadSimplex(int,double,double,double,double,double)": 4608.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$NelderMeadSimplex#iterate(org.apache.commons.math3.analysis.MultivariateFunction,java.util.Comparator)": 21436856.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer#<clinit>()": 21548132.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer#PowellOptimizer(double,double)": 21557418.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer#PowellOptimizer(double,double,double,double)": 21575996.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer#PowellOptimizer(double,double,double,double,org.apache.commons.math3.optim.ConvergenceChecker)": 21548132.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer#PowellOptimizer(double,double,org.apache.commons.math3.optim.ConvergenceChecker)": 21557418.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer#checkParameters()": 21548132.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer#doOptimize()": 21548132.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer#newPointAndDirection(double[],double[],double)": 21557418.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer$LineSearch#PowellOptimizer$LineSearch(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer,double,double)": 21548132.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer$LineSearch#search(double[],double[])": 21557418.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer$LineSearch$1#value(double)": 21557418.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$SimplexOptimizer#SimplexOptimizer(double,double)": 21418338.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$SimplexOptimizer#SimplexOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 21390576.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$SimplexOptimizer#checkParameters()": 21390576.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$SimplexOptimizer#doOptimize()": 21390576.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$SimplexOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 21390576.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$SimplexOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 21390576.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$SimplexOptimizer$1#value(double[])": 21409082.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$SimplexOptimizer$2#compare(org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair)": 21409082.0,
        "org.apache.commons.math3.optim.nonlinear.vector$JacobianMultivariateVectorOptimizer#JacobianMultivariateVectorOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 20675082.0,
        "org.apache.commons.math3.optim.nonlinear.vector$JacobianMultivariateVectorOptimizer#computeJacobian(double[])": 20757018.0,
        "org.apache.commons.math3.optim.nonlinear.vector$JacobianMultivariateVectorOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 20711478.0,
        "org.apache.commons.math3.optim.nonlinear.vector$JacobianMultivariateVectorOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 20711478.0,
        "org.apache.commons.math3.optim.nonlinear.vector$ModelFunction#ModelFunction(org.apache.commons.math3.analysis.MultivariateVectorFunction)": 20729688.0,
        "org.apache.commons.math3.optim.nonlinear.vector$ModelFunction#getModelFunction()": 20729688.0,
        "org.apache.commons.math3.optim.nonlinear.vector$ModelFunctionJacobian#ModelFunctionJacobian(org.apache.commons.math3.analysis.MultivariateMatrixFunction)": 20738796.0,
        "org.apache.commons.math3.optim.nonlinear.vector$ModelFunctionJacobian#getModelFunctionJacobian()": 20738796.0,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#MultivariateVectorOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 20675082.0,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#checkParameters()": 20711478.0,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#computeObjectiveValue(double[])": 20729688.0,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#getTarget()": 20720582.0,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#getTargetSize()": 4522.0,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#getWeight()": 20729688.0,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 20711478.0,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 20711478.0,
        "org.apache.commons.math3.optim.nonlinear.vector$Target#Target(double[])": 20711478.0,
        "org.apache.commons.math3.optim.nonlinear.vector$Target#getTarget()": 20711478.0,
        "org.apache.commons.math3.optim.nonlinear.vector$Weight#Weight(double[])": 20711478.0,
        "org.apache.commons.math3.optim.nonlinear.vector$Weight#Weight(org.apache.commons.math3.linear.RealMatrix)": 4618.0,
        "org.apache.commons.math3.optim.nonlinear.vector$Weight#getWeight()": 20711478.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#AbstractLeastSquaresOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 20675082.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#computeCost(double[])": 20802608.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#computeCovariances(double[],double)": 4602.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#computeResiduals(double[])": 20738796.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#computeSigma(double[],double)": 4610.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#computeWeightedJacobian(double[])": 20757018.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#getChiSquare()": 4516.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#getRMS()": 4522.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#getWeightSquareRoot()": 21022136.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 20711478.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 20711478.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#setCost(double)": 20802608.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#squareRoot(org.apache.commons.math3.linear.RealMatrix)": 20711478.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$GaussNewtonOptimizer#GaussNewtonOptimizer(boolean,org.apache.commons.math3.optim.ConvergenceChecker)": 21298166.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$GaussNewtonOptimizer#GaussNewtonOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 21372078.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$GaussNewtonOptimizer#checkParameters()": 21307398.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$GaussNewtonOptimizer#doOptimize()": 21307398.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer()": 21178332.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(double,double,double)": 4582.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(double,double,double,double,double)": 21003798.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(double,org.apache.commons.math3.optim.ConvergenceChecker,double,double,double,double)": 4614.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 4614.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#checkParameters()": 21012966.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#determineLMDirection(double[],double[],double[],double[])": 21344346.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#determineLMParameter(double[],double,double[],double[],double[],double[])": 21022136.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#doOptimize()": 21012966.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#qTy(double[])": 21022136.0,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#qrDecomposition(org.apache.commons.math3.linear.RealMatrix)": 21022136.0,
        "org.apache.commons.math3.optim.univariate$BracketFinder#BracketFinder()": 21511008.0,
        "org.apache.commons.math3.optim.univariate$BracketFinder#BracketFinder(double,int)": 21511008.0,
        "org.apache.commons.math3.optim.univariate$BracketFinder#eval(org.apache.commons.math3.analysis.UnivariateFunction,double)": 21520286.0,
        "org.apache.commons.math3.optim.univariate$BracketFinder#getEvaluations()": 4618.0,
        "org.apache.commons.math3.optim.univariate$BracketFinder#getFHi()": 4618.0,
        "org.apache.commons.math3.optim.univariate$BracketFinder#getFLo()": 4618.0,
        "org.apache.commons.math3.optim.univariate$BracketFinder#getFMid()": 4618.0,
        "org.apache.commons.math3.optim.univariate$BracketFinder#getHi()": 21520286.0,
        "org.apache.commons.math3.optim.univariate$BracketFinder#getLo()": 21520286.0,
        "org.apache.commons.math3.optim.univariate$BracketFinder#getMaxEvaluations()": 4618.0,
        "org.apache.commons.math3.optim.univariate$BracketFinder#getMid()": 21538848.0,
        "org.apache.commons.math3.optim.univariate$BracketFinder#search(org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optim.nonlinear.scalar.GoalType,double,double)": 21520286.0,
        "org.apache.commons.math3.optim.univariate$BrentOptimizer#<clinit>()": 21409082.0,
        "org.apache.commons.math3.optim.univariate$BrentOptimizer#BrentOptimizer(double,double)": 4590.0,
        "org.apache.commons.math3.optim.univariate$BrentOptimizer#BrentOptimizer(double,double,org.apache.commons.math3.optim.ConvergenceChecker)": 21409082.0,
        "org.apache.commons.math3.optim.univariate$BrentOptimizer#best(org.apache.commons.math3.optim.univariate.UnivariatePointValuePair,org.apache.commons.math3.optim.univariate.UnivariatePointValuePair,boolean)": 21446118.0,
        "org.apache.commons.math3.optim.univariate$BrentOptimizer#doOptimize()": 21436856.0,
        "org.apache.commons.math3.optim.univariate$SearchInterval#SearchInterval(double,double)": 4594.0,
        "org.apache.commons.math3.optim.univariate$SearchInterval#SearchInterval(double,double,double)": 21427596.0,
        "org.apache.commons.math3.optim.univariate$SearchInterval#getMax()": 21427596.0,
        "org.apache.commons.math3.optim.univariate$SearchInterval#getMin()": 21427596.0,
        "org.apache.commons.math3.optim.univariate$SearchInterval#getStartValue()": 21427596.0,
        "org.apache.commons.math3.optim.univariate$SimpleUnivariateValueChecker#SimpleUnivariateValueChecker(double,double)": 21529566.0,
        "org.apache.commons.math3.optim.univariate$SimpleUnivariateValueChecker#SimpleUnivariateValueChecker(double,double,int)": 4614.0,
        "org.apache.commons.math3.optim.univariate$SimpleUnivariateValueChecker#converged(int,org.apache.commons.math3.optim.univariate.UnivariatePointValuePair,org.apache.commons.math3.optim.univariate.UnivariatePointValuePair)": 21529566.0,
        "org.apache.commons.math3.optim.univariate$UnivariateObjectiveFunction#UnivariateObjectiveFunction(org.apache.commons.math3.analysis.UnivariateFunction)": 21418338.0,
        "org.apache.commons.math3.optim.univariate$UnivariateObjectiveFunction#getObjectiveFunction()": 21418338.0,
        "org.apache.commons.math3.optim.univariate$UnivariateOptimizer#UnivariateOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 21409082.0,
        "org.apache.commons.math3.optim.univariate$UnivariateOptimizer#computeObjectiveValue(double)": 21436856.0,
        "org.apache.commons.math3.optim.univariate$UnivariateOptimizer#getGoalType()": 21436856.0,
        "org.apache.commons.math3.optim.univariate$UnivariateOptimizer#getMax()": 21436856.0,
        "org.apache.commons.math3.optim.univariate$UnivariateOptimizer#getMin()": 21436856.0,
        "org.apache.commons.math3.optim.univariate$UnivariateOptimizer#getStartValue()": 21436856.0,
        "org.apache.commons.math3.optim.univariate$UnivariateOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 21418338.0,
        "org.apache.commons.math3.optim.univariate$UnivariateOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 21418338.0,
        "org.apache.commons.math3.optim.univariate$UnivariatePointValuePair#UnivariatePointValuePair(double,double)": 21436856.0,
        "org.apache.commons.math3.optim.univariate$UnivariatePointValuePair#getPoint()": 21446118.0,
        "org.apache.commons.math3.optim.univariate$UnivariatePointValuePair#getValue()": 21436856.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#BitsStreamGenerator()": 11804858.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#clear()": 11804858.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBoolean()": 4562.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBytes(byte[])": 4578.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextDouble()": 17994132.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextFloat()": 4562.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextGaussian()": 20738796.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt()": 4506.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt(int)": 4358.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong()": 4522.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong(long)": 4618.0,
        "org.apache.commons.math3.random$MersenneTwister#<clinit>()": 20276838.0,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister()": 21288936.0,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(int)": 4490.0,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(int[])": 4616.0,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(long)": 4524.0,
        "org.apache.commons.math3.random$MersenneTwister#next(int)": 20784366.0,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(int)": 20276838.0,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(int[])": 20711478.0,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(long)": 20720582.0,
        "org.apache.commons.math3.util$CompositeFormat#CompositeFormat()": 4618.0,
        "org.apache.commons.math3.util$CompositeFormat#formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)": 4430.0,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat()": 15310808.0,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat(java.util.Locale)": 12509232.0,
        "org.apache.commons.math3.util$CompositeFormat#parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)": 4398.0,
        "org.apache.commons.math3.util$CompositeFormat#parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)": 4402.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNextCharacter(java.lang.String,java.text.ParsePosition)": 4398.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,double,java.text.ParsePosition)": 4570.0,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)": 4408.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 1410236.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 4618.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 4600.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 6731946.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 4614.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 3958.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 13822568.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 4546.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 4608.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 4544.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 4608.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 21307398.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 20457378.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 4430.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 4608.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 4526.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 4018.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 4578.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 4614.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 18878696.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 18189816.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 4550.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 4434.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 3042.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 2550.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 4582.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 4538.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 3064.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 4460.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 4614.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 4470.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 14272388.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 4616.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 12516308.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 4506.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 3594.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 4618.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 14189382.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 4614.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 15760196.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 4594.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 17363382.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 4614.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 13964232.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 4526.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 4588.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 4612.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 4612.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 4616.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 17816388.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 17816388.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 3282.0,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 19580376.0,
        "org.apache.commons.math3.util$FastMath#random()": 4580.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4608.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 4474.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 4570.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 4616.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 4490.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 4614.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 4590.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 4614.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 18070578.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 18002618.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 4550.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 7571582.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 4558.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 4558.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 4588.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 4610.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 4610.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 18991848.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 4616.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double)": 18713928.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 18713928.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 18713928.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 18713928.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 2582.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 4618.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 2592.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 4618.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 12658248.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 4618.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 11811732.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 4618.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 2582.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 2582.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 2592.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 2592.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 12658248.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor()": 16312886.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int)": 15863598.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int,org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback)": 14401146.0,
        "org.apache.commons.math3.util$Incrementor#canIncrement()": 4614.0,
        "org.apache.commons.math3.util$Incrementor#getCount()": 19580376.0,
        "org.apache.commons.math3.util$Incrementor#getMaximalCount()": 21169128.0,
        "org.apache.commons.math3.util$Incrementor#incrementCount()": 14976096.0,
        "org.apache.commons.math3.util$Incrementor#incrementCount(int)": 4616.0,
        "org.apache.commons.math3.util$Incrementor#resetCount()": 14744766.0,
        "org.apache.commons.math3.util$Incrementor#setMaximalCount(int)": 14968356.0,
        "org.apache.commons.math3.util$Incrementor$1#trigger(int)": 4582.0,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 4618.0,
        "org.apache.commons.math3.util$MathArrays#buildArray(org.apache.commons.math3.Field,int)": 4352.0,
        "org.apache.commons.math3.util$MathArrays#buildArray(org.apache.commons.math3.Field,int,int)": 4356.0,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[])": 3810.0,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[][])": 4608.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 4520.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 4518.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 4326.0,
        "org.apache.commons.math3.util$MathArrays#checkPositive(double[])": 3828.0,
        "org.apache.commons.math3.util$MathArrays#checkRectangular(long[][])": 4608.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 21068016.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 20820858.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 4606.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": 21353588.0,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 4612.0,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 4604.0,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 4616.0,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 4616.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 4616.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 4616.0,
        "org.apache.commons.math3.util$MathArrays#ebeAdd(double[],double[])": 4614.0,
        "org.apache.commons.math3.util$MathArrays#ebeDivide(double[],double[])": 4600.0,
        "org.apache.commons.math3.util$MathArrays#ebeMultiply(double[],double[])": 4614.0,
        "org.apache.commons.math3.util$MathArrays#ebeSubtract(double[],double[])": 4614.0,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 4612.0,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 4618.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 4608.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 4618.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 4616.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 4616.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 4472.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 4468.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 4594.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": 4596.0,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": 4570.0,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 4618.0,
        "org.apache.commons.math3.util$MathArrays#scale(double,double[])": 4616.0,
        "org.apache.commons.math3.util$MathArrays#scaleInPlace(double,double[])": 4616.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 4600.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 4600.0,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 4602.0,
        "org.apache.commons.math3.util$MathArrays$2#<clinit>()": 4326.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 4316.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 4316.0,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 4618.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 4584.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 4616.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 12396288.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4444.0,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 4610.0,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 4610.0,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 4614.0,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 4614.0,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 4522.0,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 4542.0,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 4508.0,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 4608.0,
        "org.apache.commons.math3.util$Pair#Pair(java.lang.Object,java.lang.Object)": 17238582.0,
        "org.apache.commons.math3.util$Pair#Pair(org.apache.commons.math3.util.Pair)": 4618.0,
        "org.apache.commons.math3.util$Pair#equals(java.lang.Object)": 4616.0,
        "org.apache.commons.math3.util$Pair#getFirst()": 4432.0,
        "org.apache.commons.math3.util$Pair#getKey()": 18524046.0,
        "org.apache.commons.math3.util$Pair#getSecond()": 4432.0,
        "org.apache.commons.math3.util$Pair#getValue()": 19342128.0,
        "org.apache.commons.math3.util$Pair#hashCode()": 4616.0,
        "org.apache.commons.math3.util$Precision#<clinit>()": 11140908.0,
        "org.apache.commons.math3.util$Precision#Precision()": 4618.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 20839116.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 4516.0,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 19962818.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 17330058.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 14272388.0,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 4616.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 4618.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 4458.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 4348.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 4514.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 4616.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 4460.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 4618.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 4618.0,
        "org.apache.commons.math3.util$Precision#equalsWithRelativeTolerance(double,double,double)": 4616.0,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 4616.0,
        "org.apache.commons.math3.util$Precision#round(double,int)": 4616.0,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 4616.0,
        "org.apache.commons.math3.util$Precision#round(float,int)": 4616.0,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 4616.0,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 4616.0
    },
    "Math-7": {
        "org.apache.commons.math3.analysis.solvers$AbstractUnivariateSolver#AbstractUnivariateSolver(double)": 15507637.0,
        "org.apache.commons.math3.analysis.solvers$AbstractUnivariateSolver#AbstractUnivariateSolver(double,double)": 4121.0,
        "org.apache.commons.math3.analysis.solvers$AbstractUnivariateSolver#AbstractUnivariateSolver(double,double,double)": 4125.0,
        "org.apache.commons.math3.analysis.solvers$AllowedSolution#<clinit>()": 16638175.0,
        "org.apache.commons.math3.analysis.solvers$AllowedSolution#AllowedSolution(java.lang.String,int)": 16638175.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#BaseAbstractUnivariateSolver(double)": 15428967.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#BaseAbstractUnivariateSolver(double,double)": 4121.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#BaseAbstractUnivariateSolver(double,double,double)": 15334827.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#computeObjectiveValue(double)": 15428967.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getAbsoluteAccuracy()": 15531277.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getEvaluations()": 4047.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getFunctionValueAccuracy()": 15539161.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getMax()": 15436825.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getMaxEvaluations()": 4143.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getMin()": 15436825.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getRelativeAccuracy()": 15594405.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getStartValue()": 15768667.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#incrementEvaluationCount()": 15405405.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#isBracketing(double,double)": 4137.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#isSequence(double,double,double)": 4131.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#setup(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 15397555.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double)": 4133.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 15784557.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 15405405.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#verifyBracketing(double,double)": 4063.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#verifyInterval(double,double)": 4129.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#verifySequence(double,double,double)": 15800455.0,
        "org.apache.commons.math3.analysis.solvers$BracketingNthOrderBrentSolver#BracketingNthOrderBrentSolver()": 4127.0,
        "org.apache.commons.math3.analysis.solvers$BracketingNthOrderBrentSolver#BracketingNthOrderBrentSolver(double,double,double,int)": 4133.0,
        "org.apache.commons.math3.analysis.solvers$BracketingNthOrderBrentSolver#BracketingNthOrderBrentSolver(double,double,int)": 4139.0,
        "org.apache.commons.math3.analysis.solvers$BracketingNthOrderBrentSolver#BracketingNthOrderBrentSolver(double,int)": 16949661.0,
        "org.apache.commons.math3.analysis.solvers$BracketingNthOrderBrentSolver#doSolve()": 16949661.0,
        "org.apache.commons.math3.analysis.solvers$BracketingNthOrderBrentSolver#getMaximalOrder()": 4141.0,
        "org.apache.commons.math3.analysis.solvers$BracketingNthOrderBrentSolver#guessX(double,double[],double[],int,int)": 16966135.0,
        "org.apache.commons.math3.analysis.solvers$BracketingNthOrderBrentSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution)": 4139.0,
        "org.apache.commons.math3.analysis.solvers$BracketingNthOrderBrentSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution)": 17007355.0,
        "org.apache.commons.math3.analysis.solvers$BracketingNthOrderBrentSolver$1#<clinit>()": 17023857.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#UnivariateSolverUtils()": 4143.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 4133.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,int)": 4131.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#forceSide(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver,double,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution)": 4133.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#isBracketing(org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 4063.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#isSequence(double,double,double)": 4131.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#midpoint(double,double)": 4127.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#solve(org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 4135.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#solve(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 3945.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#verifyBracketing(org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 4063.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#verifyInterval(double,double)": 15162985.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#verifySequence(double,double,double)": 15768667.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 3793.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 3751.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 4137.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 4121.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4035.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 4143.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 4143.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 4141.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 2407.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 4125.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 4143.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 4139.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2729.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 4115.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 4013.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 4143.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3959.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 4021.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 4141.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 4143.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 4083.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 4083.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 4117.0,
        "org.apache.commons.math3.exception$NoBracketingException#NoBracketingException(double,double,double,double)": 4121.0,
        "org.apache.commons.math3.exception$NoBracketingException#NoBracketingException(org.apache.commons.math3.exception.util.Localizable,double,double,double,double,java.lang.Object[])": 4121.0,
        "org.apache.commons.math3.exception$NoBracketingException#getFHi()": 4143.0,
        "org.apache.commons.math3.exception$NoBracketingException#getFLo()": 4143.0,
        "org.apache.commons.math3.exception$NoBracketingException#getHi()": 4143.0,
        "org.apache.commons.math3.exception$NoBracketingException#getLo()": 4143.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 4125.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 4103.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 4045.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3981.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 4047.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3993.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 4069.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3849.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 4141.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 4141.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 3941.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3667.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 4137.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 4137.0,
        "org.apache.commons.math3.exception$TooManyEvaluationsException#TooManyEvaluationsException(java.lang.Number)": 4097.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#AbstractIntegrator()": 4143.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#AbstractIntegrator(java.lang.String)": 15824317.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double)": 16015861.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#addEventHandler(org.apache.commons.math3.ode.events.EventHandler,double,double,int)": 17032111.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#addEventHandler(org.apache.commons.math3.ode.events.EventHandler,double,double,int,org.apache.commons.math3.analysis.solvers.UnivariateSolver)": 16999107.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#addStepHandler(org.apache.commons.math3.ode.sampling.StepHandler)": 16136161.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#clearEventHandlers()": 4109.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#clearStepHandlers()": 4119.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#computeDerivatives(double,double[],double[])": 15959875.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#getCurrentSignedStepsize()": 4055.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#getCurrentStepStart()": 4103.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#getEvaluations()": 4125.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#getEventHandlers()": 4133.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#getMaxEvaluations()": 4143.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#getName()": 4103.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#getStepHandlers()": 4121.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#initIntegration(double,double[],double)": 15959875.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[])": 15888037.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double)": 15927927.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#setEquations(org.apache.commons.math3.ode.ExpandableStatefulODE)": 15959875.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#setMaxEvaluations(int)": 15824317.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#setStateInitialized(boolean)": 15959875.0,
        "org.apache.commons.math3.ode$AbstractIntegrator$1#compare(org.apache.commons.math3.ode.events.EventState,org.apache.commons.math3.ode.events.EventState)": 17032111.0,
        "org.apache.commons.math3.ode$EquationsMapper#EquationsMapper(int,int)": 15856161.0,
        "org.apache.commons.math3.ode$EquationsMapper#extractEquationData(double[],double[])": 15896011.0,
        "org.apache.commons.math3.ode$EquationsMapper#getDimension()": 15880065.0,
        "org.apache.commons.math3.ode$EquationsMapper#getFirstIndex()": 4135.0,
        "org.apache.commons.math3.ode$EquationsMapper#insertEquationData(double[],double[])": 15959875.0,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#ExpandableStatefulODE(org.apache.commons.math3.ode.FirstOrderDifferentialEquations)": 15927927.0,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#addSecondaryEquations(org.apache.commons.math3.ode.SecondaryEquations)": 4135.0,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#computeDerivatives(double,double[],double[])": 15959875.0,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#getCompleteState()": 15959875.0,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#getPrimary()": 4135.0,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#getPrimaryMapper()": 15951885.0,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#getPrimaryState()": 3871.0,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#getPrimaryStateDot()": 4143.0,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#getSecondaryMappers()": 15959875.0,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#getSecondaryState(int)": 4135.0,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#getSecondaryStateDot(int)": 4143.0,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#getTime()": 15927927.0,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#getTotalDimension()": 15959875.0,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#setCompleteState(double[])": 3867.0,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#setPrimaryState(double[])": 15927927.0,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#setSecondaryState(int,double[])": 4135.0,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#setTime(double)": 15927927.0,
        "org.apache.commons.math3.ode$ExpandableStatefulODE$SecondaryComponent#ExpandableStatefulODE$SecondaryComponent(org.apache.commons.math3.ode.SecondaryEquations,int)": 4135.0,
        "org.apache.commons.math3.ode.events$EventHandler$Action#<clinit>()": 16990861.0,
        "org.apache.commons.math3.ode.events$EventHandler$Action#EventHandler$Action(java.lang.String,int)": 16990861.0,
        "org.apache.commons.math3.ode.events$EventState#EventState(org.apache.commons.math3.ode.events.EventHandler,double,double,int,org.apache.commons.math3.analysis.solvers.UnivariateSolver)": 16990861.0,
        "org.apache.commons.math3.ode.events$EventState#evaluateStep(org.apache.commons.math3.ode.sampling.StepInterpolator)": 16990861.0,
        "org.apache.commons.math3.ode.events$EventState#getConvergence()": 4143.0,
        "org.apache.commons.math3.ode.events$EventState#getEventHandler()": 16999107.0,
        "org.apache.commons.math3.ode.events$EventState#getEventTime()": 17023857.0,
        "org.apache.commons.math3.ode.events$EventState#getMaxCheckInterval()": 4143.0,
        "org.apache.commons.math3.ode.events$EventState#getMaxIterationCount()": 4143.0,
        "org.apache.commons.math3.ode.events$EventState#reinitializeBegin(org.apache.commons.math3.ode.sampling.StepInterpolator)": 16990861.0,
        "org.apache.commons.math3.ode.events$EventState#reset(double,double[])": 17048625.0,
        "org.apache.commons.math3.ode.events$EventState#stepAccepted(double,double[])": 16990861.0,
        "org.apache.commons.math3.ode.events$EventState#stop()": 16999107.0,
        "org.apache.commons.math3.ode.events$EventState$1#value(double)": 17015605.0,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#AdaptiveStepsizeIntegrator(java.lang.String,double,double,double,double)": 16345747.0,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#AdaptiveStepsizeIntegrator(java.lang.String,double,double,double[],double[])": 4115.0,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#filterStep(double,boolean,boolean)": 16321495.0,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#getCurrentStepStart()": 4095.0,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#getMaxStep()": 16337661.0,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#getMinStep()": 16337661.0,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#initializeStep(boolean,int,double[],double,double[],double[],double[],double[])": 16313415.0,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#resetInternalState()": 16232725.0,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double)": 16281115.0,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#setInitialStepSize(double)": 4137.0,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#setStepSizeControl(double,double,double,double)": 16345747.0,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#setStepSizeControl(double,double,double[],double[])": 4115.0,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853Integrator#<clinit>()": 16900287.0,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853Integrator#DormandPrince853Integrator(double,double,double,double)": 16924965.0,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853Integrator#DormandPrince853Integrator(double,double,double[],double[])": 4137.0,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853Integrator#estimateError(double[][],double[],double[],double)": 16933195.0,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853Integrator#getOrder()": 16900287.0,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853StepInterpolator#<clinit>()": 16900287.0,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853StepInterpolator#DormandPrince853StepInterpolator()": 16900287.0,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853StepInterpolator#DormandPrince853StepInterpolator(org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator)": 16933195.0,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853StepInterpolator#computeInterpolatedStateAndDerivatives(double,double)": 16957897.0,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853StepInterpolator#doCopy()": 16933195.0,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853StepInterpolator#doFinalize()": 16933195.0,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853StepInterpolator#readExternal(java.io.ObjectInput)": 4141.0,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853StepInterpolator#reinitialize(org.apache.commons.math3.ode.AbstractIntegrator,double[],double[][],boolean,org.apache.commons.math3.ode.EquationsMapper,org.apache.commons.math3.ode.EquationsMapper[])": 16933195.0,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853StepInterpolator#storeTime(double)": 16933195.0,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853StepInterpolator#writeExternal(java.io.ObjectOutput)": 4141.0,
        "org.apache.commons.math3.ode.nonstiff$EmbeddedRungeKuttaIntegrator#EmbeddedRungeKuttaIntegrator(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double,double)": 16728045.0,
        "org.apache.commons.math3.ode.nonstiff$EmbeddedRungeKuttaIntegrator#EmbeddedRungeKuttaIntegrator(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double[],double[])": 4117.0,
        "org.apache.commons.math3.ode.nonstiff$EmbeddedRungeKuttaIntegrator#getMaxGrowth()": 4141.0,
        "org.apache.commons.math3.ode.nonstiff$EmbeddedRungeKuttaIntegrator#getMinReduction()": 4141.0,
        "org.apache.commons.math3.ode.nonstiff$EmbeddedRungeKuttaIntegrator#getSafety()": 4141.0,
        "org.apache.commons.math3.ode.nonstiff$EmbeddedRungeKuttaIntegrator#integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)": 16662661.0,
        "org.apache.commons.math3.ode.nonstiff$EmbeddedRungeKuttaIntegrator#setMaxGrowth(double)": 16621861.0,
        "org.apache.commons.math3.ode.nonstiff$EmbeddedRungeKuttaIntegrator#setMinReduction(double)": 16621861.0,
        "org.apache.commons.math3.ode.nonstiff$EmbeddedRungeKuttaIntegrator#setSafety(double)": 16621861.0,
        "org.apache.commons.math3.ode.nonstiff$RungeKuttaStepInterpolator#RungeKuttaStepInterpolator()": 16208557.0,
        "org.apache.commons.math3.ode.nonstiff$RungeKuttaStepInterpolator#RungeKuttaStepInterpolator(org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator)": 16329577.0,
        "org.apache.commons.math3.ode.nonstiff$RungeKuttaStepInterpolator#readExternal(java.io.ObjectInput)": 4127.0,
        "org.apache.commons.math3.ode.nonstiff$RungeKuttaStepInterpolator#reinitialize(org.apache.commons.math3.ode.AbstractIntegrator,double[],double[][],boolean,org.apache.commons.math3.ode.EquationsMapper,org.apache.commons.math3.ode.EquationsMapper[])": 16305337.0,
        "org.apache.commons.math3.ode.nonstiff$RungeKuttaStepInterpolator#shift()": 16305337.0,
        "org.apache.commons.math3.ode.nonstiff$RungeKuttaStepInterpolator#writeExternal(java.io.ObjectOutput)": 4127.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#AbstractStepInterpolator()": 16192455.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#AbstractStepInterpolator(double[],boolean,org.apache.commons.math3.ode.EquationsMapper,org.apache.commons.math3.ode.EquationsMapper[])": 4039.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#AbstractStepInterpolator(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator)": 16305337.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#allocateInterpolatedArrays(int)": 15800455.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#copy()": 16305337.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#doFinalize()": 3985.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#evaluateCompleteInterpolatedState()": 15951885.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#finalizeStep()": 16289187.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#getCurrentTime()": 16079965.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#getGlobalCurrentTime()": 16015861.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#getGlobalPreviousTime()": 16015861.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#getInterpolatedDerivatives()": 4035.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#getInterpolatedSecondaryDerivatives(int)": 4143.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#getInterpolatedSecondaryState(int)": 4143.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#getInterpolatedState()": 15951885.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#getInterpolatedTime()": 4035.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#getPreviousTime()": 16112065.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#isForward()": 15999855.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#readBaseExternal(java.io.ObjectInput)": 4121.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#reinitialize(double[],boolean,org.apache.commons.math3.ode.EquationsMapper,org.apache.commons.math3.ode.EquationsMapper[])": 16305337.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#setInterpolatedTime(double)": 15888037.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#setSoftCurrentTime(double)": 17032111.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#setSoftPreviousTime(double)": 17032111.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#shift()": 15888037.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#storeTime(double)": 15888037.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#writeBaseExternal(java.io.ObjectOutput)": 4119.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 438745.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 4143.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 4125.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": 4291111.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 4139.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 3483.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 10264675.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 4071.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 4133.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 4069.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 4133.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 4067.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 3881.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 3955.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 4133.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 4051.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 14806807.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 4103.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 4139.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 14653267.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 14039611.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 4075.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 3959.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 2567.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 9695965.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 4107.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 4063.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 11362867.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 3985.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 4139.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 3995.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 2375.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 4141.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 9143455.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 4031.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 3119.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 4143.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 10522635.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 4139.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 11943247.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 4119.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 13461085.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 4139.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 2289.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 4051.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 4113.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 4137.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 4137.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 4141.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 13711767.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 13711767.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 12109735.0,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 3701.0,
        "org.apache.commons.math3.util$FastMath#random()": 4105.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4133.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3999.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 4095.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 4141.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 4015.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 4139.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 4115.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 4139.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 13934877.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 13875205.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 4075.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 5002261.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 4083.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 4083.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 4113.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 4135.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 4135.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 14891595.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 4141.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double)": 3469.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 3469.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 3469.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 3469.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 9795885.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 4143.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 9827215.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 4143.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 9264835.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 4143.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 8542707.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 4143.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 9795885.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 9795885.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 9827215.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 9827215.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 9264835.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor()": 12523915.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int)": 12130627.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int,org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback)": 10698567.0,
        "org.apache.commons.math3.util$Incrementor#canIncrement()": 4139.0,
        "org.apache.commons.math3.util$Incrementor#getCount()": 3683.0,
        "org.apache.commons.math3.util$Incrementor#getMaximalCount()": 4051.0,
        "org.apache.commons.math3.util$Incrementor#incrementCount()": 11194917.0,
        "org.apache.commons.math3.util$Incrementor#incrementCount(int)": 4141.0,
        "org.apache.commons.math3.util$Incrementor#resetCount()": 10995027.0,
        "org.apache.commons.math3.util$Incrementor#setMaximalCount(int)": 11188225.0,
        "org.apache.commons.math3.util$Incrementor$1#trigger(int)": 4107.0,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 4143.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 4109.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 4141.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 9040911.0,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3969.0,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 4135.0,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 4135.0,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 4139.0,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 4139.0,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 4047.0,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 4067.0,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 4033.0,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 4133.0,
        "org.apache.commons.math3.util$Precision#<clinit>()": 7973655.0,
        "org.apache.commons.math3.util$Precision#Precision()": 4143.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 3951.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 4041.0,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 3783.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 3149.0,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 10652815.0,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 4141.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 4143.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 3983.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 3873.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 4039.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 4141.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 3985.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 4143.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 4143.0,
        "org.apache.commons.math3.util$Precision#equalsWithRelativeTolerance(double,double,double)": 4141.0,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 4141.0,
        "org.apache.commons.math3.util$Precision#round(double,int)": 4141.0,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 4141.0,
        "org.apache.commons.math3.util$Precision#round(float,int)": 4141.0,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 4141.0,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 4141.0
    },
    "Math-8": {
        "org.apache.commons.math3.distribution$AbstractRealDistribution#AbstractRealDistribution()": 2594.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#AbstractRealDistribution(org.apache.commons.math3.random.RandomGenerator)": 3747436.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#cumulativeProbability(double,double)": 2504.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#getSolverAbsoluteAccuracy()": 2590.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#inverseCumulativeProbability(double)": 2372.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#probability(double)": 2594.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#probability(double,double)": 2498.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#reseedRandomGenerator(long)": 2546.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#sample()": 2440.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#sample(int)": 2566.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution$1#value(double)": 2396.0,
        "org.apache.commons.math3.distribution$DiscreteDistribution#DiscreteDistribution(java.util.List)": 6734024.0,
        "org.apache.commons.math3.distribution$DiscreteDistribution#DiscreteDistribution(org.apache.commons.math3.random.RandomGenerator,java.util.List)": 6625454.0,
        "org.apache.commons.math3.distribution$DiscreteDistribution#getSamples()": 2570.0,
        "org.apache.commons.math3.distribution$DiscreteDistribution#probability(java.lang.Object)": 2588.0,
        "org.apache.commons.math3.distribution$DiscreteDistribution#reseedRandomGenerator(long)": 2594.0,
        "org.apache.commons.math3.distribution$DiscreteDistribution#sample()": 6723646.0,
        "org.apache.commons.math3.distribution$DiscreteDistribution#sample(int)": 6734024.0,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#DiscreteRealDistribution(double[],double[])": 6671876.0,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#DiscreteRealDistribution(org.apache.commons.math3.random.RandomGenerator,double[],double[])": 6671876.0,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#cumulativeProbability(double)": 2592.0,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#density(double)": 2592.0,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#getNumericalMean()": 2590.0,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#getNumericalVariance()": 2590.0,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#getSupportLowerBound()": 2592.0,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#getSupportUpperBound()": 2592.0,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#isSupportConnected()": 2592.0,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#isSupportLowerBoundInclusive()": 2592.0,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#isSupportUpperBoundInclusive()": 2592.0,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#probability(double)": 2590.0,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#sample()": 2592.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 2248.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 2206.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 2588.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 2572.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 2486.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 2594.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 2594.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 2592.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 902.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 2576.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 2594.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 2594.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 1214.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 2566.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 2464.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 2594.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 2410.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 2472.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 2592.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 2594.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 2592.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 2562.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 2592.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 2592.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 2592.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 2592.0,
        "org.apache.commons.math3.exception$NotANumberException#NotANumberException()": 2568.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 2580.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2558.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 2554.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 2570.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 2496.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 2432.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 2500.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 2446.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 2526.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 2330.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 2592.0,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 2592.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 2392.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 2118.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2588.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2588.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 2512.0,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 2204.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 2592.0,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 2592.0,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int)": 3586534.0,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,int)": 1842.0,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,int[])": 2288086.0,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,long)": 1136.0,
        "org.apache.commons.math3.random$AbstractWell#setSeed(int)": 2582.0,
        "org.apache.commons.math3.random$AbstractWell#setSeed(int[])": 2288086.0,
        "org.apache.commons.math3.random$AbstractWell#setSeed(long)": 2470160.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#BitsStreamGenerator()": 2006710.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#clear()": 2006710.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBoolean()": 2538.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBytes(byte[])": 2554.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextDouble()": 4321724.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextFloat()": 2538.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextGaussian()": 2378.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt()": 2522.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt(int)": 2520.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong()": 2538.0,
        "org.apache.commons.math3.random$RandomDataGenerator#RandomDataGenerator()": 2438810.0,
        "org.apache.commons.math3.random$RandomDataGenerator#RandomDataGenerator(org.apache.commons.math3.random.RandomGenerator)": 1376.0,
        "org.apache.commons.math3.random$RandomDataGenerator#getNatural(int)": 2546.0,
        "org.apache.commons.math3.random$RandomDataGenerator#getRan()": 1216.0,
        "org.apache.commons.math3.random$RandomDataGenerator#getSecRan()": 2558.0,
        "org.apache.commons.math3.random$RandomDataGenerator#initRan()": 1222.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextBeta(double,double)": 2572.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextBinomial(int,double)": 2572.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextCauchy(double,double)": 2572.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextChiSquare(double)": 2572.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextExponential(double)": 2568.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextF(double,double)": 2572.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextGamma(double,double)": 2572.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextGaussian(double,double)": 2554.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextHexString(int)": 2572.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextHypergeometric(int,int,int)": 2572.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextInt(int,int)": 2456.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextLong(long,long)": 2460.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPascal(int,double)": 2572.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPermutation(int,int)": 2546.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPoisson(double)": 2550.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSample(java.util.Collection,int)": 2570.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureHexString(int)": 2570.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureInt(int,int)": 2586.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureLong(long,long)": 2564.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextT(double)": 2572.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextUniform(double,double)": 2354.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextUniform(double,double,boolean)": 2354.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextWeibull(double,double)": 2572.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextZipf(int,double)": 2572.0,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeed()": 2572.0,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeed(long)": 1228.0,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeedSecure()": 2572.0,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeedSecure(long)": 2572.0,
        "org.apache.commons.math3.random$RandomDataGenerator#setSecureAlgorithm(java.lang.String,java.lang.String)": 2594.0,
        "org.apache.commons.math3.random$RandomDataGenerator#shuffle(int[],int)": 2546.0,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl()": 2438810.0,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl(org.apache.commons.math3.random.RandomGenerator)": 1378.0,
        "org.apache.commons.math3.random$RandomDataImpl#getDelegate()": 2588.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextBeta(double,double)": 2572.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextBinomial(int,double)": 2572.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextCauchy(double,double)": 2572.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextChiSquare(double)": 2572.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextExponential(double)": 2568.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextF(double,double)": 2572.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextGamma(double,double)": 2572.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextGaussian(double,double)": 2568.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextHexString(int)": 2572.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextHypergeometric(int,int,int)": 2572.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInt(int,int)": 2504.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.IntegerDistribution)": 2594.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.RealDistribution)": 2572.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextLong(long,long)": 2460.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextPascal(int,double)": 2572.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextPermutation(int,int)": 2570.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextPoisson(double)": 2550.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSample(java.util.Collection,int)": 2570.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureHexString(int)": 2570.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureInt(int,int)": 2586.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureLong(long,long)": 2564.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextT(double)": 2572.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double)": 2370.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double,boolean)": 2594.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextWeibull(double,double)": 2572.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextZipf(int,double)": 2572.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed()": 2572.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed(long)": 1240.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure()": 2572.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure(long)": 2572.0,
        "org.apache.commons.math3.random$RandomDataImpl#setSecureAlgorithm(java.lang.String,java.lang.String)": 2594.0,
        "org.apache.commons.math3.random$Well19937c#Well19937c()": 3586534.0,
        "org.apache.commons.math3.random$Well19937c#Well19937c(int)": 2442.0,
        "org.apache.commons.math3.random$Well19937c#Well19937c(int[])": 2592.0,
        "org.apache.commons.math3.random$Well19937c#Well19937c(long)": 1222.0,
        "org.apache.commons.math3.random$Well19937c#next(int)": 5943686.0,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 2594.0,
        "org.apache.commons.math3.util$MathArrays#buildArray(org.apache.commons.math3.Field,int)": 2328.0,
        "org.apache.commons.math3.util$MathArrays#buildArray(org.apache.commons.math3.Field,int,int)": 2332.0,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[])": 1832.0,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[][])": 2584.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 2496.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 2494.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 2304.0,
        "org.apache.commons.math3.util$MathArrays#checkPositive(double[])": 1850.0,
        "org.apache.commons.math3.util$MathArrays#checkRectangular(long[][])": 2584.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 2482.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 2428.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 2582.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": 2512.0,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 2588.0,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 2580.0,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 2592.0,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 2592.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 2592.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 2592.0,
        "org.apache.commons.math3.util$MathArrays#ebeAdd(double[],double[])": 2590.0,
        "org.apache.commons.math3.util$MathArrays#ebeDivide(double[],double[])": 2576.0,
        "org.apache.commons.math3.util$MathArrays#ebeMultiply(double[],double[])": 2590.0,
        "org.apache.commons.math3.util$MathArrays#ebeSubtract(double[],double[])": 2590.0,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 2588.0,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 2594.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 2584.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 2594.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 2592.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 2592.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 2448.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 2444.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 2570.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": 2572.0,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": 6615160.0,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 2594.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 2576.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 2576.0,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 2578.0,
        "org.apache.commons.math3.util$MathArrays$2#<clinit>()": 2304.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 2294.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 2294.0,
        "org.apache.commons.math3.util$Pair#Pair(java.lang.Object,java.lang.Object)": 4313410.0,
        "org.apache.commons.math3.util$Pair#Pair(org.apache.commons.math3.util.Pair)": 2594.0,
        "org.apache.commons.math3.util$Pair#equals(java.lang.Object)": 2592.0,
        "org.apache.commons.math3.util$Pair#getFirst()": 2410.0,
        "org.apache.commons.math3.util$Pair#getKey()": 4963616.0,
        "org.apache.commons.math3.util$Pair#getSecond()": 2410.0,
        "org.apache.commons.math3.util$Pair#getValue()": 5391410.0,
        "org.apache.commons.math3.util$Pair#hashCode()": 2592.0
    },
    "Math-9": {
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 3642.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 3600.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 3978.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 3962.0,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3880.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 3984.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 3984.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 3982.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 2296.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 3966.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 3984.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 3984.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 2610.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 3956.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 3856.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3984.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3802.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 3864.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 3982.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 3984.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 3982.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3952.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 3982.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 3982.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 3982.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 3982.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 3948.0,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3960.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 3888.0,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 3822.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 3890.0,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3836.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 3788.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 3514.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 3978.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 3978.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#Line(org.apache.commons.math3.geometry.euclidean.threed.Line)": 3984.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#Line(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 15673654.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#closestPoint(org.apache.commons.math3.geometry.euclidean.threed.Line)": 3968.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#contains(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3962.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#distance(org.apache.commons.math3.geometry.euclidean.threed.Line)": 3982.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3958.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#getAbscissa(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3970.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#getDirection()": 15808566.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#getOrigin()": 3984.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#intersection(org.apache.commons.math3.geometry.euclidean.threed.Line)": 3970.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#isSimilarTo(org.apache.commons.math3.geometry.euclidean.threed.Line)": 3982.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#pointAt(double)": 3960.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 15673654.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#revert()": 15880224.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#toSpace(org.apache.commons.math3.geometry.Vector)": 3960.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#toSubSpace(org.apache.commons.math3.geometry.Vector)": 3970.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#wholeLine()": 3982.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#<clinit>()": 14622814.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,double)": 3982.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,double,double)": 14622814.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 15594564.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 15634084.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3968.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3982.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double[])": 3974.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#add(double,org.apache.commons.math3.geometry.Vector)": 3982.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#add(org.apache.commons.math3.geometry.Vector)": 3950.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#angle(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3974.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#crossProduct(org.apache.commons.math3.geometry.Vector)": 3922.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3930.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance(org.apache.commons.math3.geometry.Vector)": 3954.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3980.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance1(org.apache.commons.math3.geometry.Vector)": 3982.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3982.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceInf(org.apache.commons.math3.geometry.Vector)": 3982.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3982.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceSq(org.apache.commons.math3.geometry.Vector)": 3982.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3982.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#dotProduct(org.apache.commons.math3.geometry.Vector)": 15507796.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#dotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3970.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#equals(java.lang.Object)": 3930.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getAlpha()": 3978.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getDelta()": 3982.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNorm()": 3866.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNorm1()": 3980.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNormInf()": 3980.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNormSq()": 15665736.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getSpace()": 3982.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getX()": 3816.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getY()": 3816.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getZ()": 3814.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getZero()": 3982.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#hashCode()": 3982.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#isInfinite()": 3982.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#isNaN()": 3924.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#negate()": 15856320.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#normalize()": 3974.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#orthogonal()": 3942.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#scalarMultiply(double)": 3966.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#subtract(double,org.apache.commons.math3.geometry.Vector)": 3982.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#subtract(org.apache.commons.math3.geometry.Vector)": 15523554.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#toArray()": 15872254.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#toString()": 3982.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#toString(java.text.NumberFormat)": 3982.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 285996.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 3984.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 3966.0,
        "org.apache.commons.math3.util$FastMath#abs(double)": -102.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3980.0,
        "org.apache.commons.math3.util$FastMath#abs(int)": 3324.0,
        "org.apache.commons.math3.util$FastMath#abs(long)": 2126.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 3912.0,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 3974.0,
        "org.apache.commons.math3.util$FastMath#asin(double)": 3910.0,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 3974.0,
        "org.apache.commons.math3.util$FastMath#atan(double)": 3908.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 3724.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 3798.0,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 3974.0,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 3892.0,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 3396.0,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 3944.0,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 3980.0,
        "org.apache.commons.math3.util$FastMath#cos(double)": 3352.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 3192.0,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 3916.0,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 3802.0,
        "org.apache.commons.math3.util$FastMath#exp(double)": 2454.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 1968.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 3948.0,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 3904.0,
        "org.apache.commons.math3.util$FastMath#floor(double)": 2356.0,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 3824.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 3980.0,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 3836.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 2248.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 3982.0,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1774.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 3868.0,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 3018.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 3984.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 2204.0,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 3980.0,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 2642.0,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 3982.0,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 3040.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 3980.0,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 2188.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 3914.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 3954.0,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 3978.0,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 3978.0,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 3982.0,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 3102.0,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 3102.0,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 2704.0,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 3546.0,
        "org.apache.commons.math3.util$FastMath#random()": 3946.0,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 3974.0,
        "org.apache.commons.math3.util$FastMath#rint(double)": 3842.0,
        "org.apache.commons.math3.util$FastMath#round(double)": 3936.0,
        "org.apache.commons.math3.util$FastMath#round(float)": 3982.0,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 3854.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 3980.0,
        "org.apache.commons.math3.util$FastMath#signum(double)": 3956.0,
        "org.apache.commons.math3.util$FastMath#signum(float)": 3980.0,
        "org.apache.commons.math3.util$FastMath#sin(double)": 3162.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 3146.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 3916.0,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 4450224.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 3924.0,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 3924.0,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 3954.0,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3976.0,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3976.0,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 3414.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 3982.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double)": 3316.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 3316.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 3316.0,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 3316.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 1996.0,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 3984.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 2008.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 3984.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1804.0,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 3984.0,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 3984.0,
        "org.apache.commons.math3.util$MathArrays#buildArray(org.apache.commons.math3.Field,int)": 3718.0,
        "org.apache.commons.math3.util$MathArrays#buildArray(org.apache.commons.math3.Field,int,int)": 3722.0,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[])": 3222.0,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[][])": 3974.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 3886.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3884.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 3694.0,
        "org.apache.commons.math3.util$MathArrays#checkPositive(double[])": 3240.0,
        "org.apache.commons.math3.util$MathArrays#checkRectangular(long[][])": 3974.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 3872.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 3818.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 3972.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": 3902.0,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 3978.0,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 3970.0,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 3982.0,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 3982.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 3982.0,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 3982.0,
        "org.apache.commons.math3.util$MathArrays#ebeAdd(double[],double[])": 3980.0,
        "org.apache.commons.math3.util$MathArrays#ebeDivide(double[],double[])": 3966.0,
        "org.apache.commons.math3.util$MathArrays#ebeMultiply(double[],double[])": 3980.0,
        "org.apache.commons.math3.util$MathArrays#ebeSubtract(double[],double[])": 3980.0,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 3978.0,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 3984.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 3974.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 3984.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3982.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 3982.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 15311496.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 15295846.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 3960.0,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": 3962.0,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": 3980.0,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 3984.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 3966.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 3966.0,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 3968.0,
        "org.apache.commons.math3.util$MathArrays$2#<clinit>()": 3694.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 3684.0,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 3684.0
    },
    "Time-1": {},
    "Time-10": {},
    "Time-11": {},
    "Time-12": {},
    "Time-13": {},
    "Time-14": {},
    "Time-15": {},
    "Time-17": {},
    "Time-18": {},
    "Time-19": {},
    "Time-2": {},
    "Time-20": {},
    "Time-3": {},
    "Time-4": {},
    "Time-6": {},
    "Time-7": {},
    "Time-8": {},
    "Time-9": {}
}