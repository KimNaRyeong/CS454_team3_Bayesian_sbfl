{
    "Chart-1": {
        "org.jfree.chart$ChartColor#<clinit>()": 259.3225806451613,
        "org.jfree.chart$ChartColor#ChartColor(int,int,int)": 0.0,
        "org.jfree.chart$ChartColor#createDefaultPaintArray()": 259.3225806451613,
        "org.jfree.chart$LegendItem#<clinit>()": 49.40625,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String)": 2.90625,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.awt.Paint)": 5.8125,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)": 48.4375,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint)": 19.375,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)": 6.78125,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Stroke,java.awt.Paint)": 0.96875,
        "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)": 0.96875,
        "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint)": 0.96875,
        "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart$LegendItem#characterIteratorToString(java.text.CharacterIterator)": 0.96875,
        "org.jfree.chart$LegendItem#clone()": 1.9375,
        "org.jfree.chart$LegendItem#equals(java.lang.Object)": 7.75,
        "org.jfree.chart$LegendItem#getAttributedLabel()": 0.0,
        "org.jfree.chart$LegendItem#getDataset()": 23.25,
        "org.jfree.chart$LegendItem#getDatasetIndex()": 15.5,
        "org.jfree.chart$LegendItem#getDescription()": 0.0,
        "org.jfree.chart$LegendItem#getFillPaint()": 21.3125,
        "org.jfree.chart$LegendItem#getFillPaintTransformer()": 21.3125,
        "org.jfree.chart$LegendItem#getLabel()": 36.8125,
        "org.jfree.chart$LegendItem#getLabelFont()": 21.3125,
        "org.jfree.chart$LegendItem#getLabelPaint()": 21.3125,
        "org.jfree.chart$LegendItem#getLine()": 21.3125,
        "org.jfree.chart$LegendItem#getLinePaint()": 21.3125,
        "org.jfree.chart$LegendItem#getLineStroke()": 21.3125,
        "org.jfree.chart$LegendItem#getOutlinePaint()": 21.3125,
        "org.jfree.chart$LegendItem#getOutlineStroke()": 21.3125,
        "org.jfree.chart$LegendItem#getSeriesIndex()": 15.5,
        "org.jfree.chart$LegendItem#getSeriesKey()": 22.28125,
        "org.jfree.chart$LegendItem#getShape()": 22.28125,
        "org.jfree.chart$LegendItem#getToolTipText()": 21.3125,
        "org.jfree.chart$LegendItem#getURLText()": 21.3125,
        "org.jfree.chart$LegendItem#isLineVisible()": 21.3125,
        "org.jfree.chart$LegendItem#isShapeFilled()": 21.3125,
        "org.jfree.chart$LegendItem#isShapeOutlineVisible()": 21.3125,
        "org.jfree.chart$LegendItem#isShapeVisible()": 21.3125,
        "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)": 2.90625,
        "org.jfree.chart$LegendItem#setDataset(org.jfree.data.general.Dataset)": 40.6875,
        "org.jfree.chart$LegendItem#setDatasetIndex(int)": 35.84375,
        "org.jfree.chart$LegendItem#setDescription(java.lang.String)": 0.0,
        "org.jfree.chart$LegendItem#setFillPaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart$LegendItem#setFillPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)": 4.84375,
        "org.jfree.chart$LegendItem#setLabelFont(java.awt.Font)": 36.8125,
        "org.jfree.chart$LegendItem#setLabelPaint(java.awt.Paint)": 1.9375,
        "org.jfree.chart$LegendItem#setLine(java.awt.Shape)": 0.0,
        "org.jfree.chart$LegendItem#setLinePaint(java.awt.Paint)": 1.9375,
        "org.jfree.chart$LegendItem#setLineVisible(boolean)": 0.0,
        "org.jfree.chart$LegendItem#setOutlinePaint(java.awt.Paint)": 4.84375,
        "org.jfree.chart$LegendItem#setOutlineStroke(java.awt.Stroke)": 2.90625,
        "org.jfree.chart$LegendItem#setSeriesIndex(int)": 39.71875,
        "org.jfree.chart$LegendItem#setSeriesKey(java.lang.Comparable)": 39.71875,
        "org.jfree.chart$LegendItem#setShape(java.awt.Shape)": 0.0,
        "org.jfree.chart$LegendItem#setShapeVisible(boolean)": 0.0,
        "org.jfree.chart$LegendItem#setToolTipText(java.lang.String)": 2.90625,
        "org.jfree.chart$LegendItem#setURLText(java.lang.String)": 2.90625,
        "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)": 2.90625,
        "org.jfree.chart$LegendItemCollection#LegendItemCollection()": 44.483870967741936,
        "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)": 29.0625,
        "org.jfree.chart$LegendItemCollection#addAll(org.jfree.chart.LegendItemCollection)": 37.78125,
        "org.jfree.chart$LegendItemCollection#clone()": 2.90625,
        "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)": 6.78125,
        "org.jfree.chart$LegendItemCollection#get(int)": 22.28125,
        "org.jfree.chart$LegendItemCollection#getItemCount()": 37.70967741935483,
        "org.jfree.chart$LegendItemCollection#iterator()": 0.0,
        "org.jfree.chart.axis$Axis#<clinit>()": 301.28125,
        "org.jfree.chart.axis$Axis#Axis(java.lang.String)": 279.96875,
        "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)": 204.40625,
        "org.jfree.chart.axis$Axis#clone()": 25.1875,
        "org.jfree.chart.axis$Axis#createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 50.375,
        "org.jfree.chart.axis$Axis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 34.875,
        "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)": 52.3125,
        "org.jfree.chart.axis$Axis#equals(java.lang.Object)": 91.0625,
        "org.jfree.chart.axis$Axis#fireChangeEvent()": 109.46875,
        "org.jfree.chart.axis$Axis#getAxisLinePaint()": 52.3125,
        "org.jfree.chart.axis$Axis#getAxisLineStroke()": 52.3125,
        "org.jfree.chart.axis$Axis#getFixedDimension()": 62.96875,
        "org.jfree.chart.axis$Axis#getLabel()": 71.6875,
        "org.jfree.chart.axis$Axis#getLabelAngle()": 62.96875,
        "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)": 62.96875,
        "org.jfree.chart.axis$Axis#getLabelFont()": 62.96875,
        "org.jfree.chart.axis$Axis#getLabelInsets()": 62.96875,
        "org.jfree.chart.axis$Axis#getLabelPaint()": 52.3125,
        "org.jfree.chart.axis$Axis#getLabelToolTip()": 0.0,
        "org.jfree.chart.axis$Axis#getLabelURL()": 0.0,
        "org.jfree.chart.axis$Axis#getMinorTickMarkInsideLength()": 0.0,
        "org.jfree.chart.axis$Axis#getMinorTickMarkOutsideLength()": 0.0,
        "org.jfree.chart.axis$Axis#getPlot()": 233.46875,
        "org.jfree.chart.axis$Axis#getTickLabelFont()": 63.9375,
        "org.jfree.chart.axis$Axis#getTickLabelInsets()": 62.96875,
        "org.jfree.chart.axis$Axis#getTickLabelPaint()": 55.21875,
        "org.jfree.chart.axis$Axis#getTickMarkInsideLength()": 52.3125,
        "org.jfree.chart.axis$Axis#getTickMarkOutsideLength()": 52.3125,
        "org.jfree.chart.axis$Axis#getTickMarkPaint()": 52.3125,
        "org.jfree.chart.axis$Axis#getTickMarkStroke()": 52.3125,
        "org.jfree.chart.axis$Axis#hasListener(java.util.EventListener)": 1.9375,
        "org.jfree.chart.axis$Axis#isAxisLineVisible()": 52.3125,
        "org.jfree.chart.axis$Axis#isMinorTickMarksVisible()": 44.5625,
        "org.jfree.chart.axis$Axis#isTickLabelsVisible()": 62.96875,
        "org.jfree.chart.axis$Axis#isTickMarksVisible()": 54.25,
        "org.jfree.chart.axis$Axis#isVisible()": 62.96875,
        "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)": 181.15625,
        "org.jfree.chart.axis$Axis#readObject(java.io.ObjectInputStream)": 31.96875,
        "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)": 20.34375,
        "org.jfree.chart.axis$Axis#setAxisLinePaint(java.awt.Paint)": 2.90625,
        "org.jfree.chart.axis$Axis#setAxisLineStroke(java.awt.Stroke)": 1.9375,
        "org.jfree.chart.axis$Axis#setAxisLineVisible(boolean)": 5.8125,
        "org.jfree.chart.axis$Axis#setFixedDimension(double)": 0.96875,
        "org.jfree.chart.axis$Axis#setLabel(java.lang.String)": 3.875,
        "org.jfree.chart.axis$Axis#setLabelAngle(double)": 0.96875,
        "org.jfree.chart.axis$Axis#setLabelFont(java.awt.Font)": 100.75,
        "org.jfree.chart.axis$Axis#setLabelInsets(org.jfree.chart.util.RectangleInsets)": 0.96875,
        "org.jfree.chart.axis$Axis#setLabelInsets(org.jfree.chart.util.RectangleInsets,boolean)": 0.96875,
        "org.jfree.chart.axis$Axis#setLabelPaint(java.awt.Paint)": 100.75,
        "org.jfree.chart.axis$Axis#setLabelToolTip(java.lang.String)": 0.96875,
        "org.jfree.chart.axis$Axis#setLabelURL(java.lang.String)": 0.96875,
        "org.jfree.chart.axis$Axis#setMinorTickMarkInsideLength(float)": 0.96875,
        "org.jfree.chart.axis$Axis#setMinorTickMarkOutsideLength(float)": 0.96875,
        "org.jfree.chart.axis$Axis#setMinorTickMarksVisible(boolean)": 0.96875,
        "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)": 199.5625,
        "org.jfree.chart.axis$Axis#setTickLabelFont(java.awt.Font)": 100.75,
        "org.jfree.chart.axis$Axis#setTickLabelInsets(org.jfree.chart.util.RectangleInsets)": 0.96875,
        "org.jfree.chart.axis$Axis#setTickLabelPaint(java.awt.Paint)": 100.75,
        "org.jfree.chart.axis$Axis#setTickLabelsVisible(boolean)": 0.96875,
        "org.jfree.chart.axis$Axis#setTickMarkInsideLength(float)": 0.96875,
        "org.jfree.chart.axis$Axis#setTickMarkOutsideLength(float)": 0.96875,
        "org.jfree.chart.axis$Axis#setTickMarkPaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.axis$Axis#setTickMarkStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.axis$Axis#setTickMarksVisible(boolean)": 0.96875,
        "org.jfree.chart.axis$Axis#setVisible(boolean)": 0.96875,
        "org.jfree.chart.axis$Axis#writeObject(java.io.ObjectOutputStream)": 31.96875,
        "org.jfree.chart.axis$AxisLocation#<clinit>()": 193.51612903225808,
        "org.jfree.chart.axis$AxisLocation#AxisLocation(java.lang.String)": 193.51612903225808,
        "org.jfree.chart.axis$AxisLocation#equals(java.lang.Object)": 26.15625,
        "org.jfree.chart.axis$AxisLocation#getOpposite()": 0.0,
        "org.jfree.chart.axis$AxisLocation#getOpposite(org.jfree.chart.axis.AxisLocation)": 0.0,
        "org.jfree.chart.axis$AxisLocation#readResolve()": 18.40625,
        "org.jfree.chart.axis$AxisLocation#toString()": 22.28125,
        "org.jfree.chart.axis$CategoryAnchor#<clinit>()": 95.7741935483871,
        "org.jfree.chart.axis$CategoryAnchor#CategoryAnchor(java.lang.String)": 95.7741935483871,
        "org.jfree.chart.axis$CategoryAnchor#equals(java.lang.Object)": 22.28125,
        "org.jfree.chart.axis$CategoryAnchor#readResolve()": 10.65625,
        "org.jfree.chart.axis$CategoryAnchor#toString()": 12.59375,
        "org.jfree.chart.axis$CategoryAxis#CategoryAxis()": 0.96875,
        "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)": 118.1875,
        "org.jfree.chart.axis$CategoryAxis#addCategoryLabelToolTip(java.lang.Comparable,java.lang.String)": 2.90625,
        "org.jfree.chart.axis$CategoryAxis#calculateCategoryGapSize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 30.03125,
        "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 36.8125,
        "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)": 29.0625,
        "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)": 3.875,
        "org.jfree.chart.axis$CategoryAxis#clearCategoryLabelToolTips()": 0.0,
        "org.jfree.chart.axis$CategoryAxis#clone()": 8.71875,
        "org.jfree.chart.axis$CategoryAxis#configure()": 99.78125,
        "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)": 32.9375,
        "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 31.96875,
        "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)": 34.875,
        "org.jfree.chart.axis$CategoryAxis#drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState)": 33.90625,
        "org.jfree.chart.axis$CategoryAxis#equalPaintMaps(java.util.Map,java.util.Map)": 30.03125,
        "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)": 31.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 30.03125,
        "org.jfree.chart.axis$CategoryAxis#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1.9375,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelPositionOffset()": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelPositions()": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelToolTip(java.lang.Comparable)": 9.6875,
        "org.jfree.chart.axis$CategoryAxis#getCategoryMargin()": 19.375,
        "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 30.03125,
        "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(java.lang.Comparable,java.util.List,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 30.03125,
        "org.jfree.chart.axis$CategoryAxis#getCategorySeriesMiddle(int,int,int,int,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getCategorySeriesMiddle(java.lang.Comparable,java.lang.Comparable,org.jfree.data.category.CategoryDataset,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1.9375,
        "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 30.03125,
        "org.jfree.chart.axis$CategoryAxis#getLowerMargin()": 36.8125,
        "org.jfree.chart.axis$CategoryAxis#getMaximumCategoryLabelLines()": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getMaximumCategoryLabelWidthRatio()": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getTickLabelFont(java.lang.Comparable)": 32.9375,
        "org.jfree.chart.axis$CategoryAxis#getTickLabelPaint(java.lang.Comparable)": 32.9375,
        "org.jfree.chart.axis$CategoryAxis#getUpperMargin()": 36.8125,
        "org.jfree.chart.axis$CategoryAxis#hashCode()": 38.75,
        "org.jfree.chart.axis$CategoryAxis#readObject(java.io.ObjectInputStream)": 11.625,
        "org.jfree.chart.axis$CategoryAxis#readPaintMap(java.io.ObjectInputStream)": 11.625,
        "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 37.78125,
        "org.jfree.chart.axis$CategoryAxis#removeCategoryLabelToolTip(java.lang.Comparable)": 0.0,
        "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)": 37.78125,
        "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositionOffset(int)": 0.96875,
        "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositions(org.jfree.chart.axis.CategoryLabelPositions)": 0.96875,
        "org.jfree.chart.axis$CategoryAxis#setCategoryMargin(double)": 11.625,
        "org.jfree.chart.axis$CategoryAxis#setLowerMargin(double)": 0.96875,
        "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelLines(int)": 0.0,
        "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelWidthRatio(float)": 0.96875,
        "org.jfree.chart.axis$CategoryAxis#setTickLabelFont(java.lang.Comparable,java.awt.Font)": 2.90625,
        "org.jfree.chart.axis$CategoryAxis#setTickLabelPaint(java.lang.Comparable,java.awt.Paint)": 3.875,
        "org.jfree.chart.axis$CategoryAxis#setUpperMargin(double)": 0.96875,
        "org.jfree.chart.axis$CategoryAxis#writeObject(java.io.ObjectOutputStream)": 11.625,
        "org.jfree.chart.axis$CategoryAxis#writePaintMap(java.util.Map,java.io.ObjectOutputStream)": 11.625,
        "org.jfree.chart.axis$ValueAxis#<clinit>()": 281.90625,
        "org.jfree.chart.axis$ValueAxis#ValueAxis(java.lang.String,org.jfree.chart.axis.TickUnitSource)": 260.59375,
        "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 52.3125,
        "org.jfree.chart.axis$ValueAxis#centerRange(double)": 0.0,
        "org.jfree.chart.axis$ValueAxis#clone()": 18.40625,
        "org.jfree.chart.axis$ValueAxis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 52.3125,
        "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 52.3125,
        "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)": 72.65625,
        "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 30.03125,
        "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 58.125,
        "org.jfree.chart.axis$ValueAxis#getAutoRangeMinimumSize()": 198.59375,
        "org.jfree.chart.axis$ValueAxis#getAutoTickIndex()": 0.0,
        "org.jfree.chart.axis$ValueAxis#getDefaultAutoRange()": 66.84375,
        "org.jfree.chart.axis$ValueAxis#getDownArrow()": 0.0,
        "org.jfree.chart.axis$ValueAxis#getFixedAutoRange()": 198.59375,
        "org.jfree.chart.axis$ValueAxis#getLeftArrow()": 0.0,
        "org.jfree.chart.axis$ValueAxis#getLowerBound()": 47.46875,
        "org.jfree.chart.axis$ValueAxis#getLowerMargin()": 198.59375,
        "org.jfree.chart.axis$ValueAxis#getMinorTickCount()": 63.9375,
        "org.jfree.chart.axis$ValueAxis#getRange()": 135.625,
        "org.jfree.chart.axis$ValueAxis#getRightArrow()": 0.0,
        "org.jfree.chart.axis$ValueAxis#getStandardTickUnits()": 62.96875,
        "org.jfree.chart.axis$ValueAxis#getUpArrow()": 0.0,
        "org.jfree.chart.axis$ValueAxis#getUpperBound()": 47.46875,
        "org.jfree.chart.axis$ValueAxis#getUpperMargin()": 198.59375,
        "org.jfree.chart.axis$ValueAxis#isAutoRange()": 212.15625,
        "org.jfree.chart.axis$ValueAxis#isAutoTickUnitSelection()": 63.9375,
        "org.jfree.chart.axis$ValueAxis#isInverted()": 68.78125,
        "org.jfree.chart.axis$ValueAxis#isNegativeArrowVisible()": 0.0,
        "org.jfree.chart.axis$ValueAxis#isPositiveArrowVisible()": 0.0,
        "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()": 63.9375,
        "org.jfree.chart.axis$ValueAxis#lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 61.03125,
        "org.jfree.chart.axis$ValueAxis#pan(double)": 0.0,
        "org.jfree.chart.axis$ValueAxis#readObject(java.io.ObjectInputStream)": 28.09375,
        "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)": 62.96875,
        "org.jfree.chart.axis$ValueAxis#resizeRange(double)": 8.71875,
        "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)": 8.71875,
        "org.jfree.chart.axis$ValueAxis#resizeRange2(double,double)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean)": 9.6875,
        "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean,boolean)": 9.6875,
        "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double)": 34.875,
        "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double,boolean)": 34.875,
        "org.jfree.chart.axis$ValueAxis#setAutoTickIndex(int)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean)": 0.96875,
        "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean,boolean)": 18.40625,
        "org.jfree.chart.axis$ValueAxis#setDefaultAutoRange(org.jfree.data.Range)": 11.625,
        "org.jfree.chart.axis$ValueAxis#setDownArrow(java.awt.Shape)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setFixedAutoRange(double)": 4.84375,
        "org.jfree.chart.axis$ValueAxis#setInverted(boolean)": 3.875,
        "org.jfree.chart.axis$ValueAxis#setLeftArrow(java.awt.Shape)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setLowerBound(double)": 6.78125,
        "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)": 15.5,
        "org.jfree.chart.axis$ValueAxis#setMinorTickCount(int)": 0.96875,
        "org.jfree.chart.axis$ValueAxis#setNegativeArrowVisible(boolean)": 0.96875,
        "org.jfree.chart.axis$ValueAxis#setPositiveArrowVisible(boolean)": 0.96875,
        "org.jfree.chart.axis$ValueAxis#setRange(double,double)": 15.5,
        "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)": 27.125,
        "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)": 235.40625,
        "org.jfree.chart.axis$ValueAxis#setRangeAboutValue(double,double)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(double,double)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range,boolean,boolean)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setRightArrow(java.awt.Shape)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setStandardTickUnits(org.jfree.chart.axis.TickUnitSource)": 11.625,
        "org.jfree.chart.axis$ValueAxis#setUpArrow(java.awt.Shape)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setUpperBound(double)": 4.84375,
        "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)": 15.5,
        "org.jfree.chart.axis$ValueAxis#setVerticalTickLabels(boolean)": 0.96875,
        "org.jfree.chart.axis$ValueAxis#writeObject(java.io.ObjectOutputStream)": 28.09375,
        "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)": 0.96875,
        "org.jfree.chart.entity$CategoryItemEntity#CategoryItemEntity(java.awt.Shape,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,java.lang.Comparable,java.lang.Comparable)": 5.8125,
        "org.jfree.chart.entity$CategoryItemEntity#equals(java.lang.Object)": 2.90625,
        "org.jfree.chart.entity$CategoryItemEntity#getColumnKey()": 0.0,
        "org.jfree.chart.entity$CategoryItemEntity#getDataset()": 0.0,
        "org.jfree.chart.entity$CategoryItemEntity#getRowKey()": 0.0,
        "org.jfree.chart.entity$CategoryItemEntity#setColumnKey(java.lang.Comparable)": 0.96875,
        "org.jfree.chart.entity$CategoryItemEntity#setDataset(org.jfree.data.category.CategoryDataset)": 0.0,
        "org.jfree.chart.entity$CategoryItemEntity#setRowKey(java.lang.Comparable)": 0.96875,
        "org.jfree.chart.entity$CategoryItemEntity#toString()": 0.0,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape)": 4.84375,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String)": 4.84375,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String,java.lang.String)": 32.9375,
        "org.jfree.chart.entity$ChartEntity#clone()": 6.78125,
        "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)": 21.3125,
        "org.jfree.chart.entity$ChartEntity#getArea()": 0.0,
        "org.jfree.chart.entity$ChartEntity#getImageMapAreaTag(org.jfree.chart.imagemap.ToolTipTagFragmentGenerator,org.jfree.chart.imagemap.URLTagFragmentGenerator)": 0.0,
        "org.jfree.chart.entity$ChartEntity#getPolyCoords(java.awt.Shape)": 0.0,
        "org.jfree.chart.entity$ChartEntity#getRectCoords(java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.entity$ChartEntity#getShapeCoords()": 0.0,
        "org.jfree.chart.entity$ChartEntity#getShapeType()": 0.0,
        "org.jfree.chart.entity$ChartEntity#getToolTipText()": 0.0,
        "org.jfree.chart.entity$ChartEntity#getURLText()": 0.0,
        "org.jfree.chart.entity$ChartEntity#hashCode()": 0.0,
        "org.jfree.chart.entity$ChartEntity#readObject(java.io.ObjectInputStream)": 6.78125,
        "org.jfree.chart.entity$ChartEntity#setArea(java.awt.Shape)": 5.8125,
        "org.jfree.chart.entity$ChartEntity#setToolTipText(java.lang.String)": 5.8125,
        "org.jfree.chart.entity$ChartEntity#setURLText(java.lang.String)": 5.8125,
        "org.jfree.chart.entity$ChartEntity#toString()": 0.0,
        "org.jfree.chart.entity$ChartEntity#writeObject(java.io.ObjectOutputStream)": 6.78125,
        "org.jfree.chart.entity$PlotEntity#PlotEntity(java.awt.Shape,org.jfree.chart.plot.Plot)": 0.0,
        "org.jfree.chart.entity$PlotEntity#PlotEntity(java.awt.Shape,org.jfree.chart.plot.Plot,java.lang.String)": 0.0,
        "org.jfree.chart.entity$PlotEntity#PlotEntity(java.awt.Shape,org.jfree.chart.plot.Plot,java.lang.String,java.lang.String)": 10.65625,
        "org.jfree.chart.entity$PlotEntity#clone()": 0.0,
        "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)": 0.0,
        "org.jfree.chart.entity$PlotEntity#getPlot()": 0.0,
        "org.jfree.chart.entity$PlotEntity#hashCode()": 0.0,
        "org.jfree.chart.entity$PlotEntity#readObject(java.io.ObjectInputStream)": 0.0,
        "org.jfree.chart.entity$PlotEntity#toString()": 0.0,
        "org.jfree.chart.entity$PlotEntity#writeObject(java.io.ObjectOutputStream)": 0.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)": 576.741935483871,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart)": 0.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart,org.jfree.chart.event.ChartChangeEventType)": 576.741935483871,
        "org.jfree.chart.event$ChartChangeEvent#getChart()": 0.0,
        "org.jfree.chart.event$ChartChangeEvent#getType()": 0.0,
        "org.jfree.chart.event$ChartChangeEvent#setChart(org.jfree.chart.JFreeChart)": 121.09375,
        "org.jfree.chart.event$ChartChangeEvent#setType(org.jfree.chart.event.ChartChangeEventType)": 200.29032258064515,
        "org.jfree.chart.event$ChartChangeEventType#<clinit>()": 576.741935483871,
        "org.jfree.chart.event$ChartChangeEventType#ChartChangeEventType(java.lang.String)": 576.741935483871,
        "org.jfree.chart.event$ChartChangeEventType#equals(java.lang.Object)": 0.0,
        "org.jfree.chart.event$ChartChangeEventType#hashCode()": 0.0,
        "org.jfree.chart.event$ChartChangeEventType#readResolve()": 0.0,
        "org.jfree.chart.event$ChartChangeEventType#toString()": 0.0,
        "org.jfree.chart.event$DatasetChangeInfo#DatasetChangeInfo()": 545.7741935483871,
        "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)": 242.8709677419355,
        "org.jfree.chart.event$PlotChangeEvent#getPlot()": 0.0,
        "org.jfree.chart.labels$ItemLabelAnchor#<clinit>()": 444.16129032258067,
        "org.jfree.chart.labels$ItemLabelAnchor#ItemLabelAnchor(java.lang.String)": 444.16129032258067,
        "org.jfree.chart.labels$ItemLabelAnchor#equals(java.lang.Object)": 165.65625,
        "org.jfree.chart.labels$ItemLabelAnchor#readResolve()": 66.84375,
        "org.jfree.chart.labels$ItemLabelAnchor#toString()": 68.78125,
        "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition()": 5.8125,
        "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition(org.jfree.chart.labels.ItemLabelAnchor,org.jfree.chart.text.TextAnchor)": 440.2903225806452,
        "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition(org.jfree.chart.labels.ItemLabelAnchor,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)": 442.2258064516129,
        "org.jfree.chart.labels$ItemLabelPosition#equals(java.lang.Object)": 160.8125,
        "org.jfree.chart.labels$ItemLabelPosition#getAngle()": 0.0,
        "org.jfree.chart.labels$ItemLabelPosition#getItemLabelAnchor()": 0.0,
        "org.jfree.chart.labels$ItemLabelPosition#getRotationAnchor()": 0.0,
        "org.jfree.chart.labels$ItemLabelPosition#getTextAnchor()": 0.0,
        "org.jfree.chart.labels$StandardCategorySeriesLabelGenerator#StandardCategorySeriesLabelGenerator()": 208.03225806451613,
        "org.jfree.chart.labels$StandardCategorySeriesLabelGenerator#StandardCategorySeriesLabelGenerator(java.lang.String)": 211.90322580645162,
        "org.jfree.chart.labels$StandardCategorySeriesLabelGenerator#clone()": 31.0,
        "org.jfree.chart.labels$StandardCategorySeriesLabelGenerator#createItemArray(org.jfree.data.category.CategoryDataset,int)": 8.71875,
        "org.jfree.chart.labels$StandardCategorySeriesLabelGenerator#equals(java.lang.Object)": 105.59375,
        "org.jfree.chart.labels$StandardCategorySeriesLabelGenerator#generateLabel(org.jfree.data.category.CategoryDataset,int)": 8.71875,
        "org.jfree.chart.labels$StandardCategorySeriesLabelGenerator#hashCode()": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#<clinit>()": 80.29032258064517,
        "org.jfree.chart.plot$CategoryPlot#CategoryPlot()": -17.451612903225808,
        "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)": 80.29032258064517,
        "org.jfree.chart.plot$CategoryPlot#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation,boolean)": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)": 3.875,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer,boolean)": 3.875,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker)": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)": 3.875,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 7.75,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 7.75,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker)": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 7.75,
        "org.jfree.chart.plot$CategoryPlot#annotationChanged(org.jfree.chart.event.AnnotationChangeEvent)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 37.78125,
        "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 37.78125,
        "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 37.78125,
        "org.jfree.chart.plot$CategoryPlot#canSelectByPoint()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#canSelectByRegion()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#checkAxisIndices(java.util.List)": 80.29032258064517,
        "org.jfree.chart.plot$CategoryPlot#clearAnnotations()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#clearDomainAxes()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers()": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers(int)": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#clearRangeAxes()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers()": 4.84375,
        "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers(int)": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#clearSelection()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#clone()": 5.8125,
        "org.jfree.chart.plot$CategoryPlot#cloneMarkerMap(java.util.Map)": 5.8125,
        "org.jfree.chart.plot$CategoryPlot#configureDomainAxes()": 80.29032258064517,
        "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()": 80.29032258064517,
        "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.event.DatasetChangeEvent)": 80.29032258064517,
        "org.jfree.chart.plot$CategoryPlot#datasetsMappedToDomainAxis(int)": 36.8125,
        "org.jfree.chart.plot$CategoryPlot#datasetsMappedToRangeAxis(int)": 99.78125,
        "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 37.78125,
        "org.jfree.chart.plot$CategoryPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 32.9375,
        "org.jfree.chart.plot$CategoryPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,int,java.lang.Comparable,java.lang.Comparable,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#drawRangeLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)": 31.0,
        "org.jfree.chart.plot$CategoryPlot#findSelectionStateForDataset(org.jfree.data.category.CategoryDataset,java.lang.Object)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getAnchorValue()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getAnnotations()": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getAxisOffset()": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#getCategories()": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)": 36.8125,
        "org.jfree.chart.plot$CategoryPlot#getColumnRenderingOrder()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getCrosshairDatasetIndex()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 99.78125,
        "org.jfree.chart.plot$CategoryPlot#getDataset()": 2.90625,
        "org.jfree.chart.plot$CategoryPlot#getDataset(int)": 80.29032258064517,
        "org.jfree.chart.plot$CategoryPlot#getDatasetCount()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDatasetRenderingOrder()": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxis()": 5.8125,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxis(int)": 78.46875,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisCount()": 49.40625,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge()": 28.09375,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)": 37.78125,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisForDataset(int)": 35.84375,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisIndex(org.jfree.chart.axis.CategoryAxis)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation()": 37.78125,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation(int)": 37.78125,
        "org.jfree.chart.plot$CategoryPlot#getDomainCrosshairColumnKey()": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getDomainCrosshairPaint()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainCrosshairRowKey()": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getDomainCrosshairStroke()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlinePaint()": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlinePosition()": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlineStroke()": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDrawSharedDomainAxis()": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#getFixedDomainAxisSpace()": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#getFixedLegendItems()": 2.90625,
        "org.jfree.chart.plot$CategoryPlot#getFixedRangeAxisSpace()": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#getIndexOf(org.jfree.chart.renderer.category.CategoryItemRenderer)": 4.806451612903224,
        "org.jfree.chart.plot$CategoryPlot#getLegendItems()": 37.78125,
        "org.jfree.chart.plot$CategoryPlot#getOrientation()": 42.625,
        "org.jfree.chart.plot$CategoryPlot#getPlotType()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxis()": 59.09375,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)": 80.29032258064517,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisCount()": 49.40625,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)": 37.78125,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisForDataset(int)": 35.84375,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation()": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation(int)": 37.78125,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairPaint()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairStroke()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairValue()": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getRangeGridlinePaint()": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getRangeGridlineStroke()": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeMinorGridlinePaint()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeMinorGridlineStroke()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeZeroBaselinePaint()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeZeroBaselineStroke()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRenderer()": 56.1875,
        "org.jfree.chart.plot$CategoryPlot#getRenderer(int)": 74.59375,
        "org.jfree.chart.plot$CategoryPlot#getRendererCount()": 49.40625,
        "org.jfree.chart.plot$CategoryPlot#getRendererForDataset(org.jfree.data.category.CategoryDataset)": 99.78125,
        "org.jfree.chart.plot$CategoryPlot#getRowRenderingOrder()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getShadowGenerator()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getWeight()": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#indexOf(org.jfree.data.category.CategoryDataset)": 26.15625,
        "org.jfree.chart.plot$CategoryPlot#integerise(java.awt.geom.Rectangle2D)": 37.78125,
        "org.jfree.chart.plot$CategoryPlot#isDomainCrosshairVisible()": 34.875,
        "org.jfree.chart.plot$CategoryPlot#isDomainGridlinesVisible()": 34.875,
        "org.jfree.chart.plot$CategoryPlot#isDomainPannable()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#isDomainZoomable()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeCrosshairLockedOnData()": 6.78125,
        "org.jfree.chart.plot$CategoryPlot#isRangeCrosshairVisible()": 35.84375,
        "org.jfree.chart.plot$CategoryPlot#isRangeGridlinesVisible()": 34.875,
        "org.jfree.chart.plot$CategoryPlot#isRangeMinorGridlinesVisible()": 27.125,
        "org.jfree.chart.plot$CategoryPlot#isRangePannable()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeZeroBaselineVisible()": 35.84375,
        "org.jfree.chart.plot$CategoryPlot#isRangeZoomable()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxes(int,java.util.List)": 80.29032258064517,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxis(int,int)": 80.29032258064517,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxes(int,java.util.List)": 80.29032258064517,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxis(int,int)": 80.29032258064517,
        "org.jfree.chart.plot$CategoryPlot#panDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#readObject(java.io.ObjectInputStream)": 7.75,
        "org.jfree.chart.plot$CategoryPlot#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation,boolean)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CategoryCrosshairState)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)": 52.3125,
        "org.jfree.chart.plot$CategoryPlot#select(double,double,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#select(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double,boolean)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)": 50.375,
        "org.jfree.chart.plot$CategoryPlot#setColumnRenderingOrder(org.jfree.chart.util.SortOrder)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setCrosshairDatasetIndex(int)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setCrosshairDatasetIndex(int,boolean)": 35.84375,
        "org.jfree.chart.plot$CategoryPlot#setDataset(int,org.jfree.data.category.CategoryDataset)": -9.70967741935484,
        "org.jfree.chart.plot$CategoryPlot#setDataset(org.jfree.data.category.CategoryDataset)": -17.451612903225808,
        "org.jfree.chart.plot$CategoryPlot#setDatasetRenderingOrder(org.jfree.chart.plot.DatasetRenderingOrder)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxes(org.jfree.chart.axis.CategoryAxis[])": 0.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis)": 11.625,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)": 11.625,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(org.jfree.chart.axis.CategoryAxis)": 7.75,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 80.29032258064517,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 80.29032258064517,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairColumnKey(java.lang.Comparable)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairColumnKey(java.lang.Comparable,boolean)": 35.84375,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairPaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairRowKey(java.lang.Comparable)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairRowKey(java.lang.Comparable,boolean)": 35.84375,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairVisible(boolean)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePaint(java.awt.Paint)": 50.375,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePosition(org.jfree.chart.axis.CategoryAnchor)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlineStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinesVisible(boolean)": 8.71875,
        "org.jfree.chart.plot$CategoryPlot#setDrawSharedDomainAxis(boolean)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace)": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 2.90625,
        "org.jfree.chart.plot$CategoryPlot#setFixedLegendItems(org.jfree.chart.LegendItemCollection)": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 2.90625,
        "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)": 20.34375,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])": 0.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)": 12.59375,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)": 12.59375,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)": 8.71875,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 80.29032258064517,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 80.29032258064517,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairLockedOnData(boolean)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairPaint(java.awt.Paint)": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double,boolean)": 35.84375,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairVisible(boolean)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlinePaint(java.awt.Paint)": 50.375,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlineStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlinesVisible(boolean)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRangeMinorGridlinePaint(java.awt.Paint)": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#setRangeMinorGridlineStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRangeMinorGridlinesVisible(boolean)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRangePannable(boolean)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeZeroBaselinePaint(java.awt.Paint)": 51.34375,
        "org.jfree.chart.plot$CategoryPlot#setRangeZeroBaselineStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRangeZeroBaselineVisible(boolean)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer)": 3.875,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)": -24.225806451612904,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)": -27.129032258064516,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderers(org.jfree.chart.renderer.category.CategoryItemRenderer[])": 0.0,
        "org.jfree.chart.plot$CategoryPlot#setRowRenderingOrder(org.jfree.chart.util.SortOrder)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setShadowGenerator(org.jfree.chart.util.ShadowGenerator)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setWeight(int)": 10.65625,
        "org.jfree.chart.plot$CategoryPlot#writeObject(java.io.ObjectOutputStream)": 7.75,
        "org.jfree.chart.plot$CategoryPlot#zoom(double)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 0.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#<clinit>()": 186.74193548387098,
        "org.jfree.chart.plot$DatasetRenderingOrder#DatasetRenderingOrder(java.lang.String)": 186.74193548387098,
        "org.jfree.chart.plot$DatasetRenderingOrder#equals(java.lang.Object)": 16.46875,
        "org.jfree.chart.plot$DatasetRenderingOrder#hashCode()": 0.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#readResolve()": 16.46875,
        "org.jfree.chart.plot$DatasetRenderingOrder#toString()": 16.46875,
        "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()": 259.3225806451613,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier()": 259.3225806451613,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])": 259.3225806451613,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])": 2.90625,
        "org.jfree.chart.plot$DefaultDrawingSupplier#clone()": 146.28125,
        "org.jfree.chart.plot$DefaultDrawingSupplier#createStandardSeriesShapes()": 259.3225806451613,
        "org.jfree.chart.plot$DefaultDrawingSupplier#equalShapes(java.awt.Shape[],java.awt.Shape[])": 85.25,
        "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)": 86.21875,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextFillPaint()": 0.96875,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlinePaint()": 1.9375,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlineStroke()": 0.96875,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextPaint()": 71.6875,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextShape()": 23.25,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextStroke()": 38.75,
        "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double)": 259.3225806451613,
        "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double,double)": 259.3225806451613,
        "org.jfree.chart.plot$DefaultDrawingSupplier#readObject(java.io.ObjectInputStream)": 32.9375,
        "org.jfree.chart.plot$DefaultDrawingSupplier#writeObject(java.io.ObjectOutputStream)": 32.9375,
        "org.jfree.chart.plot$Plot#<clinit>()": 253.51612903225805,
        "org.jfree.chart.plot$Plot#Plot()": 253.51612903225805,
        "org.jfree.chart.plot$Plot#addChangeListener(org.jfree.chart.event.PlotChangeListener)": 195.6875,
        "org.jfree.chart.plot$Plot#annotationChanged(org.jfree.chart.event.AnnotationChangeEvent)": 0.0,
        "org.jfree.chart.plot$Plot#axisChanged(org.jfree.chart.event.AxisChangeEvent)": 109.46875,
        "org.jfree.chart.plot$Plot#clone()": 30.03125,
        "org.jfree.chart.plot$Plot#createAndAddEntity(java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo,java.lang.String,java.lang.String)": 50.375,
        "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.event.DatasetChangeEvent)": 13.5625,
        "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 4.84375,
        "org.jfree.chart.plot$Plot#drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 53.28125,
        "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 11.625,
        "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 53.28125,
        "org.jfree.chart.plot$Plot#equals(java.lang.Object)": 80.40625,
        "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 4.84375,
        "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)": 53.28125,
        "org.jfree.chart.plot$Plot#fireChangeEvent()": 181.90322580645162,
        "org.jfree.chart.plot$Plot#getBackgroundAlpha()": 1.9375,
        "org.jfree.chart.plot$Plot#getBackgroundImage()": 1.9375,
        "org.jfree.chart.plot$Plot#getBackgroundImageAlignment()": 0.0,
        "org.jfree.chart.plot$Plot#getBackgroundImageAlpha()": 0.0,
        "org.jfree.chart.plot$Plot#getBackgroundPaint()": 115.28125,
        "org.jfree.chart.plot$Plot#getDatasetGroup()": 0.0,
        "org.jfree.chart.plot$Plot#getDrawingSupplier()": 171.46875,
        "org.jfree.chart.plot$Plot#getForegroundAlpha()": 55.21875,
        "org.jfree.chart.plot$Plot#getInsets()": 67.8125,
        "org.jfree.chart.plot$Plot#getLegendItems()": 0.96875,
        "org.jfree.chart.plot$Plot#getNoDataMessage()": 0.0,
        "org.jfree.chart.plot$Plot#getNoDataMessageFont()": 0.0,
        "org.jfree.chart.plot$Plot#getNoDataMessagePaint()": 0.0,
        "org.jfree.chart.plot$Plot#getOutlinePaint()": 1.9375,
        "org.jfree.chart.plot$Plot#getOutlineStroke()": 1.9375,
        "org.jfree.chart.plot$Plot#getParent()": 205.1290322580645,
        "org.jfree.chart.plot$Plot#getRectX(double,double,double,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.plot$Plot#getRectY(double,double,double,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.plot$Plot#getRootPlot()": 0.0,
        "org.jfree.chart.plot$Plot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$Plot#isNotify()": 9.6875,
        "org.jfree.chart.plot$Plot#isOutlineVisible()": 34.875,
        "org.jfree.chart.plot$Plot#isSubplot()": 0.0,
        "org.jfree.chart.plot$Plot#markerChanged(org.jfree.chart.event.MarkerChangeEvent)": 0.0,
        "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)": 242.8709677419355,
        "org.jfree.chart.plot$Plot#readObject(java.io.ObjectInputStream)": 31.0,
        "org.jfree.chart.plot$Plot#removeChangeListener(org.jfree.chart.event.PlotChangeListener)": 3.875,
        "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)": 62.0,
        "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)": 62.0,
        "org.jfree.chart.plot$Plot#setBackgroundAlpha(float)": 0.96875,
        "org.jfree.chart.plot$Plot#setBackgroundImage(java.awt.Image)": 0.96875,
        "org.jfree.chart.plot$Plot#setBackgroundImageAlignment(int)": 0.96875,
        "org.jfree.chart.plot$Plot#setBackgroundImageAlpha(float)": 0.96875,
        "org.jfree.chart.plot$Plot#setBackgroundPaint(java.awt.Paint)": 120.125,
        "org.jfree.chart.plot$Plot#setDatasetGroup(org.jfree.data.general.DatasetGroup)": 3.875,
        "org.jfree.chart.plot$Plot#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)": 116.25,
        "org.jfree.chart.plot$Plot#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier,boolean)": 0.0,
        "org.jfree.chart.plot$Plot#setForegroundAlpha(float)": 7.75,
        "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)": 32.9375,
        "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets,boolean)": 37.78125,
        "org.jfree.chart.plot$Plot#setNoDataMessage(java.lang.String)": 0.96875,
        "org.jfree.chart.plot$Plot#setNoDataMessageFont(java.awt.Font)": 0.96875,
        "org.jfree.chart.plot$Plot#setNoDataMessagePaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$Plot#setNotify(boolean)": 9.6875,
        "org.jfree.chart.plot$Plot#setOutlinePaint(java.awt.Paint)": 116.25,
        "org.jfree.chart.plot$Plot#setOutlineStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$Plot#setOutlineVisible(boolean)": 0.96875,
        "org.jfree.chart.plot$Plot#setParent(org.jfree.chart.plot.Plot)": 19.375,
        "org.jfree.chart.plot$Plot#writeObject(java.io.ObjectOutputStream)": 31.0,
        "org.jfree.chart.plot$Plot#zoom(double)": 0.0,
        "org.jfree.chart.plot$PlotOrientation#<clinit>()": 195.4516129032258,
        "org.jfree.chart.plot$PlotOrientation#PlotOrientation(java.lang.String)": 195.4516129032258,
        "org.jfree.chart.plot$PlotOrientation#equals(java.lang.Object)": 18.40625,
        "org.jfree.chart.plot$PlotOrientation#hashCode()": 0.0,
        "org.jfree.chart.plot$PlotOrientation#readResolve()": 17.4375,
        "org.jfree.chart.plot$PlotOrientation#toString()": 18.40625,
        "org.jfree.chart.renderer$AbstractRenderer#<clinit>()": 458.6774193548387,
        "org.jfree.chart.renderer$AbstractRenderer#AbstractRenderer()": 440.2903225806452,
        "org.jfree.chart.renderer$AbstractRenderer#addChangeListener(org.jfree.chart.event.RendererChangeListener)": 160.61290322580646,
        "org.jfree.chart.renderer$AbstractRenderer#calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,double,double,org.jfree.chart.plot.PlotOrientation)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#clearSeriesPaints(boolean)": 99.78125,
        "org.jfree.chart.renderer$AbstractRenderer#clearSeriesStrokes(boolean)": 99.78125,
        "org.jfree.chart.renderer$AbstractRenderer#clone()": 67.8125,
        "org.jfree.chart.renderer$AbstractRenderer#equals(java.lang.Object)": 223.78125,
        "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()": 379.75,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesFillPaint()": 0.96875,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesOutlinePaint()": 0.96875,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesOutlineStroke()": 0.96875,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesPaint()": 100.75,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesShape()": 0.96875,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesStroke()": 100.75,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseCreateEntities()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseFillPaint()": 0.96875,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseItemLabelFont()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseItemLabelPaint()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseItemLabelsVisible()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseLegendShape()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseLegendTextFont()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseLegendTextPaint()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseNegativeItemLabelPosition()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseOutlinePaint()": 0.96875,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseOutlineStroke()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBasePaint()": 0.96875,
        "org.jfree.chart.renderer$AbstractRenderer#getBasePositiveItemLabelPosition()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseSeriesVisible()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseSeriesVisibleInLegend()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseShape()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseStroke()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getDataBoundsIncludesVisibleSeriesOnly()": 151.125,
        "org.jfree.chart.renderer$AbstractRenderer#getDefaultEntityRadius()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemCreateEntity(int,int,boolean)": 2.90625,
        "org.jfree.chart.renderer$AbstractRenderer#getItemFillPaint(int,int,boolean)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemLabelAnchorOffset()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemLabelFont(int,int,boolean)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemLabelPaint(int,int,boolean)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemOutlinePaint(int,int,boolean)": 4.84375,
        "org.jfree.chart.renderer$AbstractRenderer#getItemOutlineStroke(int,int,boolean)": 9.6875,
        "org.jfree.chart.renderer$AbstractRenderer#getItemPaint(int,int,boolean)": 39.71875,
        "org.jfree.chart.renderer$AbstractRenderer#getItemShape(int,int,boolean)": 6.78125,
        "org.jfree.chart.renderer$AbstractRenderer#getItemStroke(int,int,boolean)": 28.09375,
        "org.jfree.chart.renderer$AbstractRenderer#getItemVisible(int,int)": 34.875,
        "org.jfree.chart.renderer$AbstractRenderer#getLegendShape(int)": 25.1875,
        "org.jfree.chart.renderer$AbstractRenderer#getLegendTextFont(int)": 35.84375,
        "org.jfree.chart.renderer$AbstractRenderer#getLegendTextPaint(int)": 35.84375,
        "org.jfree.chart.renderer$AbstractRenderer#getNegativeItemLabelPosition(int,int,boolean)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getPositiveItemLabelPosition(int,int,boolean)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSelectedItemAttributes()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesCreateEntities(int)": 2.90625,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesFillPaint(int)": 0.96875,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesItemLabelFont(int)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesItemLabelPaint(int)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesItemLabelsVisible(int)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesNegativeItemLabelPosition(int)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesOutlinePaint(int)": 17.4375,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesOutlineStroke(int)": 31.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesPaint(int)": 65.875,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesPositiveItemLabelPosition(int)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesShape(int)": 22.28125,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesStroke(int)": 37.78125,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesVisible(int)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesVisibleInLegend(int)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getTreatLegendShapeAsLine()": 2.90625,
        "org.jfree.chart.renderer$AbstractRenderer#hasListener(java.util.EventListener)": 3.875,
        "org.jfree.chart.renderer$AbstractRenderer#hashCode()": 44.5625,
        "org.jfree.chart.renderer$AbstractRenderer#isItemLabelVisible(int,int,boolean)": 11.625,
        "org.jfree.chart.renderer$AbstractRenderer#isSeriesItemLabelsVisible(int)": 11.625,
        "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisible(int)": 126.90625,
        "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisibleInLegend(int)": 27.125,
        "org.jfree.chart.renderer$AbstractRenderer#lookupLegendShape(int)": 25.1875,
        "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextFont(int)": 35.84375,
        "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextPaint(int)": 35.84375,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesFillPaint(int)": 0.96875,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlinePaint(int)": 17.4375,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlineStroke(int)": 31.0,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesPaint(int)": 65.875,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesShape(int)": 22.28125,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesStroke(int)": 37.78125,
        "org.jfree.chart.renderer$AbstractRenderer#notifyListeners(org.jfree.chart.event.RendererChangeEvent)": 379.75,
        "org.jfree.chart.renderer$AbstractRenderer#readObject(java.io.ObjectInputStream)": 64.90625,
        "org.jfree.chart.renderer$AbstractRenderer#removeChangeListener(org.jfree.chart.event.RendererChangeListener)": 5.8125,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesFillPaint(boolean)": 0.96875,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesOutlinePaint(boolean)": 0.96875,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesOutlineStroke(boolean)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesPaint(boolean)": 0.96875,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesShape(boolean)": 2.90625,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesStroke(boolean)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseCreateEntities(boolean)": 1.9375,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseCreateEntities(boolean,boolean)": 1.9375,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseFillPaint(java.awt.Paint)": 1.9375,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseFillPaint(java.awt.Paint,boolean)": 1.9375,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelFont(java.awt.Font)": 101.71875,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelFont(java.awt.Font,boolean)": 101.71875,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelPaint(java.awt.Paint)": 101.71875,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelPaint(java.awt.Paint,boolean)": 101.71875,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelsVisible(boolean)": 2.90625,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelsVisible(boolean,boolean)": 2.90625,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseLegendShape(java.awt.Shape)": 192.78125,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseLegendTextFont(java.awt.Font)": 2.90625,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseLegendTextPaint(java.awt.Paint)": 3.875,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition)": 72.65625,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)": 72.65625,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlinePaint(java.awt.Paint)": 10.65625,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlinePaint(java.awt.Paint,boolean)": 10.65625,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlineStroke(java.awt.Stroke)": 2.90625,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlineStroke(java.awt.Stroke,boolean)": 2.90625,
        "org.jfree.chart.renderer$AbstractRenderer#setBasePaint(java.awt.Paint)": 4.84375,
        "org.jfree.chart.renderer$AbstractRenderer#setBasePaint(java.awt.Paint,boolean)": 4.84375,
        "org.jfree.chart.renderer$AbstractRenderer#setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition)": 72.65625,
        "org.jfree.chart.renderer$AbstractRenderer#setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)": 72.65625,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisible(boolean)": 1.9375,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisible(boolean,boolean)": 1.9375,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisibleInLegend(boolean)": 1.9375,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisibleInLegend(boolean,boolean)": 1.9375,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseShape(java.awt.Shape)": 5.8125,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseShape(java.awt.Shape,boolean)": 5.8125,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseStroke(java.awt.Stroke)": 2.90625,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseStroke(java.awt.Stroke,boolean)": 2.90625,
        "org.jfree.chart.renderer$AbstractRenderer#setDataBoundsIncludesVisibleSeriesOnly(boolean)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#setDefaultEntityRadius(int)": 1.9375,
        "org.jfree.chart.renderer$AbstractRenderer#setItemLabelAnchorOffset(double)": 0.96875,
        "org.jfree.chart.renderer$AbstractRenderer#setLegendShape(int,java.awt.Shape)": 1.9375,
        "org.jfree.chart.renderer$AbstractRenderer#setLegendTextFont(int,java.awt.Font)": 1.9375,
        "org.jfree.chart.renderer$AbstractRenderer#setLegendTextPaint(int,java.awt.Paint)": 1.9375,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesCreateEntities(int,java.lang.Boolean)": 1.9375,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesCreateEntities(int,java.lang.Boolean,boolean)": 1.9375,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesFillPaint(int,java.awt.Paint)": 3.875,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesFillPaint(int,java.awt.Paint,boolean)": 4.84375,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelFont(int,java.awt.Font)": 1.9375,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelFont(int,java.awt.Font,boolean)": 1.9375,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelPaint(int,java.awt.Paint)": 2.90625,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelPaint(int,java.awt.Paint,boolean)": 2.90625,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelsVisible(int,boolean)": 0.96875,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelsVisible(int,java.lang.Boolean)": 3.875,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelsVisible(int,java.lang.Boolean,boolean)": 3.875,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesNegativeItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition)": 2.90625,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesNegativeItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition,boolean)": 2.90625,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlinePaint(int,java.awt.Paint)": 3.875,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlinePaint(int,java.awt.Paint,boolean)": 4.84375,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlineStroke(int,java.awt.Stroke)": 3.875,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlineStroke(int,java.awt.Stroke,boolean)": 3.875,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesPaint(int,java.awt.Paint)": 6.78125,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesPaint(int,java.awt.Paint,boolean)": 72.65625,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesPositiveItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition)": 2.90625,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesPositiveItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition,boolean)": 2.90625,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesShape(int,java.awt.Shape)": 2.90625,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesShape(int,java.awt.Shape,boolean)": 25.1875,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesStroke(int,java.awt.Stroke)": 3.875,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesStroke(int,java.awt.Stroke,boolean)": 41.65625,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisible(int,java.lang.Boolean)": 2.90625,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisible(int,java.lang.Boolean,boolean)": 2.90625,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisibleInLegend(int,java.lang.Boolean)": 4.84375,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisibleInLegend(int,java.lang.Boolean,boolean)": 4.84375,
        "org.jfree.chart.renderer$AbstractRenderer#setTreatLegendShapeAsLine(boolean)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#writeObject(java.io.ObjectOutputStream)": 64.90625,
        "org.jfree.chart.renderer$RenderAttributes#RenderAttributes()": 440.2903225806452,
        "org.jfree.chart.renderer$RenderAttributes#RenderAttributes(boolean)": 440.2903225806452,
        "org.jfree.chart.renderer$RenderAttributes#getAllowNull()": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getCreateEntity(int,int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getDefaultCreateEntity()": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getDefaultFillPaint()": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getDefaultLabelFont()": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getDefaultLabelPaint()": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getDefaultLabelVisible()": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getDefaultOutlinePaint()": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getDefaultOutlineStroke()": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getDefaultPaint()": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getDefaultShape()": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getDefaultStroke()": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getItemFillPaint(int,int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getItemLabelFont(int,int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getItemLabelPaint(int,int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getItemOutlinePaint(int,int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getItemOutlineStroke(int,int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getItemPaint(int,int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getItemShape(int,int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getItemStroke(int,int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getSeriesCreateEntity(int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getSeriesFillPaint(int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getSeriesLabelFont(int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getSeriesLabelPaint(int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getSeriesLabelVisible(int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getSeriesOutlinePaint(int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getSeriesOutlineStroke(int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getSeriesPaint(int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getSeriesShape(int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#getSeriesStroke(int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#isLabelVisible(int,int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#lookupSeriesCreateEntity(int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#lookupSeriesFillPaint(int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#lookupSeriesLabelFont(int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#lookupSeriesLabelPaint(int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#lookupSeriesLabelVisible(int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#lookupSeriesOutlinePaint(int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#lookupSeriesOutlineStroke(int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#lookupSeriesPaint(int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#lookupSeriesShape(int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#lookupSeriesStroke(int)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#setDefaultCreateEntity(java.lang.Boolean)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#setDefaultFillPaint(java.awt.Paint)": 440.2903225806452,
        "org.jfree.chart.renderer$RenderAttributes#setDefaultLabelFont(java.awt.Font)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#setDefaultLabelPaint(java.awt.Paint)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#setDefaultLabelVisible(java.lang.Boolean)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#setDefaultOutlinePaint(java.awt.Paint)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#setDefaultOutlineStroke(java.awt.Stroke)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#setDefaultPaint(java.awt.Paint)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#setDefaultShape(java.awt.Shape)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#setDefaultStroke(java.awt.Stroke)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#setSeriesCreateEntity(int,java.lang.Boolean)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#setSeriesFillPaint(int,java.awt.Paint)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#setSeriesLabelFont(int,java.awt.Font)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#setSeriesLabelPaint(int,java.awt.Paint)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#setSeriesLabelVisible(int,java.lang.Boolean)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#setSeriesOutlinePaint(int,java.awt.Paint)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#setSeriesOutlineStroke(int,java.awt.Stroke)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#setSeriesPaint(int,java.awt.Paint)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#setSeriesShape(int,java.awt.Shape)": 0.0,
        "org.jfree.chart.renderer$RenderAttributes#setSeriesStroke(int,java.awt.Stroke)": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#AbstractCategoryItemRenderer()": 206.09677419354838,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation,org.jfree.chart.util.Layer)": 0.96875,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean)": 2.90625,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double)": 2.90625,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#calculateDomainMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#calculateRangeMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()": 30.03125,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#createHotSpotBounds(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#createHotSpotShape(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.renderer.category.CategoryItemRendererState)": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#createState(org.jfree.chart.plot.PlotRenderingInfo)": 29.0625,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)": 34.875,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawBackground(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)": 32.9375,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)": 1.9375,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double,boolean)": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawOutline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)": 32.9375,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)": 33.90625,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)": 1.9375,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#equals(java.lang.Object)": 101.71875,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset)": 70.71875,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 75.5625,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getBaseItemLabelGenerator()": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getBaseToolTipGenerator()": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getBaseURLGenerator()": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getColumnCount()": 28.09375,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getDomainAxis(org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset)": 24.21875,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getDrawingSupplier()": 38.75,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getItemLabelGenerator(int,int,boolean)": 14.53125,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getItemMiddle(java.lang.Comparable,java.lang.Comparable,org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)": 0.96875,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItemLabelGenerator()": 7.75,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItemToolTipGenerator()": 7.75,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItemURLGenerator()": 7.75,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItems()": 4.806451612903224,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getPassCount()": 25.1875,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getPlot()": 39.71875,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getRangeAxis(org.jfree.chart.plot.CategoryPlot,int)": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getRowCount()": 10.65625,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getSeriesItemLabelGenerator(int)": 0.96875,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getSeriesToolTipGenerator(int)": 12.59375,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getSeriesURLGenerator(int)": 0.96875,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getToolTipGenerator(int,int,boolean)": 12.59375,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getURLGenerator(int,int,boolean)": 12.59375,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#hashCode()": 19.375,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#hitTest(double,double,java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.renderer.category.CategoryItemRendererState)": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotRenderingInfo)": 29.0625,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#removeAnnotations()": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseItemLabelGenerator(org.jfree.chart.labels.CategoryItemLabelGenerator)": 4.84375,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseItemLabelGenerator(org.jfree.chart.labels.CategoryItemLabelGenerator,boolean)": 4.84375,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator)": 58.125,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator,boolean)": 58.125,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator)": 1.9375,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator,boolean)": 1.9375,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setLegendItemLabelGenerator(org.jfree.chart.labels.CategorySeriesLabelGenerator)": 1.9375,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setLegendItemToolTipGenerator(org.jfree.chart.labels.CategorySeriesLabelGenerator)": 1.9375,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setLegendItemURLGenerator(org.jfree.chart.labels.CategorySeriesLabelGenerator)": 1.9375,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setPlot(org.jfree.chart.plot.CategoryPlot)": 67.70967741935483,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesItemLabelGenerator(int,org.jfree.chart.labels.CategoryItemLabelGenerator)": 3.875,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesItemLabelGenerator(int,org.jfree.chart.labels.CategoryItemLabelGenerator,boolean)": 3.875,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesToolTipGenerator(int,org.jfree.chart.labels.CategoryToolTipGenerator)": 10.65625,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesToolTipGenerator(int,org.jfree.chart.labels.CategoryToolTipGenerator,boolean)": 10.65625,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesURLGenerator(int,org.jfree.chart.urls.CategoryURLGenerator)": 11.625,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesURLGenerator(int,org.jfree.chart.urls.CategoryURLGenerator,boolean)": 11.625,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#updateCrosshairValues(org.jfree.chart.plot.CategoryCrosshairState,java.lang.Comparable,java.lang.Comparable,double,int,double,double,org.jfree.chart.plot.PlotOrientation)": 6.78125,
        "org.jfree.chart.renderer.category$BarRenderer#<clinit>()": 225.71875,
        "org.jfree.chart.renderer.category$BarRenderer#BarRenderer()": 137.5625,
        "org.jfree.chart.renderer.category$BarRenderer#calculateBarL0L1(double,double,double)": 3.875,
        "org.jfree.chart.renderer.category$BarRenderer#calculateBarW0(org.jfree.chart.plot.CategoryPlot,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.renderer.category.CategoryItemRendererState,int,int)": 4.84375,
        "org.jfree.chart.renderer.category$BarRenderer#calculateBarWidth(org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,org.jfree.data.category.CategoryDataset,org.jfree.chart.renderer.category.CategoryItemRendererState)": 12.59375,
        "org.jfree.chart.renderer.category$BarRenderer#calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)": 0.0,
        "org.jfree.chart.renderer.category$BarRenderer#calculateSeriesWidth(double,org.jfree.chart.axis.CategoryAxis,int,int)": 4.84375,
        "org.jfree.chart.renderer.category$BarRenderer#createHotSpotBounds(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)": 2.90625,
        "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)": 0.0,
        "org.jfree.chart.renderer.category$BarRenderer#equals(java.lang.Object)": 56.1875,
        "org.jfree.chart.renderer.category$BarRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 43.59375,
        "org.jfree.chart.renderer.category$BarRenderer#getBarPainter()": 2.90625,
        "org.jfree.chart.renderer.category$BarRenderer#getBase()": 4.84375,
        "org.jfree.chart.renderer.category$BarRenderer#getDefaultBarPainter()": 137.5625,
        "org.jfree.chart.renderer.category$BarRenderer#getDefaultShadowsVisible()": 137.5625,
        "org.jfree.chart.renderer.category$BarRenderer#getGradientPaintTransformer()": 6.78125,
        "org.jfree.chart.renderer.category$BarRenderer#getIncludeBaseInRange()": 0.0,
        "org.jfree.chart.renderer.category$BarRenderer#getItemMargin()": 7.75,
        "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)": 1.9375,
        "org.jfree.chart.renderer.category$BarRenderer#getMaximumBarWidth()": 13.5625,
        "org.jfree.chart.renderer.category$BarRenderer#getMinimumBarLength()": 4.84375,
        "org.jfree.chart.renderer.category$BarRenderer#getNegativeItemLabelPositionFallback()": 0.0,
        "org.jfree.chart.renderer.category$BarRenderer#getPositiveItemLabelPositionFallback()": 0.0,
        "org.jfree.chart.renderer.category$BarRenderer#getShadowPaint()": 4.84375,
        "org.jfree.chart.renderer.category$BarRenderer#getShadowXOffset()": 4.84375,
        "org.jfree.chart.renderer.category$BarRenderer#getShadowYOffset()": 4.84375,
        "org.jfree.chart.renderer.category$BarRenderer#getShadowsVisible()": 4.84375,
        "org.jfree.chart.renderer.category$BarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotRenderingInfo)": 13.5625,
        "org.jfree.chart.renderer.category$BarRenderer#isDrawBarOutline()": 16.46875,
        "org.jfree.chart.renderer.category$BarRenderer#isInternalAnchor(org.jfree.chart.labels.ItemLabelAnchor)": 0.0,
        "org.jfree.chart.renderer.category$BarRenderer#readObject(java.io.ObjectInputStream)": 18.40625,
        "org.jfree.chart.renderer.category$BarRenderer#setBarPainter(org.jfree.chart.renderer.category.BarPainter)": 31.96875,
        "org.jfree.chart.renderer.category$BarRenderer#setBase(double)": 0.96875,
        "org.jfree.chart.renderer.category$BarRenderer#setDefaultBarPainter(org.jfree.chart.renderer.category.BarPainter)": 0.0,
        "org.jfree.chart.renderer.category$BarRenderer#setDefaultShadowsVisible(boolean)": 0.0,
        "org.jfree.chart.renderer.category$BarRenderer#setDrawBarOutline(boolean)": 0.96875,
        "org.jfree.chart.renderer.category$BarRenderer#setGradientPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)": 9.6875,
        "org.jfree.chart.renderer.category$BarRenderer#setIncludeBaseInRange(boolean)": 11.625,
        "org.jfree.chart.renderer.category$BarRenderer#setItemMargin(double)": 0.96875,
        "org.jfree.chart.renderer.category$BarRenderer#setMaximumBarWidth(double)": 0.96875,
        "org.jfree.chart.renderer.category$BarRenderer#setMinimumBarLength(double)": 9.6875,
        "org.jfree.chart.renderer.category$BarRenderer#setNegativeItemLabelPositionFallback(org.jfree.chart.labels.ItemLabelPosition)": 17.4375,
        "org.jfree.chart.renderer.category$BarRenderer#setPositiveItemLabelPositionFallback(org.jfree.chart.labels.ItemLabelPosition)": 17.4375,
        "org.jfree.chart.renderer.category$BarRenderer#setShadowPaint(java.awt.Paint)": 31.0,
        "org.jfree.chart.renderer.category$BarRenderer#setShadowVisible(boolean)": 31.0,
        "org.jfree.chart.renderer.category$BarRenderer#setShadowXOffset(double)": 0.96875,
        "org.jfree.chart.renderer.category$BarRenderer#setShadowYOffset(double)": 0.96875,
        "org.jfree.chart.renderer.category$BarRenderer#writeObject(java.io.ObjectOutputStream)": 18.40625,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#LineAndShapeRenderer()": -4.870967741935484,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#LineAndShapeRenderer(boolean,boolean)": 17.38709677419355,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#clone()": 8.71875,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)": 2.90625,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#equals(java.lang.Object)": 24.21875,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getBaseLinesVisible()": 3.875,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getBaseShapesFilled()": 0.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getBaseShapesVisible()": 3.875,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getDrawOutlines()": 0.96875,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getItemLineVisible(int,int)": 5.8125,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getItemMargin()": 0.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getItemShapeFilled(int,int)": 3.875,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getItemShapeVisible(int,int)": 4.84375,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getLegendItem(int,int)": 0.96875,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getPassCount()": 4.84375,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getSeriesLinesVisible(int)": 5.8125,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getSeriesShapesFilled(int)": 3.875,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getSeriesShapesVisible(int)": 4.84375,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getUseFillPaint()": 0.96875,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getUseOutlinePaint()": 0.96875,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#getUseSeriesOffset()": 0.96875,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setBaseLinesVisible(boolean)": 2.90625,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setBaseShapesFilled(boolean)": 2.90625,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setBaseShapesVisible(boolean)": 2.90625,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setDrawOutlines(boolean)": 0.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setItemMargin(double)": 0.96875,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setSeriesLinesVisible(int,boolean)": 2.90625,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setSeriesLinesVisible(int,java.lang.Boolean)": 2.90625,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setSeriesShapesFilled(int,boolean)": 2.90625,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setSeriesShapesFilled(int,java.lang.Boolean)": 2.90625,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setSeriesShapesVisible(int,boolean)": 2.90625,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setSeriesShapesVisible(int,java.lang.Boolean)": 2.90625,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setUseFillPaint(boolean)": 0.0,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setUseOutlinePaint(boolean)": 0.96875,
        "org.jfree.chart.renderer.category$LineAndShapeRenderer#setUseSeriesOffset(boolean)": 0.96875,
        "org.jfree.chart.text$TextAnchor#<clinit>()": 551.5806451612904,
        "org.jfree.chart.text$TextAnchor#TextAnchor(java.lang.String)": 551.5806451612904,
        "org.jfree.chart.text$TextAnchor#equals(java.lang.Object)": 204.40625,
        "org.jfree.chart.text$TextAnchor#hashCode()": 6.78125,
        "org.jfree.chart.text$TextAnchor#readResolve()": 83.3125,
        "org.jfree.chart.text$TextAnchor#toString()": 0.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList()": 539.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int)": 539.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int,int)": 539.0,
        "org.jfree.chart.util$AbstractObjectList#clear()": 99.78125,
        "org.jfree.chart.util$AbstractObjectList#clone()": 78.46875,
        "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)": 262.53125,
        "org.jfree.chart.util$AbstractObjectList#get(int)": 232.22580645161293,
        "org.jfree.chart.util$AbstractObjectList#hashCode()": 46.5,
        "org.jfree.chart.util$AbstractObjectList#indexOf(java.lang.Object)": 156.74193548387098,
        "org.jfree.chart.util$AbstractObjectList#readObject(java.io.ObjectInputStream)": 78.46875,
        "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)": 231.25806451612902,
        "org.jfree.chart.util$AbstractObjectList#size()": 419.96774193548384,
        "org.jfree.chart.util$AbstractObjectList#writeObject(java.io.ObjectOutputStream)": 78.46875,
        "org.jfree.chart.util$BooleanList#BooleanList()": 444.16129032258067,
        "org.jfree.chart.util$BooleanList#equals(java.lang.Object)": 226.6875,
        "org.jfree.chart.util$BooleanList#getBoolean(int)": 126.90625,
        "org.jfree.chart.util$BooleanList#hashCode()": 45.53125,
        "org.jfree.chart.util$BooleanList#setBoolean(int,java.lang.Boolean)": 20.34375,
        "org.jfree.chart.util$DefaultShadowGenerator#DefaultShadowGenerator()": 116.09677419354838,
        "org.jfree.chart.util$DefaultShadowGenerator#DefaultShadowGenerator(int,java.awt.Color,float,int,double)": 117.06451612903226,
        "org.jfree.chart.util$DefaultShadowGenerator#applyShadow(java.awt.image.BufferedImage)": 35.84375,
        "org.jfree.chart.util$DefaultShadowGenerator#calculateOffsetX()": 35.84375,
        "org.jfree.chart.util$DefaultShadowGenerator#calculateOffsetY()": 35.84375,
        "org.jfree.chart.util$DefaultShadowGenerator#createDropShadow(java.awt.image.BufferedImage)": 35.84375,
        "org.jfree.chart.util$DefaultShadowGenerator#equals(java.lang.Object)": 22.28125,
        "org.jfree.chart.util$DefaultShadowGenerator#getAngle()": 0.0,
        "org.jfree.chart.util$DefaultShadowGenerator#getDistance()": 0.0,
        "org.jfree.chart.util$DefaultShadowGenerator#getShadowColor()": 0.0,
        "org.jfree.chart.util$DefaultShadowGenerator#getShadowOpacity()": 0.0,
        "org.jfree.chart.util$DefaultShadowGenerator#getShadowSize()": 0.0,
        "org.jfree.chart.util$DefaultShadowGenerator#hashCode()": 0.0,
        "org.jfree.chart.util$GradientPaintTransformType#<clinit>()": 238.3125,
        "org.jfree.chart.util$GradientPaintTransformType#GradientPaintTransformType(java.lang.String)": 238.3125,
        "org.jfree.chart.util$GradientPaintTransformType#equals(java.lang.Object)": 31.0,
        "org.jfree.chart.util$GradientPaintTransformType#hashCode()": 0.96875,
        "org.jfree.chart.util$GradientPaintTransformType#readResolve()": 30.03125,
        "org.jfree.chart.util$GradientPaintTransformType#toString()": 0.0,
        "org.jfree.chart.util$ObjectList#ObjectList()": 518.6774193548387,
        "org.jfree.chart.util$ObjectList#ObjectList(int)": 0.0,
        "org.jfree.chart.util$ObjectList#get(int)": 197.38709677419354,
        "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)": 156.74193548387098,
        "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)": 198.3548387096774,
        "org.jfree.chart.util$PaintList#PaintList()": 449.9677419354839,
        "org.jfree.chart.util$PaintList#equals(java.lang.Object)": 231.53125,
        "org.jfree.chart.util$PaintList#getPaint(int)": 81.375,
        "org.jfree.chart.util$PaintList#hashCode()": 45.53125,
        "org.jfree.chart.util$PaintList#readObject(java.io.ObjectInputStream)": 66.84375,
        "org.jfree.chart.util$PaintList#setPaint(int,java.awt.Paint)": 84.28125,
        "org.jfree.chart.util$PaintList#writeObject(java.io.ObjectOutputStream)": 66.84375,
        "org.jfree.chart.util$RectangleInsets#<clinit>()": 448.03225806451616,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets()": 0.0,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)": 416.0967741935484,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets(org.jfree.chart.util.UnitType,double,double,double,double)": 448.03225806451616,
        "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)": 69.75,
        "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)": 81.375,
        "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)": 69.75,
        "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)": 81.375,
        "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)": 69.75,
        "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)": 81.375,
        "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)": 69.75,
        "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)": 81.375,
        "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)": 0.0,
        "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)": 0.0,
        "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D)": 62.96875,
        "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)": 62.96875,
        "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)": 164.6875,
        "org.jfree.chart.util$RectangleInsets#extendHeight(double)": 57.15625,
        "org.jfree.chart.util$RectangleInsets#extendWidth(double)": 57.15625,
        "org.jfree.chart.util$RectangleInsets#getBottom()": 62.96875,
        "org.jfree.chart.util$RectangleInsets#getLeft()": 62.96875,
        "org.jfree.chart.util$RectangleInsets#getRight()": 62.96875,
        "org.jfree.chart.util$RectangleInsets#getTop()": 62.96875,
        "org.jfree.chart.util$RectangleInsets#getUnitType()": 0.0,
        "org.jfree.chart.util$RectangleInsets#hashCode()": 0.0,
        "org.jfree.chart.util$RectangleInsets#toString()": 0.0,
        "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)": 67.8125,
        "org.jfree.chart.util$RectangleInsets#trimHeight(double)": 45.53125,
        "org.jfree.chart.util$RectangleInsets#trimWidth(double)": 45.53125,
        "org.jfree.chart.util$ResourceBundleWrapper#ResourceBundleWrapper()": 0.0,
        "org.jfree.chart.util$ResourceBundleWrapper#getBundle(java.lang.String)": 272.8709677419355,
        "org.jfree.chart.util$ResourceBundleWrapper#getBundle(java.lang.String,java.util.Locale)": 0.0,
        "org.jfree.chart.util$ResourceBundleWrapper#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)": 0.0,
        "org.jfree.chart.util$ResourceBundleWrapper#removeCodeBase(java.net.URL,java.net.URLClassLoader)": 0.0,
        "org.jfree.chart.util$ShapeList#ShapeList()": 443.19354838709677,
        "org.jfree.chart.util$ShapeList#clone()": 68.78125,
        "org.jfree.chart.util$ShapeList#equals(java.lang.Object)": 226.6875,
        "org.jfree.chart.util$ShapeList#getShape(int)": 31.0,
        "org.jfree.chart.util$ShapeList#hashCode()": 0.0,
        "org.jfree.chart.util$ShapeList#readObject(java.io.ObjectInputStream)": 65.875,
        "org.jfree.chart.util$ShapeList#setShape(int,java.awt.Shape)": 28.09375,
        "org.jfree.chart.util$ShapeList#writeObject(java.io.ObjectOutputStream)": 65.875,
        "org.jfree.chart.util$SortOrder#<clinit>()": 88.03225806451613,
        "org.jfree.chart.util$SortOrder#SortOrder(java.lang.String)": 88.03225806451613,
        "org.jfree.chart.util$SortOrder#equals(java.lang.Object)": 15.5,
        "org.jfree.chart.util$SortOrder#hashCode()": 0.0,
        "org.jfree.chart.util$SortOrder#readResolve()": 7.75,
        "org.jfree.chart.util$SortOrder#toString()": 11.625,
        "org.jfree.chart.util$StandardGradientPaintTransformer#StandardGradientPaintTransformer()": 237.34375,
        "org.jfree.chart.util$StandardGradientPaintTransformer#StandardGradientPaintTransformer(org.jfree.chart.util.GradientPaintTransformType)": 238.3125,
        "org.jfree.chart.util$StandardGradientPaintTransformer#clone()": 9.6875,
        "org.jfree.chart.util$StandardGradientPaintTransformer#equals(java.lang.Object)": 83.3125,
        "org.jfree.chart.util$StandardGradientPaintTransformer#getType()": 0.0,
        "org.jfree.chart.util$StandardGradientPaintTransformer#hashCode()": 0.96875,
        "org.jfree.chart.util$StandardGradientPaintTransformer#transform(java.awt.GradientPaint,java.awt.Shape)": 0.96875,
        "org.jfree.chart.util$StrokeList#StrokeList()": 448.03225806451616,
        "org.jfree.chart.util$StrokeList#clone()": 69.75,
        "org.jfree.chart.util$StrokeList#equals(java.lang.Object)": 229.59375,
        "org.jfree.chart.util$StrokeList#getStroke(int)": 51.34375,
        "org.jfree.chart.util$StrokeList#hashCode()": 45.53125,
        "org.jfree.chart.util$StrokeList#readObject(java.io.ObjectInputStream)": 66.84375,
        "org.jfree.chart.util$StrokeList#setStroke(int,java.awt.Stroke)": 47.46875,
        "org.jfree.chart.util$StrokeList#writeObject(java.io.ObjectOutputStream)": 66.84375,
        "org.jfree.chart.util$UnitType#<clinit>()": 454.80645161290323,
        "org.jfree.chart.util$UnitType#UnitType(java.lang.String)": 454.80645161290323,
        "org.jfree.chart.util$UnitType#equals(java.lang.Object)": 65.875,
        "org.jfree.chart.util$UnitType#hashCode()": 0.0,
        "org.jfree.chart.util$UnitType#readResolve()": 65.875,
        "org.jfree.chart.util$UnitType#toString()": 0.0,
        "org.jfree.data$KeyedObject#KeyedObject(java.lang.Comparable,java.lang.Object)": 200.29032258064515,
        "org.jfree.data$KeyedObject#clone()": 12.59375,
        "org.jfree.data$KeyedObject#equals(java.lang.Object)": 3.875,
        "org.jfree.data$KeyedObject#getKey()": 220.875,
        "org.jfree.data$KeyedObject#getObject()": 186.96875,
        "org.jfree.data$KeyedObject#setObject(java.lang.Object)": 20.34375,
        "org.jfree.data$KeyedObjects#KeyedObjects()": 203.19354838709677,
        "org.jfree.data$KeyedObjects#addObject(java.lang.Comparable,java.lang.Object)": 10.65625,
        "org.jfree.data$KeyedObjects#clear()": 0.96875,
        "org.jfree.data$KeyedObjects#clone()": 11.625,
        "org.jfree.data$KeyedObjects#equals(java.lang.Object)": 2.90625,
        "org.jfree.data$KeyedObjects#getIndex(java.lang.Comparable)": 196.41935483870967,
        "org.jfree.data$KeyedObjects#getItemCount()": 22.28125,
        "org.jfree.data$KeyedObjects#getKey(int)": 17.4375,
        "org.jfree.data$KeyedObjects#getKeys()": 4.84375,
        "org.jfree.data$KeyedObjects#getObject(int)": 186.0,
        "org.jfree.data$KeyedObjects#getObject(java.lang.Comparable)": 154.03125,
        "org.jfree.data$KeyedObjects#hashCode()": 0.0,
        "org.jfree.data$KeyedObjects#insertValue(int,java.lang.Comparable,java.lang.Object)": 0.0,
        "org.jfree.data$KeyedObjects#removeValue(int)": 5.8125,
        "org.jfree.data$KeyedObjects#removeValue(java.lang.Comparable)": 0.96875,
        "org.jfree.data$KeyedObjects#setObject(java.lang.Comparable,java.lang.Object)": 196.41935483870967,
        "org.jfree.data$KeyedObjects#sortByKeys(org.jfree.chart.util.SortOrder)": 1.9375,
        "org.jfree.data$KeyedObjects#sortByObjects(org.jfree.chart.util.SortOrder)": 1.9375,
        "org.jfree.data$KeyedObjects2D#KeyedObjects2D()": 177.06451612903226,
        "org.jfree.data$KeyedObjects2D#addObject(java.lang.Object,java.lang.Comparable,java.lang.Comparable)": 143.19354838709677,
        "org.jfree.data$KeyedObjects2D#clear()": 1.9375,
        "org.jfree.data$KeyedObjects2D#clone()": 6.78125,
        "org.jfree.data$KeyedObjects2D#equals(java.lang.Object)": 12.59375,
        "org.jfree.data$KeyedObjects2D#getColumnCount()": 157.90625,
        "org.jfree.data$KeyedObjects2D#getColumnIndex(java.lang.Comparable)": 45.53125,
        "org.jfree.data$KeyedObjects2D#getColumnKey(int)": 36.8125,
        "org.jfree.data$KeyedObjects2D#getColumnKeys()": 24.21875,
        "org.jfree.data$KeyedObjects2D#getObject(int,int)": 144.34375,
        "org.jfree.data$KeyedObjects2D#getObject(java.lang.Comparable,java.lang.Comparable)": 27.125,
        "org.jfree.data$KeyedObjects2D#getRowCount()": 154.03125,
        "org.jfree.data$KeyedObjects2D#getRowIndex(java.lang.Comparable)": 89.125,
        "org.jfree.data$KeyedObjects2D#getRowKey(int)": 91.0625,
        "org.jfree.data$KeyedObjects2D#getRowKeys()": 25.1875,
        "org.jfree.data$KeyedObjects2D#hashCode()": 0.0,
        "org.jfree.data$KeyedObjects2D#removeColumn(int)": 0.96875,
        "org.jfree.data$KeyedObjects2D#removeColumn(java.lang.Comparable)": 3.875,
        "org.jfree.data$KeyedObjects2D#removeObject(java.lang.Comparable,java.lang.Comparable)": 3.875,
        "org.jfree.data$KeyedObjects2D#removeRow(int)": 2.90625,
        "org.jfree.data$KeyedObjects2D#removeRow(java.lang.Comparable)": 1.9375,
        "org.jfree.data$KeyedObjects2D#setObject(java.lang.Object,java.lang.Comparable,java.lang.Comparable)": 157.70967741935485,
        "org.jfree.data$SelectableValue#SelectableValue(java.lang.Number)": 130.61290322580646,
        "org.jfree.data$SelectableValue#SelectableValue(java.lang.Number,boolean)": 130.61290322580646,
        "org.jfree.data$SelectableValue#getValue()": 128.84375,
        "org.jfree.data$SelectableValue#isSelected()": 12.59375,
        "org.jfree.data$SelectableValue#setSelected(boolean)": 0.0,
        "org.jfree.data$UnknownKeyException#UnknownKeyException(java.lang.String)": 19.375,
        "org.jfree.data.category$AbstractCategoryDataset#AbstractCategoryDataset()": 120.93548387096774,
        "org.jfree.data.category$AbstractCategoryDataset#getSelectionState()": 11.625,
        "org.jfree.data.category$AbstractCategoryDataset#setSelectionState(org.jfree.data.category.CategoryDatasetSelectionState)": 120.93548387096774,
        "org.jfree.data.category$DefaultCategoryDataset#DefaultCategoryDataset()": 120.93548387096774,
        "org.jfree.data.category$DefaultCategoryDataset#addValue(double,java.lang.Comparable,java.lang.Comparable)": 58.03225806451613,
        "org.jfree.data.category$DefaultCategoryDataset#addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)": 96.74193548387098,
        "org.jfree.data.category$DefaultCategoryDataset#clear()": 1.9375,
        "org.jfree.data.category$DefaultCategoryDataset#clearSelection()": 0.0,
        "org.jfree.data.category$DefaultCategoryDataset#clone()": 2.90625,
        "org.jfree.data.category$DefaultCategoryDataset#equals(java.lang.Object)": 11.625,
        "org.jfree.data.category$DefaultCategoryDataset#fireSelectionEvent()": 0.0,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnCount()": 114.3125,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnIndex(java.lang.Comparable)": 4.84375,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnKey(int)": 19.375,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnKeys()": 11.625,
        "org.jfree.data.category$DefaultCategoryDataset#getRowCount()": 112.375,
        "org.jfree.data.category$DefaultCategoryDataset#getRowIndex(java.lang.Comparable)": 49.40625,
        "org.jfree.data.category$DefaultCategoryDataset#getRowKey(int)": 73.625,
        "org.jfree.data.category$DefaultCategoryDataset#getRowKeys()": 12.59375,
        "org.jfree.data.category$DefaultCategoryDataset#getValue(int,int)": 100.75,
        "org.jfree.data.category$DefaultCategoryDataset#getValue(java.lang.Comparable,java.lang.Comparable)": 20.34375,
        "org.jfree.data.category$DefaultCategoryDataset#hashCode()": 0.0,
        "org.jfree.data.category$DefaultCategoryDataset#incrementValue(double,java.lang.Comparable,java.lang.Comparable)": 0.96875,
        "org.jfree.data.category$DefaultCategoryDataset#isSelected(int,int)": 11.625,
        "org.jfree.data.category$DefaultCategoryDataset#removeColumn(int)": 0.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeColumn(java.lang.Comparable)": 1.9375,
        "org.jfree.data.category$DefaultCategoryDataset#removeRow(int)": 0.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeRow(java.lang.Comparable)": 0.96875,
        "org.jfree.data.category$DefaultCategoryDataset#removeValue(java.lang.Comparable,java.lang.Comparable)": 0.96875,
        "org.jfree.data.category$DefaultCategoryDataset#setSelected(int,int,boolean)": 0.0,
        "org.jfree.data.category$DefaultCategoryDataset#setSelected(int,int,boolean,boolean)": 0.0,
        "org.jfree.data.category$DefaultCategoryDataset#setValue(double,java.lang.Comparable,java.lang.Comparable)": 8.71875,
        "org.jfree.data.category$DefaultCategoryDataset#setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)": 11.625,
        "org.jfree.data.event$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset,org.jfree.chart.event.DatasetChangeInfo)": 545.7741935483871,
        "org.jfree.data.event$DatasetChangeEvent#getDataset()": 0.0,
        "org.jfree.data.event$DatasetChangeEvent#getInfo()": 0.0,
        "org.jfree.data.general$AbstractDataset#AbstractDataset()": 551.5806451612904,
        "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.event.DatasetChangeListener)": 239.96774193548384,
        "org.jfree.data.general$AbstractDataset#clone()": 41.65625,
        "org.jfree.data.general$AbstractDataset#fireDatasetChanged(org.jfree.chart.event.DatasetChangeInfo)": 477.06451612903226,
        "org.jfree.data.general$AbstractDataset#getGroup()": 3.875,
        "org.jfree.data.general$AbstractDataset#hasListener(java.util.EventListener)": 2.90625,
        "org.jfree.data.general$AbstractDataset#notifyListeners(org.jfree.data.event.DatasetChangeEvent)": 477.06451612903226,
        "org.jfree.data.general$AbstractDataset#readObject(java.io.ObjectInputStream)": 62.96875,
        "org.jfree.data.general$AbstractDataset#removeChangeListener(org.jfree.data.event.DatasetChangeListener)": 19.375,
        "org.jfree.data.general$AbstractDataset#setGroup(org.jfree.data.general.DatasetGroup)": 0.0,
        "org.jfree.data.general$AbstractDataset#validateObject()": 62.96875,
        "org.jfree.data.general$AbstractDataset#writeObject(java.io.ObjectOutputStream)": 62.96875,
        "org.jfree.data.general$DatasetGroup#DatasetGroup()": 552.5483870967741,
        "org.jfree.data.general$DatasetGroup#DatasetGroup(java.lang.String)": 0.0,
        "org.jfree.data.general$DatasetGroup#clone()": 0.0,
        "org.jfree.data.general$DatasetGroup#equals(java.lang.Object)": 0.96875,
        "org.jfree.data.general$DatasetGroup#getID()": 0.0
    },
    "Chart-10": {},
    "Chart-11": {
        "org.jfree.chart.util$ShapeUtilities#<clinit>()": 223.51612903225805,
        "org.jfree.chart.util$ShapeUtilities#ShapeUtilities()": 0.0,
        "org.jfree.chart.util$ShapeUtilities#clone(java.awt.Shape)": 80.40625,
        "org.jfree.chart.util$ShapeUtilities#contains(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#createDiagonalCross(float,float)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#createDiamond(float)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#createDownTriangle(float)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#createLineRegion(java.awt.geom.Line2D,float)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#createRegularCross(float,float)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#createTranslatedShape(java.awt.Shape,double,double)": 6.78125,
        "org.jfree.chart.util$ShapeUtilities#createTranslatedShape(java.awt.Shape,org.jfree.chart.util.RectangleAnchor,double,double)": 49.40625,
        "org.jfree.chart.util$ShapeUtilities#createUpTriangle(float)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#drawRotatedShape(java.awt.Graphics2D,java.awt.Shape,double,float,float)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Polygon,java.awt.Polygon)": 77.5,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)": 155.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Arc2D,java.awt.geom.Arc2D)": 0.96875,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Ellipse2D,java.awt.geom.Ellipse2D)": 77.5,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.GeneralPath,java.awt.geom.GeneralPath)": -16.483870967741936,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Line2D,java.awt.geom.Line2D)": 51.34375,
        "org.jfree.chart.util$ShapeUtilities#getPointInRectangle(double,double,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#intersects(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)": 0.96875,
        "org.jfree.chart.util$ShapeUtilities#rotateShape(java.awt.Shape,double,float,float)": 31.0
    },
    "Chart-12": {
        "org.jfree.chart$ChartColor#<clinit>()": 227.38709677419354,
        "org.jfree.chart$ChartColor#ChartColor(int,int,int)": 0.0,
        "org.jfree.chart$ChartColor#createDefaultPaintArray()": 227.38709677419354,
        "org.jfree.chart$JFreeChart#<clinit>()": 131.58064516129033,
        "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)": 123.83870967741936,
        "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,org.jfree.chart.plot.Plot)": 0.0,
        "org.jfree.chart$JFreeChart#JFreeChart(org.jfree.chart.plot.Plot)": 21.258064516129032,
        "org.jfree.chart$JFreeChart#addChangeListener(org.jfree.chart.event.ChartChangeListener)": 20.34375,
        "org.jfree.chart$JFreeChart#addLegend(org.jfree.chart.title.LegendTitle)": 0.0,
        "org.jfree.chart$JFreeChart#addProgressListener(org.jfree.chart.event.ChartProgressListener)": 0.96875,
        "org.jfree.chart$JFreeChart#addSubtitle(int,org.jfree.chart.title.Title)": 0.96875,
        "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)": 1.9375,
        "org.jfree.chart$JFreeChart#clearSubtitles()": 0.0,
        "org.jfree.chart$JFreeChart#clone()": 0.0,
        "org.jfree.chart$JFreeChart#createAlignedRectangle2D(org.jfree.chart.util.Size2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)": 62.0,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int)": 3.875,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)": 0.0,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)": 32.9375,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)": 32.9375,
        "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)": 62.0,
        "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)": 0.0,
        "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 62.0,
        "org.jfree.chart$JFreeChart#equals(java.lang.Object)": 11.625,
        "org.jfree.chart$JFreeChart#fireChartChanged()": -25.193548387096776,
        "org.jfree.chart$JFreeChart#getAntiAlias()": 0.0,
        "org.jfree.chart$JFreeChart#getBackgroundImage()": 0.0,
        "org.jfree.chart$JFreeChart#getBackgroundImageAlignment()": 0.0,
        "org.jfree.chart$JFreeChart#getBackgroundImageAlpha()": 0.0,
        "org.jfree.chart$JFreeChart#getBackgroundPaint()": 0.0,
        "org.jfree.chart$JFreeChart#getBorderPaint()": 0.0,
        "org.jfree.chart$JFreeChart#getBorderStroke()": 0.0,
        "org.jfree.chart$JFreeChart#getCategoryPlot()": 0.0,
        "org.jfree.chart$JFreeChart#getLegend()": -26.161290322580644,
        "org.jfree.chart$JFreeChart#getLegend(int)": -26.161290322580644,
        "org.jfree.chart$JFreeChart#getPadding()": 0.0,
        "org.jfree.chart$JFreeChart#getPlot()": 72.65625,
        "org.jfree.chart$JFreeChart#getRenderingHints()": 0.0,
        "org.jfree.chart$JFreeChart#getSubtitle(int)": 9.6875,
        "org.jfree.chart$JFreeChart#getSubtitleCount()": 12.59375,
        "org.jfree.chart$JFreeChart#getSubtitles()": 0.96875,
        "org.jfree.chart$JFreeChart#getTextAntiAlias()": 0.0,
        "org.jfree.chart$JFreeChart#getTitle()": 0.96875,
        "org.jfree.chart$JFreeChart#getXYPlot()": 0.0,
        "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)": 0.0,
        "org.jfree.chart$JFreeChart#isBorderVisible()": 62.0,
        "org.jfree.chart$JFreeChart#isNotify()": 0.0,
        "org.jfree.chart$JFreeChart#main(java.lang.String[])": 0.0,
        "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)": 45.45161290322581,
        "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartProgressEvent)": 62.0,
        "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)": 69.75,
        "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)": 8.71875,
        "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)": 0.96875,
        "org.jfree.chart$JFreeChart#removeLegend()": -28.096774193548388,
        "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)": 0.96875,
        "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)": -28.096774193548388,
        "org.jfree.chart$JFreeChart#setAntiAlias(boolean)": 0.0,
        "org.jfree.chart$JFreeChart#setBackgroundImage(java.awt.Image)": 0.96875,
        "org.jfree.chart$JFreeChart#setBackgroundImageAlignment(int)": 0.96875,
        "org.jfree.chart$JFreeChart#setBackgroundImageAlpha(float)": 0.96875,
        "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)": -27.129032258064516,
        "org.jfree.chart$JFreeChart#setBorderPaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart$JFreeChart#setBorderStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart$JFreeChart#setBorderVisible(boolean)": 0.96875,
        "org.jfree.chart$JFreeChart#setNotify(boolean)": 0.0,
        "org.jfree.chart$JFreeChart#setPadding(org.jfree.chart.util.RectangleInsets)": 0.96875,
        "org.jfree.chart$JFreeChart#setRenderingHints(java.awt.RenderingHints)": 0.96875,
        "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)": 0.0,
        "org.jfree.chart$JFreeChart#setTextAntiAlias(boolean)": 0.0,
        "org.jfree.chart$JFreeChart#setTextAntiAlias(java.lang.Object)": 0.0,
        "org.jfree.chart$JFreeChart#setTitle(java.lang.String)": 0.96875,
        "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)": -27.129032258064516,
        "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)": 2.90625,
        "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)": 8.71875,
        "org.jfree.chart$PaintMap#PaintMap()": 10.612903225806448,
        "org.jfree.chart$PaintMap#clear()": 0.0,
        "org.jfree.chart$PaintMap#clone()": 0.96875,
        "org.jfree.chart$PaintMap#containsKey(java.lang.Comparable)": 0.0,
        "org.jfree.chart$PaintMap#equals(java.lang.Object)": 15.5,
        "org.jfree.chart$PaintMap#getPaint(java.lang.Comparable)": 9.6875,
        "org.jfree.chart$PaintMap#put(java.lang.Comparable,java.awt.Paint)": 9.6875,
        "org.jfree.chart$PaintMap#readObject(java.io.ObjectInputStream)": 7.75,
        "org.jfree.chart$PaintMap#writeObject(java.io.ObjectOutputStream)": 7.75,
        "org.jfree.chart$StrokeMap#StrokeMap()": 9.645161290322584,
        "org.jfree.chart$StrokeMap#clear()": 0.0,
        "org.jfree.chart$StrokeMap#clone()": 0.96875,
        "org.jfree.chart$StrokeMap#containsKey(java.lang.Comparable)": 0.0,
        "org.jfree.chart$StrokeMap#equals(java.lang.Object)": 15.5,
        "org.jfree.chart$StrokeMap#getStroke(java.lang.Comparable)": 8.71875,
        "org.jfree.chart$StrokeMap#put(java.lang.Comparable,java.awt.Stroke)": 5.8125,
        "org.jfree.chart$StrokeMap#readObject(java.io.ObjectInputStream)": 7.75,
        "org.jfree.chart$StrokeMap#writeObject(java.io.ObjectOutputStream)": 7.75,
        "org.jfree.chart.block$AbstractBlock#AbstractBlock()": 173.19354838709677,
        "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D)": 0.96875,
        "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$AbstractBlock#calculateTotalHeight(double)": 64.90625,
        "org.jfree.chart.block$AbstractBlock#calculateTotalWidth(double)": 64.90625,
        "org.jfree.chart.block$AbstractBlock#clone()": 12.59375,
        "org.jfree.chart.block$AbstractBlock#drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 62.0,
        "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)": 55.21875,
        "org.jfree.chart.block$AbstractBlock#getBounds()": 50.375,
        "org.jfree.chart.block$AbstractBlock#getContentXOffset()": 0.0,
        "org.jfree.chart.block$AbstractBlock#getContentYOffset()": 0.0,
        "org.jfree.chart.block$AbstractBlock#getFrame()": 61.03125,
        "org.jfree.chart.block$AbstractBlock#getHeight()": 4.84375,
        "org.jfree.chart.block$AbstractBlock#getID()": 0.0,
        "org.jfree.chart.block$AbstractBlock#getMargin()": 0.0,
        "org.jfree.chart.block$AbstractBlock#getPadding()": 0.0,
        "org.jfree.chart.block$AbstractBlock#getWidth()": 4.84375,
        "org.jfree.chart.block$AbstractBlock#readObject(java.io.ObjectInputStream)": 19.375,
        "org.jfree.chart.block$AbstractBlock#setBounds(java.awt.geom.Rectangle2D)": 57.15625,
        "org.jfree.chart.block$AbstractBlock#setFrame(org.jfree.chart.block.BlockFrame)": 107.38709677419354,
        "org.jfree.chart.block$AbstractBlock#setHeight(double)": 20.34375,
        "org.jfree.chart.block$AbstractBlock#setID(java.lang.String)": 0.96875,
        "org.jfree.chart.block$AbstractBlock#setMargin(double,double,double,double)": 0.0,
        "org.jfree.chart.block$AbstractBlock#setMargin(org.jfree.chart.util.RectangleInsets)": 107.38709677419354,
        "org.jfree.chart.block$AbstractBlock#setPadding(double,double,double,double)": 54.25,
        "org.jfree.chart.block$AbstractBlock#setPadding(org.jfree.chart.util.RectangleInsets)": 154.80645161290323,
        "org.jfree.chart.block$AbstractBlock#setWidth(double)": 20.34375,
        "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)": 62.96875,
        "org.jfree.chart.block$AbstractBlock#trimBorder(java.awt.geom.Rectangle2D)": 62.0,
        "org.jfree.chart.block$AbstractBlock#trimMargin(java.awt.geom.Rectangle2D)": 62.0,
        "org.jfree.chart.block$AbstractBlock#trimPadding(java.awt.geom.Rectangle2D)": 62.0,
        "org.jfree.chart.block$AbstractBlock#trimToContentHeight(double)": 62.0,
        "org.jfree.chart.block$AbstractBlock#trimToContentHeight(org.jfree.data.Range)": 62.0,
        "org.jfree.chart.block$AbstractBlock#trimToContentWidth(double)": 62.0,
        "org.jfree.chart.block$AbstractBlock#trimToContentWidth(org.jfree.data.Range)": 62.0,
        "org.jfree.chart.block$AbstractBlock#writeObject(java.io.ObjectOutputStream)": 19.375,
        "org.jfree.chart.block$BlockBorder#<clinit>()": 176.09677419354838,
        "org.jfree.chart.block$BlockBorder#BlockBorder()": 0.96875,
        "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double)": 0.0,
        "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double,java.awt.Paint)": 0.0,
        "org.jfree.chart.block$BlockBorder#BlockBorder(java.awt.Paint)": 2.90625,
        "org.jfree.chart.block$BlockBorder#BlockBorder(org.jfree.chart.util.RectangleInsets,java.awt.Paint)": 176.09677419354838,
        "org.jfree.chart.block$BlockBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 62.0,
        "org.jfree.chart.block$BlockBorder#equals(java.lang.Object)": 57.15625,
        "org.jfree.chart.block$BlockBorder#getInsets()": 65.875,
        "org.jfree.chart.block$BlockBorder#getPaint()": 0.0,
        "org.jfree.chart.block$BlockBorder#readObject(java.io.ObjectInputStream)": 20.34375,
        "org.jfree.chart.block$BlockBorder#writeObject(java.io.ObjectOutputStream)": 20.34375,
        "org.jfree.chart.block$BlockContainer#BlockContainer()": 4.84375,
        "org.jfree.chart.block$BlockContainer#BlockContainer(org.jfree.chart.block.Arrangement)": 119.96774193548387,
        "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block)": 60.0625,
        "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block,java.lang.Object)": 60.0625,
        "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 53.28125,
        "org.jfree.chart.block$BlockContainer#clear()": 62.96875,
        "org.jfree.chart.block$BlockContainer#clone()": 0.96875,
        "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 61.03125,
        "org.jfree.chart.block$BlockContainer#equals(java.lang.Object)": 6.78125,
        "org.jfree.chart.block$BlockContainer#getArrangement()": 0.0,
        "org.jfree.chart.block$BlockContainer#getBlocks()": 51.34375,
        "org.jfree.chart.block$BlockContainer#isEmpty()": 61.03125,
        "org.jfree.chart.block$BlockContainer#setArrangement(org.jfree.chart.block.Arrangement)": 62.0,
        "org.jfree.chart.block$ColumnArrangement#ColumnArrangement()": 110.29032258064515,
        "org.jfree.chart.block$ColumnArrangement#ColumnArrangement(org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,double,double)": 0.96875,
        "org.jfree.chart.block$ColumnArrangement#add(org.jfree.chart.block.Block,java.lang.Object)": 0.96875,
        "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)": 0.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$ColumnArrangement#clear()": 0.0,
        "org.jfree.chart.block$ColumnArrangement#equals(java.lang.Object)": 14.53125,
        "org.jfree.chart.block$FlowArrangement#FlowArrangement()": 113.19354838709677,
        "org.jfree.chart.block$FlowArrangement#FlowArrangement(org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,double,double)": 116.09677419354838,
        "org.jfree.chart.block$FlowArrangement#add(org.jfree.chart.block.Block,java.lang.Object)": 50.375,
        "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 49.40625,
        "org.jfree.chart.block$FlowArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.96875,
        "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.96875,
        "org.jfree.chart.block$FlowArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)": 49.40625,
        "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$FlowArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$FlowArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 49.40625,
        "org.jfree.chart.block$FlowArrangement#clear()": 61.03125,
        "org.jfree.chart.block$FlowArrangement#equals(java.lang.Object)": 17.4375,
        "org.jfree.chart.block$LineBorder#LineBorder()": 106.41935483870967,
        "org.jfree.chart.block$LineBorder#LineBorder(java.awt.Paint,java.awt.Stroke,org.jfree.chart.util.RectangleInsets)": 108.35483870967741,
        "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 61.03125,
        "org.jfree.chart.block$LineBorder#equals(java.lang.Object)": 10.65625,
        "org.jfree.chart.block$LineBorder#getInsets()": 61.03125,
        "org.jfree.chart.block$LineBorder#getPaint()": 49.40625,
        "org.jfree.chart.block$LineBorder#getStroke()": 49.40625,
        "org.jfree.chart.block$LineBorder#readObject(java.io.ObjectInputStream)": 8.71875,
        "org.jfree.chart.block$LineBorder#writeObject(java.io.ObjectOutputStream)": 8.71875,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape)": 14.53125,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String)": 14.53125,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String,java.lang.String)": 30.03125,
        "org.jfree.chart.entity$ChartEntity#clone()": 5.8125,
        "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)": 18.40625,
        "org.jfree.chart.entity$ChartEntity#getArea()": 0.0,
        "org.jfree.chart.entity$ChartEntity#getImageMapAreaTag(org.jfree.chart.imagemap.ToolTipTagFragmentGenerator,org.jfree.chart.imagemap.URLTagFragmentGenerator)": 0.0,
        "org.jfree.chart.entity$ChartEntity#getPolyCoords(java.awt.Shape)": 0.0,
        "org.jfree.chart.entity$ChartEntity#getRectCoords(java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.entity$ChartEntity#getShapeCoords()": 0.0,
        "org.jfree.chart.entity$ChartEntity#getShapeType()": 0.0,
        "org.jfree.chart.entity$ChartEntity#getToolTipText()": 0.0,
        "org.jfree.chart.entity$ChartEntity#getURLText()": 0.0,
        "org.jfree.chart.entity$ChartEntity#hashCode()": 0.0,
        "org.jfree.chart.entity$ChartEntity#readObject(java.io.ObjectInputStream)": 5.8125,
        "org.jfree.chart.entity$ChartEntity#setArea(java.awt.Shape)": 4.84375,
        "org.jfree.chart.entity$ChartEntity#setToolTipText(java.lang.String)": 14.53125,
        "org.jfree.chart.entity$ChartEntity#setURLText(java.lang.String)": 14.53125,
        "org.jfree.chart.entity$ChartEntity#toString()": 0.0,
        "org.jfree.chart.entity$ChartEntity#writeObject(java.io.ObjectOutputStream)": 5.8125,
        "org.jfree.chart.entity$PieSectionEntity#PieSectionEntity(java.awt.Shape,org.jfree.data.general.PieDataset,int,int,java.lang.Comparable,java.lang.String,java.lang.String)": 5.8125,
        "org.jfree.chart.entity$PieSectionEntity#getDataset()": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#getPieIndex()": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#getSectionIndex()": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#getSectionKey()": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#setDataset(org.jfree.data.general.PieDataset)": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#setPieIndex(int)": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#setSectionIndex(int)": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#setSectionKey(java.lang.Comparable)": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#toString()": 0.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)": 468.35483870967744,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart)": 0.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart,org.jfree.chart.event.ChartChangeEventType)": 468.35483870967744,
        "org.jfree.chart.event$ChartChangeEvent#getChart()": 0.0,
        "org.jfree.chart.event$ChartChangeEvent#getType()": 0.0,
        "org.jfree.chart.event$ChartChangeEvent#setChart(org.jfree.chart.JFreeChart)": 72.65625,
        "org.jfree.chart.event$ChartChangeEvent#setType(org.jfree.chart.event.ChartChangeEventType)": 200.53125,
        "org.jfree.chart.event$ChartChangeEventType#<clinit>()": 468.35483870967744,
        "org.jfree.chart.event$ChartChangeEventType#ChartChangeEventType(java.lang.String)": 468.35483870967744,
        "org.jfree.chart.event$ChartChangeEventType#equals(java.lang.Object)": 0.0,
        "org.jfree.chart.event$ChartChangeEventType#hashCode()": 0.0,
        "org.jfree.chart.event$ChartChangeEventType#readResolve()": 0.0,
        "org.jfree.chart.event$ChartChangeEventType#toString()": 0.0,
        "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)": 244.125,
        "org.jfree.chart.event$PlotChangeEvent#getPlot()": 0.0,
        "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)": 111.25806451612902,
        "org.jfree.chart.event$TitleChangeEvent#getTitle()": 0.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#AbstractPieItemLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)": 9.645161290322584,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#clone()": 8.71875,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)": 2.90625,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#equals(java.lang.Object)": 24.21875,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)": 2.90625,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#getLabelFormat()": 0.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#getNumberFormat()": 2.90625,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#getPercentFormat()": 0.96875,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator()": 6.741935483870968,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String)": 0.96875,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)": 6.741935483870968,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.util.Locale)": 0.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.util.Locale)": 0.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#clone()": 7.75,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#equals(java.lang.Object)": 21.3125,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateAttributedSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)": 0.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)": 2.90625,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#getAttributedLabel(int)": 0.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#setAttributedLabel(int,java.text.AttributedString)": 0.96875,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#AbstractPieLabelDistributor()": 3.8387096774193523,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#addPieLabelRecord(org.jfree.chart.plot.PieLabelRecord)": 1.9375,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#clear()": 1.9375,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#getItemCount()": 1.9375,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)": 1.9375,
        "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()": 227.38709677419354,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier()": 227.38709677419354,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])": 227.38709677419354,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])": 1.9375,
        "org.jfree.chart.plot$DefaultDrawingSupplier#clone()": 25.1875,
        "org.jfree.chart.plot$DefaultDrawingSupplier#createStandardSeriesShapes()": 227.38709677419354,
        "org.jfree.chart.plot$DefaultDrawingSupplier#equalShapes(java.awt.Shape[],java.awt.Shape[])": 76.53125,
        "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)": 76.53125,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextFillPaint()": 0.96875,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlinePaint()": 1.9375,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlineStroke()": 0.96875,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextPaint()": 70.71875,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextShape()": 21.3125,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextStroke()": 0.96875,
        "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double)": 227.38709677419354,
        "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double,double)": 227.38709677419354,
        "org.jfree.chart.plot$DefaultDrawingSupplier#readObject(java.io.ObjectInputStream)": 31.96875,
        "org.jfree.chart.plot$DefaultDrawingSupplier#writeObject(java.io.ObjectOutputStream)": 31.96875,
        "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot()": -29.064516129032256,
        "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)": -28.096774193548388,
        "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)": 2.90625,
        "org.jfree.chart.plot$MultiplePiePlot#getAggregatedItemsKey()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#getAggregatedItemsPaint()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#getDataExtractOrder()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#getDataset()": -31.0,
        "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#getLimit()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#getPieChart()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#getPlotType()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#prefetchSectionPaints()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#readObject(java.io.ObjectInputStream)": 0.96875,
        "org.jfree.chart.plot$MultiplePiePlot#setAggregatedItemsKey(java.lang.Comparable)": 0.96875,
        "org.jfree.chart.plot$MultiplePiePlot#setAggregatedItemsPaint(java.awt.Paint)": 1.9375,
        "org.jfree.chart.plot$MultiplePiePlot#setDataExtractOrder(org.jfree.chart.util.TableOrder)": 0.96875,
        "org.jfree.chart.plot$MultiplePiePlot#setDataset(org.jfree.data.category.CategoryDataset)": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#setLimit(double)": 0.96875,
        "org.jfree.chart.plot$MultiplePiePlot#setPieChart(org.jfree.chart.JFreeChart)": 0.96875,
        "org.jfree.chart.plot$MultiplePiePlot#writeObject(java.io.ObjectOutputStream)": 0.96875,
        "org.jfree.chart.plot$PieLabelDistributor#PieLabelDistributor(int)": 3.8387096774193523,
        "org.jfree.chart.plot$PieLabelDistributor#adjustDownwards(double,double)": 0.96875,
        "org.jfree.chart.plot$PieLabelDistributor#adjustInwards()": 0.0,
        "org.jfree.chart.plot$PieLabelDistributor#adjustUpwards(double,double)": 0.96875,
        "org.jfree.chart.plot$PieLabelDistributor#distributeLabels(double,double)": 1.9375,
        "org.jfree.chart.plot$PieLabelDistributor#isOverlap()": 1.9375,
        "org.jfree.chart.plot$PieLabelDistributor#sort()": 1.9375,
        "org.jfree.chart.plot$PieLabelDistributor#spreadEvenly(double,double)": 0.96875,
        "org.jfree.chart.plot$PieLabelDistributor#toString()": 0.0,
        "org.jfree.chart.plot$PieLabelLinkStyle#<clinit>()": 3.8387096774193523,
        "org.jfree.chart.plot$PieLabelLinkStyle#PieLabelLinkStyle(java.lang.String)": 3.8387096774193523,
        "org.jfree.chart.plot$PieLabelLinkStyle#equals(java.lang.Object)": 20.34375,
        "org.jfree.chart.plot$PieLabelLinkStyle#hashCode()": 0.0,
        "org.jfree.chart.plot$PieLabelLinkStyle#readResolve()": 5.8125,
        "org.jfree.chart.plot$PieLabelLinkStyle#toString()": 5.8125,
        "org.jfree.chart.plot$PiePlot#<clinit>()": 3.8387096774193523,
        "org.jfree.chart.plot$PiePlot#PiePlot()": 10.65625,
        "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)": 3.8387096774193523,
        "org.jfree.chart.plot$PiePlot#clone()": 6.78125,
        "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 0.96875,
        "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)": 0.96875,
        "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)": 1.9375,
        "org.jfree.chart.plot$PiePlot#drawLeftLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)": 1.9375,
        "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)": 1.9375,
        "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 0.96875,
        "org.jfree.chart.plot$PiePlot#drawRightLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)": 1.9375,
        "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)": 1.9375,
        "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)": 0.0,
        "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)": 19.375,
        "org.jfree.chart.plot$PiePlot#getArcBounds(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double,double)": 0.96875,
        "org.jfree.chart.plot$PiePlot#getBaseSectionOutlinePaint()": 0.0,
        "org.jfree.chart.plot$PiePlot#getBaseSectionOutlineStroke()": 0.0,
        "org.jfree.chart.plot$PiePlot#getBaseSectionPaint()": 0.96875,
        "org.jfree.chart.plot$PiePlot#getDataset()": 5.8125,
        "org.jfree.chart.plot$PiePlot#getDirection()": 0.96875,
        "org.jfree.chart.plot$PiePlot#getExplodePercent(java.lang.Comparable)": 1.9375,
        "org.jfree.chart.plot$PiePlot#getIgnoreNullValues()": 0.0,
        "org.jfree.chart.plot$PiePlot#getIgnoreZeroValues()": 0.0,
        "org.jfree.chart.plot$PiePlot#getInteriorGap()": 2.90625,
        "org.jfree.chart.plot$PiePlot#getLabelBackgroundPaint()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelDistributor()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelFont()": 1.9375,
        "org.jfree.chart.plot$PiePlot#getLabelGap()": 1.9375,
        "org.jfree.chart.plot$PiePlot#getLabelGenerator()": 1.9375,
        "org.jfree.chart.plot$PiePlot#getLabelLinkMargin()": 1.9375,
        "org.jfree.chart.plot$PiePlot#getLabelLinkPaint()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelLinkStroke()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelLinkStyle()": 1.9375,
        "org.jfree.chart.plot$PiePlot#getLabelLinksVisible()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelOutlinePaint()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelOutlineStroke()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelPadding()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelPaint()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelShadowPaint()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLegendItemShape()": 2.90625,
        "org.jfree.chart.plot$PiePlot#getLegendItems()": 3.875,
        "org.jfree.chart.plot$PiePlot#getLegendLabelGenerator()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLegendLabelToolTipGenerator()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLegendLabelURLGenerator()": 0.96875,
        "org.jfree.chart.plot$PiePlot#getMaximumExplodePercent()": 2.90625,
        "org.jfree.chart.plot$PiePlot#getMaximumLabelWidth()": 1.9375,
        "org.jfree.chart.plot$PiePlot#getMinimumArcAngleToDraw()": 1.9375,
        "org.jfree.chart.plot$PiePlot#getPieIndex()": 0.0,
        "org.jfree.chart.plot$PiePlot#getPlotType()": 0.0,
        "org.jfree.chart.plot$PiePlot#getSectionKey(int)": 1.9375,
        "org.jfree.chart.plot$PiePlot#getSectionOutlinePaint(java.lang.Comparable)": 0.0,
        "org.jfree.chart.plot$PiePlot#getSectionOutlineStroke(java.lang.Comparable)": 0.0,
        "org.jfree.chart.plot$PiePlot#getSectionOutlinesVisible()": 0.0,
        "org.jfree.chart.plot$PiePlot#getSectionPaint(java.lang.Comparable)": 0.0,
        "org.jfree.chart.plot$PiePlot#getShadowPaint()": 0.0,
        "org.jfree.chart.plot$PiePlot#getShadowXOffset()": 0.0,
        "org.jfree.chart.plot$PiePlot#getShadowYOffset()": 0.0,
        "org.jfree.chart.plot$PiePlot#getSimpleLabelOffset()": 0.0,
        "org.jfree.chart.plot$PiePlot#getSimpleLabels()": 0.96875,
        "org.jfree.chart.plot$PiePlot#getStartAngle()": 2.90625,
        "org.jfree.chart.plot$PiePlot#getToolTipGenerator()": 0.0,
        "org.jfree.chart.plot$PiePlot#getURLGenerator()": 0.96875,
        "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)": 2.90625,
        "org.jfree.chart.plot$PiePlot#isCircular()": 2.90625,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable)": 2.90625,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable,boolean)": 2.90625,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable)": 2.90625,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable,boolean)": 2.90625,
        "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable)": 0.96875,
        "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable,boolean)": 2.90625,
        "org.jfree.chart.plot$PiePlot#readObject(java.io.ObjectInputStream)": 5.8125,
        "org.jfree.chart.plot$PiePlot#setBaseSectionOutlinePaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setBaseSectionOutlineStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setBaseSectionPaint(java.awt.Paint)": 1.9375,
        "org.jfree.chart.plot$PiePlot#setCircular(boolean)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setCircular(boolean,boolean)": 6.78125,
        "org.jfree.chart.plot$PiePlot#setDataset(org.jfree.data.general.PieDataset)": 1.9375,
        "org.jfree.chart.plot$PiePlot#setDirection(org.jfree.chart.util.Rotation)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setExplodePercent(java.lang.Comparable,double)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setIgnoreNullValues(boolean)": 1.9375,
        "org.jfree.chart.plot$PiePlot#setIgnoreZeroValues(boolean)": 1.9375,
        "org.jfree.chart.plot$PiePlot#setInteriorGap(double)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelBackgroundPaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelDistributor(org.jfree.chart.plot.AbstractPieLabelDistributor)": 0.0,
        "org.jfree.chart.plot$PiePlot#setLabelFont(java.awt.Font)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelGap(double)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)": 15.5,
        "org.jfree.chart.plot$PiePlot#setLabelLinkMargin(double)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelLinkPaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelLinkStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelLinkStyle(org.jfree.chart.plot.PieLabelLinkStyle)": 0.0,
        "org.jfree.chart.plot$PiePlot#setLabelLinksVisible(boolean)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelOutlinePaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelOutlineStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelPadding(org.jfree.chart.util.RectangleInsets)": 0.0,
        "org.jfree.chart.plot$PiePlot#setLabelPaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelShadowPaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLegendItemShape(java.awt.Shape)": 1.9375,
        "org.jfree.chart.plot$PiePlot#setLegendLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)": 2.90625,
        "org.jfree.chart.plot$PiePlot#setLegendLabelToolTipGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)": 1.9375,
        "org.jfree.chart.plot$PiePlot#setLegendLabelURLGenerator(org.jfree.chart.urls.PieURLGenerator)": 1.9375,
        "org.jfree.chart.plot$PiePlot#setMaximumLabelWidth(double)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setMinimumArcAngleToDraw(double)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setPieIndex(int)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setSectionOutlinePaint(java.lang.Comparable,java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setSectionOutlineStroke(java.lang.Comparable,java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setSectionOutlinesVisible(boolean)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setSectionPaint(java.lang.Comparable,java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setShadowPaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setShadowXOffset(double)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setShadowYOffset(double)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setSimpleLabelOffset(org.jfree.chart.util.RectangleInsets)": 0.0,
        "org.jfree.chart.plot$PiePlot#setSimpleLabels(boolean)": 0.0,
        "org.jfree.chart.plot$PiePlot#setStartAngle(double)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)": 16.46875,
        "org.jfree.chart.plot$PiePlot#setURLGenerator(org.jfree.chart.urls.PieURLGenerator)": 4.84375,
        "org.jfree.chart.plot$PiePlot#writeObject(java.io.ObjectOutputStream)": 5.8125,
        "org.jfree.chart.plot$Plot#<clinit>()": 224.48387096774195,
        "org.jfree.chart.plot$Plot#Plot()": 224.48387096774195,
        "org.jfree.chart.plot$Plot#addChangeListener(org.jfree.chart.event.PlotChangeListener)": 146.09677419354838,
        "org.jfree.chart.plot$Plot#axisChanged(org.jfree.chart.event.AxisChangeEvent)": 11.625,
        "org.jfree.chart.plot$Plot#clone()": 24.21875,
        "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 8.71875,
        "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 4.84375,
        "org.jfree.chart.plot$Plot#drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 58.125,
        "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 10.65625,
        "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 58.125,
        "org.jfree.chart.plot$Plot#equals(java.lang.Object)": 73.625,
        "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 4.84375,
        "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)": 58.125,
        "org.jfree.chart.plot$Plot#fireChangeEvent()": 211.1875,
        "org.jfree.chart.plot$Plot#getBackgroundAlpha()": 2.90625,
        "org.jfree.chart.plot$Plot#getBackgroundImage()": 2.90625,
        "org.jfree.chart.plot$Plot#getBackgroundImageAlignment()": 0.0,
        "org.jfree.chart.plot$Plot#getBackgroundImageAlpha()": 0.0,
        "org.jfree.chart.plot$Plot#getBackgroundPaint()": 2.90625,
        "org.jfree.chart.plot$Plot#getDatasetGroup()": 0.0,
        "org.jfree.chart.plot$Plot#getDrawingSupplier()": 71.6875,
        "org.jfree.chart.plot$Plot#getForegroundAlpha()": 61.03125,
        "org.jfree.chart.plot$Plot#getInsets()": 62.0,
        "org.jfree.chart.plot$Plot#getLegendItems()": 0.96875,
        "org.jfree.chart.plot$Plot#getNoDataMessage()": 0.0,
        "org.jfree.chart.plot$Plot#getNoDataMessageFont()": 0.0,
        "org.jfree.chart.plot$Plot#getNoDataMessagePaint()": 0.0,
        "org.jfree.chart.plot$Plot#getOutlinePaint()": 2.90625,
        "org.jfree.chart.plot$Plot#getOutlineStroke()": 2.90625,
        "org.jfree.chart.plot$Plot#getParent()": 195.6875,
        "org.jfree.chart.plot$Plot#getRectX(double,double,double,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.plot$Plot#getRectY(double,double,double,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.plot$Plot#getRootPlot()": 0.0,
        "org.jfree.chart.plot$Plot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$Plot#isOutlineVisible()": 0.0,
        "org.jfree.chart.plot$Plot#isSubplot()": 0.0,
        "org.jfree.chart.plot$Plot#markerChanged(org.jfree.chart.event.MarkerChangeEvent)": 0.0,
        "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)": 244.125,
        "org.jfree.chart.plot$Plot#readObject(java.io.ObjectInputStream)": 31.0,
        "org.jfree.chart.plot$Plot#removeChangeListener(org.jfree.chart.event.PlotChangeListener)": 3.875,
        "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)": 56.1875,
        "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)": 56.1875,
        "org.jfree.chart.plot$Plot#setBackgroundAlpha(float)": 0.96875,
        "org.jfree.chart.plot$Plot#setBackgroundImage(java.awt.Image)": 0.96875,
        "org.jfree.chart.plot$Plot#setBackgroundImageAlignment(int)": 0.96875,
        "org.jfree.chart.plot$Plot#setBackgroundImageAlpha(float)": 0.96875,
        "org.jfree.chart.plot$Plot#setBackgroundPaint(java.awt.Paint)": 4.84375,
        "org.jfree.chart.plot$Plot#setDatasetGroup(org.jfree.data.general.DatasetGroup)": 1.9375,
        "org.jfree.chart.plot$Plot#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)": 0.96875,
        "org.jfree.chart.plot$Plot#setForegroundAlpha(float)": 7.75,
        "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)": 30.03125,
        "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets,boolean)": 33.90625,
        "org.jfree.chart.plot$Plot#setNoDataMessage(java.lang.String)": 0.96875,
        "org.jfree.chart.plot$Plot#setNoDataMessageFont(java.awt.Font)": 0.96875,
        "org.jfree.chart.plot$Plot#setNoDataMessagePaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$Plot#setOutlinePaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$Plot#setOutlineStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$Plot#setOutlineVisible(boolean)": 0.96875,
        "org.jfree.chart.plot$Plot#setParent(org.jfree.chart.plot.Plot)": 15.5,
        "org.jfree.chart.plot$Plot#writeObject(java.io.ObjectOutputStream)": 31.0,
        "org.jfree.chart.plot$Plot#zoom(double)": 0.0,
        "org.jfree.chart.resources$JFreeChartResources#<clinit>()": 131.58064516129033,
        "org.jfree.chart.resources$JFreeChartResources#JFreeChartResources()": 131.58064516129033,
        "org.jfree.chart.resources$JFreeChartResources#getContents()": 131.58064516129033,
        "org.jfree.chart.title$LegendTitle#<clinit>()": 109.32258064516128,
        "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource)": 109.32258064516128,
        "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)": 109.32258064516128,
        "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 61.03125,
        "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)": 49.40625,
        "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 61.03125,
        "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)": -16.483870967741936,
        "org.jfree.chart.title$LegendTitle#fetchLegendItems()": 61.03125,
        "org.jfree.chart.title$LegendTitle#getBackgroundPaint()": 0.0,
        "org.jfree.chart.title$LegendTitle#getItemContainer()": 0.0,
        "org.jfree.chart.title$LegendTitle#getItemFont()": 0.0,
        "org.jfree.chart.title$LegendTitle#getItemLabelPadding()": 0.0,
        "org.jfree.chart.title$LegendTitle#getItemPaint()": 0.0,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicAnchor()": 49.40625,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicEdge()": 0.0,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicLocation()": 49.40625,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicPadding()": 0.0,
        "org.jfree.chart.title$LegendTitle#getSources()": 1.9375,
        "org.jfree.chart.title$LegendTitle#readObject(java.io.ObjectInputStream)": 8.71875,
        "org.jfree.chart.title$LegendTitle#setBackgroundPaint(java.awt.Paint)": 107.38709677419354,
        "org.jfree.chart.title$LegendTitle#setItemFont(java.awt.Font)": 0.96875,
        "org.jfree.chart.title$LegendTitle#setItemLabelPadding(org.jfree.chart.util.RectangleInsets)": 0.0,
        "org.jfree.chart.title$LegendTitle#setItemPaint(java.awt.Paint)": 0.0,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicAnchor(org.jfree.chart.util.RectangleAnchor)": 0.96875,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicEdge(org.jfree.chart.util.RectangleEdge)": 0.96875,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicLocation(org.jfree.chart.util.RectangleAnchor)": 0.96875,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicPadding(org.jfree.chart.util.RectangleInsets)": 0.0,
        "org.jfree.chart.title$LegendTitle#setSources(org.jfree.chart.LegendItemSource[])": 0.0,
        "org.jfree.chart.title$LegendTitle#setWrapper(org.jfree.chart.block.BlockContainer)": 0.0,
        "org.jfree.chart.title$LegendTitle#writeObject(java.io.ObjectOutputStream)": 8.71875,
        "org.jfree.chart.title$TextTitle#<clinit>()": 88.03225806451613,
        "org.jfree.chart.title$TextTitle#TextTitle()": 4.84375,
        "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String)": 13.5625,
        "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)": 74.48387096774194,
        "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font,java.awt.Paint,org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)": 88.03225806451613,
        "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 30.03125,
        "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)": 30.03125,
        "org.jfree.chart.title$TextTitle#clone()": 1.9375,
        "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 30.03125,
        "org.jfree.chart.title$TextTitle#drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 30.03125,
        "org.jfree.chart.title$TextTitle#drawVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.title$TextTitle#equals(java.lang.Object)": 24.21875,
        "org.jfree.chart.title$TextTitle#getBackgroundPaint()": 0.0,
        "org.jfree.chart.title$TextTitle#getExpandToFitSpace()": 0.0,
        "org.jfree.chart.title$TextTitle#getFont()": 0.0,
        "org.jfree.chart.title$TextTitle#getPaint()": 0.0,
        "org.jfree.chart.title$TextTitle#getText()": 0.0,
        "org.jfree.chart.title$TextTitle#getTextAlignment()": 0.0,
        "org.jfree.chart.title$TextTitle#getToolTipText()": 0.0,
        "org.jfree.chart.title$TextTitle#getURLText()": 0.0,
        "org.jfree.chart.title$TextTitle#hashCode()": 2.90625,
        "org.jfree.chart.title$TextTitle#readObject(java.io.ObjectInputStream)": 11.625,
        "org.jfree.chart.title$TextTitle#setBackgroundPaint(java.awt.Paint)": 1.9375,
        "org.jfree.chart.title$TextTitle#setExpandToFitSpace(boolean)": 0.0,
        "org.jfree.chart.title$TextTitle#setFont(java.awt.Font)": 2.90625,
        "org.jfree.chart.title$TextTitle#setPaint(java.awt.Paint)": 1.9375,
        "org.jfree.chart.title$TextTitle#setText(java.lang.String)": 2.90625,
        "org.jfree.chart.title$TextTitle#setTextAlignment(org.jfree.chart.util.HorizontalAlignment)": 0.96875,
        "org.jfree.chart.title$TextTitle#setToolTipText(java.lang.String)": 0.0,
        "org.jfree.chart.title$TextTitle#setURLText(java.lang.String)": 0.0,
        "org.jfree.chart.title$TextTitle#writeObject(java.io.ObjectOutputStream)": 11.625,
        "org.jfree.chart.title$Title#<clinit>()": 149.0,
        "org.jfree.chart.title$Title#Title()": 117.06451612903226,
        "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)": 0.0,
        "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)": 149.0,
        "org.jfree.chart.title$Title#addChangeListener(org.jfree.chart.event.TitleChangeListener)": 123.83870967741936,
        "org.jfree.chart.title$Title#clone()": 5.8125,
        "org.jfree.chart.title$Title#equals(java.lang.Object)": 34.875,
        "org.jfree.chart.title$Title#getHorizontalAlignment()": 62.0,
        "org.jfree.chart.title$Title#getNotify()": 0.0,
        "org.jfree.chart.title$Title#getPosition()": 62.0,
        "org.jfree.chart.title$Title#getVerticalAlignment()": 0.0,
        "org.jfree.chart.title$Title#hashCode()": 6.78125,
        "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)": 111.25806451612902,
        "org.jfree.chart.title$Title#readObject(java.io.ObjectInputStream)": 13.5625,
        "org.jfree.chart.title$Title#removeChangeListener(org.jfree.chart.event.TitleChangeListener)": 0.96875,
        "org.jfree.chart.title$Title#setHorizontalAlignment(org.jfree.chart.util.HorizontalAlignment)": 0.96875,
        "org.jfree.chart.title$Title#setNotify(boolean)": 0.0,
        "org.jfree.chart.title$Title#setPosition(org.jfree.chart.util.RectangleEdge)": 106.41935483870967,
        "org.jfree.chart.title$Title#setVerticalAlignment(org.jfree.chart.util.VerticalAlignment)": 0.96875,
        "org.jfree.chart.title$Title#writeObject(java.io.ObjectOutputStream)": 13.5625,
        "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo()": 131.58064516129033,
        "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#addLibrary(org.jfree.chart.ui.Library)": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#addOptionalLibrary(java.lang.String)": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#addOptionalLibrary(org.jfree.chart.ui.Library)": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#getCopyright()": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#getLibraries()": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#getOptionalLibraries()": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#setCopyright(java.lang.String)": 131.58064516129033,
        "org.jfree.chart.ui$BasicProjectInfo#setInfo(java.lang.String)": 131.58064516129033,
        "org.jfree.chart.ui$BasicProjectInfo#setLicenceName(java.lang.String)": 131.58064516129033,
        "org.jfree.chart.ui$BasicProjectInfo#setName(java.lang.String)": 131.58064516129033,
        "org.jfree.chart.ui$BasicProjectInfo#setVersion(java.lang.String)": 131.58064516129033,
        "org.jfree.chart.ui$Contributor#Contributor(java.lang.String,java.lang.String)": 131.58064516129033,
        "org.jfree.chart.ui$Contributor#getEmail()": 0.0,
        "org.jfree.chart.ui$Contributor#getName()": 0.0,
        "org.jfree.chart.ui$Library#Library()": 131.58064516129033,
        "org.jfree.chart.ui$Library#Library(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 0.0,
        "org.jfree.chart.ui$Library#equals(java.lang.Object)": 0.0,
        "org.jfree.chart.ui$Library#getInfo()": 0.0,
        "org.jfree.chart.ui$Library#getLicenceName()": 0.0,
        "org.jfree.chart.ui$Library#getName()": 0.0,
        "org.jfree.chart.ui$Library#getVersion()": 0.0,
        "org.jfree.chart.ui$Library#hashCode()": 0.0,
        "org.jfree.chart.ui$Library#setInfo(java.lang.String)": 131.58064516129033,
        "org.jfree.chart.ui$Library#setLicenceName(java.lang.String)": 131.58064516129033,
        "org.jfree.chart.ui$Library#setName(java.lang.String)": 131.58064516129033,
        "org.jfree.chart.ui$Library#setVersion(java.lang.String)": 131.58064516129033,
        "org.jfree.chart.ui$Licences#Licences()": 131.58064516129033,
        "org.jfree.chart.ui$Licences#getGPL()": 0.0,
        "org.jfree.chart.ui$Licences#getInstance()": 131.58064516129033,
        "org.jfree.chart.ui$Licences#getLGPL()": 131.58064516129033,
        "org.jfree.chart.ui$ProjectInfo#ProjectInfo()": 131.58064516129033,
        "org.jfree.chart.ui$ProjectInfo#ProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.awt.Image,java.lang.String,java.lang.String,java.lang.String)": 0.0,
        "org.jfree.chart.ui$ProjectInfo#getContributors()": 0.0,
        "org.jfree.chart.ui$ProjectInfo#getLicenceText()": 0.0,
        "org.jfree.chart.ui$ProjectInfo#getLogo()": 8.71875,
        "org.jfree.chart.ui$ProjectInfo#setContributors(java.util.List)": 131.58064516129033,
        "org.jfree.chart.ui$ProjectInfo#setLicenceText(java.lang.String)": 131.58064516129033,
        "org.jfree.chart.ui$ProjectInfo#setLogo(java.awt.Image)": 131.58064516129033,
        "org.jfree.chart.ui$ProjectInfo#toString()": 0.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList()": 447.06451612903226,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int)": 447.06451612903226,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int,int)": 447.06451612903226,
        "org.jfree.chart.util$AbstractObjectList#clear()": 0.0,
        "org.jfree.chart.util$AbstractObjectList#clone()": 69.75,
        "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)": 249.9375,
        "org.jfree.chart.util$AbstractObjectList#get(int)": 228.625,
        "org.jfree.chart.util$AbstractObjectList#hashCode()": 45.53125,
        "org.jfree.chart.util$AbstractObjectList#indexOf(java.lang.Object)": 165.65625,
        "org.jfree.chart.util$AbstractObjectList#readObject(java.io.ObjectInputStream)": 75.5625,
        "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)": 231.53125,
        "org.jfree.chart.util$AbstractObjectList#size()": 414.625,
        "org.jfree.chart.util$AbstractObjectList#writeObject(java.io.ObjectOutputStream)": 75.5625,
        "org.jfree.chart.util$HorizontalAlignment#<clinit>()": 166.41935483870967,
        "org.jfree.chart.util$HorizontalAlignment#HorizontalAlignment(java.lang.String)": 166.41935483870967,
        "org.jfree.chart.util$HorizontalAlignment#equals(java.lang.Object)": 18.40625,
        "org.jfree.chart.util$HorizontalAlignment#hashCode()": 6.78125,
        "org.jfree.chart.util$HorizontalAlignment#readResolve()": 18.40625,
        "org.jfree.chart.util$HorizontalAlignment#toString()": 0.0,
        "org.jfree.chart.util$ObjectList#ObjectList()": 430.61290322580646,
        "org.jfree.chart.util$ObjectList#ObjectList(int)": 0.0,
        "org.jfree.chart.util$ObjectList#get(int)": 202.46875,
        "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)": 165.65625,
        "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)": 203.4375,
        "org.jfree.chart.util$RectangleAnchor#<clinit>()": 216.74193548387098,
        "org.jfree.chart.util$RectangleAnchor#RectangleAnchor(java.lang.String)": 216.74193548387098,
        "org.jfree.chart.util$RectangleAnchor#coordinates(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleAnchor)": 49.40625,
        "org.jfree.chart.util$RectangleAnchor#createRectangle(org.jfree.chart.util.Size2D,double,double,org.jfree.chart.util.RectangleAnchor)": 1.9375,
        "org.jfree.chart.util$RectangleAnchor#equals(java.lang.Object)": 43.59375,
        "org.jfree.chart.util$RectangleAnchor#hashCode()": 1.9375,
        "org.jfree.chart.util$RectangleAnchor#readResolve()": 26.15625,
        "org.jfree.chart.util$RectangleAnchor#toString()": 0.0,
        "org.jfree.chart.util$RectangleEdge#<clinit>()": 156.74193548387098,
        "org.jfree.chart.util$RectangleEdge#RectangleEdge(java.lang.String)": 156.74193548387098,
        "org.jfree.chart.util$RectangleEdge#coordinate(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.util$RectangleEdge#equals(java.lang.Object)": 46.5,
        "org.jfree.chart.util$RectangleEdge#hashCode()": 6.78125,
        "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)": 60.0625,
        "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)": 66.84375,
        "org.jfree.chart.util$RectangleEdge#opposite(org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.util$RectangleEdge#readResolve()": 13.5625,
        "org.jfree.chart.util$RectangleEdge#toString()": 0.0,
        "org.jfree.chart.util$RectangleInsets#<clinit>()": 386.0967741935484,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets()": 0.0,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)": 367.7096774193548,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets(org.jfree.chart.util.UnitType,double,double,double,double)": 386.0967741935484,
        "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)": 62.96875,
        "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)": 65.875,
        "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)": 62.96875,
        "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)": 65.875,
        "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)": 62.96875,
        "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)": 65.875,
        "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)": 62.96875,
        "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)": 65.875,
        "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)": 0.0,
        "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)": 0.0,
        "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D)": 57.15625,
        "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)": 57.15625,
        "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)": 149.1875,
        "org.jfree.chart.util$RectangleInsets#extendHeight(double)": 64.90625,
        "org.jfree.chart.util$RectangleInsets#extendWidth(double)": 64.90625,
        "org.jfree.chart.util$RectangleInsets#getBottom()": 57.15625,
        "org.jfree.chart.util$RectangleInsets#getLeft()": 57.15625,
        "org.jfree.chart.util$RectangleInsets#getRight()": 57.15625,
        "org.jfree.chart.util$RectangleInsets#getTop()": 57.15625,
        "org.jfree.chart.util$RectangleInsets#getUnitType()": 0.0,
        "org.jfree.chart.util$RectangleInsets#hashCode()": 0.0,
        "org.jfree.chart.util$RectangleInsets#toString()": 0.0,
        "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)": 62.0,
        "org.jfree.chart.util$RectangleInsets#trimHeight(double)": 62.0,
        "org.jfree.chart.util$RectangleInsets#trimWidth(double)": 62.0,
        "org.jfree.chart.util$Rotation#<clinit>()": 7.70967741935484,
        "org.jfree.chart.util$Rotation#Rotation(java.lang.String,double)": 7.70967741935484,
        "org.jfree.chart.util$Rotation#equals(java.lang.Object)": 8.71875,
        "org.jfree.chart.util$Rotation#getFactor()": 2.90625,
        "org.jfree.chart.util$Rotation#hashCode()": 0.0,
        "org.jfree.chart.util$Rotation#readResolve()": 6.78125,
        "org.jfree.chart.util$Rotation#toString()": 0.0,
        "org.jfree.chart.util$TableOrder#<clinit>()": -18.41935483870968,
        "org.jfree.chart.util$TableOrder#TableOrder(java.lang.String)": -18.41935483870968,
        "org.jfree.chart.util$TableOrder#equals(java.lang.Object)": 4.84375,
        "org.jfree.chart.util$TableOrder#hashCode()": 0.0,
        "org.jfree.chart.util$TableOrder#readResolve()": 2.90625,
        "org.jfree.chart.util$TableOrder#toString()": 0.0,
        "org.jfree.chart.util$UnitType#<clinit>()": 391.9032258064516,
        "org.jfree.chart.util$UnitType#UnitType(java.lang.String)": 391.9032258064516,
        "org.jfree.chart.util$UnitType#equals(java.lang.Object)": 62.0,
        "org.jfree.chart.util$UnitType#hashCode()": 0.0,
        "org.jfree.chart.util$UnitType#readResolve()": 62.0,
        "org.jfree.chart.util$UnitType#toString()": 0.0,
        "org.jfree.chart.util$VerticalAlignment#<clinit>()": 156.74193548387098,
        "org.jfree.chart.util$VerticalAlignment#VerticalAlignment(java.lang.String)": 156.74193548387098,
        "org.jfree.chart.util$VerticalAlignment#equals(java.lang.Object)": 15.5,
        "org.jfree.chart.util$VerticalAlignment#hashCode()": 6.78125,
        "org.jfree.chart.util$VerticalAlignment#readResolve()": 15.5,
        "org.jfree.chart.util$VerticalAlignment#toString()": 0.0,
        "org.jfree.data$DefaultKeyedValues2D#DefaultKeyedValues2D()": 105.4516129032258,
        "org.jfree.data$DefaultKeyedValues2D#DefaultKeyedValues2D(boolean)": 115.12903225806451,
        "org.jfree.data$DefaultKeyedValues2D#addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)": 123.03125,
        "org.jfree.data$DefaultKeyedValues2D#clear()": 0.96875,
        "org.jfree.data$DefaultKeyedValues2D#clone()": 3.875,
        "org.jfree.data$DefaultKeyedValues2D#equals(java.lang.Object)": 8.71875,
        "org.jfree.data$DefaultKeyedValues2D#getColumnCount()": 105.59375,
        "org.jfree.data$DefaultKeyedValues2D#getColumnIndex(java.lang.Comparable)": 2.90625,
        "org.jfree.data$DefaultKeyedValues2D#getColumnKey(int)": 16.46875,
        "org.jfree.data$DefaultKeyedValues2D#getColumnKeys()": 15.5,
        "org.jfree.data$DefaultKeyedValues2D#getRowCount()": 121.09375,
        "org.jfree.data$DefaultKeyedValues2D#getRowIndex(java.lang.Comparable)": 132.71875,
        "org.jfree.data$DefaultKeyedValues2D#getRowKey(int)": 46.5,
        "org.jfree.data$DefaultKeyedValues2D#getRowKeys()": 16.46875,
        "org.jfree.data$DefaultKeyedValues2D#getValue(int,int)": 94.9375,
        "org.jfree.data$DefaultKeyedValues2D#getValue(java.lang.Comparable,java.lang.Comparable)": 24.21875,
        "org.jfree.data$DefaultKeyedValues2D#hashCode()": 0.0,
        "org.jfree.data$DefaultKeyedValues2D#removeColumn(int)": 0.0,
        "org.jfree.data$DefaultKeyedValues2D#removeColumn(java.lang.Comparable)": 1.9375,
        "org.jfree.data$DefaultKeyedValues2D#removeRow(int)": 0.96875,
        "org.jfree.data$DefaultKeyedValues2D#removeRow(java.lang.Comparable)": 0.0,
        "org.jfree.data$DefaultKeyedValues2D#removeValue(java.lang.Comparable,java.lang.Comparable)": 2.90625,
        "org.jfree.data$DefaultKeyedValues2D#setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)": 132.71875,
        "org.jfree.data$UnknownKeyException#UnknownKeyException(java.lang.String)": 15.5,
        "org.jfree.data.category$DefaultCategoryDataset#DefaultCategoryDataset()": 89.96774193548387,
        "org.jfree.data.category$DefaultCategoryDataset#addValue(double,java.lang.Comparable,java.lang.Comparable)": 61.03125,
        "org.jfree.data.category$DefaultCategoryDataset#addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)": 99.78125,
        "org.jfree.data.category$DefaultCategoryDataset#clear()": 0.0,
        "org.jfree.data.category$DefaultCategoryDataset#clone()": 1.9375,
        "org.jfree.data.category$DefaultCategoryDataset#equals(java.lang.Object)": 7.75,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnCount()": 90.09375,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnIndex(java.lang.Comparable)": 2.90625,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnKey(int)": 15.5,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnKeys()": 7.75,
        "org.jfree.data.category$DefaultCategoryDataset#getRowCount()": 105.59375,
        "org.jfree.data.category$DefaultCategoryDataset#getRowIndex(java.lang.Comparable)": 0.0,
        "org.jfree.data.category$DefaultCategoryDataset#getRowKey(int)": 40.6875,
        "org.jfree.data.category$DefaultCategoryDataset#getRowKeys()": 8.71875,
        "org.jfree.data.category$DefaultCategoryDataset#getValue(int,int)": 81.375,
        "org.jfree.data.category$DefaultCategoryDataset#getValue(java.lang.Comparable,java.lang.Comparable)": 21.3125,
        "org.jfree.data.category$DefaultCategoryDataset#hashCode()": 0.0,
        "org.jfree.data.category$DefaultCategoryDataset#incrementValue(double,java.lang.Comparable,java.lang.Comparable)": 0.96875,
        "org.jfree.data.category$DefaultCategoryDataset#removeColumn(int)": 0.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeColumn(java.lang.Comparable)": 0.96875,
        "org.jfree.data.category$DefaultCategoryDataset#removeRow(int)": 0.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeRow(java.lang.Comparable)": 0.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeValue(java.lang.Comparable,java.lang.Comparable)": 0.96875,
        "org.jfree.data.category$DefaultCategoryDataset#setValue(double,java.lang.Comparable,java.lang.Comparable)": 8.71875,
        "org.jfree.data.category$DefaultCategoryDataset#setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)": 11.625,
        "org.jfree.data.general$AbstractDataset#AbstractDataset()": 440.2903225806452,
        "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)": 232.5,
        "org.jfree.data.general$AbstractDataset#clone()": 33.90625,
        "org.jfree.data.general$AbstractDataset#fireDatasetChanged()": 340.03125,
        "org.jfree.data.general$AbstractDataset#getGroup()": 1.9375,
        "org.jfree.data.general$AbstractDataset#hasListener(java.util.EventListener)": -29.064516129032256,
        "org.jfree.data.general$AbstractDataset#notifyListeners(org.jfree.data.general.DatasetChangeEvent)": 379.75,
        "org.jfree.data.general$AbstractDataset#readObject(java.io.ObjectInputStream)": 58.125,
        "org.jfree.data.general$AbstractDataset#removeChangeListener(org.jfree.data.general.DatasetChangeListener)": 19.375,
        "org.jfree.data.general$AbstractDataset#setGroup(org.jfree.data.general.DatasetGroup)": 0.0,
        "org.jfree.data.general$AbstractDataset#validateObject()": 58.125,
        "org.jfree.data.general$AbstractDataset#writeObject(java.io.ObjectOutputStream)": 58.125,
        "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)": 452.40625,
        "org.jfree.data.general$DatasetChangeEvent#getDataset()": 0.0,
        "org.jfree.data.general$DatasetGroup#DatasetGroup()": 441.258064516129,
        "org.jfree.data.general$DatasetGroup#DatasetGroup(java.lang.String)": 0.0,
        "org.jfree.data.general$DatasetGroup#clone()": 0.0,
        "org.jfree.data.general$DatasetGroup#equals(java.lang.Object)": 0.96875,
        "org.jfree.data.general$DatasetGroup#getID()": 0.0
    },
    "Chart-14": {
        "org.jfree.chart$ChartColor#<clinit>()": 246.01612903225805,
        "org.jfree.chart$ChartColor#ChartColor(int,int,int)": 0.0,
        "org.jfree.chart$ChartColor#createDefaultPaintArray()": 246.01612903225805,
        "org.jfree.chart.axis$Axis#<clinit>()": 253.54285714285714,
        "org.jfree.chart.axis$Axis#Axis(java.lang.String)": 250.62857142857143,
        "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)": 176.8,
        "org.jfree.chart.axis$Axis#clone()": 23.314285714285713,
        "org.jfree.chart.axis$Axis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 32.05714285714286,
        "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)": 57.31428571428572,
        "org.jfree.chart.axis$Axis#equals(java.lang.Object)": 83.54285714285714,
        "org.jfree.chart.axis$Axis#getAxisLinePaint()": 54.4,
        "org.jfree.chart.axis$Axis#getAxisLineStroke()": 54.4,
        "org.jfree.chart.axis$Axis#getFixedDimension()": 57.31428571428572,
        "org.jfree.chart.axis$Axis#getLabel()": 65.08571428571429,
        "org.jfree.chart.axis$Axis#getLabelAngle()": 57.31428571428572,
        "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)": 57.31428571428572,
        "org.jfree.chart.axis$Axis#getLabelFont()": 57.31428571428572,
        "org.jfree.chart.axis$Axis#getLabelInsets()": 57.31428571428572,
        "org.jfree.chart.axis$Axis#getLabelPaint()": 57.31428571428572,
        "org.jfree.chart.axis$Axis#getLabelToolTip()": 0.0,
        "org.jfree.chart.axis$Axis#getLabelURL()": 0.0,
        "org.jfree.chart.axis$Axis#getPlot()": 209.82857142857142,
        "org.jfree.chart.axis$Axis#getTickLabelFont()": 57.31428571428572,
        "org.jfree.chart.axis$Axis#getTickLabelInsets()": 57.31428571428572,
        "org.jfree.chart.axis$Axis#getTickLabelPaint()": 57.31428571428572,
        "org.jfree.chart.axis$Axis#getTickMarkInsideLength()": 57.31428571428572,
        "org.jfree.chart.axis$Axis#getTickMarkOutsideLength()": 57.31428571428572,
        "org.jfree.chart.axis$Axis#getTickMarkPaint()": 55.371428571428574,
        "org.jfree.chart.axis$Axis#getTickMarkStroke()": 55.371428571428574,
        "org.jfree.chart.axis$Axis#hasListener(java.util.EventListener)": 1.9428571428571428,
        "org.jfree.chart.axis$Axis#isAxisLineVisible()": 57.31428571428572,
        "org.jfree.chart.axis$Axis#isTickLabelsVisible()": 57.31428571428572,
        "org.jfree.chart.axis$Axis#isTickMarksVisible()": 56.34285714285714,
        "org.jfree.chart.axis$Axis#isVisible()": 57.31428571428572,
        "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)": 211.77142857142857,
        "org.jfree.chart.axis$Axis#readObject(java.io.ObjectInputStream)": 31.085714285714285,
        "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)": 19.428571428571427,
        "org.jfree.chart.axis$Axis#setAxisLinePaint(java.awt.Paint)": 2.914285714285714,
        "org.jfree.chart.axis$Axis#setAxisLineStroke(java.awt.Stroke)": 1.9428571428571428,
        "org.jfree.chart.axis$Axis#setAxisLineVisible(boolean)": 18.457142857142856,
        "org.jfree.chart.axis$Axis#setFixedDimension(double)": 0.9714285714285714,
        "org.jfree.chart.axis$Axis#setLabel(java.lang.String)": 3.8857142857142857,
        "org.jfree.chart.axis$Axis#setLabelAngle(double)": 0.9714285714285714,
        "org.jfree.chart.axis$Axis#setLabelFont(java.awt.Font)": 0.9714285714285714,
        "org.jfree.chart.axis$Axis#setLabelInsets(org.jfree.chart.util.RectangleInsets)": 0.9714285714285714,
        "org.jfree.chart.axis$Axis#setLabelPaint(java.awt.Paint)": 0.9714285714285714,
        "org.jfree.chart.axis$Axis#setLabelToolTip(java.lang.String)": 0.9714285714285714,
        "org.jfree.chart.axis$Axis#setLabelURL(java.lang.String)": 0.9714285714285714,
        "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)": 176.8,
        "org.jfree.chart.axis$Axis#setTickLabelFont(java.awt.Font)": 0.9714285714285714,
        "org.jfree.chart.axis$Axis#setTickLabelInsets(org.jfree.chart.util.RectangleInsets)": 0.9714285714285714,
        "org.jfree.chart.axis$Axis#setTickLabelPaint(java.awt.Paint)": 0.9714285714285714,
        "org.jfree.chart.axis$Axis#setTickLabelsVisible(boolean)": 0.9714285714285714,
        "org.jfree.chart.axis$Axis#setTickMarkInsideLength(float)": 0.9714285714285714,
        "org.jfree.chart.axis$Axis#setTickMarkOutsideLength(float)": 0.9714285714285714,
        "org.jfree.chart.axis$Axis#setTickMarkPaint(java.awt.Paint)": 0.9714285714285714,
        "org.jfree.chart.axis$Axis#setTickMarkStroke(java.awt.Stroke)": 0.9714285714285714,
        "org.jfree.chart.axis$Axis#setTickMarksVisible(boolean)": 111.71428571428571,
        "org.jfree.chart.axis$Axis#setVisible(boolean)": 0.9714285714285714,
        "org.jfree.chart.axis$Axis#writeObject(java.io.ObjectOutputStream)": 31.085714285714285,
        "org.jfree.chart.axis$AxisLocation#<clinit>()": 186.01612903225808,
        "org.jfree.chart.axis$AxisLocation#AxisLocation(java.lang.String)": 186.01612903225808,
        "org.jfree.chart.axis$AxisLocation#equals(java.lang.Object)": 26.228571428571428,
        "org.jfree.chart.axis$AxisLocation#getOpposite()": 0.0,
        "org.jfree.chart.axis$AxisLocation#getOpposite(org.jfree.chart.axis.AxisLocation)": 0.0,
        "org.jfree.chart.axis$AxisLocation#readResolve()": 18.457142857142856,
        "org.jfree.chart.axis$AxisLocation#toString()": 22.34285714285714,
        "org.jfree.chart.axis$CategoryAnchor#<clinit>()": 99.39393939393939,
        "org.jfree.chart.axis$CategoryAnchor#CategoryAnchor(java.lang.String)": 99.39393939393939,
        "org.jfree.chart.axis$CategoryAnchor#equals(java.lang.Object)": 22.34285714285714,
        "org.jfree.chart.axis$CategoryAnchor#readResolve()": 10.685714285714285,
        "org.jfree.chart.axis$CategoryAnchor#toString()": 12.628571428571428,
        "org.jfree.chart.axis$CategoryAxis#CategoryAxis()": 0.9714285714285714,
        "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)": 111.71428571428571,
        "org.jfree.chart.axis$CategoryAxis#addCategoryLabelToolTip(java.lang.Comparable,java.lang.String)": 4.857142857142857,
        "org.jfree.chart.axis$CategoryAxis#calculateCategoryGapSize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 31.085714285714285,
        "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 34.0,
        "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)": 18.457142857142856,
        "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)": 12.628571428571428,
        "org.jfree.chart.axis$CategoryAxis#clearCategoryLabelToolTips()": 0.0,
        "org.jfree.chart.axis$CategoryAxis#clone()": 8.742857142857144,
        "org.jfree.chart.axis$CategoryAxis#configure()": 92.28571428571429,
        "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)": 31.085714285714285,
        "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 32.05714285714286,
        "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)": 34.971428571428575,
        "org.jfree.chart.axis$CategoryAxis#equalPaintMaps(java.util.Map,java.util.Map)": 28.17142857142857,
        "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)": 28.17142857142857,
        "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 31.085714285714285,
        "org.jfree.chart.axis$CategoryAxis#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelPositionOffset()": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelPositions()": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelToolTip(java.lang.Comparable)": 9.714285714285714,
        "org.jfree.chart.axis$CategoryAxis#getCategoryMargin()": 17.485714285714288,
        "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 10.685714285714285,
        "org.jfree.chart.axis$CategoryAxis#getCategorySeriesMiddle(java.lang.Comparable,java.lang.Comparable,org.jfree.data.category.CategoryDataset,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 31.085714285714285,
        "org.jfree.chart.axis$CategoryAxis#getLowerMargin()": 34.0,
        "org.jfree.chart.axis$CategoryAxis#getMaximumCategoryLabelLines()": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getMaximumCategoryLabelWidthRatio()": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getTickLabelFont(java.lang.Comparable)": 31.085714285714285,
        "org.jfree.chart.axis$CategoryAxis#getTickLabelPaint(java.lang.Comparable)": 31.085714285714285,
        "org.jfree.chart.axis$CategoryAxis#getUpperMargin()": 34.0,
        "org.jfree.chart.axis$CategoryAxis#hashCode()": 38.857142857142854,
        "org.jfree.chart.axis$CategoryAxis#readObject(java.io.ObjectInputStream)": 10.685714285714285,
        "org.jfree.chart.axis$CategoryAxis#readPaintMap(java.io.ObjectInputStream)": 10.685714285714285,
        "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 34.971428571428575,
        "org.jfree.chart.axis$CategoryAxis#removeCategoryLabelToolTip(java.lang.Comparable)": 0.0,
        "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)": 34.971428571428575,
        "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositionOffset(int)": 1.9428571428571428,
        "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositions(org.jfree.chart.axis.CategoryLabelPositions)": 1.9428571428571428,
        "org.jfree.chart.axis$CategoryAxis#setCategoryMargin(double)": 8.742857142857144,
        "org.jfree.chart.axis$CategoryAxis#setLowerMargin(double)": 1.9428571428571428,
        "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelLines(int)": 0.0,
        "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelWidthRatio(float)": 1.9428571428571428,
        "org.jfree.chart.axis$CategoryAxis#setTickLabelFont(java.lang.Comparable,java.awt.Font)": 4.857142857142857,
        "org.jfree.chart.axis$CategoryAxis#setTickLabelPaint(java.lang.Comparable,java.awt.Paint)": 6.8,
        "org.jfree.chart.axis$CategoryAxis#setUpperMargin(double)": 1.9428571428571428,
        "org.jfree.chart.axis$CategoryAxis#writeObject(java.io.ObjectOutputStream)": 10.685714285714285,
        "org.jfree.chart.axis$CategoryAxis#writePaintMap(java.util.Map,java.io.ObjectOutputStream)": 10.685714285714285,
        "org.jfree.chart.axis$DateAxis#<clinit>()": 33.02857142857143,
        "org.jfree.chart.axis$DateAxis#DateAxis()": 0.9714285714285714,
        "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)": 33.02857142857143,
        "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone)": 33.02857142857143,
        "org.jfree.chart.axis$DateAxis#autoAdjustRange()": 33.02857142857143,
        "org.jfree.chart.axis$DateAxis#calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)": 2.914285714285714,
        "org.jfree.chart.axis$DateAxis#calculateHighestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)": 0.0,
        "org.jfree.chart.axis$DateAxis#calculateLowestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)": 3.8857142857142857,
        "org.jfree.chart.axis$DateAxis#clone()": 0.9714285714285714,
        "org.jfree.chart.axis$DateAxis#configure()": 12.628571428571428,
        "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits()": 0.0,
        "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone)": 33.02857142857143,
        "org.jfree.chart.axis$DateAxis#dateToJava2D(java.util.Date,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 3.8857142857142857,
        "org.jfree.chart.axis$DateAxis#equals(java.lang.Object)": 6.8,
        "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)": 0.0,
        "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)": 3.8857142857142857,
        "org.jfree.chart.axis$DateAxis#getDateFormatOverride()": 3.8857142857142857,
        "org.jfree.chart.axis$DateAxis#getMaximumDate()": 5.828571428571428,
        "org.jfree.chart.axis$DateAxis#getMinimumDate()": 5.828571428571428,
        "org.jfree.chart.axis$DateAxis#getTickMarkPosition()": 0.0,
        "org.jfree.chart.axis$DateAxis#getTickUnit()": 3.8857142857142857,
        "org.jfree.chart.axis$DateAxis#getTimeZone()": 0.0,
        "org.jfree.chart.axis$DateAxis#getTimeline()": 0.0,
        "org.jfree.chart.axis$DateAxis#hashCode()": 4.857142857142857,
        "org.jfree.chart.axis$DateAxis#isHiddenValue(long)": 3.8857142857142857,
        "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.9714285714285714,
        "org.jfree.chart.axis$DateAxis#nextStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)": 3.8857142857142857,
        "org.jfree.chart.axis$DateAxis#previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)": 15.542857142857143,
        "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 3.8857142857142857,
        "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 3.8857142857142857,
        "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$DateAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 3.8857142857142857,
        "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 3.8857142857142857,
        "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$DateAxis#setDateFormatOverride(java.text.DateFormat)": 0.9714285714285714,
        "org.jfree.chart.axis$DateAxis#setMaximumDate(java.util.Date)": 1.9428571428571428,
        "org.jfree.chart.axis$DateAxis#setMinimumDate(java.util.Date)": 1.9428571428571428,
        "org.jfree.chart.axis$DateAxis#setRange(double,double)": 0.9714285714285714,
        "org.jfree.chart.axis$DateAxis#setRange(java.util.Date,java.util.Date)": 13.6,
        "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)": 14.571428571428571,
        "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)": 33.02857142857143,
        "org.jfree.chart.axis$DateAxis#setTickMarkPosition(org.jfree.chart.axis.DateTickMarkPosition)": 12.628571428571428,
        "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit)": 12.628571428571428,
        "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)": 33.02857142857143,
        "org.jfree.chart.axis$DateAxis#setTimeZone(java.util.TimeZone)": 0.0,
        "org.jfree.chart.axis$DateAxis#setTimeline(org.jfree.chart.axis.Timeline)": 0.9714285714285714,
        "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 3.8857142857142857,
        "org.jfree.chart.axis$DateAxis#zoomRange(double,double)": 0.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#DateAxis$DefaultTimeline()": 33.02857142857143,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainRange(java.util.Date,java.util.Date)": 0.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainRange(long,long)": 0.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainValue(java.util.Date)": 3.8857142857142857,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainValue(long)": 0.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#equals(java.lang.Object)": 2.914285714285714,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#toMillisecond(long)": 13.6,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#toTimelineValue(java.util.Date)": 4.857142857142857,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#toTimelineValue(long)": 12.628571428571428,
        "org.jfree.chart.axis$NumberAxis#<clinit>()": 197.2,
        "org.jfree.chart.axis$NumberAxis#NumberAxis()": 3.8857142857142857,
        "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)": 194.28571428571428,
        "org.jfree.chart.axis$NumberAxis#autoAdjustRange()": 175.82857142857142,
        "org.jfree.chart.axis$NumberAxis#calculateHighestVisibleTickValue()": 0.0,
        "org.jfree.chart.axis$NumberAxis#calculateLowestVisibleTickValue()": 55.371428571428574,
        "org.jfree.chart.axis$NumberAxis#calculateVisibleTickCount()": 55.371428571428574,
        "org.jfree.chart.axis$NumberAxis#clone()": 12.628571428571428,
        "org.jfree.chart.axis$NumberAxis#configure()": 170.0,
        "org.jfree.chart.axis$NumberAxis#createIntegerTickUnits()": 16.514285714285716,
        "org.jfree.chart.axis$NumberAxis#createIntegerTickUnits(java.util.Locale)": 0.0,
        "org.jfree.chart.axis$NumberAxis#createStandardTickUnits()": 194.28571428571428,
        "org.jfree.chart.axis$NumberAxis#createStandardTickUnits(java.util.Locale)": 0.0,
        "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 52.457142857142856,
        "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)": 52.457142857142856,
        "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)": 43.714285714285715,
        "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)": 32.05714285714286,
        "org.jfree.chart.axis$NumberAxis#getAutoRangeIncludesZero()": 170.0,
        "org.jfree.chart.axis$NumberAxis#getAutoRangeStickyZero()": 170.0,
        "org.jfree.chart.axis$NumberAxis#getMarkerBand()": 0.0,
        "org.jfree.chart.axis$NumberAxis#getNumberFormatOverride()": 53.42857142857143,
        "org.jfree.chart.axis$NumberAxis#getRangeType()": 0.0,
        "org.jfree.chart.axis$NumberAxis#getTickUnit()": 55.371428571428574,
        "org.jfree.chart.axis$NumberAxis#hashCode()": 56.34285714285714,
        "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.9714285714285714,
        "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 55.371428571428574,
        "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 32.05714285714286,
        "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 43.714285714285715,
        "org.jfree.chart.axis$NumberAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 55.371428571428574,
        "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 32.05714285714286,
        "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 43.714285714285715,
        "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)": 46.628571428571426,
        "org.jfree.chart.axis$NumberAxis#setAutoRangeStickyZero(boolean)": 3.8857142857142857,
        "org.jfree.chart.axis$NumberAxis#setMarkerBand(org.jfree.chart.axis.MarkerAxisBand)": 0.0,
        "org.jfree.chart.axis$NumberAxis#setNumberFormatOverride(java.text.NumberFormat)": 0.9714285714285714,
        "org.jfree.chart.axis$NumberAxis#setRangeType(org.jfree.data.RangeType)": 0.9714285714285714,
        "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit)": 0.9714285714285714,
        "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)": 56.34285714285714,
        "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 55.371428571428574,
        "org.jfree.chart.axis$ValueAxis#<clinit>()": 233.14285714285714,
        "org.jfree.chart.axis$ValueAxis#ValueAxis(java.lang.String,org.jfree.chart.axis.TickUnitSource)": 230.22857142857143,
        "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 55.371428571428574,
        "org.jfree.chart.axis$ValueAxis#centerRange(double)": 0.0,
        "org.jfree.chart.axis$ValueAxis#clone()": 15.542857142857143,
        "org.jfree.chart.axis$ValueAxis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 54.4,
        "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 57.31428571428572,
        "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)": 64.11428571428571,
        "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 35.94285714285714,
        "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 43.714285714285715,
        "org.jfree.chart.axis$ValueAxis#getAutoRangeMinimumSize()": 175.82857142857142,
        "org.jfree.chart.axis$ValueAxis#getAutoTickIndex()": 0.0,
        "org.jfree.chart.axis$ValueAxis#getDefaultAutoRange()": 44.68571428571428,
        "org.jfree.chart.axis$ValueAxis#getDownArrow()": 0.0,
        "org.jfree.chart.axis$ValueAxis#getFixedAutoRange()": 175.82857142857142,
        "org.jfree.chart.axis$ValueAxis#getLeftArrow()": 0.0,
        "org.jfree.chart.axis$ValueAxis#getLowerBound()": 43.714285714285715,
        "org.jfree.chart.axis$ValueAxis#getLowerMargin()": 175.82857142857142,
        "org.jfree.chart.axis$ValueAxis#getRange()": 91.31428571428572,
        "org.jfree.chart.axis$ValueAxis#getRightArrow()": 0.0,
        "org.jfree.chart.axis$ValueAxis#getStandardTickUnits()": 57.31428571428572,
        "org.jfree.chart.axis$ValueAxis#getUpArrow()": 0.0,
        "org.jfree.chart.axis$ValueAxis#getUpperBound()": 43.714285714285715,
        "org.jfree.chart.axis$ValueAxis#getUpperMargin()": 175.82857142857142,
        "org.jfree.chart.axis$ValueAxis#isAutoRange()": 189.42857142857142,
        "org.jfree.chart.axis$ValueAxis#isAutoTickUnitSelection()": 57.31428571428572,
        "org.jfree.chart.axis$ValueAxis#isInverted()": 62.17142857142857,
        "org.jfree.chart.axis$ValueAxis#isNegativeArrowVisible()": 0.0,
        "org.jfree.chart.axis$ValueAxis#isPositiveArrowVisible()": 0.0,
        "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()": 57.31428571428572,
        "org.jfree.chart.axis$ValueAxis#lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 55.371428571428574,
        "org.jfree.chart.axis$ValueAxis#readObject(java.io.ObjectInputStream)": 27.2,
        "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)": 57.31428571428572,
        "org.jfree.chart.axis$ValueAxis#resizeRange(double)": 0.0,
        "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean)": 4.857142857142857,
        "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean,boolean)": 4.857142857142857,
        "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double)": 34.0,
        "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double,boolean)": 34.0,
        "org.jfree.chart.axis$ValueAxis#setAutoTickIndex(int)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean)": 0.9714285714285714,
        "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean,boolean)": 17.485714285714288,
        "org.jfree.chart.axis$ValueAxis#setDefaultAutoRange(org.jfree.data.Range)": 10.685714285714285,
        "org.jfree.chart.axis$ValueAxis#setDownArrow(java.awt.Shape)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setFixedAutoRange(double)": 4.857142857142857,
        "org.jfree.chart.axis$ValueAxis#setInverted(boolean)": 3.8857142857142857,
        "org.jfree.chart.axis$ValueAxis#setLeftArrow(java.awt.Shape)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setLowerBound(double)": 6.8,
        "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)": 15.542857142857143,
        "org.jfree.chart.axis$ValueAxis#setNegativeArrowVisible(boolean)": 0.9714285714285714,
        "org.jfree.chart.axis$ValueAxis#setPositiveArrowVisible(boolean)": 0.9714285714285714,
        "org.jfree.chart.axis$ValueAxis#setRange(double,double)": 10.685714285714285,
        "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)": 14.571428571428571,
        "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)": 205.94285714285715,
        "org.jfree.chart.axis$ValueAxis#setRangeAboutValue(double,double)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(double,double)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range,boolean,boolean)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setRightArrow(java.awt.Shape)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setStandardTickUnits(org.jfree.chart.axis.TickUnitSource)": 13.6,
        "org.jfree.chart.axis$ValueAxis#setUpArrow(java.awt.Shape)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setUpperBound(double)": 4.857142857142857,
        "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)": 15.542857142857143,
        "org.jfree.chart.axis$ValueAxis#setVerticalTickLabels(boolean)": 0.9714285714285714,
        "org.jfree.chart.axis$ValueAxis#writeObject(java.io.ObjectOutputStream)": 27.2,
        "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)": 0.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)": 486.01612903225805,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart)": 0.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart,org.jfree.chart.event.ChartChangeEventType)": 486.01612903225805,
        "org.jfree.chart.event$ChartChangeEvent#getChart()": 0.0,
        "org.jfree.chart.event$ChartChangeEvent#getType()": 0.0,
        "org.jfree.chart.event$ChartChangeEvent#setChart(org.jfree.chart.JFreeChart)": 72.85714285714286,
        "org.jfree.chart.event$ChartChangeEvent#setType(org.jfree.chart.event.ChartChangeEventType)": 187.9516129032258,
        "org.jfree.chart.event$ChartChangeEventType#<clinit>()": 486.01612903225805,
        "org.jfree.chart.event$ChartChangeEventType#ChartChangeEventType(java.lang.String)": 486.01612903225805,
        "org.jfree.chart.event$ChartChangeEventType#equals(java.lang.Object)": 0.0,
        "org.jfree.chart.event$ChartChangeEventType#hashCode()": 0.0,
        "org.jfree.chart.event$ChartChangeEventType#readResolve()": 0.0,
        "org.jfree.chart.event$ChartChangeEventType#toString()": 0.0,
        "org.jfree.chart.event$MarkerChangeEvent#MarkerChangeEvent(org.jfree.chart.plot.Marker)": 0.0588235294117645,
        "org.jfree.chart.event$MarkerChangeEvent#getMarker()": 16.514285714285716,
        "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)": 231.5,
        "org.jfree.chart.event$PlotChangeEvent#getPlot()": 0.0,
        "org.jfree.chart.plot$CategoryMarker#CategoryMarker(java.lang.Comparable)": -26.147058823529413,
        "org.jfree.chart.plot$CategoryMarker#CategoryMarker(java.lang.Comparable,java.awt.Paint,java.awt.Stroke)": -24.205882352941178,
        "org.jfree.chart.plot$CategoryMarker#CategoryMarker(java.lang.Comparable,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)": -24.205882352941178,
        "org.jfree.chart.plot$CategoryMarker#equals(java.lang.Object)": 4.857142857142857,
        "org.jfree.chart.plot$CategoryMarker#getDrawAsLine()": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryMarker#getKey()": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryMarker#setDrawAsLine(boolean)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryMarker#setKey(java.lang.Comparable)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#<clinit>()": 85.81818181818181,
        "org.jfree.chart.plot$CategoryPlot#CategoryPlot()": -7.272727272727273,
        "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)": 85.81818181818181,
        "org.jfree.chart.plot$CategoryPlot#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation,boolean)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)": 1.9428571428571428,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer,boolean)": 1.9428571428571428,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker)": 1.9428571428571428,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)": 1.9428571428571428,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 85.81818181818181,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 85.81818181818181,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker)": 1.9428571428571428,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 85.81818181818181,
        "org.jfree.chart.plot$CategoryPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#clearAnnotations()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#clearDomainAxes()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers()": 1.9428571428571428,
        "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers(int)": 1.9428571428571428,
        "org.jfree.chart.plot$CategoryPlot#clearRangeAxes()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers()": 4.857142857142857,
        "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers(int)": 4.857142857142857,
        "org.jfree.chart.plot$CategoryPlot#clone()": 2.914285714285714,
        "org.jfree.chart.plot$CategoryPlot#configureDomainAxes()": 85.81818181818181,
        "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()": 85.81818181818181,
        "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 85.81818181818181,
        "org.jfree.chart.plot$CategoryPlot#datasetsMappedToDomainAxis(int)": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#datasetsMappedToRangeAxis(int)": 95.2,
        "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 32.05714285714286,
        "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#drawRangeLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)": 30.114285714285714,
        "org.jfree.chart.plot$CategoryPlot#getAnchorValue()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getAnnotations()": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#getAxisOffset()": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#getCategories()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#getColumnRenderingOrder()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 95.2,
        "org.jfree.chart.plot$CategoryPlot#getDataset()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDataset(int)": 85.81818181818181,
        "org.jfree.chart.plot$CategoryPlot#getDatasetCount()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDatasetRenderingOrder()": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxis()": 38.857142857142854,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxis(int)": 39.82857142857143,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisCount()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge()": 30.114285714285714,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisForDataset(int)": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisIndex(org.jfree.chart.axis.CategoryAxis)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation()": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation(int)": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlinePaint()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlinePosition()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlineStroke()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDrawSharedDomainAxis()": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#getFixedDomainAxisSpace()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getFixedLegendItems()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getFixedRangeAxisSpace()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getIndexOf(org.jfree.chart.renderer.category.CategoryItemRenderer)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#getLegendItems()": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#getOrientation()": 42.74285714285714,
        "org.jfree.chart.plot$CategoryPlot#getPlotType()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxis()": 58.285714285714285,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)": 85.81818181818181,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisCount()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisForDataset(int)": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation(int)": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairPaint()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairStroke()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairValue()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeGridlinePaint()": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#getRangeGridlineStroke()": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRenderer()": 55.371428571428574,
        "org.jfree.chart.plot$CategoryPlot#getRenderer(int)": 56.34285714285714,
        "org.jfree.chart.plot$CategoryPlot#getRendererForDataset(org.jfree.data.category.CategoryDataset)": 84.51428571428572,
        "org.jfree.chart.plot$CategoryPlot#getRowRenderingOrder()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getWeight()": 1.9428571428571428,
        "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#isDomainGridlinesVisible()": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#isDomainZoomable()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeCrosshairLockedOnData()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeCrosshairVisible()": 35.94285714285714,
        "org.jfree.chart.plot$CategoryPlot#isRangeGridlinesVisible()": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#isRangeZoomable()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxis(int,int)": 85.81818181818181,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxis(int,int)": 85.81818181818181,
        "org.jfree.chart.plot$CategoryPlot#readObject(java.io.ObjectInputStream)": 7.771428571428571,
        "org.jfree.chart.plot$CategoryPlot#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation,boolean)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": -31.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": -31.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker)": -31.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": -31.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": -31.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": -31.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker)": -31.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": -31.0,
        "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo)": 34.971428571428575,
        "org.jfree.chart.plot$CategoryPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)": 23.314285714285713,
        "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double,boolean)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setColumnRenderingOrder(org.jfree.chart.util.SortOrder)": 8.742857142857144,
        "org.jfree.chart.plot$CategoryPlot#setDataset(int,org.jfree.data.category.CategoryDataset)": 21.37142857142857,
        "org.jfree.chart.plot$CategoryPlot#setDataset(org.jfree.data.category.CategoryDataset)": 13.6,
        "org.jfree.chart.plot$CategoryPlot#setDatasetRenderingOrder(org.jfree.chart.plot.DatasetRenderingOrder)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxes(org.jfree.chart.axis.CategoryAxis[])": 0.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis)": 7.771428571428571,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)": 7.771428571428571,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(org.jfree.chart.axis.CategoryAxis)": 5.828571428571428,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 85.81818181818181,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 85.81818181818181,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePaint(java.awt.Paint)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePosition(org.jfree.chart.axis.CategoryAnchor)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlineStroke(java.awt.Stroke)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinesVisible(boolean)": 6.8,
        "org.jfree.chart.plot$CategoryPlot#setDrawSharedDomainAxis(boolean)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setFixedLegendItems(org.jfree.chart.LegendItemCollection)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)": 62.17142857142857,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])": 0.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)": 10.685714285714285,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)": 10.685714285714285,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)": 7.771428571428571,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 85.81818181818181,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 85.81818181818181,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairLockedOnData(boolean)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairPaint(java.awt.Paint)": 1.9428571428571428,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairStroke(java.awt.Stroke)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double,boolean)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairVisible(boolean)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlinePaint(java.awt.Paint)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlineStroke(java.awt.Stroke)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlinesVisible(boolean)": 0.9714285714285714,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer)": 3.8857142857142857,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)": 5.828571428571428,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)": 2.914285714285714,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderers(org.jfree.chart.renderer.category.CategoryItemRenderer[])": 0.0,
        "org.jfree.chart.plot$CategoryPlot#setRowRenderingOrder(org.jfree.chart.util.SortOrder)": 4.857142857142857,
        "org.jfree.chart.plot$CategoryPlot#setWeight(int)": 8.742857142857144,
        "org.jfree.chart.plot$CategoryPlot#writeObject(java.io.ObjectOutputStream)": 7.771428571428571,
        "org.jfree.chart.plot$CategoryPlot#zoom(double)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 0.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#<clinit>()": 179.24193548387098,
        "org.jfree.chart.plot$DatasetRenderingOrder#DatasetRenderingOrder(java.lang.String)": 179.24193548387098,
        "org.jfree.chart.plot$DatasetRenderingOrder#equals(java.lang.Object)": 16.514285714285716,
        "org.jfree.chart.plot$DatasetRenderingOrder#hashCode()": 0.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#readResolve()": 16.514285714285716,
        "org.jfree.chart.plot$DatasetRenderingOrder#toString()": 16.514285714285716,
        "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()": 246.01612903225805,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier()": 246.01612903225805,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])": 246.01612903225805,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])": 1.9428571428571428,
        "org.jfree.chart.plot$DefaultDrawingSupplier#clone()": 25.257142857142856,
        "org.jfree.chart.plot$DefaultDrawingSupplier#createStandardSeriesShapes()": 246.01612903225805,
        "org.jfree.chart.plot$DefaultDrawingSupplier#equalShapes(java.awt.Shape[],java.awt.Shape[])": 76.74285714285715,
        "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)": 76.74285714285715,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextFillPaint()": 0.9714285714285714,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlinePaint()": 1.9428571428571428,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlineStroke()": 0.9714285714285714,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextPaint()": 70.91428571428571,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextShape()": 21.37142857142857,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextStroke()": 0.9714285714285714,
        "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double)": 246.01612903225805,
        "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double,double)": 246.01612903225805,
        "org.jfree.chart.plot$DefaultDrawingSupplier#readObject(java.io.ObjectInputStream)": 32.05714285714286,
        "org.jfree.chart.plot$DefaultDrawingSupplier#writeObject(java.io.ObjectOutputStream)": 32.05714285714286,
        "org.jfree.chart.plot$IntervalMarker#IntervalMarker(double,double)": 6.8,
        "org.jfree.chart.plot$IntervalMarker#IntervalMarker(double,double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)": 6.8,
        "org.jfree.chart.plot$IntervalMarker#clone()": 0.9714285714285714,
        "org.jfree.chart.plot$IntervalMarker#equals(java.lang.Object)": 6.8,
        "org.jfree.chart.plot$IntervalMarker#getEndValue()": 2.914285714285714,
        "org.jfree.chart.plot$IntervalMarker#getGradientPaintTransformer()": 0.0,
        "org.jfree.chart.plot$IntervalMarker#getStartValue()": 2.914285714285714,
        "org.jfree.chart.plot$IntervalMarker#setEndValue(double)": 0.9714285714285714,
        "org.jfree.chart.plot$IntervalMarker#setGradientPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)": 0.9714285714285714,
        "org.jfree.chart.plot$IntervalMarker#setStartValue(double)": 0.9714285714285714,
        "org.jfree.chart.plot$Marker#Marker()": 17.09375,
        "org.jfree.chart.plot$Marker#Marker(java.awt.Paint)": 17.09375,
        "org.jfree.chart.plot$Marker#Marker(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)": 125.0483870967742,
        "org.jfree.chart.plot$Marker#addChangeListener(org.jfree.chart.event.MarkerChangeListener)": 107.15151515151516,
        "org.jfree.chart.plot$Marker#clone()": 2.914285714285714,
        "org.jfree.chart.plot$Marker#equals(java.lang.Object)": 23.314285714285713,
        "org.jfree.chart.plot$Marker#getAlpha()": 32.05714285714286,
        "org.jfree.chart.plot$Marker#getLabel()": 33.02857142857143,
        "org.jfree.chart.plot$Marker#getLabelAnchor()": 33.02857142857143,
        "org.jfree.chart.plot$Marker#getLabelFont()": 0.9714285714285714,
        "org.jfree.chart.plot$Marker#getLabelOffset()": 0.9714285714285714,
        "org.jfree.chart.plot$Marker#getLabelOffsetType()": 0.9714285714285714,
        "org.jfree.chart.plot$Marker#getLabelPaint()": 0.9714285714285714,
        "org.jfree.chart.plot$Marker#getLabelTextAnchor()": 0.9714285714285714,
        "org.jfree.chart.plot$Marker#getListeners(java.lang.Class)": 5.828571428571428,
        "org.jfree.chart.plot$Marker#getOutlinePaint()": 4.857142857142857,
        "org.jfree.chart.plot$Marker#getOutlineStroke()": 1.9428571428571428,
        "org.jfree.chart.plot$Marker#getPaint()": 34.971428571428575,
        "org.jfree.chart.plot$Marker#getStroke()": 32.05714285714286,
        "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)": 0.0588235294117645,
        "org.jfree.chart.plot$Marker#readObject(java.io.ObjectInputStream)": 12.628571428571428,
        "org.jfree.chart.plot$Marker#removeChangeListener(org.jfree.chart.event.MarkerChangeListener)": 8.742857142857144,
        "org.jfree.chart.plot$Marker#setAlpha(float)": 1.9428571428571428,
        "org.jfree.chart.plot$Marker#setLabel(java.lang.String)": 1.9428571428571428,
        "org.jfree.chart.plot$Marker#setLabelAnchor(org.jfree.chart.util.RectangleAnchor)": 1.9428571428571428,
        "org.jfree.chart.plot$Marker#setLabelFont(java.awt.Font)": 1.9428571428571428,
        "org.jfree.chart.plot$Marker#setLabelOffset(org.jfree.chart.util.RectangleInsets)": 1.9428571428571428,
        "org.jfree.chart.plot$Marker#setLabelOffsetType(org.jfree.chart.util.LengthAdjustmentType)": -15.470588235294118,
        "org.jfree.chart.plot$Marker#setLabelPaint(java.awt.Paint)": 1.9428571428571428,
        "org.jfree.chart.plot$Marker#setLabelTextAnchor(org.jfree.chart.text.TextAnchor)": 1.9428571428571428,
        "org.jfree.chart.plot$Marker#setOutlinePaint(java.awt.Paint)": 1.9428571428571428,
        "org.jfree.chart.plot$Marker#setOutlineStroke(java.awt.Stroke)": 1.9428571428571428,
        "org.jfree.chart.plot$Marker#setPaint(java.awt.Paint)": 4.857142857142857,
        "org.jfree.chart.plot$Marker#setStroke(java.awt.Stroke)": 1.9428571428571428,
        "org.jfree.chart.plot$Marker#writeObject(java.io.ObjectOutputStream)": 12.628571428571428,
        "org.jfree.chart.plot$Plot#<clinit>()": 243.11290322580646,
        "org.jfree.chart.plot$Plot#Plot()": 243.11290322580646,
        "org.jfree.chart.plot$Plot#addChangeListener(org.jfree.chart.event.PlotChangeListener)": 177.77142857142857,
        "org.jfree.chart.plot$Plot#axisChanged(org.jfree.chart.event.AxisChangeEvent)": 11.657142857142857,
        "org.jfree.chart.plot$Plot#clone()": 24.285714285714285,
        "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 8.742857142857144,
        "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 4.857142857142857,
        "org.jfree.chart.plot$Plot#drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 58.285714285714285,
        "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 10.685714285714285,
        "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 58.285714285714285,
        "org.jfree.chart.plot$Plot#equals(java.lang.Object)": 73.82857142857142,
        "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 4.857142857142857,
        "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)": 58.285714285714285,
        "org.jfree.chart.plot$Plot#fireChangeEvent()": 193.45454545454547,
        "org.jfree.chart.plot$Plot#getBackgroundAlpha()": 2.914285714285714,
        "org.jfree.chart.plot$Plot#getBackgroundImage()": 2.914285714285714,
        "org.jfree.chart.plot$Plot#getBackgroundImageAlignment()": 0.0,
        "org.jfree.chart.plot$Plot#getBackgroundImageAlpha()": 0.0,
        "org.jfree.chart.plot$Plot#getBackgroundPaint()": 2.914285714285714,
        "org.jfree.chart.plot$Plot#getDatasetGroup()": 0.0,
        "org.jfree.chart.plot$Plot#getDrawingSupplier()": 71.88571428571429,
        "org.jfree.chart.plot$Plot#getForegroundAlpha()": 61.2,
        "org.jfree.chart.plot$Plot#getInsets()": 62.17142857142857,
        "org.jfree.chart.plot$Plot#getLegendItems()": 0.9714285714285714,
        "org.jfree.chart.plot$Plot#getNoDataMessage()": 0.0,
        "org.jfree.chart.plot$Plot#getNoDataMessageFont()": 0.0,
        "org.jfree.chart.plot$Plot#getNoDataMessagePaint()": 0.0,
        "org.jfree.chart.plot$Plot#getOutlinePaint()": 2.914285714285714,
        "org.jfree.chart.plot$Plot#getOutlineStroke()": 2.914285714285714,
        "org.jfree.chart.plot$Plot#getParent()": 183.11290322580646,
        "org.jfree.chart.plot$Plot#getRectX(double,double,double,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.plot$Plot#getRectY(double,double,double,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.plot$Plot#getRootPlot()": 0.0,
        "org.jfree.chart.plot$Plot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$Plot#isOutlineVisible()": 0.0,
        "org.jfree.chart.plot$Plot#isSubplot()": 0.0,
        "org.jfree.chart.plot$Plot#markerChanged(org.jfree.chart.event.MarkerChangeEvent)": 0.0,
        "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)": 231.5,
        "org.jfree.chart.plot$Plot#readObject(java.io.ObjectInputStream)": 31.085714285714285,
        "org.jfree.chart.plot$Plot#removeChangeListener(org.jfree.chart.event.PlotChangeListener)": 3.8857142857142857,
        "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)": 56.34285714285714,
        "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)": 56.34285714285714,
        "org.jfree.chart.plot$Plot#setBackgroundAlpha(float)": 0.9714285714285714,
        "org.jfree.chart.plot$Plot#setBackgroundImage(java.awt.Image)": 0.9714285714285714,
        "org.jfree.chart.plot$Plot#setBackgroundImageAlignment(int)": 0.9714285714285714,
        "org.jfree.chart.plot$Plot#setBackgroundImageAlpha(float)": 0.9714285714285714,
        "org.jfree.chart.plot$Plot#setBackgroundPaint(java.awt.Paint)": 4.857142857142857,
        "org.jfree.chart.plot$Plot#setDatasetGroup(org.jfree.data.general.DatasetGroup)": 1.9428571428571428,
        "org.jfree.chart.plot$Plot#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)": 0.9714285714285714,
        "org.jfree.chart.plot$Plot#setForegroundAlpha(float)": 7.771428571428571,
        "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)": 30.114285714285714,
        "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets,boolean)": 34.0,
        "org.jfree.chart.plot$Plot#setNoDataMessage(java.lang.String)": 0.9714285714285714,
        "org.jfree.chart.plot$Plot#setNoDataMessageFont(java.awt.Font)": 0.9714285714285714,
        "org.jfree.chart.plot$Plot#setNoDataMessagePaint(java.awt.Paint)": 0.9714285714285714,
        "org.jfree.chart.plot$Plot#setOutlinePaint(java.awt.Paint)": 0.9714285714285714,
        "org.jfree.chart.plot$Plot#setOutlineStroke(java.awt.Stroke)": 0.9714285714285714,
        "org.jfree.chart.plot$Plot#setOutlineVisible(boolean)": 0.9714285714285714,
        "org.jfree.chart.plot$Plot#setParent(org.jfree.chart.plot.Plot)": 15.542857142857143,
        "org.jfree.chart.plot$Plot#writeObject(java.io.ObjectOutputStream)": 31.085714285714285,
        "org.jfree.chart.plot$Plot#zoom(double)": 0.0,
        "org.jfree.chart.plot$PlotOrientation#<clinit>()": 187.9516129032258,
        "org.jfree.chart.plot$PlotOrientation#PlotOrientation(java.lang.String)": 187.9516129032258,
        "org.jfree.chart.plot$PlotOrientation#equals(java.lang.Object)": 18.457142857142856,
        "org.jfree.chart.plot$PlotOrientation#hashCode()": 0.0,
        "org.jfree.chart.plot$PlotOrientation#readResolve()": 17.485714285714288,
        "org.jfree.chart.plot$PlotOrientation#toString()": 18.457142857142856,
        "org.jfree.chart.plot$SeriesRenderingOrder#<clinit>()": 70.3030303030303,
        "org.jfree.chart.plot$SeriesRenderingOrder#SeriesRenderingOrder(java.lang.String)": 70.3030303030303,
        "org.jfree.chart.plot$SeriesRenderingOrder#equals(java.lang.Object)": 8.742857142857144,
        "org.jfree.chart.plot$SeriesRenderingOrder#hashCode()": 0.0,
        "org.jfree.chart.plot$SeriesRenderingOrder#readResolve()": 8.742857142857144,
        "org.jfree.chart.plot$SeriesRenderingOrder#toString()": 8.742857142857144,
        "org.jfree.chart.plot$ValueMarker#ValueMarker(double)": 17.09375,
        "org.jfree.chart.plot$ValueMarker#ValueMarker(double,java.awt.Paint,java.awt.Stroke)": 0.0,
        "org.jfree.chart.plot$ValueMarker#ValueMarker(double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)": 86.78787878787878,
        "org.jfree.chart.plot$ValueMarker#equals(java.lang.Object)": 28.17142857142857,
        "org.jfree.chart.plot$ValueMarker#getValue()": 37.885714285714286,
        "org.jfree.chart.plot$ValueMarker#setValue(double)": 1.9428571428571428,
        "org.jfree.chart.plot$XYPlot#<clinit>()": 70.3030303030303,
        "org.jfree.chart.plot$XYPlot#XYPlot()": 1.4545454545454533,
        "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)": 70.3030303030303,
        "org.jfree.chart.plot$XYPlot#addAnnotation(org.jfree.chart.annotations.XYAnnotation)": 7.771428571428571,
        "org.jfree.chart.plot$XYPlot#addAnnotation(org.jfree.chart.annotations.XYAnnotation,boolean)": 7.771428571428571,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 2.914285714285714,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 2.914285714285714,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(org.jfree.chart.plot.Marker)": 1.9428571428571428,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 2.914285714285714,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 3.8857142857142857,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 3.8857142857142857,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(org.jfree.chart.plot.Marker)": 2.914285714285714,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 3.8857142857142857,
        "org.jfree.chart.plot$XYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#clearAnnotations()": 0.0,
        "org.jfree.chart.plot$XYPlot#clearDomainAxes()": 0.0,
        "org.jfree.chart.plot$XYPlot#clearDomainMarkers()": 1.9428571428571428,
        "org.jfree.chart.plot$XYPlot#clearDomainMarkers(int)": 1.9428571428571428,
        "org.jfree.chart.plot$XYPlot#clearRangeAxes()": 0.0,
        "org.jfree.chart.plot$XYPlot#clearRangeMarkers()": 1.9428571428571428,
        "org.jfree.chart.plot$XYPlot#clearRangeMarkers(int)": 1.9428571428571428,
        "org.jfree.chart.plot$XYPlot#clone()": 6.8,
        "org.jfree.chart.plot$XYPlot#configureDomainAxes()": 70.3030303030303,
        "org.jfree.chart.plot$XYPlot#configureRangeAxes()": 70.3030303030303,
        "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 70.3030303030303,
        "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#drawDomainTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#drawRangeTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$XYPlot#drawZeroDomainBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)": 36.91428571428571,
        "org.jfree.chart.plot$XYPlot#getAnnotations()": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#getAxisOffset()": 0.0,
        "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 70.91428571428571,
        "org.jfree.chart.plot$XYPlot#getDataset()": 0.0,
        "org.jfree.chart.plot$XYPlot#getDataset(int)": 70.3030303030303,
        "org.jfree.chart.plot$XYPlot#getDatasetCount()": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#getDatasetRenderingOrder()": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#getDatasetsMappedToDomainAxis(java.lang.Integer)": 67.02857142857142,
        "org.jfree.chart.plot$XYPlot#getDatasetsMappedToRangeAxis(java.lang.Integer)": 68.97142857142858,
        "org.jfree.chart.plot$XYPlot#getDomainAxis()": 32.05714285714286,
        "org.jfree.chart.plot$XYPlot#getDomainAxis(int)": 34.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisCount()": 0.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#getDomainAxisForDataset(int)": 20.4,
        "org.jfree.chart.plot$XYPlot#getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)": 70.91428571428571,
        "org.jfree.chart.plot$XYPlot#getDomainAxisLocation()": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#getDomainAxisLocation(int)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#getDomainCrosshairPaint()": 0.0,
        "org.jfree.chart.plot$XYPlot#getDomainCrosshairStroke()": 0.0,
        "org.jfree.chart.plot$XYPlot#getDomainCrosshairValue()": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#getDomainGridlinePaint()": 20.4,
        "org.jfree.chart.plot$XYPlot#getDomainGridlineStroke()": 20.4,
        "org.jfree.chart.plot$XYPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)": 20.4,
        "org.jfree.chart.plot$XYPlot#getDomainMarkers(org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$XYPlot#getDomainTickBandPaint()": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#getDomainZeroBaselinePaint()": 0.0,
        "org.jfree.chart.plot$XYPlot#getDomainZeroBaselineStroke()": 0.0,
        "org.jfree.chart.plot$XYPlot#getFixedDomainAxisSpace()": 0.0,
        "org.jfree.chart.plot$XYPlot#getFixedLegendItems()": 0.0,
        "org.jfree.chart.plot$XYPlot#getFixedRangeAxisSpace()": 0.0,
        "org.jfree.chart.plot$XYPlot#getIndexOf(org.jfree.chart.renderer.xy.XYItemRenderer)": 0.0,
        "org.jfree.chart.plot$XYPlot#getLegendItems()": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#getOrientation()": 22.34285714285714,
        "org.jfree.chart.plot$XYPlot#getPlotType()": 0.0,
        "org.jfree.chart.plot$XYPlot#getQuadrantOrigin()": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#getQuadrantPaint(int)": 0.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxis()": 41.77142857142857,
        "org.jfree.chart.plot$XYPlot#getRangeAxis(int)": 43.714285714285715,
        "org.jfree.chart.plot$XYPlot#getRangeAxisCount()": 0.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#getRangeAxisForDataset(int)": 20.4,
        "org.jfree.chart.plot$XYPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)": 70.91428571428571,
        "org.jfree.chart.plot$XYPlot#getRangeAxisLocation()": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#getRangeAxisLocation(int)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#getRangeCrosshairPaint()": 0.0,
        "org.jfree.chart.plot$XYPlot#getRangeCrosshairStroke()": 0.0,
        "org.jfree.chart.plot$XYPlot#getRangeCrosshairValue()": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#getRangeGridlinePaint()": 20.4,
        "org.jfree.chart.plot$XYPlot#getRangeGridlineStroke()": 20.4,
        "org.jfree.chart.plot$XYPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)": 20.4,
        "org.jfree.chart.plot$XYPlot#getRangeMarkers(org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$XYPlot#getRangeTickBandPaint()": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#getRangeZeroBaselinePaint()": 0.0,
        "org.jfree.chart.plot$XYPlot#getRangeZeroBaselineStroke()": 0.0,
        "org.jfree.chart.plot$XYPlot#getRenderer()": 50.51428571428571,
        "org.jfree.chart.plot$XYPlot#getRenderer(int)": 58.285714285714285,
        "org.jfree.chart.plot$XYPlot#getRendererForDataset(org.jfree.data.xy.XYDataset)": 66.05714285714286,
        "org.jfree.chart.plot$XYPlot#getSeriesCount()": 0.0,
        "org.jfree.chart.plot$XYPlot#getSeriesRenderingOrder()": 16.514285714285716,
        "org.jfree.chart.plot$XYPlot#getWeight()": 1.9428571428571428,
        "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$XYPlot#indexOf(org.jfree.data.xy.XYDataset)": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#isDomainCrosshairLockedOnData()": 16.514285714285716,
        "org.jfree.chart.plot$XYPlot#isDomainCrosshairVisible()": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#isDomainGridlinesVisible()": 20.4,
        "org.jfree.chart.plot$XYPlot#isDomainZeroBaselineVisible()": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#isDomainZoomable()": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#isRangeCrosshairLockedOnData()": 16.514285714285716,
        "org.jfree.chart.plot$XYPlot#isRangeCrosshairVisible()": 22.34285714285714,
        "org.jfree.chart.plot$XYPlot#isRangeGridlinesVisible()": 20.4,
        "org.jfree.chart.plot$XYPlot#isRangeZeroBaselineVisible()": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#isRangeZoomable()": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#mapDatasetToDomainAxis(int,int)": 70.3030303030303,
        "org.jfree.chart.plot$XYPlot#mapDatasetToRangeAxis(int,int)": 70.3030303030303,
        "org.jfree.chart.plot$XYPlot#readObject(java.io.ObjectInputStream)": 8.742857142857144,
        "org.jfree.chart.plot$XYPlot#removeAnnotation(org.jfree.chart.annotations.XYAnnotation)": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#removeAnnotation(org.jfree.chart.annotations.XYAnnotation,boolean)": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": -31.0,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": -31.0,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(org.jfree.chart.plot.Marker)": -31.0,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": -31.0,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": -31.0,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": -31.0,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(org.jfree.chart.plot.Marker)": -31.0,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": -31.0,
        "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)": 13.6,
        "org.jfree.chart.plot$XYPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#setDataset(int,org.jfree.data.xy.XYDataset)": 18.457142857142856,
        "org.jfree.chart.plot$XYPlot#setDataset(org.jfree.data.xy.XYDataset)": 6.8,
        "org.jfree.chart.plot$XYPlot#setDatasetRenderingOrder(org.jfree.chart.plot.DatasetRenderingOrder)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxes(org.jfree.chart.axis.ValueAxis[])": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis)": 6.8,
        "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)": 6.8,
        "org.jfree.chart.plot$XYPlot#setDomainAxis(org.jfree.chart.axis.ValueAxis)": 4.857142857142857,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 1.9428571428571428,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 1.9428571428571428,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation)": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairLockedOnData(boolean)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairPaint(java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairStroke(java.awt.Stroke)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double,boolean)": 21.37142857142857,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairVisible(boolean)": 5.828571428571428,
        "org.jfree.chart.plot$XYPlot#setDomainGridlinePaint(java.awt.Paint)": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#setDomainGridlineStroke(java.awt.Stroke)": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#setDomainGridlinesVisible(boolean)": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#setDomainTickBandPaint(java.awt.Paint)": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#setDomainZeroBaselinePaint(java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainZeroBaselineStroke(java.awt.Stroke)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainZeroBaselineVisible(boolean)": 0.0,
        "org.jfree.chart.plot$XYPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace)": 0.0,
        "org.jfree.chart.plot$XYPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 0.0,
        "org.jfree.chart.plot$XYPlot#setFixedLegendItems(org.jfree.chart.LegendItemCollection)": 0.0,
        "org.jfree.chart.plot$XYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)": 0.0,
        "org.jfree.chart.plot$XYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 0.0,
        "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)": 42.74285714285714,
        "org.jfree.chart.plot$XYPlot#setQuadrantOrigin(java.awt.geom.Point2D)": 1.9428571428571428,
        "org.jfree.chart.plot$XYPlot#setQuadrantPaint(int,java.awt.Paint)": 1.9428571428571428,
        "org.jfree.chart.plot$XYPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])": 0.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)": 3.8857142857142857,
        "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)": 3.8857142857142857,
        "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)": 11.657142857142857,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 1.9428571428571428,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 7.771428571428571,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation)": 6.8,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 0.0,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairLockedOnData(boolean)": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairPaint(java.awt.Paint)": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairStroke(java.awt.Stroke)": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double)": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double,boolean)": 22.34285714285714,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairVisible(boolean)": 6.8,
        "org.jfree.chart.plot$XYPlot#setRangeGridlinePaint(java.awt.Paint)": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#setRangeGridlineStroke(java.awt.Stroke)": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#setRangeGridlinesVisible(boolean)": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#setRangeTickBandPaint(java.awt.Paint)": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#setRangeZeroBaselinePaint(java.awt.Paint)": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#setRangeZeroBaselineStroke(java.awt.Stroke)": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#setRangeZeroBaselineVisible(boolean)": 0.9714285714285714,
        "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer)": 34.971428571428575,
        "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)": 34.971428571428575,
        "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)": 29.142857142857142,
        "org.jfree.chart.plot$XYPlot#setRenderers(org.jfree.chart.renderer.xy.XYItemRenderer[])": 0.0,
        "org.jfree.chart.plot$XYPlot#setSeriesRenderingOrder(org.jfree.chart.plot.SeriesRenderingOrder)": 0.0,
        "org.jfree.chart.plot$XYPlot#setWeight(int)": 8.742857142857144,
        "org.jfree.chart.plot$XYPlot#writeObject(java.io.ObjectOutputStream)": 8.742857142857144,
        "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 0.0,
        "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 0.0,
        "org.jfree.chart.text$TextAnchor#<clinit>()": 485.0483870967742,
        "org.jfree.chart.text$TextAnchor#TextAnchor(java.lang.String)": 485.0483870967742,
        "org.jfree.chart.text$TextAnchor#equals(java.lang.Object)": 202.05714285714285,
        "org.jfree.chart.text$TextAnchor#hashCode()": 6.8,
        "org.jfree.chart.text$TextAnchor#readResolve()": 81.6,
        "org.jfree.chart.text$TextAnchor#toString()": 0.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList()": 464.7258064516129,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int)": 464.7258064516129,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int,int)": 464.7258064516129,
        "org.jfree.chart.util$AbstractObjectList#clear()": 0.0,
        "org.jfree.chart.util$AbstractObjectList#clone()": 69.94285714285715,
        "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)": 250.62857142857143,
        "org.jfree.chart.util$AbstractObjectList#get(int)": 216.01612903225808,
        "org.jfree.chart.util$AbstractObjectList#hashCode()": 45.65714285714286,
        "org.jfree.chart.util$AbstractObjectList#indexOf(java.lang.Object)": 166.1142857142857,
        "org.jfree.chart.util$AbstractObjectList#readObject(java.io.ObjectInputStream)": 75.77142857142857,
        "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)": 218.91935483870967,
        "org.jfree.chart.util$AbstractObjectList#size()": 401.8225806451613,
        "org.jfree.chart.util$AbstractObjectList#writeObject(java.io.ObjectOutputStream)": 75.77142857142857,
        "org.jfree.chart.util$Layer#<clinit>()": 122.14516129032259,
        "org.jfree.chart.util$Layer#Layer(java.lang.String)": 122.14516129032259,
        "org.jfree.chart.util$Layer#equals(java.lang.Object)": 59.25714285714286,
        "org.jfree.chart.util$Layer#hashCode()": 0.0,
        "org.jfree.chart.util$Layer#readResolve()": 0.0,
        "org.jfree.chart.util$Layer#toString()": 0.0,
        "org.jfree.chart.util$LengthAdjustmentType#<clinit>()": 125.0483870967742,
        "org.jfree.chart.util$LengthAdjustmentType#LengthAdjustmentType(java.lang.String)": 125.0483870967742,
        "org.jfree.chart.util$LengthAdjustmentType#equals(java.lang.Object)": 23.314285714285713,
        "org.jfree.chart.util$LengthAdjustmentType#hashCode()": 0.0,
        "org.jfree.chart.util$LengthAdjustmentType#readResolve()": 12.628571428571428,
        "org.jfree.chart.util$LengthAdjustmentType#toString()": 0.0,
        "org.jfree.chart.util$ObjectList#ObjectList()": 448.2741935483871,
        "org.jfree.chart.util$ObjectList#ObjectList(int)": 0.0,
        "org.jfree.chart.util$ObjectList#get(int)": 189.88709677419354,
        "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)": 166.1142857142857,
        "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)": 190.8548387096774,
        "org.jfree.chart.util$RectangleAnchor#<clinit>()": 235.3709677419355,
        "org.jfree.chart.util$RectangleAnchor#RectangleAnchor(java.lang.String)": 235.3709677419355,
        "org.jfree.chart.util$RectangleAnchor#coordinates(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleAnchor)": 49.542857142857144,
        "org.jfree.chart.util$RectangleAnchor#createRectangle(org.jfree.chart.util.Size2D,double,double,org.jfree.chart.util.RectangleAnchor)": 1.9428571428571428,
        "org.jfree.chart.util$RectangleAnchor#equals(java.lang.Object)": 43.714285714285715,
        "org.jfree.chart.util$RectangleAnchor#hashCode()": 1.9428571428571428,
        "org.jfree.chart.util$RectangleAnchor#readResolve()": 26.228571428571428,
        "org.jfree.chart.util$RectangleAnchor#toString()": 0.0,
        "org.jfree.chart.util$RectangleInsets#<clinit>()": 404.7258064516129,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets()": 0.0,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)": 386.33870967741933,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets(org.jfree.chart.util.UnitType,double,double,double,double)": 404.7258064516129,
        "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)": 63.142857142857146,
        "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)": 64.11428571428571,
        "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)": 63.142857142857146,
        "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)": 64.11428571428571,
        "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)": 63.142857142857146,
        "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)": 64.11428571428571,
        "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)": 63.142857142857146,
        "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)": 64.11428571428571,
        "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)": 0.0,
        "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)": 0.0,
        "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D)": 57.31428571428572,
        "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)": 57.31428571428572,
        "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)": 149.6,
        "org.jfree.chart.util$RectangleInsets#extendHeight(double)": 63.142857142857146,
        "org.jfree.chart.util$RectangleInsets#extendWidth(double)": 63.142857142857146,
        "org.jfree.chart.util$RectangleInsets#getBottom()": 57.31428571428572,
        "org.jfree.chart.util$RectangleInsets#getLeft()": 57.31428571428572,
        "org.jfree.chart.util$RectangleInsets#getRight()": 57.31428571428572,
        "org.jfree.chart.util$RectangleInsets#getTop()": 57.31428571428572,
        "org.jfree.chart.util$RectangleInsets#getUnitType()": 0.0,
        "org.jfree.chart.util$RectangleInsets#hashCode()": 0.0,
        "org.jfree.chart.util$RectangleInsets#toString()": 0.0,
        "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)": 62.17142857142857,
        "org.jfree.chart.util$RectangleInsets#trimHeight(double)": 62.17142857142857,
        "org.jfree.chart.util$RectangleInsets#trimWidth(double)": 62.17142857142857,
        "org.jfree.chart.util$SortOrder#<clinit>()": 89.6969696969697,
        "org.jfree.chart.util$SortOrder#SortOrder(java.lang.String)": 89.6969696969697,
        "org.jfree.chart.util$SortOrder#equals(java.lang.Object)": 11.657142857142857,
        "org.jfree.chart.util$SortOrder#hashCode()": 0.0,
        "org.jfree.chart.util$SortOrder#readResolve()": 7.771428571428571,
        "org.jfree.chart.util$SortOrder#toString()": 9.714285714285714,
        "org.jfree.chart.util$UnitType#<clinit>()": 410.53225806451616,
        "org.jfree.chart.util$UnitType#UnitType(java.lang.String)": 410.53225806451616,
        "org.jfree.chart.util$UnitType#equals(java.lang.Object)": 62.17142857142857,
        "org.jfree.chart.util$UnitType#hashCode()": 0.0,
        "org.jfree.chart.util$UnitType#readResolve()": 62.17142857142857,
        "org.jfree.chart.util$UnitType#toString()": 0.0,
        "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)": 439.56451612903226,
        "org.jfree.data.general$DatasetChangeEvent#getDataset()": 0.0,
        "org.jfree.data.time$Day#<clinit>()": 139.8857142857143,
        "org.jfree.data.time$Day#Day()": 11.657142857142857,
        "org.jfree.data.time$Day#Day(int,int,int)": 98.11428571428571,
        "org.jfree.data.time$Day#Day(java.util.Date)": 13.6,
        "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)": 32.05714285714286,
        "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)": 13.6,
        "org.jfree.data.time$Day#compareTo(java.lang.Object)": 8.742857142857144,
        "org.jfree.data.time$Day#equals(java.lang.Object)": 24.285714285714285,
        "org.jfree.data.time$Day#getDayOfMonth()": 81.6,
        "org.jfree.data.time$Day#getFirstMillisecond()": 13.6,
        "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)": 130.17142857142858,
        "org.jfree.data.time$Day#getLastMillisecond()": 13.6,
        "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)": 130.17142857142858,
        "org.jfree.data.time$Day#getMonth()": 81.6,
        "org.jfree.data.time$Day#getSerialDate()": 28.17142857142857,
        "org.jfree.data.time$Day#getSerialIndex()": 12.628571428571428,
        "org.jfree.data.time$Day#getYear()": 79.65714285714286,
        "org.jfree.data.time$Day#hashCode()": 5.828571428571428,
        "org.jfree.data.time$Day#next()": 18.457142857142856,
        "org.jfree.data.time$Day#parseDay(java.lang.String)": 1.9428571428571428,
        "org.jfree.data.time$Day#peg(java.util.Calendar)": 130.17142857142858,
        "org.jfree.data.time$Day#previous()": 3.8857142857142857,
        "org.jfree.data.time$Day#toString()": 0.0,
        "org.jfree.data.time$RegularTimePeriod#<clinit>()": 273.9428571428571,
        "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()": 266.1714285714286,
        "org.jfree.data.time$RegularTimePeriod#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone)": 0.9714285714285714,
        "org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)": 3.8857142857142857,
        "org.jfree.data.time$RegularTimePeriod#getEnd()": 15.542857142857143,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()": 17.485714285714288,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)": 0.9714285714285714,
        "org.jfree.data.time$RegularTimePeriod#getStart()": 15.542857142857143,
        "org.jfree.data.time$RegularTimePeriod#toString()": 0.0
    },
    "Chart-15": {
        "org.jfree.chart$ChartColor#<clinit>()": 220.61290322580646,
        "org.jfree.chart$ChartColor#ChartColor(int,int,int)": 0.0,
        "org.jfree.chart$ChartColor#createDefaultPaintArray()": 220.61290322580646,
        "org.jfree.chart$ChartFactory#ChartFactory()": 0.0,
        "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 3.875,
        "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 9.6875,
        "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 3.875,
        "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)": 4.84375,
        "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 7.75,
        "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 3.875,
        "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)": 14.53125,
        "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)": 0.0,
        "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)": -28.096774193548388,
        "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)": 0.0,
        "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)": 0.0,
        "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 7.75,
        "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 3.875,
        "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 3.875,
        "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 3.875,
        "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 4.84375,
        "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)": 3.875,
        "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 2.90625,
        "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 2.90625,
        "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 3.875,
        "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 10.65625,
        "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 2.90625,
        "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 2.90625,
        "org.jfree.chart$JFreeChart#<clinit>()": 130.61290322580646,
        "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)": 122.87096774193549,
        "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,org.jfree.chart.plot.Plot)": 0.0,
        "org.jfree.chart$JFreeChart#JFreeChart(org.jfree.chart.plot.Plot)": 52.3125,
        "org.jfree.chart$JFreeChart#addChangeListener(org.jfree.chart.event.ChartChangeListener)": 20.34375,
        "org.jfree.chart$JFreeChart#addLegend(org.jfree.chart.title.LegendTitle)": 0.0,
        "org.jfree.chart$JFreeChart#addProgressListener(org.jfree.chart.event.ChartProgressListener)": 0.96875,
        "org.jfree.chart$JFreeChart#addSubtitle(int,org.jfree.chart.title.Title)": 0.96875,
        "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)": 1.9375,
        "org.jfree.chart$JFreeChart#clearSubtitles()": 0.0,
        "org.jfree.chart$JFreeChart#clone()": 0.0,
        "org.jfree.chart$JFreeChart#createAlignedRectangle2D(org.jfree.chart.util.Size2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)": 29.967741935483872,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int)": 3.875,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)": 0.0,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)": 32.9375,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)": 32.9375,
        "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)": 29.967741935483872,
        "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)": 0.0,
        "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 29.967741935483872,
        "org.jfree.chart$JFreeChart#equals(java.lang.Object)": 11.625,
        "org.jfree.chart$JFreeChart#fireChartChanged()": 5.8125,
        "org.jfree.chart$JFreeChart#getAntiAlias()": 0.0,
        "org.jfree.chart$JFreeChart#getBackgroundImage()": 0.0,
        "org.jfree.chart$JFreeChart#getBackgroundImageAlignment()": 0.0,
        "org.jfree.chart$JFreeChart#getBackgroundImageAlpha()": 0.0,
        "org.jfree.chart$JFreeChart#getBackgroundPaint()": 0.0,
        "org.jfree.chart$JFreeChart#getBorderPaint()": 0.0,
        "org.jfree.chart$JFreeChart#getBorderStroke()": 0.0,
        "org.jfree.chart$JFreeChart#getCategoryPlot()": 0.0,
        "org.jfree.chart$JFreeChart#getLegend()": 4.84375,
        "org.jfree.chart$JFreeChart#getLegend(int)": 4.84375,
        "org.jfree.chart$JFreeChart#getPadding()": 0.0,
        "org.jfree.chart$JFreeChart#getPlot()": 72.65625,
        "org.jfree.chart$JFreeChart#getRenderingHints()": 0.0,
        "org.jfree.chart$JFreeChart#getSubtitle(int)": 9.6875,
        "org.jfree.chart$JFreeChart#getSubtitleCount()": 12.59375,
        "org.jfree.chart$JFreeChart#getSubtitles()": 0.96875,
        "org.jfree.chart$JFreeChart#getTextAntiAlias()": 0.0,
        "org.jfree.chart$JFreeChart#getTitle()": 0.96875,
        "org.jfree.chart$JFreeChart#getXYPlot()": 0.0,
        "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)": 0.0,
        "org.jfree.chart$JFreeChart#isBorderVisible()": 29.967741935483872,
        "org.jfree.chart$JFreeChart#isNotify()": 0.0,
        "org.jfree.chart$JFreeChart#main(java.lang.String[])": 0.0,
        "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)": 76.53125,
        "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartProgressEvent)": 29.967741935483872,
        "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)": 69.75,
        "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)": 8.71875,
        "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)": 0.96875,
        "org.jfree.chart$JFreeChart#removeLegend()": 2.90625,
        "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)": 0.96875,
        "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)": 2.90625,
        "org.jfree.chart$JFreeChart#setAntiAlias(boolean)": 0.0,
        "org.jfree.chart$JFreeChart#setBackgroundImage(java.awt.Image)": 0.96875,
        "org.jfree.chart$JFreeChart#setBackgroundImageAlignment(int)": 0.96875,
        "org.jfree.chart$JFreeChart#setBackgroundImageAlpha(float)": 0.96875,
        "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)": 3.875,
        "org.jfree.chart$JFreeChart#setBorderPaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart$JFreeChart#setBorderStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart$JFreeChart#setBorderVisible(boolean)": 0.96875,
        "org.jfree.chart$JFreeChart#setNotify(boolean)": 0.0,
        "org.jfree.chart$JFreeChart#setPadding(org.jfree.chart.util.RectangleInsets)": 0.96875,
        "org.jfree.chart$JFreeChart#setRenderingHints(java.awt.RenderingHints)": 0.96875,
        "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)": 0.0,
        "org.jfree.chart$JFreeChart#setTextAntiAlias(boolean)": 0.0,
        "org.jfree.chart$JFreeChart#setTextAntiAlias(java.lang.Object)": 0.0,
        "org.jfree.chart$JFreeChart#setTitle(java.lang.String)": 0.96875,
        "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)": 3.875,
        "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)": 2.90625,
        "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)": 8.71875,
        "org.jfree.chart$LegendItemCollection#LegendItemCollection()": 32.87096774193549,
        "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)": 54.25,
        "org.jfree.chart$LegendItemCollection#addAll(org.jfree.chart.LegendItemCollection)": 0.0,
        "org.jfree.chart$LegendItemCollection#clone()": 0.96875,
        "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)": 2.90625,
        "org.jfree.chart$LegendItemCollection#get(int)": 49.40625,
        "org.jfree.chart$LegendItemCollection#getItemCount()": 29.967741935483872,
        "org.jfree.chart$LegendItemCollection#iterator()": 0.0,
        "org.jfree.chart$PaintMap#PaintMap()": 9.645161290322584,
        "org.jfree.chart$PaintMap#clear()": 0.0,
        "org.jfree.chart$PaintMap#clone()": 0.96875,
        "org.jfree.chart$PaintMap#containsKey(java.lang.Comparable)": 0.0,
        "org.jfree.chart$PaintMap#equals(java.lang.Object)": 15.5,
        "org.jfree.chart$PaintMap#getPaint(java.lang.Comparable)": 9.6875,
        "org.jfree.chart$PaintMap#put(java.lang.Comparable,java.awt.Paint)": 9.6875,
        "org.jfree.chart$PaintMap#readObject(java.io.ObjectInputStream)": 7.75,
        "org.jfree.chart$PaintMap#writeObject(java.io.ObjectOutputStream)": 7.75,
        "org.jfree.chart$StrokeMap#StrokeMap()": 8.677419354838712,
        "org.jfree.chart$StrokeMap#clear()": 0.0,
        "org.jfree.chart$StrokeMap#clone()": 0.96875,
        "org.jfree.chart$StrokeMap#containsKey(java.lang.Comparable)": 0.0,
        "org.jfree.chart$StrokeMap#equals(java.lang.Object)": 15.5,
        "org.jfree.chart$StrokeMap#getStroke(java.lang.Comparable)": 8.71875,
        "org.jfree.chart$StrokeMap#put(java.lang.Comparable,java.awt.Stroke)": 5.8125,
        "org.jfree.chart$StrokeMap#readObject(java.io.ObjectInputStream)": 7.75,
        "org.jfree.chart$StrokeMap#writeObject(java.io.ObjectOutputStream)": 7.75,
        "org.jfree.chart.axis$Axis#<clinit>()": 251.875,
        "org.jfree.chart.axis$Axis#Axis(java.lang.String)": 248.96875,
        "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)": 175.34375,
        "org.jfree.chart.axis$Axis#clone()": 23.25,
        "org.jfree.chart.axis$Axis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 31.96875,
        "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)": 57.15625,
        "org.jfree.chart.axis$Axis#equals(java.lang.Object)": 82.34375,
        "org.jfree.chart.axis$Axis#getAxisLinePaint()": 54.25,
        "org.jfree.chart.axis$Axis#getAxisLineStroke()": 54.25,
        "org.jfree.chart.axis$Axis#getFixedDimension()": 57.15625,
        "org.jfree.chart.axis$Axis#getLabel()": 64.90625,
        "org.jfree.chart.axis$Axis#getLabelAngle()": 57.15625,
        "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)": 57.15625,
        "org.jfree.chart.axis$Axis#getLabelFont()": 57.15625,
        "org.jfree.chart.axis$Axis#getLabelInsets()": 57.15625,
        "org.jfree.chart.axis$Axis#getLabelPaint()": 57.15625,
        "org.jfree.chart.axis$Axis#getLabelToolTip()": 0.0,
        "org.jfree.chart.axis$Axis#getLabelURL()": 0.0,
        "org.jfree.chart.axis$Axis#getPlot()": 208.28125,
        "org.jfree.chart.axis$Axis#getTickLabelFont()": 57.15625,
        "org.jfree.chart.axis$Axis#getTickLabelInsets()": 57.15625,
        "org.jfree.chart.axis$Axis#getTickLabelPaint()": 57.15625,
        "org.jfree.chart.axis$Axis#getTickMarkInsideLength()": 57.15625,
        "org.jfree.chart.axis$Axis#getTickMarkOutsideLength()": 57.15625,
        "org.jfree.chart.axis$Axis#getTickMarkPaint()": 55.21875,
        "org.jfree.chart.axis$Axis#getTickMarkStroke()": 55.21875,
        "org.jfree.chart.axis$Axis#hasListener(java.util.EventListener)": 1.9375,
        "org.jfree.chart.axis$Axis#isAxisLineVisible()": 57.15625,
        "org.jfree.chart.axis$Axis#isTickLabelsVisible()": 57.15625,
        "org.jfree.chart.axis$Axis#isTickMarksVisible()": 56.1875,
        "org.jfree.chart.axis$Axis#isVisible()": 57.15625,
        "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)": 210.21875,
        "org.jfree.chart.axis$Axis#readObject(java.io.ObjectInputStream)": 30.03125,
        "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)": 19.375,
        "org.jfree.chart.axis$Axis#setAxisLinePaint(java.awt.Paint)": 2.90625,
        "org.jfree.chart.axis$Axis#setAxisLineStroke(java.awt.Stroke)": 1.9375,
        "org.jfree.chart.axis$Axis#setAxisLineVisible(boolean)": 18.40625,
        "org.jfree.chart.axis$Axis#setFixedDimension(double)": 0.96875,
        "org.jfree.chart.axis$Axis#setLabel(java.lang.String)": 3.875,
        "org.jfree.chart.axis$Axis#setLabelAngle(double)": 0.96875,
        "org.jfree.chart.axis$Axis#setLabelFont(java.awt.Font)": 0.96875,
        "org.jfree.chart.axis$Axis#setLabelInsets(org.jfree.chart.util.RectangleInsets)": 0.96875,
        "org.jfree.chart.axis$Axis#setLabelPaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.axis$Axis#setLabelToolTip(java.lang.String)": 0.96875,
        "org.jfree.chart.axis$Axis#setLabelURL(java.lang.String)": 0.96875,
        "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)": 175.34375,
        "org.jfree.chart.axis$Axis#setTickLabelFont(java.awt.Font)": 0.96875,
        "org.jfree.chart.axis$Axis#setTickLabelInsets(org.jfree.chart.util.RectangleInsets)": 0.96875,
        "org.jfree.chart.axis$Axis#setTickLabelPaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.axis$Axis#setTickLabelsVisible(boolean)": 0.96875,
        "org.jfree.chart.axis$Axis#setTickMarkInsideLength(float)": 0.96875,
        "org.jfree.chart.axis$Axis#setTickMarkOutsideLength(float)": 0.96875,
        "org.jfree.chart.axis$Axis#setTickMarkPaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.axis$Axis#setTickMarkStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.axis$Axis#setTickMarksVisible(boolean)": 111.40625,
        "org.jfree.chart.axis$Axis#setVisible(boolean)": 0.96875,
        "org.jfree.chart.axis$Axis#writeObject(java.io.ObjectOutputStream)": 30.03125,
        "org.jfree.chart.axis$CategoryAxis#CategoryAxis()": 0.96875,
        "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)": 111.40625,
        "org.jfree.chart.axis$CategoryAxis#addCategoryLabelToolTip(java.lang.Comparable,java.lang.String)": 4.84375,
        "org.jfree.chart.axis$CategoryAxis#calculateCategoryGapSize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 31.0,
        "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 33.90625,
        "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)": 18.40625,
        "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)": 12.59375,
        "org.jfree.chart.axis$CategoryAxis#clearCategoryLabelToolTips()": 0.0,
        "org.jfree.chart.axis$CategoryAxis#clone()": 8.71875,
        "org.jfree.chart.axis$CategoryAxis#configure()": 92.03125,
        "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)": 31.0,
        "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 31.96875,
        "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)": 34.875,
        "org.jfree.chart.axis$CategoryAxis#equalPaintMaps(java.util.Map,java.util.Map)": 28.09375,
        "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)": 28.09375,
        "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 31.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelPositionOffset()": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelPositions()": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelToolTip(java.lang.Comparable)": 9.6875,
        "org.jfree.chart.axis$CategoryAxis#getCategoryMargin()": 17.4375,
        "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 10.65625,
        "org.jfree.chart.axis$CategoryAxis#getCategorySeriesMiddle(java.lang.Comparable,java.lang.Comparable,org.jfree.data.category.CategoryDataset,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 31.0,
        "org.jfree.chart.axis$CategoryAxis#getLowerMargin()": 33.90625,
        "org.jfree.chart.axis$CategoryAxis#getMaximumCategoryLabelLines()": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getMaximumCategoryLabelWidthRatio()": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getTickLabelFont(java.lang.Comparable)": 31.0,
        "org.jfree.chart.axis$CategoryAxis#getTickLabelPaint(java.lang.Comparable)": 31.0,
        "org.jfree.chart.axis$CategoryAxis#getUpperMargin()": 33.90625,
        "org.jfree.chart.axis$CategoryAxis#hashCode()": 38.75,
        "org.jfree.chart.axis$CategoryAxis#readObject(java.io.ObjectInputStream)": 10.65625,
        "org.jfree.chart.axis$CategoryAxis#readPaintMap(java.io.ObjectInputStream)": 10.65625,
        "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 34.875,
        "org.jfree.chart.axis$CategoryAxis#removeCategoryLabelToolTip(java.lang.Comparable)": 0.0,
        "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)": 34.875,
        "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositionOffset(int)": 1.9375,
        "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositions(org.jfree.chart.axis.CategoryLabelPositions)": 1.9375,
        "org.jfree.chart.axis$CategoryAxis#setCategoryMargin(double)": 8.71875,
        "org.jfree.chart.axis$CategoryAxis#setLowerMargin(double)": 1.9375,
        "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelLines(int)": 0.0,
        "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelWidthRatio(float)": 1.9375,
        "org.jfree.chart.axis$CategoryAxis#setTickLabelFont(java.lang.Comparable,java.awt.Font)": 4.84375,
        "org.jfree.chart.axis$CategoryAxis#setTickLabelPaint(java.lang.Comparable,java.awt.Paint)": 6.78125,
        "org.jfree.chart.axis$CategoryAxis#setUpperMargin(double)": 1.9375,
        "org.jfree.chart.axis$CategoryAxis#writeObject(java.io.ObjectOutputStream)": 10.65625,
        "org.jfree.chart.axis$CategoryAxis#writePaintMap(java.util.Map,java.io.ObjectOutputStream)": 10.65625,
        "org.jfree.chart.axis$CategoryAxis3D#CategoryAxis3D()": 0.0,
        "org.jfree.chart.axis$CategoryAxis3D#CategoryAxis3D(java.lang.String)": 13.5625,
        "org.jfree.chart.axis$CategoryAxis3D#clone()": 0.96875,
        "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 2.90625,
        "org.jfree.chart.axis$CategoryAxis3D#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$DateAxis#<clinit>()": 31.96875,
        "org.jfree.chart.axis$DateAxis#DateAxis()": 0.96875,
        "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)": 31.96875,
        "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone)": 31.96875,
        "org.jfree.chart.axis$DateAxis#autoAdjustRange()": 31.96875,
        "org.jfree.chart.axis$DateAxis#calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)": 2.90625,
        "org.jfree.chart.axis$DateAxis#calculateHighestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)": 0.0,
        "org.jfree.chart.axis$DateAxis#calculateLowestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)": 3.875,
        "org.jfree.chart.axis$DateAxis#clone()": 0.96875,
        "org.jfree.chart.axis$DateAxis#configure()": 11.625,
        "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits()": 0.0,
        "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone)": 31.96875,
        "org.jfree.chart.axis$DateAxis#dateToJava2D(java.util.Date,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 3.875,
        "org.jfree.chart.axis$DateAxis#equals(java.lang.Object)": 5.8125,
        "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)": 0.0,
        "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)": 3.875,
        "org.jfree.chart.axis$DateAxis#getDateFormatOverride()": 3.875,
        "org.jfree.chart.axis$DateAxis#getMaximumDate()": 5.8125,
        "org.jfree.chart.axis$DateAxis#getMinimumDate()": 5.8125,
        "org.jfree.chart.axis$DateAxis#getTickMarkPosition()": 0.0,
        "org.jfree.chart.axis$DateAxis#getTickUnit()": 3.875,
        "org.jfree.chart.axis$DateAxis#getTimeZone()": 0.0,
        "org.jfree.chart.axis$DateAxis#getTimeline()": 0.0,
        "org.jfree.chart.axis$DateAxis#hashCode()": 4.84375,
        "org.jfree.chart.axis$DateAxis#isHiddenValue(long)": 3.875,
        "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.96875,
        "org.jfree.chart.axis$DateAxis#nextStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)": 3.875,
        "org.jfree.chart.axis$DateAxis#previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)": 15.5,
        "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 3.875,
        "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 3.875,
        "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$DateAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 3.875,
        "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 3.875,
        "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$DateAxis#setDateFormatOverride(java.text.DateFormat)": 0.96875,
        "org.jfree.chart.axis$DateAxis#setMaximumDate(java.util.Date)": 1.9375,
        "org.jfree.chart.axis$DateAxis#setMinimumDate(java.util.Date)": 1.9375,
        "org.jfree.chart.axis$DateAxis#setRange(double,double)": 0.96875,
        "org.jfree.chart.axis$DateAxis#setRange(java.util.Date,java.util.Date)": 13.5625,
        "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)": 14.53125,
        "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)": 31.96875,
        "org.jfree.chart.axis$DateAxis#setTickMarkPosition(org.jfree.chart.axis.DateTickMarkPosition)": 12.59375,
        "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit)": 12.59375,
        "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)": 31.96875,
        "org.jfree.chart.axis$DateAxis#setTimeZone(java.util.TimeZone)": 0.0,
        "org.jfree.chart.axis$DateAxis#setTimeline(org.jfree.chart.axis.Timeline)": 0.96875,
        "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 3.875,
        "org.jfree.chart.axis$DateAxis#zoomRange(double,double)": 0.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#DateAxis$DefaultTimeline()": 31.96875,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainRange(java.util.Date,java.util.Date)": 0.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainRange(long,long)": 0.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainValue(java.util.Date)": 3.875,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainValue(long)": 0.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#equals(java.lang.Object)": 1.9375,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#toMillisecond(long)": 12.59375,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#toTimelineValue(java.util.Date)": 4.84375,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#toTimelineValue(long)": 11.625,
        "org.jfree.chart.axis$NumberAxis#<clinit>()": 196.65625,
        "org.jfree.chart.axis$NumberAxis#NumberAxis()": 3.875,
        "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)": 193.75,
        "org.jfree.chart.axis$NumberAxis#autoAdjustRange()": 175.34375,
        "org.jfree.chart.axis$NumberAxis#calculateHighestVisibleTickValue()": 0.0,
        "org.jfree.chart.axis$NumberAxis#calculateLowestVisibleTickValue()": 55.21875,
        "org.jfree.chart.axis$NumberAxis#calculateVisibleTickCount()": 55.21875,
        "org.jfree.chart.axis$NumberAxis#clone()": 12.59375,
        "org.jfree.chart.axis$NumberAxis#configure()": 169.53125,
        "org.jfree.chart.axis$NumberAxis#createIntegerTickUnits()": 16.46875,
        "org.jfree.chart.axis$NumberAxis#createIntegerTickUnits(java.util.Locale)": 0.0,
        "org.jfree.chart.axis$NumberAxis#createStandardTickUnits()": 193.75,
        "org.jfree.chart.axis$NumberAxis#createStandardTickUnits(java.util.Locale)": 0.0,
        "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 52.3125,
        "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)": 52.3125,
        "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)": 43.59375,
        "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)": 31.96875,
        "org.jfree.chart.axis$NumberAxis#getAutoRangeIncludesZero()": 169.53125,
        "org.jfree.chart.axis$NumberAxis#getAutoRangeStickyZero()": 169.53125,
        "org.jfree.chart.axis$NumberAxis#getMarkerBand()": 0.0,
        "org.jfree.chart.axis$NumberAxis#getNumberFormatOverride()": 53.28125,
        "org.jfree.chart.axis$NumberAxis#getRangeType()": 0.0,
        "org.jfree.chart.axis$NumberAxis#getTickUnit()": 55.21875,
        "org.jfree.chart.axis$NumberAxis#hashCode()": 56.1875,
        "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.96875,
        "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 55.21875,
        "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 31.96875,
        "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 43.59375,
        "org.jfree.chart.axis$NumberAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 55.21875,
        "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 31.96875,
        "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 43.59375,
        "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)": 46.5,
        "org.jfree.chart.axis$NumberAxis#setAutoRangeStickyZero(boolean)": 3.875,
        "org.jfree.chart.axis$NumberAxis#setMarkerBand(org.jfree.chart.axis.MarkerAxisBand)": 0.0,
        "org.jfree.chart.axis$NumberAxis#setNumberFormatOverride(java.text.NumberFormat)": 0.96875,
        "org.jfree.chart.axis$NumberAxis#setRangeType(org.jfree.data.RangeType)": 0.96875,
        "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit)": 0.96875,
        "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)": 56.1875,
        "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 55.21875,
        "org.jfree.chart.axis$NumberAxis3D#NumberAxis3D()": 0.0,
        "org.jfree.chart.axis$NumberAxis3D#NumberAxis3D(java.lang.String)": 12.59375,
        "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 2.90625,
        "org.jfree.chart.axis$ValueAxis#<clinit>()": 231.53125,
        "org.jfree.chart.axis$ValueAxis#ValueAxis(java.lang.String,org.jfree.chart.axis.TickUnitSource)": 228.625,
        "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 55.21875,
        "org.jfree.chart.axis$ValueAxis#centerRange(double)": 0.0,
        "org.jfree.chart.axis$ValueAxis#clone()": 15.5,
        "org.jfree.chart.axis$ValueAxis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 54.25,
        "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 57.15625,
        "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)": 62.96875,
        "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 35.84375,
        "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 43.59375,
        "org.jfree.chart.axis$ValueAxis#getAutoRangeMinimumSize()": 174.375,
        "org.jfree.chart.axis$ValueAxis#getAutoTickIndex()": 0.0,
        "org.jfree.chart.axis$ValueAxis#getDefaultAutoRange()": 44.5625,
        "org.jfree.chart.axis$ValueAxis#getDownArrow()": 0.0,
        "org.jfree.chart.axis$ValueAxis#getFixedAutoRange()": 174.375,
        "org.jfree.chart.axis$ValueAxis#getLeftArrow()": 0.0,
        "org.jfree.chart.axis$ValueAxis#getLowerBound()": 43.59375,
        "org.jfree.chart.axis$ValueAxis#getLowerMargin()": 174.375,
        "org.jfree.chart.axis$ValueAxis#getRange()": 91.0625,
        "org.jfree.chart.axis$ValueAxis#getRightArrow()": 0.0,
        "org.jfree.chart.axis$ValueAxis#getStandardTickUnits()": 57.15625,
        "org.jfree.chart.axis$ValueAxis#getUpArrow()": 0.0,
        "org.jfree.chart.axis$ValueAxis#getUpperBound()": 43.59375,
        "org.jfree.chart.axis$ValueAxis#getUpperMargin()": 174.375,
        "org.jfree.chart.axis$ValueAxis#isAutoRange()": 187.9375,
        "org.jfree.chart.axis$ValueAxis#isAutoTickUnitSelection()": 57.15625,
        "org.jfree.chart.axis$ValueAxis#isInverted()": 62.0,
        "org.jfree.chart.axis$ValueAxis#isNegativeArrowVisible()": 0.0,
        "org.jfree.chart.axis$ValueAxis#isPositiveArrowVisible()": 0.0,
        "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()": 57.15625,
        "org.jfree.chart.axis$ValueAxis#lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 55.21875,
        "org.jfree.chart.axis$ValueAxis#readObject(java.io.ObjectInputStream)": 26.15625,
        "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)": 57.15625,
        "org.jfree.chart.axis$ValueAxis#resizeRange(double)": 0.0,
        "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean)": 4.84375,
        "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean,boolean)": 4.84375,
        "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double)": 32.9375,
        "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double,boolean)": 32.9375,
        "org.jfree.chart.axis$ValueAxis#setAutoTickIndex(int)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean)": 0.96875,
        "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean,boolean)": 17.4375,
        "org.jfree.chart.axis$ValueAxis#setDefaultAutoRange(org.jfree.data.Range)": 10.65625,
        "org.jfree.chart.axis$ValueAxis#setDownArrow(java.awt.Shape)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setFixedAutoRange(double)": 4.84375,
        "org.jfree.chart.axis$ValueAxis#setInverted(boolean)": 3.875,
        "org.jfree.chart.axis$ValueAxis#setLeftArrow(java.awt.Shape)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setLowerBound(double)": 6.78125,
        "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)": 15.5,
        "org.jfree.chart.axis$ValueAxis#setNegativeArrowVisible(boolean)": 0.96875,
        "org.jfree.chart.axis$ValueAxis#setPositiveArrowVisible(boolean)": 0.96875,
        "org.jfree.chart.axis$ValueAxis#setRange(double,double)": 10.65625,
        "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)": 14.53125,
        "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)": 204.40625,
        "org.jfree.chart.axis$ValueAxis#setRangeAboutValue(double,double)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(double,double)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range,boolean,boolean)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setRightArrow(java.awt.Shape)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setStandardTickUnits(org.jfree.chart.axis.TickUnitSource)": 13.5625,
        "org.jfree.chart.axis$ValueAxis#setUpArrow(java.awt.Shape)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setUpperBound(double)": 4.84375,
        "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)": 15.5,
        "org.jfree.chart.axis$ValueAxis#setVerticalTickLabels(boolean)": 0.96875,
        "org.jfree.chart.axis$ValueAxis#writeObject(java.io.ObjectOutputStream)": 26.15625,
        "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)": 0.0,
        "org.jfree.chart.block$AbstractBlock#AbstractBlock()": 172.2258064516129,
        "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D)": 0.96875,
        "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 3.875,
        "org.jfree.chart.block$AbstractBlock#calculateTotalHeight(double)": 30.935483870967744,
        "org.jfree.chart.block$AbstractBlock#calculateTotalWidth(double)": 30.935483870967744,
        "org.jfree.chart.block$AbstractBlock#clone()": 12.59375,
        "org.jfree.chart.block$AbstractBlock#drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 29.967741935483872,
        "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)": 55.21875,
        "org.jfree.chart.block$AbstractBlock#getBounds()": 50.375,
        "org.jfree.chart.block$AbstractBlock#getContentXOffset()": 0.0,
        "org.jfree.chart.block$AbstractBlock#getContentYOffset()": 0.0,
        "org.jfree.chart.block$AbstractBlock#getFrame()": 29.0,
        "org.jfree.chart.block$AbstractBlock#getHeight()": 4.84375,
        "org.jfree.chart.block$AbstractBlock#getID()": 0.0,
        "org.jfree.chart.block$AbstractBlock#getMargin()": 0.0,
        "org.jfree.chart.block$AbstractBlock#getPadding()": 0.0,
        "org.jfree.chart.block$AbstractBlock#getWidth()": 4.84375,
        "org.jfree.chart.block$AbstractBlock#readObject(java.io.ObjectInputStream)": 19.375,
        "org.jfree.chart.block$AbstractBlock#setBounds(java.awt.geom.Rectangle2D)": 57.15625,
        "org.jfree.chart.block$AbstractBlock#setFrame(org.jfree.chart.block.BlockFrame)": 106.41935483870967,
        "org.jfree.chart.block$AbstractBlock#setHeight(double)": 20.34375,
        "org.jfree.chart.block$AbstractBlock#setID(java.lang.String)": 0.96875,
        "org.jfree.chart.block$AbstractBlock#setMargin(double,double,double,double)": 0.0,
        "org.jfree.chart.block$AbstractBlock#setMargin(org.jfree.chart.util.RectangleInsets)": 106.41935483870967,
        "org.jfree.chart.block$AbstractBlock#setPadding(double,double,double,double)": 54.25,
        "org.jfree.chart.block$AbstractBlock#setPadding(org.jfree.chart.util.RectangleInsets)": 153.83870967741936,
        "org.jfree.chart.block$AbstractBlock#setWidth(double)": 20.34375,
        "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)": 30.935483870967744,
        "org.jfree.chart.block$AbstractBlock#trimBorder(java.awt.geom.Rectangle2D)": 29.967741935483872,
        "org.jfree.chart.block$AbstractBlock#trimMargin(java.awt.geom.Rectangle2D)": 29.967741935483872,
        "org.jfree.chart.block$AbstractBlock#trimPadding(java.awt.geom.Rectangle2D)": 29.967741935483872,
        "org.jfree.chart.block$AbstractBlock#trimToContentHeight(double)": 29.967741935483872,
        "org.jfree.chart.block$AbstractBlock#trimToContentHeight(org.jfree.data.Range)": 29.967741935483872,
        "org.jfree.chart.block$AbstractBlock#trimToContentWidth(double)": 29.967741935483872,
        "org.jfree.chart.block$AbstractBlock#trimToContentWidth(org.jfree.data.Range)": 29.967741935483872,
        "org.jfree.chart.block$AbstractBlock#writeObject(java.io.ObjectOutputStream)": 19.375,
        "org.jfree.chart.block$BlockBorder#<clinit>()": 175.1290322580645,
        "org.jfree.chart.block$BlockBorder#BlockBorder()": 0.96875,
        "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double)": 0.0,
        "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double,java.awt.Paint)": 0.0,
        "org.jfree.chart.block$BlockBorder#BlockBorder(java.awt.Paint)": 2.90625,
        "org.jfree.chart.block$BlockBorder#BlockBorder(org.jfree.chart.util.RectangleInsets,java.awt.Paint)": 175.1290322580645,
        "org.jfree.chart.block$BlockBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 29.967741935483872,
        "org.jfree.chart.block$BlockBorder#equals(java.lang.Object)": 57.15625,
        "org.jfree.chart.block$BlockBorder#getInsets()": 31.903225806451616,
        "org.jfree.chart.block$BlockBorder#getPaint()": 0.0,
        "org.jfree.chart.block$BlockBorder#readObject(java.io.ObjectInputStream)": 20.34375,
        "org.jfree.chart.block$BlockBorder#writeObject(java.io.ObjectOutputStream)": 20.34375,
        "org.jfree.chart.block$BlockContainer#BlockContainer()": 4.84375,
        "org.jfree.chart.block$BlockContainer#BlockContainer(org.jfree.chart.block.Arrangement)": 119.0,
        "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block)": 60.0625,
        "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block,java.lang.Object)": 60.0625,
        "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 53.28125,
        "org.jfree.chart.block$BlockContainer#clear()": 30.935483870967744,
        "org.jfree.chart.block$BlockContainer#clone()": 0.96875,
        "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 29.0,
        "org.jfree.chart.block$BlockContainer#equals(java.lang.Object)": 6.78125,
        "org.jfree.chart.block$BlockContainer#getArrangement()": 0.0,
        "org.jfree.chart.block$BlockContainer#getBlocks()": 51.34375,
        "org.jfree.chart.block$BlockContainer#isEmpty()": 29.0,
        "org.jfree.chart.block$BlockContainer#setArrangement(org.jfree.chart.block.Arrangement)": 29.967741935483872,
        "org.jfree.chart.block$BlockParams#BlockParams()": 29.967741935483872,
        "org.jfree.chart.block$BlockParams#getGenerateEntities()": 29.967741935483872,
        "org.jfree.chart.block$BlockParams#getTranslateX()": 0.0,
        "org.jfree.chart.block$BlockParams#getTranslateY()": 0.0,
        "org.jfree.chart.block$BlockParams#setGenerateEntities(boolean)": 29.967741935483872,
        "org.jfree.chart.block$BlockParams#setTranslateX(double)": 0.0,
        "org.jfree.chart.block$BlockParams#setTranslateY(double)": 0.0,
        "org.jfree.chart.block$BlockResult#BlockResult()": 29.0,
        "org.jfree.chart.block$BlockResult#getEntityCollection()": 7.70967741935484,
        "org.jfree.chart.block$BlockResult#setEntityCollection(org.jfree.chart.entity.EntityCollection)": 10.65625,
        "org.jfree.chart.block$ColumnArrangement#ColumnArrangement()": 109.32258064516128,
        "org.jfree.chart.block$ColumnArrangement#ColumnArrangement(org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,double,double)": 0.96875,
        "org.jfree.chart.block$ColumnArrangement#add(org.jfree.chart.block.Block,java.lang.Object)": 0.96875,
        "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)": 0.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$ColumnArrangement#clear()": 0.0,
        "org.jfree.chart.block$ColumnArrangement#equals(java.lang.Object)": 14.53125,
        "org.jfree.chart.block$FlowArrangement#FlowArrangement()": 112.2258064516129,
        "org.jfree.chart.block$FlowArrangement#FlowArrangement(org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,double,double)": 115.12903225806451,
        "org.jfree.chart.block$FlowArrangement#add(org.jfree.chart.block.Block,java.lang.Object)": 50.375,
        "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 49.40625,
        "org.jfree.chart.block$FlowArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.96875,
        "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.96875,
        "org.jfree.chart.block$FlowArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)": 49.40625,
        "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$FlowArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$FlowArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 49.40625,
        "org.jfree.chart.block$FlowArrangement#clear()": 29.0,
        "org.jfree.chart.block$FlowArrangement#equals(java.lang.Object)": 17.4375,
        "org.jfree.chart.block$LengthConstraintType#<clinit>()": 34.80645161290323,
        "org.jfree.chart.block$LengthConstraintType#LengthConstraintType(java.lang.String)": 34.80645161290323,
        "org.jfree.chart.block$LengthConstraintType#equals(java.lang.Object)": 0.0,
        "org.jfree.chart.block$LengthConstraintType#hashCode()": 0.0,
        "org.jfree.chart.block$LengthConstraintType#readResolve()": 0.0,
        "org.jfree.chart.block$LengthConstraintType#toString()": 0.0,
        "org.jfree.chart.block$LineBorder#LineBorder()": 105.4516129032258,
        "org.jfree.chart.block$LineBorder#LineBorder(java.awt.Paint,java.awt.Stroke,org.jfree.chart.util.RectangleInsets)": 107.38709677419354,
        "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 29.0,
        "org.jfree.chart.block$LineBorder#equals(java.lang.Object)": 10.65625,
        "org.jfree.chart.block$LineBorder#getInsets()": 29.0,
        "org.jfree.chart.block$LineBorder#getPaint()": 49.40625,
        "org.jfree.chart.block$LineBorder#getStroke()": 49.40625,
        "org.jfree.chart.block$LineBorder#readObject(java.io.ObjectInputStream)": 8.71875,
        "org.jfree.chart.block$LineBorder#writeObject(java.io.ObjectOutputStream)": 8.71875,
        "org.jfree.chart.block$RectangleConstraint#<clinit>()": 34.80645161290323,
        "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,double)": 1.9375,
        "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range)": 0.0,
        "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)": 34.80645161290323,
        "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(org.jfree.data.Range,double)": 0.0,
        "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(org.jfree.data.Range,org.jfree.data.Range)": 0.0,
        "org.jfree.chart.block$RectangleConstraint#calculateConstrainedSize(org.jfree.chart.util.Size2D)": 4.84375,
        "org.jfree.chart.block$RectangleConstraint#getHeight()": 31.903225806451616,
        "org.jfree.chart.block$RectangleConstraint#getHeightConstraintType()": 32.87096774193549,
        "org.jfree.chart.block$RectangleConstraint#getHeightRange()": 29.967741935483872,
        "org.jfree.chart.block$RectangleConstraint#getWidth()": 31.903225806451616,
        "org.jfree.chart.block$RectangleConstraint#getWidthConstraintType()": 32.87096774193549,
        "org.jfree.chart.block$RectangleConstraint#getWidthRange()": 29.967741935483872,
        "org.jfree.chart.block$RectangleConstraint#toFixedHeight(double)": 0.96875,
        "org.jfree.chart.block$RectangleConstraint#toFixedWidth(double)": 1.9375,
        "org.jfree.chart.block$RectangleConstraint#toRangeHeight(org.jfree.data.Range)": 0.0,
        "org.jfree.chart.block$RectangleConstraint#toRangeWidth(org.jfree.data.Range)": 0.0,
        "org.jfree.chart.block$RectangleConstraint#toString()": 0.0,
        "org.jfree.chart.block$RectangleConstraint#toUnconstrainedHeight()": 0.0,
        "org.jfree.chart.block$RectangleConstraint#toUnconstrainedWidth()": 0.0,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape)": 14.53125,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String)": 14.53125,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String,java.lang.String)": 30.03125,
        "org.jfree.chart.entity$ChartEntity#clone()": 5.8125,
        "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)": 18.40625,
        "org.jfree.chart.entity$ChartEntity#getArea()": 0.0,
        "org.jfree.chart.entity$ChartEntity#getImageMapAreaTag(org.jfree.chart.imagemap.ToolTipTagFragmentGenerator,org.jfree.chart.imagemap.URLTagFragmentGenerator)": 0.0,
        "org.jfree.chart.entity$ChartEntity#getPolyCoords(java.awt.Shape)": 0.0,
        "org.jfree.chart.entity$ChartEntity#getRectCoords(java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.entity$ChartEntity#getShapeCoords()": 0.0,
        "org.jfree.chart.entity$ChartEntity#getShapeType()": 0.0,
        "org.jfree.chart.entity$ChartEntity#getToolTipText()": 0.0,
        "org.jfree.chart.entity$ChartEntity#getURLText()": 0.0,
        "org.jfree.chart.entity$ChartEntity#hashCode()": 0.0,
        "org.jfree.chart.entity$ChartEntity#readObject(java.io.ObjectInputStream)": 5.8125,
        "org.jfree.chart.entity$ChartEntity#setArea(java.awt.Shape)": 4.84375,
        "org.jfree.chart.entity$ChartEntity#setToolTipText(java.lang.String)": 14.53125,
        "org.jfree.chart.entity$ChartEntity#setURLText(java.lang.String)": 14.53125,
        "org.jfree.chart.entity$ChartEntity#toString()": 0.0,
        "org.jfree.chart.entity$ChartEntity#writeObject(java.io.ObjectOutputStream)": 5.8125,
        "org.jfree.chart.entity$PieSectionEntity#PieSectionEntity(java.awt.Shape,org.jfree.data.general.PieDataset,int,int,java.lang.Comparable,java.lang.String,java.lang.String)": 5.8125,
        "org.jfree.chart.entity$PieSectionEntity#getDataset()": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#getPieIndex()": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#getSectionIndex()": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#getSectionKey()": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#setDataset(org.jfree.data.general.PieDataset)": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#setPieIndex(int)": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#setSectionIndex(int)": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#setSectionKey(java.lang.Comparable)": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#toString()": 0.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)": 461.5806451612903,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart)": 0.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart,org.jfree.chart.event.ChartChangeEventType)": 461.5806451612903,
        "org.jfree.chart.event$ChartChangeEvent#getChart()": 0.0,
        "org.jfree.chart.event$ChartChangeEvent#getType()": 0.0,
        "org.jfree.chart.event$ChartChangeEvent#setChart(org.jfree.chart.JFreeChart)": 72.65625,
        "org.jfree.chart.event$ChartChangeEvent#setType(org.jfree.chart.event.ChartChangeEventType)": 194.71875,
        "org.jfree.chart.event$ChartChangeEventType#<clinit>()": 461.5806451612903,
        "org.jfree.chart.event$ChartChangeEventType#ChartChangeEventType(java.lang.String)": 461.5806451612903,
        "org.jfree.chart.event$ChartChangeEventType#equals(java.lang.Object)": 0.0,
        "org.jfree.chart.event$ChartChangeEventType#hashCode()": 0.0,
        "org.jfree.chart.event$ChartChangeEventType#readResolve()": 0.0,
        "org.jfree.chart.event$ChartChangeEventType#toString()": 0.0,
        "org.jfree.chart.event$ChartProgressEvent#ChartProgressEvent(java.lang.Object,org.jfree.chart.JFreeChart,int,int)": 29.967741935483872,
        "org.jfree.chart.event$ChartProgressEvent#getChart()": 0.0,
        "org.jfree.chart.event$ChartProgressEvent#getPercent()": 0.0,
        "org.jfree.chart.event$ChartProgressEvent#getType()": 0.0,
        "org.jfree.chart.event$ChartProgressEvent#setChart(org.jfree.chart.JFreeChart)": 0.0,
        "org.jfree.chart.event$ChartProgressEvent#setPercent(int)": 0.0,
        "org.jfree.chart.event$ChartProgressEvent#setType(int)": 0.0,
        "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)": 206.09677419354838,
        "org.jfree.chart.event$PlotChangeEvent#getPlot()": 0.0,
        "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)": 110.29032258064515,
        "org.jfree.chart.event$TitleChangeEvent#getTitle()": 0.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#AbstractPieItemLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)": 8.677419354838712,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#clone()": 8.71875,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)": 2.90625,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#equals(java.lang.Object)": 24.21875,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)": 2.90625,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#getLabelFormat()": 0.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#getNumberFormat()": 2.90625,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#getPercentFormat()": 0.96875,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator()": 5.774193548387096,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String)": 0.96875,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)": 5.774193548387096,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.util.Locale)": 0.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.util.Locale)": 0.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#clone()": 7.75,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#equals(java.lang.Object)": 21.3125,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateAttributedSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)": 0.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)": 2.90625,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#getAttributedLabel(int)": 0.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#setAttributedLabel(int,java.text.AttributedString)": 0.96875,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#AbstractPieLabelDistributor()": 2.8709677419354804,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#addPieLabelRecord(org.jfree.chart.plot.PieLabelRecord)": 1.9375,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#clear()": 1.9375,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#getItemCount()": 1.9375,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#<clinit>()": 100.75,
        "org.jfree.chart.plot$CategoryPlot#CategoryPlot()": 7.75,
        "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)": 100.75,
        "org.jfree.chart.plot$CategoryPlot#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker)": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 100.75,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker)": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 100.75,
        "org.jfree.chart.plot$CategoryPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#clearAnnotations()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#clearDomainAxes()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers()": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers(int)": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#clearRangeAxes()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers()": 4.84375,
        "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers(int)": 4.84375,
        "org.jfree.chart.plot$CategoryPlot#clone()": 2.90625,
        "org.jfree.chart.plot$CategoryPlot#configureDomainAxes()": 100.75,
        "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()": 100.75,
        "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 100.75,
        "org.jfree.chart.plot$CategoryPlot#datasetsMappedToDomainAxis(int)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#datasetsMappedToRangeAxis(int)": 94.9375,
        "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 31.96875,
        "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#drawRangeLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)": 30.03125,
        "org.jfree.chart.plot$CategoryPlot#getAnchorValue()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getAnnotations()": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getAxisOffset()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getCategories()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getColumnRenderingOrder()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 94.9375,
        "org.jfree.chart.plot$CategoryPlot#getDataset()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDataset(int)": 100.75,
        "org.jfree.chart.plot$CategoryPlot#getDatasetCount()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDatasetRenderingOrder()": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxis()": 38.75,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxis(int)": 39.71875,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisCount()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge()": 30.03125,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisForDataset(int)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisIndex(org.jfree.chart.axis.CategoryAxis)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation()": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation(int)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlinePaint()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlinePosition()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlineStroke()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDrawSharedDomainAxis()": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#getFixedDomainAxisSpace()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getFixedLegendItems()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getFixedRangeAxisSpace()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getIndexOf(org.jfree.chart.renderer.category.CategoryItemRenderer)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#getLegendItems()": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getOrientation()": 42.625,
        "org.jfree.chart.plot$CategoryPlot#getPlotType()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxis()": 58.125,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)": 100.75,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisCount()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisForDataset(int)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation(int)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairPaint()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairStroke()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairValue()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeGridlinePaint()": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getRangeGridlineStroke()": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRenderer()": 55.21875,
        "org.jfree.chart.plot$CategoryPlot#getRenderer(int)": 56.1875,
        "org.jfree.chart.plot$CategoryPlot#getRendererForDataset(org.jfree.data.category.CategoryDataset)": 84.28125,
        "org.jfree.chart.plot$CategoryPlot#getRowRenderingOrder()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getWeight()": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#isDomainGridlinesVisible()": 34.875,
        "org.jfree.chart.plot$CategoryPlot#isDomainZoomable()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeCrosshairLockedOnData()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeCrosshairVisible()": 35.84375,
        "org.jfree.chart.plot$CategoryPlot#isRangeGridlinesVisible()": 34.875,
        "org.jfree.chart.plot$CategoryPlot#isRangeZoomable()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxis(int,int)": 100.75,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxis(int,int)": 100.75,
        "org.jfree.chart.plot$CategoryPlot#readObject(java.io.ObjectInputStream)": 7.75,
        "org.jfree.chart.plot$CategoryPlot#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo)": 34.875,
        "org.jfree.chart.plot$CategoryPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)": 23.25,
        "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double,boolean)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setColumnRenderingOrder(org.jfree.chart.util.SortOrder)": 8.71875,
        "org.jfree.chart.plot$CategoryPlot#setDataset(int,org.jfree.data.category.CategoryDataset)": 21.3125,
        "org.jfree.chart.plot$CategoryPlot#setDataset(org.jfree.data.category.CategoryDataset)": 13.5625,
        "org.jfree.chart.plot$CategoryPlot#setDatasetRenderingOrder(org.jfree.chart.plot.DatasetRenderingOrder)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxes(org.jfree.chart.axis.CategoryAxis[])": 0.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis)": 7.75,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)": 7.75,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(org.jfree.chart.axis.CategoryAxis)": 5.8125,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 100.75,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 100.75,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePosition(org.jfree.chart.axis.CategoryAnchor)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlineStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinesVisible(boolean)": 6.78125,
        "org.jfree.chart.plot$CategoryPlot#setDrawSharedDomainAxis(boolean)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setFixedLegendItems(org.jfree.chart.LegendItemCollection)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)": 62.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])": 0.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)": 10.65625,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)": 10.65625,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)": 7.75,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 100.75,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 100.75,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairLockedOnData(boolean)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairPaint(java.awt.Paint)": 1.9375,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double,boolean)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairVisible(boolean)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlinePaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlineStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlinesVisible(boolean)": 0.96875,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer)": 3.875,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)": 5.8125,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)": 2.90625,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderers(org.jfree.chart.renderer.category.CategoryItemRenderer[])": 0.0,
        "org.jfree.chart.plot$CategoryPlot#setRowRenderingOrder(org.jfree.chart.util.SortOrder)": 4.84375,
        "org.jfree.chart.plot$CategoryPlot#setWeight(int)": 8.71875,
        "org.jfree.chart.plot$CategoryPlot#writeObject(java.io.ObjectOutputStream)": 7.75,
        "org.jfree.chart.plot$CategoryPlot#zoom(double)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 0.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()": 220.61290322580646,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier()": 220.61290322580646,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])": 220.61290322580646,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])": 1.9375,
        "org.jfree.chart.plot$DefaultDrawingSupplier#clone()": 25.1875,
        "org.jfree.chart.plot$DefaultDrawingSupplier#createStandardSeriesShapes()": 220.61290322580646,
        "org.jfree.chart.plot$DefaultDrawingSupplier#equalShapes(java.awt.Shape[],java.awt.Shape[])": 75.5625,
        "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)": 75.5625,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextFillPaint()": 0.96875,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlinePaint()": 1.9375,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlineStroke()": 0.96875,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextPaint()": 70.71875,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextShape()": 21.3125,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextStroke()": 0.96875,
        "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double)": 220.61290322580646,
        "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double,double)": 220.61290322580646,
        "org.jfree.chart.plot$DefaultDrawingSupplier#readObject(java.io.ObjectInputStream)": 31.0,
        "org.jfree.chart.plot$DefaultDrawingSupplier#writeObject(java.io.ObjectOutputStream)": 31.0,
        "org.jfree.chart.plot$Marker#Marker()": 28.09375,
        "org.jfree.chart.plot$Marker#Marker(java.awt.Paint)": 28.09375,
        "org.jfree.chart.plot$Marker#Marker(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)": 132.71875,
        "org.jfree.chart.plot$Marker#addChangeListener(org.jfree.chart.event.MarkerChangeListener)": 122.0625,
        "org.jfree.chart.plot$Marker#clone()": 2.90625,
        "org.jfree.chart.plot$Marker#equals(java.lang.Object)": 23.25,
        "org.jfree.chart.plot$Marker#getAlpha()": 31.96875,
        "org.jfree.chart.plot$Marker#getLabel()": 32.9375,
        "org.jfree.chart.plot$Marker#getLabelAnchor()": 32.9375,
        "org.jfree.chart.plot$Marker#getLabelFont()": 0.96875,
        "org.jfree.chart.plot$Marker#getLabelOffset()": 0.96875,
        "org.jfree.chart.plot$Marker#getLabelOffsetType()": 0.96875,
        "org.jfree.chart.plot$Marker#getLabelPaint()": 0.96875,
        "org.jfree.chart.plot$Marker#getLabelTextAnchor()": 0.96875,
        "org.jfree.chart.plot$Marker#getListeners(java.lang.Class)": 5.8125,
        "org.jfree.chart.plot$Marker#getOutlinePaint()": 4.84375,
        "org.jfree.chart.plot$Marker#getOutlineStroke()": 1.9375,
        "org.jfree.chart.plot$Marker#getPaint()": 34.875,
        "org.jfree.chart.plot$Marker#getStroke()": 31.96875,
        "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)": 31.0,
        "org.jfree.chart.plot$Marker#readObject(java.io.ObjectInputStream)": 12.59375,
        "org.jfree.chart.plot$Marker#removeChangeListener(org.jfree.chart.event.MarkerChangeListener)": 8.71875,
        "org.jfree.chart.plot$Marker#setAlpha(float)": 1.9375,
        "org.jfree.chart.plot$Marker#setLabel(java.lang.String)": 1.9375,
        "org.jfree.chart.plot$Marker#setLabelAnchor(org.jfree.chart.util.RectangleAnchor)": 1.9375,
        "org.jfree.chart.plot$Marker#setLabelFont(java.awt.Font)": 1.9375,
        "org.jfree.chart.plot$Marker#setLabelOffset(org.jfree.chart.util.RectangleInsets)": 1.9375,
        "org.jfree.chart.plot$Marker#setLabelOffsetType(org.jfree.chart.util.LengthAdjustmentType)": 15.5,
        "org.jfree.chart.plot$Marker#setLabelPaint(java.awt.Paint)": 1.9375,
        "org.jfree.chart.plot$Marker#setLabelTextAnchor(org.jfree.chart.text.TextAnchor)": 1.9375,
        "org.jfree.chart.plot$Marker#setOutlinePaint(java.awt.Paint)": 1.9375,
        "org.jfree.chart.plot$Marker#setOutlineStroke(java.awt.Stroke)": 1.9375,
        "org.jfree.chart.plot$Marker#setPaint(java.awt.Paint)": 4.84375,
        "org.jfree.chart.plot$Marker#setStroke(java.awt.Stroke)": 1.9375,
        "org.jfree.chart.plot$Marker#writeObject(java.io.ObjectOutputStream)": 12.59375,
        "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot()": 1.9375,
        "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)": 2.90625,
        "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)": 2.90625,
        "org.jfree.chart.plot$MultiplePiePlot#getAggregatedItemsKey()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#getAggregatedItemsPaint()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#getDataExtractOrder()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#getDataset()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#getLimit()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#getPieChart()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#getPlotType()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#prefetchSectionPaints()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#readObject(java.io.ObjectInputStream)": 0.96875,
        "org.jfree.chart.plot$MultiplePiePlot#setAggregatedItemsKey(java.lang.Comparable)": 0.96875,
        "org.jfree.chart.plot$MultiplePiePlot#setAggregatedItemsPaint(java.awt.Paint)": 1.9375,
        "org.jfree.chart.plot$MultiplePiePlot#setDataExtractOrder(org.jfree.chart.util.TableOrder)": 0.96875,
        "org.jfree.chart.plot$MultiplePiePlot#setDataset(org.jfree.data.category.CategoryDataset)": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#setLimit(double)": 0.96875,
        "org.jfree.chart.plot$MultiplePiePlot#setPieChart(org.jfree.chart.JFreeChart)": 0.96875,
        "org.jfree.chart.plot$MultiplePiePlot#writeObject(java.io.ObjectOutputStream)": 0.96875,
        "org.jfree.chart.plot$PieLabelDistributor#PieLabelDistributor(int)": 2.8709677419354804,
        "org.jfree.chart.plot$PieLabelDistributor#adjustDownwards(double,double)": 0.0,
        "org.jfree.chart.plot$PieLabelDistributor#adjustInwards()": 0.96875,
        "org.jfree.chart.plot$PieLabelDistributor#adjustUpwards(double,double)": 0.0,
        "org.jfree.chart.plot$PieLabelDistributor#distributeLabels(double,double)": 1.9375,
        "org.jfree.chart.plot$PieLabelDistributor#isOverlap()": 1.9375,
        "org.jfree.chart.plot$PieLabelDistributor#sort()": 1.9375,
        "org.jfree.chart.plot$PieLabelDistributor#spreadEvenly(double,double)": 0.0,
        "org.jfree.chart.plot$PieLabelDistributor#toString()": 0.0,
        "org.jfree.chart.plot$PiePlot#<clinit>()": 2.8709677419354804,
        "org.jfree.chart.plot$PiePlot#PiePlot()": 10.65625,
        "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)": 2.8709677419354804,
        "org.jfree.chart.plot$PiePlot#clone()": 6.78125,
        "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 0.96875,
        "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)": 0.96875,
        "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)": 1.9375,
        "org.jfree.chart.plot$PiePlot#drawLeftLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)": 1.9375,
        "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)": 1.9375,
        "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 0.96875,
        "org.jfree.chart.plot$PiePlot#drawRightLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)": 1.9375,
        "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)": 1.9375,
        "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)": 0.0,
        "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)": 19.375,
        "org.jfree.chart.plot$PiePlot#getArcBounds(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double,double)": 0.96875,
        "org.jfree.chart.plot$PiePlot#getBaseSectionOutlinePaint()": 0.0,
        "org.jfree.chart.plot$PiePlot#getBaseSectionOutlineStroke()": 0.0,
        "org.jfree.chart.plot$PiePlot#getBaseSectionPaint()": 0.96875,
        "org.jfree.chart.plot$PiePlot#getDataset()": -26.161290322580644,
        "org.jfree.chart.plot$PiePlot#getDirection()": 0.96875,
        "org.jfree.chart.plot$PiePlot#getExplodePercent(java.lang.Comparable)": 1.9375,
        "org.jfree.chart.plot$PiePlot#getIgnoreNullValues()": 0.0,
        "org.jfree.chart.plot$PiePlot#getIgnoreZeroValues()": 0.0,
        "org.jfree.chart.plot$PiePlot#getInteriorGap()": -30.032258064516128,
        "org.jfree.chart.plot$PiePlot#getLabelBackgroundPaint()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelDistributor()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelFont()": 1.9375,
        "org.jfree.chart.plot$PiePlot#getLabelGap()": -30.032258064516128,
        "org.jfree.chart.plot$PiePlot#getLabelGenerator()": -30.032258064516128,
        "org.jfree.chart.plot$PiePlot#getLabelLinkMargin()": 0.96875,
        "org.jfree.chart.plot$PiePlot#getLabelLinkPaint()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelLinkStroke()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelLinksVisible()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelOutlinePaint()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelOutlineStroke()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelPadding()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelPaint()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelShadowPaint()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLegendItemShape()": 2.90625,
        "org.jfree.chart.plot$PiePlot#getLegendItems()": -28.096774193548388,
        "org.jfree.chart.plot$PiePlot#getLegendLabelGenerator()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLegendLabelToolTipGenerator()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLegendLabelURLGenerator()": 0.96875,
        "org.jfree.chart.plot$PiePlot#getMaximumExplodePercent()": 1.9375,
        "org.jfree.chart.plot$PiePlot#getMaximumLabelWidth()": -30.032258064516128,
        "org.jfree.chart.plot$PiePlot#getMinimumArcAngleToDraw()": 1.9375,
        "org.jfree.chart.plot$PiePlot#getPieIndex()": 0.0,
        "org.jfree.chart.plot$PiePlot#getPlotType()": 0.0,
        "org.jfree.chart.plot$PiePlot#getSectionKey(int)": 1.9375,
        "org.jfree.chart.plot$PiePlot#getSectionOutlinePaint(java.lang.Comparable)": 0.0,
        "org.jfree.chart.plot$PiePlot#getSectionOutlineStroke(java.lang.Comparable)": 0.0,
        "org.jfree.chart.plot$PiePlot#getSectionOutlinesVisible()": 0.0,
        "org.jfree.chart.plot$PiePlot#getSectionPaint(java.lang.Comparable)": 0.0,
        "org.jfree.chart.plot$PiePlot#getShadowPaint()": 0.0,
        "org.jfree.chart.plot$PiePlot#getShadowXOffset()": 0.0,
        "org.jfree.chart.plot$PiePlot#getShadowYOffset()": 0.0,
        "org.jfree.chart.plot$PiePlot#getSimpleLabelOffset()": 0.0,
        "org.jfree.chart.plot$PiePlot#getSimpleLabels()": 0.96875,
        "org.jfree.chart.plot$PiePlot#getStartAngle()": 1.9375,
        "org.jfree.chart.plot$PiePlot#getToolTipGenerator()": 0.0,
        "org.jfree.chart.plot$PiePlot#getURLGenerator()": 0.96875,
        "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)": -29.064516129032256,
        "org.jfree.chart.plot$PiePlot#isCircular()": -29.064516129032256,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable)": 2.90625,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable,boolean)": 2.90625,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable)": 2.90625,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable,boolean)": 2.90625,
        "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable)": 0.96875,
        "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable,boolean)": 2.90625,
        "org.jfree.chart.plot$PiePlot#readObject(java.io.ObjectInputStream)": 5.8125,
        "org.jfree.chart.plot$PiePlot#setBaseSectionOutlinePaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setBaseSectionOutlineStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setBaseSectionPaint(java.awt.Paint)": 1.9375,
        "org.jfree.chart.plot$PiePlot#setCircular(boolean)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setCircular(boolean,boolean)": -25.193548387096776,
        "org.jfree.chart.plot$PiePlot#setDataset(org.jfree.data.general.PieDataset)": 1.9375,
        "org.jfree.chart.plot$PiePlot#setDirection(org.jfree.chart.util.Rotation)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setExplodePercent(java.lang.Comparable,double)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setIgnoreNullValues(boolean)": 1.9375,
        "org.jfree.chart.plot$PiePlot#setIgnoreZeroValues(boolean)": 1.9375,
        "org.jfree.chart.plot$PiePlot#setInteriorGap(double)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelBackgroundPaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelDistributor(org.jfree.chart.plot.AbstractPieLabelDistributor)": 0.0,
        "org.jfree.chart.plot$PiePlot#setLabelFont(java.awt.Font)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelGap(double)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)": 15.5,
        "org.jfree.chart.plot$PiePlot#setLabelLinkMargin(double)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelLinkPaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelLinkStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelLinksVisible(boolean)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelOutlinePaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelOutlineStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelPadding(org.jfree.chart.util.RectangleInsets)": 0.0,
        "org.jfree.chart.plot$PiePlot#setLabelPaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLabelShadowPaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setLegendItemShape(java.awt.Shape)": 1.9375,
        "org.jfree.chart.plot$PiePlot#setLegendLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)": 2.90625,
        "org.jfree.chart.plot$PiePlot#setLegendLabelToolTipGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)": 1.9375,
        "org.jfree.chart.plot$PiePlot#setLegendLabelURLGenerator(org.jfree.chart.urls.PieURLGenerator)": 1.9375,
        "org.jfree.chart.plot$PiePlot#setMaximumLabelWidth(double)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setMinimumArcAngleToDraw(double)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setPieIndex(int)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setSectionOutlinePaint(java.lang.Comparable,java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setSectionOutlineStroke(java.lang.Comparable,java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setSectionOutlinesVisible(boolean)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setSectionPaint(java.lang.Comparable,java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setShadowPaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setShadowXOffset(double)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setShadowYOffset(double)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setSimpleLabelOffset(org.jfree.chart.util.RectangleInsets)": 0.0,
        "org.jfree.chart.plot$PiePlot#setSimpleLabels(boolean)": 0.0,
        "org.jfree.chart.plot$PiePlot#setStartAngle(double)": 0.96875,
        "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)": 16.46875,
        "org.jfree.chart.plot$PiePlot#setURLGenerator(org.jfree.chart.urls.PieURLGenerator)": 4.84375,
        "org.jfree.chart.plot$PiePlot#writeObject(java.io.ObjectOutputStream)": 5.8125,
        "org.jfree.chart.plot$PiePlot3D#PiePlot3D()": 0.96875,
        "org.jfree.chart.plot$PiePlot3D#PiePlot3D(org.jfree.data.general.PieDataset)": -26.161290322580644,
        "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": -30.032258064516128,
        "org.jfree.chart.plot$PiePlot3D#drawSide(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Arc2D,java.awt.geom.Area,java.awt.geom.Area,java.awt.Paint,java.awt.Paint,java.awt.Stroke,boolean,boolean)": 0.96875,
        "org.jfree.chart.plot$PiePlot3D#equals(java.lang.Object)": 3.875,
        "org.jfree.chart.plot$PiePlot3D#getDarkerSides()": 0.96875,
        "org.jfree.chart.plot$PiePlot3D#getDepthFactor()": 0.0,
        "org.jfree.chart.plot$PiePlot3D#getPlotType()": 0.0,
        "org.jfree.chart.plot$PiePlot3D#isAngleAtBack(double)": 0.96875,
        "org.jfree.chart.plot$PiePlot3D#isAngleAtFront(double)": 0.96875,
        "org.jfree.chart.plot$PiePlot3D#setDarkerSides(boolean)": 0.96875,
        "org.jfree.chart.plot$PiePlot3D#setDepthFactor(double)": 0.96875,
        "org.jfree.chart.plot$PiePlotState#PiePlotState(org.jfree.chart.plot.PlotRenderingInfo)": -29.064516129032256,
        "org.jfree.chart.plot$PiePlotState#getExplodedPieArea()": 0.96875,
        "org.jfree.chart.plot$PiePlotState#getLatestAngle()": 0.96875,
        "org.jfree.chart.plot$PiePlotState#getLinkArea()": 1.9375,
        "org.jfree.chart.plot$PiePlotState#getPassesRequired()": 0.96875,
        "org.jfree.chart.plot$PiePlotState#getPieArea()": 0.96875,
        "org.jfree.chart.plot$PiePlotState#getPieCenterX()": 1.9375,
        "org.jfree.chart.plot$PiePlotState#getPieCenterY()": 1.9375,
        "org.jfree.chart.plot$PiePlotState#getPieHRadius()": 1.9375,
        "org.jfree.chart.plot$PiePlotState#getPieWRadius()": 1.9375,
        "org.jfree.chart.plot$PiePlotState#getTotal()": 0.96875,
        "org.jfree.chart.plot$PiePlotState#setExplodedPieArea(java.awt.geom.Rectangle2D)": 1.9375,
        "org.jfree.chart.plot$PiePlotState#setLatestAngle(double)": 1.9375,
        "org.jfree.chart.plot$PiePlotState#setLinkArea(java.awt.geom.Rectangle2D)": 1.9375,
        "org.jfree.chart.plot$PiePlotState#setPassesRequired(int)": -29.064516129032256,
        "org.jfree.chart.plot$PiePlotState#setPieArea(java.awt.geom.Rectangle2D)": 1.9375,
        "org.jfree.chart.plot$PiePlotState#setPieCenterX(double)": 1.9375,
        "org.jfree.chart.plot$PiePlotState#setPieCenterY(double)": 1.9375,
        "org.jfree.chart.plot$PiePlotState#setPieHRadius(double)": 1.9375,
        "org.jfree.chart.plot$PiePlotState#setPieWRadius(double)": 1.9375,
        "org.jfree.chart.plot$PiePlotState#setTotal(double)": 1.9375,
        "org.jfree.chart.plot$Plot#<clinit>()": 217.70967741935485,
        "org.jfree.chart.plot$Plot#Plot()": 217.70967741935485,
        "org.jfree.chart.plot$Plot#addChangeListener(org.jfree.chart.event.PlotChangeListener)": 145.1290322580645,
        "org.jfree.chart.plot$Plot#axisChanged(org.jfree.chart.event.AxisChangeEvent)": 11.625,
        "org.jfree.chart.plot$Plot#clone()": 24.21875,
        "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 8.71875,
        "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": -27.129032258064516,
        "org.jfree.chart.plot$Plot#drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 26.096774193548384,
        "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 9.6875,
        "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 57.15625,
        "org.jfree.chart.plot$Plot#equals(java.lang.Object)": 72.65625,
        "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": -27.129032258064516,
        "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)": 26.096774193548384,
        "org.jfree.chart.plot$Plot#getBackgroundAlpha()": 2.90625,
        "org.jfree.chart.plot$Plot#getBackgroundImage()": 2.90625,
        "org.jfree.chart.plot$Plot#getBackgroundImageAlignment()": 0.0,
        "org.jfree.chart.plot$Plot#getBackgroundImageAlpha()": 0.0,
        "org.jfree.chart.plot$Plot#getBackgroundPaint()": 2.90625,
        "org.jfree.chart.plot$Plot#getDatasetGroup()": 0.0,
        "org.jfree.chart.plot$Plot#getDrawingSupplier()": 71.6875,
        "org.jfree.chart.plot$Plot#getForegroundAlpha()": 61.03125,
        "org.jfree.chart.plot$Plot#getInsets()": 29.967741935483872,
        "org.jfree.chart.plot$Plot#getLegendItems()": 0.96875,
        "org.jfree.chart.plot$Plot#getNoDataMessage()": 0.0,
        "org.jfree.chart.plot$Plot#getNoDataMessageFont()": 0.0,
        "org.jfree.chart.plot$Plot#getNoDataMessagePaint()": 0.0,
        "org.jfree.chart.plot$Plot#getOutlinePaint()": 2.90625,
        "org.jfree.chart.plot$Plot#getOutlineStroke()": 2.90625,
        "org.jfree.chart.plot$Plot#getParent()": 189.875,
        "org.jfree.chart.plot$Plot#getRectX(double,double,double,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.plot$Plot#getRectY(double,double,double,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.plot$Plot#getRootPlot()": 0.0,
        "org.jfree.chart.plot$Plot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$Plot#isOutlineVisible()": 0.0,
        "org.jfree.chart.plot$Plot#isSubplot()": 0.0,
        "org.jfree.chart.plot$Plot#markerChanged(org.jfree.chart.event.MarkerChangeEvent)": 0.0,
        "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)": 206.09677419354838,
        "org.jfree.chart.plot$Plot#readObject(java.io.ObjectInputStream)": 30.03125,
        "org.jfree.chart.plot$Plot#removeChangeListener(org.jfree.chart.event.PlotChangeListener)": 3.875,
        "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)": 56.1875,
        "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)": 56.1875,
        "org.jfree.chart.plot$Plot#setBackgroundAlpha(float)": 0.96875,
        "org.jfree.chart.plot$Plot#setBackgroundImage(java.awt.Image)": 0.96875,
        "org.jfree.chart.plot$Plot#setBackgroundImageAlignment(int)": 0.96875,
        "org.jfree.chart.plot$Plot#setBackgroundImageAlpha(float)": 0.96875,
        "org.jfree.chart.plot$Plot#setBackgroundPaint(java.awt.Paint)": 4.84375,
        "org.jfree.chart.plot$Plot#setDatasetGroup(org.jfree.data.general.DatasetGroup)": 1.9375,
        "org.jfree.chart.plot$Plot#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)": 0.96875,
        "org.jfree.chart.plot$Plot#setForegroundAlpha(float)": 7.75,
        "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)": -1.9677419354838719,
        "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets,boolean)": 1.9032258064516157,
        "org.jfree.chart.plot$Plot#setNoDataMessage(java.lang.String)": 0.96875,
        "org.jfree.chart.plot$Plot#setNoDataMessageFont(java.awt.Font)": 0.96875,
        "org.jfree.chart.plot$Plot#setNoDataMessagePaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$Plot#setOutlinePaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$Plot#setOutlineStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$Plot#setOutlineVisible(boolean)": 0.96875,
        "org.jfree.chart.plot$Plot#setParent(org.jfree.chart.plot.Plot)": 15.5,
        "org.jfree.chart.plot$Plot#writeObject(java.io.ObjectOutputStream)": 30.03125,
        "org.jfree.chart.plot$Plot#zoom(double)": 0.0,
        "org.jfree.chart.plot$PlotOrientation#<clinit>()": 162.5483870967742,
        "org.jfree.chart.plot$PlotOrientation#PlotOrientation(java.lang.String)": 162.5483870967742,
        "org.jfree.chart.plot$PlotOrientation#equals(java.lang.Object)": 17.4375,
        "org.jfree.chart.plot$PlotOrientation#hashCode()": 0.0,
        "org.jfree.chart.plot$PlotOrientation#readResolve()": 16.46875,
        "org.jfree.chart.plot$PlotOrientation#toString()": 17.4375,
        "org.jfree.chart.plot$PolarPlot#<clinit>()": 2.90625,
        "org.jfree.chart.plot$PolarPlot#PolarPlot()": 2.90625,
        "org.jfree.chart.plot$PolarPlot#PolarPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.PolarItemRenderer)": 2.90625,
        "org.jfree.chart.plot$PolarPlot#addCornerTextItem(java.lang.String)": 1.9375,
        "org.jfree.chart.plot$PolarPlot#clearCornerTextItems()": 0.0,
        "org.jfree.chart.plot$PolarPlot#clone()": 0.96875,
        "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 0.0,
        "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$PolarPlot#drawAxis(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.plot$PolarPlot#drawCornerTextItems(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.plot$PolarPlot#drawGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List,java.util.List)": 0.0,
        "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)": 2.90625,
        "org.jfree.chart.plot$PolarPlot#getAngleGridlinePaint()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getAngleGridlineStroke()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getAngleLabelFont()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getAngleLabelPaint()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getAngleTickUnit()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getAxis()": 0.96875,
        "org.jfree.chart.plot$PolarPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 1.9375,
        "org.jfree.chart.plot$PolarPlot#getDataset()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getLegendItems()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getMaxRadius()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getOrientation()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getPlotType()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getRadiusGridlinePaint()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getRadiusGridlineStroke()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getRenderer()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getSeriesCount()": 0.0,
        "org.jfree.chart.plot$PolarPlot#isAngleGridlinesVisible()": 0.0,
        "org.jfree.chart.plot$PolarPlot#isAngleLabelsVisible()": 0.0,
        "org.jfree.chart.plot$PolarPlot#isDomainZoomable()": 0.0,
        "org.jfree.chart.plot$PolarPlot#isRadiusGridlinesVisible()": 0.0,
        "org.jfree.chart.plot$PolarPlot#isRangeZoomable()": 0.0,
        "org.jfree.chart.plot$PolarPlot#readObject(java.io.ObjectInputStream)": 0.96875,
        "org.jfree.chart.plot$PolarPlot#refreshAngleTicks()": 0.0,
        "org.jfree.chart.plot$PolarPlot#removeCornerTextItem(java.lang.String)": 0.0,
        "org.jfree.chart.plot$PolarPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$PolarPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)": 0.0,
        "org.jfree.chart.plot$PolarPlot#setAngleGridlinePaint(java.awt.Paint)": 1.9375,
        "org.jfree.chart.plot$PolarPlot#setAngleGridlineStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$PolarPlot#setAngleGridlinesVisible(boolean)": 0.96875,
        "org.jfree.chart.plot$PolarPlot#setAngleLabelFont(java.awt.Font)": 0.96875,
        "org.jfree.chart.plot$PolarPlot#setAngleLabelPaint(java.awt.Paint)": 1.9375,
        "org.jfree.chart.plot$PolarPlot#setAngleLabelsVisible(boolean)": 0.96875,
        "org.jfree.chart.plot$PolarPlot#setAngleTickUnit(org.jfree.chart.axis.TickUnit)": 0.96875,
        "org.jfree.chart.plot$PolarPlot#setAxis(org.jfree.chart.axis.ValueAxis)": 0.96875,
        "org.jfree.chart.plot$PolarPlot#setDataset(org.jfree.data.xy.XYDataset)": 0.0,
        "org.jfree.chart.plot$PolarPlot#setRadiusGridlinePaint(java.awt.Paint)": 1.9375,
        "org.jfree.chart.plot$PolarPlot#setRadiusGridlineStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$PolarPlot#setRadiusGridlinesVisible(boolean)": 0.96875,
        "org.jfree.chart.plot$PolarPlot#setRenderer(org.jfree.chart.renderer.PolarItemRenderer)": 0.0,
        "org.jfree.chart.plot$PolarPlot#translateValueThetaRadiusToJava2D(double,double,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.plot$PolarPlot#writeObject(java.io.ObjectOutputStream)": 0.96875,
        "org.jfree.chart.plot$PolarPlot#zoom(double)": 0.0,
        "org.jfree.chart.plot$PolarPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$PolarPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$PolarPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 0.0,
        "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 0.0,
        "org.jfree.chart.plot$RingPlot#RingPlot()": 0.96875,
        "org.jfree.chart.plot$RingPlot#RingPlot(org.jfree.data.general.PieDataset)": 3.875,
        "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)": 0.0,
        "org.jfree.chart.plot$RingPlot#equals(java.lang.Object)": 3.875,
        "org.jfree.chart.plot$RingPlot#extendLine(java.awt.geom.Line2D,double,double)": 0.0,
        "org.jfree.chart.plot$RingPlot#getInnerSeparatorExtension()": 0.0,
        "org.jfree.chart.plot$RingPlot#getOuterSeparatorExtension()": 0.0,
        "org.jfree.chart.plot$RingPlot#getSectionDepth()": 0.0,
        "org.jfree.chart.plot$RingPlot#getSeparatorPaint()": 0.0,
        "org.jfree.chart.plot$RingPlot#getSeparatorStroke()": 0.0,
        "org.jfree.chart.plot$RingPlot#getSeparatorsVisible()": 0.0,
        "org.jfree.chart.plot$RingPlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$RingPlot#readObject(java.io.ObjectInputStream)": 0.96875,
        "org.jfree.chart.plot$RingPlot#setInnerSeparatorExtension(double)": 0.96875,
        "org.jfree.chart.plot$RingPlot#setOuterSeparatorExtension(double)": 0.96875,
        "org.jfree.chart.plot$RingPlot#setSectionDepth(double)": 0.96875,
        "org.jfree.chart.plot$RingPlot#setSeparatorPaint(java.awt.Paint)": 2.90625,
        "org.jfree.chart.plot$RingPlot#setSeparatorStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$RingPlot#setSeparatorsVisible(boolean)": 0.96875,
        "org.jfree.chart.plot$RingPlot#writeObject(java.io.ObjectOutputStream)": 0.96875,
        "org.jfree.chart.plot$ValueMarker#ValueMarker(double)": 28.09375,
        "org.jfree.chart.plot$ValueMarker#ValueMarker(double,java.awt.Paint,java.awt.Stroke)": 0.0,
        "org.jfree.chart.plot$ValueMarker#ValueMarker(double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)": 101.71875,
        "org.jfree.chart.plot$ValueMarker#equals(java.lang.Object)": 28.09375,
        "org.jfree.chart.plot$ValueMarker#getValue()": 37.78125,
        "org.jfree.chart.plot$ValueMarker#setValue(double)": 1.9375,
        "org.jfree.chart.plot$XYPlot#<clinit>()": 85.25,
        "org.jfree.chart.plot$XYPlot#XYPlot()": 17.4375,
        "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)": 85.25,
        "org.jfree.chart.plot$XYPlot#addAnnotation(org.jfree.chart.annotations.XYAnnotation)": 7.75,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 2.90625,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(org.jfree.chart.plot.Marker)": 1.9375,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 2.90625,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 3.875,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(org.jfree.chart.plot.Marker)": 2.90625,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 3.875,
        "org.jfree.chart.plot$XYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 21.3125,
        "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 21.3125,
        "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 21.3125,
        "org.jfree.chart.plot$XYPlot#clearAnnotations()": 0.0,
        "org.jfree.chart.plot$XYPlot#clearDomainAxes()": 0.0,
        "org.jfree.chart.plot$XYPlot#clearDomainMarkers()": 1.9375,
        "org.jfree.chart.plot$XYPlot#clearDomainMarkers(int)": 1.9375,
        "org.jfree.chart.plot$XYPlot#clearRangeAxes()": 0.0,
        "org.jfree.chart.plot$XYPlot#clearRangeMarkers()": 1.9375,
        "org.jfree.chart.plot$XYPlot#clearRangeMarkers(int)": 1.9375,
        "org.jfree.chart.plot$XYPlot#clone()": 6.78125,
        "org.jfree.chart.plot$XYPlot#configureDomainAxes()": 85.25,
        "org.jfree.chart.plot$XYPlot#configureRangeAxes()": 85.25,
        "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 85.25,
        "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 21.3125,
        "org.jfree.chart.plot$XYPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 21.3125,
        "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 21.3125,
        "org.jfree.chart.plot$XYPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 21.3125,
        "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 21.3125,
        "org.jfree.chart.plot$XYPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 21.3125,
        "org.jfree.chart.plot$XYPlot#drawDomainTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 21.3125,
        "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 21.3125,
        "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 21.3125,
        "org.jfree.chart.plot$XYPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 21.3125,
        "org.jfree.chart.plot$XYPlot#drawRangeTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 21.3125,
        "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$XYPlot#drawZeroDomainBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 21.3125,
        "org.jfree.chart.plot$XYPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 21.3125,
        "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)": 35.84375,
        "org.jfree.chart.plot$XYPlot#getAnnotations()": 0.96875,
        "org.jfree.chart.plot$XYPlot#getAxisOffset()": 0.0,
        "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 69.75,
        "org.jfree.chart.plot$XYPlot#getDataset()": 0.0,
        "org.jfree.chart.plot$XYPlot#getDataset(int)": 85.25,
        "org.jfree.chart.plot$XYPlot#getDatasetCount()": 21.3125,
        "org.jfree.chart.plot$XYPlot#getDatasetRenderingOrder()": 21.3125,
        "org.jfree.chart.plot$XYPlot#getDatasetsMappedToDomainAxis(java.lang.Integer)": 65.875,
        "org.jfree.chart.plot$XYPlot#getDatasetsMappedToRangeAxis(java.lang.Integer)": 68.78125,
        "org.jfree.chart.plot$XYPlot#getDomainAxis()": 31.96875,
        "org.jfree.chart.plot$XYPlot#getDomainAxis(int)": 33.90625,
        "org.jfree.chart.plot$XYPlot#getDomainAxisCount()": 0.0,
        "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()": 21.3125,
        "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)": 21.3125,
        "org.jfree.chart.plot$XYPlot#getDomainAxisForDataset(int)": 20.34375,
        "org.jfree.chart.plot$XYPlot#getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)": 69.75,
        "org.jfree.chart.plot$XYPlot#getDomainAxisLocation()": 21.3125,
        "org.jfree.chart.plot$XYPlot#getDomainAxisLocation(int)": 21.3125,
        "org.jfree.chart.plot$XYPlot#getDomainCrosshairPaint()": 0.0,
        "org.jfree.chart.plot$XYPlot#getDomainCrosshairStroke()": 0.0,
        "org.jfree.chart.plot$XYPlot#getDomainCrosshairValue()": 21.3125,
        "org.jfree.chart.plot$XYPlot#getDomainGridlinePaint()": 20.34375,
        "org.jfree.chart.plot$XYPlot#getDomainGridlineStroke()": 20.34375,
        "org.jfree.chart.plot$XYPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)": 20.34375,
        "org.jfree.chart.plot$XYPlot#getDomainMarkers(org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$XYPlot#getDomainTickBandPaint()": 21.3125,
        "org.jfree.chart.plot$XYPlot#getDomainZeroBaselinePaint()": 0.0,
        "org.jfree.chart.plot$XYPlot#getDomainZeroBaselineStroke()": 0.0,
        "org.jfree.chart.plot$XYPlot#getFixedDomainAxisSpace()": 0.0,
        "org.jfree.chart.plot$XYPlot#getFixedLegendItems()": 0.0,
        "org.jfree.chart.plot$XYPlot#getFixedRangeAxisSpace()": 0.0,
        "org.jfree.chart.plot$XYPlot#getIndexOf(org.jfree.chart.renderer.xy.XYItemRenderer)": 0.0,
        "org.jfree.chart.plot$XYPlot#getLegendItems()": 21.3125,
        "org.jfree.chart.plot$XYPlot#getOrientation()": 22.28125,
        "org.jfree.chart.plot$XYPlot#getPlotType()": 0.0,
        "org.jfree.chart.plot$XYPlot#getQuadrantOrigin()": 0.96875,
        "org.jfree.chart.plot$XYPlot#getQuadrantPaint(int)": 0.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxis()": 41.65625,
        "org.jfree.chart.plot$XYPlot#getRangeAxis(int)": 43.59375,
        "org.jfree.chart.plot$XYPlot#getRangeAxisCount()": 0.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()": 21.3125,
        "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)": 21.3125,
        "org.jfree.chart.plot$XYPlot#getRangeAxisForDataset(int)": 20.34375,
        "org.jfree.chart.plot$XYPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)": 69.75,
        "org.jfree.chart.plot$XYPlot#getRangeAxisLocation()": 21.3125,
        "org.jfree.chart.plot$XYPlot#getRangeAxisLocation(int)": 21.3125,
        "org.jfree.chart.plot$XYPlot#getRangeCrosshairPaint()": 0.0,
        "org.jfree.chart.plot$XYPlot#getRangeCrosshairStroke()": 0.0,
        "org.jfree.chart.plot$XYPlot#getRangeCrosshairValue()": 21.3125,
        "org.jfree.chart.plot$XYPlot#getRangeGridlinePaint()": 20.34375,
        "org.jfree.chart.plot$XYPlot#getRangeGridlineStroke()": 20.34375,
        "org.jfree.chart.plot$XYPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)": 20.34375,
        "org.jfree.chart.plot$XYPlot#getRangeMarkers(org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$XYPlot#getRangeTickBandPaint()": 21.3125,
        "org.jfree.chart.plot$XYPlot#getRangeZeroBaselinePaint()": 0.0,
        "org.jfree.chart.plot$XYPlot#getRangeZeroBaselineStroke()": 0.0,
        "org.jfree.chart.plot$XYPlot#getRenderer()": 49.40625,
        "org.jfree.chart.plot$XYPlot#getRenderer(int)": 58.125,
        "org.jfree.chart.plot$XYPlot#getRendererForDataset(org.jfree.data.xy.XYDataset)": 64.90625,
        "org.jfree.chart.plot$XYPlot#getSeriesCount()": 0.0,
        "org.jfree.chart.plot$XYPlot#getSeriesRenderingOrder()": 16.46875,
        "org.jfree.chart.plot$XYPlot#getWeight()": 1.9375,
        "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$XYPlot#indexOf(org.jfree.data.xy.XYDataset)": 0.96875,
        "org.jfree.chart.plot$XYPlot#isDomainCrosshairLockedOnData()": 16.46875,
        "org.jfree.chart.plot$XYPlot#isDomainCrosshairVisible()": 21.3125,
        "org.jfree.chart.plot$XYPlot#isDomainGridlinesVisible()": 20.34375,
        "org.jfree.chart.plot$XYPlot#isDomainZeroBaselineVisible()": 21.3125,
        "org.jfree.chart.plot$XYPlot#isDomainZoomable()": 0.96875,
        "org.jfree.chart.plot$XYPlot#isRangeCrosshairLockedOnData()": 16.46875,
        "org.jfree.chart.plot$XYPlot#isRangeCrosshairVisible()": 22.28125,
        "org.jfree.chart.plot$XYPlot#isRangeGridlinesVisible()": 20.34375,
        "org.jfree.chart.plot$XYPlot#isRangeZeroBaselineVisible()": 21.3125,
        "org.jfree.chart.plot$XYPlot#isRangeZoomable()": 0.96875,
        "org.jfree.chart.plot$XYPlot#mapDatasetToDomainAxis(int,int)": 85.25,
        "org.jfree.chart.plot$XYPlot#mapDatasetToRangeAxis(int,int)": 85.25,
        "org.jfree.chart.plot$XYPlot#readObject(java.io.ObjectInputStream)": 7.75,
        "org.jfree.chart.plot$XYPlot#removeAnnotation(org.jfree.chart.annotations.XYAnnotation)": 0.96875,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(org.jfree.chart.plot.Marker)": 0.0,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(org.jfree.chart.plot.Marker)": 0.0,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)": 21.3125,
        "org.jfree.chart.plot$XYPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)": 12.59375,
        "org.jfree.chart.plot$XYPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)": 0.96875,
        "org.jfree.chart.plot$XYPlot#setDataset(int,org.jfree.data.xy.XYDataset)": 18.40625,
        "org.jfree.chart.plot$XYPlot#setDataset(org.jfree.data.xy.XYDataset)": 6.78125,
        "org.jfree.chart.plot$XYPlot#setDatasetRenderingOrder(org.jfree.chart.plot.DatasetRenderingOrder)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxes(org.jfree.chart.axis.ValueAxis[])": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis)": 6.78125,
        "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)": 6.78125,
        "org.jfree.chart.plot$XYPlot#setDomainAxis(org.jfree.chart.axis.ValueAxis)": 4.84375,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 1.9375,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 1.9375,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation)": 0.96875,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairLockedOnData(boolean)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairPaint(java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairStroke(java.awt.Stroke)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double,boolean)": 21.3125,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairVisible(boolean)": 5.8125,
        "org.jfree.chart.plot$XYPlot#setDomainGridlinePaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$XYPlot#setDomainGridlineStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$XYPlot#setDomainGridlinesVisible(boolean)": 0.96875,
        "org.jfree.chart.plot$XYPlot#setDomainTickBandPaint(java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainZeroBaselinePaint(java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainZeroBaselineStroke(java.awt.Stroke)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainZeroBaselineVisible(boolean)": 0.0,
        "org.jfree.chart.plot$XYPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace)": 0.0,
        "org.jfree.chart.plot$XYPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 0.0,
        "org.jfree.chart.plot$XYPlot#setFixedLegendItems(org.jfree.chart.LegendItemCollection)": 0.0,
        "org.jfree.chart.plot$XYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)": 0.0,
        "org.jfree.chart.plot$XYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 0.0,
        "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)": 42.625,
        "org.jfree.chart.plot$XYPlot#setQuadrantOrigin(java.awt.geom.Point2D)": 1.9375,
        "org.jfree.chart.plot$XYPlot#setQuadrantPaint(int,java.awt.Paint)": 1.9375,
        "org.jfree.chart.plot$XYPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])": 0.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)": 3.875,
        "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)": 3.875,
        "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)": 11.625,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 1.9375,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 7.75,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation)": 6.78125,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 0.0,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairLockedOnData(boolean)": 0.96875,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairPaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double)": 0.96875,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double,boolean)": 22.28125,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairVisible(boolean)": 6.78125,
        "org.jfree.chart.plot$XYPlot#setRangeGridlinePaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$XYPlot#setRangeGridlineStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$XYPlot#setRangeGridlinesVisible(boolean)": 0.96875,
        "org.jfree.chart.plot$XYPlot#setRangeTickBandPaint(java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$XYPlot#setRangeZeroBaselinePaint(java.awt.Paint)": 0.96875,
        "org.jfree.chart.plot$XYPlot#setRangeZeroBaselineStroke(java.awt.Stroke)": 0.96875,
        "org.jfree.chart.plot$XYPlot#setRangeZeroBaselineVisible(boolean)": 0.96875,
        "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer)": 34.875,
        "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)": 34.875,
        "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)": 29.0625,
        "org.jfree.chart.plot$XYPlot#setRenderers(org.jfree.chart.renderer.xy.XYItemRenderer[])": 0.0,
        "org.jfree.chart.plot$XYPlot#setSeriesRenderingOrder(org.jfree.chart.plot.SeriesRenderingOrder)": 0.0,
        "org.jfree.chart.plot$XYPlot#setWeight(int)": 8.71875,
        "org.jfree.chart.plot$XYPlot#writeObject(java.io.ObjectOutputStream)": 7.75,
        "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 0.0,
        "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 0.0,
        "org.jfree.chart.renderer$RendererState#RendererState(org.jfree.chart.plot.PlotRenderingInfo)": 17.38709677419355,
        "org.jfree.chart.renderer$RendererState#getEntityCollection()": 34.875,
        "org.jfree.chart.renderer$RendererState#getInfo()": 10.65625,
        "org.jfree.chart.resources$JFreeChartResources#<clinit>()": 130.61290322580646,
        "org.jfree.chart.resources$JFreeChartResources#JFreeChartResources()": 130.61290322580646,
        "org.jfree.chart.resources$JFreeChartResources#getContents()": 130.61290322580646,
        "org.jfree.chart.text$G2TextMeasurer#G2TextMeasurer(java.awt.Graphics2D)": 19.32258064516129,
        "org.jfree.chart.text$G2TextMeasurer#getStringWidth(java.lang.String,int,int)": 19.32258064516129,
        "org.jfree.chart.text$TextAnchor#<clinit>()": 461.5806451612903,
        "org.jfree.chart.text$TextAnchor#TextAnchor(java.lang.String)": 461.5806451612903,
        "org.jfree.chart.text$TextAnchor#equals(java.lang.Object)": 200.53125,
        "org.jfree.chart.text$TextAnchor#hashCode()": 6.78125,
        "org.jfree.chart.text$TextAnchor#readResolve()": 80.40625,
        "org.jfree.chart.text$TextAnchor#toString()": 0.0,
        "org.jfree.chart.text$TextBlock#TextBlock()": 38.677419354838705,
        "org.jfree.chart.text$TextBlock#addLine(java.lang.String,java.awt.Font,java.awt.Paint)": 34.80645161290323,
        "org.jfree.chart.text$TextBlock#addLine(org.jfree.chart.text.TextLine)": 36.74193548387096,
        "org.jfree.chart.text$TextBlock#calculateBounds(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)": 31.0,
        "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)": 29.0,
        "org.jfree.chart.text$TextBlock#calculateOffsets(org.jfree.chart.text.TextBlockAnchor,double,double)": 29.0,
        "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor)": 29.0,
        "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)": 29.0,
        "org.jfree.chart.text$TextBlock#equals(java.lang.Object)": 3.875,
        "org.jfree.chart.text$TextBlock#getLastLine()": 0.96875,
        "org.jfree.chart.text$TextBlock#getLineAlignment()": 0.0,
        "org.jfree.chart.text$TextBlock#getLines()": 0.0,
        "org.jfree.chart.text$TextBlock#hashCode()": 0.96875,
        "org.jfree.chart.text$TextBlock#setLineAlignment(org.jfree.chart.util.HorizontalAlignment)": -1.9677419354838719,
        "org.jfree.chart.text$TextBlockAnchor#<clinit>()": 115.12903225806451,
        "org.jfree.chart.text$TextBlockAnchor#TextBlockAnchor(java.lang.String)": 115.12903225806451,
        "org.jfree.chart.text$TextBlockAnchor#equals(java.lang.Object)": 20.34375,
        "org.jfree.chart.text$TextBlockAnchor#hashCode()": 2.90625,
        "org.jfree.chart.text$TextBlockAnchor#readResolve()": 13.5625,
        "org.jfree.chart.text$TextBlockAnchor#toString()": 0.0,
        "org.jfree.chart.text$TextFragment#<clinit>()": 36.74193548387096,
        "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String)": 0.0,
        "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font)": 1.9375,
        "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font,java.awt.Paint)": 36.74193548387096,
        "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font,java.awt.Paint,float)": 36.74193548387096,
        "org.jfree.chart.text$TextFragment#calculateBaselineOffset(java.awt.Graphics2D,org.jfree.chart.text.TextAnchor)": 29.0,
        "org.jfree.chart.text$TextFragment#calculateDimensions(java.awt.Graphics2D)": 29.0,
        "org.jfree.chart.text$TextFragment#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)": 29.0,
        "org.jfree.chart.text$TextFragment#equals(java.lang.Object)": 2.90625,
        "org.jfree.chart.text$TextFragment#getBaselineOffset()": 0.0,
        "org.jfree.chart.text$TextFragment#getFont()": 0.96875,
        "org.jfree.chart.text$TextFragment#getPaint()": 0.96875,
        "org.jfree.chart.text$TextFragment#getText()": 0.96875,
        "org.jfree.chart.text$TextFragment#hashCode()": 0.96875,
        "org.jfree.chart.text$TextFragment#readObject(java.io.ObjectInputStream)": 1.9375,
        "org.jfree.chart.text$TextFragment#writeObject(java.io.ObjectOutputStream)": 1.9375,
        "org.jfree.chart.text$TextLine#TextLine()": 0.0,
        "org.jfree.chart.text$TextLine#TextLine(java.lang.String)": 1.9375,
        "org.jfree.chart.text$TextLine#TextLine(java.lang.String,java.awt.Font)": 1.9375,
        "org.jfree.chart.text$TextLine#TextLine(java.lang.String,java.awt.Font,java.awt.Paint)": 34.80645161290323,
        "org.jfree.chart.text$TextLine#addFragment(org.jfree.chart.text.TextFragment)": 0.96875,
        "org.jfree.chart.text$TextLine#calculateBaselineOffset(java.awt.Graphics2D,org.jfree.chart.text.TextAnchor)": 29.0,
        "org.jfree.chart.text$TextLine#calculateDimensions(java.awt.Graphics2D)": 29.0,
        "org.jfree.chart.text$TextLine#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)": 29.0,
        "org.jfree.chart.text$TextLine#equals(java.lang.Object)": 1.9375,
        "org.jfree.chart.text$TextLine#getFirstTextFragment()": 0.0,
        "org.jfree.chart.text$TextLine#getLastTextFragment()": 0.96875,
        "org.jfree.chart.text$TextLine#hashCode()": 0.96875,
        "org.jfree.chart.text$TextLine#removeFragment(org.jfree.chart.text.TextFragment)": 0.96875,
        "org.jfree.chart.text$TextUtilities#<clinit>()": 32.87096774193549,
        "org.jfree.chart.text$TextUtilities#TextUtilities()": 0.0,
        "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)": 0.0,
        "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)": 0.0,
        "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint)": 52.3125,
        "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)": 19.32258064516129,
        "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,org.jfree.chart.text.TextMeasurer)": -1.9677419354838719,
        "org.jfree.chart.text$TextUtilities#deriveRotationAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)": 57.15625,
        "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)": 29.967741935483872,
        "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor,java.awt.geom.Rectangle2D)": 0.96875,
        "org.jfree.chart.text$TextUtilities#drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor)": 0.96875,
        "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,double,float,float)": 0.0,
        "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)": 29.967741935483872,
        "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,float,float)": 29.0,
        "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)": 57.15625,
        "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)": 29.967741935483872,
        "org.jfree.chart.text$TextUtilities#getUseFontMetricsGetStringBounds()": 0.0,
        "org.jfree.chart.text$TextUtilities#isUseDrawRotatedStringWorkaround()": 0.0,
        "org.jfree.chart.text$TextUtilities#nextLineBreak(java.lang.String,int,float,java.text.BreakIterator,org.jfree.chart.text.TextMeasurer)": 19.32258064516129,
        "org.jfree.chart.text$TextUtilities#setUseDrawRotatedStringWorkaround(boolean)": 0.0,
        "org.jfree.chart.text$TextUtilities#setUseFontMetricsGetStringBounds(boolean)": 0.0,
        "org.jfree.chart.title$LegendTitle#<clinit>()": 108.35483870967741,
        "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource)": 108.35483870967741,
        "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)": 108.35483870967741,
        "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 29.0,
        "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)": 49.40625,
        "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 29.0,
        "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)": 14.53125,
        "org.jfree.chart.title$LegendTitle#fetchLegendItems()": 29.0,
        "org.jfree.chart.title$LegendTitle#getBackgroundPaint()": 0.0,
        "org.jfree.chart.title$LegendTitle#getItemContainer()": 0.0,
        "org.jfree.chart.title$LegendTitle#getItemFont()": 0.0,
        "org.jfree.chart.title$LegendTitle#getItemLabelPadding()": 0.0,
        "org.jfree.chart.title$LegendTitle#getItemPaint()": 0.0,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicAnchor()": 49.40625,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicEdge()": 0.0,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicLocation()": 49.40625,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicPadding()": 0.0,
        "org.jfree.chart.title$LegendTitle#getSources()": 1.9375,
        "org.jfree.chart.title$LegendTitle#readObject(java.io.ObjectInputStream)": 8.71875,
        "org.jfree.chart.title$LegendTitle#setBackgroundPaint(java.awt.Paint)": 106.41935483870967,
        "org.jfree.chart.title$LegendTitle#setItemFont(java.awt.Font)": 0.96875,
        "org.jfree.chart.title$LegendTitle#setItemLabelPadding(org.jfree.chart.util.RectangleInsets)": 0.0,
        "org.jfree.chart.title$LegendTitle#setItemPaint(java.awt.Paint)": 0.0,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicAnchor(org.jfree.chart.util.RectangleAnchor)": 0.96875,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicEdge(org.jfree.chart.util.RectangleEdge)": 0.96875,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicLocation(org.jfree.chart.util.RectangleAnchor)": 0.96875,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicPadding(org.jfree.chart.util.RectangleInsets)": 0.0,
        "org.jfree.chart.title$LegendTitle#setSources(org.jfree.chart.LegendItemSource[])": 0.0,
        "org.jfree.chart.title$LegendTitle#setWrapper(org.jfree.chart.block.BlockContainer)": 0.0,
        "org.jfree.chart.title$LegendTitle#writeObject(java.io.ObjectOutputStream)": 8.71875,
        "org.jfree.chart.title$TextTitle#<clinit>()": 87.06451612903226,
        "org.jfree.chart.title$TextTitle#TextTitle()": 4.84375,
        "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String)": 13.5625,
        "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)": 73.51612903225806,
        "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font,java.awt.Paint,org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)": 87.06451612903226,
        "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": -1.9677419354838719,
        "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)": -1.9677419354838719,
        "org.jfree.chart.title$TextTitle#clone()": 1.9375,
        "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": -1.9677419354838719,
        "org.jfree.chart.title$TextTitle#drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": -1.9677419354838719,
        "org.jfree.chart.title$TextTitle#drawVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.title$TextTitle#equals(java.lang.Object)": 24.21875,
        "org.jfree.chart.title$TextTitle#getBackgroundPaint()": 0.0,
        "org.jfree.chart.title$TextTitle#getExpandToFitSpace()": 0.0,
        "org.jfree.chart.title$TextTitle#getFont()": 0.0,
        "org.jfree.chart.title$TextTitle#getPaint()": 0.0,
        "org.jfree.chart.title$TextTitle#getText()": 0.0,
        "org.jfree.chart.title$TextTitle#getTextAlignment()": 0.0,
        "org.jfree.chart.title$TextTitle#getToolTipText()": 0.0,
        "org.jfree.chart.title$TextTitle#getURLText()": 0.0,
        "org.jfree.chart.title$TextTitle#hashCode()": 2.90625,
        "org.jfree.chart.title$TextTitle#readObject(java.io.ObjectInputStream)": 11.625,
        "org.jfree.chart.title$TextTitle#setBackgroundPaint(java.awt.Paint)": 1.9375,
        "org.jfree.chart.title$TextTitle#setExpandToFitSpace(boolean)": 0.0,
        "org.jfree.chart.title$TextTitle#setFont(java.awt.Font)": 2.90625,
        "org.jfree.chart.title$TextTitle#setPaint(java.awt.Paint)": 1.9375,
        "org.jfree.chart.title$TextTitle#setText(java.lang.String)": 2.90625,
        "org.jfree.chart.title$TextTitle#setTextAlignment(org.jfree.chart.util.HorizontalAlignment)": 0.96875,
        "org.jfree.chart.title$TextTitle#setToolTipText(java.lang.String)": 0.0,
        "org.jfree.chart.title$TextTitle#setURLText(java.lang.String)": 0.0,
        "org.jfree.chart.title$TextTitle#writeObject(java.io.ObjectOutputStream)": 11.625,
        "org.jfree.chart.title$Title#<clinit>()": 148.03225806451613,
        "org.jfree.chart.title$Title#Title()": 116.09677419354838,
        "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)": 0.0,
        "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)": 148.03225806451613,
        "org.jfree.chart.title$Title#addChangeListener(org.jfree.chart.event.TitleChangeListener)": 122.87096774193549,
        "org.jfree.chart.title$Title#clone()": 5.8125,
        "org.jfree.chart.title$Title#equals(java.lang.Object)": 34.875,
        "org.jfree.chart.title$Title#getHorizontalAlignment()": 29.967741935483872,
        "org.jfree.chart.title$Title#getNotify()": 0.0,
        "org.jfree.chart.title$Title#getPosition()": 29.967741935483872,
        "org.jfree.chart.title$Title#getVerticalAlignment()": 0.0,
        "org.jfree.chart.title$Title#hashCode()": 6.78125,
        "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)": 110.29032258064515,
        "org.jfree.chart.title$Title#readObject(java.io.ObjectInputStream)": 13.5625,
        "org.jfree.chart.title$Title#removeChangeListener(org.jfree.chart.event.TitleChangeListener)": 0.96875,
        "org.jfree.chart.title$Title#setHorizontalAlignment(org.jfree.chart.util.HorizontalAlignment)": 0.96875,
        "org.jfree.chart.title$Title#setNotify(boolean)": 0.0,
        "org.jfree.chart.title$Title#setPosition(org.jfree.chart.util.RectangleEdge)": 105.4516129032258,
        "org.jfree.chart.title$Title#setVerticalAlignment(org.jfree.chart.util.VerticalAlignment)": 0.96875,
        "org.jfree.chart.title$Title#writeObject(java.io.ObjectOutputStream)": 13.5625,
        "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo()": 130.61290322580646,
        "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#addLibrary(org.jfree.chart.ui.Library)": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#addOptionalLibrary(java.lang.String)": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#addOptionalLibrary(org.jfree.chart.ui.Library)": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#getCopyright()": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#getLibraries()": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#getOptionalLibraries()": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#setCopyright(java.lang.String)": 130.61290322580646,
        "org.jfree.chart.ui$BasicProjectInfo#setInfo(java.lang.String)": 130.61290322580646,
        "org.jfree.chart.ui$BasicProjectInfo#setLicenceName(java.lang.String)": 130.61290322580646,
        "org.jfree.chart.ui$BasicProjectInfo#setName(java.lang.String)": 130.61290322580646,
        "org.jfree.chart.ui$BasicProjectInfo#setVersion(java.lang.String)": 130.61290322580646,
        "org.jfree.chart.ui$Contributor#Contributor(java.lang.String,java.lang.String)": 130.61290322580646,
        "org.jfree.chart.ui$Contributor#getEmail()": 0.0,
        "org.jfree.chart.ui$Contributor#getName()": 0.0,
        "org.jfree.chart.ui$Library#Library()": 130.61290322580646,
        "org.jfree.chart.ui$Library#Library(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 0.0,
        "org.jfree.chart.ui$Library#equals(java.lang.Object)": 0.0,
        "org.jfree.chart.ui$Library#getInfo()": 0.0,
        "org.jfree.chart.ui$Library#getLicenceName()": 0.0,
        "org.jfree.chart.ui$Library#getName()": 0.0,
        "org.jfree.chart.ui$Library#getVersion()": 0.0,
        "org.jfree.chart.ui$Library#hashCode()": 0.0,
        "org.jfree.chart.ui$Library#setInfo(java.lang.String)": 130.61290322580646,
        "org.jfree.chart.ui$Library#setLicenceName(java.lang.String)": 130.61290322580646,
        "org.jfree.chart.ui$Library#setName(java.lang.String)": 130.61290322580646,
        "org.jfree.chart.ui$Library#setVersion(java.lang.String)": 130.61290322580646,
        "org.jfree.chart.ui$Licences#Licences()": 130.61290322580646,
        "org.jfree.chart.ui$Licences#getGPL()": 0.0,
        "org.jfree.chart.ui$Licences#getInstance()": 130.61290322580646,
        "org.jfree.chart.ui$Licences#getLGPL()": 130.61290322580646,
        "org.jfree.chart.ui$ProjectInfo#ProjectInfo()": 130.61290322580646,
        "org.jfree.chart.ui$ProjectInfo#ProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.awt.Image,java.lang.String,java.lang.String,java.lang.String)": 0.0,
        "org.jfree.chart.ui$ProjectInfo#getContributors()": 0.0,
        "org.jfree.chart.ui$ProjectInfo#getLicenceText()": 0.0,
        "org.jfree.chart.ui$ProjectInfo#getLogo()": 8.71875,
        "org.jfree.chart.ui$ProjectInfo#setContributors(java.util.List)": 130.61290322580646,
        "org.jfree.chart.ui$ProjectInfo#setLicenceText(java.lang.String)": 130.61290322580646,
        "org.jfree.chart.ui$ProjectInfo#setLogo(java.awt.Image)": 130.61290322580646,
        "org.jfree.chart.ui$ProjectInfo#toString()": 0.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList()": 441.258064516129,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int)": 441.258064516129,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int,int)": 441.258064516129,
        "org.jfree.chart.util$AbstractObjectList#clear()": 0.0,
        "org.jfree.chart.util$AbstractObjectList#clone()": 69.75,
        "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)": 248.96875,
        "org.jfree.chart.util$AbstractObjectList#get(int)": 222.8125,
        "org.jfree.chart.util$AbstractObjectList#hashCode()": 45.53125,
        "org.jfree.chart.util$AbstractObjectList#indexOf(java.lang.Object)": 164.6875,
        "org.jfree.chart.util$AbstractObjectList#readObject(java.io.ObjectInputStream)": 74.59375,
        "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)": 225.71875,
        "org.jfree.chart.util$AbstractObjectList#size()": 408.8125,
        "org.jfree.chart.util$AbstractObjectList#writeObject(java.io.ObjectOutputStream)": 74.59375,
        "org.jfree.chart.util$HorizontalAlignment#<clinit>()": 165.4516129032258,
        "org.jfree.chart.util$HorizontalAlignment#HorizontalAlignment(java.lang.String)": 165.4516129032258,
        "org.jfree.chart.util$HorizontalAlignment#equals(java.lang.Object)": 18.40625,
        "org.jfree.chart.util$HorizontalAlignment#hashCode()": 6.78125,
        "org.jfree.chart.util$HorizontalAlignment#readResolve()": 18.40625,
        "org.jfree.chart.util$HorizontalAlignment#toString()": 0.0,
        "org.jfree.chart.util$ObjectList#ObjectList()": 424.80645161290323,
        "org.jfree.chart.util$ObjectList#ObjectList(int)": 0.0,
        "org.jfree.chart.util$ObjectList#get(int)": 196.65625,
        "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)": 164.6875,
        "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)": 197.625,
        "org.jfree.chart.util$ObjectUtilities#<clinit>()": 684.1612903225806,
        "org.jfree.chart.util$ObjectUtilities#ObjectUtilities()": 0.0,
        "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)": 108.5,
        "org.jfree.chart.util$ObjectUtilities#convertName(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)": 52.3125,
        "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)": 651.96875,
        "org.jfree.chart.util$ObjectUtilities#getClassLoader()": 0.0,
        "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)": 32.87096774193549,
        "org.jfree.chart.util$ObjectUtilities#getClassLoaderSource()": 0.0,
        "org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceAsStream(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)": 8.71875,
        "org.jfree.chart.util$ObjectUtilities#isJDK14()": 32.87096774193549,
        "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#parseVersions(java.lang.String)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#setClassLoader(java.lang.ClassLoader)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#setClassLoaderSource(java.lang.String)": 0.0,
        "org.jfree.chart.util$RectangleAnchor#<clinit>()": 210.93548387096774,
        "org.jfree.chart.util$RectangleAnchor#RectangleAnchor(java.lang.String)": 210.93548387096774,
        "org.jfree.chart.util$RectangleAnchor#coordinates(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleAnchor)": 49.40625,
        "org.jfree.chart.util$RectangleAnchor#createRectangle(org.jfree.chart.util.Size2D,double,double,org.jfree.chart.util.RectangleAnchor)": 1.9375,
        "org.jfree.chart.util$RectangleAnchor#equals(java.lang.Object)": 43.59375,
        "org.jfree.chart.util$RectangleAnchor#hashCode()": 1.9375,
        "org.jfree.chart.util$RectangleAnchor#readResolve()": 26.15625,
        "org.jfree.chart.util$RectangleAnchor#toString()": 0.0,
        "org.jfree.chart.util$RectangleEdge#<clinit>()": 155.7741935483871,
        "org.jfree.chart.util$RectangleEdge#RectangleEdge(java.lang.String)": 155.7741935483871,
        "org.jfree.chart.util$RectangleEdge#coordinate(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.util$RectangleEdge#equals(java.lang.Object)": 46.5,
        "org.jfree.chart.util$RectangleEdge#hashCode()": 6.78125,
        "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)": 60.0625,
        "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)": 34.80645161290323,
        "org.jfree.chart.util$RectangleEdge#opposite(org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.util$RectangleEdge#readResolve()": 13.5625,
        "org.jfree.chart.util$RectangleEdge#toString()": 0.0,
        "org.jfree.chart.util$RectangleInsets#<clinit>()": 379.3225806451613,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets()": 0.0,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)": 360.93548387096774,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets(org.jfree.chart.util.UnitType,double,double,double,double)": 379.3225806451613,
        "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)": 30.935483870967744,
        "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)": 31.903225806451616,
        "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)": 30.935483870967744,
        "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)": 31.903225806451616,
        "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)": 30.935483870967744,
        "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)": 31.903225806451616,
        "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)": 30.935483870967744,
        "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)": 31.903225806451616,
        "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)": 0.0,
        "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)": 0.0,
        "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D)": 57.15625,
        "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)": 57.15625,
        "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)": 115.12903225806451,
        "org.jfree.chart.util$RectangleInsets#extendHeight(double)": 30.935483870967744,
        "org.jfree.chart.util$RectangleInsets#extendWidth(double)": 30.935483870967744,
        "org.jfree.chart.util$RectangleInsets#getBottom()": 57.15625,
        "org.jfree.chart.util$RectangleInsets#getLeft()": 57.15625,
        "org.jfree.chart.util$RectangleInsets#getRight()": 57.15625,
        "org.jfree.chart.util$RectangleInsets#getTop()": 57.15625,
        "org.jfree.chart.util$RectangleInsets#getUnitType()": 0.0,
        "org.jfree.chart.util$RectangleInsets#hashCode()": 0.0,
        "org.jfree.chart.util$RectangleInsets#toString()": 0.0,
        "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)": 29.967741935483872,
        "org.jfree.chart.util$RectangleInsets#trimHeight(double)": 29.967741935483872,
        "org.jfree.chart.util$RectangleInsets#trimWidth(double)": 29.967741935483872,
        "org.jfree.chart.util$Rotation#<clinit>()": 6.741935483870968,
        "org.jfree.chart.util$Rotation#Rotation(java.lang.String,double)": 6.741935483870968,
        "org.jfree.chart.util$Rotation#equals(java.lang.Object)": 8.71875,
        "org.jfree.chart.util$Rotation#getFactor()": 2.90625,
        "org.jfree.chart.util$Rotation#hashCode()": 0.0,
        "org.jfree.chart.util$Rotation#readResolve()": 6.78125,
        "org.jfree.chart.util$Rotation#toString()": 0.0,
        "org.jfree.chart.util$Size2D#Size2D()": 33.83870967741936,
        "org.jfree.chart.util$Size2D#Size2D(double,double)": 34.80645161290323,
        "org.jfree.chart.util$Size2D#clone()": 0.0,
        "org.jfree.chart.util$Size2D#equals(java.lang.Object)": 0.0,
        "org.jfree.chart.util$Size2D#getHeight()": 31.903225806451616,
        "org.jfree.chart.util$Size2D#getWidth()": 30.935483870967744,
        "org.jfree.chart.util$Size2D#setHeight(double)": 0.0,
        "org.jfree.chart.util$Size2D#setWidth(double)": 0.0,
        "org.jfree.chart.util$Size2D#toString()": 0.0,
        "org.jfree.chart.util$UnitType#<clinit>()": 385.1290322580645,
        "org.jfree.chart.util$UnitType#UnitType(java.lang.String)": 385.1290322580645,
        "org.jfree.chart.util$UnitType#equals(java.lang.Object)": 61.03125,
        "org.jfree.chart.util$UnitType#hashCode()": 0.0,
        "org.jfree.chart.util$UnitType#readResolve()": 61.03125,
        "org.jfree.chart.util$UnitType#toString()": 0.0,
        "org.jfree.chart.util$VerticalAlignment#<clinit>()": 155.7741935483871,
        "org.jfree.chart.util$VerticalAlignment#VerticalAlignment(java.lang.String)": 155.7741935483871,
        "org.jfree.chart.util$VerticalAlignment#equals(java.lang.Object)": 15.5,
        "org.jfree.chart.util$VerticalAlignment#hashCode()": 6.78125,
        "org.jfree.chart.util$VerticalAlignment#readResolve()": 15.5,
        "org.jfree.chart.util$VerticalAlignment#toString()": 0.0,
        "org.jfree.data$Range#Range(double,double)": 257.38709677419354,
        "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)": 155.0,
        "org.jfree.data$Range#constrain(double)": 2.90625,
        "org.jfree.data$Range#contains(double)": 68.78125,
        "org.jfree.data$Range#equals(java.lang.Object)": 82.34375,
        "org.jfree.data$Range#expand(org.jfree.data.Range,double,double)": 0.96875,
        "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)": 26.15625,
        "org.jfree.data$Range#getCentralValue()": 0.0,
        "org.jfree.data$Range#getLength()": 3.875,
        "org.jfree.data$Range#getLowerBound()": 176.09677419354838,
        "org.jfree.data$Range#getUpperBound()": 176.09677419354838,
        "org.jfree.data$Range#hashCode()": 0.0,
        "org.jfree.data$Range#intersects(double,double)": 3.875,
        "org.jfree.data$Range#shift(org.jfree.data.Range,double)": 0.0,
        "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)": 0.0,
        "org.jfree.data$Range#shiftWithNoZeroCrossing(double,double)": 0.0,
        "org.jfree.data$Range#toString()": 0.0,
        "org.jfree.data.general$DatasetUtilities#DatasetUtilities()": 0.0,
        "org.jfree.data.general$DatasetUtilities#calculatePieDatasetTotal(org.jfree.data.general.PieDataset)": -26.161290322580644,
        "org.jfree.data.general$DatasetUtilities#calculateStackTotal(org.jfree.data.xy.TableXYDataset,int)": 0.0,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.Comparable,org.jfree.data.KeyedValues)": 0.0,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.Comparable[],java.lang.Comparable[],double[][])": 1.9375,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.String,java.lang.String,double[][])": 0.0,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.String,java.lang.String,java.lang.Number[][])": 33.90625,
        "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.general.PieDataset,java.lang.Comparable,double)": 0.96875,
        "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.general.PieDataset,java.lang.Comparable,double,int)": 0.96875,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForColumn(org.jfree.data.category.CategoryDataset,int)": 0.0,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForColumn(org.jfree.data.category.CategoryDataset,java.lang.Comparable)": 0.0,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForRow(org.jfree.data.category.CategoryDataset,int)": 0.0,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForRow(org.jfree.data.category.CategoryDataset,java.lang.Comparable)": 0.0,
        "org.jfree.data.general$DatasetUtilities#findCumulativeRangeBounds(org.jfree.data.category.CategoryDataset)": 4.84375,
        "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset)": 22.28125,
        "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)": 66.84375,
        "org.jfree.data.general$DatasetUtilities#findMaximumDomainValue(org.jfree.data.xy.XYDataset)": 0.96875,
        "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.category.CategoryDataset)": 2.90625,
        "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.xy.XYDataset)": 0.96875,
        "org.jfree.data.general$DatasetUtilities#findMaximumStackedRangeValue(org.jfree.data.category.CategoryDataset)": 0.96875,
        "org.jfree.data.general$DatasetUtilities#findMinimumDomainValue(org.jfree.data.xy.XYDataset)": 0.96875,
        "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.category.CategoryDataset)": 1.9375,
        "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.xy.XYDataset)": 0.96875,
        "org.jfree.data.general$DatasetUtilities#findMinimumStackedRangeValue(org.jfree.data.category.CategoryDataset)": 0.0,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset)": 69.75,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 69.75,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset)": 23.25,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)": 62.96875,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset)": 9.6875,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)": 13.5625,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)": 1.9375,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.xy.TableXYDataset)": 5.8125,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)": 5.8125,
        "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.category.CategoryDataset)": 35.84375,
        "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.general.PieDataset)": 1.9375,
        "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.xy.XYDataset)": 22.28125,
        "org.jfree.data.general$DatasetUtilities#iterateCategoryRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 53.28125,
        "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset)": 0.96875,
        "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)": 66.84375,
        "org.jfree.data.general$DatasetUtilities#iterateXYRangeBounds(org.jfree.data.xy.XYDataset)": 64.90625,
        "org.jfree.data.general$DatasetUtilities#sampleFunction2D(org.jfree.data.function.Function2D,double,double,int,java.lang.Comparable)": 0.0
    },
    "Chart-16": {
        "org.jfree.data$DataUtilities#DataUtilities()": 0.0,
        "org.jfree.data$DataUtilities#calculateColumnTotal(org.jfree.data.Values2D,int)": 1.9487179487179487,
        "org.jfree.data$DataUtilities#calculateRowTotal(org.jfree.data.Values2D,int)": 0.9743589743589743,
        "org.jfree.data$DataUtilities#createNumberArray(double[])": 8.76923076923077,
        "org.jfree.data$DataUtilities#createNumberArray2D(double[][])": 8.798387096774194,
        "org.jfree.data$DataUtilities#getCumulativePercentages(org.jfree.data.KeyedValues)": 0.0,
        "org.jfree.data$UnknownKeyException#UnknownKeyException(java.lang.String)": 15.58974358974359,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#DefaultIntervalCategoryDataset(double[][],double[][])": 7.830645161290322,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#DefaultIntervalCategoryDataset(java.lang.Comparable[],java.lang.Comparable[],java.lang.Number[][],java.lang.Number[][])": 7.830645161290322,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#DefaultIntervalCategoryDataset(java.lang.Number[][],java.lang.Number[][])": 7.830645161290322,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#DefaultIntervalCategoryDataset(java.lang.String[],java.lang.Number[][],java.lang.Number[][])": 0.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#clone()": -30.026315789473685,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#clone(java.lang.Number[][])": 0.9743589743589743,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#equal(java.lang.Number[][],java.lang.Number[][])": 2.923076923076923,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#equals(java.lang.Object)": 2.923076923076923,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#generateKeys(int,java.lang.String)": 7.794871794871795,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getCategoryCount()": 4.871794871794872,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getCategoryIndex(java.lang.Comparable)": -12.108108108108109,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getColumnCount()": -14.054054054054054,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getColumnIndex(java.lang.Comparable)": -28.07894736842105,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getColumnKey(int)": 0.9743589743589743,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getColumnKeys()": 0.9743589743589743,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getEndValue(int,int)": 2.923076923076923,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getEndValue(java.lang.Comparable,java.lang.Comparable)": 1.9487179487179487,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getRowCount()": 1.9487179487179487,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getRowIndex(java.lang.Comparable)": -31.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getRowKey(int)": 0.9743589743589743,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getRowKeys()": 0.9743589743589743,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getSeriesCount()": 7.794871794871795,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getSeriesIndex(java.lang.Comparable)": -13.08108108108108,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getSeriesKey(int)": 0.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getStartValue(int,int)": 2.923076923076923,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getStartValue(java.lang.Comparable,java.lang.Comparable)": 1.9487179487179487,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getValue(int,int)": 0.9743589743589743,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#getValue(java.lang.Comparable,java.lang.Comparable)": 0.9743589743589743,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#setCategoryKeys(java.lang.Comparable[])": -31.0,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#setEndValue(int,java.lang.Comparable,java.lang.Number)": 0.9743589743589743,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#setSeriesKeys(java.lang.Comparable[])": 0.9743589743589743,
        "org.jfree.data.category$DefaultIntervalCategoryDataset#setStartValue(int,java.lang.Comparable,java.lang.Number)": 1.9487179487179487,
        "org.jfree.data.general$AbstractDataset#AbstractDataset()": 458.7983870967742,
        "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)": 231.8974358974359,
        "org.jfree.data.general$AbstractDataset#clone()": 2.10526315789474,
        "org.jfree.data.general$AbstractDataset#fireDatasetChanged()": 339.0769230769231,
        "org.jfree.data.general$AbstractDataset#getGroup()": 1.9487179487179487,
        "org.jfree.data.general$AbstractDataset#hasListener(java.util.EventListener)": 1.9487179487179487,
        "org.jfree.data.general$AbstractDataset#notifyListeners(org.jfree.data.general.DatasetChangeEvent)": 379.02564102564105,
        "org.jfree.data.general$AbstractDataset#readObject(java.io.ObjectInputStream)": 57.48717948717949,
        "org.jfree.data.general$AbstractDataset#removeChangeListener(org.jfree.data.general.DatasetChangeListener)": 19.48717948717949,
        "org.jfree.data.general$AbstractDataset#setGroup(org.jfree.data.general.DatasetGroup)": 0.0,
        "org.jfree.data.general$AbstractDataset#validateObject()": 57.48717948717949,
        "org.jfree.data.general$AbstractDataset#writeObject(java.io.ObjectOutputStream)": 57.48717948717949,
        "org.jfree.data.general$AbstractSeriesDataset#AbstractSeriesDataset()": 251.7016129032258,
        "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)": 16.564102564102566,
        "org.jfree.data.general$AbstractSeriesDataset#seriesChanged(org.jfree.data.general.SeriesChangeEvent)": 3.8974358974358974,
        "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)": 447.2307692307692,
        "org.jfree.data.general$DatasetChangeEvent#getDataset()": 0.0,
        "org.jfree.data.general$DatasetGroup#DatasetGroup()": 459.76612903225805,
        "org.jfree.data.general$DatasetGroup#DatasetGroup(java.lang.String)": 0.0,
        "org.jfree.data.general$DatasetGroup#clone()": 0.0,
        "org.jfree.data.general$DatasetGroup#equals(java.lang.Object)": 0.9743589743589743,
        "org.jfree.data.general$DatasetGroup#getID()": 0.0,
        "org.jfree.data.resources$DataPackageResources#<clinit>()": 7.830645161290322,
        "org.jfree.data.resources$DataPackageResources#DataPackageResources()": 7.830645161290322,
        "org.jfree.data.resources$DataPackageResources#getContents()": 7.794871794871795
    },
    "Chart-17": {
        "org.jfree.chart.util$ObjectUtilities#<clinit>()": 708.15625,
        "org.jfree.chart.util$ObjectUtilities#ObjectUtilities()": 0.0,
        "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)": 105.59375,
        "org.jfree.chart.util$ObjectUtilities#convertName(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)": 49.40625,
        "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)": 646.15625,
        "org.jfree.chart.util$ObjectUtilities#getClassLoader()": 0.0,
        "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)": 62.0,
        "org.jfree.chart.util$ObjectUtilities#getClassLoaderSource()": 0.0,
        "org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceAsStream(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)": 52.3125,
        "org.jfree.chart.util$ObjectUtilities#isJDK14()": 62.0,
        "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#parseVersions(java.lang.String)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#setClassLoader(java.lang.ClassLoader)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#setClassLoaderSource(java.lang.String)": 0.0,
        "org.jfree.data.general$Series#Series(java.lang.Comparable)": 226.4193548387097,
        "org.jfree.data.general$Series#Series(java.lang.Comparable,java.lang.String)": 226.4193548387097,
        "org.jfree.data.general$Series#addChangeListener(org.jfree.data.general.SeriesChangeListener)": 153.0625,
        "org.jfree.data.general$Series#addPropertyChangeListener(java.beans.PropertyChangeListener)": 0.0,
        "org.jfree.data.general$Series#clone()": 21.3125,
        "org.jfree.data.general$Series#equals(java.lang.Object)": 71.6875,
        "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)": 0.96875,
        "org.jfree.data.general$Series#fireSeriesChanged()": 207.06451612903226,
        "org.jfree.data.general$Series#getDescription()": 65.875,
        "org.jfree.data.general$Series#getKey()": 117.21875,
        "org.jfree.data.general$Series#getNotify()": 0.0,
        "org.jfree.data.general$Series#hashCode()": 2.90625,
        "org.jfree.data.general$Series#isEmpty()": 0.0,
        "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)": 207.06451612903226,
        "org.jfree.data.general$Series#removeChangeListener(org.jfree.data.general.SeriesChangeListener)": 11.625,
        "org.jfree.data.general$Series#removePropertyChangeListener(java.beans.PropertyChangeListener)": 0.0,
        "org.jfree.data.general$Series#setDescription(java.lang.String)": 5.8125,
        "org.jfree.data.general$Series#setKey(java.lang.Comparable)": 4.84375,
        "org.jfree.data.general$Series#setNotify(boolean)": 0.0,
        "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)": 207.06451612903226,
        "org.jfree.data.general$SeriesException#SeriesException(java.lang.String)": 1.9375,
        "org.jfree.data.time$Day#<clinit>()": 106.41935483870967,
        "org.jfree.data.time$Day#Day()": 11.625,
        "org.jfree.data.time$Day#Day(int,int,int)": 95.90625,
        "org.jfree.data.time$Day#Day(java.util.Date)": 13.5625,
        "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)": 31.96875,
        "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)": 13.5625,
        "org.jfree.data.time$Day#compareTo(java.lang.Object)": 7.75,
        "org.jfree.data.time$Day#equals(java.lang.Object)": 24.21875,
        "org.jfree.data.time$Day#getDayOfMonth()": 81.375,
        "org.jfree.data.time$Day#getFirstMillisecond()": 13.5625,
        "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)": 127.875,
        "org.jfree.data.time$Day#getLastMillisecond()": 13.5625,
        "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)": 127.875,
        "org.jfree.data.time$Day#getMonth()": 81.375,
        "org.jfree.data.time$Day#getSerialDate()": 27.125,
        "org.jfree.data.time$Day#getSerialIndex()": 11.625,
        "org.jfree.data.time$Day#getYear()": 79.4375,
        "org.jfree.data.time$Day#hashCode()": 5.8125,
        "org.jfree.data.time$Day#next()": 18.40625,
        "org.jfree.data.time$Day#parseDay(java.lang.String)": 1.9375,
        "org.jfree.data.time$Day#peg(java.util.Calendar)": 127.875,
        "org.jfree.data.time$Day#previous()": 3.875,
        "org.jfree.data.time$Day#toString()": 0.0,
        "org.jfree.data.time$FixedMillisecond#FixedMillisecond()": 0.96875,
        "org.jfree.data.time$FixedMillisecond#FixedMillisecond(java.util.Date)": 3.875,
        "org.jfree.data.time$FixedMillisecond#FixedMillisecond(long)": 2.90625,
        "org.jfree.data.time$FixedMillisecond#compareTo(java.lang.Object)": 0.96875,
        "org.jfree.data.time$FixedMillisecond#equals(java.lang.Object)": 1.9375,
        "org.jfree.data.time$FixedMillisecond#getFirstMillisecond()": 0.0,
        "org.jfree.data.time$FixedMillisecond#getFirstMillisecond(java.util.Calendar)": 0.0,
        "org.jfree.data.time$FixedMillisecond#getLastMillisecond()": 0.0,
        "org.jfree.data.time$FixedMillisecond#getLastMillisecond(java.util.Calendar)": 0.0,
        "org.jfree.data.time$FixedMillisecond#getMiddleMillisecond()": 0.0,
        "org.jfree.data.time$FixedMillisecond#getMiddleMillisecond(java.util.Calendar)": 0.0,
        "org.jfree.data.time$FixedMillisecond#getSerialIndex()": 0.0,
        "org.jfree.data.time$FixedMillisecond#getTime()": 1.9375,
        "org.jfree.data.time$FixedMillisecond#hashCode()": 0.96875,
        "org.jfree.data.time$FixedMillisecond#next()": 0.0,
        "org.jfree.data.time$FixedMillisecond#peg(java.util.Calendar)": 0.0,
        "org.jfree.data.time$FixedMillisecond#previous()": 0.0,
        "org.jfree.data.time$Month#Month()": 0.96875,
        "org.jfree.data.time$Month#Month(int,int)": 26.15625,
        "org.jfree.data.time$Month#Month(int,org.jfree.data.time.Year)": 0.96875,
        "org.jfree.data.time$Month#Month(java.util.Date)": 0.96875,
        "org.jfree.data.time$Month#Month(java.util.Date,java.util.TimeZone)": 5.8125,
        "org.jfree.data.time$Month#compareTo(java.lang.Object)": 2.90625,
        "org.jfree.data.time$Month#equals(java.lang.Object)": 6.78125,
        "org.jfree.data.time$Month#evaluateAsYear(java.lang.String)": 0.96875,
        "org.jfree.data.time$Month#findSeparator(java.lang.String)": 0.96875,
        "org.jfree.data.time$Month#getFirstMillisecond()": 4.84375,
        "org.jfree.data.time$Month#getFirstMillisecond(java.util.Calendar)": 27.125,
        "org.jfree.data.time$Month#getLastMillisecond()": 3.875,
        "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)": 27.125,
        "org.jfree.data.time$Month#getMonth()": 12.59375,
        "org.jfree.data.time$Month#getSerialIndex()": 3.875,
        "org.jfree.data.time$Month#getYear()": 1.9375,
        "org.jfree.data.time$Month#getYearValue()": 8.71875,
        "org.jfree.data.time$Month#hashCode()": 0.96875,
        "org.jfree.data.time$Month#next()": 2.90625,
        "org.jfree.data.time$Month#parseMonth(java.lang.String)": 0.96875,
        "org.jfree.data.time$Month#peg(java.util.Calendar)": 27.125,
        "org.jfree.data.time$Month#previous()": 2.90625,
        "org.jfree.data.time$Month#toString()": 0.0,
        "org.jfree.data.time$RegularTimePeriod#<clinit>()": 239.0,
        "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()": 231.25806451612902,
        "org.jfree.data.time$RegularTimePeriod#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone)": 0.96875,
        "org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)": 3.875,
        "org.jfree.data.time$RegularTimePeriod#getEnd()": 15.5,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()": 17.4375,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)": 0.96875,
        "org.jfree.data.time$RegularTimePeriod#getStart()": 15.5,
        "org.jfree.data.time$RegularTimePeriod#toString()": 0.0,
        "org.jfree.data.time$SerialDate#<clinit>()": 177.28125,
        "org.jfree.data.time$SerialDate#SerialDate()": 127.875,
        "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SerialDate#addMonths(int,org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SerialDate#addYears(int,org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SerialDate#createInstance(int)": 13.5625,
        "org.jfree.data.time$SerialDate#createInstance(int,int,int)": 127.875,
        "org.jfree.data.time$SerialDate#createInstance(java.util.Date)": 0.0,
        "org.jfree.data.time$SerialDate#getDescription()": 0.0,
        "org.jfree.data.time$SerialDate#getEndOfCurrentMonth(org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int)": 0.0,
        "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int,org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SerialDate#getMonths()": 0.0,
        "org.jfree.data.time$SerialDate#getMonths(boolean)": 0.0,
        "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int)": 0.0,
        "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int,org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int)": 0.0,
        "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int,org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SerialDate#isLeapYear(int)": 127.875,
        "org.jfree.data.time$SerialDate#isValidMonthCode(int)": 0.0,
        "org.jfree.data.time$SerialDate#isValidWeekInMonthCode(int)": 0.0,
        "org.jfree.data.time$SerialDate#isValidWeekdayCode(int)": 0.0,
        "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)": 177.28125,
        "org.jfree.data.time$SerialDate#leapYearCount(int)": 127.875,
        "org.jfree.data.time$SerialDate#monthCodeToQuarter(int)": 2.90625,
        "org.jfree.data.time$SerialDate#monthCodeToString(int)": 0.0,
        "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)": 0.0,
        "org.jfree.data.time$SerialDate#relativeToString(int)": 0.0,
        "org.jfree.data.time$SerialDate#setDescription(java.lang.String)": 0.0,
        "org.jfree.data.time$SerialDate#stringToMonthCode(java.lang.String)": 0.96875,
        "org.jfree.data.time$SerialDate#stringToWeekdayCode(java.lang.String)": 0.0,
        "org.jfree.data.time$SerialDate#toString()": 0.0,
        "org.jfree.data.time$SerialDate#weekInMonthToString(int)": 0.0,
        "org.jfree.data.time$SerialDate#weekdayCodeToString(int)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int)": 13.5625,
        "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int,int,int)": 127.875,
        "org.jfree.data.time$SpreadsheetDate#calcSerial(int,int,int)": 127.875,
        "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)": 7.75,
        "org.jfree.data.time$SpreadsheetDate#compareTo(java.lang.Object)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)": 20.34375,
        "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()": 127.875,
        "org.jfree.data.time$SpreadsheetDate#getDayOfWeek()": 0.0,
        "org.jfree.data.time$SpreadsheetDate#getMonth()": 127.875,
        "org.jfree.data.time$SpreadsheetDate#getYYYY()": 127.875,
        "org.jfree.data.time$SpreadsheetDate#hashCode()": 5.8125,
        "org.jfree.data.time$SpreadsheetDate#isAfter(org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#isBefore(org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate,int)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#isOn(org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#isOnOrAfter(org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#isOnOrBefore(org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#toDate()": 0.0,
        "org.jfree.data.time$SpreadsheetDate#toSerial()": 50.375,
        "org.jfree.data.time$TimePeriodFormatException#TimePeriodFormatException(java.lang.String)": 1.9375,
        "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable)": -21.32258064516129,
        "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable,java.lang.Class)": -8.741935483870968,
        "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable,java.lang.String,java.lang.String,java.lang.Class)": -2.93548387096774,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)": 17.4375,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)": 17.4375,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": -10.677419354838708,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)": -10.677419354838708,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)": 4.84375,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)": -6.806451612903224,
        "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)": 0.96875,
        "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)": 1.9375,
        "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 2.90625,
        "org.jfree.data.time$TimeSeries#clear()": 0.0,
        "org.jfree.data.time$TimeSeries#clone()": -29.064516129032256,
        "org.jfree.data.time$TimeSeries#createCopy(int,int)": -27.129032258064516,
        "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)": 0.96875,
        "org.jfree.data.time$TimeSeries#delete(int,int)": 1.9375,
        "org.jfree.data.time$TimeSeries#delete(org.jfree.data.time.RegularTimePeriod)": 0.96875,
        "org.jfree.data.time$TimeSeries#equals(java.lang.Object)": 8.71875,
        "org.jfree.data.time$TimeSeries#getDataItem(int)": -6.806451612903224,
        "org.jfree.data.time$TimeSeries#getDataItem(org.jfree.data.time.RegularTimePeriod)": 0.96875,
        "org.jfree.data.time$TimeSeries#getDomainDescription()": 6.78125,
        "org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)": 7.75,
        "org.jfree.data.time$TimeSeries#getItemCount()": -5.838709677419356,
        "org.jfree.data.time$TimeSeries#getItems()": 0.0,
        "org.jfree.data.time$TimeSeries#getMaximumItemAge()": 8.71875,
        "org.jfree.data.time$TimeSeries#getMaximumItemCount()": 8.71875,
        "org.jfree.data.time$TimeSeries#getNextTimePeriod()": 0.0,
        "org.jfree.data.time$TimeSeries#getRangeDescription()": 6.78125,
        "org.jfree.data.time$TimeSeries#getTimePeriod(int)": -6.806451612903224,
        "org.jfree.data.time$TimeSeries#getTimePeriodClass()": 1.9375,
        "org.jfree.data.time$TimeSeries#getTimePeriods()": 0.0,
        "org.jfree.data.time$TimeSeries#getTimePeriodsUniqueToOtherSeries(org.jfree.data.time.TimeSeries)": 0.0,
        "org.jfree.data.time$TimeSeries#getValue(int)": 3.875,
        "org.jfree.data.time$TimeSeries#getValue(org.jfree.data.time.RegularTimePeriod)": 3.875,
        "org.jfree.data.time$TimeSeries#hashCode()": 0.96875,
        "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)": -6.806451612903224,
        "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)": 0.96875,
        "org.jfree.data.time$TimeSeries#setDomainDescription(java.lang.String)": 0.0,
        "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)": 2.90625,
        "org.jfree.data.time$TimeSeries#setMaximumItemCount(int)": 2.90625,
        "org.jfree.data.time$TimeSeries#setRangeDescription(java.lang.String)": 0.0,
        "org.jfree.data.time$TimeSeries#update(int,java.lang.Number)": 0.0,
        "org.jfree.data.time$TimeSeries#update(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 0.96875,
        "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,double)": 24.21875,
        "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": -3.903225806451612,
        "org.jfree.data.time$TimeSeriesDataItem#clone()": 5.8125,
        "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)": 12.59375,
        "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)": 7.75,
        "org.jfree.data.time$TimeSeriesDataItem#getPeriod()": -6.806451612903224,
        "org.jfree.data.time$TimeSeriesDataItem#getValue()": 5.8125,
        "org.jfree.data.time$TimeSeriesDataItem#hashCode()": 0.96875,
        "org.jfree.data.time$TimeSeriesDataItem#setValue(java.lang.Number)": 4.84375,
        "org.jfree.data.time$Year#Year()": 0.96875,
        "org.jfree.data.time$Year#Year(int)": 41.58064516129032,
        "org.jfree.data.time$Year#Year(java.util.Date)": 0.96875,
        "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone)": 3.875,
        "org.jfree.data.time$Year#compareTo(java.lang.Object)": -1.9677419354838719,
        "org.jfree.data.time$Year#equals(java.lang.Object)": 28.09375,
        "org.jfree.data.time$Year#getFirstMillisecond()": 10.65625,
        "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)": 44.483870967741936,
        "org.jfree.data.time$Year#getLastMillisecond()": 10.65625,
        "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)": 44.483870967741936,
        "org.jfree.data.time$Year#getSerialIndex()": -10.677419354838708,
        "org.jfree.data.time$Year#getYear()": 24.161290322580648,
        "org.jfree.data.time$Year#hashCode()": 0.96875,
        "org.jfree.data.time$Year#next()": 2.90625,
        "org.jfree.data.time$Year#parseYear(java.lang.String)": 2.90625,
        "org.jfree.data.time$Year#peg(java.util.Calendar)": 44.483870967741936,
        "org.jfree.data.time$Year#previous()": 1.9375,
        "org.jfree.data.time$Year#toString()": 0.0
    },
    "Chart-18": {
        "org.jfree.data$DefaultKeyedValues#DefaultKeyedValues()": 170.53225806451613,
        "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,double)": -27.11764705882353,
        "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)": -0.4848484848484844,
        "org.jfree.data$DefaultKeyedValues#clear()": 7.771428571428571,
        "org.jfree.data$DefaultKeyedValues#clone()": 8.742857142857144,
        "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)": 1.9428571428571428,
        "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)": 161.82258064516128,
        "org.jfree.data$DefaultKeyedValues#getItemCount()": 20.4,
        "org.jfree.data$DefaultKeyedValues#getKey(int)": 16.514285714285716,
        "org.jfree.data$DefaultKeyedValues#getKeys()": 5.828571428571428,
        "org.jfree.data$DefaultKeyedValues#getValue(int)": 134.05714285714285,
        "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)": 11.657142857142857,
        "org.jfree.data$DefaultKeyedValues#hashCode()": 0.0,
        "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,double)": 0.9714285714285714,
        "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,java.lang.Number)": 0.9714285714285714,
        "org.jfree.data$DefaultKeyedValues#rebuildIndex()": -30.029411764705884,
        "org.jfree.data$DefaultKeyedValues#removeValue(int)": -8.5,
        "org.jfree.data$DefaultKeyedValues#removeValue(java.lang.Comparable)": -8.5,
        "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,double)": 0.0,
        "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)": 160.8548387096774,
        "org.jfree.data$DefaultKeyedValues#sortByKeys(org.jfree.chart.util.SortOrder)": 1.9428571428571428,
        "org.jfree.data$DefaultKeyedValues#sortByValues(org.jfree.chart.util.SortOrder)": 1.9428571428571428,
        "org.jfree.data$DefaultKeyedValues2D#DefaultKeyedValues2D()": 118.78787878787878,
        "org.jfree.data$DefaultKeyedValues2D#DefaultKeyedValues2D(boolean)": 128.4848484848485,
        "org.jfree.data$DefaultKeyedValues2D#addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)": 105.21212121212122,
        "org.jfree.data$DefaultKeyedValues2D#clear()": 0.9714285714285714,
        "org.jfree.data$DefaultKeyedValues2D#clone()": 3.8857142857142857,
        "org.jfree.data$DefaultKeyedValues2D#equals(java.lang.Object)": 8.742857142857144,
        "org.jfree.data$DefaultKeyedValues2D#getColumnCount()": 105.88571428571429,
        "org.jfree.data$DefaultKeyedValues2D#getColumnIndex(java.lang.Comparable)": 2.914285714285714,
        "org.jfree.data$DefaultKeyedValues2D#getColumnKey(int)": 16.514285714285716,
        "org.jfree.data$DefaultKeyedValues2D#getColumnKeys()": 15.542857142857143,
        "org.jfree.data$DefaultKeyedValues2D#getRowCount()": 121.42857142857143,
        "org.jfree.data$DefaultKeyedValues2D#getRowIndex(java.lang.Comparable)": 114.9090909090909,
        "org.jfree.data$DefaultKeyedValues2D#getRowKey(int)": 46.628571428571426,
        "org.jfree.data$DefaultKeyedValues2D#getRowKeys()": 16.514285714285716,
        "org.jfree.data$DefaultKeyedValues2D#getValue(int,int)": 95.2,
        "org.jfree.data$DefaultKeyedValues2D#getValue(java.lang.Comparable,java.lang.Comparable)": 22.34285714285714,
        "org.jfree.data$DefaultKeyedValues2D#hashCode()": 0.0,
        "org.jfree.data$DefaultKeyedValues2D#removeColumn(int)": 0.0,
        "org.jfree.data$DefaultKeyedValues2D#removeColumn(java.lang.Comparable)": -16.0,
        "org.jfree.data$DefaultKeyedValues2D#removeRow(int)": 0.9714285714285714,
        "org.jfree.data$DefaultKeyedValues2D#removeRow(java.lang.Comparable)": 0.0,
        "org.jfree.data$DefaultKeyedValues2D#removeValue(java.lang.Comparable,java.lang.Comparable)": 2.914285714285714,
        "org.jfree.data$DefaultKeyedValues2D#setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)": 114.9090909090909,
        "org.jfree.data$UnknownKeyException#UnknownKeyException(java.lang.String)": 12.628571428571428,
        "org.jfree.data.category$DefaultCategoryDataset#DefaultCategoryDataset()": 89.3529411764706,
        "org.jfree.data.category$DefaultCategoryDataset#addValue(double,java.lang.Comparable,java.lang.Comparable)": 29.176470588235297,
        "org.jfree.data.category$DefaultCategoryDataset#addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)": 68.0,
        "org.jfree.data.category$DefaultCategoryDataset#clear()": 0.0,
        "org.jfree.data.category$DefaultCategoryDataset#clone()": 1.9428571428571428,
        "org.jfree.data.category$DefaultCategoryDataset#equals(java.lang.Object)": 7.771428571428571,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnCount()": 90.34285714285714,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnIndex(java.lang.Comparable)": 2.914285714285714,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnKey(int)": 15.542857142857143,
        "org.jfree.data.category$DefaultCategoryDataset#getColumnKeys()": 7.771428571428571,
        "org.jfree.data.category$DefaultCategoryDataset#getRowCount()": 105.88571428571429,
        "org.jfree.data.category$DefaultCategoryDataset#getRowIndex(java.lang.Comparable)": 0.0,
        "org.jfree.data.category$DefaultCategoryDataset#getRowKey(int)": 40.8,
        "org.jfree.data.category$DefaultCategoryDataset#getRowKeys()": 8.742857142857144,
        "org.jfree.data.category$DefaultCategoryDataset#getValue(int,int)": 81.6,
        "org.jfree.data.category$DefaultCategoryDataset#getValue(java.lang.Comparable,java.lang.Comparable)": 20.4,
        "org.jfree.data.category$DefaultCategoryDataset#hashCode()": 0.0,
        "org.jfree.data.category$DefaultCategoryDataset#incrementValue(double,java.lang.Comparable,java.lang.Comparable)": 0.9714285714285714,
        "org.jfree.data.category$DefaultCategoryDataset#removeColumn(int)": 0.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeColumn(java.lang.Comparable)": -31.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeRow(int)": 0.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeRow(java.lang.Comparable)": 0.0,
        "org.jfree.data.category$DefaultCategoryDataset#removeValue(java.lang.Comparable,java.lang.Comparable)": 0.9714285714285714,
        "org.jfree.data.category$DefaultCategoryDataset#setValue(double,java.lang.Comparable,java.lang.Comparable)": 8.742857142857144,
        "org.jfree.data.category$DefaultCategoryDataset#setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)": 11.657142857142857,
        "org.jfree.data.general$AbstractDataset#AbstractDataset()": 426.1470588235294,
        "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)": 229.25714285714287,
        "org.jfree.data.general$AbstractDataset#clone()": 33.02857142857143,
        "org.jfree.data.general$AbstractDataset#fireDatasetChanged()": 302.88235294117646,
        "org.jfree.data.general$AbstractDataset#getGroup()": 1.9428571428571428,
        "org.jfree.data.general$AbstractDataset#hasListener(java.util.EventListener)": 1.9428571428571428,
        "org.jfree.data.general$AbstractDataset#notifyListeners(org.jfree.data.general.DatasetChangeEvent)": 342.6764705882353,
        "org.jfree.data.general$AbstractDataset#readObject(java.io.ObjectInputStream)": 57.31428571428572,
        "org.jfree.data.general$AbstractDataset#removeChangeListener(org.jfree.data.general.DatasetChangeListener)": 19.428571428571427,
        "org.jfree.data.general$AbstractDataset#setGroup(org.jfree.data.general.DatasetGroup)": 0.0,
        "org.jfree.data.general$AbstractDataset#validateObject()": 57.31428571428572,
        "org.jfree.data.general$AbstractDataset#writeObject(java.io.ObjectOutputStream)": 57.31428571428572,
        "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)": 410.61764705882354,
        "org.jfree.data.general$DatasetChangeEvent#getDataset()": 0.0,
        "org.jfree.data.general$DatasetGroup#DatasetGroup()": 427.11764705882354,
        "org.jfree.data.general$DatasetGroup#DatasetGroup(java.lang.String)": 0.0,
        "org.jfree.data.general$DatasetGroup#clone()": 0.0,
        "org.jfree.data.general$DatasetGroup#equals(java.lang.Object)": 0.9714285714285714,
        "org.jfree.data.general$DatasetGroup#getID()": 0.0
    },
    "Chart-19": {},
    "Chart-2": {
        "org.jfree.chart.event$DatasetChangeInfo#DatasetChangeInfo()": 557.8709677419355,
        "org.jfree.data$ComparableObjectItem#ComparableObjectItem(java.lang.Comparable,java.lang.Object)": 84.64516129032258,
        "org.jfree.data$ComparableObjectItem#clone()": 5.818181818181818,
        "org.jfree.data$ComparableObjectItem#compareTo(java.lang.Object)": 26.181818181818183,
        "org.jfree.data$ComparableObjectItem#equals(java.lang.Object)": 38.78787878787879,
        "org.jfree.data$ComparableObjectItem#getComparable()": 32.96969696969697,
        "org.jfree.data$ComparableObjectItem#getObject()": 1.4193548387096762,
        "org.jfree.data$ComparableObjectItem#hashCode()": 2.909090909090909,
        "org.jfree.data$ComparableObjectItem#setObject(java.lang.Object)": 0.0,
        "org.jfree.data$ComparableObjectSeries#ComparableObjectSeries(java.lang.Comparable)": 4.848484848484849,
        "org.jfree.data$ComparableObjectSeries#ComparableObjectSeries(java.lang.Comparable,boolean,boolean)": 72.06451612903226,
        "org.jfree.data$ComparableObjectSeries#add(java.lang.Comparable,java.lang.Object)": 3.878787878787879,
        "org.jfree.data$ComparableObjectSeries#add(java.lang.Comparable,java.lang.Object,boolean)": 3.878787878787879,
        "org.jfree.data$ComparableObjectSeries#add(org.jfree.data.ComparableObjectItem,boolean)": 60.45161290322581,
        "org.jfree.data$ComparableObjectSeries#clear()": 4.848484848484849,
        "org.jfree.data$ComparableObjectSeries#delete(int,int)": 0.0,
        "org.jfree.data$ComparableObjectSeries#equals(java.lang.Object)": 34.90909090909091,
        "org.jfree.data$ComparableObjectSeries#getAllowDuplicateXValues()": 0.9696969696969697,
        "org.jfree.data$ComparableObjectSeries#getAutoSort()": 0.9696969696969697,
        "org.jfree.data$ComparableObjectSeries#getDataItem(int)": 16.903225806451616,
        "org.jfree.data$ComparableObjectSeries#getItemCount()": 61.41935483870968,
        "org.jfree.data$ComparableObjectSeries#getMaximumItemCount()": 5.818181818181818,
        "org.jfree.data$ComparableObjectSeries#hashCode()": 1.9393939393939394,
        "org.jfree.data$ComparableObjectSeries#indexOf(java.lang.Comparable)": 19.393939393939394,
        "org.jfree.data$ComparableObjectSeries#remove(int)": 8.727272727272727,
        "org.jfree.data$ComparableObjectSeries#remove(java.lang.Comparable)": 10.666666666666666,
        "org.jfree.data$ComparableObjectSeries#setMaximumItemCount(int)": 9.696969696969697,
        "org.jfree.data$ComparableObjectSeries#update(java.lang.Comparable,java.lang.Object)": 0.0,
        "org.jfree.data$ComparableObjectSeries#updateByIndex(int,java.lang.Object)": 0.0,
        "org.jfree.data$Range#Range(double,double)": 379.1515151515151,
        "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)": 186.1818181818182,
        "org.jfree.data$Range#constrain(double)": 24.242424242424242,
        "org.jfree.data$Range#contains(double)": 116.36363636363636,
        "org.jfree.data$Range#equals(java.lang.Object)": 106.66666666666667,
        "org.jfree.data$Range#expand(org.jfree.data.Range,double,double)": 0.9696969696969697,
        "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)": 29.09090909090909,
        "org.jfree.data$Range#getCentralValue()": 8.727272727272727,
        "org.jfree.data$Range#getLength()": 12.606060606060606,
        "org.jfree.data$Range#getLowerBound()": 255.03030303030303,
        "org.jfree.data$Range#getUpperBound()": 256.0,
        "org.jfree.data$Range#hashCode()": 0.9696969696969697,
        "org.jfree.data$Range#intersects(double,double)": 2.909090909090909,
        "org.jfree.data$Range#intersects(org.jfree.data.Range)": 0.0,
        "org.jfree.data$Range#scale(org.jfree.data.Range,double)": 0.9696969696969697,
        "org.jfree.data$Range#shift(org.jfree.data.Range,double)": 1.9393939393939394,
        "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)": 1.9393939393939394,
        "org.jfree.data$Range#shiftWithNoZeroCrossing(double,double)": 1.9393939393939394,
        "org.jfree.data$Range#toString()": 0.0,
        "org.jfree.data.event$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset,org.jfree.chart.event.DatasetChangeInfo)": 557.8709677419355,
        "org.jfree.data.event$DatasetChangeEvent#getDataset()": 0.0,
        "org.jfree.data.event$DatasetChangeEvent#getInfo()": 0.0,
        "org.jfree.data.event$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)": 284.96774193548384,
        "org.jfree.data.event$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object,org.jfree.data.general.SeriesChangeInfo)": 284.96774193548384,
        "org.jfree.data.event$SeriesChangeEvent#getSummary()": 0.0,
        "org.jfree.data.event$SeriesChangeEvent#setSummary(org.jfree.data.general.SeriesChangeInfo)": 0.0,
        "org.jfree.data.general$AbstractDataset#AbstractDataset()": 564.6451612903226,
        "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.event.DatasetChangeListener)": 271.5151515151515,
        "org.jfree.data.general$AbstractDataset#clone()": 41.696969696969695,
        "org.jfree.data.general$AbstractDataset#fireDatasetChanged(org.jfree.chart.event.DatasetChangeInfo)": 490.1290322580645,
        "org.jfree.data.general$AbstractDataset#getGroup()": 3.878787878787879,
        "org.jfree.data.general$AbstractDataset#hasListener(java.util.EventListener)": 2.909090909090909,
        "org.jfree.data.general$AbstractDataset#notifyListeners(org.jfree.data.event.DatasetChangeEvent)": 490.1290322580645,
        "org.jfree.data.general$AbstractDataset#readObject(java.io.ObjectInputStream)": 63.03030303030303,
        "org.jfree.data.general$AbstractDataset#removeChangeListener(org.jfree.data.event.DatasetChangeListener)": 19.393939393939394,
        "org.jfree.data.general$AbstractDataset#setGroup(org.jfree.data.general.DatasetGroup)": 0.0,
        "org.jfree.data.general$AbstractDataset#validateObject()": 63.03030303030303,
        "org.jfree.data.general$AbstractDataset#writeObject(java.io.ObjectOutputStream)": 63.03030303030303,
        "org.jfree.data.general$AbstractSeriesDataset#AbstractSeriesDataset()": 320.7741935483871,
        "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)": 77.57575757575758,
        "org.jfree.data.general$AbstractSeriesDataset#seriesChanged(org.jfree.data.event.SeriesChangeEvent)": 9.696969696969697,
        "org.jfree.data.general$DatasetGroup#DatasetGroup()": 565.6129032258065,
        "org.jfree.data.general$DatasetGroup#DatasetGroup(java.lang.String)": 0.0,
        "org.jfree.data.general$DatasetGroup#clone()": 0.0,
        "org.jfree.data.general$DatasetGroup#equals(java.lang.Object)": 0.9696969696969697,
        "org.jfree.data.general$DatasetGroup#getID()": 0.0,
        "org.jfree.data.general$DatasetUtilities#DatasetUtilities()": 0.0,
        "org.jfree.data.general$DatasetUtilities#calculatePieDatasetTotal(org.jfree.data.pie.PieDataset)": 4.848484848484849,
        "org.jfree.data.general$DatasetUtilities#calculateStackTotal(org.jfree.data.xy.TableXYDataset,int)": 0.0,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.Comparable,org.jfree.data.KeyedValues)": 0.0,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.Comparable[],java.lang.Comparable[],double[][])": 1.9393939393939394,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.String,java.lang.String,double[][])": 0.0,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.String,java.lang.String,java.lang.Number[][])": 33.93939393939394,
        "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.pie.PieDataset,java.lang.Comparable,double)": 0.9696969696969697,
        "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.pie.PieDataset,java.lang.Comparable,double,int)": 0.9696969696969697,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForColumn(org.jfree.data.category.CategoryDataset,int)": 0.0,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForColumn(org.jfree.data.category.CategoryDataset,java.lang.Comparable)": 0.0,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForRow(org.jfree.data.category.CategoryDataset,int)": 0.0,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForRow(org.jfree.data.category.CategoryDataset,java.lang.Comparable)": 0.0,
        "org.jfree.data.general$DatasetUtilities#findCumulativeRangeBounds(org.jfree.data.category.CategoryDataset)": 3.878787878787879,
        "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset)": 24.242424242424242,
        "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)": 37.81818181818182,
        "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)": 75.63636363636364,
        "org.jfree.data.general$DatasetUtilities#findMaximumDomainValue(org.jfree.data.xy.XYDataset)": 0.9696969696969697,
        "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.category.CategoryDataset)": 2.909090909090909,
        "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.xy.XYDataset)": 0.9696969696969697,
        "org.jfree.data.general$DatasetUtilities#findMaximumStackedRangeValue(org.jfree.data.category.CategoryDataset)": 2.909090909090909,
        "org.jfree.data.general$DatasetUtilities#findMinimumDomainValue(org.jfree.data.xy.XYDataset)": 0.9696969696969697,
        "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.category.CategoryDataset)": 1.9393939393939394,
        "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.xy.XYDataset)": 0.9696969696969697,
        "org.jfree.data.general$DatasetUtilities#findMinimumStackedRangeValue(org.jfree.data.category.CategoryDataset)": 1.9393939393939394,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset)": 0.9696969696969697,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 0.9696969696969697,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)": 74.66666666666667,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset)": 24.242424242424242,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)": 32.96969696969697,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)": 68.84848484848484,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset)": 10.666666666666666,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)": 15.515151515151516,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)": 3.878787878787879,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.xy.TableXYDataset)": 5.818181818181818,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)": 5.818181818181818,
        "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.category.CategoryDataset)": 28.12121212121212,
        "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.pie.PieDataset)": 2.909090909090909,
        "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.xy.XYDataset)": 16.484848484848484,
        "org.jfree.data.general$DatasetUtilities#iterateCategoryRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 0.0,
        "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset)": -29.0625,
        "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)": -16.46875,
        "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.category.CategoryDataset)": 0.0,
        "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 3.878787878787879,
        "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset)": -27.125,
        "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)": -15.5,
        "org.jfree.data.general$DatasetUtilities#iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)": 74.66666666666667,
        "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)": 76.60606060606061,
        "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)": 70.78787878787878,
        "org.jfree.data.general$DatasetUtilities#iterateXYRangeBounds(org.jfree.data.xy.XYDataset)": 0.0,
        "org.jfree.data.general$DatasetUtilities#sampleFunction2D(org.jfree.data.function.Function2D,double,double,int,java.lang.Comparable)": 0.9696969696969697,
        "org.jfree.data.general$DatasetUtilities#sampleFunction2DToSeries(org.jfree.data.function.Function2D,double,double,int,java.lang.Comparable)": 0.9696969696969697,
        "org.jfree.data.general$Series#Series(java.lang.Comparable)": 312.06451612903226,
        "org.jfree.data.general$Series#Series(java.lang.Comparable,java.lang.String)": 312.06451612903226,
        "org.jfree.data.general$Series#addChangeListener(org.jfree.data.event.SeriesChangeListener)": 169.80645161290323,
        "org.jfree.data.general$Series#addPropertyChangeListener(java.beans.PropertyChangeListener)": 0.0,
        "org.jfree.data.general$Series#clone()": 30.060606060606062,
        "org.jfree.data.general$Series#equals(java.lang.Object)": 86.3030303030303,
        "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)": 0.9696969696969697,
        "org.jfree.data.general$Series#fireSeriesChanged()": 284.96774193548384,
        "org.jfree.data.general$Series#getDescription()": 77.57575757575758,
        "org.jfree.data.general$Series#getKey()": 170.66666666666666,
        "org.jfree.data.general$Series#getNotify()": 0.0,
        "org.jfree.data.general$Series#hashCode()": 3.878787878787879,
        "org.jfree.data.general$Series#isEmpty()": 4.848484848484849,
        "org.jfree.data.general$Series#notifyListeners(org.jfree.data.event.SeriesChangeEvent)": 284.96774193548384,
        "org.jfree.data.general$Series#removeChangeListener(org.jfree.data.event.SeriesChangeListener)": 18.424242424242426,
        "org.jfree.data.general$Series#removePropertyChangeListener(java.beans.PropertyChangeListener)": 0.0,
        "org.jfree.data.general$Series#setDescription(java.lang.String)": 6.787878787878788,
        "org.jfree.data.general$Series#setKey(java.lang.Comparable)": 4.848484848484849,
        "org.jfree.data.general$Series#setNotify(boolean)": 0.0,
        "org.jfree.data.general$SeriesException#SeriesException(java.lang.String)": 2.909090909090909,
        "org.jfree.data.xy$AbstractIntervalXYDataset#AbstractIntervalXYDataset()": 189.16129032258064,
        "org.jfree.data.xy$AbstractIntervalXYDataset#getEndXValue(int,int)": 6.787878787878788,
        "org.jfree.data.xy$AbstractIntervalXYDataset#getEndYValue(int,int)": 3.878787878787879,
        "org.jfree.data.xy$AbstractIntervalXYDataset#getStartXValue(int,int)": 6.787878787878788,
        "org.jfree.data.xy$AbstractIntervalXYDataset#getStartYValue(int,int)": 3.878787878787879,
        "org.jfree.data.xy$AbstractXYDataset#AbstractXYDataset()": 272.38709677419354,
        "org.jfree.data.xy$AbstractXYDataset#getDomainOrder()": 4.848484848484849,
        "org.jfree.data.xy$AbstractXYDataset#getSelectionState()": 0.0,
        "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)": 71.75757575757575,
        "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)": 69.81818181818181,
        "org.jfree.data.xy$AbstractXYDataset#setSelectionState(org.jfree.data.xy.XYDatasetSelectionState)": 106.66666666666667,
        "org.jfree.data.xy$XYInterval#XYInterval(double,double,double,double,double)": 5.29032258064516,
        "org.jfree.data.xy$XYInterval#equals(java.lang.Object)": 6.787878787878788,
        "org.jfree.data.xy$XYInterval#getXHigh()": -29.0625,
        "org.jfree.data.xy$XYInterval#getXLow()": -29.0625,
        "org.jfree.data.xy$XYInterval#getY()": 3.878787878787879,
        "org.jfree.data.xy$XYInterval#getYHigh()": -29.0625,
        "org.jfree.data.xy$XYInterval#getYLow()": -29.0625,
        "org.jfree.data.xy$XYIntervalDataItem#XYIntervalDataItem(double,double,double,double,double,double)": 2.387096774193548,
        "org.jfree.data.xy$XYIntervalDataItem#getX()": 4.848484848484849,
        "org.jfree.data.xy$XYIntervalDataItem#getXHighValue()": -29.0625,
        "org.jfree.data.xy$XYIntervalDataItem#getXLowValue()": -29.0625,
        "org.jfree.data.xy$XYIntervalDataItem#getYHighValue()": -29.0625,
        "org.jfree.data.xy$XYIntervalDataItem#getYLowValue()": -29.0625,
        "org.jfree.data.xy$XYIntervalDataItem#getYValue()": 3.878787878787879,
        "org.jfree.data.xy$XYIntervalSeries#XYIntervalSeries(java.lang.Comparable)": -1.483870967741936,
        "org.jfree.data.xy$XYIntervalSeries#XYIntervalSeries(java.lang.Comparable,boolean,boolean)": 0.4516129032258078,
        "org.jfree.data.xy$XYIntervalSeries#add(double,double,double,double,double,double)": -1.483870967741936,
        "org.jfree.data.xy$XYIntervalSeries#getDataItem(int)": -10.193548387096774,
        "org.jfree.data.xy$XYIntervalSeries#getX(int)": 3.878787878787879,
        "org.jfree.data.xy$XYIntervalSeries#getXHighValue(int)": -30.03125,
        "org.jfree.data.xy$XYIntervalSeries#getXLowValue(int)": -30.03125,
        "org.jfree.data.xy$XYIntervalSeries#getYHighValue(int)": -30.03125,
        "org.jfree.data.xy$XYIntervalSeries#getYLowValue(int)": -30.03125,
        "org.jfree.data.xy$XYIntervalSeries#getYValue(int)": 2.909090909090909,
        "org.jfree.data.xy$XYIntervalSeriesCollection#XYIntervalSeriesCollection()": -10.193548387096774,
        "org.jfree.data.xy$XYIntervalSeriesCollection#addSeries(org.jfree.data.xy.XYIntervalSeries)": -11.161290322580644,
        "org.jfree.data.xy$XYIntervalSeriesCollection#clone()": 0.9696969696969697,
        "org.jfree.data.xy$XYIntervalSeriesCollection#equals(java.lang.Object)": 3.878787878787879,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getEndX(int,int)": 0.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getEndXValue(int,int)": -31.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getEndY(int,int)": 0.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getEndYValue(int,int)": -31.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getItemCount(int)": -16.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getSeries(int)": -15.032258064516128,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getSeriesCount()": -13.096774193548388,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getSeriesKey(int)": 0.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getStartX(int,int)": 0.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getStartXValue(int,int)": -31.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getStartY(int,int)": 0.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getStartYValue(int,int)": -31.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getX(int,int)": 0.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getY(int,int)": 0.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#getYValue(int,int)": 0.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#removeAllSeries()": 0.0,
        "org.jfree.data.xy$XYIntervalSeriesCollection#removeSeries(int)": 0.9696969696969697,
        "org.jfree.data.xy$XYIntervalSeriesCollection#removeSeries(org.jfree.data.xy.XYIntervalSeries)": 0.0
    },
    "Chart-20": {},
    "Chart-3": {
        "org.jfree.data.event$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)": 269.0,
        "org.jfree.data.event$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object,org.jfree.data.general.SeriesChangeInfo)": 269.0,
        "org.jfree.data.event$SeriesChangeEvent#getSummary()": 0.0,
        "org.jfree.data.event$SeriesChangeEvent#setSummary(org.jfree.data.general.SeriesChangeInfo)": 0.0,
        "org.jfree.data.general$Series#Series(java.lang.Comparable)": 296.0967741935484,
        "org.jfree.data.general$Series#Series(java.lang.Comparable,java.lang.String)": 296.0967741935484,
        "org.jfree.data.general$Series#addChangeListener(org.jfree.data.event.SeriesChangeListener)": 186.0,
        "org.jfree.data.general$Series#addPropertyChangeListener(java.beans.PropertyChangeListener)": 0.0,
        "org.jfree.data.general$Series#clone()": -1.9677419354838719,
        "org.jfree.data.general$Series#equals(java.lang.Object)": 86.21875,
        "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)": 0.96875,
        "org.jfree.data.general$Series#fireSeriesChanged()": 269.0,
        "org.jfree.data.general$Series#getDescription()": 77.5,
        "org.jfree.data.general$Series#getKey()": 170.5,
        "org.jfree.data.general$Series#getNotify()": 0.0,
        "org.jfree.data.general$Series#hashCode()": 3.875,
        "org.jfree.data.general$Series#isEmpty()": 4.84375,
        "org.jfree.data.general$Series#notifyListeners(org.jfree.data.event.SeriesChangeEvent)": 269.0,
        "org.jfree.data.general$Series#removeChangeListener(org.jfree.data.event.SeriesChangeListener)": 18.40625,
        "org.jfree.data.general$Series#removePropertyChangeListener(java.beans.PropertyChangeListener)": 0.0,
        "org.jfree.data.general$Series#setDescription(java.lang.String)": 6.78125,
        "org.jfree.data.general$Series#setKey(java.lang.Comparable)": 4.84375,
        "org.jfree.data.general$Series#setNotify(boolean)": 0.0,
        "org.jfree.data.general$SeriesException#SeriesException(java.lang.String)": 2.90625,
        "org.jfree.data.time$Day#<clinit>()": 136.59375,
        "org.jfree.data.time$Day#Day()": 12.59375,
        "org.jfree.data.time$Day#Day(int,int,int)": 99.78125,
        "org.jfree.data.time$Day#Day(java.util.Date)": 14.53125,
        "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)": 32.9375,
        "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)": 13.5625,
        "org.jfree.data.time$Day#compareTo(java.lang.Object)": 9.6875,
        "org.jfree.data.time$Day#equals(java.lang.Object)": 24.21875,
        "org.jfree.data.time$Day#getDayOfMonth()": 81.375,
        "org.jfree.data.time$Day#getFirstMillisecond()": 15.5,
        "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)": 132.71875,
        "org.jfree.data.time$Day#getLastMillisecond()": 15.5,
        "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)": 132.71875,
        "org.jfree.data.time$Day#getMonth()": 81.375,
        "org.jfree.data.time$Day#getSerialDate()": 29.0625,
        "org.jfree.data.time$Day#getSerialIndex()": 13.5625,
        "org.jfree.data.time$Day#getYear()": 79.4375,
        "org.jfree.data.time$Day#hashCode()": 5.8125,
        "org.jfree.data.time$Day#next()": 18.40625,
        "org.jfree.data.time$Day#parseDay(java.lang.String)": 1.9375,
        "org.jfree.data.time$Day#peg(java.util.Calendar)": 132.71875,
        "org.jfree.data.time$Day#previous()": 3.875,
        "org.jfree.data.time$Day#toString()": 0.0,
        "org.jfree.data.time$FixedMillisecond#FixedMillisecond()": 0.96875,
        "org.jfree.data.time$FixedMillisecond#FixedMillisecond(java.util.Date)": 4.84375,
        "org.jfree.data.time$FixedMillisecond#FixedMillisecond(long)": 2.90625,
        "org.jfree.data.time$FixedMillisecond#compareTo(java.lang.Object)": 0.96875,
        "org.jfree.data.time$FixedMillisecond#equals(java.lang.Object)": 1.9375,
        "org.jfree.data.time$FixedMillisecond#getFirstMillisecond()": 2.90625,
        "org.jfree.data.time$FixedMillisecond#getFirstMillisecond(java.util.Calendar)": 0.0,
        "org.jfree.data.time$FixedMillisecond#getLastMillisecond()": 0.0,
        "org.jfree.data.time$FixedMillisecond#getLastMillisecond(java.util.Calendar)": 0.0,
        "org.jfree.data.time$FixedMillisecond#getMiddleMillisecond()": 0.0,
        "org.jfree.data.time$FixedMillisecond#getMiddleMillisecond(java.util.Calendar)": 0.0,
        "org.jfree.data.time$FixedMillisecond#getSerialIndex()": 0.0,
        "org.jfree.data.time$FixedMillisecond#getTime()": 0.0,
        "org.jfree.data.time$FixedMillisecond#hashCode()": 0.96875,
        "org.jfree.data.time$FixedMillisecond#next()": 0.0,
        "org.jfree.data.time$FixedMillisecond#peg(java.util.Calendar)": 0.0,
        "org.jfree.data.time$FixedMillisecond#previous()": 0.0,
        "org.jfree.data.time$Month#Month()": 0.96875,
        "org.jfree.data.time$Month#Month(int,int)": 28.09375,
        "org.jfree.data.time$Month#Month(int,org.jfree.data.time.Year)": 0.96875,
        "org.jfree.data.time$Month#Month(java.util.Date)": 0.96875,
        "org.jfree.data.time$Month#Month(java.util.Date,java.util.TimeZone)": 0.96875,
        "org.jfree.data.time$Month#Month(java.util.Date,java.util.TimeZone,java.util.Locale)": 6.78125,
        "org.jfree.data.time$Month#compareTo(java.lang.Object)": 2.90625,
        "org.jfree.data.time$Month#equals(java.lang.Object)": 6.78125,
        "org.jfree.data.time$Month#evaluateAsYear(java.lang.String)": 0.96875,
        "org.jfree.data.time$Month#findSeparator(java.lang.String)": 0.96875,
        "org.jfree.data.time$Month#getFirstMillisecond()": 4.84375,
        "org.jfree.data.time$Month#getFirstMillisecond(java.util.Calendar)": 29.0625,
        "org.jfree.data.time$Month#getLastMillisecond()": 4.84375,
        "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)": 29.0625,
        "org.jfree.data.time$Month#getMonth()": 6.78125,
        "org.jfree.data.time$Month#getSerialIndex()": 3.875,
        "org.jfree.data.time$Month#getYear()": 1.9375,
        "org.jfree.data.time$Month#getYearValue()": 2.90625,
        "org.jfree.data.time$Month#hashCode()": 0.96875,
        "org.jfree.data.time$Month#next()": 2.90625,
        "org.jfree.data.time$Month#parseMonth(java.lang.String)": 0.96875,
        "org.jfree.data.time$Month#peg(java.util.Calendar)": 29.0625,
        "org.jfree.data.time$Month#previous()": 3.875,
        "org.jfree.data.time$Month#toString()": 0.0,
        "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()": 258.35483870967744,
        "org.jfree.data.time$RegularTimePeriod#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone)": 1.9375,
        "org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)": 5.8125,
        "org.jfree.data.time$RegularTimePeriod#getEnd()": 20.34375,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()": 18.40625,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)": 0.96875,
        "org.jfree.data.time$RegularTimePeriod#getStart()": 20.34375,
        "org.jfree.data.time$RegularTimePeriod#toString()": 0.0,
        "org.jfree.data.time$TimePeriodFormatException#TimePeriodFormatException(java.lang.String)": 0.96875,
        "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable)": 15.451612903225808,
        "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable,java.lang.String,java.lang.String)": 15.451612903225808,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)": -1.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)": -1.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 4.806451612903224,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)": 4.806451612903224,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)": -27.129032258064516,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)": 10.612903225806448,
        "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)": 0.96875,
        "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)": 4.84375,
        "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 7.75,
        "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.TimeSeriesDataItem)": 7.75,
        "org.jfree.data.time$TimeSeries#clear()": 0.96875,
        "org.jfree.data.time$TimeSeries#clone()": 3.875,
        "org.jfree.data.time$TimeSeries#createCopy(int,int)": -29.064516129032256,
        "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)": 1.9375,
        "org.jfree.data.time$TimeSeries#delete(int,int)": 2.90625,
        "org.jfree.data.time$TimeSeries#delete(int,int,boolean)": 2.90625,
        "org.jfree.data.time$TimeSeries#delete(org.jfree.data.time.RegularTimePeriod)": 1.9375,
        "org.jfree.data.time$TimeSeries#equals(java.lang.Object)": 11.625,
        "org.jfree.data.time$TimeSeries#findBoundsByIteration()": 18.40625,
        "org.jfree.data.time$TimeSeries#getDataItem(int)": 2.90625,
        "org.jfree.data.time$TimeSeries#getDataItem(org.jfree.data.time.RegularTimePeriod)": 0.96875,
        "org.jfree.data.time$TimeSeries#getDomainDescription()": 11.625,
        "org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)": 10.65625,
        "org.jfree.data.time$TimeSeries#getItemCount()": 14.483870967741936,
        "org.jfree.data.time$TimeSeries#getItems()": 0.0,
        "org.jfree.data.time$TimeSeries#getMaxY()": -20.35483870967742,
        "org.jfree.data.time$TimeSeries#getMaximumItemAge()": 13.5625,
        "org.jfree.data.time$TimeSeries#getMaximumItemCount()": 13.5625,
        "org.jfree.data.time$TimeSeries#getMinY()": -20.35483870967742,
        "org.jfree.data.time$TimeSeries#getNextTimePeriod()": 0.0,
        "org.jfree.data.time$TimeSeries#getRangeDescription()": 11.625,
        "org.jfree.data.time$TimeSeries#getRawDataItem(int)": 9.645161290322584,
        "org.jfree.data.time$TimeSeries#getRawDataItem(org.jfree.data.time.RegularTimePeriod)": 0.0,
        "org.jfree.data.time$TimeSeries#getTimePeriod(int)": 9.645161290322584,
        "org.jfree.data.time$TimeSeries#getTimePeriodClass()": 0.96875,
        "org.jfree.data.time$TimeSeries#getTimePeriods()": 0.0,
        "org.jfree.data.time$TimeSeries#getTimePeriodsUniqueToOtherSeries(org.jfree.data.time.TimeSeries)": 0.0,
        "org.jfree.data.time$TimeSeries#getValue(int)": 5.8125,
        "org.jfree.data.time$TimeSeries#getValue(org.jfree.data.time.RegularTimePeriod)": 4.84375,
        "org.jfree.data.time$TimeSeries#hashCode()": 0.96875,
        "org.jfree.data.time$TimeSeries#maxIgnoreNaN(double,double)": 10.612903225806448,
        "org.jfree.data.time$TimeSeries#minIgnoreNaN(double,double)": 10.612903225806448,
        "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)": 10.612903225806448,
        "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)": 2.90625,
        "org.jfree.data.time$TimeSeries#setDomainDescription(java.lang.String)": 0.0,
        "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)": 4.84375,
        "org.jfree.data.time$TimeSeries#setMaximumItemCount(int)": 4.84375,
        "org.jfree.data.time$TimeSeries#setRangeDescription(java.lang.String)": 0.0,
        "org.jfree.data.time$TimeSeries#update(int,java.lang.Number)": 1.9375,
        "org.jfree.data.time$TimeSeries#update(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 1.9375,
        "org.jfree.data.time$TimeSeries#updateBoundsForAddedItem(org.jfree.data.time.TimeSeriesDataItem)": 10.612903225806448,
        "org.jfree.data.time$TimeSeries#updateBoundsForRemovedItem(org.jfree.data.time.TimeSeriesDataItem)": 4.84375,
        "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,double)": 7.70967741935484,
        "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 13.516129032258064,
        "org.jfree.data.time$TimeSeriesDataItem#clone()": 10.612903225806448,
        "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)": 19.375,
        "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)": 9.6875,
        "org.jfree.data.time$TimeSeriesDataItem#getPeriod()": 10.612903225806448,
        "org.jfree.data.time$TimeSeriesDataItem#getValue()": 10.612903225806448,
        "org.jfree.data.time$TimeSeriesDataItem#hashCode()": 0.96875,
        "org.jfree.data.time$TimeSeriesDataItem#isSelected()": 0.0,
        "org.jfree.data.time$TimeSeriesDataItem#setSelected(boolean)": 0.0,
        "org.jfree.data.time$TimeSeriesDataItem#setValue(java.lang.Number)": 9.6875,
        "org.jfree.data.time$Year#Year()": 0.96875,
        "org.jfree.data.time$Year#Year(int)": 65.7741935483871,
        "org.jfree.data.time$Year#Year(java.util.Date)": 0.96875,
        "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone)": 4.84375,
        "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone,java.util.Locale)": 4.84375,
        "org.jfree.data.time$Year#compareTo(java.lang.Object)": 13.516129032258064,
        "org.jfree.data.time$Year#equals(java.lang.Object)": 33.90625,
        "org.jfree.data.time$Year#getFirstMillisecond()": 15.5,
        "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)": 68.6774193548387,
        "org.jfree.data.time$Year#getLastMillisecond()": 15.5,
        "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)": 68.6774193548387,
        "org.jfree.data.time$Year#getSerialIndex()": 4.806451612903224,
        "org.jfree.data.time$Year#getYear()": 21.258064516129032,
        "org.jfree.data.time$Year#hashCode()": 1.9375,
        "org.jfree.data.time$Year#next()": 2.90625,
        "org.jfree.data.time$Year#parseYear(java.lang.String)": 2.90625,
        "org.jfree.data.time$Year#peg(java.util.Calendar)": 68.6774193548387,
        "org.jfree.data.time$Year#previous()": 1.9375,
        "org.jfree.data.time$Year#toString()": 0.0
    },
    "Chart-4": {
        "org.jfree.chart$ChartColor#<clinit>()": 262.7976539589443,
        "org.jfree.chart$ChartColor#ChartColor(int,int,int)": 0.0,
        "org.jfree.chart$ChartColor#createDefaultPaintArray()": 262.7976539589443,
        "org.jfree.chart$ChartFactory#<clinit>()": 90.53958944281526,
        "org.jfree.chart$ChartFactory#ChartFactory()": 0.0,
        "org.jfree.chart$ChartFactory#createAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 3.9245283018867925,
        "org.jfree.chart$ChartFactory#createBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 9.81132075471698,
        "org.jfree.chart$ChartFactory#createBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 3.9245283018867925,
        "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerCategoryDataset,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createBoxAndWhiskerChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.statistics.BoxAndWhiskerXYDataset,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createBubbleChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYZDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createCandlestickChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createGanttChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.IntervalCategoryDataset,boolean,boolean,boolean)": 4.90566037735849,
        "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createHighLowChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.OHLCDataset,org.jfree.chart.axis.Timeline,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createHistogram(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 7.849056603773585,
        "org.jfree.chart$ChartFactory#createLineChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 3.9245283018867925,
        "org.jfree.chart$ChartFactory#createMultiplePieChart(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createMultiplePieChart3D(java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.util.TableOrder,boolean,boolean,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)": -17.26923076923077,
        "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)": 0.0,
        "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createPieChart(java.lang.String,org.jfree.data.general.PieDataset,org.jfree.data.general.PieDataset,int,boolean,boolean,boolean,java.util.Locale,boolean,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)": 3.9245283018867925,
        "org.jfree.chart$ChartFactory#createPieChart3D(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)": 0.0,
        "org.jfree.chart$ChartFactory#createPolarChart(java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createRingChart(java.lang.String,org.jfree.data.general.PieDataset,boolean,boolean,java.util.Locale)": 0.0,
        "org.jfree.chart$ChartFactory#createScatterPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": -4.75,
        "org.jfree.chart$ChartFactory#createStackedAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 3.9245283018867925,
        "org.jfree.chart$ChartFactory#createStackedBarChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 4.90566037735849,
        "org.jfree.chart$ChartFactory#createStackedBarChart3D(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 3.9245283018867925,
        "org.jfree.chart$ChartFactory#createStackedXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.TableXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 4.90566037735849,
        "org.jfree.chart$ChartFactory#createTimeSeriesChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,boolean,boolean,boolean)": -8.5,
        "org.jfree.chart$ChartFactory#createWaferMapChart(java.lang.String,org.jfree.data.general.WaferMapDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createWaterfallChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 2.943396226415094,
        "org.jfree.chart$ChartFactory#createWindPlot(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.WindDataset,boolean,boolean,boolean)": 0.0,
        "org.jfree.chart$ChartFactory#createXYAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": -11.0,
        "org.jfree.chart$ChartFactory#createXYBarChart(java.lang.String,java.lang.String,boolean,java.lang.String,org.jfree.data.xy.IntervalXYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": 3.9245283018867925,
        "org.jfree.chart$ChartFactory#createXYLineChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": -11.384615384615383,
        "org.jfree.chart$ChartFactory#createXYStepAreaChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": -11.0,
        "org.jfree.chart$ChartFactory#createXYStepChart(java.lang.String,java.lang.String,java.lang.String,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotOrientation,boolean,boolean,boolean)": -11.0,
        "org.jfree.chart$ChartFactory#getChartTheme()": 0.0,
        "org.jfree.chart$ChartFactory#setChartTheme(org.jfree.chart.ChartTheme)": 0.0,
        "org.jfree.chart$ChartRenderingInfo#ChartRenderingInfo()": 30.41509433962264,
        "org.jfree.chart$ChartRenderingInfo#ChartRenderingInfo(org.jfree.chart.entity.EntityCollection)": 30.41509433962264,
        "org.jfree.chart$ChartRenderingInfo#clear()": 10.79245283018868,
        "org.jfree.chart$ChartRenderingInfo#clone()": 0.9811320754716981,
        "org.jfree.chart$ChartRenderingInfo#equals(java.lang.Object)": 3.9245283018867925,
        "org.jfree.chart$ChartRenderingInfo#getChartArea()": 0.9811320754716981,
        "org.jfree.chart$ChartRenderingInfo#getEntityCollection()": 11.773584905660377,
        "org.jfree.chart$ChartRenderingInfo#getPlotInfo()": 22.566037735849058,
        "org.jfree.chart$ChartRenderingInfo#getRenderingSource()": 0.0,
        "org.jfree.chart$ChartRenderingInfo#readObject(java.io.ObjectInputStream)": 2.943396226415094,
        "org.jfree.chart$ChartRenderingInfo#setChartArea(java.awt.geom.Rectangle2D)": 12.754716981132075,
        "org.jfree.chart$ChartRenderingInfo#setEntityCollection(org.jfree.chart.entity.EntityCollection)": 0.9811320754716981,
        "org.jfree.chart$ChartRenderingInfo#setRenderingSource(org.jfree.chart.RenderingSource)": 12.754716981132075,
        "org.jfree.chart$ChartRenderingInfo#writeObject(java.io.ObjectOutputStream)": 2.943396226415094,
        "org.jfree.chart$JFreeChart#<clinit>()": 146.7450980392157,
        "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)": 136.94117647058823,
        "org.jfree.chart$JFreeChart#JFreeChart(java.lang.String,org.jfree.chart.plot.Plot)": 0.0,
        "org.jfree.chart$JFreeChart#JFreeChart(org.jfree.chart.plot.Plot)": 59.84905660377358,
        "org.jfree.chart$JFreeChart#addChangeListener(org.jfree.chart.event.ChartChangeListener)": 29.433962264150942,
        "org.jfree.chart$JFreeChart#addLegend(org.jfree.chart.title.LegendTitle)": 0.0,
        "org.jfree.chart$JFreeChart#addProgressListener(org.jfree.chart.event.ChartProgressListener)": 10.79245283018868,
        "org.jfree.chart$JFreeChart#addSubtitle(int,org.jfree.chart.title.Title)": 0.9811320754716981,
        "org.jfree.chart$JFreeChart#addSubtitle(org.jfree.chart.title.Title)": 1.9622641509433962,
        "org.jfree.chart$JFreeChart#clearSubtitles()": 0.0,
        "org.jfree.chart$JFreeChart#clone()": 0.9811320754716981,
        "org.jfree.chart$JFreeChart#createAlignedRectangle2D(org.jfree.chart.util.Size2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)": 62.79245283018868,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int)": 3.9245283018867925,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)": 0.0,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)": 34.339622641509436,
        "org.jfree.chart$JFreeChart#createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)": 34.339622641509436,
        "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 3.9245283018867925,
        "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)": 62.79245283018868,
        "org.jfree.chart$JFreeChart#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.ChartRenderingInfo)": 0.0,
        "org.jfree.chart$JFreeChart#drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 62.79245283018868,
        "org.jfree.chart$JFreeChart#equals(java.lang.Object)": 11.773584905660377,
        "org.jfree.chart$JFreeChart#fireChartChanged()": 7.849056603773585,
        "org.jfree.chart$JFreeChart#getAntiAlias()": 0.0,
        "org.jfree.chart$JFreeChart#getBackgroundImage()": 0.0,
        "org.jfree.chart$JFreeChart#getBackgroundImageAlignment()": 0.0,
        "org.jfree.chart$JFreeChart#getBackgroundImageAlpha()": 0.0,
        "org.jfree.chart$JFreeChart#getBackgroundPaint()": 0.0,
        "org.jfree.chart$JFreeChart#getBorderPaint()": 0.0,
        "org.jfree.chart$JFreeChart#getBorderStroke()": 0.0,
        "org.jfree.chart$JFreeChart#getCategoryPlot()": 0.0,
        "org.jfree.chart$JFreeChart#getLegend()": 6.867924528301887,
        "org.jfree.chart$JFreeChart#getLegend(int)": 6.867924528301887,
        "org.jfree.chart$JFreeChart#getPadding()": 0.0,
        "org.jfree.chart$JFreeChart#getPlot()": 80.07843137254902,
        "org.jfree.chart$JFreeChart#getRenderingHints()": 0.0,
        "org.jfree.chart$JFreeChart#getSubtitle(int)": 54.58823529411765,
        "org.jfree.chart$JFreeChart#getSubtitleCount()": 80.07843137254902,
        "org.jfree.chart$JFreeChart#getSubtitles()": 0.9811320754716981,
        "org.jfree.chart$JFreeChart#getTextAntiAlias()": 0.0,
        "org.jfree.chart$JFreeChart#getTitle()": 78.11764705882354,
        "org.jfree.chart$JFreeChart#getXYPlot()": 0.0,
        "org.jfree.chart$JFreeChart#handleClick(int,int,org.jfree.chart.ChartRenderingInfo)": 0.0,
        "org.jfree.chart$JFreeChart#isBorderVisible()": 62.79245283018868,
        "org.jfree.chart$JFreeChart#isNotify()": 0.0,
        "org.jfree.chart$JFreeChart#main(java.lang.String[])": 0.0,
        "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartChangeEvent)": 87.92156862745098,
        "org.jfree.chart$JFreeChart#notifyListeners(org.jfree.chart.event.ChartProgressEvent)": 62.79245283018868,
        "org.jfree.chart$JFreeChart#plotChanged(org.jfree.chart.event.PlotChangeEvent)": 84.0,
        "org.jfree.chart$JFreeChart#readObject(java.io.ObjectInputStream)": 7.849056603773585,
        "org.jfree.chart$JFreeChart#removeChangeListener(org.jfree.chart.event.ChartChangeListener)": 0.9811320754716981,
        "org.jfree.chart$JFreeChart#removeLegend()": 4.90566037735849,
        "org.jfree.chart$JFreeChart#removeProgressListener(org.jfree.chart.event.ChartProgressListener)": 0.9811320754716981,
        "org.jfree.chart$JFreeChart#removeSubtitle(org.jfree.chart.title.Title)": 4.90566037735849,
        "org.jfree.chart$JFreeChart#setAntiAlias(boolean)": 0.0,
        "org.jfree.chart$JFreeChart#setBackgroundImage(java.awt.Image)": 0.9811320754716981,
        "org.jfree.chart$JFreeChart#setBackgroundImageAlignment(int)": 0.9811320754716981,
        "org.jfree.chart$JFreeChart#setBackgroundImageAlpha(float)": 0.9811320754716981,
        "org.jfree.chart$JFreeChart#setBackgroundPaint(java.awt.Paint)": 82.03921568627452,
        "org.jfree.chart$JFreeChart#setBorderPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$JFreeChart#setBorderStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart$JFreeChart#setBorderVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart$JFreeChart#setNotify(boolean)": 0.0,
        "org.jfree.chart$JFreeChart#setPadding(org.jfree.chart.util.RectangleInsets)": 0.9811320754716981,
        "org.jfree.chart$JFreeChart#setRenderingHints(java.awt.RenderingHints)": 0.9811320754716981,
        "org.jfree.chart$JFreeChart#setSubtitles(java.util.List)": 0.0,
        "org.jfree.chart$JFreeChart#setTextAntiAlias(boolean)": 0.0,
        "org.jfree.chart$JFreeChart#setTextAntiAlias(java.lang.Object)": 0.0,
        "org.jfree.chart$JFreeChart#setTitle(java.lang.String)": 0.9811320754716981,
        "org.jfree.chart$JFreeChart#setTitle(org.jfree.chart.title.TextTitle)": 5.886792452830188,
        "org.jfree.chart$JFreeChart#titleChanged(org.jfree.chart.event.TitleChangeEvent)": 78.11764705882354,
        "org.jfree.chart$JFreeChart#writeObject(java.io.ObjectOutputStream)": 7.849056603773585,
        "org.jfree.chart$LegendItem#<clinit>()": 78.49056603773585,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String)": 2.943396226415094,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.awt.Paint)": 4.90566037735849,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)": 77.50943396226415,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint)": 17.660377358490567,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)": 21.58490566037736,
        "org.jfree.chart$LegendItem#LegendItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Stroke,java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart$LegendItem#LegendItem(java.text.AttributedString,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart$LegendItem#characterIteratorToString(java.text.CharacterIterator)": 0.9811320754716981,
        "org.jfree.chart$LegendItem#clone()": 1.9622641509433962,
        "org.jfree.chart$LegendItem#equals(java.lang.Object)": 7.849056603773585,
        "org.jfree.chart$LegendItem#getAttributedLabel()": 0.0,
        "org.jfree.chart$LegendItem#getDataset()": 52.0,
        "org.jfree.chart$LegendItem#getDatasetIndex()": 15.69811320754717,
        "org.jfree.chart$LegendItem#getDescription()": 0.0,
        "org.jfree.chart$LegendItem#getFillPaint()": 50.0377358490566,
        "org.jfree.chart$LegendItem#getFillPaintTransformer()": 50.0377358490566,
        "org.jfree.chart$LegendItem#getLabel()": 65.73584905660377,
        "org.jfree.chart$LegendItem#getLabelFont()": 50.0377358490566,
        "org.jfree.chart$LegendItem#getLabelPaint()": 50.0377358490566,
        "org.jfree.chart$LegendItem#getLine()": 50.0377358490566,
        "org.jfree.chart$LegendItem#getLinePaint()": 50.0377358490566,
        "org.jfree.chart$LegendItem#getLineStroke()": 50.0377358490566,
        "org.jfree.chart$LegendItem#getOutlinePaint()": 50.0377358490566,
        "org.jfree.chart$LegendItem#getOutlineStroke()": 50.0377358490566,
        "org.jfree.chart$LegendItem#getSeriesIndex()": 15.69811320754717,
        "org.jfree.chart$LegendItem#getSeriesKey()": 51.0188679245283,
        "org.jfree.chart$LegendItem#getShape()": 51.0188679245283,
        "org.jfree.chart$LegendItem#getToolTipText()": 50.0377358490566,
        "org.jfree.chart$LegendItem#getURLText()": 50.0377358490566,
        "org.jfree.chart$LegendItem#isLineVisible()": 50.0377358490566,
        "org.jfree.chart$LegendItem#isShapeFilled()": 50.0377358490566,
        "org.jfree.chart$LegendItem#isShapeOutlineVisible()": 50.0377358490566,
        "org.jfree.chart$LegendItem#isShapeVisible()": 50.0377358490566,
        "org.jfree.chart$LegendItem#readObject(java.io.ObjectInputStream)": 2.943396226415094,
        "org.jfree.chart$LegendItem#setDataset(org.jfree.data.general.Dataset)": 69.66037735849056,
        "org.jfree.chart$LegendItem#setDatasetIndex(int)": 64.75471698113208,
        "org.jfree.chart$LegendItem#setDescription(java.lang.String)": 0.0,
        "org.jfree.chart$LegendItem#setFillPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$LegendItem#setFillPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)": 20.60377358490566,
        "org.jfree.chart$LegendItem#setLabelFont(java.awt.Font)": 65.73584905660377,
        "org.jfree.chart$LegendItem#setLabelPaint(java.awt.Paint)": 1.9622641509433962,
        "org.jfree.chart$LegendItem#setLine(java.awt.Shape)": 0.0,
        "org.jfree.chart$LegendItem#setLinePaint(java.awt.Paint)": 1.9622641509433962,
        "org.jfree.chart$LegendItem#setLineVisible(boolean)": 0.0,
        "org.jfree.chart$LegendItem#setOutlinePaint(java.awt.Paint)": 3.9245283018867925,
        "org.jfree.chart$LegendItem#setOutlineStroke(java.awt.Stroke)": 1.9622641509433962,
        "org.jfree.chart$LegendItem#setSeriesIndex(int)": 68.67924528301887,
        "org.jfree.chart$LegendItem#setSeriesKey(java.lang.Comparable)": 68.67924528301887,
        "org.jfree.chart$LegendItem#setShape(java.awt.Shape)": 0.0,
        "org.jfree.chart$LegendItem#setShapeVisible(boolean)": 0.0,
        "org.jfree.chart$LegendItem#setToolTipText(java.lang.String)": 1.9622641509433962,
        "org.jfree.chart$LegendItem#setURLText(java.lang.String)": 1.9622641509433962,
        "org.jfree.chart$LegendItem#writeObject(java.io.ObjectOutputStream)": 2.943396226415094,
        "org.jfree.chart$LegendItemCollection#LegendItemCollection()": 70.64150943396227,
        "org.jfree.chart$LegendItemCollection#add(org.jfree.chart.LegendItem)": 57.886792452830186,
        "org.jfree.chart$LegendItemCollection#addAll(org.jfree.chart.LegendItemCollection)": 3.9245283018867925,
        "org.jfree.chart$LegendItemCollection#clone()": 2.943396226415094,
        "org.jfree.chart$LegendItemCollection#equals(java.lang.Object)": 6.867924528301887,
        "org.jfree.chart$LegendItemCollection#get(int)": 51.0188679245283,
        "org.jfree.chart$LegendItemCollection#getItemCount()": 63.77358490566038,
        "org.jfree.chart$LegendItemCollection#iterator()": 0.0,
        "org.jfree.chart$StandardChartTheme#StandardChartTheme(java.lang.String)": 93.44281524926687,
        "org.jfree.chart$StandardChartTheme#apply(org.jfree.chart.JFreeChart)": 78.11764705882354,
        "org.jfree.chart$StandardChartTheme#applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)": 47.46153846153847,
        "org.jfree.chart$StandardChartTheme#applyToBlock(org.jfree.chart.block.Block)": 0.0,
        "org.jfree.chart$StandardChartTheme#applyToBlockContainer(org.jfree.chart.block.BlockContainer)": 0.0,
        "org.jfree.chart$StandardChartTheme#applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)": 50.0377358490566,
        "org.jfree.chart$StandardChartTheme#applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)": 50.0377358490566,
        "org.jfree.chart$StandardChartTheme#applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)": 50.0377358490566,
        "org.jfree.chart$StandardChartTheme#applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)": 0.0,
        "org.jfree.chart$StandardChartTheme#applyToMeterPlot(org.jfree.chart.plot.MeterPlot)": 0.0,
        "org.jfree.chart$StandardChartTheme#applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)": 0.0,
        "org.jfree.chart$StandardChartTheme#applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)": 0.0,
        "org.jfree.chart$StandardChartTheme#applyToPiePlot(org.jfree.chart.plot.PiePlot)": -14.326923076923077,
        "org.jfree.chart$StandardChartTheme#applyToPlot(org.jfree.chart.plot.Plot)": 78.11764705882354,
        "org.jfree.chart$StandardChartTheme#applyToPolarPlot(org.jfree.chart.plot.PolarPlot)": 0.0,
        "org.jfree.chart$StandardChartTheme#applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)": 0.0,
        "org.jfree.chart$StandardChartTheme#applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)": 0.0,
        "org.jfree.chart$StandardChartTheme#applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)": 0.0,
        "org.jfree.chart$StandardChartTheme#applyToTitle(org.jfree.chart.title.Title)": 54.58823529411765,
        "org.jfree.chart$StandardChartTheme#applyToValueAxis(org.jfree.chart.axis.ValueAxis)": 47.46153846153847,
        "org.jfree.chart$StandardChartTheme#applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)": 0.0,
        "org.jfree.chart$StandardChartTheme#applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)": -2.5576923076923066,
        "org.jfree.chart$StandardChartTheme#applyToXYPlot(org.jfree.chart.plot.XYPlot)": -2.5576923076923066,
        "org.jfree.chart$StandardChartTheme#clone()": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#createDarknessTheme()": 0.0,
        "org.jfree.chart$StandardChartTheme#createJFreeTheme()": 0.0,
        "org.jfree.chart$StandardChartTheme#createLegacyTheme()": 0.0,
        "org.jfree.chart$StandardChartTheme#equals(java.lang.Object)": 2.943396226415094,
        "org.jfree.chart$StandardChartTheme#getAxisLabelPaint()": 0.0,
        "org.jfree.chart$StandardChartTheme#getAxisOffset()": 0.0,
        "org.jfree.chart$StandardChartTheme#getBarPainter()": 0.0,
        "org.jfree.chart$StandardChartTheme#getBaselinePaint()": 0.0,
        "org.jfree.chart$StandardChartTheme#getChartBackgroundPaint()": 0.0,
        "org.jfree.chart$StandardChartTheme#getCrosshairPaint()": 0.0,
        "org.jfree.chart$StandardChartTheme#getDomainGridlinePaint()": 0.0,
        "org.jfree.chart$StandardChartTheme#getDrawingSupplier()": 78.11764705882354,
        "org.jfree.chart$StandardChartTheme#getErrorIndicatorPaint()": 0.0,
        "org.jfree.chart$StandardChartTheme#getExtraLargeFont()": 0.0,
        "org.jfree.chart$StandardChartTheme#getGridBandAlternatePaint()": 0.0,
        "org.jfree.chart$StandardChartTheme#getGridBandPaint()": 0.0,
        "org.jfree.chart$StandardChartTheme#getItemLabelPaint()": 0.0,
        "org.jfree.chart$StandardChartTheme#getLabelLinkPaint()": 0.0,
        "org.jfree.chart$StandardChartTheme#getLabelLinkStyle()": 0.0,
        "org.jfree.chart$StandardChartTheme#getLargeFont()": 0.0,
        "org.jfree.chart$StandardChartTheme#getLegendBackgroundPaint()": 0.0,
        "org.jfree.chart$StandardChartTheme#getLegendItemPaint()": 0.0,
        "org.jfree.chart$StandardChartTheme#getName()": 0.0,
        "org.jfree.chart$StandardChartTheme#getPlotBackgroundPaint()": 0.0,
        "org.jfree.chart$StandardChartTheme#getPlotOutlinePaint()": 0.0,
        "org.jfree.chart$StandardChartTheme#getRangeGridlinePaint()": 0.0,
        "org.jfree.chart$StandardChartTheme#getRegularFont()": 0.0,
        "org.jfree.chart$StandardChartTheme#getShadowPaint()": 0.0,
        "org.jfree.chart$StandardChartTheme#getSmallFont()": 0.0,
        "org.jfree.chart$StandardChartTheme#getSubtitlePaint()": 0.0,
        "org.jfree.chart$StandardChartTheme#getThermometerPaint()": 0.0,
        "org.jfree.chart$StandardChartTheme#getTickLabelPaint()": 0.0,
        "org.jfree.chart$StandardChartTheme#getTitlePaint()": 0.0,
        "org.jfree.chart$StandardChartTheme#getWallPaint()": 0.0,
        "org.jfree.chart$StandardChartTheme#getXYBarPainter()": 0.0,
        "org.jfree.chart$StandardChartTheme#isShadowVisible()": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#readObject(java.io.ObjectInputStream)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setAxisLabelPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setAxisOffset(org.jfree.chart.util.RectangleInsets)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setBarPainter(org.jfree.chart.renderer.category.BarPainter)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setBaselinePaint(java.awt.Paint)": 0.0,
        "org.jfree.chart$StandardChartTheme#setChartBackgroundPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setCrosshairPaint(java.awt.Paint)": 0.0,
        "org.jfree.chart$StandardChartTheme#setDomainGridlinePaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setErrorIndicatorPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setExtraLargeFont(java.awt.Font)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setGridBandAlternatePaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setGridBandPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setItemLabelPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setLabelLinkPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setLabelLinkStyle(org.jfree.chart.plot.PieLabelLinkStyle)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setLargeFont(java.awt.Font)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setLegendBackgroundPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setLegendItemPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setPlotBackgroundPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setPlotOutlinePaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setRangeGridlinePaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setRegularFont(java.awt.Font)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setShadowPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setShadowVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setSmallFont(java.awt.Font)": 0.0,
        "org.jfree.chart$StandardChartTheme#setSubtitlePaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setThermometerPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setTickLabelPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setTitlePaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setWallPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#setXYBarPainter(org.jfree.chart.renderer.xy.XYBarPainter)": 0.9811320754716981,
        "org.jfree.chart$StandardChartTheme#writeObject(java.io.ObjectOutputStream)": 0.9811320754716981,
        "org.jfree.chart.axis$Axis#<clinit>()": 274.4105571847507,
        "org.jfree.chart.axis$Axis#Axis(java.lang.String)": 253.12023460410558,
        "org.jfree.chart.axis$Axis#addChangeListener(org.jfree.chart.event.AxisChangeListener)": 152.40384615384616,
        "org.jfree.chart.axis$Axis#clone()": 24.528301886792452,
        "org.jfree.chart.axis$Axis#createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 54.943396226415096,
        "org.jfree.chart.axis$Axis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 38.264150943396224,
        "org.jfree.chart.axis$Axis#drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)": 57.886792452830186,
        "org.jfree.chart.axis$Axis#equals(java.lang.Object)": 89.28301886792453,
        "org.jfree.chart.axis$Axis#fireChangeEvent()": 56.28846153846153,
        "org.jfree.chart.axis$Axis#getAxisLinePaint()": 56.905660377358494,
        "org.jfree.chart.axis$Axis#getAxisLineStroke()": 56.905660377358494,
        "org.jfree.chart.axis$Axis#getFixedDimension()": 57.886792452830186,
        "org.jfree.chart.axis$Axis#getLabel()": 66.71698113207547,
        "org.jfree.chart.axis$Axis#getLabelAngle()": 57.886792452830186,
        "org.jfree.chart.axis$Axis#getLabelEnclosure(java.awt.Graphics2D,org.jfree.chart.util.RectangleEdge)": 57.886792452830186,
        "org.jfree.chart.axis$Axis#getLabelFont()": 57.886792452830186,
        "org.jfree.chart.axis$Axis#getLabelInsets()": 57.886792452830186,
        "org.jfree.chart.axis$Axis#getLabelPaint()": 57.886792452830186,
        "org.jfree.chart.axis$Axis#getLabelToolTip()": 0.0,
        "org.jfree.chart.axis$Axis#getLabelURL()": 0.0,
        "org.jfree.chart.axis$Axis#getMinorTickMarkInsideLength()": 0.0,
        "org.jfree.chart.axis$Axis#getMinorTickMarkOutsideLength()": 0.0,
        "org.jfree.chart.axis$Axis#getPlot()": 207.63636363636363,
        "org.jfree.chart.axis$Axis#getTickLabelFont()": 58.867924528301884,
        "org.jfree.chart.axis$Axis#getTickLabelInsets()": 57.886792452830186,
        "org.jfree.chart.axis$Axis#getTickLabelPaint()": 57.886792452830186,
        "org.jfree.chart.axis$Axis#getTickMarkInsideLength()": 57.886792452830186,
        "org.jfree.chart.axis$Axis#getTickMarkOutsideLength()": 57.886792452830186,
        "org.jfree.chart.axis$Axis#getTickMarkPaint()": 57.886792452830186,
        "org.jfree.chart.axis$Axis#getTickMarkStroke()": 57.886792452830186,
        "org.jfree.chart.axis$Axis#hasListener(java.util.EventListener)": 1.9622641509433962,
        "org.jfree.chart.axis$Axis#isAxisLineVisible()": 57.886792452830186,
        "org.jfree.chart.axis$Axis#isMinorTickMarksVisible()": 53.9622641509434,
        "org.jfree.chart.axis$Axis#isTickLabelsVisible()": 57.886792452830186,
        "org.jfree.chart.axis$Axis#isTickMarksVisible()": 58.867924528301884,
        "org.jfree.chart.axis$Axis#isVisible()": 57.886792452830186,
        "org.jfree.chart.axis$Axis#notifyListeners(org.jfree.chart.event.AxisChangeEvent)": 155.3782991202346,
        "org.jfree.chart.axis$Axis#readObject(java.io.ObjectInputStream)": 31.39622641509434,
        "org.jfree.chart.axis$Axis#removeChangeListener(org.jfree.chart.event.AxisChangeListener)": 18.641509433962263,
        "org.jfree.chart.axis$Axis#setAxisLinePaint(java.awt.Paint)": 1.9622641509433962,
        "org.jfree.chart.axis$Axis#setAxisLineStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.axis$Axis#setAxisLineVisible(boolean)": 4.90566037735849,
        "org.jfree.chart.axis$Axis#setFixedDimension(double)": 0.0,
        "org.jfree.chart.axis$Axis#setLabel(java.lang.String)": 2.943396226415094,
        "org.jfree.chart.axis$Axis#setLabelAngle(double)": 0.0,
        "org.jfree.chart.axis$Axis#setLabelFont(java.awt.Font)": 47.46153846153847,
        "org.jfree.chart.axis$Axis#setLabelInsets(org.jfree.chart.util.RectangleInsets)": 0.0,
        "org.jfree.chart.axis$Axis#setLabelInsets(org.jfree.chart.util.RectangleInsets,boolean)": 0.0,
        "org.jfree.chart.axis$Axis#setLabelPaint(java.awt.Paint)": 47.46153846153847,
        "org.jfree.chart.axis$Axis#setLabelToolTip(java.lang.String)": 0.0,
        "org.jfree.chart.axis$Axis#setLabelURL(java.lang.String)": 0.0,
        "org.jfree.chart.axis$Axis#setMinorTickMarkInsideLength(float)": 0.0,
        "org.jfree.chart.axis$Axis#setMinorTickMarkOutsideLength(float)": 0.0,
        "org.jfree.chart.axis$Axis#setMinorTickMarksVisible(boolean)": 0.0,
        "org.jfree.chart.axis$Axis#setPlot(org.jfree.chart.plot.Plot)": 173.76539589442814,
        "org.jfree.chart.axis$Axis#setTickLabelFont(java.awt.Font)": 47.46153846153847,
        "org.jfree.chart.axis$Axis#setTickLabelInsets(org.jfree.chart.util.RectangleInsets)": 0.0,
        "org.jfree.chart.axis$Axis#setTickLabelPaint(java.awt.Paint)": 47.46153846153847,
        "org.jfree.chart.axis$Axis#setTickLabelsVisible(boolean)": 0.0,
        "org.jfree.chart.axis$Axis#setTickMarkInsideLength(float)": 0.0,
        "org.jfree.chart.axis$Axis#setTickMarkOutsideLength(float)": 0.0,
        "org.jfree.chart.axis$Axis#setTickMarkPaint(java.awt.Paint)": 0.0,
        "org.jfree.chart.axis$Axis#setTickMarkStroke(java.awt.Stroke)": 0.0,
        "org.jfree.chart.axis$Axis#setTickMarksVisible(boolean)": 0.0,
        "org.jfree.chart.axis$Axis#setVisible(boolean)": 0.0,
        "org.jfree.chart.axis$Axis#writeObject(java.io.ObjectOutputStream)": 31.39622641509434,
        "org.jfree.chart.axis$AxisCollection#AxisCollection()": 54.943396226415096,
        "org.jfree.chart.axis$AxisCollection#add(org.jfree.chart.axis.Axis,org.jfree.chart.util.RectangleEdge)": 54.943396226415096,
        "org.jfree.chart.axis$AxisCollection#getAxesAtBottom()": 54.943396226415096,
        "org.jfree.chart.axis$AxisCollection#getAxesAtLeft()": 54.943396226415096,
        "org.jfree.chart.axis$AxisCollection#getAxesAtRight()": 54.943396226415096,
        "org.jfree.chart.axis$AxisCollection#getAxesAtTop()": 54.943396226415096,
        "org.jfree.chart.axis$AxisLocation#<clinit>()": 171.03846153846155,
        "org.jfree.chart.axis$AxisLocation#AxisLocation(java.lang.String)": 171.03846153846155,
        "org.jfree.chart.axis$AxisLocation#equals(java.lang.Object)": 25.50943396226415,
        "org.jfree.chart.axis$AxisLocation#getOpposite()": 0.0,
        "org.jfree.chart.axis$AxisLocation#getOpposite(org.jfree.chart.axis.AxisLocation)": 0.0,
        "org.jfree.chart.axis$AxisLocation#readResolve()": 17.660377358490567,
        "org.jfree.chart.axis$AxisLocation#toString()": 21.58490566037736,
        "org.jfree.chart.axis$AxisSpace#AxisSpace()": 62.79245283018868,
        "org.jfree.chart.axis$AxisSpace#add(double,org.jfree.chart.util.RectangleEdge)": 57.886792452830186,
        "org.jfree.chart.axis$AxisSpace#clone()": 1.9622641509433962,
        "org.jfree.chart.axis$AxisSpace#ensureAtLeast(double,org.jfree.chart.util.RectangleEdge)": 1.9622641509433962,
        "org.jfree.chart.axis$AxisSpace#ensureAtLeast(org.jfree.chart.axis.AxisSpace)": 3.9245283018867925,
        "org.jfree.chart.axis$AxisSpace#equals(java.lang.Object)": 4.90566037735849,
        "org.jfree.chart.axis$AxisSpace#expand(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.axis$AxisSpace#getBottom()": 1.9622641509433962,
        "org.jfree.chart.axis$AxisSpace#getLeft()": 0.0,
        "org.jfree.chart.axis$AxisSpace#getRight()": 0.0,
        "org.jfree.chart.axis$AxisSpace#getTop()": 1.9622641509433962,
        "org.jfree.chart.axis$AxisSpace#hashCode()": 0.9811320754716981,
        "org.jfree.chart.axis$AxisSpace#reserved(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$AxisSpace#setBottom(double)": 1.9622641509433962,
        "org.jfree.chart.axis$AxisSpace#setLeft(double)": 0.9811320754716981,
        "org.jfree.chart.axis$AxisSpace#setRight(double)": 0.9811320754716981,
        "org.jfree.chart.axis$AxisSpace#setTop(double)": 0.9811320754716981,
        "org.jfree.chart.axis$AxisSpace#shrink(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)": 57.886792452830186,
        "org.jfree.chart.axis$AxisSpace#toString()": 0.0,
        "org.jfree.chart.axis$AxisState#AxisState()": 58.867924528301884,
        "org.jfree.chart.axis$AxisState#AxisState(double)": 58.867924528301884,
        "org.jfree.chart.axis$AxisState#cursorDown(double)": 44.15094339622642,
        "org.jfree.chart.axis$AxisState#cursorLeft(double)": 55.924528301886795,
        "org.jfree.chart.axis$AxisState#cursorRight(double)": 0.0,
        "org.jfree.chart.axis$AxisState#cursorUp(double)": 13.735849056603774,
        "org.jfree.chart.axis$AxisState#getCursor()": 57.886792452830186,
        "org.jfree.chart.axis$AxisState#getMax()": 38.264150943396224,
        "org.jfree.chart.axis$AxisState#getTicks()": 55.924528301886795,
        "org.jfree.chart.axis$AxisState#moveCursor(double,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$AxisState#setCursor(double)": 0.0,
        "org.jfree.chart.axis$AxisState#setMax(double)": 38.264150943396224,
        "org.jfree.chart.axis$AxisState#setTicks(java.util.List)": 57.886792452830186,
        "org.jfree.chart.axis$CategoryAxis#CategoryAxis()": 0.9811320754716981,
        "org.jfree.chart.axis$CategoryAxis#CategoryAxis(java.lang.String)": 118.71698113207547,
        "org.jfree.chart.axis$CategoryAxis#addCategoryLabelToolTip(java.lang.Comparable,java.lang.String)": 2.943396226415094,
        "org.jfree.chart.axis$CategoryAxis#calculateCategoryGapSize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 33.35849056603774,
        "org.jfree.chart.axis$CategoryAxis#calculateCategorySize(int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 37.283018867924525,
        "org.jfree.chart.axis$CategoryAxis#calculateTextBlockHeight(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)": 20.60377358490566,
        "org.jfree.chart.axis$CategoryAxis#calculateTextBlockWidth(org.jfree.chart.text.TextBlock,org.jfree.chart.axis.CategoryLabelPosition,java.awt.Graphics2D)": 12.754716981132075,
        "org.jfree.chart.axis$CategoryAxis#clearCategoryLabelToolTips()": 0.0,
        "org.jfree.chart.axis$CategoryAxis#clone()": 8.830188679245284,
        "org.jfree.chart.axis$CategoryAxis#configure()": 101.05660377358491,
        "org.jfree.chart.axis$CategoryAxis#createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)": 33.35849056603774,
        "org.jfree.chart.axis$CategoryAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 34.339622641509436,
        "org.jfree.chart.axis$CategoryAxis#drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)": 38.264150943396224,
        "org.jfree.chart.axis$CategoryAxis#drawTickMarks(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState)": 37.283018867924525,
        "org.jfree.chart.axis$CategoryAxis#equalPaintMaps(java.util.Map,java.util.Map)": 29.433962264150942,
        "org.jfree.chart.axis$CategoryAxis#equals(java.lang.Object)": 30.41509433962264,
        "org.jfree.chart.axis$CategoryAxis#getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 33.35849056603774,
        "org.jfree.chart.axis$CategoryAxis#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.9811320754716981,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelPositionOffset()": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelPositions()": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getCategoryLabelToolTip(java.lang.Comparable)": 9.81132075471698,
        "org.jfree.chart.axis$CategoryAxis#getCategoryMargin()": 19.62264150943396,
        "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 33.35849056603774,
        "org.jfree.chart.axis$CategoryAxis#getCategoryMiddle(java.lang.Comparable,java.util.List,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 33.35849056603774,
        "org.jfree.chart.axis$CategoryAxis#getCategorySeriesMiddle(int,int,int,int,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getCategorySeriesMiddle(java.lang.Comparable,java.lang.Comparable,org.jfree.data.category.CategoryDataset,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1.9622641509433962,
        "org.jfree.chart.axis$CategoryAxis#getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 33.35849056603774,
        "org.jfree.chart.axis$CategoryAxis#getLowerMargin()": 37.283018867924525,
        "org.jfree.chart.axis$CategoryAxis#getMaximumCategoryLabelLines()": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getMaximumCategoryLabelWidthRatio()": 0.0,
        "org.jfree.chart.axis$CategoryAxis#getTickLabelFont(java.lang.Comparable)": 33.35849056603774,
        "org.jfree.chart.axis$CategoryAxis#getTickLabelPaint(java.lang.Comparable)": 33.35849056603774,
        "org.jfree.chart.axis$CategoryAxis#getUpperMargin()": 37.283018867924525,
        "org.jfree.chart.axis$CategoryAxis#hashCode()": 42.18867924528302,
        "org.jfree.chart.axis$CategoryAxis#readObject(java.io.ObjectInputStream)": 11.773584905660377,
        "org.jfree.chart.axis$CategoryAxis#readPaintMap(java.io.ObjectInputStream)": 11.773584905660377,
        "org.jfree.chart.axis$CategoryAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 38.264150943396224,
        "org.jfree.chart.axis$CategoryAxis#removeCategoryLabelToolTip(java.lang.Comparable)": 0.0,
        "org.jfree.chart.axis$CategoryAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)": 38.264150943396224,
        "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositionOffset(int)": 0.9811320754716981,
        "org.jfree.chart.axis$CategoryAxis#setCategoryLabelPositions(org.jfree.chart.axis.CategoryLabelPositions)": 0.9811320754716981,
        "org.jfree.chart.axis$CategoryAxis#setCategoryMargin(double)": 11.773584905660377,
        "org.jfree.chart.axis$CategoryAxis#setLowerMargin(double)": 0.9811320754716981,
        "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelLines(int)": 0.0,
        "org.jfree.chart.axis$CategoryAxis#setMaximumCategoryLabelWidthRatio(float)": 0.9811320754716981,
        "org.jfree.chart.axis$CategoryAxis#setTickLabelFont(java.lang.Comparable,java.awt.Font)": 2.943396226415094,
        "org.jfree.chart.axis$CategoryAxis#setTickLabelPaint(java.lang.Comparable,java.awt.Paint)": 3.9245283018867925,
        "org.jfree.chart.axis$CategoryAxis#setUpperMargin(double)": 0.9811320754716981,
        "org.jfree.chart.axis$CategoryAxis#writeObject(java.io.ObjectOutputStream)": 11.773584905660377,
        "org.jfree.chart.axis$CategoryAxis#writePaintMap(java.util.Map,java.io.ObjectOutputStream)": 11.773584905660377,
        "org.jfree.chart.axis$CategoryAxis3D#CategoryAxis3D()": 0.0,
        "org.jfree.chart.axis$CategoryAxis3D#CategoryAxis3D(java.lang.String)": 13.735849056603774,
        "org.jfree.chart.axis$CategoryAxis3D#clone()": 0.9811320754716981,
        "org.jfree.chart.axis$CategoryAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 2.943396226415094,
        "org.jfree.chart.axis$CategoryAxis3D#getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$DateAxis#<clinit>()": 22.1055900621118,
        "org.jfree.chart.axis$DateAxis#DateAxis()": 0.9811320754716981,
        "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String)": 21.127329192546586,
        "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone)": 21.127329192546586,
        "org.jfree.chart.axis$DateAxis#DateAxis(java.lang.String,java.util.TimeZone,java.util.Locale)": 22.1055900621118,
        "org.jfree.chart.axis$DateAxis#autoAdjustRange()": 22.1055900621118,
        "org.jfree.chart.axis$DateAxis#calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)": 3.9245283018867925,
        "org.jfree.chart.axis$DateAxis#calculateHighestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)": 0.0,
        "org.jfree.chart.axis$DateAxis#calculateLowestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)": 2.943396226415094,
        "org.jfree.chart.axis$DateAxis#clone()": 0.9811320754716981,
        "org.jfree.chart.axis$DateAxis#configure()": 0.5838509316770191,
        "org.jfree.chart.axis$DateAxis#correctTickDateForPosition(java.util.Date,org.jfree.chart.axis.DateTickUnit,org.jfree.chart.axis.DateTickMarkPosition)": 2.943396226415094,
        "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits()": 0.0,
        "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone)": 0.0,
        "org.jfree.chart.axis$DateAxis#createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)": 22.1055900621118,
        "org.jfree.chart.axis$DateAxis#dateToJava2D(java.util.Date,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$DateAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 1.9622641509433962,
        "org.jfree.chart.axis$DateAxis#equals(java.lang.Object)": 5.886792452830188,
        "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)": 0.0,
        "org.jfree.chart.axis$DateAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)": 1.9622641509433962,
        "org.jfree.chart.axis$DateAxis#getDateFormatOverride()": 2.943396226415094,
        "org.jfree.chart.axis$DateAxis#getMaximumDate()": 4.90566037735849,
        "org.jfree.chart.axis$DateAxis#getMinimumDate()": 4.90566037735849,
        "org.jfree.chart.axis$DateAxis#getTickMarkPosition()": 0.0,
        "org.jfree.chart.axis$DateAxis#getTickUnit()": 2.943396226415094,
        "org.jfree.chart.axis$DateAxis#getTimeZone()": 0.0,
        "org.jfree.chart.axis$DateAxis#getTimeline()": 0.0,
        "org.jfree.chart.axis$DateAxis#hashCode()": 2.943396226415094,
        "org.jfree.chart.axis$DateAxis#isHiddenValue(long)": 2.943396226415094,
        "org.jfree.chart.axis$DateAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.9811320754716981,
        "org.jfree.chart.axis$DateAxis#nextStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)": 2.943396226415094,
        "org.jfree.chart.axis$DateAxis#previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)": 14.716981132075471,
        "org.jfree.chart.axis$DateAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 2.943396226415094,
        "org.jfree.chart.axis$DateAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 2.943396226415094,
        "org.jfree.chart.axis$DateAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.9811320754716981,
        "org.jfree.chart.axis$DateAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1.9622641509433962,
        "org.jfree.chart.axis$DateAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1.9622641509433962,
        "org.jfree.chart.axis$DateAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$DateAxis#setDateFormatOverride(java.text.DateFormat)": 0.9811320754716981,
        "org.jfree.chart.axis$DateAxis#setMaximumDate(java.util.Date)": 1.9622641509433962,
        "org.jfree.chart.axis$DateAxis#setMinimumDate(java.util.Date)": 1.9622641509433962,
        "org.jfree.chart.axis$DateAxis#setRange(double,double)": 0.9811320754716981,
        "org.jfree.chart.axis$DateAxis#setRange(java.util.Date,java.util.Date)": 14.716981132075471,
        "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range)": 15.69811320754717,
        "org.jfree.chart.axis$DateAxis#setRange(org.jfree.data.Range,boolean,boolean)": 22.1055900621118,
        "org.jfree.chart.axis$DateAxis#setTickMarkPosition(org.jfree.chart.axis.DateTickMarkPosition)": 13.735849056603774,
        "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit)": 13.735849056603774,
        "org.jfree.chart.axis$DateAxis#setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)": 22.1055900621118,
        "org.jfree.chart.axis$DateAxis#setTimeZone(java.util.TimeZone)": 0.0,
        "org.jfree.chart.axis$DateAxis#setTimeline(org.jfree.chart.axis.Timeline)": 0.9811320754716981,
        "org.jfree.chart.axis$DateAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 1.9622641509433962,
        "org.jfree.chart.axis$DateAxis#zoomRange(double,double)": 0.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#DateAxis$DefaultTimeline()": 22.1055900621118,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainRange(java.util.Date,java.util.Date)": 0.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainRange(long,long)": 0.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainValue(java.util.Date)": 2.943396226415094,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#containsDomainValue(long)": 0.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#equals(java.lang.Object)": 1.9622641509433962,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#toMillisecond(long)": 6.867924528301887,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#toTimelineValue(java.util.Date)": 0.0,
        "org.jfree.chart.axis$DateAxis$DefaultTimeline#toTimelineValue(long)": 6.867924528301887,
        "org.jfree.chart.axis$DateTickMarkPosition#<clinit>()": 25.040372670807454,
        "org.jfree.chart.axis$DateTickMarkPosition#DateTickMarkPosition(java.lang.String)": 25.040372670807454,
        "org.jfree.chart.axis$DateTickMarkPosition#equals(java.lang.Object)": 5.886792452830188,
        "org.jfree.chart.axis$DateTickMarkPosition#readResolve()": 2.943396226415094,
        "org.jfree.chart.axis$DateTickMarkPosition#toString()": 4.90566037735849,
        "org.jfree.chart.axis$DateTickUnit#DateTickUnit(org.jfree.chart.axis.DateTickUnitType,int)": 15.69811320754717,
        "org.jfree.chart.axis$DateTickUnit#DateTickUnit(org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)": 25.040372670807454,
        "org.jfree.chart.axis$DateTickUnit#DateTickUnit(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)": 25.040372670807454,
        "org.jfree.chart.axis$DateTickUnit#addToDate(java.util.Date,java.util.TimeZone)": 14.716981132075471,
        "org.jfree.chart.axis$DateTickUnit#dateToString(java.util.Date)": 2.943396226415094,
        "org.jfree.chart.axis$DateTickUnit#equals(java.lang.Object)": 7.849056603773585,
        "org.jfree.chart.axis$DateTickUnit#getCalendarField()": 14.716981132075471,
        "org.jfree.chart.axis$DateTickUnit#getMillisecondCount(org.jfree.chart.axis.DateTickUnitType,int)": 25.040372670807454,
        "org.jfree.chart.axis$DateTickUnit#getMultiple()": 14.716981132075471,
        "org.jfree.chart.axis$DateTickUnit#getRollMultiple()": 0.0,
        "org.jfree.chart.axis$DateTickUnit#getRollUnitType()": 0.0,
        "org.jfree.chart.axis$DateTickUnit#getUnitType()": 14.716981132075471,
        "org.jfree.chart.axis$DateTickUnit#hashCode()": 0.9811320754716981,
        "org.jfree.chart.axis$DateTickUnit#notNull(java.text.DateFormat)": 0.0,
        "org.jfree.chart.axis$DateTickUnit#rollDate(java.util.Date)": 0.0,
        "org.jfree.chart.axis$DateTickUnit#rollDate(java.util.Date,java.util.TimeZone)": 0.0,
        "org.jfree.chart.axis$DateTickUnit#toString()": 0.0,
        "org.jfree.chart.axis$DateTickUnit#valueToString(double)": 0.0,
        "org.jfree.chart.axis$DateTickUnitType#<clinit>()": 25.040372670807454,
        "org.jfree.chart.axis$DateTickUnitType#DateTickUnitType(java.lang.String,int)": 25.040372670807454,
        "org.jfree.chart.axis$DateTickUnitType#equals(java.lang.Object)": 25.040372670807454,
        "org.jfree.chart.axis$DateTickUnitType#getCalendarField()": 14.716981132075471,
        "org.jfree.chart.axis$DateTickUnitType#readResolve()": 2.943396226415094,
        "org.jfree.chart.axis$DateTickUnitType#toString()": 25.040372670807454,
        "org.jfree.chart.axis$LogAxis#LogAxis()": 0.9811320754716981,
        "org.jfree.chart.axis$LogAxis#LogAxis(java.lang.String)": 8.830188679245284,
        "org.jfree.chart.axis$LogAxis#autoAdjustRange()": 1.9622641509433962,
        "org.jfree.chart.axis$LogAxis#calculateLog(double)": 2.943396226415094,
        "org.jfree.chart.axis$LogAxis#calculateValue(double)": 2.943396226415094,
        "org.jfree.chart.axis$LogAxis#configure()": 1.9622641509433962,
        "org.jfree.chart.axis$LogAxis#createLogTickUnits(java.util.Locale)": 8.830188679245284,
        "org.jfree.chart.axis$LogAxis#createTickLabel(double)": 0.0,
        "org.jfree.chart.axis$LogAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.axis$LogAxis#equals(java.lang.Object)": 3.9245283018867925,
        "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)": 0.0,
        "org.jfree.chart.axis$LogAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)": 0.0,
        "org.jfree.chart.axis$LogAxis#exponentLengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$LogAxis#getBase()": 0.0,
        "org.jfree.chart.axis$LogAxis#getNumberFormatOverride()": 0.0,
        "org.jfree.chart.axis$LogAxis#getSmallestValue()": 0.0,
        "org.jfree.chart.axis$LogAxis#getTickUnit()": 0.0,
        "org.jfree.chart.axis$LogAxis#hashCode()": 0.9811320754716981,
        "org.jfree.chart.axis$LogAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.9811320754716981,
        "org.jfree.chart.axis$LogAxis#pan(double)": 0.0,
        "org.jfree.chart.axis$LogAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$LogAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$LogAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$LogAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$LogAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$LogAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$LogAxis#setBase(double)": 0.9811320754716981,
        "org.jfree.chart.axis$LogAxis#setNumberFormatOverride(java.text.NumberFormat)": 0.0,
        "org.jfree.chart.axis$LogAxis#setSmallestValue(double)": 0.9811320754716981,
        "org.jfree.chart.axis$LogAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit)": 0.0,
        "org.jfree.chart.axis$LogAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)": 0.0,
        "org.jfree.chart.axis$LogAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$LogAxis#zoomRange(double,double)": 0.0,
        "org.jfree.chart.axis$MarkerAxisBand#MarkerAxisBand(org.jfree.chart.axis.NumberAxis,double,double,double,double,java.awt.Font)": 2.943396226415094,
        "org.jfree.chart.axis$MarkerAxisBand#addMarker(org.jfree.chart.plot.IntervalMarker)": 0.0,
        "org.jfree.chart.axis$MarkerAxisBand#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double)": 0.0,
        "org.jfree.chart.axis$MarkerAxisBand#drawStringInRect(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.Font,java.lang.String)": 0.0,
        "org.jfree.chart.axis$MarkerAxisBand#equals(java.lang.Object)": 2.943396226415094,
        "org.jfree.chart.axis$MarkerAxisBand#getHeight(java.awt.Graphics2D)": 0.0,
        "org.jfree.chart.axis$MarkerAxisBand#hashCode()": 0.9811320754716981,
        "org.jfree.chart.axis$NumberAxis#<clinit>()": 221.18475073313783,
        "org.jfree.chart.axis$NumberAxis#NumberAxis()": 3.9245283018867925,
        "org.jfree.chart.axis$NumberAxis#NumberAxis(java.lang.String)": 195.0557184750733,
        "org.jfree.chart.axis$NumberAxis#autoAdjustRange()": 173.09752321981426,
        "org.jfree.chart.axis$NumberAxis#calculateHighestVisibleTickValue()": 0.0,
        "org.jfree.chart.axis$NumberAxis#calculateLowestVisibleTickValue()": 55.924528301886795,
        "org.jfree.chart.axis$NumberAxis#calculateVisibleTickCount()": 55.924528301886795,
        "org.jfree.chart.axis$NumberAxis#clone()": 14.716981132075471,
        "org.jfree.chart.axis$NumberAxis#configure()": 167.39473684210526,
        "org.jfree.chart.axis$NumberAxis#createIntegerTickUnits()": 0.7599999999999998,
        "org.jfree.chart.axis$NumberAxis#createIntegerTickUnits(java.util.Locale)": 0.0,
        "org.jfree.chart.axis$NumberAxis#createStandardTickUnits()": 195.0557184750733,
        "org.jfree.chart.axis$NumberAxis#createStandardTickUnits(java.util.Locale)": 0.0,
        "org.jfree.chart.axis$NumberAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 52.0,
        "org.jfree.chart.axis$NumberAxis#equals(java.lang.Object)": 60.83018867924528,
        "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelHeight(java.awt.Graphics2D)": 44.15094339622642,
        "org.jfree.chart.axis$NumberAxis#estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)": 31.39622641509434,
        "org.jfree.chart.axis$NumberAxis#getAutoRangeIncludesZero()": 140.6346153846154,
        "org.jfree.chart.axis$NumberAxis#getAutoRangeStickyZero()": 140.6346153846154,
        "org.jfree.chart.axis$NumberAxis#getMarkerBand()": 0.0,
        "org.jfree.chart.axis$NumberAxis#getNumberFormatOverride()": 55.924528301886795,
        "org.jfree.chart.axis$NumberAxis#getRangeType()": 0.0,
        "org.jfree.chart.axis$NumberAxis#getTickUnit()": 55.924528301886795,
        "org.jfree.chart.axis$NumberAxis#hashCode()": 56.905660377358494,
        "org.jfree.chart.axis$NumberAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.9811320754716981,
        "org.jfree.chart.axis$NumberAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 55.924528301886795,
        "org.jfree.chart.axis$NumberAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 31.39622641509434,
        "org.jfree.chart.axis$NumberAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 44.15094339622642,
        "org.jfree.chart.axis$NumberAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 55.924528301886795,
        "org.jfree.chart.axis$NumberAxis#selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 31.39622641509434,
        "org.jfree.chart.axis$NumberAxis#selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 44.15094339622642,
        "org.jfree.chart.axis$NumberAxis#setAutoRangeIncludesZero(boolean)": 39.156346749226,
        "org.jfree.chart.axis$NumberAxis#setAutoRangeStickyZero(boolean)": 3.9245283018867925,
        "org.jfree.chart.axis$NumberAxis#setMarkerBand(org.jfree.chart.axis.MarkerAxisBand)": 0.0,
        "org.jfree.chart.axis$NumberAxis#setNumberFormatOverride(java.text.NumberFormat)": 0.9811320754716981,
        "org.jfree.chart.axis$NumberAxis#setRangeType(org.jfree.data.RangeType)": 0.9811320754716981,
        "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit)": 0.9811320754716981,
        "org.jfree.chart.axis$NumberAxis#setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)": 56.905660377358494,
        "org.jfree.chart.axis$NumberAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 55.924528301886795,
        "org.jfree.chart.axis$NumberAxis3D#NumberAxis3D()": 0.0,
        "org.jfree.chart.axis$NumberAxis3D#NumberAxis3D(java.lang.String)": 12.754716981132075,
        "org.jfree.chart.axis$NumberAxis3D#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 2.943396226415094,
        "org.jfree.chart.axis$NumberTick#NumberTick(java.lang.Number,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)": 55.924528301886795,
        "org.jfree.chart.axis$NumberTick#NumberTick(org.jfree.chart.axis.TickType,double,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)": 54.943396226415096,
        "org.jfree.chart.axis$NumberTick#getNumber()": 0.0,
        "org.jfree.chart.axis$NumberTickUnit#NumberTickUnit(double)": 3.9245283018867925,
        "org.jfree.chart.axis$NumberTickUnit#NumberTickUnit(double,java.text.NumberFormat)": 232.79765395894427,
        "org.jfree.chart.axis$NumberTickUnit#NumberTickUnit(double,java.text.NumberFormat,int)": 204.733137829912,
        "org.jfree.chart.axis$NumberTickUnit#equals(java.lang.Object)": 52.0,
        "org.jfree.chart.axis$NumberTickUnit#hashCode()": 1.9622641509433962,
        "org.jfree.chart.axis$NumberTickUnit#toString()": 0.0,
        "org.jfree.chart.axis$NumberTickUnit#valueToString(double)": 55.924528301886795,
        "org.jfree.chart.axis$PeriodAxis#PeriodAxis(java.lang.String)": 4.90566037735849,
        "org.jfree.chart.axis$PeriodAxis#PeriodAxis(java.lang.String,org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)": 4.90566037735849,
        "org.jfree.chart.axis$PeriodAxis#PeriodAxis(java.lang.String,org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod,java.util.TimeZone,java.util.Locale)": 5.886792452830188,
        "org.jfree.chart.axis$PeriodAxis#autoAdjustRange()": 0.0,
        "org.jfree.chart.axis$PeriodAxis#clone()": 0.9811320754716981,
        "org.jfree.chart.axis$PeriodAxis#configure()": 0.0,
        "org.jfree.chart.axis$PeriodAxis#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone,java.util.Locale)": 0.9811320754716981,
        "org.jfree.chart.axis$PeriodAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.axis$PeriodAxis#drawTickLabels(int,java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$PeriodAxis#drawTickMarks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$PeriodAxis#drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$PeriodAxis#drawTickMarksVertical(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$PeriodAxis#equals(java.lang.Object)": 4.90566037735849,
        "org.jfree.chart.axis$PeriodAxis#getAutoRangeTimePeriodClass()": 0.0,
        "org.jfree.chart.axis$PeriodAxis#getFirst()": 0.0,
        "org.jfree.chart.axis$PeriodAxis#getLabelInfo()": 0.0,
        "org.jfree.chart.axis$PeriodAxis#getLast()": 0.0,
        "org.jfree.chart.axis$PeriodAxis#getLocale()": 0.0,
        "org.jfree.chart.axis$PeriodAxis#getMajorTickTimePeriodClass()": 0.0,
        "org.jfree.chart.axis$PeriodAxis#getMinorTickMarkInsideLength()": 0.0,
        "org.jfree.chart.axis$PeriodAxis#getMinorTickMarkOutsideLength()": 0.0,
        "org.jfree.chart.axis$PeriodAxis#getMinorTickMarkPaint()": 0.0,
        "org.jfree.chart.axis$PeriodAxis#getMinorTickMarkStroke()": 0.0,
        "org.jfree.chart.axis$PeriodAxis#getMinorTickTimePeriodClass()": 0.0,
        "org.jfree.chart.axis$PeriodAxis#getRange()": 0.0,
        "org.jfree.chart.axis$PeriodAxis#getTimeZone()": 0.0,
        "org.jfree.chart.axis$PeriodAxis#hashCode()": 0.9811320754716981,
        "org.jfree.chart.axis$PeriodAxis#isMinorTickMarksVisible()": 4.90566037735849,
        "org.jfree.chart.axis$PeriodAxis#java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$PeriodAxis#readObject(java.io.ObjectInputStream)": 0.9811320754716981,
        "org.jfree.chart.axis$PeriodAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$PeriodAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)": 0.0,
        "org.jfree.chart.axis$PeriodAxis#setAutoRangeTimePeriodClass(java.lang.Class)": 1.9622641509433962,
        "org.jfree.chart.axis$PeriodAxis#setFirst(org.jfree.data.time.RegularTimePeriod)": 1.9622641509433962,
        "org.jfree.chart.axis$PeriodAxis#setLabelInfo(org.jfree.chart.axis.PeriodAxisLabelInfo[])": 1.9622641509433962,
        "org.jfree.chart.axis$PeriodAxis#setLast(org.jfree.data.time.RegularTimePeriod)": 1.9622641509433962,
        "org.jfree.chart.axis$PeriodAxis#setMajorTickTimePeriodClass(java.lang.Class)": 0.9811320754716981,
        "org.jfree.chart.axis$PeriodAxis#setMinorTickMarkInsideLength(float)": 0.0,
        "org.jfree.chart.axis$PeriodAxis#setMinorTickMarkOutsideLength(float)": 0.0,
        "org.jfree.chart.axis$PeriodAxis#setMinorTickMarkPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart.axis$PeriodAxis#setMinorTickMarkStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.axis$PeriodAxis#setMinorTickMarksVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.axis$PeriodAxis#setMinorTickTimePeriodClass(java.lang.Class)": 0.9811320754716981,
        "org.jfree.chart.axis$PeriodAxis#setRange(org.jfree.data.Range,boolean,boolean)": 0.9811320754716981,
        "org.jfree.chart.axis$PeriodAxis#setTimeZone(java.util.TimeZone)": 1.9622641509433962,
        "org.jfree.chart.axis$PeriodAxis#valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$PeriodAxis#writeObject(java.io.ObjectOutputStream)": 0.9811320754716981,
        "org.jfree.chart.axis$SegmentedTimeline#<clinit>()": 39.24528301886792,
        "org.jfree.chart.axis$SegmentedTimeline#SegmentedTimeline(long,int,int)": 39.24528301886792,
        "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineException(java.util.Date)": 0.0,
        "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineException(long)": 1.9622641509433962,
        "org.jfree.chart.axis$SegmentedTimeline#addBaseTimelineExclusions(long,long)": 9.81132075471698,
        "org.jfree.chart.axis$SegmentedTimeline#addException(java.util.Date)": 0.9811320754716981,
        "org.jfree.chart.axis$SegmentedTimeline#addException(long)": 8.830188679245284,
        "org.jfree.chart.axis$SegmentedTimeline#addException(long,long)": 1.9622641509433962,
        "org.jfree.chart.axis$SegmentedTimeline#addException(org.jfree.chart.axis.SegmentedTimeline$Segment)": 16.67924528301887,
        "org.jfree.chart.axis$SegmentedTimeline#addExceptions(java.util.List)": 0.0,
        "org.jfree.chart.axis$SegmentedTimeline#binarySearchExceptionSegments(org.jfree.chart.axis.SegmentedTimeline$Segment)": 21.58490566037736,
        "org.jfree.chart.axis$SegmentedTimeline#clone()": 0.9811320754716981,
        "org.jfree.chart.axis$SegmentedTimeline#containsDomainRange(java.util.Date,java.util.Date)": 0.0,
        "org.jfree.chart.axis$SegmentedTimeline#containsDomainRange(long,long)": 0.0,
        "org.jfree.chart.axis$SegmentedTimeline#containsDomainValue(java.util.Date)": 0.0,
        "org.jfree.chart.axis$SegmentedTimeline#containsDomainValue(long)": 1.9622641509433962,
        "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object)": 6.867924528301887,
        "org.jfree.chart.axis$SegmentedTimeline#equals(java.lang.Object,java.lang.Object)": 6.867924528301887,
        "org.jfree.chart.axis$SegmentedTimeline#firstMondayAfter1900()": 39.24528301886792,
        "org.jfree.chart.axis$SegmentedTimeline#getAdjustForDaylightSaving()": 0.0,
        "org.jfree.chart.axis$SegmentedTimeline#getBaseTimeline()": 2.943396226415094,
        "org.jfree.chart.axis$SegmentedTimeline#getDate(long)": 0.0,
        "org.jfree.chart.axis$SegmentedTimeline#getExceptionSegmentCount(long,long)": 17.660377358490567,
        "org.jfree.chart.axis$SegmentedTimeline#getExceptionSegments()": 13.735849056603774,
        "org.jfree.chart.axis$SegmentedTimeline#getGroupSegmentCount()": 13.735849056603774,
        "org.jfree.chart.axis$SegmentedTimeline#getSegment(java.util.Date)": 0.0,
        "org.jfree.chart.axis$SegmentedTimeline#getSegment(long)": 29.433962264150942,
        "org.jfree.chart.axis$SegmentedTimeline#getSegmentSize()": 39.24528301886792,
        "org.jfree.chart.axis$SegmentedTimeline#getSegmentsExcluded()": 19.62264150943396,
        "org.jfree.chart.axis$SegmentedTimeline#getSegmentsExcludedSize()": 0.0,
        "org.jfree.chart.axis$SegmentedTimeline#getSegmentsGroupSize()": 0.0,
        "org.jfree.chart.axis$SegmentedTimeline#getSegmentsIncluded()": 13.735849056603774,
        "org.jfree.chart.axis$SegmentedTimeline#getSegmentsIncludedSize()": 0.0,
        "org.jfree.chart.axis$SegmentedTimeline#getStartTime()": 39.24528301886792,
        "org.jfree.chart.axis$SegmentedTimeline#getTime(java.util.Date)": 10.79245283018868,
        "org.jfree.chart.axis$SegmentedTimeline#getTimeFromLong(long)": 13.735849056603774,
        "org.jfree.chart.axis$SegmentedTimeline#hashCode()": 0.9811320754716981,
        "org.jfree.chart.axis$SegmentedTimeline#newFifteenMinuteTimeline()": 30.41509433962264,
        "org.jfree.chart.axis$SegmentedTimeline#newMondayThroughFridayTimeline()": 39.24528301886792,
        "org.jfree.chart.axis$SegmentedTimeline#setAdjustForDaylightSaving(boolean)": 7.849056603773585,
        "org.jfree.chart.axis$SegmentedTimeline#setBaseTimeline(org.jfree.chart.axis.SegmentedTimeline)": 38.264150943396224,
        "org.jfree.chart.axis$SegmentedTimeline#setExceptionSegments(java.util.List)": 10.79245283018868,
        "org.jfree.chart.axis$SegmentedTimeline#setStartTime(long)": 39.24528301886792,
        "org.jfree.chart.axis$SegmentedTimeline#toMillisecond(long)": 13.735849056603774,
        "org.jfree.chart.axis$SegmentedTimeline#toTimelineValue(java.util.Date)": 7.849056603773585,
        "org.jfree.chart.axis$SegmentedTimeline#toTimelineValue(long)": 13.735849056603774,
        "org.jfree.chart.axis$SegmentedTimeline$BaseTimelineSegmentRange#SegmentedTimeline$BaseTimelineSegmentRange(org.jfree.chart.axis.SegmentedTimeline,long,long)": 9.81132075471698,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#SegmentedTimeline$Segment(org.jfree.chart.axis.SegmentedTimeline)": 9.81132075471698,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#SegmentedTimeline$Segment(org.jfree.chart.axis.SegmentedTimeline,long)": 29.433962264150942,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#after(org.jfree.chart.axis.SegmentedTimeline$Segment)": 15.69811320754717,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#before(org.jfree.chart.axis.SegmentedTimeline$Segment)": 16.67924528301887,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#calculateSegmentNumber(long)": 29.433962264150942,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#compareTo(java.lang.Object)": 0.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#contained(long,long)": 0.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#contains(long)": 0.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#contains(long,long)": 16.67924528301887,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#contains(org.jfree.chart.axis.SegmentedTimeline$Segment)": 16.67924528301887,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#copy()": 7.849056603773585,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#dec()": 0.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#dec(long)": 0.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#equals(java.lang.Object)": 0.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#getDate()": 0.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#getMillisecond()": 9.81132075471698,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentCount()": 8.830188679245284,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentEnd()": 24.528301886792452,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentNumber()": 13.735849056603774,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentNumberRelativeToGroup()": 21.58490566037736,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#getSegmentStart()": 24.528301886792452,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#inExceptionSegments()": 21.58490566037736,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#inExcludeSegments()": 17.660377358490567,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#inIncludeSegments()": 21.58490566037736,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#inc()": 20.60377358490566,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#inc(long)": 20.60377358490566,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#intersect(long,long)": 8.830188679245284,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#moveIndexToEnd()": 0.0,
        "org.jfree.chart.axis$SegmentedTimeline$Segment#moveIndexToStart()": 3.9245283018867925,
        "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#SegmentedTimeline$SegmentRange(org.jfree.chart.axis.SegmentedTimeline,long,long)": 9.81132075471698,
        "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#getSegmentCount()": 4.90566037735849,
        "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inExcludeSegments()": 0.0,
        "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inIncludeSegments()": 9.81132075471698,
        "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#inc(long)": 0.0,
        "org.jfree.chart.axis$SegmentedTimeline$SegmentRange#intersect(long,long)": 9.81132075471698,
        "org.jfree.chart.axis$SymbolAxis#<clinit>()": 96.34604105571847,
        "org.jfree.chart.axis$SymbolAxis#SymbolAxis(java.lang.String,java.lang.String[])": 2.943396226415094,
        "org.jfree.chart.axis$SymbolAxis#autoAdjustRange()": 2.943396226415094,
        "org.jfree.chart.axis$SymbolAxis#draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.axis$SymbolAxis#drawGridBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,java.util.List)": 0.0,
        "org.jfree.chart.axis$SymbolAxis#drawGridBandsHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,boolean,java.util.List)": 0.0,
        "org.jfree.chart.axis$SymbolAxis#drawGridBandsVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,boolean,java.util.List)": 0.0,
        "org.jfree.chart.axis$SymbolAxis#equals(java.lang.Object)": 2.943396226415094,
        "org.jfree.chart.axis$SymbolAxis#getGridBandAlternatePaint()": 0.0,
        "org.jfree.chart.axis$SymbolAxis#getGridBandPaint()": 0.0,
        "org.jfree.chart.axis$SymbolAxis#getSymbols()": 0.0,
        "org.jfree.chart.axis$SymbolAxis#isGridBandsVisible()": 0.0,
        "org.jfree.chart.axis$SymbolAxis#readObject(java.io.ObjectInputStream)": 0.9811320754716981,
        "org.jfree.chart.axis$SymbolAxis#refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$SymbolAxis#refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$SymbolAxis#refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$SymbolAxis#selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.axis$SymbolAxis#setGridBandAlternatePaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart.axis$SymbolAxis#setGridBandPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart.axis$SymbolAxis#setGridBandsVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.axis$SymbolAxis#valueToString(double)": 0.0,
        "org.jfree.chart.axis$SymbolAxis#writeObject(java.io.ObjectOutputStream)": 0.9811320754716981,
        "org.jfree.chart.axis$Tick#Tick(java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)": 66.71698113207547,
        "org.jfree.chart.axis$Tick#clone()": 1.9622641509433962,
        "org.jfree.chart.axis$Tick#equals(java.lang.Object)": 7.849056603773585,
        "org.jfree.chart.axis$Tick#getAngle()": 56.905660377358494,
        "org.jfree.chart.axis$Tick#getRotationAnchor()": 56.905660377358494,
        "org.jfree.chart.axis$Tick#getText()": 58.867924528301884,
        "org.jfree.chart.axis$Tick#getTextAnchor()": 56.905660377358494,
        "org.jfree.chart.axis$Tick#toString()": 0.0,
        "org.jfree.chart.axis$TickType#<clinit>()": 62.79245283018868,
        "org.jfree.chart.axis$TickType#TickType(java.lang.String)": 62.79245283018868,
        "org.jfree.chart.axis$TickType#equals(java.lang.Object)": 60.83018867924528,
        "org.jfree.chart.axis$TickType#readResolve()": 0.9811320754716981,
        "org.jfree.chart.axis$TickType#toString()": 0.0,
        "org.jfree.chart.axis$TickUnit#TickUnit(double)": 257.9589442815249,
        "org.jfree.chart.axis$TickUnit#TickUnit(double,int)": 204.733137829912,
        "org.jfree.chart.axis$TickUnit#compareTo(java.lang.Object)": 231.8299120234604,
        "org.jfree.chart.axis$TickUnit#equals(java.lang.Object)": 57.886792452830186,
        "org.jfree.chart.axis$TickUnit#getMinorTickCount()": 58.867924528301884,
        "org.jfree.chart.axis$TickUnit#getSize()": 231.8299120234604,
        "org.jfree.chart.axis$TickUnit#hashCode()": 1.9622641509433962,
        "org.jfree.chart.axis$TickUnit#valueToString(double)": 0.0,
        "org.jfree.chart.axis$TickUnits#TickUnits()": 231.8299120234604,
        "org.jfree.chart.axis$TickUnits#add(org.jfree.chart.axis.TickUnit)": 231.8299120234604,
        "org.jfree.chart.axis$TickUnits#clone()": 0.9811320754716981,
        "org.jfree.chart.axis$TickUnits#equals(java.lang.Object)": 52.9811320754717,
        "org.jfree.chart.axis$TickUnits#get(int)": 0.0,
        "org.jfree.chart.axis$TickUnits#getCeilingTickUnit(double)": 57.886792452830186,
        "org.jfree.chart.axis$TickUnits#getCeilingTickUnit(org.jfree.chart.axis.TickUnit)": 57.886792452830186,
        "org.jfree.chart.axis$TickUnits#getLargerTickUnit(org.jfree.chart.axis.TickUnit)": 15.69811320754717,
        "org.jfree.chart.axis$TickUnits#size()": 0.0,
        "org.jfree.chart.axis$ValueAxis#<clinit>()": 256.02346041055716,
        "org.jfree.chart.axis$ValueAxis#ValueAxis(java.lang.String,org.jfree.chart.axis.TickUnitSource)": 234.733137829912,
        "org.jfree.chart.axis$ValueAxis#calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 56.905660377358494,
        "org.jfree.chart.axis$ValueAxis#centerRange(double)": 0.0,
        "org.jfree.chart.axis$ValueAxis#clone()": 17.660377358490567,
        "org.jfree.chart.axis$ValueAxis#drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 56.905660377358494,
        "org.jfree.chart.axis$ValueAxis#drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)": 56.905660377358494,
        "org.jfree.chart.axis$ValueAxis#equals(java.lang.Object)": 71.62264150943396,
        "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 33.35849056603774,
        "org.jfree.chart.axis$ValueAxis#findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)": 44.15094339622642,
        "org.jfree.chart.axis$ValueAxis#getAutoRangeMinimumSize()": 146.51923076923077,
        "org.jfree.chart.axis$ValueAxis#getAutoTickIndex()": 0.0,
        "org.jfree.chart.axis$ValueAxis#getDefaultAutoRange()": 31.769230769230766,
        "org.jfree.chart.axis$ValueAxis#getDownArrow()": 0.0,
        "org.jfree.chart.axis$ValueAxis#getFixedAutoRange()": 146.51923076923077,
        "org.jfree.chart.axis$ValueAxis#getLeftArrow()": 0.0,
        "org.jfree.chart.axis$ValueAxis#getLowerBound()": 36.301886792452834,
        "org.jfree.chart.axis$ValueAxis#getLowerMargin()": 146.51923076923077,
        "org.jfree.chart.axis$ValueAxis#getMinorTickCount()": 58.867924528301884,
        "org.jfree.chart.axis$ValueAxis#getRange()": 83.75,
        "org.jfree.chart.axis$ValueAxis#getRightArrow()": 0.0,
        "org.jfree.chart.axis$ValueAxis#getStandardTickUnits()": 57.886792452830186,
        "org.jfree.chart.axis$ValueAxis#getUpArrow()": 0.0,
        "org.jfree.chart.axis$ValueAxis#getUpperBound()": 36.301886792452834,
        "org.jfree.chart.axis$ValueAxis#getUpperMargin()": 146.51923076923077,
        "org.jfree.chart.axis$ValueAxis#isAutoRange()": 186.34604105571847,
        "org.jfree.chart.axis$ValueAxis#isAutoTickUnitSelection()": 58.867924528301884,
        "org.jfree.chart.axis$ValueAxis#isInverted()": 63.77358490566038,
        "org.jfree.chart.axis$ValueAxis#isNegativeArrowVisible()": 0.0,
        "org.jfree.chart.axis$ValueAxis#isPositiveArrowVisible()": 0.0,
        "org.jfree.chart.axis$ValueAxis#isVerticalTickLabels()": 58.867924528301884,
        "org.jfree.chart.axis$ValueAxis#lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 55.924528301886795,
        "org.jfree.chart.axis$ValueAxis#pan(double)": 0.0,
        "org.jfree.chart.axis$ValueAxis#readObject(java.io.ObjectInputStream)": 27.471698113207548,
        "org.jfree.chart.axis$ValueAxis#reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisSpace)": 57.886792452830186,
        "org.jfree.chart.axis$ValueAxis#resizeRange(double)": 8.830188679245284,
        "org.jfree.chart.axis$ValueAxis#resizeRange(double,double)": 8.830188679245284,
        "org.jfree.chart.axis$ValueAxis#resizeRange2(double,double)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean)": 9.81132075471698,
        "org.jfree.chart.axis$ValueAxis#setAutoRange(boolean,boolean)": 9.81132075471698,
        "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double)": 23.08385093167702,
        "org.jfree.chart.axis$ValueAxis#setAutoRangeMinimumSize(double,boolean)": 23.08385093167702,
        "org.jfree.chart.axis$ValueAxis#setAutoTickIndex(int)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean)": 0.9811320754716981,
        "org.jfree.chart.axis$ValueAxis#setAutoTickUnitSelection(boolean,boolean)": 18.641509433962263,
        "org.jfree.chart.axis$ValueAxis#setDefaultAutoRange(org.jfree.data.Range)": 9.81132075471698,
        "org.jfree.chart.axis$ValueAxis#setDownArrow(java.awt.Shape)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setFixedAutoRange(double)": 4.90566037735849,
        "org.jfree.chart.axis$ValueAxis#setInverted(boolean)": 3.9245283018867925,
        "org.jfree.chart.axis$ValueAxis#setLeftArrow(java.awt.Shape)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setLowerBound(double)": 6.867924528301887,
        "org.jfree.chart.axis$ValueAxis#setLowerMargin(double)": 2.275510204081632,
        "org.jfree.chart.axis$ValueAxis#setMinorTickCount(int)": 0.9811320754716981,
        "org.jfree.chart.axis$ValueAxis#setNegativeArrowVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.axis$ValueAxis#setPositiveArrowVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.axis$ValueAxis#setRange(double,double)": 15.69811320754717,
        "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range)": 27.471698113207548,
        "org.jfree.chart.axis$ValueAxis#setRange(org.jfree.data.Range,boolean,boolean)": 209.38333333333333,
        "org.jfree.chart.axis$ValueAxis#setRangeAboutValue(double,double)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(double,double)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setRangeWithMargins(org.jfree.data.Range,boolean,boolean)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setRightArrow(java.awt.Shape)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setStandardTickUnits(org.jfree.chart.axis.TickUnitSource)": -2.1799999999999997,
        "org.jfree.chart.axis$ValueAxis#setUpArrow(java.awt.Shape)": 0.0,
        "org.jfree.chart.axis$ValueAxis#setUpperBound(double)": 4.90566037735849,
        "org.jfree.chart.axis$ValueAxis#setUpperMargin(double)": 2.275510204081632,
        "org.jfree.chart.axis$ValueAxis#setVerticalTickLabels(boolean)": 0.9811320754716981,
        "org.jfree.chart.axis$ValueAxis#writeObject(java.io.ObjectOutputStream)": 27.471698113207548,
        "org.jfree.chart.axis$ValueAxis#zoomRange(double,double)": 0.9811320754716981,
        "org.jfree.chart.axis$ValueTick#ValueTick(double,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)": 55.924528301886795,
        "org.jfree.chart.axis$ValueTick#ValueTick(org.jfree.chart.axis.TickType,double,java.lang.String,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)": 62.79245283018868,
        "org.jfree.chart.axis$ValueTick#equals(java.lang.Object)": 3.9245283018867925,
        "org.jfree.chart.axis$ValueTick#getTickType()": 56.905660377358494,
        "org.jfree.chart.axis$ValueTick#getValue()": 56.905660377358494,
        "org.jfree.chart.block$AbstractBlock#AbstractBlock()": 210.47058823529412,
        "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D)": 1.9622641509433962,
        "org.jfree.chart.block$AbstractBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$AbstractBlock#calculateTotalHeight(double)": 75.54716981132076,
        "org.jfree.chart.block$AbstractBlock#calculateTotalWidth(double)": 75.54716981132076,
        "org.jfree.chart.block$AbstractBlock#clone()": 14.716981132075471,
        "org.jfree.chart.block$AbstractBlock#drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 62.79245283018868,
        "org.jfree.chart.block$AbstractBlock#equals(java.lang.Object)": 60.83018867924528,
        "org.jfree.chart.block$AbstractBlock#getBounds()": 51.0188679245283,
        "org.jfree.chart.block$AbstractBlock#getContentXOffset()": 0.0,
        "org.jfree.chart.block$AbstractBlock#getContentYOffset()": 0.0,
        "org.jfree.chart.block$AbstractBlock#getFrame()": 61.81132075471698,
        "org.jfree.chart.block$AbstractBlock#getHeight()": 13.735849056603774,
        "org.jfree.chart.block$AbstractBlock#getID()": 0.0,
        "org.jfree.chart.block$AbstractBlock#getMargin()": 0.0,
        "org.jfree.chart.block$AbstractBlock#getPadding()": 0.0,
        "org.jfree.chart.block$AbstractBlock#getWidth()": 13.735849056603774,
        "org.jfree.chart.block$AbstractBlock#readObject(java.io.ObjectInputStream)": 20.60377358490566,
        "org.jfree.chart.block$AbstractBlock#setBounds(java.awt.geom.Rectangle2D)": 67.69811320754717,
        "org.jfree.chart.block$AbstractBlock#setFrame(org.jfree.chart.block.BlockFrame)": 115.37254901960785,
        "org.jfree.chart.block$AbstractBlock#setHeight(double)": 31.39622641509434,
        "org.jfree.chart.block$AbstractBlock#setID(java.lang.String)": 0.9811320754716981,
        "org.jfree.chart.block$AbstractBlock#setMargin(double,double,double,double)": 0.9811320754716981,
        "org.jfree.chart.block$AbstractBlock#setMargin(org.jfree.chart.util.RectangleInsets)": 116.35294117647058,
        "org.jfree.chart.block$AbstractBlock#setPadding(double,double,double,double)": 55.924528301886795,
        "org.jfree.chart.block$AbstractBlock#setPadding(org.jfree.chart.util.RectangleInsets)": 178.11764705882354,
        "org.jfree.chart.block$AbstractBlock#setWidth(double)": 31.39622641509434,
        "org.jfree.chart.block$AbstractBlock#toContentConstraint(org.jfree.chart.block.RectangleConstraint)": 64.75471698113208,
        "org.jfree.chart.block$AbstractBlock#trimBorder(java.awt.geom.Rectangle2D)": 62.79245283018868,
        "org.jfree.chart.block$AbstractBlock#trimMargin(java.awt.geom.Rectangle2D)": 62.79245283018868,
        "org.jfree.chart.block$AbstractBlock#trimPadding(java.awt.geom.Rectangle2D)": 62.79245283018868,
        "org.jfree.chart.block$AbstractBlock#trimToContentHeight(double)": 63.77358490566038,
        "org.jfree.chart.block$AbstractBlock#trimToContentHeight(org.jfree.data.Range)": 63.77358490566038,
        "org.jfree.chart.block$AbstractBlock#trimToContentWidth(double)": 63.77358490566038,
        "org.jfree.chart.block$AbstractBlock#trimToContentWidth(org.jfree.data.Range)": 63.77358490566038,
        "org.jfree.chart.block$AbstractBlock#writeObject(java.io.ObjectOutputStream)": 20.60377358490566,
        "org.jfree.chart.block$BlockBorder#<clinit>()": 213.41176470588235,
        "org.jfree.chart.block$BlockBorder#BlockBorder()": 0.9811320754716981,
        "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double)": 0.0,
        "org.jfree.chart.block$BlockBorder#BlockBorder(double,double,double,double,java.awt.Paint)": 0.0,
        "org.jfree.chart.block$BlockBorder#BlockBorder(java.awt.Paint)": 2.943396226415094,
        "org.jfree.chart.block$BlockBorder#BlockBorder(org.jfree.chart.util.RectangleInsets,java.awt.Paint)": 213.41176470588235,
        "org.jfree.chart.block$BlockBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 62.79245283018868,
        "org.jfree.chart.block$BlockBorder#equals(java.lang.Object)": 62.79245283018868,
        "org.jfree.chart.block$BlockBorder#getInsets()": 76.52830188679245,
        "org.jfree.chart.block$BlockBorder#getPaint()": 0.0,
        "org.jfree.chart.block$BlockBorder#readObject(java.io.ObjectInputStream)": 21.58490566037736,
        "org.jfree.chart.block$BlockBorder#writeObject(java.io.ObjectOutputStream)": 21.58490566037736,
        "org.jfree.chart.block$BlockContainer#BlockContainer()": 4.90566037735849,
        "org.jfree.chart.block$BlockContainer#BlockContainer(org.jfree.chart.block.Arrangement)": 142.8235294117647,
        "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block)": 74.56603773584905,
        "org.jfree.chart.block$BlockContainer#add(org.jfree.chart.block.Block,java.lang.Object)": 74.56603773584905,
        "org.jfree.chart.block$BlockContainer#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 67.69811320754717,
        "org.jfree.chart.block$BlockContainer#clear()": 64.75471698113208,
        "org.jfree.chart.block$BlockContainer#clone()": 0.9811320754716981,
        "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.block$BlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 61.81132075471698,
        "org.jfree.chart.block$BlockContainer#equals(java.lang.Object)": 6.867924528301887,
        "org.jfree.chart.block$BlockContainer#getArrangement()": 0.0,
        "org.jfree.chart.block$BlockContainer#getBlocks()": 64.75471698113208,
        "org.jfree.chart.block$BlockContainer#isEmpty()": 61.81132075471698,
        "org.jfree.chart.block$BlockContainer#setArrangement(org.jfree.chart.block.Arrangement)": 62.79245283018868,
        "org.jfree.chart.block$BlockParams#BlockParams()": 62.79245283018868,
        "org.jfree.chart.block$BlockParams#getGenerateEntities()": 62.79245283018868,
        "org.jfree.chart.block$BlockParams#getTranslateX()": 0.0,
        "org.jfree.chart.block$BlockParams#getTranslateY()": 0.0,
        "org.jfree.chart.block$BlockParams#setGenerateEntities(boolean)": 62.79245283018868,
        "org.jfree.chart.block$BlockParams#setTranslateX(double)": 0.0,
        "org.jfree.chart.block$BlockParams#setTranslateY(double)": 0.0,
        "org.jfree.chart.block$BlockResult#BlockResult()": 61.81132075471698,
        "org.jfree.chart.block$BlockResult#getEntityCollection()": 35.320754716981135,
        "org.jfree.chart.block$BlockResult#setEntityCollection(org.jfree.chart.entity.EntityCollection)": 10.79245283018868,
        "org.jfree.chart.block$BorderArrangement#BorderArrangement()": 61.81132075471698,
        "org.jfree.chart.block$BorderArrangement#add(org.jfree.chart.block.Block,java.lang.Object)": 58.867924528301884,
        "org.jfree.chart.block$BorderArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 52.9811320754717,
        "org.jfree.chart.block$BorderArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.9811320754716981,
        "org.jfree.chart.block$BorderArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,double)": 0.9811320754716981,
        "org.jfree.chart.block$BorderArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$BorderArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)": 51.0188679245283,
        "org.jfree.chart.block$BorderArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,org.jfree.data.Range,org.jfree.data.Range,java.awt.Graphics2D)": 0.9811320754716981,
        "org.jfree.chart.block$BorderArrangement#clear()": 2.943396226415094,
        "org.jfree.chart.block$BorderArrangement#equals(java.lang.Object)": 5.886792452830188,
        "org.jfree.chart.block$CenterArrangement#CenterArrangement()": 50.0377358490566,
        "org.jfree.chart.block$CenterArrangement#add(org.jfree.chart.block.Block,java.lang.Object)": 50.0377358490566,
        "org.jfree.chart.block$CenterArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 50.0377358490566,
        "org.jfree.chart.block$CenterArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$CenterArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$CenterArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$CenterArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$CenterArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)": 50.0377358490566,
        "org.jfree.chart.block$CenterArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$CenterArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$CenterArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$CenterArrangement#clear()": 0.0,
        "org.jfree.chart.block$CenterArrangement#equals(java.lang.Object)": 0.0,
        "org.jfree.chart.block$ColumnArrangement#ColumnArrangement()": 118.31372549019608,
        "org.jfree.chart.block$ColumnArrangement#ColumnArrangement(org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,double,double)": 0.9811320754716981,
        "org.jfree.chart.block$ColumnArrangement#add(org.jfree.chart.block.Block,java.lang.Object)": 0.9811320754716981,
        "org.jfree.chart.block$ColumnArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)": 0.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$ColumnArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$ColumnArrangement#clear()": 0.0,
        "org.jfree.chart.block$ColumnArrangement#equals(java.lang.Object)": 13.735849056603774,
        "org.jfree.chart.block$FlowArrangement#FlowArrangement()": 121.25490196078431,
        "org.jfree.chart.block$FlowArrangement#FlowArrangement(org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,double,double)": 124.19607843137254,
        "org.jfree.chart.block$FlowArrangement#add(org.jfree.chart.block.Block,java.lang.Object)": 51.0188679245283,
        "org.jfree.chart.block$FlowArrangement#arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 50.0377358490566,
        "org.jfree.chart.block$FlowArrangement#arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$FlowArrangement#arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 4.90566037735849,
        "org.jfree.chart.block$FlowArrangement#arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 4.90566037735849,
        "org.jfree.chart.block$FlowArrangement#arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$FlowArrangement#arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)": 50.0377358490566,
        "org.jfree.chart.block$FlowArrangement#arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$FlowArrangement#arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.block$FlowArrangement#arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 50.0377358490566,
        "org.jfree.chart.block$FlowArrangement#clear()": 61.81132075471698,
        "org.jfree.chart.block$FlowArrangement#equals(java.lang.Object)": 16.67924528301887,
        "org.jfree.chart.block$LabelBlock#<clinit>()": 52.9811320754717,
        "org.jfree.chart.block$LabelBlock#LabelBlock(java.lang.String)": 0.0,
        "org.jfree.chart.block$LabelBlock#LabelBlock(java.lang.String,java.awt.Font)": 0.0,
        "org.jfree.chart.block$LabelBlock#LabelBlock(java.lang.String,java.awt.Font,java.awt.Paint)": 52.9811320754717,
        "org.jfree.chart.block$LabelBlock#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 50.0377358490566,
        "org.jfree.chart.block$LabelBlock#clone()": 0.9811320754716981,
        "org.jfree.chart.block$LabelBlock#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.block$LabelBlock#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 50.0377358490566,
        "org.jfree.chart.block$LabelBlock#equals(java.lang.Object)": 2.943396226415094,
        "org.jfree.chart.block$LabelBlock#getContentAlignmentPoint()": 0.0,
        "org.jfree.chart.block$LabelBlock#getFont()": 0.0,
        "org.jfree.chart.block$LabelBlock#getPaint()": 0.0,
        "org.jfree.chart.block$LabelBlock#getTextAnchor()": 0.0,
        "org.jfree.chart.block$LabelBlock#getToolTipText()": 0.0,
        "org.jfree.chart.block$LabelBlock#getURLText()": 0.0,
        "org.jfree.chart.block$LabelBlock#readObject(java.io.ObjectInputStream)": 0.9811320754716981,
        "org.jfree.chart.block$LabelBlock#setContentAlignmentPoint(org.jfree.chart.text.TextBlockAnchor)": 0.9811320754716981,
        "org.jfree.chart.block$LabelBlock#setFont(java.awt.Font)": 0.0,
        "org.jfree.chart.block$LabelBlock#setPaint(java.awt.Paint)": 0.0,
        "org.jfree.chart.block$LabelBlock#setTextAnchor(org.jfree.chart.util.RectangleAnchor)": 0.9811320754716981,
        "org.jfree.chart.block$LabelBlock#setToolTipText(java.lang.String)": 0.9811320754716981,
        "org.jfree.chart.block$LabelBlock#setURLText(java.lang.String)": 0.9811320754716981,
        "org.jfree.chart.block$LabelBlock#writeObject(java.io.ObjectOutputStream)": 0.9811320754716981,
        "org.jfree.chart.block$LengthConstraintType#<clinit>()": 82.41509433962264,
        "org.jfree.chart.block$LengthConstraintType#LengthConstraintType(java.lang.String)": 82.41509433962264,
        "org.jfree.chart.block$LengthConstraintType#equals(java.lang.Object)": 0.0,
        "org.jfree.chart.block$LengthConstraintType#hashCode()": 0.0,
        "org.jfree.chart.block$LengthConstraintType#readResolve()": 0.0,
        "org.jfree.chart.block$LengthConstraintType#toString()": 0.0,
        "org.jfree.chart.block$LineBorder#LineBorder()": 114.39215686274511,
        "org.jfree.chart.block$LineBorder#LineBorder(java.awt.Paint,java.awt.Stroke,org.jfree.chart.util.RectangleInsets)": 116.35294117647058,
        "org.jfree.chart.block$LineBorder#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 61.81132075471698,
        "org.jfree.chart.block$LineBorder#equals(java.lang.Object)": 9.81132075471698,
        "org.jfree.chart.block$LineBorder#getInsets()": 61.81132075471698,
        "org.jfree.chart.block$LineBorder#getPaint()": 50.0377358490566,
        "org.jfree.chart.block$LineBorder#getStroke()": 50.0377358490566,
        "org.jfree.chart.block$LineBorder#readObject(java.io.ObjectInputStream)": 7.849056603773585,
        "org.jfree.chart.block$LineBorder#writeObject(java.io.ObjectOutputStream)": 7.849056603773585,
        "org.jfree.chart.block$RectangleConstraint#<clinit>()": 82.41509433962264,
        "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,double)": 8.830188679245284,
        "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range)": 1.9622641509433962,
        "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)": 82.41509433962264,
        "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(org.jfree.data.Range,double)": 0.9811320754716981,
        "org.jfree.chart.block$RectangleConstraint#RectangleConstraint(org.jfree.data.Range,org.jfree.data.Range)": 2.943396226415094,
        "org.jfree.chart.block$RectangleConstraint#calculateConstrainedSize(org.jfree.chart.util.Size2D)": 13.735849056603774,
        "org.jfree.chart.block$RectangleConstraint#getHeight()": 78.49056603773585,
        "org.jfree.chart.block$RectangleConstraint#getHeightConstraintType()": 79.47169811320755,
        "org.jfree.chart.block$RectangleConstraint#getHeightRange()": 67.69811320754717,
        "org.jfree.chart.block$RectangleConstraint#getWidth()": 78.49056603773585,
        "org.jfree.chart.block$RectangleConstraint#getWidthConstraintType()": 79.47169811320755,
        "org.jfree.chart.block$RectangleConstraint#getWidthRange()": 66.71698113207547,
        "org.jfree.chart.block$RectangleConstraint#toFixedHeight(double)": 8.830188679245284,
        "org.jfree.chart.block$RectangleConstraint#toFixedWidth(double)": 13.735849056603774,
        "org.jfree.chart.block$RectangleConstraint#toRangeHeight(org.jfree.data.Range)": 0.9811320754716981,
        "org.jfree.chart.block$RectangleConstraint#toRangeWidth(org.jfree.data.Range)": 0.9811320754716981,
        "org.jfree.chart.block$RectangleConstraint#toString()": 0.0,
        "org.jfree.chart.block$RectangleConstraint#toUnconstrainedHeight()": 2.943396226415094,
        "org.jfree.chart.block$RectangleConstraint#toUnconstrainedWidth()": 1.9622641509433962,
        "org.jfree.chart.entity$AxisEntity#AxisEntity(java.awt.Shape,org.jfree.chart.axis.Axis)": 10.79245283018868,
        "org.jfree.chart.entity$AxisEntity#AxisEntity(java.awt.Shape,org.jfree.chart.axis.Axis,java.lang.String)": 10.79245283018868,
        "org.jfree.chart.entity$AxisEntity#AxisEntity(java.awt.Shape,org.jfree.chart.axis.Axis,java.lang.String,java.lang.String)": 10.79245283018868,
        "org.jfree.chart.entity$AxisEntity#clone()": 0.0,
        "org.jfree.chart.entity$AxisEntity#equals(java.lang.Object)": 0.0,
        "org.jfree.chart.entity$AxisEntity#getAxis()": 0.0,
        "org.jfree.chart.entity$AxisEntity#hashCode()": 0.0,
        "org.jfree.chart.entity$AxisEntity#readObject(java.io.ObjectInputStream)": 0.0,
        "org.jfree.chart.entity$AxisEntity#toString()": 0.0,
        "org.jfree.chart.entity$AxisEntity#writeObject(java.io.ObjectOutputStream)": 0.0,
        "org.jfree.chart.entity$AxisLabelEntity#AxisLabelEntity(org.jfree.chart.axis.Axis,java.awt.Shape,java.lang.String,java.lang.String)": 10.79245283018868,
        "org.jfree.chart.entity$AxisLabelEntity#getAxis()": 0.0,
        "org.jfree.chart.entity$AxisLabelEntity#toString()": 0.0,
        "org.jfree.chart.entity$CategoryItemEntity#CategoryItemEntity(java.awt.Shape,java.lang.String,java.lang.String,org.jfree.data.category.CategoryDataset,java.lang.Comparable,java.lang.Comparable)": 5.886792452830188,
        "org.jfree.chart.entity$CategoryItemEntity#equals(java.lang.Object)": 2.943396226415094,
        "org.jfree.chart.entity$CategoryItemEntity#getColumnKey()": 0.0,
        "org.jfree.chart.entity$CategoryItemEntity#getDataset()": 0.0,
        "org.jfree.chart.entity$CategoryItemEntity#getRowKey()": 0.0,
        "org.jfree.chart.entity$CategoryItemEntity#setColumnKey(java.lang.Comparable)": 0.9811320754716981,
        "org.jfree.chart.entity$CategoryItemEntity#setDataset(org.jfree.data.category.CategoryDataset)": 0.0,
        "org.jfree.chart.entity$CategoryItemEntity#setRowKey(java.lang.Comparable)": 0.9811320754716981,
        "org.jfree.chart.entity$CategoryItemEntity#toString()": 0.0,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape)": 14.716981132075471,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String)": 14.716981132075471,
        "org.jfree.chart.entity$ChartEntity#ChartEntity(java.awt.Shape,java.lang.String,java.lang.String)": 33.35849056603774,
        "org.jfree.chart.entity$ChartEntity#clone()": 6.867924528301887,
        "org.jfree.chart.entity$ChartEntity#equals(java.lang.Object)": 21.58490566037736,
        "org.jfree.chart.entity$ChartEntity#getArea()": 0.0,
        "org.jfree.chart.entity$ChartEntity#getImageMapAreaTag(org.jfree.chart.imagemap.ToolTipTagFragmentGenerator,org.jfree.chart.imagemap.URLTagFragmentGenerator)": 0.0,
        "org.jfree.chart.entity$ChartEntity#getPolyCoords(java.awt.Shape)": 0.0,
        "org.jfree.chart.entity$ChartEntity#getRectCoords(java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.entity$ChartEntity#getShapeCoords()": 0.0,
        "org.jfree.chart.entity$ChartEntity#getShapeType()": 0.0,
        "org.jfree.chart.entity$ChartEntity#getToolTipText()": 0.0,
        "org.jfree.chart.entity$ChartEntity#getURLText()": 0.0,
        "org.jfree.chart.entity$ChartEntity#hashCode()": 0.0,
        "org.jfree.chart.entity$ChartEntity#readObject(java.io.ObjectInputStream)": 6.867924528301887,
        "org.jfree.chart.entity$ChartEntity#setArea(java.awt.Shape)": 5.886792452830188,
        "org.jfree.chart.entity$ChartEntity#setToolTipText(java.lang.String)": 15.69811320754717,
        "org.jfree.chart.entity$ChartEntity#setURLText(java.lang.String)": 15.69811320754717,
        "org.jfree.chart.entity$ChartEntity#toString()": 0.0,
        "org.jfree.chart.entity$ChartEntity#writeObject(java.io.ObjectOutputStream)": 6.867924528301887,
        "org.jfree.chart.entity$JFreeChartEntity#JFreeChartEntity(java.awt.Shape,org.jfree.chart.JFreeChart)": 10.79245283018868,
        "org.jfree.chart.entity$JFreeChartEntity#JFreeChartEntity(java.awt.Shape,org.jfree.chart.JFreeChart,java.lang.String)": 10.79245283018868,
        "org.jfree.chart.entity$JFreeChartEntity#JFreeChartEntity(java.awt.Shape,org.jfree.chart.JFreeChart,java.lang.String,java.lang.String)": 10.79245283018868,
        "org.jfree.chart.entity$JFreeChartEntity#clone()": 0.0,
        "org.jfree.chart.entity$JFreeChartEntity#equals(java.lang.Object)": 0.0,
        "org.jfree.chart.entity$JFreeChartEntity#getChart()": 0.0,
        "org.jfree.chart.entity$JFreeChartEntity#hashCode()": 0.0,
        "org.jfree.chart.entity$JFreeChartEntity#readObject(java.io.ObjectInputStream)": 0.0,
        "org.jfree.chart.entity$JFreeChartEntity#toString()": 0.0,
        "org.jfree.chart.entity$JFreeChartEntity#writeObject(java.io.ObjectOutputStream)": 0.0,
        "org.jfree.chart.entity$LegendItemEntity#LegendItemEntity(java.awt.Shape)": 12.754716981132075,
        "org.jfree.chart.entity$LegendItemEntity#clone()": 0.9811320754716981,
        "org.jfree.chart.entity$LegendItemEntity#equals(java.lang.Object)": 2.943396226415094,
        "org.jfree.chart.entity$LegendItemEntity#getDataset()": 0.0,
        "org.jfree.chart.entity$LegendItemEntity#getSeriesKey()": 0.0,
        "org.jfree.chart.entity$LegendItemEntity#setDataset(org.jfree.data.general.Dataset)": 10.79245283018868,
        "org.jfree.chart.entity$LegendItemEntity#setSeriesKey(java.lang.Comparable)": 10.79245283018868,
        "org.jfree.chart.entity$LegendItemEntity#toString()": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#PieSectionEntity(java.awt.Shape,org.jfree.data.general.PieDataset,int,int,java.lang.Comparable,java.lang.String,java.lang.String)": 5.886792452830188,
        "org.jfree.chart.entity$PieSectionEntity#equals(java.lang.Object)": 5.886792452830188,
        "org.jfree.chart.entity$PieSectionEntity#getDataset()": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#getPieIndex()": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#getSectionIndex()": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#getSectionKey()": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#hashCode()": 0.0,
        "org.jfree.chart.entity$PieSectionEntity#setDataset(org.jfree.data.general.PieDataset)": 0.9811320754716981,
        "org.jfree.chart.entity$PieSectionEntity#setPieIndex(int)": 0.9811320754716981,
        "org.jfree.chart.entity$PieSectionEntity#setSectionIndex(int)": 0.9811320754716981,
        "org.jfree.chart.entity$PieSectionEntity#setSectionKey(java.lang.Comparable)": 0.9811320754716981,
        "org.jfree.chart.entity$PieSectionEntity#toString()": 0.0,
        "org.jfree.chart.entity$PlotEntity#PlotEntity(java.awt.Shape,org.jfree.chart.plot.Plot)": 0.0,
        "org.jfree.chart.entity$PlotEntity#PlotEntity(java.awt.Shape,org.jfree.chart.plot.Plot,java.lang.String)": 0.0,
        "org.jfree.chart.entity$PlotEntity#PlotEntity(java.awt.Shape,org.jfree.chart.plot.Plot,java.lang.String,java.lang.String)": 10.79245283018868,
        "org.jfree.chart.entity$PlotEntity#clone()": 0.0,
        "org.jfree.chart.entity$PlotEntity#equals(java.lang.Object)": 0.0,
        "org.jfree.chart.entity$PlotEntity#getPlot()": 0.0,
        "org.jfree.chart.entity$PlotEntity#hashCode()": 0.0,
        "org.jfree.chart.entity$PlotEntity#readObject(java.io.ObjectInputStream)": 0.0,
        "org.jfree.chart.entity$PlotEntity#toString()": 0.0,
        "org.jfree.chart.entity$PlotEntity#writeObject(java.io.ObjectOutputStream)": 0.0,
        "org.jfree.chart.entity$TitleEntity#TitleEntity(java.awt.Shape,org.jfree.chart.title.Title)": 9.81132075471698,
        "org.jfree.chart.entity$TitleEntity#TitleEntity(java.awt.Shape,org.jfree.chart.title.Title,java.lang.String)": 9.81132075471698,
        "org.jfree.chart.entity$TitleEntity#TitleEntity(java.awt.Shape,org.jfree.chart.title.Title,java.lang.String,java.lang.String)": 10.79245283018868,
        "org.jfree.chart.entity$TitleEntity#clone()": 0.0,
        "org.jfree.chart.entity$TitleEntity#equals(java.lang.Object)": 0.0,
        "org.jfree.chart.entity$TitleEntity#getTitle()": 0.0,
        "org.jfree.chart.entity$TitleEntity#hashCode()": 0.0,
        "org.jfree.chart.entity$TitleEntity#readObject(java.io.ObjectInputStream)": 0.0,
        "org.jfree.chart.entity$TitleEntity#toString()": 0.0,
        "org.jfree.chart.entity$TitleEntity#writeObject(java.io.ObjectOutputStream)": 0.0,
        "org.jfree.chart.entity$XYItemEntity#XYItemEntity(java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,java.lang.String,java.lang.String)": 2.943396226415094,
        "org.jfree.chart.entity$XYItemEntity#equals(java.lang.Object)": 2.943396226415094,
        "org.jfree.chart.entity$XYItemEntity#getDataset()": 0.0,
        "org.jfree.chart.entity$XYItemEntity#getItem()": 0.0,
        "org.jfree.chart.entity$XYItemEntity#getSeriesIndex()": 0.0,
        "org.jfree.chart.entity$XYItemEntity#setDataset(org.jfree.data.xy.XYDataset)": 0.0,
        "org.jfree.chart.entity$XYItemEntity#setItem(int)": 0.9811320754716981,
        "org.jfree.chart.entity$XYItemEntity#setSeriesIndex(int)": 0.9811320754716981,
        "org.jfree.chart.entity$XYItemEntity#toString()": 0.0,
        "org.jfree.chart.event$AxisChangeEvent#AxisChangeEvent(org.jfree.chart.axis.Axis)": 155.3782991202346,
        "org.jfree.chart.event$AxisChangeEvent#getAxis()": 3.9245283018867925,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object)": 571.5073313782991,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart)": 0.0,
        "org.jfree.chart.event$ChartChangeEvent#ChartChangeEvent(java.lang.Object,org.jfree.chart.JFreeChart,org.jfree.chart.event.ChartChangeEventType)": 571.5073313782991,
        "org.jfree.chart.event$ChartChangeEvent#getChart()": 0.0,
        "org.jfree.chart.event$ChartChangeEvent#getType()": 0.0,
        "org.jfree.chart.event$ChartChangeEvent#setChart(org.jfree.chart.JFreeChart)": 84.0,
        "org.jfree.chart.event$ChartChangeEvent#setType(org.jfree.chart.event.ChartChangeEventType)": 203.76539589442814,
        "org.jfree.chart.event$ChartChangeEventType#<clinit>()": 571.5073313782991,
        "org.jfree.chart.event$ChartChangeEventType#ChartChangeEventType(java.lang.String)": 571.5073313782991,
        "org.jfree.chart.event$ChartChangeEventType#equals(java.lang.Object)": 0.0,
        "org.jfree.chart.event$ChartChangeEventType#hashCode()": 0.0,
        "org.jfree.chart.event$ChartChangeEventType#readResolve()": 0.0,
        "org.jfree.chart.event$ChartChangeEventType#toString()": 0.0,
        "org.jfree.chart.event$ChartProgressEvent#ChartProgressEvent(java.lang.Object,org.jfree.chart.JFreeChart,int,int)": 62.79245283018868,
        "org.jfree.chart.event$ChartProgressEvent#getChart()": 0.0,
        "org.jfree.chart.event$ChartProgressEvent#getPercent()": 0.0,
        "org.jfree.chart.event$ChartProgressEvent#getType()": 0.0,
        "org.jfree.chart.event$ChartProgressEvent#setChart(org.jfree.chart.JFreeChart)": 0.0,
        "org.jfree.chart.event$ChartProgressEvent#setPercent(int)": 0.0,
        "org.jfree.chart.event$ChartProgressEvent#setType(int)": 0.0,
        "org.jfree.chart.event$MarkerChangeEvent#MarkerChangeEvent(org.jfree.chart.plot.Marker)": 34.339622641509436,
        "org.jfree.chart.event$MarkerChangeEvent#getMarker()": 16.67924528301887,
        "org.jfree.chart.event$PlotChangeEvent#PlotChangeEvent(org.jfree.chart.plot.Plot)": 246.34604105571847,
        "org.jfree.chart.event$PlotChangeEvent#getPlot()": 0.0,
        "org.jfree.chart.event$RendererChangeEvent#RendererChangeEvent(java.lang.Object)": 354.7142857142857,
        "org.jfree.chart.event$RendererChangeEvent#RendererChangeEvent(java.lang.Object,boolean)": 354.7142857142857,
        "org.jfree.chart.event$RendererChangeEvent#getRenderer()": 0.9811320754716981,
        "org.jfree.chart.event$RendererChangeEvent#getSeriesVisibilityChanged()": -0.5961538461538467,
        "org.jfree.chart.event$TitleChangeEvent#TitleChangeEvent(org.jfree.chart.title.Title)": 152.62745098039215,
        "org.jfree.chart.event$TitleChangeEvent#getTitle()": 0.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#AbstractPieItemLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)": 15.096153846153847,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#clone()": 9.81132075471698,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#createItemArray(org.jfree.data.general.PieDataset,java.lang.Comparable)": 2.943396226415094,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#equals(java.lang.Object)": 27.471698113207548,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)": 2.943396226415094,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#getLabelFormat()": 0.0,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#getNumberFormat()": 2.943396226415094,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#getPercentFormat()": 0.9811320754716981,
        "org.jfree.chart.labels$AbstractPieItemLabelGenerator#hashCode()": 1.9622641509433962,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator()": 0.0,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator(java.lang.String,java.text.DateFormat,java.text.DateFormat)": 4.90566037735849,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator(java.lang.String,java.text.DateFormat,java.text.NumberFormat)": 1.9622641509433962,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.DateFormat)": 0.0,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#AbstractXYItemLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)": 36.08510638297872,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#clone()": 5.886792452830188,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int,int)": 0.9811320754716981,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#equals(java.lang.Object)": 28.452830188679247,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#generateLabelString(org.jfree.data.xy.XYDataset,int,int)": 0.0,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#getFormatString()": 0.9811320754716981,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#getNullYString()": 0.0,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#getXDateFormat()": 0.9811320754716981,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#getXFormat()": 0.9811320754716981,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#getYDateFormat()": 0.9811320754716981,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#getYFormat()": 0.9811320754716981,
        "org.jfree.chart.labels$AbstractXYItemLabelGenerator#hashCode()": 4.90566037735849,
        "org.jfree.chart.labels$ItemLabelAnchor#<clinit>()": 448.6273291925466,
        "org.jfree.chart.labels$ItemLabelAnchor#ItemLabelAnchor(java.lang.String)": 448.6273291925466,
        "org.jfree.chart.labels$ItemLabelAnchor#equals(java.lang.Object)": 166.79245283018867,
        "org.jfree.chart.labels$ItemLabelAnchor#readResolve()": 66.71698113207547,
        "org.jfree.chart.labels$ItemLabelAnchor#toString()": 68.67924528301887,
        "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition()": 5.886792452830188,
        "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition(org.jfree.chart.labels.ItemLabelAnchor,org.jfree.chart.text.TextAnchor)": 444.7142857142857,
        "org.jfree.chart.labels$ItemLabelPosition#ItemLabelPosition(org.jfree.chart.labels.ItemLabelAnchor,org.jfree.chart.text.TextAnchor,org.jfree.chart.text.TextAnchor,double)": 446.67080745341616,
        "org.jfree.chart.labels$ItemLabelPosition#equals(java.lang.Object)": 161.88679245283018,
        "org.jfree.chart.labels$ItemLabelPosition#getAngle()": 0.0,
        "org.jfree.chart.labels$ItemLabelPosition#getItemLabelAnchor()": 0.0,
        "org.jfree.chart.labels$ItemLabelPosition#getRotationAnchor()": 0.0,
        "org.jfree.chart.labels$ItemLabelPosition#getTextAnchor()": 0.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator()": 10.192307692307693,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String)": 0.9811320754716981,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)": 10.192307692307693,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.lang.String,java.util.Locale)": 0.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#StandardPieSectionLabelGenerator(java.util.Locale)": 0.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#clone()": 8.830188679245284,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#equals(java.lang.Object)": 23.547169811320753,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateAttributedSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)": 0.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#generateSectionLabel(org.jfree.data.general.PieDataset,java.lang.Comparable)": 2.943396226415094,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#getAttributedLabel(int)": 0.0,
        "org.jfree.chart.labels$StandardPieSectionLabelGenerator#setAttributedLabel(int,java.text.AttributedString)": 0.9811320754716981,
        "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator()": -11.384615384615383,
        "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator(java.lang.String)": -10.403846153846153,
        "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)": -10.403846153846153,
        "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator(java.lang.String,java.util.Locale)": -10.403846153846153,
        "org.jfree.chart.labels$StandardPieToolTipGenerator#StandardPieToolTipGenerator(java.util.Locale)": 0.0,
        "org.jfree.chart.labels$StandardPieToolTipGenerator#clone()": 0.9811320754716981,
        "org.jfree.chart.labels$StandardPieToolTipGenerator#generateToolTip(org.jfree.data.general.PieDataset,java.lang.Comparable)": 0.0,
        "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#StandardXYSeriesLabelGenerator()": 1.9622641509433962,
        "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#StandardXYSeriesLabelGenerator(java.lang.String)": 207.97515527950313,
        "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#clone()": 35.320754716981135,
        "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#createItemArray(org.jfree.data.xy.XYDataset,int)": 24.528301886792452,
        "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#equals(java.lang.Object)": 119.69811320754717,
        "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#generateLabel(org.jfree.data.xy.XYDataset,int)": 24.528301886792452,
        "org.jfree.chart.labels$StandardXYSeriesLabelGenerator#hashCode()": 0.9811320754716981,
        "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator()": 8.680851063829786,
        "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator(java.lang.String,java.text.DateFormat,java.text.DateFormat)": 1.9622641509433962,
        "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator(java.lang.String,java.text.DateFormat,java.text.NumberFormat)": 1.9622641509433962,
        "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator(java.lang.String,java.text.NumberFormat,java.text.DateFormat)": 0.0,
        "org.jfree.chart.labels$StandardXYToolTipGenerator#StandardXYToolTipGenerator(java.lang.String,java.text.NumberFormat,java.text.NumberFormat)": 24.340425531914892,
        "org.jfree.chart.labels$StandardXYToolTipGenerator#clone()": 3.9245283018867925,
        "org.jfree.chart.labels$StandardXYToolTipGenerator#equals(java.lang.Object)": 20.60377358490566,
        "org.jfree.chart.labels$StandardXYToolTipGenerator#generateToolTip(org.jfree.data.xy.XYDataset,int,int)": 0.0,
        "org.jfree.chart.labels$StandardXYToolTipGenerator#getTimeSeriesInstance()": 0.9811320754716981,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#AbstractPieLabelDistributor()": 5.28846153846154,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#addPieLabelRecord(org.jfree.chart.plot.PieLabelRecord)": 1.9622641509433962,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#clear()": 1.9622641509433962,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#getItemCount()": 1.9622641509433962,
        "org.jfree.chart.plot$AbstractPieLabelDistributor#getPieLabelRecord(int)": 1.9622641509433962,
        "org.jfree.chart.plot$CategoryPlot#<clinit>()": 111.84905660377359,
        "org.jfree.chart.plot$CategoryPlot#CategoryPlot()": 12.754716981132075,
        "org.jfree.chart.plot$CategoryPlot#CategoryPlot(org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.category.CategoryItemRenderer)": 111.84905660377359,
        "org.jfree.chart.plot$CategoryPlot#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 1.9622641509433962,
        "org.jfree.chart.plot$CategoryPlot#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation,boolean)": 1.9622641509433962,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)": 3.9245283018867925,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(int,org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer,boolean)": 3.9245283018867925,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker)": 1.9622641509433962,
        "org.jfree.chart.plot$CategoryPlot#addDomainMarker(org.jfree.chart.plot.CategoryMarker,org.jfree.chart.util.Layer)": 3.9245283018867925,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 7.849056603773585,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 7.849056603773585,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker)": 1.9622641509433962,
        "org.jfree.chart.plot$CategoryPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 7.849056603773585,
        "org.jfree.chart.plot$CategoryPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 38.264150943396224,
        "org.jfree.chart.plot$CategoryPlot#checkAxisIndices(java.util.List)": 111.84905660377359,
        "org.jfree.chart.plot$CategoryPlot#clearAnnotations()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#clearDomainAxes()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers()": 1.9622641509433962,
        "org.jfree.chart.plot$CategoryPlot#clearDomainMarkers(int)": 1.9622641509433962,
        "org.jfree.chart.plot$CategoryPlot#clearRangeAxes()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers()": 4.90566037735849,
        "org.jfree.chart.plot$CategoryPlot#clearRangeMarkers(int)": 1.9622641509433962,
        "org.jfree.chart.plot$CategoryPlot#clone()": 4.90566037735849,
        "org.jfree.chart.plot$CategoryPlot#cloneMarkerMap(java.util.Map)": 4.90566037735849,
        "org.jfree.chart.plot$CategoryPlot#configureDomainAxes()": 111.84905660377359,
        "org.jfree.chart.plot$CategoryPlot#configureRangeAxes()": 111.84905660377359,
        "org.jfree.chart.plot$CategoryPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 111.84905660377359,
        "org.jfree.chart.plot$CategoryPlot#datasetsMappedToDomainAxis(int)": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#datasetsMappedToRangeAxis(int)": 101.05660377358491,
        "org.jfree.chart.plot$CategoryPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 38.264150943396224,
        "org.jfree.chart.plot$CategoryPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 34.339622641509436,
        "org.jfree.chart.plot$CategoryPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,int,java.lang.Comparable,java.lang.Comparable,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#drawRangeLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#equals(java.lang.Object)": 30.41509433962264,
        "org.jfree.chart.plot$CategoryPlot#getAnchorValue()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getAnnotations()": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#getAxisOffset()": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#getCategories()": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#getCategoriesForAxis(org.jfree.chart.axis.CategoryAxis)": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#getColumnRenderingOrder()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getCrosshairDatasetIndex()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 101.05660377358491,
        "org.jfree.chart.plot$CategoryPlot#getDataset()": 2.943396226415094,
        "org.jfree.chart.plot$CategoryPlot#getDataset(int)": 111.84905660377359,
        "org.jfree.chart.plot$CategoryPlot#getDatasetCount()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDatasetRenderingOrder()": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxis()": 5.886792452830188,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxis(int)": 79.47169811320755,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisCount()": 50.0377358490566,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge()": 31.39622641509434,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisEdge(int)": 38.264150943396224,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisForDataset(int)": 38.264150943396224,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisIndex(org.jfree.chart.axis.CategoryAxis)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation()": 38.264150943396224,
        "org.jfree.chart.plot$CategoryPlot#getDomainAxisLocation(int)": 38.264150943396224,
        "org.jfree.chart.plot$CategoryPlot#getDomainCrosshairColumnKey()": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#getDomainCrosshairPaint()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainCrosshairRowKey()": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#getDomainCrosshairStroke()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlinePaint()": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlinePosition()": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#getDomainGridlineStroke()": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#getDomainMarkers(org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getDrawSharedDomainAxis()": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#getFixedDomainAxisSpace()": 1.9622641509433962,
        "org.jfree.chart.plot$CategoryPlot#getFixedLegendItems()": 2.943396226415094,
        "org.jfree.chart.plot$CategoryPlot#getFixedRangeAxisSpace()": 1.9622641509433962,
        "org.jfree.chart.plot$CategoryPlot#getIndexOf(org.jfree.chart.renderer.category.CategoryItemRenderer)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#getLegendItems()": 38.264150943396224,
        "org.jfree.chart.plot$CategoryPlot#getOrientation()": 46.113207547169814,
        "org.jfree.chart.plot$CategoryPlot#getPlotType()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxis()": 62.79245283018868,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxis(int)": 111.84905660377359,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisCount()": 50.0377358490566,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge()": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisEdge(int)": 38.264150943396224,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisForDataset(int)": 38.264150943396224,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation()": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#getRangeAxisLocation(int)": 38.264150943396224,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairPaint()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairStroke()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeCrosshairValue()": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#getRangeGridlinePaint()": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#getRangeGridlineStroke()": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#getRangeMarkers(org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeMinorGridlinePaint()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeMinorGridlineStroke()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeZeroBaselinePaint()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRangeZeroBaselineStroke()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getRenderer()": 57.886792452830186,
        "org.jfree.chart.plot$CategoryPlot#getRenderer(int)": 74.56603773584905,
        "org.jfree.chart.plot$CategoryPlot#getRendererCount()": 50.0377358490566,
        "org.jfree.chart.plot$CategoryPlot#getRendererForDataset(org.jfree.data.category.CategoryDataset)": 101.05660377358491,
        "org.jfree.chart.plot$CategoryPlot#getRowRenderingOrder()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#getWeight()": 1.9622641509433962,
        "org.jfree.chart.plot$CategoryPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#indexOf(org.jfree.data.category.CategoryDataset)": 5.886792452830188,
        "org.jfree.chart.plot$CategoryPlot#isDomainCrosshairVisible()": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#isDomainGridlinesVisible()": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#isDomainPannable()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#isDomainZoomable()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeCrosshairLockedOnData()": 5.886792452830188,
        "org.jfree.chart.plot$CategoryPlot#isRangeCrosshairVisible()": 38.264150943396224,
        "org.jfree.chart.plot$CategoryPlot#isRangeGridlinesVisible()": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#isRangeMinorGridlinesVisible()": 34.339622641509436,
        "org.jfree.chart.plot$CategoryPlot#isRangePannable()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#isRangeZeroBaselineVisible()": 38.264150943396224,
        "org.jfree.chart.plot$CategoryPlot#isRangeZoomable()": 0.0,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxes(int,java.util.List)": 111.84905660377359,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToDomainAxis(int,int)": 111.84905660377359,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxes(int,java.util.List)": 111.84905660377359,
        "org.jfree.chart.plot$CategoryPlot#mapDatasetToRangeAxis(int,int)": 111.84905660377359,
        "org.jfree.chart.plot$CategoryPlot#panDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#readObject(java.io.ObjectInputStream)": 7.849056603773585,
        "org.jfree.chart.plot$CategoryPlot#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation,boolean)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CategoryCrosshairState)": 37.283018867924525,
        "org.jfree.chart.plot$CategoryPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)": 52.9811320754717,
        "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setAnchorValue(double,boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)": 51.0188679245283,
        "org.jfree.chart.plot$CategoryPlot#setColumnRenderingOrder(org.jfree.chart.util.SortOrder)": 8.830188679245284,
        "org.jfree.chart.plot$CategoryPlot#setCrosshairDatasetIndex(int)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setCrosshairDatasetIndex(int,boolean)": 38.264150943396224,
        "org.jfree.chart.plot$CategoryPlot#setDataset(int,org.jfree.data.category.CategoryDataset)": 21.58490566037736,
        "org.jfree.chart.plot$CategoryPlot#setDataset(org.jfree.data.category.CategoryDataset)": 13.735849056603774,
        "org.jfree.chart.plot$CategoryPlot#setDatasetRenderingOrder(org.jfree.chart.plot.DatasetRenderingOrder)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxes(org.jfree.chart.axis.CategoryAxis[])": 0.0,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis)": 11.773584905660377,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(int,org.jfree.chart.axis.CategoryAxis,boolean)": 11.773584905660377,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxis(org.jfree.chart.axis.CategoryAxis)": 7.849056603773585,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 111.84905660377359,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 111.84905660377359,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairColumnKey(java.lang.Comparable)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairColumnKey(java.lang.Comparable,boolean)": 38.264150943396224,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairRowKey(java.lang.Comparable)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairRowKey(java.lang.Comparable,boolean)": 38.264150943396224,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setDomainCrosshairVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePaint(java.awt.Paint)": 51.0188679245283,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinePosition(org.jfree.chart.axis.CategoryAnchor)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlineStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setDomainGridlinesVisible(boolean)": 8.830188679245284,
        "org.jfree.chart.plot$CategoryPlot#setDrawSharedDomainAxis(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace)": 1.9622641509433962,
        "org.jfree.chart.plot$CategoryPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 2.943396226415094,
        "org.jfree.chart.plot$CategoryPlot#setFixedLegendItems(org.jfree.chart.LegendItemCollection)": 1.9622641509433962,
        "org.jfree.chart.plot$CategoryPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)": 1.9622641509433962,
        "org.jfree.chart.plot$CategoryPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 2.943396226415094,
        "org.jfree.chart.plot$CategoryPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)": 65.73584905660377,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])": 0.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)": 12.754716981132075,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)": 12.754716981132075,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)": 8.830188679245284,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 111.84905660377359,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 111.84905660377359,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairLockedOnData(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairPaint(java.awt.Paint)": 1.9622641509433962,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairValue(double,boolean)": 38.264150943396224,
        "org.jfree.chart.plot$CategoryPlot#setRangeCrosshairVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlinePaint(java.awt.Paint)": 51.0188679245283,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlineStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setRangeGridlinesVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setRangeMinorGridlinePaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setRangeMinorGridlineStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setRangeMinorGridlinesVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setRangePannable(boolean)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#setRangeZeroBaselinePaint(java.awt.Paint)": 51.0188679245283,
        "org.jfree.chart.plot$CategoryPlot#setRangeZeroBaselineStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setRangeZeroBaselineVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer)": 3.9245283018867925,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(int,org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)": 5.886792452830188,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)": 2.943396226415094,
        "org.jfree.chart.plot$CategoryPlot#setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer,boolean)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#setRenderers(org.jfree.chart.renderer.category.CategoryItemRenderer[])": 0.0,
        "org.jfree.chart.plot$CategoryPlot#setRowRenderingOrder(org.jfree.chart.util.SortOrder)": 4.90566037735849,
        "org.jfree.chart.plot$CategoryPlot#setWeight(int)": 10.79245283018868,
        "org.jfree.chart.plot$CategoryPlot#writeObject(java.io.ObjectOutputStream)": 7.849056603773585,
        "org.jfree.chart.plot$CategoryPlot#zoom(double)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CategoryPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 0.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#CombinedDomainXYPlot()": 0.9811320754716981,
        "org.jfree.chart.plot$CombinedDomainXYPlot#CombinedDomainXYPlot(org.jfree.chart.axis.ValueAxis)": 5.886792452830188,
        "org.jfree.chart.plot$CombinedDomainXYPlot#add(org.jfree.chart.plot.XYPlot)": 0.9811320754716981,
        "org.jfree.chart.plot$CombinedDomainXYPlot#add(org.jfree.chart.plot.XYPlot,int)": 4.90566037735849,
        "org.jfree.chart.plot$CombinedDomainXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 0.9811320754716981,
        "org.jfree.chart.plot$CombinedDomainXYPlot#clone()": 0.9811320754716981,
        "org.jfree.chart.plot$CombinedDomainXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 0.9811320754716981,
        "org.jfree.chart.plot$CombinedDomainXYPlot#equals(java.lang.Object)": 4.90566037735849,
        "org.jfree.chart.plot$CombinedDomainXYPlot#findSubplot(org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 4.90566037735849,
        "org.jfree.chart.plot$CombinedDomainXYPlot#getGap()": 0.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#getLegendItems()": 0.9811320754716981,
        "org.jfree.chart.plot$CombinedDomainXYPlot#getPlotType()": 0.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#getSubplots()": 1.9622641509433962,
        "org.jfree.chart.plot$CombinedDomainXYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#plotChanged(org.jfree.chart.event.PlotChangeEvent)": 0.9811320754716981,
        "org.jfree.chart.plot$CombinedDomainXYPlot#remove(org.jfree.chart.plot.XYPlot)": 0.9811320754716981,
        "org.jfree.chart.plot$CombinedDomainXYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)": 0.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#setFixedRangeAxisSpaceForSubplots(org.jfree.chart.axis.AxisSpace)": 0.9811320754716981,
        "org.jfree.chart.plot$CombinedDomainXYPlot#setGap(double)": 3.9245283018867925,
        "org.jfree.chart.plot$CombinedDomainXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)": 3.9245283018867925,
        "org.jfree.chart.plot$CombinedDomainXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)": 0.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CombinedDomainXYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 0.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#CombinedRangeXYPlot()": 0.9811320754716981,
        "org.jfree.chart.plot$CombinedRangeXYPlot#CombinedRangeXYPlot(org.jfree.chart.axis.ValueAxis)": 4.90566037735849,
        "org.jfree.chart.plot$CombinedRangeXYPlot#add(org.jfree.chart.plot.XYPlot)": 0.9811320754716981,
        "org.jfree.chart.plot$CombinedRangeXYPlot#add(org.jfree.chart.plot.XYPlot,int)": 4.90566037735849,
        "org.jfree.chart.plot$CombinedRangeXYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 0.9811320754716981,
        "org.jfree.chart.plot$CombinedRangeXYPlot#clone()": 0.9811320754716981,
        "org.jfree.chart.plot$CombinedRangeXYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 0.9811320754716981,
        "org.jfree.chart.plot$CombinedRangeXYPlot#equals(java.lang.Object)": 4.90566037735849,
        "org.jfree.chart.plot$CombinedRangeXYPlot#findSubplot(org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 4.90566037735849,
        "org.jfree.chart.plot$CombinedRangeXYPlot#getGap()": 0.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#getLegendItems()": 0.9811320754716981,
        "org.jfree.chart.plot$CombinedRangeXYPlot#getPlotType()": 0.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#getSubplots()": 1.9622641509433962,
        "org.jfree.chart.plot$CombinedRangeXYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#plotChanged(org.jfree.chart.event.PlotChangeEvent)": 0.9811320754716981,
        "org.jfree.chart.plot$CombinedRangeXYPlot#remove(org.jfree.chart.plot.XYPlot)": 0.9811320754716981,
        "org.jfree.chart.plot$CombinedRangeXYPlot#setFixedDomainAxisSpaceForSubplots(org.jfree.chart.axis.AxisSpace)": 0.9811320754716981,
        "org.jfree.chart.plot$CombinedRangeXYPlot#setGap(double)": 3.9245283018867925,
        "org.jfree.chart.plot$CombinedRangeXYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)": 3.9245283018867925,
        "org.jfree.chart.plot$CombinedRangeXYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)": 0.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$CombinedRangeXYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 0.0,
        "org.jfree.chart.plot$CrosshairState#CrosshairState()": 54.943396226415096,
        "org.jfree.chart.plot$CrosshairState#CrosshairState(boolean)": 54.943396226415096,
        "org.jfree.chart.plot$CrosshairState#getAnchor()": 5.886792452830188,
        "org.jfree.chart.plot$CrosshairState#getAnchorX()": 0.0,
        "org.jfree.chart.plot$CrosshairState#getAnchorY()": 0.0,
        "org.jfree.chart.plot$CrosshairState#getCrosshairDistance()": 0.0,
        "org.jfree.chart.plot$CrosshairState#getCrosshairX()": 17.660377358490567,
        "org.jfree.chart.plot$CrosshairState#getCrosshairY()": 54.943396226415096,
        "org.jfree.chart.plot$CrosshairState#getDatasetIndex()": 37.283018867924525,
        "org.jfree.chart.plot$CrosshairState#getDomainAxisIndex()": 17.660377358490567,
        "org.jfree.chart.plot$CrosshairState#getRangeAxisIndex()": 17.660377358490567,
        "org.jfree.chart.plot$CrosshairState#setAnchor(java.awt.geom.Point2D)": 54.943396226415096,
        "org.jfree.chart.plot$CrosshairState#setAnchorX(double)": 54.943396226415096,
        "org.jfree.chart.plot$CrosshairState#setAnchorY(double)": 54.943396226415096,
        "org.jfree.chart.plot$CrosshairState#setCrosshairDistance(double)": 54.943396226415096,
        "org.jfree.chart.plot$CrosshairState#setCrosshairX(double)": 17.660377358490567,
        "org.jfree.chart.plot$CrosshairState#setCrosshairY(double)": 54.943396226415096,
        "org.jfree.chart.plot$CrosshairState#setDatasetIndex(int)": 0.0,
        "org.jfree.chart.plot$CrosshairState#updateCrosshairPoint(double,double,double,double,org.jfree.chart.plot.PlotOrientation)": 0.0,
        "org.jfree.chart.plot$CrosshairState#updateCrosshairPoint(double,double,int,int,double,double,org.jfree.chart.plot.PlotOrientation)": 0.0,
        "org.jfree.chart.plot$CrosshairState#updateCrosshairX(double)": 0.0,
        "org.jfree.chart.plot$CrosshairState#updateCrosshairX(double,int)": 0.0,
        "org.jfree.chart.plot$CrosshairState#updateCrosshairY(double)": 0.0,
        "org.jfree.chart.plot$CrosshairState#updateCrosshairY(double,int)": 0.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#<clinit>()": 190.21700879765396,
        "org.jfree.chart.plot$DatasetRenderingOrder#DatasetRenderingOrder(java.lang.String)": 190.21700879765396,
        "org.jfree.chart.plot$DatasetRenderingOrder#equals(java.lang.Object)": 15.69811320754717,
        "org.jfree.chart.plot$DatasetRenderingOrder#hashCode()": 0.0,
        "org.jfree.chart.plot$DatasetRenderingOrder#readResolve()": 15.69811320754717,
        "org.jfree.chart.plot$DatasetRenderingOrder#toString()": 15.69811320754717,
        "org.jfree.chart.plot$DefaultDrawingSupplier#<clinit>()": 262.7976539589443,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier()": 262.7976539589443,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])": 262.7976539589443,
        "org.jfree.chart.plot$DefaultDrawingSupplier#DefaultDrawingSupplier(java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])": 2.943396226415094,
        "org.jfree.chart.plot$DefaultDrawingSupplier#clone()": 106.54901960784314,
        "org.jfree.chart.plot$DefaultDrawingSupplier#createStandardSeriesShapes()": 262.7976539589443,
        "org.jfree.chart.plot$DefaultDrawingSupplier#equalShapes(java.awt.Shape[],java.awt.Shape[])": 82.41509433962264,
        "org.jfree.chart.plot$DefaultDrawingSupplier#equals(java.lang.Object)": 83.39622641509433,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextFillPaint()": 0.9811320754716981,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlinePaint()": 1.9622641509433962,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextOutlineStroke()": 0.9811320754716981,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextPaint()": 72.60377358490567,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextShape()": 20.60377358490566,
        "org.jfree.chart.plot$DefaultDrawingSupplier#getNextStroke()": 38.264150943396224,
        "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double)": 262.7976539589443,
        "org.jfree.chart.plot$DefaultDrawingSupplier#intArray(double,double,double,double)": 262.7976539589443,
        "org.jfree.chart.plot$DefaultDrawingSupplier#readObject(java.io.ObjectInputStream)": 32.37735849056604,
        "org.jfree.chart.plot$DefaultDrawingSupplier#writeObject(java.io.ObjectOutputStream)": 32.37735849056604,
        "org.jfree.chart.plot$IntervalMarker#IntervalMarker(double,double)": 6.867924528301887,
        "org.jfree.chart.plot$IntervalMarker#IntervalMarker(double,double,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$IntervalMarker#IntervalMarker(double,double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)": 6.867924528301887,
        "org.jfree.chart.plot$IntervalMarker#clone()": 0.9811320754716981,
        "org.jfree.chart.plot$IntervalMarker#equals(java.lang.Object)": 6.867924528301887,
        "org.jfree.chart.plot$IntervalMarker#getEndValue()": 2.943396226415094,
        "org.jfree.chart.plot$IntervalMarker#getGradientPaintTransformer()": 0.0,
        "org.jfree.chart.plot$IntervalMarker#getStartValue()": 2.943396226415094,
        "org.jfree.chart.plot$IntervalMarker#setEndValue(double)": 0.9811320754716981,
        "org.jfree.chart.plot$IntervalMarker#setGradientPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)": 0.9811320754716981,
        "org.jfree.chart.plot$IntervalMarker#setStartValue(double)": 0.9811320754716981,
        "org.jfree.chart.plot$Marker#Marker()": 32.37735849056604,
        "org.jfree.chart.plot$Marker#Marker(java.awt.Paint)": 32.37735849056604,
        "org.jfree.chart.plot$Marker#Marker(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)": 45.132075471698116,
        "org.jfree.chart.plot$Marker#addChangeListener(org.jfree.chart.event.MarkerChangeListener)": 30.41509433962264,
        "org.jfree.chart.plot$Marker#clone()": 2.943396226415094,
        "org.jfree.chart.plot$Marker#equals(java.lang.Object)": 16.67924528301887,
        "org.jfree.chart.plot$Marker#getAlpha()": 3.9245283018867925,
        "org.jfree.chart.plot$Marker#getLabel()": 2.943396226415094,
        "org.jfree.chart.plot$Marker#getLabelAnchor()": 2.943396226415094,
        "org.jfree.chart.plot$Marker#getLabelFont()": 0.9811320754716981,
        "org.jfree.chart.plot$Marker#getLabelOffset()": 0.9811320754716981,
        "org.jfree.chart.plot$Marker#getLabelOffsetType()": 0.9811320754716981,
        "org.jfree.chart.plot$Marker#getLabelPaint()": 0.9811320754716981,
        "org.jfree.chart.plot$Marker#getLabelTextAnchor()": 0.9811320754716981,
        "org.jfree.chart.plot$Marker#getListeners(java.lang.Class)": 5.886792452830188,
        "org.jfree.chart.plot$Marker#getOutlinePaint()": 1.9622641509433962,
        "org.jfree.chart.plot$Marker#getOutlineStroke()": 1.9622641509433962,
        "org.jfree.chart.plot$Marker#getPaint()": 3.9245283018867925,
        "org.jfree.chart.plot$Marker#getStroke()": 3.9245283018867925,
        "org.jfree.chart.plot$Marker#notifyListeners(org.jfree.chart.event.MarkerChangeEvent)": 34.339622641509436,
        "org.jfree.chart.plot$Marker#readObject(java.io.ObjectInputStream)": 5.886792452830188,
        "org.jfree.chart.plot$Marker#removeChangeListener(org.jfree.chart.event.MarkerChangeListener)": 5.886792452830188,
        "org.jfree.chart.plot$Marker#setAlpha(float)": 1.9622641509433962,
        "org.jfree.chart.plot$Marker#setLabel(java.lang.String)": 1.9622641509433962,
        "org.jfree.chart.plot$Marker#setLabelAnchor(org.jfree.chart.util.RectangleAnchor)": 1.9622641509433962,
        "org.jfree.chart.plot$Marker#setLabelFont(java.awt.Font)": 1.9622641509433962,
        "org.jfree.chart.plot$Marker#setLabelOffset(org.jfree.chart.util.RectangleInsets)": 1.9622641509433962,
        "org.jfree.chart.plot$Marker#setLabelOffsetType(org.jfree.chart.util.LengthAdjustmentType)": 18.641509433962263,
        "org.jfree.chart.plot$Marker#setLabelPaint(java.awt.Paint)": 1.9622641509433962,
        "org.jfree.chart.plot$Marker#setLabelTextAnchor(org.jfree.chart.text.TextAnchor)": 1.9622641509433962,
        "org.jfree.chart.plot$Marker#setOutlinePaint(java.awt.Paint)": 1.9622641509433962,
        "org.jfree.chart.plot$Marker#setOutlineStroke(java.awt.Stroke)": 1.9622641509433962,
        "org.jfree.chart.plot$Marker#setPaint(java.awt.Paint)": 4.90566037735849,
        "org.jfree.chart.plot$Marker#setStroke(java.awt.Stroke)": 1.9622641509433962,
        "org.jfree.chart.plot$Marker#writeObject(java.io.ObjectOutputStream)": 5.886792452830188,
        "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot()": 2.943396226415094,
        "org.jfree.chart.plot$MultiplePiePlot#MultiplePiePlot(org.jfree.data.category.CategoryDataset)": 4.90566037735849,
        "org.jfree.chart.plot$MultiplePiePlot#clone()": 0.9811320754716981,
        "org.jfree.chart.plot$MultiplePiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#equals(java.lang.Object)": 3.9245283018867925,
        "org.jfree.chart.plot$MultiplePiePlot#getAggregatedItemsKey()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#getAggregatedItemsPaint()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#getDataExtractOrder()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#getDataset()": 1.9622641509433962,
        "org.jfree.chart.plot$MultiplePiePlot#getLegendItemShape()": 0.9811320754716981,
        "org.jfree.chart.plot$MultiplePiePlot#getLegendItems()": 0.9811320754716981,
        "org.jfree.chart.plot$MultiplePiePlot#getLimit()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#getPieChart()": 0.9811320754716981,
        "org.jfree.chart.plot$MultiplePiePlot#getPlotType()": 0.0,
        "org.jfree.chart.plot$MultiplePiePlot#prefetchSectionPaints()": 0.9811320754716981,
        "org.jfree.chart.plot$MultiplePiePlot#readObject(java.io.ObjectInputStream)": 0.9811320754716981,
        "org.jfree.chart.plot$MultiplePiePlot#setAggregatedItemsKey(java.lang.Comparable)": 0.9811320754716981,
        "org.jfree.chart.plot$MultiplePiePlot#setAggregatedItemsPaint(java.awt.Paint)": 1.9622641509433962,
        "org.jfree.chart.plot$MultiplePiePlot#setDataExtractOrder(org.jfree.chart.util.TableOrder)": 0.9811320754716981,
        "org.jfree.chart.plot$MultiplePiePlot#setDataset(org.jfree.data.category.CategoryDataset)": 4.90566037735849,
        "org.jfree.chart.plot$MultiplePiePlot#setLegendItemShape(java.awt.Shape)": 1.9622641509433962,
        "org.jfree.chart.plot$MultiplePiePlot#setLimit(double)": 0.9811320754716981,
        "org.jfree.chart.plot$MultiplePiePlot#setPieChart(org.jfree.chart.JFreeChart)": 0.9811320754716981,
        "org.jfree.chart.plot$MultiplePiePlot#writeObject(java.io.ObjectOutputStream)": 0.9811320754716981,
        "org.jfree.chart.plot$PieLabelDistributor#PieLabelDistributor(int)": 5.28846153846154,
        "org.jfree.chart.plot$PieLabelDistributor#adjustDownwards(double,double)": 0.9811320754716981,
        "org.jfree.chart.plot$PieLabelDistributor#adjustInwards()": 0.0,
        "org.jfree.chart.plot$PieLabelDistributor#adjustUpwards(double,double)": 0.9811320754716981,
        "org.jfree.chart.plot$PieLabelDistributor#distributeLabels(double,double)": 1.9622641509433962,
        "org.jfree.chart.plot$PieLabelDistributor#isOverlap()": 1.9622641509433962,
        "org.jfree.chart.plot$PieLabelDistributor#sort()": 1.9622641509433962,
        "org.jfree.chart.plot$PieLabelDistributor#spreadEvenly(double,double)": 0.9811320754716981,
        "org.jfree.chart.plot$PieLabelDistributor#toString()": 0.0,
        "org.jfree.chart.plot$PieLabelLinkStyle#<clinit>()": 112.79765395894428,
        "org.jfree.chart.plot$PieLabelLinkStyle#PieLabelLinkStyle(java.lang.String)": 112.79765395894428,
        "org.jfree.chart.plot$PieLabelLinkStyle#equals(java.lang.Object)": 24.528301886792452,
        "org.jfree.chart.plot$PieLabelLinkStyle#hashCode()": 0.0,
        "org.jfree.chart.plot$PieLabelLinkStyle#readResolve()": 6.867924528301887,
        "org.jfree.chart.plot$PieLabelLinkStyle#toString()": 10.79245283018868,
        "org.jfree.chart.plot$PiePlot#<clinit>()": 5.28846153846154,
        "org.jfree.chart.plot$PiePlot#PiePlot()": 10.79245283018868,
        "org.jfree.chart.plot$PiePlot#PiePlot(org.jfree.data.general.PieDataset)": 5.28846153846154,
        "org.jfree.chart.plot$PiePlot#clearSectionOutlinePaints(boolean)": 0.0,
        "org.jfree.chart.plot$PiePlot#clearSectionOutlineStrokes(boolean)": 0.0,
        "org.jfree.chart.plot$PiePlot#clearSectionPaints(boolean)": -14.326923076923077,
        "org.jfree.chart.plot$PiePlot#clone()": 7.849056603773585,
        "org.jfree.chart.plot$PiePlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot#drawLeftLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot#drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot#drawPie(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#drawRightLabel(java.awt.Graphics2D,org.jfree.chart.plot.PiePlotState,org.jfree.chart.plot.PieLabelRecord)": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot#drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot#drawSimpleLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)": 0.0,
        "org.jfree.chart.plot$PiePlot#equals(java.lang.Object)": 20.60377358490566,
        "org.jfree.chart.plot$PiePlot#getArcBounds(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,double,double)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#getAutoPopulateSectionOutlinePaint()": -13.346153846153847,
        "org.jfree.chart.plot$PiePlot#getAutoPopulateSectionOutlineStroke()": -13.346153846153847,
        "org.jfree.chart.plot$PiePlot#getAutoPopulateSectionPaint()": -13.346153846153847,
        "org.jfree.chart.plot$PiePlot#getBaseSectionOutlinePaint()": 0.0,
        "org.jfree.chart.plot$PiePlot#getBaseSectionOutlineStroke()": 0.0,
        "org.jfree.chart.plot$PiePlot#getBaseSectionPaint()": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#getDataset()": 5.886792452830188,
        "org.jfree.chart.plot$PiePlot#getDirection()": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#getExplodePercent(java.lang.Comparable)": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot#getIgnoreNullValues()": 0.0,
        "org.jfree.chart.plot$PiePlot#getIgnoreZeroValues()": 0.0,
        "org.jfree.chart.plot$PiePlot#getInteriorGap()": 2.943396226415094,
        "org.jfree.chart.plot$PiePlot#getLabelBackgroundPaint()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelDistributor()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelFont()": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot#getLabelGap()": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot#getLabelGenerator()": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot#getLabelLinkDepth()": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot#getLabelLinkMargin()": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot#getLabelLinkPaint()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelLinkStroke()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelLinkStyle()": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot#getLabelLinksVisible()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelOutlinePaint()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelOutlineStroke()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelPadding()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelPaint()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLabelShadowPaint()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLegendItemShape()": 2.943396226415094,
        "org.jfree.chart.plot$PiePlot#getLegendItems()": 3.9245283018867925,
        "org.jfree.chart.plot$PiePlot#getLegendLabelGenerator()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLegendLabelToolTipGenerator()": 0.0,
        "org.jfree.chart.plot$PiePlot#getLegendLabelURLGenerator()": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#getMaximumExplodePercent()": 2.943396226415094,
        "org.jfree.chart.plot$PiePlot#getMaximumLabelWidth()": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot#getMinimumArcAngleToDraw()": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot#getPieIndex()": 0.0,
        "org.jfree.chart.plot$PiePlot#getPlotType()": 0.0,
        "org.jfree.chart.plot$PiePlot#getSectionKey(int)": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot#getSectionOutlinePaint(java.lang.Comparable)": 0.0,
        "org.jfree.chart.plot$PiePlot#getSectionOutlineStroke(java.lang.Comparable)": 0.0,
        "org.jfree.chart.plot$PiePlot#getSectionOutlinesVisible()": 0.0,
        "org.jfree.chart.plot$PiePlot#getSectionPaint(java.lang.Comparable)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#getShadowPaint()": 0.0,
        "org.jfree.chart.plot$PiePlot#getShadowXOffset()": 0.0,
        "org.jfree.chart.plot$PiePlot#getShadowYOffset()": 0.0,
        "org.jfree.chart.plot$PiePlot#getSimpleLabelOffset()": 0.0,
        "org.jfree.chart.plot$PiePlot#getSimpleLabels()": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#getStartAngle()": 2.943396226415094,
        "org.jfree.chart.plot$PiePlot#getToolTipGenerator()": 0.0,
        "org.jfree.chart.plot$PiePlot#getURLGenerator()": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)": 2.943396226415094,
        "org.jfree.chart.plot$PiePlot#isCircular()": 2.943396226415094,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable)": 2.943396226415094,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlinePaint(java.lang.Comparable,boolean)": 2.943396226415094,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable)": 2.943396226415094,
        "org.jfree.chart.plot$PiePlot#lookupSectionOutlineStroke(java.lang.Comparable,boolean)": 2.943396226415094,
        "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable)": 2.943396226415094,
        "org.jfree.chart.plot$PiePlot#lookupSectionPaint(java.lang.Comparable,boolean)": 2.943396226415094,
        "org.jfree.chart.plot$PiePlot#readObject(java.io.ObjectInputStream)": 5.886792452830188,
        "org.jfree.chart.plot$PiePlot#setAutoPopulateSectionOutlinePaint(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setAutoPopulateSectionOutlineStroke(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setAutoPopulateSectionPaint(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setBaseSectionOutlinePaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setBaseSectionOutlineStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setBaseSectionPaint(java.awt.Paint)": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot#setCircular(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setCircular(boolean,boolean)": 6.867924528301887,
        "org.jfree.chart.plot$PiePlot#setDataset(org.jfree.data.general.PieDataset)": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot#setDirection(org.jfree.chart.util.Rotation)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setExplodePercent(java.lang.Comparable,double)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setIgnoreNullValues(boolean)": 6.867924528301887,
        "org.jfree.chart.plot$PiePlot#setIgnoreZeroValues(boolean)": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot#setInteriorGap(double)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setLabelBackgroundPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setLabelDistributor(org.jfree.chart.plot.AbstractPieLabelDistributor)": 0.0,
        "org.jfree.chart.plot$PiePlot#setLabelFont(java.awt.Font)": -13.346153846153847,
        "org.jfree.chart.plot$PiePlot#setLabelGap(double)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)": -16.28846153846154,
        "org.jfree.chart.plot$PiePlot#setLabelLinkMargin(double)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setLabelLinkPaint(java.awt.Paint)": -13.346153846153847,
        "org.jfree.chart.plot$PiePlot#setLabelLinkStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setLabelLinkStyle(org.jfree.chart.plot.PieLabelLinkStyle)": -13.346153846153847,
        "org.jfree.chart.plot$PiePlot#setLabelLinksVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setLabelOutlinePaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setLabelOutlineStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setLabelPadding(org.jfree.chart.util.RectangleInsets)": 0.0,
        "org.jfree.chart.plot$PiePlot#setLabelPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setLabelShadowPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setLegendItemShape(java.awt.Shape)": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot#setLegendLabelGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)": 2.943396226415094,
        "org.jfree.chart.plot$PiePlot#setLegendLabelToolTipGenerator(org.jfree.chart.labels.PieSectionLabelGenerator)": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot#setLegendLabelURLGenerator(org.jfree.chart.urls.PieURLGenerator)": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot#setMaximumLabelWidth(double)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setMinimumArcAngleToDraw(double)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setPieIndex(int)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setSectionOutlinePaint(java.lang.Comparable,java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setSectionOutlineStroke(java.lang.Comparable,java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setSectionOutlinesVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setSectionPaint(java.lang.Comparable,java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setShadowPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setShadowXOffset(double)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setShadowYOffset(double)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setSimpleLabelOffset(org.jfree.chart.util.RectangleInsets)": 0.0,
        "org.jfree.chart.plot$PiePlot#setSimpleLabels(boolean)": 0.0,
        "org.jfree.chart.plot$PiePlot#setStartAngle(double)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot#setToolTipGenerator(org.jfree.chart.labels.PieToolTipGenerator)": -15.307692307692308,
        "org.jfree.chart.plot$PiePlot#setURLGenerator(org.jfree.chart.urls.PieURLGenerator)": 4.90566037735849,
        "org.jfree.chart.plot$PiePlot#writeObject(java.io.ObjectOutputStream)": 5.886792452830188,
        "org.jfree.chart.plot$PiePlot3D#PiePlot3D()": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot3D#PiePlot3D(org.jfree.data.general.PieDataset)": 5.886792452830188,
        "org.jfree.chart.plot$PiePlot3D#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 1.9622641509433962,
        "org.jfree.chart.plot$PiePlot3D#drawSide(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Arc2D,java.awt.geom.Area,java.awt.geom.Area,java.awt.Paint,java.awt.Paint,java.awt.Stroke,boolean,boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot3D#equals(java.lang.Object)": 3.9245283018867925,
        "org.jfree.chart.plot$PiePlot3D#getDarkerSides()": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot3D#getDepthFactor()": 0.0,
        "org.jfree.chart.plot$PiePlot3D#getPlotType()": 0.0,
        "org.jfree.chart.plot$PiePlot3D#isAngleAtBack(double)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot3D#isAngleAtFront(double)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot3D#setDarkerSides(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$PiePlot3D#setDepthFactor(double)": 0.9811320754716981,
        "org.jfree.chart.plot$Plot#<clinit>()": 256.99120234604106,
        "org.jfree.chart.plot$Plot#Plot()": 256.99120234604106,
        "org.jfree.chart.plot$Plot#addChangeListener(org.jfree.chart.event.PlotChangeListener)": 159.49019607843138,
        "org.jfree.chart.plot$Plot#axisChanged(org.jfree.chart.event.AxisChangeEvent)": 57.269230769230774,
        "org.jfree.chart.plot$Plot#clone()": 27.471698113207548,
        "org.jfree.chart.plot$Plot#createAndAddEntity(java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo,java.lang.String,java.lang.String)": 54.943396226415096,
        "org.jfree.chart.plot$Plot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 13.735849056603774,
        "org.jfree.chart.plot$Plot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 4.90566037735849,
        "org.jfree.chart.plot$Plot#drawBackgroundImage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 56.905660377358494,
        "org.jfree.chart.plot$Plot#drawNoDataMessage(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 10.79245283018868,
        "org.jfree.chart.plot$Plot#drawOutline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 56.905660377358494,
        "org.jfree.chart.plot$Plot#equals(java.lang.Object)": 77.50943396226415,
        "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 4.90566037735849,
        "org.jfree.chart.plot$Plot#fillBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)": 56.905660377358494,
        "org.jfree.chart.plot$Plot#fireChangeEvent()": 175.1764705882353,
        "org.jfree.chart.plot$Plot#getBackgroundAlpha()": 2.943396226415094,
        "org.jfree.chart.plot$Plot#getBackgroundImage()": 2.943396226415094,
        "org.jfree.chart.plot$Plot#getBackgroundImageAlignment()": 0.0,
        "org.jfree.chart.plot$Plot#getBackgroundImageAlpha()": 0.0,
        "org.jfree.chart.plot$Plot#getBackgroundPaint()": 78.11764705882354,
        "org.jfree.chart.plot$Plot#getDatasetGroup()": 0.0,
        "org.jfree.chart.plot$Plot#getDrawingSupplier()": 135.9607843137255,
        "org.jfree.chart.plot$Plot#getForegroundAlpha()": 59.84905660377358,
        "org.jfree.chart.plot$Plot#getInsets()": 62.79245283018868,
        "org.jfree.chart.plot$Plot#getLegendItems()": 0.9811320754716981,
        "org.jfree.chart.plot$Plot#getNoDataMessage()": 0.0,
        "org.jfree.chart.plot$Plot#getNoDataMessageFont()": 0.0,
        "org.jfree.chart.plot$Plot#getNoDataMessagePaint()": 0.0,
        "org.jfree.chart.plot$Plot#getOutlinePaint()": 2.943396226415094,
        "org.jfree.chart.plot$Plot#getOutlineStroke()": 2.943396226415094,
        "org.jfree.chart.plot$Plot#getParent()": 208.6041055718475,
        "org.jfree.chart.plot$Plot#getRectX(double,double,double,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.plot$Plot#getRectY(double,double,double,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.plot$Plot#getRootPlot()": 0.0,
        "org.jfree.chart.plot$Plot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$Plot#isNotify()": 9.81132075471698,
        "org.jfree.chart.plot$Plot#isOutlineVisible()": 37.283018867924525,
        "org.jfree.chart.plot$Plot#isSubplot()": 0.0,
        "org.jfree.chart.plot$Plot#markerChanged(org.jfree.chart.event.MarkerChangeEvent)": 0.0,
        "org.jfree.chart.plot$Plot#notifyListeners(org.jfree.chart.event.PlotChangeEvent)": 246.34604105571847,
        "org.jfree.chart.plot$Plot#readObject(java.io.ObjectInputStream)": 30.41509433962264,
        "org.jfree.chart.plot$Plot#removeChangeListener(org.jfree.chart.event.PlotChangeListener)": 3.9245283018867925,
        "org.jfree.chart.plot$Plot#resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)": 56.905660377358494,
        "org.jfree.chart.plot$Plot#resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)": 56.905660377358494,
        "org.jfree.chart.plot$Plot#setBackgroundAlpha(float)": 0.9811320754716981,
        "org.jfree.chart.plot$Plot#setBackgroundImage(java.awt.Image)": 0.9811320754716981,
        "org.jfree.chart.plot$Plot#setBackgroundImageAlignment(int)": 0.9811320754716981,
        "org.jfree.chart.plot$Plot#setBackgroundImageAlpha(float)": 0.9811320754716981,
        "org.jfree.chart.plot$Plot#setBackgroundPaint(java.awt.Paint)": 83.01960784313725,
        "org.jfree.chart.plot$Plot#setDatasetGroup(org.jfree.data.general.DatasetGroup)": 3.9245283018867925,
        "org.jfree.chart.plot$Plot#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)": 79.09803921568627,
        "org.jfree.chart.plot$Plot#setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier,boolean)": 0.0,
        "org.jfree.chart.plot$Plot#setForegroundAlpha(float)": 4.90566037735849,
        "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets)": 1.3653846153846132,
        "org.jfree.chart.plot$Plot#setInsets(org.jfree.chart.util.RectangleInsets,boolean)": 6.2692307692307665,
        "org.jfree.chart.plot$Plot#setNoDataMessage(java.lang.String)": 0.9811320754716981,
        "org.jfree.chart.plot$Plot#setNoDataMessageFont(java.awt.Font)": 0.9811320754716981,
        "org.jfree.chart.plot$Plot#setNoDataMessagePaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart.plot$Plot#setNotify(boolean)": 9.81132075471698,
        "org.jfree.chart.plot$Plot#setOutlinePaint(java.awt.Paint)": 79.09803921568627,
        "org.jfree.chart.plot$Plot#setOutlineStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.plot$Plot#setOutlineVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$Plot#setParent(org.jfree.chart.plot.Plot)": 19.62264150943396,
        "org.jfree.chart.plot$Plot#writeObject(java.io.ObjectOutputStream)": 30.41509433962264,
        "org.jfree.chart.plot$Plot#zoom(double)": 0.0,
        "org.jfree.chart.plot$PlotOrientation#<clinit>()": 198.92668621700878,
        "org.jfree.chart.plot$PlotOrientation#PlotOrientation(java.lang.String)": 198.92668621700878,
        "org.jfree.chart.plot$PlotOrientation#equals(java.lang.Object)": 17.660377358490567,
        "org.jfree.chart.plot$PlotOrientation#hashCode()": 0.0,
        "org.jfree.chart.plot$PlotOrientation#readResolve()": 16.67924528301887,
        "org.jfree.chart.plot$PlotOrientation#toString()": 17.660377358490567,
        "org.jfree.chart.plot$PlotRenderingInfo#PlotRenderingInfo(org.jfree.chart.ChartRenderingInfo)": 57.886792452830186,
        "org.jfree.chart.plot$PlotRenderingInfo#addSubplotInfo(org.jfree.chart.plot.PlotRenderingInfo)": 0.9811320754716981,
        "org.jfree.chart.plot$PlotRenderingInfo#clone()": 0.9811320754716981,
        "org.jfree.chart.plot$PlotRenderingInfo#equals(java.lang.Object)": 5.886792452830188,
        "org.jfree.chart.plot$PlotRenderingInfo#getDataArea()": 1.9622641509433962,
        "org.jfree.chart.plot$PlotRenderingInfo#getOwner()": 39.24528301886792,
        "org.jfree.chart.plot$PlotRenderingInfo#getPlotArea()": 0.9811320754716981,
        "org.jfree.chart.plot$PlotRenderingInfo#getSubplotCount()": 0.9811320754716981,
        "org.jfree.chart.plot$PlotRenderingInfo#getSubplotIndex(java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$PlotRenderingInfo#getSubplotInfo(int)": 0.9811320754716981,
        "org.jfree.chart.plot$PlotRenderingInfo#readObject(java.io.ObjectInputStream)": 2.943396226415094,
        "org.jfree.chart.plot$PlotRenderingInfo#setDataArea(java.awt.geom.Rectangle2D)": 41.20754716981132,
        "org.jfree.chart.plot$PlotRenderingInfo#setPlotArea(java.awt.geom.Rectangle2D)": 40.22641509433962,
        "org.jfree.chart.plot$PlotRenderingInfo#writeObject(java.io.ObjectOutputStream)": 2.943396226415094,
        "org.jfree.chart.plot$PlotState#PlotState()": 3.9245283018867925,
        "org.jfree.chart.plot$PlotState#getSharedAxisStates()": 3.9245283018867925,
        "org.jfree.chart.plot$PolarPlot#<clinit>()": 2.943396226415094,
        "org.jfree.chart.plot$PolarPlot#PolarPlot()": 2.943396226415094,
        "org.jfree.chart.plot$PolarPlot#PolarPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.PolarItemRenderer)": 2.943396226415094,
        "org.jfree.chart.plot$PolarPlot#addCornerTextItem(java.lang.String)": 1.9622641509433962,
        "org.jfree.chart.plot$PolarPlot#clearCornerTextItems()": 0.0,
        "org.jfree.chart.plot$PolarPlot#clone()": 0.9811320754716981,
        "org.jfree.chart.plot$PolarPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 0.0,
        "org.jfree.chart.plot$PolarPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$PolarPlot#drawAxis(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.plot$PolarPlot#drawCornerTextItems(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.plot$PolarPlot#drawGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List,java.util.List)": 0.0,
        "org.jfree.chart.plot$PolarPlot#equals(java.lang.Object)": 2.943396226415094,
        "org.jfree.chart.plot$PolarPlot#getAngleGridlinePaint()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getAngleGridlineStroke()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getAngleLabelFont()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getAngleLabelPaint()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getAngleTickUnit()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getAxis()": 0.9811320754716981,
        "org.jfree.chart.plot$PolarPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 1.9622641509433962,
        "org.jfree.chart.plot$PolarPlot#getDataset()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getLegendItems()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getMaxRadius()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getOrientation()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getPlotType()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getRadiusGridlinePaint()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getRadiusGridlineStroke()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getRenderer()": 0.0,
        "org.jfree.chart.plot$PolarPlot#getSeriesCount()": 0.0,
        "org.jfree.chart.plot$PolarPlot#isAngleGridlinesVisible()": 0.0,
        "org.jfree.chart.plot$PolarPlot#isAngleLabelsVisible()": 0.0,
        "org.jfree.chart.plot$PolarPlot#isDomainZoomable()": 0.0,
        "org.jfree.chart.plot$PolarPlot#isRadiusGridlinesVisible()": 0.0,
        "org.jfree.chart.plot$PolarPlot#isRangeZoomable()": 0.0,
        "org.jfree.chart.plot$PolarPlot#readObject(java.io.ObjectInputStream)": 0.9811320754716981,
        "org.jfree.chart.plot$PolarPlot#refreshAngleTicks()": 0.0,
        "org.jfree.chart.plot$PolarPlot#removeCornerTextItem(java.lang.String)": 0.0,
        "org.jfree.chart.plot$PolarPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$PolarPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)": 0.0,
        "org.jfree.chart.plot$PolarPlot#setAngleGridlinePaint(java.awt.Paint)": 1.9622641509433962,
        "org.jfree.chart.plot$PolarPlot#setAngleGridlineStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.plot$PolarPlot#setAngleGridlinesVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$PolarPlot#setAngleLabelFont(java.awt.Font)": 0.9811320754716981,
        "org.jfree.chart.plot$PolarPlot#setAngleLabelPaint(java.awt.Paint)": 1.9622641509433962,
        "org.jfree.chart.plot$PolarPlot#setAngleLabelsVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$PolarPlot#setAngleTickUnit(org.jfree.chart.axis.TickUnit)": 0.9811320754716981,
        "org.jfree.chart.plot$PolarPlot#setAxis(org.jfree.chart.axis.ValueAxis)": 0.9811320754716981,
        "org.jfree.chart.plot$PolarPlot#setDataset(org.jfree.data.xy.XYDataset)": 0.0,
        "org.jfree.chart.plot$PolarPlot#setRadiusGridlinePaint(java.awt.Paint)": 1.9622641509433962,
        "org.jfree.chart.plot$PolarPlot#setRadiusGridlineStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.plot$PolarPlot#setRadiusGridlinesVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$PolarPlot#setRenderer(org.jfree.chart.renderer.PolarItemRenderer)": 0.0,
        "org.jfree.chart.plot$PolarPlot#translateValueThetaRadiusToJava2D(double,double,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.plot$PolarPlot#writeObject(java.io.ObjectOutputStream)": 0.9811320754716981,
        "org.jfree.chart.plot$PolarPlot#zoom(double)": 0.0,
        "org.jfree.chart.plot$PolarPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$PolarPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$PolarPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 0.0,
        "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$PolarPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 0.0,
        "org.jfree.chart.plot$RingPlot#RingPlot()": 0.9811320754716981,
        "org.jfree.chart.plot$RingPlot#RingPlot(org.jfree.data.general.PieDataset)": 3.9245283018867925,
        "org.jfree.chart.plot$RingPlot#drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)": 0.0,
        "org.jfree.chart.plot$RingPlot#equals(java.lang.Object)": 3.9245283018867925,
        "org.jfree.chart.plot$RingPlot#extendLine(java.awt.geom.Line2D,double,double)": 0.0,
        "org.jfree.chart.plot$RingPlot#getInnerSeparatorExtension()": 0.0,
        "org.jfree.chart.plot$RingPlot#getLabelLinkDepth()": 0.0,
        "org.jfree.chart.plot$RingPlot#getOuterSeparatorExtension()": 0.0,
        "org.jfree.chart.plot$RingPlot#getSectionDepth()": 0.0,
        "org.jfree.chart.plot$RingPlot#getSeparatorPaint()": 0.0,
        "org.jfree.chart.plot$RingPlot#getSeparatorStroke()": 0.0,
        "org.jfree.chart.plot$RingPlot#getSeparatorsVisible()": 0.0,
        "org.jfree.chart.plot$RingPlot#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlot,java.lang.Integer,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$RingPlot#readObject(java.io.ObjectInputStream)": 0.9811320754716981,
        "org.jfree.chart.plot$RingPlot#setInnerSeparatorExtension(double)": 0.9811320754716981,
        "org.jfree.chart.plot$RingPlot#setOuterSeparatorExtension(double)": 0.9811320754716981,
        "org.jfree.chart.plot$RingPlot#setSectionDepth(double)": 0.9811320754716981,
        "org.jfree.chart.plot$RingPlot#setSeparatorPaint(java.awt.Paint)": 2.943396226415094,
        "org.jfree.chart.plot$RingPlot#setSeparatorStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.plot$RingPlot#setSeparatorsVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$RingPlot#writeObject(java.io.ObjectOutputStream)": 0.9811320754716981,
        "org.jfree.chart.plot$SeriesRenderingOrder#<clinit>()": 79.89442815249268,
        "org.jfree.chart.plot$SeriesRenderingOrder#SeriesRenderingOrder(java.lang.String)": 79.89442815249268,
        "org.jfree.chart.plot$SeriesRenderingOrder#equals(java.lang.Object)": 7.849056603773585,
        "org.jfree.chart.plot$SeriesRenderingOrder#hashCode()": 0.0,
        "org.jfree.chart.plot$SeriesRenderingOrder#readResolve()": 7.849056603773585,
        "org.jfree.chart.plot$SeriesRenderingOrder#toString()": 7.849056603773585,
        "org.jfree.chart.plot$ValueMarker#ValueMarker(double)": 32.37735849056604,
        "org.jfree.chart.plot$ValueMarker#ValueMarker(double,java.awt.Paint,java.awt.Stroke)": 0.0,
        "org.jfree.chart.plot$ValueMarker#ValueMarker(double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)": 0.9811320754716981,
        "org.jfree.chart.plot$ValueMarker#equals(java.lang.Object)": 21.58490566037736,
        "org.jfree.chart.plot$ValueMarker#getValue()": 4.90566037735849,
        "org.jfree.chart.plot$ValueMarker#setValue(double)": 1.9622641509433962,
        "org.jfree.chart.plot$XYPlot#<clinit>()": 79.89442815249268,
        "org.jfree.chart.plot$XYPlot#XYPlot()": 19.62264150943396,
        "org.jfree.chart.plot$XYPlot#XYPlot(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)": 79.89442815249268,
        "org.jfree.chart.plot$XYPlot#addAnnotation(org.jfree.chart.annotations.XYAnnotation)": 10.79245283018868,
        "org.jfree.chart.plot$XYPlot#addAnnotation(org.jfree.chart.annotations.XYAnnotation,boolean)": 10.79245283018868,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 2.943396226415094,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 2.943396226415094,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(org.jfree.chart.plot.Marker)": 1.9622641509433962,
        "org.jfree.chart.plot$XYPlot#addDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 2.943396226415094,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 3.9245283018867925,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 3.9245283018867925,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(org.jfree.chart.plot.Marker)": 2.943396226415094,
        "org.jfree.chart.plot$XYPlot#addRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 3.9245283018867925,
        "org.jfree.chart.plot$XYPlot#calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#calculateDomainAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)": 18.641509433962263,
        "org.jfree.chart.plot$XYPlot#canSelectByPoint()": 0.0,
        "org.jfree.chart.plot$XYPlot#canSelectByRegion()": 0.0,
        "org.jfree.chart.plot$XYPlot#checkAxisIndices(java.util.List)": 79.89442815249268,
        "org.jfree.chart.plot$XYPlot#clearAnnotations()": 0.0,
        "org.jfree.chart.plot$XYPlot#clearDomainAxes()": 0.0,
        "org.jfree.chart.plot$XYPlot#clearDomainMarkers()": 1.9622641509433962,
        "org.jfree.chart.plot$XYPlot#clearDomainMarkers(int)": 1.9622641509433962,
        "org.jfree.chart.plot$XYPlot#clearRangeAxes()": 0.0,
        "org.jfree.chart.plot$XYPlot#clearRangeMarkers()": 1.9622641509433962,
        "org.jfree.chart.plot$XYPlot#clearRangeMarkers(int)": 1.9622641509433962,
        "org.jfree.chart.plot$XYPlot#clearSelection()": 0.0,
        "org.jfree.chart.plot$XYPlot#clone()": 7.849056603773585,
        "org.jfree.chart.plot$XYPlot#configureDomainAxes()": 79.89442815249268,
        "org.jfree.chart.plot$XYPlot#configureRangeAxes()": 79.89442815249268,
        "org.jfree.chart.plot$XYPlot#convertToDataSpace(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.data.xy.XYDataset)": 0.0,
        "org.jfree.chart.plot$XYPlot#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 79.89442815249268,
        "org.jfree.chart.plot$XYPlot#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)": 18.641509433962263,
        "org.jfree.chart.plot$XYPlot#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#drawAxes(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo)": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#drawBackground(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#drawDomainCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$XYPlot#drawDomainGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#drawDomainMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#drawDomainTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#drawHorizontalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$XYPlot#drawQuadrants(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#drawRangeCrosshair(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation,double,org.jfree.chart.axis.ValueAxis,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$XYPlot#drawRangeGridlines(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#drawRangeMarkers(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.util.Layer)": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#drawRangeTickBands(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.util.List)": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#drawVerticalLine(java.awt.Graphics2D,java.awt.geom.Rectangle2D,double,java.awt.Stroke,java.awt.Paint)": 0.0,
        "org.jfree.chart.plot$XYPlot#drawZeroDomainBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#drawZeroRangeBaseline(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#equals(java.lang.Object)": -1.5769230769230766,
        "org.jfree.chart.plot$XYPlot#findSelectionStateForDataset(org.jfree.data.xy.XYDataset,java.lang.Object)": 0.0,
        "org.jfree.chart.plot$XYPlot#getAnnotations()": -1.5769230769230766,
        "org.jfree.chart.plot$XYPlot#getAxisOffset()": 0.0,
        "org.jfree.chart.plot$XYPlot#getDataRange(org.jfree.chart.axis.ValueAxis)": 62.47507331378299,
        "org.jfree.chart.plot$XYPlot#getDataset()": 0.0,
        "org.jfree.chart.plot$XYPlot#getDataset(int)": 79.89442815249268,
        "org.jfree.chart.plot$XYPlot#getDatasetCount()": 19.019230769230766,
        "org.jfree.chart.plot$XYPlot#getDatasetRenderingOrder()": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#getDatasetsMappedToDomainAxis(java.lang.Integer)": 61.50733137829912,
        "org.jfree.chart.plot$XYPlot#getDatasetsMappedToRangeAxis(java.lang.Integer)": 32.75,
        "org.jfree.chart.plot$XYPlot#getDomainAxis()": 27.471698113207548,
        "org.jfree.chart.plot$XYPlot#getDomainAxis(int)": 29.807692307692307,
        "org.jfree.chart.plot$XYPlot#getDomainAxisCount()": -2.5576923076923066,
        "org.jfree.chart.plot$XYPlot#getDomainAxisEdge()": 18.641509433962263,
        "org.jfree.chart.plot$XYPlot#getDomainAxisEdge(int)": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#getDomainAxisForDataset(int)": 19.019230769230766,
        "org.jfree.chart.plot$XYPlot#getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)": 62.47507331378299,
        "org.jfree.chart.plot$XYPlot#getDomainAxisLocation()": 18.641509433962263,
        "org.jfree.chart.plot$XYPlot#getDomainAxisLocation(int)": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#getDomainCrosshairPaint()": 0.0,
        "org.jfree.chart.plot$XYPlot#getDomainCrosshairStroke()": 0.0,
        "org.jfree.chart.plot$XYPlot#getDomainCrosshairValue()": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#getDomainGridlinePaint()": 16.67924528301887,
        "org.jfree.chart.plot$XYPlot#getDomainGridlineStroke()": 16.67924528301887,
        "org.jfree.chart.plot$XYPlot#getDomainMarkers(int,org.jfree.chart.util.Layer)": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#getDomainMarkers(org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$XYPlot#getDomainMinorGridlinePaint()": 0.0,
        "org.jfree.chart.plot$XYPlot#getDomainMinorGridlineStroke()": 0.0,
        "org.jfree.chart.plot$XYPlot#getDomainTickBandPaint()": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#getDomainZeroBaselinePaint()": 0.0,
        "org.jfree.chart.plot$XYPlot#getDomainZeroBaselineStroke()": 0.0,
        "org.jfree.chart.plot$XYPlot#getFixedDomainAxisSpace()": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#getFixedLegendItems()": 1.9622641509433962,
        "org.jfree.chart.plot$XYPlot#getFixedRangeAxisSpace()": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#getIndexOf(org.jfree.chart.renderer.xy.XYItemRenderer)": 15.096153846153847,
        "org.jfree.chart.plot$XYPlot#getLegendItems()": 18.641509433962263,
        "org.jfree.chart.plot$XYPlot#getOrientation()": 29.433962264150942,
        "org.jfree.chart.plot$XYPlot#getPlotType()": 0.0,
        "org.jfree.chart.plot$XYPlot#getQuadrantOrigin()": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#getQuadrantPaint(int)": 0.0,
        "org.jfree.chart.plot$XYPlot#getRangeAxis()": 31.39622641509434,
        "org.jfree.chart.plot$XYPlot#getRangeAxis(int)": 17.057692307692307,
        "org.jfree.chart.plot$XYPlot#getRangeAxisCount()": -2.5576923076923066,
        "org.jfree.chart.plot$XYPlot#getRangeAxisEdge()": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#getRangeAxisEdge(int)": 18.641509433962263,
        "org.jfree.chart.plot$XYPlot#getRangeAxisForDataset(int)": 18.641509433962263,
        "org.jfree.chart.plot$XYPlot#getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)": 62.47507331378299,
        "org.jfree.chart.plot$XYPlot#getRangeAxisLocation()": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#getRangeAxisLocation(int)": 18.641509433962263,
        "org.jfree.chart.plot$XYPlot#getRangeCrosshairPaint()": 0.0,
        "org.jfree.chart.plot$XYPlot#getRangeCrosshairStroke()": 0.0,
        "org.jfree.chart.plot$XYPlot#getRangeCrosshairValue()": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#getRangeGridlinePaint()": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#getRangeGridlineStroke()": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#getRangeMarkers(int,org.jfree.chart.util.Layer)": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#getRangeMarkers(org.jfree.chart.util.Layer)": 0.0,
        "org.jfree.chart.plot$XYPlot#getRangeMinorGridlinePaint()": 0.0,
        "org.jfree.chart.plot$XYPlot#getRangeMinorGridlineStroke()": 0.0,
        "org.jfree.chart.plot$XYPlot#getRangeTickBandPaint()": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#getRangeZeroBaselinePaint()": 0.0,
        "org.jfree.chart.plot$XYPlot#getRangeZeroBaselineStroke()": 0.0,
        "org.jfree.chart.plot$XYPlot#getRenderer()": 28.60410557184751,
        "org.jfree.chart.plot$XYPlot#getRenderer(int)": 52.79765395894428,
        "org.jfree.chart.plot$XYPlot#getRendererCount()": 25.884615384615387,
        "org.jfree.chart.plot$XYPlot#getRendererForDataset(org.jfree.data.xy.XYDataset)": 56.66862170087976,
        "org.jfree.chart.plot$XYPlot#getSeriesCount()": 0.0,
        "org.jfree.chart.plot$XYPlot#getSeriesRenderingOrder()": 13.735849056603774,
        "org.jfree.chart.plot$XYPlot#getWeight()": 1.9622641509433962,
        "org.jfree.chart.plot$XYPlot#handleClick(int,int,org.jfree.chart.plot.PlotRenderingInfo)": 0.0,
        "org.jfree.chart.plot$XYPlot#indexOf(org.jfree.data.xy.XYDataset)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#isDomainCrosshairLockedOnData()": 0.0,
        "org.jfree.chart.plot$XYPlot#isDomainCrosshairVisible()": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#isDomainGridlinesVisible()": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#isDomainMinorGridlinesVisible()": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#isDomainPannable()": 0.0,
        "org.jfree.chart.plot$XYPlot#isDomainZeroBaselineVisible()": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#isDomainZoomable()": 10.79245283018868,
        "org.jfree.chart.plot$XYPlot#isRangeCrosshairLockedOnData()": 0.0,
        "org.jfree.chart.plot$XYPlot#isRangeCrosshairVisible()": 18.641509433962263,
        "org.jfree.chart.plot$XYPlot#isRangeGridlinesVisible()": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#isRangeMinorGridlinesVisible()": 14.716981132075471,
        "org.jfree.chart.plot$XYPlot#isRangePannable()": 0.0,
        "org.jfree.chart.plot$XYPlot#isRangeZeroBaselineVisible()": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#isRangeZoomable()": 10.79245283018868,
        "org.jfree.chart.plot$XYPlot#mapDatasetToDomainAxes(int,java.util.List)": 79.89442815249268,
        "org.jfree.chart.plot$XYPlot#mapDatasetToDomainAxis(int,int)": 79.89442815249268,
        "org.jfree.chart.plot$XYPlot#mapDatasetToRangeAxes(int,java.util.List)": 52.36538461538461,
        "org.jfree.chart.plot$XYPlot#mapDatasetToRangeAxis(int,int)": 52.36538461538461,
        "org.jfree.chart.plot$XYPlot#panDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$XYPlot#panRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.0,
        "org.jfree.chart.plot$XYPlot#readObject(java.io.ObjectInputStream)": 7.849056603773585,
        "org.jfree.chart.plot$XYPlot#removeAnnotation(org.jfree.chart.annotations.XYAnnotation)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#removeAnnotation(org.jfree.chart.annotations.XYAnnotation,boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(org.jfree.chart.plot.Marker)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#removeDomainMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(int,org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer,boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(org.jfree.chart.plot.Marker)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#removeRangeMarker(org.jfree.chart.plot.Marker,org.jfree.chart.util.Layer)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#render(java.awt.Graphics2D,java.awt.geom.Rectangle2D,int,org.jfree.chart.plot.PlotRenderingInfo,org.jfree.chart.plot.CrosshairState)": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#rendererChanged(org.jfree.chart.event.RendererChangeEvent)": -0.5961538461538467,
        "org.jfree.chart.plot$XYPlot#select(double,double,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)": 0.0,
        "org.jfree.chart.plot$XYPlot#select(java.awt.geom.GeneralPath,java.awt.geom.Rectangle2D,org.jfree.chart.RenderingSource)": 0.0,
        "org.jfree.chart.plot$XYPlot#setAxisOffset(org.jfree.chart.util.RectangleInsets)": -1.5769230769230766,
        "org.jfree.chart.plot$XYPlot#setDataset(int,org.jfree.data.xy.XYDataset)": 13.735849056603774,
        "org.jfree.chart.plot$XYPlot#setDataset(org.jfree.data.xy.XYDataset)": 1.9622641509433962,
        "org.jfree.chart.plot$XYPlot#setDatasetRenderingOrder(org.jfree.chart.plot.DatasetRenderingOrder)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxes(org.jfree.chart.axis.ValueAxis[])": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis)": 11.773584905660377,
        "org.jfree.chart.plot$XYPlot#setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)": 11.773584905660377,
        "org.jfree.chart.plot$XYPlot#setDomainAxis(org.jfree.chart.axis.ValueAxis)": 5.886792452830188,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 1.9622641509433962,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 1.9622641509433962,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#setDomainAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairLockedOnData(boolean)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairPaint(java.awt.Paint)": -2.5576923076923066,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairStroke(java.awt.Stroke)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairValue(double,boolean)": 17.660377358490567,
        "org.jfree.chart.plot$XYPlot#setDomainCrosshairVisible(boolean)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainGridlinePaint(java.awt.Paint)": -1.5769230769230766,
        "org.jfree.chart.plot$XYPlot#setDomainGridlineStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#setDomainGridlinesVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#setDomainMinorGridlinePaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#setDomainMinorGridlineStroke(java.awt.Stroke)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainMinorGridlinesVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#setDomainPannable(boolean)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainTickBandPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#setDomainZeroBaselinePaint(java.awt.Paint)": -2.5576923076923066,
        "org.jfree.chart.plot$XYPlot#setDomainZeroBaselineStroke(java.awt.Stroke)": 0.0,
        "org.jfree.chart.plot$XYPlot#setDomainZeroBaselineVisible(boolean)": 0.0,
        "org.jfree.chart.plot$XYPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace)": 0.0,
        "org.jfree.chart.plot$XYPlot#setFixedDomainAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#setFixedLegendItems(org.jfree.chart.LegendItemCollection)": 1.9622641509433962,
        "org.jfree.chart.plot$XYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace)": 0.0,
        "org.jfree.chart.plot$XYPlot#setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#setOrientation(org.jfree.chart.plot.PlotOrientation)": 6.2692307692307665,
        "org.jfree.chart.plot$XYPlot#setQuadrantOrigin(java.awt.geom.Point2D)": 1.9622641509433962,
        "org.jfree.chart.plot$XYPlot#setQuadrantPaint(int,java.awt.Paint)": 1.9622641509433962,
        "org.jfree.chart.plot$XYPlot#setRangeAxes(org.jfree.chart.axis.ValueAxis[])": 0.0,
        "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis)": 7.849056603773585,
        "org.jfree.chart.plot$XYPlot#setRangeAxis(int,org.jfree.chart.axis.ValueAxis,boolean)": 7.849056603773585,
        "org.jfree.chart.plot$XYPlot#setRangeAxis(org.jfree.chart.axis.ValueAxis)": 10.79245283018868,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation)": 1.9622641509433962,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)": 9.81132075471698,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation)": 8.830188679245284,
        "org.jfree.chart.plot$XYPlot#setRangeAxisLocation(org.jfree.chart.axis.AxisLocation,boolean)": 0.0,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairLockedOnData(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairPaint(java.awt.Paint)": -1.5769230769230766,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairValue(double,boolean)": 18.641509433962263,
        "org.jfree.chart.plot$XYPlot#setRangeCrosshairVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#setRangeGridlinePaint(java.awt.Paint)": -1.5769230769230766,
        "org.jfree.chart.plot$XYPlot#setRangeGridlineStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#setRangeGridlinesVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#setRangeMinorGridlinePaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#setRangeMinorGridlineStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#setRangeMinorGridlinesVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#setRangePannable(boolean)": 0.0,
        "org.jfree.chart.plot$XYPlot#setRangeTickBandPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#setRangeZeroBaselinePaint(java.awt.Paint)": -1.5769230769230766,
        "org.jfree.chart.plot$XYPlot#setRangeZeroBaselineStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#setRangeZeroBaselineVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer)": -17.26923076923077,
        "org.jfree.chart.plot$XYPlot#setRenderer(int,org.jfree.chart.renderer.xy.XYItemRenderer,boolean)": -17.26923076923077,
        "org.jfree.chart.plot$XYPlot#setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)": -23.153846153846153,
        "org.jfree.chart.plot$XYPlot#setRenderers(org.jfree.chart.renderer.xy.XYItemRenderer[])": 0.0,
        "org.jfree.chart.plot$XYPlot#setSeriesRenderingOrder(org.jfree.chart.plot.SeriesRenderingOrder)": 0.0,
        "org.jfree.chart.plot$XYPlot#setWeight(int)": 10.79245283018868,
        "org.jfree.chart.plot$XYPlot#writeObject(java.io.ObjectOutputStream)": 7.849056603773585,
        "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1.9622641509433962,
        "org.jfree.chart.plot$XYPlot#zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 5.886792452830188,
        "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 0.9811320754716981,
        "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)": 1.9622641509433962,
        "org.jfree.chart.plot$XYPlot#zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D,boolean)": 5.886792452830188,
        "org.jfree.chart.renderer$AbstractRenderer#<clinit>()": 461.18475073313783,
        "org.jfree.chart.renderer$AbstractRenderer#AbstractRenderer()": 444.7142857142857,
        "org.jfree.chart.renderer$AbstractRenderer#addChangeListener(org.jfree.chart.event.RendererChangeListener)": 137.69230769230768,
        "org.jfree.chart.renderer$AbstractRenderer#calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,double,double,org.jfree.chart.plot.PlotOrientation)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#clearSeriesPaints(boolean)": 47.46153846153847,
        "org.jfree.chart.renderer$AbstractRenderer#clearSeriesStrokes(boolean)": 47.46153846153847,
        "org.jfree.chart.renderer$AbstractRenderer#clone()": 63.77358490566038,
        "org.jfree.chart.renderer$AbstractRenderer#equals(java.lang.Object)": 220.75471698113208,
        "org.jfree.chart.renderer$AbstractRenderer#fireChangeEvent()": 354.7142857142857,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesFillPaint()": 0.9811320754716981,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesOutlinePaint()": 0.9811320754716981,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesOutlineStroke()": 0.9811320754716981,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesPaint()": 48.44230769230769,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesShape()": 0.9811320754716981,
        "org.jfree.chart.renderer$AbstractRenderer#getAutoPopulateSeriesStroke()": 48.44230769230769,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseCreateEntities()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseFillPaint()": 0.9811320754716981,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseItemLabelFont()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseItemLabelPaint()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseItemLabelsVisible()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseLegendShape()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseLegendTextFont()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseLegendTextPaint()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseNegativeItemLabelPosition()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseOutlinePaint()": 0.9811320754716981,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseOutlineStroke()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBasePaint()": 0.9811320754716981,
        "org.jfree.chart.renderer$AbstractRenderer#getBasePositiveItemLabelPosition()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseSeriesVisible()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseSeriesVisibleInLegend()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseShape()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getBaseStroke()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getDataBoundsIncludesVisibleSeriesOnly()": 99.44230769230768,
        "org.jfree.chart.renderer$AbstractRenderer#getDefaultEntityRadius()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemCreateEntity(int,int,boolean)": 2.943396226415094,
        "org.jfree.chart.renderer$AbstractRenderer#getItemFillPaint(int,int,boolean)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemLabelAnchorOffset()": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemLabelFont(int,int,boolean)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemLabelPaint(int,int,boolean)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getItemOutlinePaint(int,int,boolean)": 4.90566037735849,
        "org.jfree.chart.renderer$AbstractRenderer#getItemOutlineStroke(int,int,boolean)": 8.830188679245284,
        "org.jfree.chart.renderer$AbstractRenderer#getItemPaint(int,int,boolean)": 44.15094339622642,
        "org.jfree.chart.renderer$AbstractRenderer#getItemShape(int,int,boolean)": 5.886792452830188,
        "org.jfree.chart.renderer$AbstractRenderer#getItemStroke(int,int,boolean)": 30.41509433962264,
        "org.jfree.chart.renderer$AbstractRenderer#getItemVisible(int,int)": 32.37735849056604,
        "org.jfree.chart.renderer$AbstractRenderer#getLegendShape(int)": 54.943396226415096,
        "org.jfree.chart.renderer$AbstractRenderer#getLegendTextFont(int)": 64.75471698113208,
        "org.jfree.chart.renderer$AbstractRenderer#getLegendTextPaint(int)": 64.75471698113208,
        "org.jfree.chart.renderer$AbstractRenderer#getNegativeItemLabelPosition(int,int,boolean)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getPositiveItemLabelPosition(int,int,boolean)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesCreateEntities(int)": 2.943396226415094,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesFillPaint(int)": 0.9811320754716981,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesItemLabelFont(int)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesItemLabelPaint(int)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesItemLabelsVisible(int)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesNegativeItemLabelPosition(int)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesOutlinePaint(int)": 43.16981132075472,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesOutlineStroke(int)": 52.9811320754717,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesPaint(int)": 66.71698113207547,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesPositiveItemLabelPosition(int)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesShape(int)": 19.62264150943396,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesStroke(int)": 37.283018867924525,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesVisible(int)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getSeriesVisibleInLegend(int)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#getTreatLegendShapeAsLine()": 1.9622641509433962,
        "org.jfree.chart.renderer$AbstractRenderer#hasListener(java.util.EventListener)": 2.943396226415094,
        "org.jfree.chart.renderer$AbstractRenderer#hashCode()": 45.132075471698116,
        "org.jfree.chart.renderer$AbstractRenderer#isItemLabelVisible(int,int,boolean)": 13.735849056603774,
        "org.jfree.chart.renderer$AbstractRenderer#isSeriesItemLabelsVisible(int)": 13.735849056603774,
        "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisible(int)": 110.86792452830188,
        "org.jfree.chart.renderer$AbstractRenderer#isSeriesVisibleInLegend(int)": 55.924528301886795,
        "org.jfree.chart.renderer$AbstractRenderer#lookupLegendShape(int)": 54.943396226415096,
        "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextFont(int)": 64.75471698113208,
        "org.jfree.chart.renderer$AbstractRenderer#lookupLegendTextPaint(int)": 64.75471698113208,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesFillPaint(int)": 0.9811320754716981,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlinePaint(int)": 43.16981132075472,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesOutlineStroke(int)": 52.9811320754717,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesPaint(int)": 66.71698113207547,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesShape(int)": 19.62264150943396,
        "org.jfree.chart.renderer$AbstractRenderer#lookupSeriesStroke(int)": 37.283018867924525,
        "org.jfree.chart.renderer$AbstractRenderer#notifyListeners(org.jfree.chart.event.RendererChangeEvent)": 354.7142857142857,
        "org.jfree.chart.renderer$AbstractRenderer#readObject(java.io.ObjectInputStream)": 64.75471698113208,
        "org.jfree.chart.renderer$AbstractRenderer#removeChangeListener(org.jfree.chart.event.RendererChangeListener)": -26.096153846153847,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesFillPaint(boolean)": 0.9811320754716981,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesOutlinePaint(boolean)": 0.9811320754716981,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesOutlineStroke(boolean)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesPaint(boolean)": 0.9811320754716981,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesShape(boolean)": 2.943396226415094,
        "org.jfree.chart.renderer$AbstractRenderer#setAutoPopulateSeriesStroke(boolean)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseCreateEntities(boolean)": 1.9622641509433962,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseCreateEntities(boolean,boolean)": 1.9622641509433962,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseFillPaint(java.awt.Paint)": 1.9622641509433962,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseFillPaint(java.awt.Paint,boolean)": 1.9622641509433962,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelFont(java.awt.Font)": 49.42307692307692,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelFont(java.awt.Font,boolean)": 49.42307692307692,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelPaint(java.awt.Paint)": 49.42307692307692,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelPaint(java.awt.Paint,boolean)": 49.42307692307692,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelsVisible(boolean)": 2.943396226415094,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseItemLabelsVisible(boolean,boolean)": 2.943396226415094,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseLegendShape(java.awt.Shape)": 194.26415094339623,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseLegendTextFont(java.awt.Font)": 2.943396226415094,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseLegendTextPaint(java.awt.Paint)": 3.9245283018867925,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition)": 72.60377358490567,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)": 72.60377358490567,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlinePaint(java.awt.Paint)": 10.79245283018868,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlinePaint(java.awt.Paint,boolean)": 10.79245283018868,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlineStroke(java.awt.Stroke)": 2.943396226415094,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseOutlineStroke(java.awt.Stroke,boolean)": 2.943396226415094,
        "org.jfree.chart.renderer$AbstractRenderer#setBasePaint(java.awt.Paint)": 4.90566037735849,
        "org.jfree.chart.renderer$AbstractRenderer#setBasePaint(java.awt.Paint,boolean)": 4.90566037735849,
        "org.jfree.chart.renderer$AbstractRenderer#setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition)": 72.60377358490567,
        "org.jfree.chart.renderer$AbstractRenderer#setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)": 72.60377358490567,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisible(boolean)": 1.9622641509433962,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisible(boolean,boolean)": 1.9622641509433962,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisibleInLegend(boolean)": 1.9622641509433962,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseSeriesVisibleInLegend(boolean,boolean)": 1.9622641509433962,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseShape(java.awt.Shape)": 5.886792452830188,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseShape(java.awt.Shape,boolean)": 5.886792452830188,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseStroke(java.awt.Stroke)": 2.943396226415094,
        "org.jfree.chart.renderer$AbstractRenderer#setBaseStroke(java.awt.Stroke,boolean)": 2.943396226415094,
        "org.jfree.chart.renderer$AbstractRenderer#setDataBoundsIncludesVisibleSeriesOnly(boolean)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#setDefaultEntityRadius(int)": 1.9622641509433962,
        "org.jfree.chart.renderer$AbstractRenderer#setItemLabelAnchorOffset(double)": 0.9811320754716981,
        "org.jfree.chart.renderer$AbstractRenderer#setLegendShape(int,java.awt.Shape)": 1.9622641509433962,
        "org.jfree.chart.renderer$AbstractRenderer#setLegendTextFont(int,java.awt.Font)": 1.9622641509433962,
        "org.jfree.chart.renderer$AbstractRenderer#setLegendTextPaint(int,java.awt.Paint)": 1.9622641509433962,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesCreateEntities(int,java.lang.Boolean)": 1.9622641509433962,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesCreateEntities(int,java.lang.Boolean,boolean)": 1.9622641509433962,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesFillPaint(int,java.awt.Paint)": 3.9245283018867925,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesFillPaint(int,java.awt.Paint,boolean)": 4.90566037735849,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelFont(int,java.awt.Font)": 1.9622641509433962,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelFont(int,java.awt.Font,boolean)": 1.9622641509433962,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelPaint(int,java.awt.Paint)": 2.943396226415094,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelPaint(int,java.awt.Paint,boolean)": 2.943396226415094,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelsVisible(int,boolean)": 0.9811320754716981,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelsVisible(int,java.lang.Boolean)": 3.9245283018867925,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesItemLabelsVisible(int,java.lang.Boolean,boolean)": 3.9245283018867925,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesNegativeItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition)": 2.943396226415094,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesNegativeItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition,boolean)": 2.943396226415094,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlinePaint(int,java.awt.Paint)": 3.9245283018867925,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlinePaint(int,java.awt.Paint,boolean)": 4.90566037735849,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlineStroke(int,java.awt.Stroke)": 3.9245283018867925,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesOutlineStroke(int,java.awt.Stroke,boolean)": 3.9245283018867925,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesPaint(int,java.awt.Paint)": 6.867924528301887,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesPaint(int,java.awt.Paint,boolean)": 73.58490566037736,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesPositiveItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition)": 2.943396226415094,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesPositiveItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition,boolean)": 2.943396226415094,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesShape(int,java.awt.Shape)": 2.943396226415094,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesShape(int,java.awt.Shape,boolean)": 22.566037735849058,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesStroke(int,java.awt.Stroke)": 3.9245283018867925,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesStroke(int,java.awt.Stroke,boolean)": 41.20754716981132,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisible(int,java.lang.Boolean)": 2.943396226415094,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisible(int,java.lang.Boolean,boolean)": 2.943396226415094,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisibleInLegend(int,java.lang.Boolean)": 4.90566037735849,
        "org.jfree.chart.renderer$AbstractRenderer#setSeriesVisibleInLegend(int,java.lang.Boolean,boolean)": 4.90566037735849,
        "org.jfree.chart.renderer$AbstractRenderer#setTreatLegendShapeAsLine(boolean)": 0.0,
        "org.jfree.chart.renderer$AbstractRenderer#writeObject(java.io.ObjectOutputStream)": 64.75471698113208,
        "org.jfree.chart.renderer$RendererState#RendererState(org.jfree.chart.plot.PlotRenderingInfo)": 48.075471698113205,
        "org.jfree.chart.renderer$RendererState#getEntityCollection()": 33.35849056603774,
        "org.jfree.chart.renderer$RendererState#getInfo()": 16.67924528301887,
        "org.jfree.chart.renderer$RendererUtilities#RendererUtilities()": 0.0,
        "org.jfree.chart.renderer$RendererUtilities#findLiveItems(org.jfree.data.xy.XYDataset,int,double,double)": 9.81132075471698,
        "org.jfree.chart.renderer$RendererUtilities#findLiveItemsLowerBound(org.jfree.data.xy.XYDataset,int,double,double)": 12.754716981132075,
        "org.jfree.chart.renderer$RendererUtilities#findLiveItemsUpperBound(org.jfree.data.xy.XYDataset,int,double,double)": 12.754716981132075,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#AbstractCategoryItemRenderer()": 238.41509433962264,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addAnnotation(org.jfree.chart.annotations.CategoryAnnotation,org.jfree.chart.util.Layer)": 0.9811320754716981,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean)": 2.943396226415094,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double)": 2.943396226415094,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#calculateDomainMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#calculateRangeMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#clone()": 27.471698113207548,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#createState(org.jfree.chart.plot.PlotRenderingInfo)": 31.39622641509434,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)": 37.283018867924525,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawBackground(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)": 34.339622641509436,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.plot.CategoryMarker,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double,boolean)": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawOutline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)": 34.339622641509436,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)": 35.320754716981135,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)": 1.9622641509433962,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#equals(java.lang.Object)": 100.0754716981132,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset)": 71.62264150943396,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 76.52830188679245,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getBaseItemLabelGenerator()": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getBaseToolTipGenerator()": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getBaseURLGenerator()": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getColumnCount()": 29.433962264150942,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getDomainAxis(org.jfree.chart.plot.CategoryPlot,int)": 23.547169811320753,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getDrawingSupplier()": 44.15094339622642,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getItemLabelGenerator(int,int,boolean)": 15.69811320754717,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getItemMiddle(java.lang.Comparable,java.lang.Comparable,org.jfree.data.category.CategoryDataset,org.jfree.chart.axis.CategoryAxis,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItem(int,int)": 2.943396226415094,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItemLabelGenerator()": 39.24528301886792,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItemToolTipGenerator()": 39.24528301886792,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItemURLGenerator()": 39.24528301886792,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getLegendItems()": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getPassCount()": 25.50943396226415,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getPlot()": 44.15094339622642,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getRangeAxis(org.jfree.chart.plot.CategoryPlot,int)": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getRowCount()": 10.79245283018868,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getSeriesItemLabelGenerator(int)": 0.9811320754716981,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getSeriesToolTipGenerator(int)": 12.754716981132075,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getSeriesURLGenerator(int)": 0.9811320754716981,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getToolTipGenerator(int,int,boolean)": 12.754716981132075,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#getURLGenerator(int,int,boolean)": 12.754716981132075,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#hashCode()": 19.62264150943396,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)": 31.39622641509434,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#removeAnnotation(org.jfree.chart.annotations.CategoryAnnotation)": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#removeAnnotations()": 0.0,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseItemLabelGenerator(org.jfree.chart.labels.CategoryItemLabelGenerator)": 4.90566037735849,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseItemLabelGenerator(org.jfree.chart.labels.CategoryItemLabelGenerator,boolean)": 4.90566037735849,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator)": 51.0188679245283,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.CategoryToolTipGenerator,boolean)": 51.0188679245283,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator)": 41.20754716981132,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.CategoryURLGenerator,boolean)": 41.20754716981132,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setLegendItemLabelGenerator(org.jfree.chart.labels.CategorySeriesLabelGenerator)": 1.9622641509433962,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setLegendItemToolTipGenerator(org.jfree.chart.labels.CategorySeriesLabelGenerator)": 1.9622641509433962,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setLegendItemURLGenerator(org.jfree.chart.labels.CategorySeriesLabelGenerator)": 1.9622641509433962,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setPlot(org.jfree.chart.plot.CategoryPlot)": 99.09433962264151,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesItemLabelGenerator(int,org.jfree.chart.labels.CategoryItemLabelGenerator)": 3.9245283018867925,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesItemLabelGenerator(int,org.jfree.chart.labels.CategoryItemLabelGenerator,boolean)": 3.9245283018867925,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesToolTipGenerator(int,org.jfree.chart.labels.CategoryToolTipGenerator)": 10.79245283018868,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesToolTipGenerator(int,org.jfree.chart.labels.CategoryToolTipGenerator,boolean)": 10.79245283018868,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesURLGenerator(int,org.jfree.chart.urls.CategoryURLGenerator)": 11.773584905660377,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#setSeriesURLGenerator(int,org.jfree.chart.urls.CategoryURLGenerator,boolean)": 11.773584905660377,
        "org.jfree.chart.renderer.category$AbstractCategoryItemRenderer#updateCrosshairValues(org.jfree.chart.plot.CategoryCrosshairState,java.lang.Comparable,java.lang.Comparable,double,int,double,double,org.jfree.chart.plot.PlotOrientation)": 5.886792452830188,
        "org.jfree.chart.renderer.category$BarRenderer#<clinit>()": 199.89442815249265,
        "org.jfree.chart.renderer.category$BarRenderer#BarRenderer()": 138.33962264150944,
        "org.jfree.chart.renderer.category$BarRenderer#calculateBarL0L1(double)": 2.943396226415094,
        "org.jfree.chart.renderer.category$BarRenderer#calculateBarW0(org.jfree.chart.plot.CategoryPlot,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.renderer.category.CategoryItemRendererState,int,int)": 3.9245283018867925,
        "org.jfree.chart.renderer.category$BarRenderer#calculateBarWidth(org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,int,org.jfree.chart.renderer.category.CategoryItemRendererState)": 10.79245283018868,
        "org.jfree.chart.renderer.category$BarRenderer#calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)": 0.0,
        "org.jfree.chart.renderer.category$BarRenderer#calculateSeriesWidth(double,org.jfree.chart.axis.CategoryAxis,int,int)": 3.9245283018867925,
        "org.jfree.chart.renderer.category$BarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)": 1.9622641509433962,
        "org.jfree.chart.renderer.category$BarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.data.category.CategoryDataset,int,int,boolean,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)": 0.0,
        "org.jfree.chart.renderer.category$BarRenderer#equals(java.lang.Object)": 54.943396226415096,
        "org.jfree.chart.renderer.category$BarRenderer#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 44.15094339622642,
        "org.jfree.chart.renderer.category$BarRenderer#getBarPainter()": 3.9245283018867925,
        "org.jfree.chart.renderer.category$BarRenderer#getBase()": 5.886792452830188,
        "org.jfree.chart.renderer.category$BarRenderer#getDefaultBarPainter()": 138.33962264150944,
        "org.jfree.chart.renderer.category$BarRenderer#getDefaultShadowsVisible()": 138.33962264150944,
        "org.jfree.chart.renderer.category$BarRenderer#getGradientPaintTransformer()": 6.867924528301887,
        "org.jfree.chart.renderer.category$BarRenderer#getIncludeBaseInRange()": 0.0,
        "org.jfree.chart.renderer.category$BarRenderer#getItemMargin()": 5.886792452830188,
        "org.jfree.chart.renderer.category$BarRenderer#getLegendItem(int,int)": 17.660377358490567,
        "org.jfree.chart.renderer.category$BarRenderer#getLowerClip()": 8.830188679245284,
        "org.jfree.chart.renderer.category$BarRenderer#getMaximumBarWidth()": 14.716981132075471,
        "org.jfree.chart.renderer.category$BarRenderer#getMinimumBarLength()": 4.90566037735849,
        "org.jfree.chart.renderer.category$BarRenderer#getNegativeItemLabelPositionFallback()": 0.0,
        "org.jfree.chart.renderer.category$BarRenderer#getPositiveItemLabelPositionFallback()": 0.0,
        "org.jfree.chart.renderer.category$BarRenderer#getShadowPaint()": 4.90566037735849,
        "org.jfree.chart.renderer.category$BarRenderer#getShadowXOffset()": 4.90566037735849,
        "org.jfree.chart.renderer.category$BarRenderer#getShadowYOffset()": 4.90566037735849,
        "org.jfree.chart.renderer.category$BarRenderer#getShadowsVisible()": 4.90566037735849,
        "org.jfree.chart.renderer.category$BarRenderer#getUpperClip()": 8.830188679245284,
        "org.jfree.chart.renderer.category$BarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)": 14.716981132075471,
        "org.jfree.chart.renderer.category$BarRenderer#isDrawBarOutline()": 18.641509433962263,
        "org.jfree.chart.renderer.category$BarRenderer#isInternalAnchor(org.jfree.chart.labels.ItemLabelAnchor)": 0.0,
        "org.jfree.chart.renderer.category$BarRenderer#readObject(java.io.ObjectInputStream)": 18.641509433962263,
        "org.jfree.chart.renderer.category$BarRenderer#setBarPainter(org.jfree.chart.renderer.category.BarPainter)": 32.37735849056604,
        "org.jfree.chart.renderer.category$BarRenderer#setBase(double)": 0.9811320754716981,
        "org.jfree.chart.renderer.category$BarRenderer#setDefaultBarPainter(org.jfree.chart.renderer.category.BarPainter)": 0.0,
        "org.jfree.chart.renderer.category$BarRenderer#setDefaultShadowsVisible(boolean)": 0.0,
        "org.jfree.chart.renderer.category$BarRenderer#setDrawBarOutline(boolean)": 0.9811320754716981,
        "org.jfree.chart.renderer.category$BarRenderer#setGradientPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)": 9.81132075471698,
        "org.jfree.chart.renderer.category$BarRenderer#setIncludeBaseInRange(boolean)": 11.773584905660377,
        "org.jfree.chart.renderer.category$BarRenderer#setItemMargin(double)": 0.9811320754716981,
        "org.jfree.chart.renderer.category$BarRenderer#setMaximumBarWidth(double)": 0.9811320754716981,
        "org.jfree.chart.renderer.category$BarRenderer#setMinimumBarLength(double)": 9.81132075471698,
        "org.jfree.chart.renderer.category$BarRenderer#setNegativeItemLabelPositionFallback(org.jfree.chart.labels.ItemLabelPosition)": 17.660377358490567,
        "org.jfree.chart.renderer.category$BarRenderer#setPositiveItemLabelPositionFallback(org.jfree.chart.labels.ItemLabelPosition)": 17.660377358490567,
        "org.jfree.chart.renderer.category$BarRenderer#setShadowPaint(java.awt.Paint)": 31.39622641509434,
        "org.jfree.chart.renderer.category$BarRenderer#setShadowVisible(boolean)": 31.39622641509434,
        "org.jfree.chart.renderer.category$BarRenderer#setShadowXOffset(double)": 0.9811320754716981,
        "org.jfree.chart.renderer.category$BarRenderer#setShadowYOffset(double)": 0.9811320754716981,
        "org.jfree.chart.renderer.category$BarRenderer#writeObject(java.io.ObjectOutputStream)": 18.641509433962263,
        "org.jfree.chart.renderer.category$BarRenderer3D#<clinit>()": 119.57184750733138,
        "org.jfree.chart.renderer.category$BarRenderer3D#BarRenderer3D()": 33.35849056603774,
        "org.jfree.chart.renderer.category$BarRenderer3D#BarRenderer3D(double,double)": 34.339622641509436,
        "org.jfree.chart.renderer.category$BarRenderer3D#drawBackground(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)": 1.9622641509433962,
        "org.jfree.chart.renderer.category$BarRenderer3D#drawDomainGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D,double)": 0.0,
        "org.jfree.chart.renderer.category$BarRenderer3D#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)": 0.9811320754716981,
        "org.jfree.chart.renderer.category$BarRenderer3D#drawOutline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,java.awt.geom.Rectangle2D)": 1.9622641509433962,
        "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeGridline(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)": 0.0,
        "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)": 1.9622641509433962,
        "org.jfree.chart.renderer.category$BarRenderer3D#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.renderer.category$BarRenderer3D#equals(java.lang.Object)": 7.849056603773585,
        "org.jfree.chart.renderer.category$BarRenderer3D#getWallPaint()": 1.9622641509433962,
        "org.jfree.chart.renderer.category$BarRenderer3D#getXOffset()": 1.9622641509433962,
        "org.jfree.chart.renderer.category$BarRenderer3D#getYOffset()": 1.9622641509433962,
        "org.jfree.chart.renderer.category$BarRenderer3D#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,int,org.jfree.chart.plot.PlotRenderingInfo)": 1.9622641509433962,
        "org.jfree.chart.renderer.category$BarRenderer3D#readObject(java.io.ObjectInputStream)": 1.9622641509433962,
        "org.jfree.chart.renderer.category$BarRenderer3D#setWallPaint(java.awt.Paint)": 9.81132075471698,
        "org.jfree.chart.renderer.category$BarRenderer3D#writeObject(java.io.ObjectOutputStream)": 1.9622641509433962,
        "org.jfree.chart.renderer.category$GradientBarPainter#GradientBarPainter()": 199.89442815249265,
        "org.jfree.chart.renderer.category$GradientBarPainter#GradientBarPainter(double,double,double)": 203.76539589442814,
        "org.jfree.chart.renderer.category$GradientBarPainter#createShadow(java.awt.geom.RectangularShape,double,double,org.jfree.chart.util.RectangleEdge,boolean)": 4.90566037735849,
        "org.jfree.chart.renderer.category$GradientBarPainter#equals(java.lang.Object)": 60.83018867924528,
        "org.jfree.chart.renderer.category$GradientBarPainter#hashCode()": 0.9811320754716981,
        "org.jfree.chart.renderer.category$GradientBarPainter#paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.category.BarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge)": 5.886792452830188,
        "org.jfree.chart.renderer.category$GradientBarPainter#paintBarShadow(java.awt.Graphics2D,org.jfree.chart.renderer.category.BarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge,boolean)": 4.90566037735849,
        "org.jfree.chart.renderer.category$GradientBarPainter#splitHorizontalBar(java.awt.geom.RectangularShape,double,double,double)": 2.943396226415094,
        "org.jfree.chart.renderer.category$GradientBarPainter#splitVerticalBar(java.awt.geom.RectangularShape,double,double,double)": 2.943396226415094,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#AbstractXYItemRenderer()": 202.10559006211182,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addAnnotation(org.jfree.chart.annotations.XYAnnotation)": 0.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addAnnotation(org.jfree.chart.annotations.XYAnnotation,org.jfree.chart.util.Layer)": 2.943396226415094,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)": 0.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#calculateDomainMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)": 0.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#calculateRangeMarkerTextAnchorPoint(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleInsets,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.RectangleAnchor)": 0.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#clone()": 34.339622641509436,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawAnnotations(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.util.Layer,org.jfree.chart.plot.PlotRenderingInfo)": 17.660377358490567,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainGridLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double)": 0.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)": 16.67924528301887,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawDomainMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.xy.XYDataset,int,int,boolean,double,double,boolean)": 0.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeLine(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,java.awt.Paint,java.awt.Stroke)": 17.660377358490567,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#drawRangeMarker(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.Marker,java.awt.geom.Rectangle2D)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#equals(java.lang.Object)": 115.77358490566037,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillDomainGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)": 0.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#fillRangeGridBand(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,double,double)": 0.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findDomainBounds(org.jfree.data.xy.XYDataset)": 22.942307692307693,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)": 22.942307692307693,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset)": 15.096153846153847,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)": 17.057692307692307,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getAnnotations()": 27.846153846153847,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getBaseItemLabelGenerator()": 0.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getBaseToolTipGenerator()": 0.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getBaseURLGenerator()": 0.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getDrawingSupplier()": 24.528301886792452,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getItemLabelGenerator(int,int,boolean)": 0.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItem(int,int)": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItemLabelGenerator()": 22.566037735849058,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItemToolTipGenerator()": 24.528301886792452,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItemURLGenerator()": 24.528301886792452,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getLegendItems()": 0.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getPassCount()": 5.886792452830188,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getPlot()": 20.980769230769234,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getSeriesItemLabelGenerator(int)": 0.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getSeriesToolTipGenerator(int)": 0.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getSeriesURLGenerator(int)": 0.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getToolTipGenerator(int,int,boolean)": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#getURLGenerator(int,int,boolean)": 0.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#removeAnnotation(org.jfree.chart.annotations.XYAnnotation)": 0.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#removeAnnotations()": 0.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseItemLabelGenerator(org.jfree.chart.labels.XYItemLabelGenerator)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseItemLabelGenerator(org.jfree.chart.labels.XYItemLabelGenerator,boolean)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator)": 80.12765957446808,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator,boolean)": 80.12765957446808,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.XYURLGenerator)": 66.42553191489361,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setBaseURLGenerator(org.jfree.chart.urls.XYURLGenerator,boolean)": 66.42553191489361,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setLegendItemLabelGenerator(org.jfree.chart.labels.XYSeriesLabelGenerator)": 2.943396226415094,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setLegendItemToolTipGenerator(org.jfree.chart.labels.XYSeriesLabelGenerator)": 2.943396226415094,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setLegendItemURLGenerator(org.jfree.chart.labels.XYSeriesLabelGenerator)": 2.943396226415094,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setPlot(org.jfree.chart.plot.XYPlot)": 34.71153846153847,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesItemLabelGenerator(int,org.jfree.chart.labels.XYItemLabelGenerator)": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesItemLabelGenerator(int,org.jfree.chart.labels.XYItemLabelGenerator,boolean)": 0.0,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesToolTipGenerator(int,org.jfree.chart.labels.XYToolTipGenerator)": 3.9245283018867925,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesToolTipGenerator(int,org.jfree.chart.labels.XYToolTipGenerator,boolean)": 3.9245283018867925,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesURLGenerator(int,org.jfree.chart.urls.XYURLGenerator)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#setSeriesURLGenerator(int,org.jfree.chart.urls.XYURLGenerator,boolean)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$AbstractXYItemRenderer#updateCrosshairValues(org.jfree.chart.plot.CrosshairState,double,double,int,int,double,double,org.jfree.chart.plot.PlotOrientation)": 13.735849056603774,
        "org.jfree.chart.renderer.xy$GradientXYBarPainter#GradientXYBarPainter()": 118.60410557184751,
        "org.jfree.chart.renderer.xy$GradientXYBarPainter#GradientXYBarPainter(double,double,double)": 122.475073313783,
        "org.jfree.chart.renderer.xy$GradientXYBarPainter#createShadow(java.awt.geom.RectangularShape,double,double,org.jfree.chart.util.RectangleEdge,boolean)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$GradientXYBarPainter#equals(java.lang.Object)": 25.50943396226415,
        "org.jfree.chart.renderer.xy$GradientXYBarPainter#hashCode()": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$GradientXYBarPainter#paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYBarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$GradientXYBarPainter#paintBarShadow(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYBarRenderer,int,int,boolean,java.awt.geom.RectangularShape,org.jfree.chart.util.RectangleEdge,boolean)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$GradientXYBarPainter#splitHorizontalBar(java.awt.geom.RectangularShape,double,double,double)": 0.0,
        "org.jfree.chart.renderer.xy$GradientXYBarPainter#splitVerticalBar(java.awt.geom.RectangularShape,double,double,double)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#XYAreaRenderer()": 6.867924528301887,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#XYAreaRenderer(int)": 6.867924528301887,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#XYAreaRenderer(int,org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)": 13.735849056603774,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#clone()": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#equals(java.lang.Object)": 7.849056603773585,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#getGradientTransformer()": 0.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendArea()": 0.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#getLegendItem(int,int)": 3.9245283018867925,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#getPlotArea()": 2.943396226415094,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#getPlotLines()": 2.943396226415094,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#getPlotShapes()": 2.943396226415094,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#getUseFillPaint()": 0.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#hashCode()": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#isOutline()": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#readObject(java.io.ObjectInputStream)": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#setGradientTransformer(org.jfree.chart.util.GradientPaintTransformer)": 0.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#setLegendArea(java.awt.Shape)": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#setOutline(boolean)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#setUseFillPaint(boolean)": 0.0,
        "org.jfree.chart.renderer.xy$XYAreaRenderer#writeObject(java.io.ObjectOutputStream)": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYAreaRenderer$XYAreaRendererState#XYAreaRenderer$XYAreaRendererState(org.jfree.chart.plot.PlotRenderingInfo)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYBarRenderer#<clinit>()": 31.39622641509434,
        "org.jfree.chart.renderer.xy$XYBarRenderer#XYBarRenderer()": 17.660377358490567,
        "org.jfree.chart.renderer.xy$XYBarRenderer#XYBarRenderer(double)": 31.39622641509434,
        "org.jfree.chart.renderer.xy$XYBarRenderer#calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)": 0.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#clone()": 7.849056603773585,
        "org.jfree.chart.renderer.xy$XYBarRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYBarRenderer#drawItemLabelForBar(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,boolean,org.jfree.chart.labels.XYItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)": 0.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#equals(java.lang.Object)": 19.62264150943396,
        "org.jfree.chart.renderer.xy$XYBarRenderer#findDomainBounds(org.jfree.data.xy.XYDataset)": 8.830188679245284,
        "org.jfree.chart.renderer.xy$XYBarRenderer#findRangeBounds(org.jfree.data.xy.XYDataset)": 5.886792452830188,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getBarAlignmentFactor()": 0.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getBarPainter()": 0.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getBase()": 0.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getDefaultBarPainter()": 31.39622641509434,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getDefaultShadowsVisible()": 31.39622641509434,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getGradientPaintTransformer()": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendBar()": 0.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getLegendItem(int,int)": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getMargin()": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getNegativeItemLabelPositionFallback()": 0.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getPositiveItemLabelPositionFallback()": 0.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getShadowXOffset()": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getShadowYOffset()": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getShadowsVisible()": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYBarRenderer#getUseYInterval()": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYBarRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYBarRenderer#isDrawBarOutline()": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYBarRenderer#isInternalAnchor(org.jfree.chart.labels.ItemLabelAnchor)": 0.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#readObject(java.io.ObjectInputStream)": 4.90566037735849,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setBarAlignmentFactor(double)": 0.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setBarPainter(org.jfree.chart.renderer.xy.XYBarPainter)": 4.90566037735849,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setBase(double)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setDefaultBarPainter(org.jfree.chart.renderer.xy.XYBarPainter)": 0.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setDefaultShadowsVisible(boolean)": 0.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setDrawBarOutline(boolean)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setGradientPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setLegendBar(java.awt.Shape)": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setMargin(double)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setNegativeItemLabelPositionFallback(org.jfree.chart.labels.ItemLabelPosition)": 7.849056603773585,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setPositiveItemLabelPositionFallback(org.jfree.chart.labels.ItemLabelPosition)": 8.830188679245284,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setShadowVisible(boolean)": 4.90566037735849,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setShadowXOffset(double)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setShadowYOffset(double)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYBarRenderer#setUseYInterval(boolean)": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYBarRenderer#writeObject(java.io.ObjectOutputStream)": 4.90566037735849,
        "org.jfree.chart.renderer.xy$XYBarRenderer$XYBarRendererState#XYBarRenderer$XYBarRendererState(org.jfree.chart.renderer.xy.XYBarRenderer,org.jfree.chart.plot.PlotRenderingInfo)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYBarRenderer$XYBarRendererState#getG2Base()": 0.0,
        "org.jfree.chart.renderer.xy$XYBarRenderer$XYBarRendererState#setG2Base(double)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYItemRendererState#XYItemRendererState(org.jfree.chart.plot.PlotRenderingInfo)": 13.735849056603774,
        "org.jfree.chart.renderer.xy$XYItemRendererState#endSeriesPass(org.jfree.data.xy.XYDataset,int,int,int,int,int)": 13.735849056603774,
        "org.jfree.chart.renderer.xy$XYItemRendererState#getCrosshairState()": 9.81132075471698,
        "org.jfree.chart.renderer.xy$XYItemRendererState#getFirstItemIndex()": 0.0,
        "org.jfree.chart.renderer.xy$XYItemRendererState#getLastItemIndex()": 0.0,
        "org.jfree.chart.renderer.xy$XYItemRendererState#getProcessVisibleItemsOnly()": 13.735849056603774,
        "org.jfree.chart.renderer.xy$XYItemRendererState#getSelectionState()": 13.735849056603774,
        "org.jfree.chart.renderer.xy$XYItemRendererState#setCrosshairState(org.jfree.chart.plot.XYCrosshairState)": 0.0,
        "org.jfree.chart.renderer.xy$XYItemRendererState#setProcessVisibleItemsOnly(boolean)": 3.9245283018867925,
        "org.jfree.chart.renderer.xy$XYItemRendererState#setSelectionState(org.jfree.data.xy.XYDatasetSelectionState)": 0.0,
        "org.jfree.chart.renderer.xy$XYItemRendererState#startSeriesPass(org.jfree.data.xy.XYDataset,int,int,int,int,int)": 13.735849056603774,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#XYLineAndShapeRenderer()": 21.340000000000003,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#XYLineAndShapeRenderer(boolean,boolean)": 54.19387755102041,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#clone()": 6.867924528301887,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)": 3.9245283018867925,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLine(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)": 3.9245283018867925,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape1(java.awt.Graphics2D,int,int,int,boolean,java.awt.Shape)": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#drawShape2(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)": 3.9245283018867925,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#equals(java.lang.Object)": 30.41509433962264,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getBaseLinesVisible()": 0.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getBaseShapesFilled()": 0.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getBaseShapesVisible()": 0.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getDrawOutlines()": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getDrawSeriesLineAsPath()": 0.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getItemLineVisible(int,int)": 7.849056603773585,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getItemShapeFilled(int,int)": 7.849056603773585,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getItemShapeVisible(int,int)": 7.849056603773585,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendItem(int,int)": 7.849056603773585,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getLegendLine()": 0.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getPassCount()": 5.886792452830188,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getSeriesLinesVisible(int)": 7.849056603773585,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getSeriesShapesFilled(int)": 7.849056603773585,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getSeriesShapesVisible(int)": 7.849056603773585,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getUseFillPaint()": 0.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#getUseOutlinePaint()": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)": 5.886792452830188,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#isItemPass(int)": 3.9245283018867925,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#isLinePass(int)": 3.9245283018867925,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#readObject(java.io.ObjectInputStream)": 8.830188679245284,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setBaseLinesVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setBaseShapesFilled(boolean)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setBaseShapesVisible(boolean)": -3.16,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setDrawOutlines(boolean)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setDrawSeriesLineAsPath(boolean)": 5.886792452830188,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setLegendLine(java.awt.Shape)": 2.943396226415094,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesLinesVisible(int,boolean)": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesLinesVisible(int,java.lang.Boolean)": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesShapesFilled(int,boolean)": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesShapesFilled(int,java.lang.Boolean)": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesShapesVisible(int,boolean)": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setSeriesShapesVisible(int,java.lang.Boolean)": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setUseFillPaint(boolean)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#setUseOutlinePaint(boolean)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer#writeObject(java.io.ObjectOutputStream)": 8.830188679245284,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer$State#XYLineAndShapeRenderer$State(org.jfree.chart.plot.PlotRenderingInfo)": 5.886792452830188,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer$State#isLastPointGood()": 0.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer$State#setLastPointGood(boolean)": 0.0,
        "org.jfree.chart.renderer.xy$XYLineAndShapeRenderer$State#startSeriesPass(org.jfree.data.xy.XYDataset,int,int,int,int,int)": 5.886792452830188,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#XYStepAreaRenderer()": 5.886792452830188,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#XYStepAreaRenderer(int)": 5.886792452830188,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#XYStepAreaRenderer(int,org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)": -5.12,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#clone()": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#equals(java.lang.Object)": 3.9245283018867925,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#getPlotArea()": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#getRangeBase()": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#getShapesVisible()": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#initialise(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,org.jfree.chart.plot.PlotRenderingInfo)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#isOutline()": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#isShapesFilled()": 0.0,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#restrictValueToDataArea(double,org.jfree.chart.plot.XYPlot,java.awt.geom.Rectangle2D)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#setOutline(boolean)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#setPlotArea(boolean)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#setRangeBase(double)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#setShapesFilled(boolean)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYStepAreaRenderer#setShapesVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYStepRenderer#XYStepRenderer()": 6.867924528301887,
        "org.jfree.chart.renderer.xy$XYStepRenderer#XYStepRenderer(org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)": -4.14,
        "org.jfree.chart.renderer.xy$XYStepRenderer#clone()": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYStepRenderer#drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYStepRenderer#drawLine(java.awt.Graphics2D,java.awt.geom.Line2D,double,double,double,double)": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYStepRenderer#equals(java.lang.Object)": 3.9245283018867925,
        "org.jfree.chart.renderer.xy$XYStepRenderer#getStepPoint()": 1.9622641509433962,
        "org.jfree.chart.renderer.xy$XYStepRenderer#hashCode()": 0.9811320754716981,
        "org.jfree.chart.renderer.xy$XYStepRenderer#setStepPoint(double)": 2.943396226415094,
        "org.jfree.chart.resources$JFreeChartResources#<clinit>()": 146.7450980392157,
        "org.jfree.chart.resources$JFreeChartResources#JFreeChartResources()": 146.7450980392157,
        "org.jfree.chart.resources$JFreeChartResources#getContents()": 146.7450980392157,
        "org.jfree.chart.text$G2TextMeasurer#G2TextMeasurer(java.awt.Graphics2D)": 50.0377358490566,
        "org.jfree.chart.text$G2TextMeasurer#getStringWidth(java.lang.String,int,int)": 50.0377358490566,
        "org.jfree.chart.text$TextAnchor#<clinit>()": 556.2360248447204,
        "org.jfree.chart.text$TextAnchor#TextAnchor(java.lang.String)": 556.2360248447204,
        "org.jfree.chart.text$TextAnchor#equals(java.lang.Object)": 206.03773584905662,
        "org.jfree.chart.text$TextAnchor#hashCode()": 6.867924528301887,
        "org.jfree.chart.text$TextAnchor#readResolve()": 83.39622641509433,
        "org.jfree.chart.text$TextAnchor#toString()": 0.0,
        "org.jfree.chart.text$TextBlock#TextBlock()": 71.62264150943396,
        "org.jfree.chart.text$TextBlock#addLine(java.lang.String,java.awt.Font,java.awt.Paint)": 67.69811320754717,
        "org.jfree.chart.text$TextBlock#addLine(org.jfree.chart.text.TextLine)": 69.66037735849056,
        "org.jfree.chart.text$TextBlock#calculateBounds(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)": 33.35849056603774,
        "org.jfree.chart.text$TextBlock#calculateDimensions(java.awt.Graphics2D)": 61.81132075471698,
        "org.jfree.chart.text$TextBlock#calculateOffsets(org.jfree.chart.text.TextBlockAnchor,double,double)": 61.81132075471698,
        "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor)": 61.81132075471698,
        "org.jfree.chart.text$TextBlock#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)": 61.81132075471698,
        "org.jfree.chart.text$TextBlock#equals(java.lang.Object)": 3.9245283018867925,
        "org.jfree.chart.text$TextBlock#getLastLine()": 3.9245283018867925,
        "org.jfree.chart.text$TextBlock#getLineAlignment()": 0.0,
        "org.jfree.chart.text$TextBlock#getLines()": 0.0,
        "org.jfree.chart.text$TextBlock#hashCode()": 0.9811320754716981,
        "org.jfree.chart.text$TextBlock#setLineAlignment(org.jfree.chart.util.HorizontalAlignment)": 26.49056603773585,
        "org.jfree.chart.text$TextBlockAnchor#<clinit>()": 155.0188679245283,
        "org.jfree.chart.text$TextBlockAnchor#TextBlockAnchor(java.lang.String)": 155.0188679245283,
        "org.jfree.chart.text$TextBlockAnchor#equals(java.lang.Object)": 23.547169811320753,
        "org.jfree.chart.text$TextBlockAnchor#hashCode()": 2.943396226415094,
        "org.jfree.chart.text$TextBlockAnchor#readResolve()": 15.69811320754717,
        "org.jfree.chart.text$TextBlockAnchor#toString()": 0.0,
        "org.jfree.chart.text$TextFragment#<clinit>()": 69.66037735849056,
        "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String)": 0.0,
        "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font)": 1.9622641509433962,
        "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font,java.awt.Paint)": 69.66037735849056,
        "org.jfree.chart.text$TextFragment#TextFragment(java.lang.String,java.awt.Font,java.awt.Paint,float)": 69.66037735849056,
        "org.jfree.chart.text$TextFragment#calculateBaselineOffset(java.awt.Graphics2D,org.jfree.chart.text.TextAnchor)": 61.81132075471698,
        "org.jfree.chart.text$TextFragment#calculateDimensions(java.awt.Graphics2D)": 61.81132075471698,
        "org.jfree.chart.text$TextFragment#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)": 61.81132075471698,
        "org.jfree.chart.text$TextFragment#equals(java.lang.Object)": 5.886792452830188,
        "org.jfree.chart.text$TextFragment#getBaselineOffset()": 0.0,
        "org.jfree.chart.text$TextFragment#getFont()": 3.9245283018867925,
        "org.jfree.chart.text$TextFragment#getPaint()": 3.9245283018867925,
        "org.jfree.chart.text$TextFragment#getText()": 3.9245283018867925,
        "org.jfree.chart.text$TextFragment#hashCode()": 0.9811320754716981,
        "org.jfree.chart.text$TextFragment#readObject(java.io.ObjectInputStream)": 1.9622641509433962,
        "org.jfree.chart.text$TextFragment#writeObject(java.io.ObjectOutputStream)": 1.9622641509433962,
        "org.jfree.chart.text$TextLine#TextLine()": 0.0,
        "org.jfree.chart.text$TextLine#TextLine(java.lang.String)": 1.9622641509433962,
        "org.jfree.chart.text$TextLine#TextLine(java.lang.String,java.awt.Font)": 1.9622641509433962,
        "org.jfree.chart.text$TextLine#TextLine(java.lang.String,java.awt.Font,java.awt.Paint)": 67.69811320754717,
        "org.jfree.chart.text$TextLine#addFragment(org.jfree.chart.text.TextFragment)": 3.9245283018867925,
        "org.jfree.chart.text$TextLine#calculateBaselineOffset(java.awt.Graphics2D,org.jfree.chart.text.TextAnchor)": 61.81132075471698,
        "org.jfree.chart.text$TextLine#calculateDimensions(java.awt.Graphics2D)": 61.81132075471698,
        "org.jfree.chart.text$TextLine#draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,float,float,double)": 61.81132075471698,
        "org.jfree.chart.text$TextLine#equals(java.lang.Object)": 1.9622641509433962,
        "org.jfree.chart.text$TextLine#getFirstTextFragment()": 0.0,
        "org.jfree.chart.text$TextLine#getLastTextFragment()": 3.9245283018867925,
        "org.jfree.chart.text$TextLine#hashCode()": 0.9811320754716981,
        "org.jfree.chart.text$TextLine#removeFragment(org.jfree.chart.text.TextFragment)": 3.9245283018867925,
        "org.jfree.chart.text$TextUtilities#<clinit>()": 65.73584905660377,
        "org.jfree.chart.text$TextUtilities#TextUtilities()": 0.0,
        "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)": 0.9811320754716981,
        "org.jfree.chart.text$TextUtilities#calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)": 0.9811320754716981,
        "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint)": 52.9811320754717,
        "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)": 50.0377358490566,
        "org.jfree.chart.text$TextUtilities#createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,org.jfree.chart.text.TextMeasurer)": 1.9622641509433962,
        "org.jfree.chart.text$TextUtilities#deriveRotationAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)": 57.886792452830186,
        "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor)": 62.79245283018868,
        "org.jfree.chart.text$TextUtilities#deriveTextBoundsAnchorOffsets(java.awt.Graphics2D,java.lang.String,org.jfree.chart.text.TextAnchor,java.awt.geom.Rectangle2D)": 0.9811320754716981,
        "org.jfree.chart.text$TextUtilities#drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor)": 0.9811320754716981,
        "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,double,float,float)": 0.0,
        "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,double,float,float)": 62.79245283018868,
        "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,float,float)": 61.81132075471698,
        "org.jfree.chart.text$TextUtilities#drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.text.TextAnchor,double,org.jfree.chart.text.TextAnchor)": 57.886792452830186,
        "org.jfree.chart.text$TextUtilities#getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)": 62.79245283018868,
        "org.jfree.chart.text$TextUtilities#getUseFontMetricsGetStringBounds()": 0.0,
        "org.jfree.chart.text$TextUtilities#isUseDrawRotatedStringWorkaround()": 0.0,
        "org.jfree.chart.text$TextUtilities#nextLineBreak(java.lang.String,int,float,java.text.BreakIterator,org.jfree.chart.text.TextMeasurer)": 50.0377358490566,
        "org.jfree.chart.text$TextUtilities#setUseDrawRotatedStringWorkaround(boolean)": 0.0,
        "org.jfree.chart.text$TextUtilities#setUseFontMetricsGetStringBounds(boolean)": 0.0,
        "org.jfree.chart.title$LegendGraphic#LegendGraphic(java.awt.Shape,java.awt.Paint)": 54.943396226415096,
        "org.jfree.chart.title$LegendGraphic#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 50.0377358490566,
        "org.jfree.chart.title$LegendGraphic#arrangeNN(java.awt.Graphics2D)": 50.0377358490566,
        "org.jfree.chart.title$LegendGraphic#clone()": 1.9622641509433962,
        "org.jfree.chart.title$LegendGraphic#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 50.0377358490566,
        "org.jfree.chart.title$LegendGraphic#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 50.0377358490566,
        "org.jfree.chart.title$LegendGraphic#equals(java.lang.Object)": 4.90566037735849,
        "org.jfree.chart.title$LegendGraphic#getFillPaint()": 0.0,
        "org.jfree.chart.title$LegendGraphic#getFillPaintTransformer()": 0.0,
        "org.jfree.chart.title$LegendGraphic#getLine()": 12.754716981132075,
        "org.jfree.chart.title$LegendGraphic#getLinePaint()": 0.0,
        "org.jfree.chart.title$LegendGraphic#getLineStroke()": 0.0,
        "org.jfree.chart.title$LegendGraphic#getOutlinePaint()": 0.0,
        "org.jfree.chart.title$LegendGraphic#getOutlineStroke()": 0.0,
        "org.jfree.chart.title$LegendGraphic#getShape()": 0.0,
        "org.jfree.chart.title$LegendGraphic#getShapeAnchor()": 0.0,
        "org.jfree.chart.title$LegendGraphic#getShapeLocation()": 0.0,
        "org.jfree.chart.title$LegendGraphic#hashCode()": 0.9811320754716981,
        "org.jfree.chart.title$LegendGraphic#isLineVisible()": 0.9811320754716981,
        "org.jfree.chart.title$LegendGraphic#isShapeFilled()": 0.9811320754716981,
        "org.jfree.chart.title$LegendGraphic#isShapeOutlineVisible()": 0.9811320754716981,
        "org.jfree.chart.title$LegendGraphic#isShapeVisible()": 0.9811320754716981,
        "org.jfree.chart.title$LegendGraphic#readObject(java.io.ObjectInputStream)": 0.9811320754716981,
        "org.jfree.chart.title$LegendGraphic#setFillPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart.title$LegendGraphic#setFillPaintTransformer(org.jfree.chart.util.GradientPaintTransformer)": 51.0188679245283,
        "org.jfree.chart.title$LegendGraphic#setLine(java.awt.Shape)": 52.0,
        "org.jfree.chart.title$LegendGraphic#setLinePaint(java.awt.Paint)": 51.0188679245283,
        "org.jfree.chart.title$LegendGraphic#setLineStroke(java.awt.Stroke)": 51.0188679245283,
        "org.jfree.chart.title$LegendGraphic#setLineVisible(boolean)": 51.0188679245283,
        "org.jfree.chart.title$LegendGraphic#setOutlinePaint(java.awt.Paint)": 51.0188679245283,
        "org.jfree.chart.title$LegendGraphic#setOutlineStroke(java.awt.Stroke)": 52.0,
        "org.jfree.chart.title$LegendGraphic#setShape(java.awt.Shape)": 0.9811320754716981,
        "org.jfree.chart.title$LegendGraphic#setShapeAnchor(org.jfree.chart.util.RectangleAnchor)": 51.0188679245283,
        "org.jfree.chart.title$LegendGraphic#setShapeFilled(boolean)": 51.0188679245283,
        "org.jfree.chart.title$LegendGraphic#setShapeLocation(org.jfree.chart.util.RectangleAnchor)": 51.0188679245283,
        "org.jfree.chart.title$LegendGraphic#setShapeOutlineVisible(boolean)": 51.0188679245283,
        "org.jfree.chart.title$LegendGraphic#setShapeVisible(boolean)": 51.0188679245283,
        "org.jfree.chart.title$LegendGraphic#writeObject(java.io.ObjectOutputStream)": 0.9811320754716981,
        "org.jfree.chart.title$LegendItemBlockContainer#LegendItemBlockContainer(org.jfree.chart.block.Arrangement,org.jfree.data.general.Dataset,java.lang.Comparable)": 50.0377358490566,
        "org.jfree.chart.title$LegendItemBlockContainer#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 50.0377358490566,
        "org.jfree.chart.title$LegendItemBlockContainer#getDataset()": 0.0,
        "org.jfree.chart.title$LegendItemBlockContainer#getSeriesKey()": 0.0,
        "org.jfree.chart.title$LegendItemBlockContainer#getToolTipText()": 9.81132075471698,
        "org.jfree.chart.title$LegendItemBlockContainer#getURLText()": 9.81132075471698,
        "org.jfree.chart.title$LegendItemBlockContainer#setToolTipText(java.lang.String)": 50.0377358490566,
        "org.jfree.chart.title$LegendItemBlockContainer#setURLText(java.lang.String)": 50.0377358490566,
        "org.jfree.chart.title$LegendTitle#<clinit>()": 117.33333333333334,
        "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource)": 117.33333333333334,
        "org.jfree.chart.title$LegendTitle#LegendTitle(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)": 117.33333333333334,
        "org.jfree.chart.title$LegendTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 61.81132075471698,
        "org.jfree.chart.title$LegendTitle#createLegendItemBlock(org.jfree.chart.LegendItem)": 50.0377358490566,
        "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.title$LegendTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 61.81132075471698,
        "org.jfree.chart.title$LegendTitle#equals(java.lang.Object)": 15.69811320754717,
        "org.jfree.chart.title$LegendTitle#fetchLegendItems()": 61.81132075471698,
        "org.jfree.chart.title$LegendTitle#getBackgroundPaint()": 54.58823529411765,
        "org.jfree.chart.title$LegendTitle#getItemContainer()": 0.0,
        "org.jfree.chart.title$LegendTitle#getItemFont()": 0.0,
        "org.jfree.chart.title$LegendTitle#getItemLabelPadding()": 0.0,
        "org.jfree.chart.title$LegendTitle#getItemPaint()": 0.0,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicAnchor()": 50.0377358490566,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicEdge()": 0.0,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicLocation()": 50.0377358490566,
        "org.jfree.chart.title$LegendTitle#getLegendItemGraphicPadding()": 0.0,
        "org.jfree.chart.title$LegendTitle#getSources()": 1.9622641509433962,
        "org.jfree.chart.title$LegendTitle#getWrapper()": 54.58823529411765,
        "org.jfree.chart.title$LegendTitle#readObject(java.io.ObjectInputStream)": 7.849056603773585,
        "org.jfree.chart.title$LegendTitle#setBackgroundPaint(java.awt.Paint)": 115.37254901960785,
        "org.jfree.chart.title$LegendTitle#setItemFont(java.awt.Font)": 55.56862745098039,
        "org.jfree.chart.title$LegendTitle#setItemLabelPadding(org.jfree.chart.util.RectangleInsets)": 0.0,
        "org.jfree.chart.title$LegendTitle#setItemPaint(java.awt.Paint)": 54.58823529411765,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicAnchor(org.jfree.chart.util.RectangleAnchor)": 0.9811320754716981,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicEdge(org.jfree.chart.util.RectangleEdge)": 0.9811320754716981,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicLocation(org.jfree.chart.util.RectangleAnchor)": 0.9811320754716981,
        "org.jfree.chart.title$LegendTitle#setLegendItemGraphicPadding(org.jfree.chart.util.RectangleInsets)": 0.0,
        "org.jfree.chart.title$LegendTitle#setSources(org.jfree.chart.LegendItemSource[])": 0.0,
        "org.jfree.chart.title$LegendTitle#setWrapper(org.jfree.chart.block.BlockContainer)": 0.0,
        "org.jfree.chart.title$LegendTitle#writeObject(java.io.ObjectOutputStream)": 7.849056603773585,
        "org.jfree.chart.title$PaintScaleLegend#PaintScaleLegend(org.jfree.chart.renderer.PaintScale,org.jfree.chart.axis.ValueAxis)": 3.9245283018867925,
        "org.jfree.chart.title$PaintScaleLegend#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 0.0,
        "org.jfree.chart.title$PaintScaleLegend#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)": 0.0,
        "org.jfree.chart.title$PaintScaleLegend#axisChanged(org.jfree.chart.event.AxisChangeEvent)": 3.9245283018867925,
        "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.title$PaintScaleLegend#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 0.0,
        "org.jfree.chart.title$PaintScaleLegend#equals(java.lang.Object)": 3.9245283018867925,
        "org.jfree.chart.title$PaintScaleLegend#getAxis()": 0.0,
        "org.jfree.chart.title$PaintScaleLegend#getAxisLocation()": 0.0,
        "org.jfree.chart.title$PaintScaleLegend#getAxisOffset()": 0.0,
        "org.jfree.chart.title$PaintScaleLegend#getBackgroundPaint()": 0.0,
        "org.jfree.chart.title$PaintScaleLegend#getScale()": 0.0,
        "org.jfree.chart.title$PaintScaleLegend#getStripOutlinePaint()": 0.0,
        "org.jfree.chart.title$PaintScaleLegend#getStripOutlineStroke()": 0.0,
        "org.jfree.chart.title$PaintScaleLegend#getStripWidth()": 0.0,
        "org.jfree.chart.title$PaintScaleLegend#getSubdivisionCount()": 0.0,
        "org.jfree.chart.title$PaintScaleLegend#isStripOutlineVisible()": 0.9811320754716981,
        "org.jfree.chart.title$PaintScaleLegend#readObject(java.io.ObjectInputStream)": 0.9811320754716981,
        "org.jfree.chart.title$PaintScaleLegend#setAxis(org.jfree.chart.axis.ValueAxis)": 0.9811320754716981,
        "org.jfree.chart.title$PaintScaleLegend#setAxisLocation(org.jfree.chart.axis.AxisLocation)": 0.9811320754716981,
        "org.jfree.chart.title$PaintScaleLegend#setAxisOffset(double)": 0.9811320754716981,
        "org.jfree.chart.title$PaintScaleLegend#setBackgroundPaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart.title$PaintScaleLegend#setScale(org.jfree.chart.renderer.PaintScale)": 0.9811320754716981,
        "org.jfree.chart.title$PaintScaleLegend#setStripOutlinePaint(java.awt.Paint)": 0.9811320754716981,
        "org.jfree.chart.title$PaintScaleLegend#setStripOutlineStroke(java.awt.Stroke)": 0.9811320754716981,
        "org.jfree.chart.title$PaintScaleLegend#setStripOutlineVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.title$PaintScaleLegend#setStripWidth(double)": 0.9811320754716981,
        "org.jfree.chart.title$PaintScaleLegend#setSubdivisionCount(int)": 0.9811320754716981,
        "org.jfree.chart.title$PaintScaleLegend#writeObject(java.io.ObjectOutputStream)": 0.9811320754716981,
        "org.jfree.chart.title$TextTitle#<clinit>()": 104.58823529411765,
        "org.jfree.chart.title$TextTitle#TextTitle()": 8.830188679245284,
        "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String)": 22.566037735849058,
        "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font)": 82.03921568627452,
        "org.jfree.chart.title$TextTitle#TextTitle(java.lang.String,java.awt.Font,java.awt.Paint,org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)": 104.58823529411765,
        "org.jfree.chart.title$TextTitle#arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)": 26.49056603773585,
        "org.jfree.chart.title$TextTitle#arrangeFN(java.awt.Graphics2D,double)": 0.0,
        "org.jfree.chart.title$TextTitle#arrangeNN(java.awt.Graphics2D)": 0.0,
        "org.jfree.chart.title$TextTitle#arrangeRN(java.awt.Graphics2D,org.jfree.data.Range)": 0.0,
        "org.jfree.chart.title$TextTitle#arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)": 26.49056603773585,
        "org.jfree.chart.title$TextTitle#clone()": 3.9245283018867925,
        "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.title$TextTitle#draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)": 26.49056603773585,
        "org.jfree.chart.title$TextTitle#drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 26.49056603773585,
        "org.jfree.chart.title$TextTitle#drawVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.title$TextTitle#equals(java.lang.Object)": 30.41509433962264,
        "org.jfree.chart.title$TextTitle#getBackgroundPaint()": 0.0,
        "org.jfree.chart.title$TextTitle#getExpandToFitSpace()": 0.9811320754716981,
        "org.jfree.chart.title$TextTitle#getFont()": 0.0,
        "org.jfree.chart.title$TextTitle#getMaximumLinesToDisplay()": 0.0,
        "org.jfree.chart.title$TextTitle#getPaint()": 0.0,
        "org.jfree.chart.title$TextTitle#getText()": 0.0,
        "org.jfree.chart.title$TextTitle#getTextAlignment()": 0.0,
        "org.jfree.chart.title$TextTitle#getToolTipText()": 0.0,
        "org.jfree.chart.title$TextTitle#getURLText()": 0.0,
        "org.jfree.chart.title$TextTitle#hashCode()": 4.90566037735849,
        "org.jfree.chart.title$TextTitle#readObject(java.io.ObjectInputStream)": 12.754716981132075,
        "org.jfree.chart.title$TextTitle#setBackgroundPaint(java.awt.Paint)": 1.9622641509433962,
        "org.jfree.chart.title$TextTitle#setExpandToFitSpace(boolean)": 0.9811320754716981,
        "org.jfree.chart.title$TextTitle#setFont(java.awt.Font)": 80.07843137254902,
        "org.jfree.chart.title$TextTitle#setMaximumLinesToDisplay(int)": 0.9811320754716981,
        "org.jfree.chart.title$TextTitle#setPaint(java.awt.Paint)": 80.07843137254902,
        "org.jfree.chart.title$TextTitle#setText(java.lang.String)": 6.867924528301887,
        "org.jfree.chart.title$TextTitle#setTextAlignment(org.jfree.chart.util.HorizontalAlignment)": 0.9811320754716981,
        "org.jfree.chart.title$TextTitle#setToolTipText(java.lang.String)": 0.9811320754716981,
        "org.jfree.chart.title$TextTitle#setURLText(java.lang.String)": 0.9811320754716981,
        "org.jfree.chart.title$TextTitle#writeObject(java.io.ObjectOutputStream)": 12.754716981132075,
        "org.jfree.chart.title$Title#<clinit>()": 172.23529411764707,
        "org.jfree.chart.title$Title#Title()": 126.15686274509804,
        "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment)": 0.0,
        "org.jfree.chart.title$Title#Title(org.jfree.chart.util.RectangleEdge,org.jfree.chart.util.HorizontalAlignment,org.jfree.chart.util.VerticalAlignment,org.jfree.chart.util.RectangleInsets)": 172.23529411764707,
        "org.jfree.chart.title$Title#addChangeListener(org.jfree.chart.event.TitleChangeListener)": 136.94117647058823,
        "org.jfree.chart.title$Title#clone()": 7.849056603773585,
        "org.jfree.chart.title$Title#equals(java.lang.Object)": 40.22641509433962,
        "org.jfree.chart.title$Title#getHorizontalAlignment()": 62.79245283018868,
        "org.jfree.chart.title$Title#getNotify()": 0.0,
        "org.jfree.chart.title$Title#getPosition()": 62.79245283018868,
        "org.jfree.chart.title$Title#getVerticalAlignment()": 0.0,
        "org.jfree.chart.title$Title#hashCode()": 8.830188679245284,
        "org.jfree.chart.title$Title#isVisible()": 62.79245283018868,
        "org.jfree.chart.title$Title#notifyListeners(org.jfree.chart.event.TitleChangeEvent)": 152.62745098039215,
        "org.jfree.chart.title$Title#readObject(java.io.ObjectInputStream)": 14.716981132075471,
        "org.jfree.chart.title$Title#removeChangeListener(org.jfree.chart.event.TitleChangeListener)": 0.9811320754716981,
        "org.jfree.chart.title$Title#setHorizontalAlignment(org.jfree.chart.util.HorizontalAlignment)": 0.9811320754716981,
        "org.jfree.chart.title$Title#setNotify(boolean)": 0.0,
        "org.jfree.chart.title$Title#setPosition(org.jfree.chart.util.RectangleEdge)": 114.39215686274511,
        "org.jfree.chart.title$Title#setVerticalAlignment(org.jfree.chart.util.VerticalAlignment)": 0.9811320754716981,
        "org.jfree.chart.title$Title#setVisible(boolean)": 0.9811320754716981,
        "org.jfree.chart.title$Title#writeObject(java.io.ObjectOutputStream)": 14.716981132075471,
        "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo()": 146.7450980392157,
        "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#BasicProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#addLibrary(org.jfree.chart.ui.Library)": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#addOptionalLibrary(java.lang.String)": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#addOptionalLibrary(org.jfree.chart.ui.Library)": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#getCopyright()": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#getLibraries()": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#getOptionalLibraries()": 0.0,
        "org.jfree.chart.ui$BasicProjectInfo#setCopyright(java.lang.String)": 146.7450980392157,
        "org.jfree.chart.ui$BasicProjectInfo#setInfo(java.lang.String)": 146.7450980392157,
        "org.jfree.chart.ui$BasicProjectInfo#setLicenceName(java.lang.String)": 146.7450980392157,
        "org.jfree.chart.ui$BasicProjectInfo#setName(java.lang.String)": 146.7450980392157,
        "org.jfree.chart.ui$BasicProjectInfo#setVersion(java.lang.String)": 146.7450980392157,
        "org.jfree.chart.ui$Contributor#Contributor(java.lang.String,java.lang.String)": 146.7450980392157,
        "org.jfree.chart.ui$Contributor#getEmail()": 0.0,
        "org.jfree.chart.ui$Contributor#getName()": 0.0,
        "org.jfree.chart.ui$Library#Library()": 146.7450980392157,
        "org.jfree.chart.ui$Library#Library(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 0.0,
        "org.jfree.chart.ui$Library#equals(java.lang.Object)": 0.0,
        "org.jfree.chart.ui$Library#getInfo()": 0.0,
        "org.jfree.chart.ui$Library#getLicenceName()": 0.0,
        "org.jfree.chart.ui$Library#getName()": 0.0,
        "org.jfree.chart.ui$Library#getVersion()": 0.0,
        "org.jfree.chart.ui$Library#hashCode()": 0.0,
        "org.jfree.chart.ui$Library#setInfo(java.lang.String)": 146.7450980392157,
        "org.jfree.chart.ui$Library#setLicenceName(java.lang.String)": 146.7450980392157,
        "org.jfree.chart.ui$Library#setName(java.lang.String)": 146.7450980392157,
        "org.jfree.chart.ui$Library#setVersion(java.lang.String)": 146.7450980392157,
        "org.jfree.chart.ui$Licences#Licences()": 146.7450980392157,
        "org.jfree.chart.ui$Licences#getGPL()": 0.0,
        "org.jfree.chart.ui$Licences#getInstance()": 146.7450980392157,
        "org.jfree.chart.ui$Licences#getLGPL()": 146.7450980392157,
        "org.jfree.chart.ui$ProjectInfo#ProjectInfo()": 146.7450980392157,
        "org.jfree.chart.ui$ProjectInfo#ProjectInfo(java.lang.String,java.lang.String,java.lang.String,java.awt.Image,java.lang.String,java.lang.String,java.lang.String)": 0.0,
        "org.jfree.chart.ui$ProjectInfo#getContributors()": 0.0,
        "org.jfree.chart.ui$ProjectInfo#getLicenceText()": 0.0,
        "org.jfree.chart.ui$ProjectInfo#getLogo()": 10.79245283018868,
        "org.jfree.chart.ui$ProjectInfo#setContributors(java.util.List)": 146.7450980392157,
        "org.jfree.chart.ui$ProjectInfo#setLicenceText(java.lang.String)": 146.7450980392157,
        "org.jfree.chart.ui$ProjectInfo#setLogo(java.awt.Image)": 146.7450980392157,
        "org.jfree.chart.ui$ProjectInfo#toString()": 0.0,
        "org.jfree.chart.urls$StandardXYURLGenerator#StandardXYURLGenerator()": 0.8510638297872344,
        "org.jfree.chart.urls$StandardXYURLGenerator#StandardXYURLGenerator(java.lang.String)": 1.9622641509433962,
        "org.jfree.chart.urls$StandardXYURLGenerator#StandardXYURLGenerator(java.lang.String,java.lang.String,java.lang.String)": 2.8085106382978715,
        "org.jfree.chart.urls$StandardXYURLGenerator#equals(java.lang.Object)": 1.9622641509433962,
        "org.jfree.chart.urls$StandardXYURLGenerator#generateURL(org.jfree.data.xy.XYDataset,int,int)": 0.0,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList()": 541.5073313782991,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int)": 541.5073313782991,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int,int)": 541.5073313782991,
        "org.jfree.chart.util$AbstractObjectList#clear()": 47.46153846153847,
        "org.jfree.chart.util$AbstractObjectList#clone()": 76.52830188679245,
        "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)": 261.9622641509434,
        "org.jfree.chart.util$AbstractObjectList#get(int)": 235.70087976539588,
        "org.jfree.chart.util$AbstractObjectList#hashCode()": 47.094339622641506,
        "org.jfree.chart.util$AbstractObjectList#indexOf(java.lang.Object)": 162.1524926686217,
        "org.jfree.chart.util$AbstractObjectList#readObject(java.io.ObjectInputStream)": 78.49056603773585,
        "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)": 234.733137829912,
        "org.jfree.chart.util$AbstractObjectList#size()": 423.44281524926686,
        "org.jfree.chart.util$AbstractObjectList#writeObject(java.io.ObjectOutputStream)": 78.49056603773585,
        "org.jfree.chart.util$BooleanList#BooleanList()": 448.6273291925466,
        "org.jfree.chart.util$BooleanList#equals(java.lang.Object)": 223.69811320754718,
        "org.jfree.chart.util$BooleanList#getBoolean(int)": 110.86792452830188,
        "org.jfree.chart.util$BooleanList#hashCode()": 46.113207547169814,
        "org.jfree.chart.util$BooleanList#setBoolean(int,java.lang.Boolean)": 20.60377358490566,
        "org.jfree.chart.util$GradientPaintTransformType#<clinit>()": 251.16981132075472,
        "org.jfree.chart.util$GradientPaintTransformType#GradientPaintTransformType(java.lang.String)": 251.16981132075472,
        "org.jfree.chart.util$GradientPaintTransformType#equals(java.lang.Object)": 31.39622641509434,
        "org.jfree.chart.util$GradientPaintTransformType#hashCode()": 0.9811320754716981,
        "org.jfree.chart.util$GradientPaintTransformType#readResolve()": 30.41509433962264,
        "org.jfree.chart.util$GradientPaintTransformType#toString()": 0.0,
        "org.jfree.chart.util$HorizontalAlignment#<clinit>()": 189.88235294117646,
        "org.jfree.chart.util$HorizontalAlignment#HorizontalAlignment(java.lang.String)": 189.88235294117646,
        "org.jfree.chart.util$HorizontalAlignment#equals(java.lang.Object)": 19.62264150943396,
        "org.jfree.chart.util$HorizontalAlignment#hashCode()": 8.830188679245284,
        "org.jfree.chart.util$HorizontalAlignment#readResolve()": 19.62264150943396,
        "org.jfree.chart.util$HorizontalAlignment#toString()": 0.0,
        "org.jfree.chart.util$Layer#<clinit>()": 73.58490566037736,
        "org.jfree.chart.util$Layer#Layer(java.lang.String)": 73.58490566037736,
        "org.jfree.chart.util$Layer#equals(java.lang.Object)": 58.867924528301884,
        "org.jfree.chart.util$Layer#hashCode()": 0.0,
        "org.jfree.chart.util$Layer#readResolve()": 0.0,
        "org.jfree.chart.util$Layer#toString()": 0.0,
        "org.jfree.chart.util$LengthAdjustmentType#<clinit>()": 45.132075471698116,
        "org.jfree.chart.util$LengthAdjustmentType#LengthAdjustmentType(java.lang.String)": 45.132075471698116,
        "org.jfree.chart.util$LengthAdjustmentType#equals(java.lang.Object)": 15.69811320754717,
        "org.jfree.chart.util$LengthAdjustmentType#hashCode()": 0.0,
        "org.jfree.chart.util$LengthAdjustmentType#readResolve()": 5.886792452830188,
        "org.jfree.chart.util$LengthAdjustmentType#toString()": 0.0,
        "org.jfree.chart.util$LineUtilities#LineUtilities()": 0.0,
        "org.jfree.chart.util$LineUtilities#clipLine(java.awt.geom.Line2D,java.awt.geom.Rectangle2D)": 4.90566037735849,
        "org.jfree.chart.util$LogFormat#LogFormat()": 8.830188679245284,
        "org.jfree.chart.util$LogFormat#LogFormat(double,java.lang.String,boolean)": 12.754716981132075,
        "org.jfree.chart.util$LogFormat#LogFormat(double,java.lang.String,java.lang.String,boolean)": 12.754716981132075,
        "org.jfree.chart.util$LogFormat#calculateLog(double)": 0.0,
        "org.jfree.chart.util$LogFormat#clone()": 0.9811320754716981,
        "org.jfree.chart.util$LogFormat#equals(java.lang.Object)": 6.867924528301887,
        "org.jfree.chart.util$LogFormat#format(double,java.lang.StringBuffer,java.text.FieldPosition)": 0.0,
        "org.jfree.chart.util$LogFormat#format(long,java.lang.StringBuffer,java.text.FieldPosition)": 0.0,
        "org.jfree.chart.util$LogFormat#getExponentFormat()": 0.0,
        "org.jfree.chart.util$LogFormat#parse(java.lang.String,java.text.ParsePosition)": 0.0,
        "org.jfree.chart.util$LogFormat#setExponentFormat(java.text.NumberFormat)": 0.9811320754716981,
        "org.jfree.chart.util$ObjectList#ObjectList()": 521.1847507331378,
        "org.jfree.chart.util$ObjectList#ObjectList(int)": 0.0,
        "org.jfree.chart.util$ObjectList#get(int)": 200.86217008797652,
        "org.jfree.chart.util$ObjectList#indexOf(java.lang.Object)": 162.1524926686217,
        "org.jfree.chart.util$ObjectList#set(int,java.lang.Object)": 201.8299120234604,
        "org.jfree.chart.util$ObjectUtilities#<clinit>()": 795.6981132075472,
        "org.jfree.chart.util$ObjectUtilities#ObjectUtilities()": 0.0,
        "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)": 127.54716981132076,
        "org.jfree.chart.util$ObjectUtilities#convertName(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)": 69.66037735849056,
        "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)": 727.0188679245283,
        "org.jfree.chart.util$ObjectUtilities#getClassLoader()": 0.0,
        "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)": 65.73584905660377,
        "org.jfree.chart.util$ObjectUtilities#getClassLoaderSource()": 0.0,
        "org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceAsStream(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)": 10.79245283018868,
        "org.jfree.chart.util$ObjectUtilities#isJDK14()": 65.73584905660377,
        "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#parseVersions(java.lang.String)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#setClassLoader(java.lang.ClassLoader)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#setClassLoaderSource(java.lang.String)": 0.0,
        "org.jfree.chart.util$PaintList#PaintList()": 454.4968944099379,
        "org.jfree.chart.util$PaintList#equals(java.lang.Object)": 228.60377358490567,
        "org.jfree.chart.util$PaintList#getPaint(int)": 82.41509433962264,
        "org.jfree.chart.util$PaintList#hashCode()": 46.113207547169814,
        "org.jfree.chart.util$PaintList#readObject(java.io.ObjectInputStream)": 66.71698113207547,
        "org.jfree.chart.util$PaintList#setPaint(int,java.awt.Paint)": 85.35849056603773,
        "org.jfree.chart.util$PaintList#writeObject(java.io.ObjectOutputStream)": 66.71698113207547,
        "org.jfree.chart.util$PaintMap#PaintMap()": 12.153846153846153,
        "org.jfree.chart.util$PaintMap#clear()": -14.326923076923077,
        "org.jfree.chart.util$PaintMap#clone()": 0.9811320754716981,
        "org.jfree.chart.util$PaintMap#containsKey(java.lang.Comparable)": 0.0,
        "org.jfree.chart.util$PaintMap#equals(java.lang.Object)": 15.69811320754717,
        "org.jfree.chart.util$PaintMap#getPaint(java.lang.Comparable)": 10.79245283018868,
        "org.jfree.chart.util$PaintMap#put(java.lang.Comparable,java.awt.Paint)": 9.81132075471698,
        "org.jfree.chart.util$PaintMap#readObject(java.io.ObjectInputStream)": 7.849056603773585,
        "org.jfree.chart.util$PaintMap#writeObject(java.io.ObjectOutputStream)": 7.849056603773585,
        "org.jfree.chart.util$PaintUtilities#PaintUtilities()": 0.0,
        "org.jfree.chart.util$PaintUtilities#colorToString(java.awt.Color)": 0.0,
        "org.jfree.chart.util$PaintUtilities#equal(java.awt.Paint,java.awt.Paint)": 512.1509433962265,
        "org.jfree.chart.util$PaintUtilities#stringToColor(java.lang.String)": 0.0,
        "org.jfree.chart.util$RectangleAnchor#<clinit>()": 232.0392156862745,
        "org.jfree.chart.util$RectangleAnchor#RectangleAnchor(java.lang.String)": 232.0392156862745,
        "org.jfree.chart.util$RectangleAnchor#coordinates(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleAnchor)": 50.0377358490566,
        "org.jfree.chart.util$RectangleAnchor#createRectangle(org.jfree.chart.util.Size2D,double,double,org.jfree.chart.util.RectangleAnchor)": 1.9622641509433962,
        "org.jfree.chart.util$RectangleAnchor#equals(java.lang.Object)": 50.0377358490566,
        "org.jfree.chart.util$RectangleAnchor#hashCode()": 2.943396226415094,
        "org.jfree.chart.util$RectangleAnchor#readResolve()": 27.471698113207548,
        "org.jfree.chart.util$RectangleAnchor#toString()": 0.0,
        "org.jfree.chart.util$RectangleEdge#<clinit>()": 182.0392156862745,
        "org.jfree.chart.util$RectangleEdge#RectangleEdge(java.lang.String)": 182.0392156862745,
        "org.jfree.chart.util$RectangleEdge#coordinate(java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)": 3.9245283018867925,
        "org.jfree.chart.util$RectangleEdge#equals(java.lang.Object)": 52.0,
        "org.jfree.chart.util$RectangleEdge#hashCode()": 8.830188679245284,
        "org.jfree.chart.util$RectangleEdge#isLeftOrRight(org.jfree.chart.util.RectangleEdge)": 61.81132075471698,
        "org.jfree.chart.util$RectangleEdge#isTopOrBottom(org.jfree.chart.util.RectangleEdge)": 68.67924528301887,
        "org.jfree.chart.util$RectangleEdge#opposite(org.jfree.chart.util.RectangleEdge)": 0.0,
        "org.jfree.chart.util$RectangleEdge#readResolve()": 14.716981132075471,
        "org.jfree.chart.util$RectangleEdge#toString()": 0.0,
        "org.jfree.chart.util$RectangleInsets#<clinit>()": 450.5395894428152,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets()": 0.0,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets(double,double,double,double)": 418.60410557184747,
        "org.jfree.chart.util$RectangleInsets#RectangleInsets(org.jfree.chart.util.UnitType,double,double,double,double)": 450.5395894428152,
        "org.jfree.chart.util$RectangleInsets#calculateBottomInset(double)": 64.75471698113208,
        "org.jfree.chart.util$RectangleInsets#calculateBottomOutset(double)": 76.52830188679245,
        "org.jfree.chart.util$RectangleInsets#calculateLeftInset(double)": 64.75471698113208,
        "org.jfree.chart.util$RectangleInsets#calculateLeftOutset(double)": 76.52830188679245,
        "org.jfree.chart.util$RectangleInsets#calculateRightInset(double)": 64.75471698113208,
        "org.jfree.chart.util$RectangleInsets#calculateRightOutset(double)": 76.52830188679245,
        "org.jfree.chart.util$RectangleInsets#calculateTopInset(double)": 64.75471698113208,
        "org.jfree.chart.util$RectangleInsets#calculateTopOutset(double)": 76.52830188679245,
        "org.jfree.chart.util$RectangleInsets#createAdjustedRectangle(java.awt.geom.Rectangle2D,org.jfree.chart.util.LengthAdjustmentType,org.jfree.chart.util.LengthAdjustmentType)": 0.0,
        "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.util$RectangleInsets#createInsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)": 0.0,
        "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D)": 57.886792452830186,
        "org.jfree.chart.util$RectangleInsets#createOutsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)": 57.886792452830186,
        "org.jfree.chart.util$RectangleInsets#equals(java.lang.Object)": 133.76923076923077,
        "org.jfree.chart.util$RectangleInsets#extendHeight(double)": 75.54716981132076,
        "org.jfree.chart.util$RectangleInsets#extendWidth(double)": 75.54716981132076,
        "org.jfree.chart.util$RectangleInsets#getBottom()": 57.886792452830186,
        "org.jfree.chart.util$RectangleInsets#getLeft()": 57.886792452830186,
        "org.jfree.chart.util$RectangleInsets#getRight()": 57.886792452830186,
        "org.jfree.chart.util$RectangleInsets#getTop()": 57.886792452830186,
        "org.jfree.chart.util$RectangleInsets#getUnitType()": 0.0,
        "org.jfree.chart.util$RectangleInsets#hashCode()": 0.0,
        "org.jfree.chart.util$RectangleInsets#toString()": 0.0,
        "org.jfree.chart.util$RectangleInsets#trim(java.awt.geom.Rectangle2D)": 62.79245283018868,
        "org.jfree.chart.util$RectangleInsets#trimHeight(double)": 63.77358490566038,
        "org.jfree.chart.util$RectangleInsets#trimWidth(double)": 63.77358490566038,
        "org.jfree.chart.util$ResourceBundleWrapper#ResourceBundleWrapper()": 0.0,
        "org.jfree.chart.util$ResourceBundleWrapper#getBundle(java.lang.String)": 276.34604105571844,
        "org.jfree.chart.util$ResourceBundleWrapper#getBundle(java.lang.String,java.util.Locale)": 0.0,
        "org.jfree.chart.util$ResourceBundleWrapper#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)": 0.0,
        "org.jfree.chart.util$ResourceBundleWrapper#removeCodeBase(java.net.URL,java.net.URLClassLoader)": 0.0,
        "org.jfree.chart.util$Rotation#<clinit>()": 9.21153846153846,
        "org.jfree.chart.util$Rotation#Rotation(java.lang.String,double)": 9.21153846153846,
        "org.jfree.chart.util$Rotation#equals(java.lang.Object)": 8.830188679245284,
        "org.jfree.chart.util$Rotation#getFactor()": 2.943396226415094,
        "org.jfree.chart.util$Rotation#hashCode()": 0.0,
        "org.jfree.chart.util$Rotation#readResolve()": 6.867924528301887,
        "org.jfree.chart.util$Rotation#toString()": 0.0,
        "org.jfree.chart.util$SerialUtilities#SerialUtilities()": 0.0,
        "org.jfree.chart.util$SerialUtilities#isSerializable(java.lang.Class)": 146.18867924528303,
        "org.jfree.chart.util$SerialUtilities#readAttributedString(java.io.ObjectInputStream)": 5.886792452830188,
        "org.jfree.chart.util$SerialUtilities#readImage(java.io.ObjectInputStream)": 0.0,
        "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)": 154.03773584905662,
        "org.jfree.chart.util$SerialUtilities#readPoint2D(java.io.ObjectInputStream)": 7.849056603773585,
        "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)": 124.60377358490567,
        "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)": 133.43396226415095,
        "org.jfree.chart.util$SerialUtilities#writeAttributedString(java.text.AttributedString,java.io.ObjectOutputStream)": 5.886792452830188,
        "org.jfree.chart.util$SerialUtilities#writeImage(java.awt.Image,java.io.ObjectOutputStream)": 0.0,
        "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)": 154.03773584905662,
        "org.jfree.chart.util$SerialUtilities#writePoint2D(java.awt.geom.Point2D,java.io.ObjectOutputStream)": 7.849056603773585,
        "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)": 124.60377358490567,
        "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)": 133.43396226415095,
        "org.jfree.chart.util$ShapeList#ShapeList()": 447.64906832298135,
        "org.jfree.chart.util$ShapeList#clone()": 64.75471698113208,
        "org.jfree.chart.util$ShapeList#equals(java.lang.Object)": 223.69811320754718,
        "org.jfree.chart.util$ShapeList#getShape(int)": 55.924528301886795,
        "org.jfree.chart.util$ShapeList#hashCode()": 0.0,
        "org.jfree.chart.util$ShapeList#readObject(java.io.ObjectInputStream)": 65.73584905660377,
        "org.jfree.chart.util$ShapeList#setShape(int,java.awt.Shape)": 25.50943396226415,
        "org.jfree.chart.util$ShapeList#writeObject(java.io.ObjectOutputStream)": 65.73584905660377,
        "org.jfree.chart.util$ShapeUtilities#<clinit>()": 375.77358490566036,
        "org.jfree.chart.util$ShapeUtilities#ShapeUtilities()": 0.0,
        "org.jfree.chart.util$ShapeUtilities#clipLine(java.awt.geom.Line2D,java.awt.geom.Rectangle2D)": 0.9811320754716981,
        "org.jfree.chart.util$ShapeUtilities#clone(java.awt.Shape)": 88.30188679245283,
        "org.jfree.chart.util$ShapeUtilities#contains(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#createDiagonalCross(float,float)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#createDiamond(float)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#createDownTriangle(float)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#createLineRegion(java.awt.geom.Line2D,float)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#createRegularCross(float,float)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#createTranslatedShape(java.awt.Shape,double,double)": 6.867924528301887,
        "org.jfree.chart.util$ShapeUtilities#createTranslatedShape(java.awt.Shape,org.jfree.chart.util.RectangleAnchor,double,double)": 50.0377358490566,
        "org.jfree.chart.util$ShapeUtilities#createUpTriangle(float)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#drawRotatedShape(java.awt.Graphics2D,java.awt.Shape,double,float,float)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Polygon,java.awt.Polygon)": 83.39622641509433,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)": 303.1698113207547,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Arc2D,java.awt.geom.Arc2D)": 2.943396226415094,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Ellipse2D,java.awt.geom.Ellipse2D)": 91.24528301886792,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.GeneralPath,java.awt.geom.GeneralPath)": 16.67924528301887,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Line2D,java.awt.geom.Line2D)": 62.79245283018868,
        "org.jfree.chart.util$ShapeUtilities#getPointInRectangle(double,double,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#intersects(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)": 0.9811320754716981,
        "org.jfree.chart.util$ShapeUtilities#isPointInRect(double,double,java.awt.geom.Rectangle2D)": 0.9811320754716981,
        "org.jfree.chart.util$ShapeUtilities#rotateShape(java.awt.Shape,double,float,float)": 33.35849056603774,
        "org.jfree.chart.util$Size2D#Size2D()": 75.54716981132076,
        "org.jfree.chart.util$Size2D#Size2D(double,double)": 82.41509433962264,
        "org.jfree.chart.util$Size2D#clone()": 0.0,
        "org.jfree.chart.util$Size2D#equals(java.lang.Object)": 0.0,
        "org.jfree.chart.util$Size2D#getHeight()": 77.50943396226415,
        "org.jfree.chart.util$Size2D#getWidth()": 78.49056603773585,
        "org.jfree.chart.util$Size2D#setHeight(double)": 0.0,
        "org.jfree.chart.util$Size2D#setWidth(double)": 0.0,
        "org.jfree.chart.util$Size2D#toString()": 0.0,
        "org.jfree.chart.util$StandardGradientPaintTransformer#StandardGradientPaintTransformer()": 250.18867924528303,
        "org.jfree.chart.util$StandardGradientPaintTransformer#StandardGradientPaintTransformer(org.jfree.chart.util.GradientPaintTransformType)": 251.16981132075472,
        "org.jfree.chart.util$StandardGradientPaintTransformer#clone()": 9.81132075471698,
        "org.jfree.chart.util$StandardGradientPaintTransformer#equals(java.lang.Object)": 84.37735849056604,
        "org.jfree.chart.util$StandardGradientPaintTransformer#getType()": 0.0,
        "org.jfree.chart.util$StandardGradientPaintTransformer#hashCode()": 0.9811320754716981,
        "org.jfree.chart.util$StandardGradientPaintTransformer#transform(java.awt.GradientPaint,java.awt.Shape)": 0.9811320754716981,
        "org.jfree.chart.util$StrokeList#StrokeList()": 452.54037267080747,
        "org.jfree.chart.util$StrokeList#clone()": 65.73584905660377,
        "org.jfree.chart.util$StrokeList#equals(java.lang.Object)": 226.64150943396226,
        "org.jfree.chart.util$StrokeList#getStroke(int)": 63.77358490566038,
        "org.jfree.chart.util$StrokeList#hashCode()": 46.113207547169814,
        "org.jfree.chart.util$StrokeList#readObject(java.io.ObjectInputStream)": 66.71698113207547,
        "org.jfree.chart.util$StrokeList#setStroke(int,java.awt.Stroke)": 47.094339622641506,
        "org.jfree.chart.util$StrokeList#writeObject(java.io.ObjectOutputStream)": 66.71698113207547,
        "org.jfree.chart.util$StrokeMap#StrokeMap()": 11.17307692307692,
        "org.jfree.chart.util$StrokeMap#clear()": 0.0,
        "org.jfree.chart.util$StrokeMap#clone()": 0.9811320754716981,
        "org.jfree.chart.util$StrokeMap#containsKey(java.lang.Comparable)": 0.0,
        "org.jfree.chart.util$StrokeMap#equals(java.lang.Object)": 15.69811320754717,
        "org.jfree.chart.util$StrokeMap#getStroke(java.lang.Comparable)": 8.830188679245284,
        "org.jfree.chart.util$StrokeMap#put(java.lang.Comparable,java.awt.Stroke)": 5.886792452830188,
        "org.jfree.chart.util$StrokeMap#readObject(java.io.ObjectInputStream)": 7.849056603773585,
        "org.jfree.chart.util$StrokeMap#writeObject(java.io.ObjectOutputStream)": 7.849056603773585,
        "org.jfree.chart.util$UnitType#<clinit>()": 457.31378299120234,
        "org.jfree.chart.util$UnitType#UnitType(java.lang.String)": 457.31378299120234,
        "org.jfree.chart.util$UnitType#equals(java.lang.Object)": 65.73584905660377,
        "org.jfree.chart.util$UnitType#hashCode()": 0.0,
        "org.jfree.chart.util$UnitType#readResolve()": 65.73584905660377,
        "org.jfree.chart.util$UnitType#toString()": 0.0,
        "org.jfree.chart.util$VerticalAlignment#<clinit>()": 180.07843137254903,
        "org.jfree.chart.util$VerticalAlignment#VerticalAlignment(java.lang.String)": 180.07843137254903,
        "org.jfree.chart.util$VerticalAlignment#equals(java.lang.Object)": 16.67924528301887,
        "org.jfree.chart.util$VerticalAlignment#hashCode()": 8.830188679245284,
        "org.jfree.chart.util$VerticalAlignment#readResolve()": 16.67924528301887,
        "org.jfree.chart.util$VerticalAlignment#toString()": 0.0,
        "org.jfree.data$DefaultKeyedValues#DefaultKeyedValues()": 183.78846153846155,
        "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,double)": 4.90566037735849,
        "org.jfree.data$DefaultKeyedValues#addValue(java.lang.Comparable,java.lang.Number)": 17.660377358490567,
        "org.jfree.data$DefaultKeyedValues#clear()": 7.849056603773585,
        "org.jfree.data$DefaultKeyedValues#clone()": 11.773584905660377,
        "org.jfree.data$DefaultKeyedValues#equals(java.lang.Object)": 1.9622641509433962,
        "org.jfree.data$DefaultKeyedValues#getIndex(java.lang.Comparable)": 174.96153846153845,
        "org.jfree.data$DefaultKeyedValues#getItemCount()": 24.528301886792452,
        "org.jfree.data$DefaultKeyedValues#getKey(int)": 16.67924528301887,
        "org.jfree.data$DefaultKeyedValues#getKeys()": 5.886792452830188,
        "org.jfree.data$DefaultKeyedValues#getValue(int)": 159.9245283018868,
        "org.jfree.data$DefaultKeyedValues#getValue(java.lang.Comparable)": 11.773584905660377,
        "org.jfree.data$DefaultKeyedValues#hashCode()": 0.0,
        "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,double)": 0.9811320754716981,
        "org.jfree.data$DefaultKeyedValues#insertValue(int,java.lang.Comparable,java.lang.Number)": 0.9811320754716981,
        "org.jfree.data$DefaultKeyedValues#rebuildIndex()": 5.886792452830188,
        "org.jfree.data$DefaultKeyedValues#removeValue(int)": 4.90566037735849,
        "org.jfree.data$DefaultKeyedValues#removeValue(java.lang.Comparable)": 4.90566037735849,
        "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,double)": 0.0,
        "org.jfree.data$DefaultKeyedValues#setValue(java.lang.Comparable,java.lang.Number)": 173.98076923076923,
        "org.jfree.data$DefaultKeyedValues#sortByKeys(org.jfree.chart.util.SortOrder)": 1.9622641509433962,
        "org.jfree.data$DefaultKeyedValues#sortByValues(org.jfree.chart.util.SortOrder)": 1.9622641509433962,
        "org.jfree.data$DomainOrder#<clinit>()": 17.660377358490567,
        "org.jfree.data$DomainOrder#DomainOrder(java.lang.String)": 17.660377358490567,
        "org.jfree.data$DomainOrder#equals(java.lang.Object)": 2.943396226415094,
        "org.jfree.data$DomainOrder#hashCode()": 0.9811320754716981,
        "org.jfree.data$DomainOrder#readResolve()": 0.9811320754716981,
        "org.jfree.data$DomainOrder#toString()": 1.9622641509433962,
        "org.jfree.data$Range#Range(double,double)": 352.7976539589443,
        "org.jfree.data$Range#combine(org.jfree.data.Range,org.jfree.data.Range)": 161.18475073313783,
        "org.jfree.data$Range#constrain(double)": 26.49056603773585,
        "org.jfree.data$Range#contains(double)": 97.13207547169812,
        "org.jfree.data$Range#equals(java.lang.Object)": 105.9622641509434,
        "org.jfree.data$Range#expand(org.jfree.data.Range,double,double)": 0.9811320754716981,
        "org.jfree.data$Range#expandToInclude(org.jfree.data.Range,double)": 29.433962264150942,
        "org.jfree.data$Range#getCentralValue()": 8.830188679245284,
        "org.jfree.data$Range#getLength()": 11.773584905660377,
        "org.jfree.data$Range#getLowerBound()": 230.07142857142858,
        "org.jfree.data$Range#getUpperBound()": 231.04017857142858,
        "org.jfree.data$Range#hashCode()": 0.9811320754716981,
        "org.jfree.data$Range#intersects(double,double)": 3.9245283018867925,
        "org.jfree.data$Range#intersects(org.jfree.data.Range)": 0.0,
        "org.jfree.data$Range#scale(org.jfree.data.Range,double)": 0.9811320754716981,
        "org.jfree.data$Range#shift(org.jfree.data.Range,double)": 1.9622641509433962,
        "org.jfree.data$Range#shift(org.jfree.data.Range,double,boolean)": 1.9622641509433962,
        "org.jfree.data$Range#shiftWithNoZeroCrossing(double,double)": 1.9622641509433962,
        "org.jfree.data$Range#toString()": 0.0,
        "org.jfree.data$RangeType#<clinit>()": 197.9589442815249,
        "org.jfree.data$RangeType#RangeType(java.lang.String)": 197.9589442815249,
        "org.jfree.data$RangeType#equals(java.lang.Object)": 60.83018867924528,
        "org.jfree.data$RangeType#hashCode()": 0.9811320754716981,
        "org.jfree.data$RangeType#readResolve()": 24.528301886792452,
        "org.jfree.data$RangeType#toString()": 26.49056603773585,
        "org.jfree.data$UnknownKeyException#UnknownKeyException(java.lang.String)": 18.641509433962263,
        "org.jfree.data.general$AbstractDataset#AbstractDataset()": 555.0557184750733,
        "org.jfree.data.general$AbstractDataset#addChangeListener(org.jfree.data.general.DatasetChangeListener)": 246.34604105571847,
        "org.jfree.data.general$AbstractDataset#clone()": 42.18867924528302,
        "org.jfree.data.general$AbstractDataset#fireDatasetChanged()": 420.91517857142856,
        "org.jfree.data.general$AbstractDataset#getGroup()": 3.9245283018867925,
        "org.jfree.data.general$AbstractDataset#hasListener(java.util.EventListener)": 2.943396226415094,
        "org.jfree.data.general$AbstractDataset#notifyListeners(org.jfree.data.general.DatasetChangeEvent)": 464.50892857142856,
        "org.jfree.data.general$AbstractDataset#readObject(java.io.ObjectInputStream)": 62.79245283018868,
        "org.jfree.data.general$AbstractDataset#removeChangeListener(org.jfree.data.general.DatasetChangeListener)": 14.716981132075471,
        "org.jfree.data.general$AbstractDataset#setGroup(org.jfree.data.general.DatasetGroup)": 0.0,
        "org.jfree.data.general$AbstractDataset#validateObject()": 62.79245283018868,
        "org.jfree.data.general$AbstractDataset#writeObject(java.io.ObjectOutputStream)": 62.79245283018868,
        "org.jfree.data.general$AbstractSeriesDataset#AbstractSeriesDataset()": 312.1524926686217,
        "org.jfree.data.general$AbstractSeriesDataset#indexOf(java.lang.Comparable)": 58.867924528301884,
        "org.jfree.data.general$AbstractSeriesDataset#seriesChanged(org.jfree.data.general.SeriesChangeEvent)": 9.81132075471698,
        "org.jfree.data.general$DatasetChangeEvent#DatasetChangeEvent(java.lang.Object,org.jfree.data.general.Dataset)": 532.7976539589442,
        "org.jfree.data.general$DatasetChangeEvent#getDataset()": 0.0,
        "org.jfree.data.general$DatasetGroup#DatasetGroup()": 556.0234604105572,
        "org.jfree.data.general$DatasetGroup#DatasetGroup(java.lang.String)": 0.0,
        "org.jfree.data.general$DatasetGroup#clone()": 0.0,
        "org.jfree.data.general$DatasetGroup#equals(java.lang.Object)": 0.9811320754716981,
        "org.jfree.data.general$DatasetGroup#getID()": 0.0,
        "org.jfree.data.general$DatasetUtilities#DatasetUtilities()": 0.0,
        "org.jfree.data.general$DatasetUtilities#calculatePieDatasetTotal(org.jfree.data.general.PieDataset)": 4.90566037735849,
        "org.jfree.data.general$DatasetUtilities#calculateStackTotal(org.jfree.data.xy.TableXYDataset,int)": 0.0,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.Comparable,org.jfree.data.KeyedValues)": 0.0,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.Comparable[],java.lang.Comparable[],double[][])": 1.9622641509433962,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.String,java.lang.String,double[][])": 0.0,
        "org.jfree.data.general$DatasetUtilities#createCategoryDataset(java.lang.String,java.lang.String,java.lang.Number[][])": 34.339622641509436,
        "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.general.PieDataset,java.lang.Comparable,double)": 0.9811320754716981,
        "org.jfree.data.general$DatasetUtilities#createConsolidatedPieDataset(org.jfree.data.general.PieDataset,java.lang.Comparable,double,int)": 0.9811320754716981,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForColumn(org.jfree.data.category.CategoryDataset,int)": 0.0,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForColumn(org.jfree.data.category.CategoryDataset,java.lang.Comparable)": 0.0,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForRow(org.jfree.data.category.CategoryDataset,int)": 0.0,
        "org.jfree.data.general$DatasetUtilities#createPieDatasetForRow(org.jfree.data.category.CategoryDataset,java.lang.Comparable)": 0.0,
        "org.jfree.data.general$DatasetUtilities#findCumulativeRangeBounds(org.jfree.data.category.CategoryDataset)": 3.9245283018867925,
        "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset)": 0.5395894428152492,
        "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,boolean)": 14.087976539589445,
        "org.jfree.data.general$DatasetUtilities#findDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)": 22.942307692307693,
        "org.jfree.data.general$DatasetUtilities#findMaximumDomainValue(org.jfree.data.xy.XYDataset)": 0.9811320754716981,
        "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.category.CategoryDataset)": 2.943396226415094,
        "org.jfree.data.general$DatasetUtilities#findMaximumRangeValue(org.jfree.data.xy.XYDataset)": 0.9811320754716981,
        "org.jfree.data.general$DatasetUtilities#findMaximumStackedRangeValue(org.jfree.data.category.CategoryDataset)": 2.943396226415094,
        "org.jfree.data.general$DatasetUtilities#findMinimumDomainValue(org.jfree.data.xy.XYDataset)": 0.9811320754716981,
        "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.category.CategoryDataset)": 1.9622641509433962,
        "org.jfree.data.general$DatasetUtilities#findMinimumRangeValue(org.jfree.data.xy.XYDataset)": 0.9811320754716981,
        "org.jfree.data.general$DatasetUtilities#findMinimumStackedRangeValue(org.jfree.data.category.CategoryDataset)": 1.9622641509433962,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset)": 0.9811320754716981,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 0.9811320754716981,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)": 75.54716981132076,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset)": 2.943396226415094,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset,boolean)": 11.773584905660377,
        "org.jfree.data.general$DatasetUtilities#findRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)": 16.07692307692308,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset)": 9.81132075471698,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)": 14.716981132075471,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)": 3.9245283018867925,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.xy.TableXYDataset)": 5.886792452830188,
        "org.jfree.data.general$DatasetUtilities#findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)": 5.886792452830188,
        "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.category.CategoryDataset)": 38.264150943396224,
        "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.general.PieDataset)": 2.943396226415094,
        "org.jfree.data.general$DatasetUtilities#isEmptyOrNull(org.jfree.data.xy.XYDataset)": 18.641509433962263,
        "org.jfree.data.general$DatasetUtilities#iterateCategoryRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 0.0,
        "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset)": 1.9622641509433962,
        "org.jfree.data.general$DatasetUtilities#iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)": -17.26923076923077,
        "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.category.CategoryDataset)": 0.0,
        "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)": 3.9245283018867925,
        "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset)": 3.9245283018867925,
        "org.jfree.data.general$DatasetUtilities#iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)": 13.735849056603774,
        "org.jfree.data.general$DatasetUtilities#iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)": 22.942307692307693,
        "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)": 77.50943396226415,
        "org.jfree.data.general$DatasetUtilities#iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)": 19.019230769230766,
        "org.jfree.data.general$DatasetUtilities#iterateXYRangeBounds(org.jfree.data.xy.XYDataset)": 0.0,
        "org.jfree.data.general$DatasetUtilities#sampleFunction2D(org.jfree.data.function.Function2D,double,double,int,java.lang.Comparable)": 0.9811320754716981,
        "org.jfree.data.general$DatasetUtilities#sampleFunction2DToSeries(org.jfree.data.function.Function2D,double,double,int,java.lang.Comparable)": 0.9811320754716981,
        "org.jfree.data.general$DefaultPieDataset#DefaultPieDataset()": 3.32692307692308,
        "org.jfree.data.general$DefaultPieDataset#DefaultPieDataset(org.jfree.data.KeyedValues)": 0.0,
        "org.jfree.data.general$DefaultPieDataset#clear()": 0.9811320754716981,
        "org.jfree.data.general$DefaultPieDataset#clone()": 3.9245283018867925,
        "org.jfree.data.general$DefaultPieDataset#equals(java.lang.Object)": 9.81132075471698,
        "org.jfree.data.general$DefaultPieDataset#getIndex(java.lang.Comparable)": 2.943396226415094,
        "org.jfree.data.general$DefaultPieDataset#getItemCount()": 14.716981132075471,
        "org.jfree.data.general$DefaultPieDataset#getKey(int)": 8.830188679245284,
        "org.jfree.data.general$DefaultPieDataset#getKeys()": 4.90566037735849,
        "org.jfree.data.general$DefaultPieDataset#getValue(int)": 6.867924528301887,
        "org.jfree.data.general$DefaultPieDataset#getValue(java.lang.Comparable)": 4.90566037735849,
        "org.jfree.data.general$DefaultPieDataset#hashCode()": 0.0,
        "org.jfree.data.general$DefaultPieDataset#insertValue(int,java.lang.Comparable,double)": 0.0,
        "org.jfree.data.general$DefaultPieDataset#insertValue(int,java.lang.Comparable,java.lang.Number)": 0.0,
        "org.jfree.data.general$DefaultPieDataset#remove(java.lang.Comparable)": 0.0,
        "org.jfree.data.general$DefaultPieDataset#setValue(java.lang.Comparable,double)": 10.79245283018868,
        "org.jfree.data.general$DefaultPieDataset#setValue(java.lang.Comparable,java.lang.Number)": -4.51923076923077,
        "org.jfree.data.general$DefaultPieDataset#sortByKeys(org.jfree.chart.util.SortOrder)": 0.0,
        "org.jfree.data.general$DefaultPieDataset#sortByValues(org.jfree.chart.util.SortOrder)": 0.0,
        "org.jfree.data.general$Series#Series(java.lang.Comparable)": 304.66517857142856,
        "org.jfree.data.general$Series#Series(java.lang.Comparable,java.lang.String)": 304.66517857142856,
        "org.jfree.data.general$Series#addChangeListener(org.jfree.data.general.SeriesChangeListener)": 163.22767857142858,
        "org.jfree.data.general$Series#addPropertyChangeListener(java.beans.PropertyChangeListener)": 0.0,
        "org.jfree.data.general$Series#clone()": 29.433962264150942,
        "org.jfree.data.general$Series#equals(java.lang.Object)": 87.32075471698113,
        "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)": 0.9811320754716981,
        "org.jfree.data.general$Series#fireSeriesChanged()": 277.54017857142856,
        "org.jfree.data.general$Series#getDescription()": 78.49056603773585,
        "org.jfree.data.general$Series#getKey()": 152.0754716981132,
        "org.jfree.data.general$Series#getNotify()": 0.0,
        "org.jfree.data.general$Series#hashCode()": 3.9245283018867925,
        "org.jfree.data.general$Series#isEmpty()": 4.90566037735849,
        "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)": 277.54017857142856,
        "org.jfree.data.general$Series#removeChangeListener(org.jfree.data.general.SeriesChangeListener)": 18.641509433962263,
        "org.jfree.data.general$Series#removePropertyChangeListener(java.beans.PropertyChangeListener)": 0.0,
        "org.jfree.data.general$Series#setDescription(java.lang.String)": 6.867924528301887,
        "org.jfree.data.general$Series#setKey(java.lang.Comparable)": 4.90566037735849,
        "org.jfree.data.general$Series#setNotify(boolean)": 0.0,
        "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)": 277.54017857142856,
        "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object,org.jfree.data.general.SeriesChangeInfo)": 277.54017857142856,
        "org.jfree.data.general$SeriesChangeEvent#getSummary()": 0.0,
        "org.jfree.data.general$SeriesChangeEvent#setSummary(org.jfree.data.general.SeriesChangeInfo)": 0.0,
        "org.jfree.data.general$SeriesException#SeriesException(java.lang.String)": 2.943396226415094,
        "org.jfree.data.time$DateRange#DateRange()": 22.1055900621118,
        "org.jfree.data.time$DateRange#DateRange(double,double)": 1.9622641509433962,
        "org.jfree.data.time$DateRange#DateRange(java.util.Date,java.util.Date)": 26.018633540372672,
        "org.jfree.data.time$DateRange#DateRange(org.jfree.data.Range)": 0.0,
        "org.jfree.data.time$DateRange#getLowerDate()": 6.867924528301887,
        "org.jfree.data.time$DateRange#getLowerMillis()": 2.943396226415094,
        "org.jfree.data.time$DateRange#getUpperDate()": 6.867924528301887,
        "org.jfree.data.time$DateRange#getUpperMillis()": 2.943396226415094,
        "org.jfree.data.time$DateRange#toString()": 0.0,
        "org.jfree.data.time$Day#<clinit>()": 106.30769230769232,
        "org.jfree.data.time$Day#Day()": -19.23076923076923,
        "org.jfree.data.time$Day#Day(int,int,int)": 101.05660377358491,
        "org.jfree.data.time$Day#Day(java.util.Date)": -17.26923076923077,
        "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)": 1.3653846153846132,
        "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)": -18.25,
        "org.jfree.data.time$Day#compareTo(java.lang.Object)": -22.173076923076923,
        "org.jfree.data.time$Day#equals(java.lang.Object)": 24.528301886792452,
        "org.jfree.data.time$Day#getDayOfMonth()": 82.41509433962264,
        "org.jfree.data.time$Day#getFirstMillisecond()": 15.69811320754717,
        "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)": 102.38461538461539,
        "org.jfree.data.time$Day#getLastMillisecond()": 15.69811320754717,
        "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)": 102.38461538461539,
        "org.jfree.data.time$Day#getMonth()": 82.41509433962264,
        "org.jfree.data.time$Day#getSerialDate()": -2.5576923076923066,
        "org.jfree.data.time$Day#getSerialIndex()": -18.25,
        "org.jfree.data.time$Day#getYear()": 80.45283018867924,
        "org.jfree.data.time$Day#hashCode()": 5.886792452830188,
        "org.jfree.data.time$Day#next()": -13.346153846153847,
        "org.jfree.data.time$Day#parseDay(java.lang.String)": 1.9622641509433962,
        "org.jfree.data.time$Day#peg(java.util.Calendar)": 102.38461538461539,
        "org.jfree.data.time$Day#previous()": 3.9245283018867925,
        "org.jfree.data.time$Day#toString()": 0.0,
        "org.jfree.data.time$Month#Month()": 0.9811320754716981,
        "org.jfree.data.time$Month#Month(int,int)": 28.452830188679247,
        "org.jfree.data.time$Month#Month(int,org.jfree.data.time.Year)": 0.9811320754716981,
        "org.jfree.data.time$Month#Month(java.util.Date)": 0.9811320754716981,
        "org.jfree.data.time$Month#Month(java.util.Date,java.util.TimeZone)": 0.9811320754716981,
        "org.jfree.data.time$Month#Month(java.util.Date,java.util.TimeZone,java.util.Locale)": 6.867924528301887,
        "org.jfree.data.time$Month#compareTo(java.lang.Object)": 2.943396226415094,
        "org.jfree.data.time$Month#equals(java.lang.Object)": 6.867924528301887,
        "org.jfree.data.time$Month#evaluateAsYear(java.lang.String)": 0.9811320754716981,
        "org.jfree.data.time$Month#findSeparator(java.lang.String)": 0.9811320754716981,
        "org.jfree.data.time$Month#getFirstMillisecond()": 4.90566037735849,
        "org.jfree.data.time$Month#getFirstMillisecond(java.util.Calendar)": 29.433962264150942,
        "org.jfree.data.time$Month#getLastMillisecond()": 4.90566037735849,
        "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)": 29.433962264150942,
        "org.jfree.data.time$Month#getMonth()": 6.867924528301887,
        "org.jfree.data.time$Month#getSerialIndex()": 3.9245283018867925,
        "org.jfree.data.time$Month#getYear()": 1.9622641509433962,
        "org.jfree.data.time$Month#getYearValue()": 2.943396226415094,
        "org.jfree.data.time$Month#hashCode()": 0.9811320754716981,
        "org.jfree.data.time$Month#next()": 2.943396226415094,
        "org.jfree.data.time$Month#parseMonth(java.lang.String)": 0.9811320754716981,
        "org.jfree.data.time$Month#peg(java.util.Calendar)": 29.433962264150942,
        "org.jfree.data.time$Month#previous()": 3.9245283018867925,
        "org.jfree.data.time$Month#toString()": 0.0,
        "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()": 261.2692307692308,
        "org.jfree.data.time$RegularTimePeriod#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone)": 1.9622641509433962,
        "org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)": 5.886792452830188,
        "org.jfree.data.time$RegularTimePeriod#getEnd()": 20.60377358490566,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()": 18.641509433962263,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)": 0.9811320754716981,
        "org.jfree.data.time$RegularTimePeriod#getStart()": 20.60377358490566,
        "org.jfree.data.time$RegularTimePeriod#toString()": 0.0,
        "org.jfree.data.time$SerialDate#<clinit>()": 153.3846153846154,
        "org.jfree.data.time$SerialDate#SerialDate()": 102.38461538461539,
        "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SerialDate#addMonths(int,org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SerialDate#addYears(int,org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SerialDate#createInstance(int)": -18.25,
        "org.jfree.data.time$SerialDate#createInstance(int,int,int)": 102.38461538461539,
        "org.jfree.data.time$SerialDate#createInstance(java.util.Date)": 0.0,
        "org.jfree.data.time$SerialDate#getDescription()": 0.0,
        "org.jfree.data.time$SerialDate#getEndOfCurrentMonth(org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int)": 0.0,
        "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int,org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SerialDate#getMonths()": 0.0,
        "org.jfree.data.time$SerialDate#getMonths(boolean)": 0.0,
        "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int)": 0.0,
        "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int,org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int)": 0.0,
        "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int,org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SerialDate#isLeapYear(int)": 101.40384615384616,
        "org.jfree.data.time$SerialDate#isValidMonthCode(int)": 0.0,
        "org.jfree.data.time$SerialDate#isValidWeekInMonthCode(int)": 0.0,
        "org.jfree.data.time$SerialDate#isValidWeekdayCode(int)": 0.0,
        "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)": 153.3846153846154,
        "org.jfree.data.time$SerialDate#leapYearCount(int)": 102.38461538461539,
        "org.jfree.data.time$SerialDate#monthCodeToQuarter(int)": 2.943396226415094,
        "org.jfree.data.time$SerialDate#monthCodeToString(int)": 0.0,
        "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)": 0.0,
        "org.jfree.data.time$SerialDate#relativeToString(int)": 0.0,
        "org.jfree.data.time$SerialDate#setDescription(java.lang.String)": 0.0,
        "org.jfree.data.time$SerialDate#stringToMonthCode(java.lang.String)": 0.9811320754716981,
        "org.jfree.data.time$SerialDate#stringToWeekdayCode(java.lang.String)": 0.0,
        "org.jfree.data.time$SerialDate#toString()": 0.0,
        "org.jfree.data.time$SerialDate#weekInMonthToString(int)": 0.0,
        "org.jfree.data.time$SerialDate#weekdayCodeToString(int)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int)": -18.25,
        "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int,int,int)": 102.38461538461539,
        "org.jfree.data.time$SpreadsheetDate#calcSerial(int,int,int)": 102.38461538461539,
        "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)": -22.173076923076923,
        "org.jfree.data.time$SpreadsheetDate#compareTo(java.lang.Object)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)": 20.60377358490566,
        "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()": 102.38461538461539,
        "org.jfree.data.time$SpreadsheetDate#getDayOfWeek()": 0.0,
        "org.jfree.data.time$SpreadsheetDate#getMonth()": 102.38461538461539,
        "org.jfree.data.time$SpreadsheetDate#getYYYY()": 102.38461538461539,
        "org.jfree.data.time$SpreadsheetDate#hashCode()": 5.886792452830188,
        "org.jfree.data.time$SpreadsheetDate#isAfter(org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#isBefore(org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate,int)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#isOn(org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#isOnOrAfter(org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#isOnOrBefore(org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#toDate()": 0.0,
        "org.jfree.data.time$SpreadsheetDate#toSerial()": 20.980769230769234,
        "org.jfree.data.time$TimePeriodAnchor#<clinit>()": 3.32692307692308,
        "org.jfree.data.time$TimePeriodAnchor#TimePeriodAnchor(java.lang.String)": 3.32692307692308,
        "org.jfree.data.time$TimePeriodAnchor#equals(java.lang.Object)": 9.81132075471698,
        "org.jfree.data.time$TimePeriodAnchor#hashCode()": 0.9811320754716981,
        "org.jfree.data.time$TimePeriodAnchor#readResolve()": 5.886792452830188,
        "org.jfree.data.time$TimePeriodAnchor#toString()": 0.0,
        "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable)": 15.096153846153847,
        "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable,java.lang.String,java.lang.String)": 15.096153846153847,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)": -1.5769230769230766,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)": -1.5769230769230766,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 36.301886792452834,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)": 36.301886792452834,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)": 3.9245283018867925,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)": 10.192307692307693,
        "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)": 0.9811320754716981,
        "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)": 4.90566037735849,
        "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 7.849056603773585,
        "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.TimeSeriesDataItem)": 7.849056603773585,
        "org.jfree.data.time$TimeSeries#clear()": 0.9811320754716981,
        "org.jfree.data.time$TimeSeries#clone()": 3.9245283018867925,
        "org.jfree.data.time$TimeSeries#createCopy(int,int)": 1.9622641509433962,
        "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)": 1.9622641509433962,
        "org.jfree.data.time$TimeSeries#delete(int,int)": 2.943396226415094,
        "org.jfree.data.time$TimeSeries#delete(int,int,boolean)": 2.943396226415094,
        "org.jfree.data.time$TimeSeries#delete(org.jfree.data.time.RegularTimePeriod)": 1.9622641509433962,
        "org.jfree.data.time$TimeSeries#equals(java.lang.Object)": 11.773584905660377,
        "org.jfree.data.time$TimeSeries#findBoundsByIteration()": 18.641509433962263,
        "org.jfree.data.time$TimeSeries#getDataItem(int)": 2.943396226415094,
        "org.jfree.data.time$TimeSeries#getDataItem(org.jfree.data.time.RegularTimePeriod)": 0.9811320754716981,
        "org.jfree.data.time$TimeSeries#getDomainDescription()": 11.773584905660377,
        "org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)": 10.79245283018868,
        "org.jfree.data.time$TimeSeries#getItemCount()": 14.115384615384613,
        "org.jfree.data.time$TimeSeries#getItems()": 0.0,
        "org.jfree.data.time$TimeSeries#getMaxY()": 9.81132075471698,
        "org.jfree.data.time$TimeSeries#getMaximumItemAge()": 13.735849056603774,
        "org.jfree.data.time$TimeSeries#getMaximumItemCount()": 13.735849056603774,
        "org.jfree.data.time$TimeSeries#getMinY()": 9.81132075471698,
        "org.jfree.data.time$TimeSeries#getNextTimePeriod()": 0.0,
        "org.jfree.data.time$TimeSeries#getRangeDescription()": 11.773584905660377,
        "org.jfree.data.time$TimeSeries#getRawDataItem(int)": 9.21153846153846,
        "org.jfree.data.time$TimeSeries#getRawDataItem(org.jfree.data.time.RegularTimePeriod)": 0.0,
        "org.jfree.data.time$TimeSeries#getTimePeriod(int)": 9.21153846153846,
        "org.jfree.data.time$TimeSeries#getTimePeriodClass()": 0.9811320754716981,
        "org.jfree.data.time$TimeSeries#getTimePeriods()": 0.0,
        "org.jfree.data.time$TimeSeries#getTimePeriodsUniqueToOtherSeries(org.jfree.data.time.TimeSeries)": 0.0,
        "org.jfree.data.time$TimeSeries#getValue(int)": 4.90566037735849,
        "org.jfree.data.time$TimeSeries#getValue(org.jfree.data.time.RegularTimePeriod)": 4.90566037735849,
        "org.jfree.data.time$TimeSeries#hashCode()": 0.9811320754716981,
        "org.jfree.data.time$TimeSeries#maxIgnoreNaN(double,double)": 10.192307692307693,
        "org.jfree.data.time$TimeSeries#minIgnoreNaN(double,double)": 10.192307692307693,
        "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)": 10.192307692307693,
        "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)": 2.943396226415094,
        "org.jfree.data.time$TimeSeries#setDomainDescription(java.lang.String)": 0.0,
        "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)": 4.90566037735849,
        "org.jfree.data.time$TimeSeries#setMaximumItemCount(int)": 4.90566037735849,
        "org.jfree.data.time$TimeSeries#setRangeDescription(java.lang.String)": 0.0,
        "org.jfree.data.time$TimeSeries#update(int,java.lang.Number)": 1.9622641509433962,
        "org.jfree.data.time$TimeSeries#update(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 1.9622641509433962,
        "org.jfree.data.time$TimeSeries#updateBoundsForAddedItem(org.jfree.data.time.TimeSeriesDataItem)": 10.192307692307693,
        "org.jfree.data.time$TimeSeries#updateBoundsForRemovedItem(org.jfree.data.time.TimeSeriesDataItem)": 4.90566037735849,
        "org.jfree.data.time$TimeSeriesCollection#TimeSeriesCollection()": -22.173076923076923,
        "org.jfree.data.time$TimeSeriesCollection#TimeSeriesCollection(java.util.TimeZone)": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#TimeSeriesCollection(org.jfree.data.time.TimeSeries)": 3.9245283018867925,
        "org.jfree.data.time$TimeSeriesCollection#TimeSeriesCollection(org.jfree.data.time.TimeSeries,java.util.TimeZone)": -18.25,
        "org.jfree.data.time$TimeSeriesCollection#addSeries(org.jfree.data.time.TimeSeries)": -25.115384615384613,
        "org.jfree.data.time$TimeSeriesCollection#clearSelection()": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#clone()": 0.9811320754716981,
        "org.jfree.data.time$TimeSeriesCollection#equals(java.lang.Object)": 5.886792452830188,
        "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(boolean)": -30.01923076923077,
        "org.jfree.data.time$TimeSeriesCollection#getDomainBounds(java.util.List,boolean)": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#getDomainLowerBound(boolean)": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#getDomainOrder()": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#getDomainUpperBound(boolean)": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#getEndX(int,int)": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#getEndY(int,int)": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#getItemCount(int)": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#getRangeBounds(java.util.List,org.jfree.data.Range,boolean)": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#getSeries()": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#getSeries(int)": 5.886792452830188,
        "org.jfree.data.time$TimeSeriesCollection#getSeries(java.lang.Comparable)": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#getSeriesCount()": 5.886792452830188,
        "org.jfree.data.time$TimeSeriesCollection#getSeriesKey(int)": 0.9811320754716981,
        "org.jfree.data.time$TimeSeriesCollection#getStartX(int,int)": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#getStartY(int,int)": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#getSurroundingItems(int,long)": 0.9811320754716981,
        "org.jfree.data.time$TimeSeriesCollection#getX(int,int)": 0.9811320754716981,
        "org.jfree.data.time$TimeSeriesCollection#getX(org.jfree.data.time.RegularTimePeriod)": 0.9811320754716981,
        "org.jfree.data.time$TimeSeriesCollection#getXPosition()": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#getXValue(int,int)": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#getY(int,int)": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#hashCode()": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#indexOf(org.jfree.data.time.TimeSeries)": 0.9811320754716981,
        "org.jfree.data.time$TimeSeriesCollection#isSelected(int,int)": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#removeAllSeries()": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#removeSeries(int)": 0.9811320754716981,
        "org.jfree.data.time$TimeSeriesCollection#removeSeries(org.jfree.data.time.TimeSeries)": 3.9245283018867925,
        "org.jfree.data.time$TimeSeriesCollection#setSelected(int,int,boolean)": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#setSelected(int,int,boolean,boolean)": 0.0,
        "org.jfree.data.time$TimeSeriesCollection#setXPosition(org.jfree.data.time.TimePeriodAnchor)": 0.9811320754716981,
        "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,double)": 7.25,
        "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 13.134615384615387,
        "org.jfree.data.time$TimeSeriesDataItem#clone()": 10.192307692307693,
        "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)": 19.62264150943396,
        "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)": 9.81132075471698,
        "org.jfree.data.time$TimeSeriesDataItem#getPeriod()": 10.192307692307693,
        "org.jfree.data.time$TimeSeriesDataItem#getValue()": 10.192307692307693,
        "org.jfree.data.time$TimeSeriesDataItem#hashCode()": 0.9811320754716981,
        "org.jfree.data.time$TimeSeriesDataItem#isSelected()": 0.0,
        "org.jfree.data.time$TimeSeriesDataItem#setSelected(boolean)": 0.0,
        "org.jfree.data.time$TimeSeriesDataItem#setValue(java.lang.Number)": 9.81132075471698,
        "org.jfree.data.time$Year#Year()": 0.9811320754716981,
        "org.jfree.data.time$Year#Year(int)": 98.11320754716981,
        "org.jfree.data.time$Year#Year(java.util.Date)": 0.9811320754716981,
        "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone)": 4.90566037735849,
        "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone,java.util.Locale)": 4.90566037735849,
        "org.jfree.data.time$Year#compareTo(java.lang.Object)": 45.132075471698116,
        "org.jfree.data.time$Year#equals(java.lang.Object)": 34.339622641509436,
        "org.jfree.data.time$Year#getFirstMillisecond()": 15.69811320754717,
        "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)": 101.05660377358491,
        "org.jfree.data.time$Year#getLastMillisecond()": 15.69811320754717,
        "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)": 101.05660377358491,
        "org.jfree.data.time$Year#getSerialIndex()": 36.301886792452834,
        "org.jfree.data.time$Year#getYear()": 52.9811320754717,
        "org.jfree.data.time$Year#hashCode()": 1.9622641509433962,
        "org.jfree.data.time$Year#next()": 2.943396226415094,
        "org.jfree.data.time$Year#parseYear(java.lang.String)": 2.943396226415094,
        "org.jfree.data.time$Year#peg(java.util.Calendar)": 101.05660377358491,
        "org.jfree.data.time$Year#previous()": 1.9622641509433962,
        "org.jfree.data.time$Year#toString()": 0.0,
        "org.jfree.data.xy$AbstractIntervalXYDataset#AbstractIntervalXYDataset()": 182.60267857142858,
        "org.jfree.data.xy$AbstractIntervalXYDataset#getEndXValue(int,int)": 6.867924528301887,
        "org.jfree.data.xy$AbstractIntervalXYDataset#getEndYValue(int,int)": 2.943396226415094,
        "org.jfree.data.xy$AbstractIntervalXYDataset#getStartXValue(int,int)": 6.867924528301887,
        "org.jfree.data.xy$AbstractIntervalXYDataset#getStartYValue(int,int)": 2.943396226415094,
        "org.jfree.data.xy$AbstractXYDataset#AbstractXYDataset()": 263.76539589442814,
        "org.jfree.data.xy$AbstractXYDataset#getDomainOrder()": 5.886792452830188,
        "org.jfree.data.xy$AbstractXYDataset#getSelectionState()": 0.0,
        "org.jfree.data.xy$AbstractXYDataset#getXValue(int,int)": 52.9811320754717,
        "org.jfree.data.xy$AbstractXYDataset#getYValue(int,int)": 51.0188679245283,
        "org.jfree.data.xy$AbstractXYDataset#setSelectionState(org.jfree.data.xy.XYDatasetSelectionState)": 79.91517857142857,
        "org.jfree.data.xy$DefaultXYDataset#DefaultXYDataset()": 1.3653846153846132,
        "org.jfree.data.xy$DefaultXYDataset#addSeries(java.lang.Comparable,double[][])": 19.62264150943396,
        "org.jfree.data.xy$DefaultXYDataset#clone()": 1.9622641509433962,
        "org.jfree.data.xy$DefaultXYDataset#equals(java.lang.Object)": 5.886792452830188,
        "org.jfree.data.xy$DefaultXYDataset#getDomainOrder()": 2.943396226415094,
        "org.jfree.data.xy$DefaultXYDataset#getItemCount(int)": 8.830188679245284,
        "org.jfree.data.xy$DefaultXYDataset#getSeriesCount()": -7.46153846153846,
        "org.jfree.data.xy$DefaultXYDataset#getSeriesKey(int)": 4.90566037735849,
        "org.jfree.data.xy$DefaultXYDataset#getX(int,int)": 0.0,
        "org.jfree.data.xy$DefaultXYDataset#getXValue(int,int)": 9.81132075471698,
        "org.jfree.data.xy$DefaultXYDataset#getY(int,int)": 0.0,
        "org.jfree.data.xy$DefaultXYDataset#getYValue(int,int)": 2.943396226415094,
        "org.jfree.data.xy$DefaultXYDataset#hashCode()": 0.0,
        "org.jfree.data.xy$DefaultXYDataset#indexOf(java.lang.Comparable)": 19.62264150943396,
        "org.jfree.data.xy$DefaultXYDataset#removeSeries(java.lang.Comparable)": 0.0,
        "org.jfree.data.xy$IntervalXYDelegate#IntervalXYDelegate(org.jfree.data.xy.XYDataset)": 10.79245283018868,
        "org.jfree.data.xy$IntervalXYDelegate#IntervalXYDelegate(org.jfree.data.xy.XYDataset,boolean)": 100.28787878787878,
        "org.jfree.data.xy$IntervalXYDelegate#calculateIntervalForSeries(int)": 6.867924528301887,
        "org.jfree.data.xy$IntervalXYDelegate#clone()": 1.9622641509433962,
        "org.jfree.data.xy$IntervalXYDelegate#datasetChanged(org.jfree.data.general.DatasetChangeEvent)": 95.43939393939394,
        "org.jfree.data.xy$IntervalXYDelegate#equals(java.lang.Object)": 15.69811320754717,
        "org.jfree.data.xy$IntervalXYDelegate#getDomainBounds(boolean)": 5.257575757575758,
        "org.jfree.data.xy$IntervalXYDelegate#getDomainLowerBound(boolean)": 0.9811320754716981,
        "org.jfree.data.xy$IntervalXYDelegate#getDomainUpperBound(boolean)": 0.9811320754716981,
        "org.jfree.data.xy$IntervalXYDelegate#getEndX(int,int)": 2.943396226415094,
        "org.jfree.data.xy$IntervalXYDelegate#getEndXValue(int,int)": 0.0,
        "org.jfree.data.xy$IntervalXYDelegate#getFixedIntervalWidth()": 0.0,
        "org.jfree.data.xy$IntervalXYDelegate#getIntervalPositionFactor()": 13.015151515151516,
        "org.jfree.data.xy$IntervalXYDelegate#getIntervalWidth()": 13.015151515151516,
        "org.jfree.data.xy$IntervalXYDelegate#getStartX(int,int)": 2.943396226415094,
        "org.jfree.data.xy$IntervalXYDelegate#getStartXValue(int,int)": 0.0,
        "org.jfree.data.xy$IntervalXYDelegate#hashCode()": 0.0,
        "org.jfree.data.xy$IntervalXYDelegate#isAutoWidth()": 13.015151515151516,
        "org.jfree.data.xy$IntervalXYDelegate#recalculateInterval()": 6.867924528301887,
        "org.jfree.data.xy$IntervalXYDelegate#setAutoWidth(boolean)": 7.849056603773585,
        "org.jfree.data.xy$IntervalXYDelegate#setFixedIntervalWidth(double)": -17.26923076923077,
        "org.jfree.data.xy$IntervalXYDelegate#setIntervalPositionFactor(double)": 5.886792452830188,
        "org.jfree.data.xy$XYDataItem#XYDataItem(double,double)": 2.943396226415094,
        "org.jfree.data.xy$XYDataItem#XYDataItem(java.lang.Number,java.lang.Number)": 109.98484848484848,
        "org.jfree.data.xy$XYDataItem#clone()": 108.04545454545455,
        "org.jfree.data.xy$XYDataItem#compareTo(java.lang.Object)": 77.98484848484848,
        "org.jfree.data.xy$XYDataItem#equals(java.lang.Object)": 18.641509433962263,
        "org.jfree.data.xy$XYDataItem#getX()": 95.43939393939394,
        "org.jfree.data.xy$XYDataItem#getXValue()": 107.07575757575758,
        "org.jfree.data.xy$XYDataItem#getY()": 107.07575757575758,
        "org.jfree.data.xy$XYDataItem#getYValue()": 107.07575757575758,
        "org.jfree.data.xy$XYDataItem#hashCode()": 0.9811320754716981,
        "org.jfree.data.xy$XYDataItem#isSelected()": 0.0,
        "org.jfree.data.xy$XYDataItem#setSelected(boolean)": 0.0,
        "org.jfree.data.xy$XYDataItem#setY(double)": 0.0,
        "org.jfree.data.xy$XYDataItem#setY(java.lang.Number)": 8.830188679245284,
        "org.jfree.data.xy$XYDataItem#toString()": 0.0,
        "org.jfree.data.xy$XYSeries#XYSeries(java.lang.Comparable)": 78.95454545454545,
        "org.jfree.data.xy$XYSeries#XYSeries(java.lang.Comparable,boolean)": 0.0,
        "org.jfree.data.xy$XYSeries#XYSeries(java.lang.Comparable,boolean,boolean)": 114.83333333333333,
        "org.jfree.data.xy$XYSeries#add(double,double)": 103.1969696969697,
        "org.jfree.data.xy$XYSeries#add(double,double,boolean)": 0.0,
        "org.jfree.data.xy$XYSeries#add(double,java.lang.Number)": 20.60377358490566,
        "org.jfree.data.xy$XYSeries#add(double,java.lang.Number,boolean)": 0.0,
        "org.jfree.data.xy$XYSeries#add(java.lang.Number,java.lang.Number)": 25.50943396226415,
        "org.jfree.data.xy$XYSeries#add(java.lang.Number,java.lang.Number,boolean)": 104.16666666666667,
        "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem)": 1.9622641509433962,
        "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem,boolean)": 106.10606060606061,
        "org.jfree.data.xy$XYSeries#addOrUpdate(double,double)": 1.9622641509433962,
        "org.jfree.data.xy$XYSeries#addOrUpdate(java.lang.Number,java.lang.Number)": 3.9245283018867925,
        "org.jfree.data.xy$XYSeries#addOrUpdate(org.jfree.data.xy.XYDataItem)": 3.9245283018867925,
        "org.jfree.data.xy$XYSeries#clear()": 1.9622641509433962,
        "org.jfree.data.xy$XYSeries#clone()": 5.886792452830188,
        "org.jfree.data.xy$XYSeries#createCopy(int,int)": 0.0,
        "org.jfree.data.xy$XYSeries#delete(int,int)": 0.9811320754716981,
        "org.jfree.data.xy$XYSeries#equals(java.lang.Object)": 19.62264150943396,
        "org.jfree.data.xy$XYSeries#findBoundsByIteration()": 13.735849056603774,
        "org.jfree.data.xy$XYSeries#getAllowDuplicateXValues()": 27.471698113207548,
        "org.jfree.data.xy$XYSeries#getAutoSort()": 3.9245283018867925,
        "org.jfree.data.xy$XYSeries#getDataItem(int)": 0.0,
        "org.jfree.data.xy$XYSeries#getItemCount()": 108.04545454545455,
        "org.jfree.data.xy$XYSeries#getItems()": 0.0,
        "org.jfree.data.xy$XYSeries#getMaxX()": 9.136363636363637,
        "org.jfree.data.xy$XYSeries#getMaxY()": 14.716981132075471,
        "org.jfree.data.xy$XYSeries#getMaximumItemCount()": 0.9811320754716981,
        "org.jfree.data.xy$XYSeries#getMinX()": 9.136363636363637,
        "org.jfree.data.xy$XYSeries#getMinY()": 14.716981132075471,
        "org.jfree.data.xy$XYSeries#getRawDataItem(int)": 81.43396226415095,
        "org.jfree.data.xy$XYSeries#getX(int)": 65.73584905660377,
        "org.jfree.data.xy$XYSeries#getY(int)": 59.84905660377358,
        "org.jfree.data.xy$XYSeries#hashCode()": 0.9811320754716981,
        "org.jfree.data.xy$XYSeries#indexOf(java.lang.Number)": 18.641509433962263,
        "org.jfree.data.xy$XYSeries#maxIgnoreNaN(double,double)": 107.07575757575758,
        "org.jfree.data.xy$XYSeries#minIgnoreNaN(double,double)": 107.07575757575758,
        "org.jfree.data.xy$XYSeries#remove(int)": 4.90566037735849,
        "org.jfree.data.xy$XYSeries#remove(java.lang.Number)": 3.9245283018867925,
        "org.jfree.data.xy$XYSeries#setMaximumItemCount(int)": 3.9245283018867925,
        "org.jfree.data.xy$XYSeries#toArray()": 1.9622641509433962,
        "org.jfree.data.xy$XYSeries#update(java.lang.Number,java.lang.Number)": 2.943396226415094,
        "org.jfree.data.xy$XYSeries#updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)": 107.07575757575758,
        "org.jfree.data.xy$XYSeries#updateBoundsForRemovedItem(org.jfree.data.xy.XYDataItem)": 6.867924528301887,
        "org.jfree.data.xy$XYSeries#updateByIndex(int,java.lang.Number)": 5.886792452830188,
        "org.jfree.data.xy$XYSeriesCollection#XYSeriesCollection()": 44.39795918367347,
        "org.jfree.data.xy$XYSeriesCollection#XYSeriesCollection(org.jfree.data.xy.XYSeries)": 63.43939393939394,
        "org.jfree.data.xy$XYSeriesCollection#addSeries(org.jfree.data.xy.XYSeries)": 34.60204081632653,
        "org.jfree.data.xy$XYSeriesCollection#clearSelection()": 0.0,
        "org.jfree.data.xy$XYSeriesCollection#clone()": 0.9811320754716981,
        "org.jfree.data.xy$XYSeriesCollection#equals(java.lang.Object)": 4.90566037735849,
        "org.jfree.data.xy$XYSeriesCollection#getDomainBounds(boolean)": 3.3181818181818183,
        "org.jfree.data.xy$XYSeriesCollection#getDomainLowerBound(boolean)": 0.9811320754716981,
        "org.jfree.data.xy$XYSeriesCollection#getDomainOrder()": 1.9622641509433962,
        "org.jfree.data.xy$XYSeriesCollection#getDomainUpperBound(boolean)": 0.9811320754716981,
        "org.jfree.data.xy$XYSeriesCollection#getEndX(int,int)": 0.9811320754716981,
        "org.jfree.data.xy$XYSeriesCollection#getEndY(int,int)": 2.943396226415094,
        "org.jfree.data.xy$XYSeriesCollection#getIntervalPositionFactor()": 0.9811320754716981,
        "org.jfree.data.xy$XYSeriesCollection#getIntervalWidth()": 0.9811320754716981,
        "org.jfree.data.xy$XYSeriesCollection#getItemCount(int)": 35.320754716981135,
        "org.jfree.data.xy$XYSeriesCollection#getRangeBounds(boolean)": 3.9245283018867925,
        "org.jfree.data.xy$XYSeriesCollection#getRangeLowerBound(boolean)": 0.9811320754716981,
        "org.jfree.data.xy$XYSeriesCollection#getRangeUpperBound(boolean)": 0.9811320754716981,
        "org.jfree.data.xy$XYSeriesCollection#getSeries()": 0.0,
        "org.jfree.data.xy$XYSeriesCollection#getSeries(int)": 45.984848484848484,
        "org.jfree.data.xy$XYSeriesCollection#getSeries(java.lang.Comparable)": 0.9811320754716981,
        "org.jfree.data.xy$XYSeriesCollection#getSeriesCount()": 53.74242424242424,
        "org.jfree.data.xy$XYSeriesCollection#getSeriesKey(int)": 26.49056603773585,
        "org.jfree.data.xy$XYSeriesCollection#getStartX(int,int)": 0.9811320754716981,
        "org.jfree.data.xy$XYSeriesCollection#getStartY(int,int)": 2.943396226415094,
        "org.jfree.data.xy$XYSeriesCollection#getX(int,int)": 31.39622641509434,
        "org.jfree.data.xy$XYSeriesCollection#getY(int,int)": 32.37735849056604,
        "org.jfree.data.xy$XYSeriesCollection#hashCode()": 0.0,
        "org.jfree.data.xy$XYSeriesCollection#indexOf(org.jfree.data.xy.XYSeries)": 0.9811320754716981,
        "org.jfree.data.xy$XYSeriesCollection#isAutoWidth()": 0.0,
        "org.jfree.data.xy$XYSeriesCollection#isSelected(int,int)": 0.0,
        "org.jfree.data.xy$XYSeriesCollection#removeAllSeries()": 0.0,
        "org.jfree.data.xy$XYSeriesCollection#removeSeries(int)": 0.9811320754716981,
        "org.jfree.data.xy$XYSeriesCollection#removeSeries(org.jfree.data.xy.XYSeries)": 0.9811320754716981,
        "org.jfree.data.xy$XYSeriesCollection#setAutoWidth(boolean)": 0.9811320754716981,
        "org.jfree.data.xy$XYSeriesCollection#setIntervalPositionFactor(double)": 0.9811320754716981,
        "org.jfree.data.xy$XYSeriesCollection#setIntervalWidth(double)": -22.173076923076923,
        "org.jfree.data.xy$XYSeriesCollection#setSelected(int,int,boolean)": 0.0,
        "org.jfree.data.xy$XYSeriesCollection#setSelected(int,int,boolean,boolean)": 0.0
    },
    "Chart-5": {
        "org.jfree.data.general$Series#Series(java.lang.Comparable)": 258.35483870967744,
        "org.jfree.data.general$Series#Series(java.lang.Comparable,java.lang.String)": 258.35483870967744,
        "org.jfree.data.general$Series#addChangeListener(org.jfree.data.general.SeriesChangeListener)": 176.3125,
        "org.jfree.data.general$Series#addPropertyChangeListener(java.beans.PropertyChangeListener)": 0.0,
        "org.jfree.data.general$Series#clone()": 28.09375,
        "org.jfree.data.general$Series#equals(java.lang.Object)": 81.375,
        "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)": 0.96875,
        "org.jfree.data.general$Series#fireSeriesChanged()": 235.1290322580645,
        "org.jfree.data.general$Series#getDescription()": 75.5625,
        "org.jfree.data.general$Series#getKey()": 132.71875,
        "org.jfree.data.general$Series#getNotify()": 0.0,
        "org.jfree.data.general$Series#hashCode()": 2.90625,
        "org.jfree.data.general$Series#isEmpty()": 4.84375,
        "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)": 235.1290322580645,
        "org.jfree.data.general$Series#removeChangeListener(org.jfree.data.general.SeriesChangeListener)": 14.53125,
        "org.jfree.data.general$Series#removePropertyChangeListener(java.beans.PropertyChangeListener)": 0.0,
        "org.jfree.data.general$Series#setDescription(java.lang.String)": 5.8125,
        "org.jfree.data.general$Series#setKey(java.lang.Comparable)": 4.84375,
        "org.jfree.data.general$Series#setNotify(boolean)": 0.0,
        "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)": 235.1290322580645,
        "org.jfree.data.general$SeriesException#SeriesException(java.lang.String)": 1.9375,
        "org.jfree.data.xy$XYDataItem#XYDataItem(double,double)": 2.90625,
        "org.jfree.data.xy$XYDataItem#XYDataItem(java.lang.Number,java.lang.Number)": 82.2258064516129,
        "org.jfree.data.xy$XYDataItem#clone()": 7.75,
        "org.jfree.data.xy$XYDataItem#compareTo(java.lang.Object)": 49.322580645161295,
        "org.jfree.data.xy$XYDataItem#equals(java.lang.Object)": 18.40625,
        "org.jfree.data.xy$XYDataItem#getX()": 67.70967741935483,
        "org.jfree.data.xy$XYDataItem#getXValue()": 0.0,
        "org.jfree.data.xy$XYDataItem#getY()": 79.4375,
        "org.jfree.data.xy$XYDataItem#getYValue()": 0.0,
        "org.jfree.data.xy$XYDataItem#hashCode()": 0.96875,
        "org.jfree.data.xy$XYDataItem#setY(double)": 0.0,
        "org.jfree.data.xy$XYDataItem#setY(java.lang.Number)": 4.84375,
        "org.jfree.data.xy$XYDataItem#toString()": 0.0,
        "org.jfree.data.xy$XYSeries#XYSeries(java.lang.Comparable)": 84.28125,
        "org.jfree.data.xy$XYSeries#XYSeries(java.lang.Comparable,boolean)": 0.0,
        "org.jfree.data.xy$XYSeries#XYSeries(java.lang.Comparable,boolean,boolean)": 87.06451612903226,
        "org.jfree.data.xy$XYSeries#add(double,double)": 107.53125,
        "org.jfree.data.xy$XYSeries#add(double,double,boolean)": 0.0,
        "org.jfree.data.xy$XYSeries#add(double,java.lang.Number)": 15.5,
        "org.jfree.data.xy$XYSeries#add(double,java.lang.Number,boolean)": 0.0,
        "org.jfree.data.xy$XYSeries#add(java.lang.Number,java.lang.Number)": 20.34375,
        "org.jfree.data.xy$XYSeries#add(java.lang.Number,java.lang.Number,boolean)": 108.5,
        "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem)": 0.0,
        "org.jfree.data.xy$XYSeries#add(org.jfree.data.xy.XYDataItem,boolean)": 108.5,
        "org.jfree.data.xy$XYSeries#addOrUpdate(double,double)": -30.032258064516128,
        "org.jfree.data.xy$XYSeries#addOrUpdate(java.lang.Number,java.lang.Number)": -28.096774193548388,
        "org.jfree.data.xy$XYSeries#clear()": 0.96875,
        "org.jfree.data.xy$XYSeries#clone()": 5.8125,
        "org.jfree.data.xy$XYSeries#createCopy(int,int)": 0.0,
        "org.jfree.data.xy$XYSeries#delete(int,int)": 0.0,
        "org.jfree.data.xy$XYSeries#equals(java.lang.Object)": 19.375,
        "org.jfree.data.xy$XYSeries#getAllowDuplicateXValues()": 26.15625,
        "org.jfree.data.xy$XYSeries#getAutoSort()": 0.0,
        "org.jfree.data.xy$XYSeries#getDataItem(int)": 96.875,
        "org.jfree.data.xy$XYSeries#getItemCount()": 80.29032258064517,
        "org.jfree.data.xy$XYSeries#getItems()": 0.0,
        "org.jfree.data.xy$XYSeries#getMaximumItemCount()": 0.96875,
        "org.jfree.data.xy$XYSeries#getX(int)": 30.03125,
        "org.jfree.data.xy$XYSeries#getY(int)": 10.65625,
        "org.jfree.data.xy$XYSeries#hashCode()": 0.96875,
        "org.jfree.data.xy$XYSeries#indexOf(java.lang.Number)": -13.580645161290324,
        "org.jfree.data.xy$XYSeries#remove(int)": 3.875,
        "org.jfree.data.xy$XYSeries#remove(java.lang.Number)": 3.875,
        "org.jfree.data.xy$XYSeries#setMaximumItemCount(int)": 1.9375,
        "org.jfree.data.xy$XYSeries#toArray()": 1.9375,
        "org.jfree.data.xy$XYSeries#update(java.lang.Number,java.lang.Number)": 1.9375,
        "org.jfree.data.xy$XYSeries#updateByIndex(int,java.lang.Number)": 0.0
    },
    "Chart-6": {
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList()": 489.16129032258067,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int)": 489.16129032258067,
        "org.jfree.chart.util$AbstractObjectList#AbstractObjectList(int,int)": 489.16129032258067,
        "org.jfree.chart.util$AbstractObjectList#clear()": 0.0,
        "org.jfree.chart.util$AbstractObjectList#clone()": 70.78787878787878,
        "org.jfree.chart.util$AbstractObjectList#equals(java.lang.Object)": 234.6451612903226,
        "org.jfree.chart.util$AbstractObjectList#get(int)": 213.3548387096774,
        "org.jfree.chart.util$AbstractObjectList#hashCode()": 14.53125,
        "org.jfree.chart.util$AbstractObjectList#indexOf(java.lang.Object)": 165.8181818181818,
        "org.jfree.chart.util$AbstractObjectList#readObject(java.io.ObjectInputStream)": 44.5625,
        "org.jfree.chart.util$AbstractObjectList#set(int,java.lang.Object)": 216.25806451612902,
        "org.jfree.chart.util$AbstractObjectList#size()": 399.16129032258067,
        "org.jfree.chart.util$AbstractObjectList#writeObject(java.io.ObjectOutputStream)": 44.5625,
        "org.jfree.chart.util$ObjectUtilities#<clinit>()": 714.6451612903226,
        "org.jfree.chart.util$ObjectUtilities#ObjectUtilities()": 0.0,
        "org.jfree.chart.util$ObjectUtilities#clone(java.lang.Object)": 108.60606060606061,
        "org.jfree.chart.util$ObjectUtilities#convertName(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#deepClone(java.util.Collection)": 52.36363636363637,
        "org.jfree.chart.util$ObjectUtilities#equal(java.lang.Object,java.lang.Object)": 649.8064516129032,
        "org.jfree.chart.util$ObjectUtilities#getClassLoader()": 0.0,
        "org.jfree.chart.util$ObjectUtilities#getClassLoader(java.lang.Class)": 64.96969696969697,
        "org.jfree.chart.util$ObjectUtilities#getClassLoaderSource()": 0.0,
        "org.jfree.chart.util$ObjectUtilities#getResource(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceAsStream(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceRelative(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#getResourceRelativeAsStream(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#hashCode(java.lang.Object)": 8.727272727272727,
        "org.jfree.chart.util$ObjectUtilities#isJDK14()": 64.96969696969697,
        "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#loadAndInstantiate(java.lang.String,java.lang.Class,java.lang.Class)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#parseVersions(java.lang.String)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#setClassLoader(java.lang.ClassLoader)": 0.0,
        "org.jfree.chart.util$ObjectUtilities#setClassLoaderSource(java.lang.String)": 0.0,
        "org.jfree.chart.util$SerialUtilities#SerialUtilities()": 0.0,
        "org.jfree.chart.util$SerialUtilities#isSerializable(java.lang.Class)": 140.6060606060606,
        "org.jfree.chart.util$SerialUtilities#readAttributedString(java.io.ObjectInputStream)": 5.818181818181818,
        "org.jfree.chart.util$SerialUtilities#readPaint(java.io.ObjectInputStream)": 148.36363636363637,
        "org.jfree.chart.util$SerialUtilities#readPoint2D(java.io.ObjectInputStream)": 8.727272727272727,
        "org.jfree.chart.util$SerialUtilities#readShape(java.io.ObjectInputStream)": 86.21875,
        "org.jfree.chart.util$SerialUtilities#readStroke(java.io.ObjectInputStream)": 128.96969696969697,
        "org.jfree.chart.util$SerialUtilities#writeAttributedString(java.text.AttributedString,java.io.ObjectOutputStream)": 5.818181818181818,
        "org.jfree.chart.util$SerialUtilities#writePaint(java.awt.Paint,java.io.ObjectOutputStream)": 148.36363636363637,
        "org.jfree.chart.util$SerialUtilities#writePoint2D(java.awt.geom.Point2D,java.io.ObjectOutputStream)": 8.727272727272727,
        "org.jfree.chart.util$SerialUtilities#writeShape(java.awt.Shape,java.io.ObjectOutputStream)": 86.21875,
        "org.jfree.chart.util$SerialUtilities#writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)": 128.96969696969697,
        "org.jfree.chart.util$ShapeList#ShapeList()": 399.16129032258067,
        "org.jfree.chart.util$ShapeList#clone()": 61.09090909090909,
        "org.jfree.chart.util$ShapeList#equals(java.lang.Object)": 197.8709677419355,
        "org.jfree.chart.util$ShapeList#getShape(int)": -10.65625,
        "org.jfree.chart.util$ShapeList#hashCode()": -31.0,
        "org.jfree.chart.util$ShapeList#readObject(java.io.ObjectInputStream)": 31.96875,
        "org.jfree.chart.util$ShapeList#setShape(int,java.awt.Shape)": 8.193548387096776,
        "org.jfree.chart.util$ShapeList#writeObject(java.io.ObjectOutputStream)": 31.96875,
        "org.jfree.chart.util$ShapeUtilities#<clinit>()": 262.7878787878788,
        "org.jfree.chart.util$ShapeUtilities#ShapeUtilities()": 0.0,
        "org.jfree.chart.util$ShapeUtilities#clone(java.awt.Shape)": 80.48484848484848,
        "org.jfree.chart.util$ShapeUtilities#contains(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#createDiagonalCross(float,float)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#createDiamond(float)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#createDownTriangle(float)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#createLineRegion(java.awt.geom.Line2D,float)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#createRegularCross(float,float)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#createTranslatedShape(java.awt.Shape,double,double)": 6.787878787878788,
        "org.jfree.chart.util$ShapeUtilities#createTranslatedShape(java.awt.Shape,org.jfree.chart.util.RectangleAnchor,double,double)": 49.45454545454545,
        "org.jfree.chart.util$ShapeUtilities#createUpTriangle(float)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#drawRotatedShape(java.awt.Graphics2D,java.awt.Shape,double,float,float)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Polygon,java.awt.Polygon)": 77.57575757575758,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.Shape,java.awt.Shape)": 157.0909090909091,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Arc2D,java.awt.geom.Arc2D)": 2.909090909090909,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Ellipse2D,java.awt.geom.Ellipse2D)": 77.57575757575758,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.GeneralPath,java.awt.geom.GeneralPath)": 16.484848484848484,
        "org.jfree.chart.util$ShapeUtilities#equal(java.awt.geom.Line2D,java.awt.geom.Line2D)": 53.333333333333336,
        "org.jfree.chart.util$ShapeUtilities#getPointInRectangle(double,double,java.awt.geom.Rectangle2D)": 0.0,
        "org.jfree.chart.util$ShapeUtilities#intersects(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)": 0.9696969696969697,
        "org.jfree.chart.util$ShapeUtilities#rotateShape(java.awt.Shape,double,float,float)": 31.03030303030303
    },
    "Chart-7": {
        "org.jfree.data.general$Series#Series(java.lang.Comparable)": 241.9032258064516,
        "org.jfree.data.general$Series#Series(java.lang.Comparable,java.lang.String)": 241.9032258064516,
        "org.jfree.data.general$Series#addChangeListener(org.jfree.data.general.SeriesChangeListener)": 161.78125,
        "org.jfree.data.general$Series#addPropertyChangeListener(java.beans.PropertyChangeListener)": 0.0,
        "org.jfree.data.general$Series#clone()": 23.25,
        "org.jfree.data.general$Series#equals(java.lang.Object)": 72.65625,
        "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)": 0.96875,
        "org.jfree.data.general$Series#fireSeriesChanged()": 221.58064516129033,
        "org.jfree.data.general$Series#getDescription()": 66.84375,
        "org.jfree.data.general$Series#getKey()": 121.09375,
        "org.jfree.data.general$Series#getNotify()": 0.0,
        "org.jfree.data.general$Series#hashCode()": 2.90625,
        "org.jfree.data.general$Series#isEmpty()": 4.84375,
        "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)": 221.58064516129033,
        "org.jfree.data.general$Series#removeChangeListener(org.jfree.data.general.SeriesChangeListener)": 11.625,
        "org.jfree.data.general$Series#removePropertyChangeListener(java.beans.PropertyChangeListener)": 0.0,
        "org.jfree.data.general$Series#setDescription(java.lang.String)": 5.8125,
        "org.jfree.data.general$Series#setKey(java.lang.Comparable)": 4.84375,
        "org.jfree.data.general$Series#setNotify(boolean)": 0.0,
        "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)": 221.58064516129033,
        "org.jfree.data.general$SeriesException#SeriesException(java.lang.String)": 1.9375,
        "org.jfree.data.time$Day#<clinit>()": 140.46875,
        "org.jfree.data.time$Day#Day()": 11.625,
        "org.jfree.data.time$Day#Day(int,int,int)": 98.8125,
        "org.jfree.data.time$Day#Day(java.util.Date)": 13.5625,
        "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)": 31.96875,
        "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)": 13.5625,
        "org.jfree.data.time$Day#compareTo(java.lang.Object)": 9.6875,
        "org.jfree.data.time$Day#equals(java.lang.Object)": 24.21875,
        "org.jfree.data.time$Day#getDayOfMonth()": 81.375,
        "org.jfree.data.time$Day#getFirstMillisecond()": 13.5625,
        "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)": 130.78125,
        "org.jfree.data.time$Day#getLastMillisecond()": 13.5625,
        "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)": 130.78125,
        "org.jfree.data.time$Day#getMonth()": 81.375,
        "org.jfree.data.time$Day#getSerialDate()": 29.0625,
        "org.jfree.data.time$Day#getSerialIndex()": 13.5625,
        "org.jfree.data.time$Day#getYear()": 79.4375,
        "org.jfree.data.time$Day#hashCode()": 5.8125,
        "org.jfree.data.time$Day#next()": 18.40625,
        "org.jfree.data.time$Day#parseDay(java.lang.String)": 1.9375,
        "org.jfree.data.time$Day#peg(java.util.Calendar)": 130.78125,
        "org.jfree.data.time$Day#previous()": 3.875,
        "org.jfree.data.time$Day#toString()": 0.0,
        "org.jfree.data.time$RegularTimePeriod#<clinit>()": 246.74193548387098,
        "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()": 239.0,
        "org.jfree.data.time$RegularTimePeriod#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone)": 0.96875,
        "org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)": 3.875,
        "org.jfree.data.time$RegularTimePeriod#getEnd()": -12.612903225806452,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()": 17.4375,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)": 0.96875,
        "org.jfree.data.time$RegularTimePeriod#getStart()": -12.612903225806452,
        "org.jfree.data.time$RegularTimePeriod#toString()": 0.0,
        "org.jfree.data.time$SimpleTimePeriod#SimpleTimePeriod(java.util.Date,java.util.Date)": 35.84375,
        "org.jfree.data.time$SimpleTimePeriod#SimpleTimePeriod(long,long)": 9.645161290322584,
        "org.jfree.data.time$SimpleTimePeriod#compareTo(java.lang.Object)": 0.96875,
        "org.jfree.data.time$SimpleTimePeriod#equals(java.lang.Object)": 11.625,
        "org.jfree.data.time$SimpleTimePeriod#getEnd()": -10.677419354838708,
        "org.jfree.data.time$SimpleTimePeriod#getEndMillis()": 0.0,
        "org.jfree.data.time$SimpleTimePeriod#getStart()": -9.70967741935484,
        "org.jfree.data.time$SimpleTimePeriod#getStartMillis()": 0.0,
        "org.jfree.data.time$SimpleTimePeriod#hashCode()": 0.96875,
        "org.jfree.data.time$TimePeriodFormatException#TimePeriodFormatException(java.lang.String)": 1.9375,
        "org.jfree.data.time$TimePeriodValue#TimePeriodValue(org.jfree.data.time.TimePeriod,double)": -18.41935483870968,
        "org.jfree.data.time$TimePeriodValue#TimePeriodValue(org.jfree.data.time.TimePeriod,java.lang.Number)": -16.483870967741936,
        "org.jfree.data.time$TimePeriodValue#clone()": 0.96875,
        "org.jfree.data.time$TimePeriodValue#equals(java.lang.Object)": 4.84375,
        "org.jfree.data.time$TimePeriodValue#getPeriod()": -19.387096774193548,
        "org.jfree.data.time$TimePeriodValue#getValue()": 2.90625,
        "org.jfree.data.time$TimePeriodValue#hashCode()": 0.0,
        "org.jfree.data.time$TimePeriodValue#setValue(java.lang.Number)": 0.96875,
        "org.jfree.data.time$TimePeriodValue#toString()": 0.0,
        "org.jfree.data.time$TimePeriodValues#TimePeriodValues(java.lang.Comparable)": -17.451612903225808,
        "org.jfree.data.time$TimePeriodValues#TimePeriodValues(java.lang.Comparable,java.lang.String,java.lang.String)": -17.451612903225808,
        "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,double)": -22.29032258064516,
        "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriod,java.lang.Number)": -22.29032258064516,
        "org.jfree.data.time$TimePeriodValues#add(org.jfree.data.time.TimePeriodValue)": -19.387096774193548,
        "org.jfree.data.time$TimePeriodValues#clone()": 0.96875,
        "org.jfree.data.time$TimePeriodValues#createCopy(int,int)": 0.96875,
        "org.jfree.data.time$TimePeriodValues#delete(int,int)": 0.96875,
        "org.jfree.data.time$TimePeriodValues#equals(java.lang.Object)": 4.84375,
        "org.jfree.data.time$TimePeriodValues#getDataItem(int)": -19.387096774193548,
        "org.jfree.data.time$TimePeriodValues#getDomainDescription()": 2.90625,
        "org.jfree.data.time$TimePeriodValues#getItemCount()": 6.78125,
        "org.jfree.data.time$TimePeriodValues#getMaxEndIndex()": 1.9375,
        "org.jfree.data.time$TimePeriodValues#getMaxMiddleIndex()": -30.032258064516128,
        "org.jfree.data.time$TimePeriodValues#getMaxStartIndex()": 0.96875,
        "org.jfree.data.time$TimePeriodValues#getMinEndIndex()": 0.0,
        "org.jfree.data.time$TimePeriodValues#getMinMiddleIndex()": 1.9375,
        "org.jfree.data.time$TimePeriodValues#getMinStartIndex()": 2.90625,
        "org.jfree.data.time$TimePeriodValues#getRangeDescription()": 2.90625,
        "org.jfree.data.time$TimePeriodValues#getTimePeriod(int)": 1.9375,
        "org.jfree.data.time$TimePeriodValues#getValue(int)": 2.90625,
        "org.jfree.data.time$TimePeriodValues#hashCode()": 0.0,
        "org.jfree.data.time$TimePeriodValues#recalculateBounds()": 0.96875,
        "org.jfree.data.time$TimePeriodValues#setDomainDescription(java.lang.String)": 0.96875,
        "org.jfree.data.time$TimePeriodValues#setRangeDescription(java.lang.String)": 0.96875,
        "org.jfree.data.time$TimePeriodValues#update(int,java.lang.Number)": 0.96875,
        "org.jfree.data.time$TimePeriodValues#updateBounds(org.jfree.data.time.TimePeriod,int)": -19.387096774193548,
        "org.jfree.data.time$Year#Year()": 0.96875,
        "org.jfree.data.time$Year#Year(int)": 48.35483870967742,
        "org.jfree.data.time$Year#Year(java.util.Date)": 0.96875,
        "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone)": 3.875,
        "org.jfree.data.time$Year#compareTo(java.lang.Object)": 31.0,
        "org.jfree.data.time$Year#equals(java.lang.Object)": 29.0625,
        "org.jfree.data.time$Year#getFirstMillisecond()": -17.451612903225808,
        "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)": 51.25806451612904,
        "org.jfree.data.time$Year#getLastMillisecond()": -17.451612903225808,
        "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)": 51.25806451612904,
        "org.jfree.data.time$Year#getSerialIndex()": 22.28125,
        "org.jfree.data.time$Year#getYear()": 58.125,
        "org.jfree.data.time$Year#hashCode()": 0.96875,
        "org.jfree.data.time$Year#next()": 2.90625,
        "org.jfree.data.time$Year#parseYear(java.lang.String)": 2.90625,
        "org.jfree.data.time$Year#peg(java.util.Calendar)": 51.25806451612904,
        "org.jfree.data.time$Year#previous()": 1.9375,
        "org.jfree.data.time$Year#toString()": 0.0
    },
    "Chart-8": {
        "org.jfree.data.time$RegularTimePeriod#<clinit>()": 246.74193548387098,
        "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()": 239.0,
        "org.jfree.data.time$RegularTimePeriod#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone)": 0.96875,
        "org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)": 3.875,
        "org.jfree.data.time$RegularTimePeriod#getEnd()": 19.375,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()": 17.4375,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)": 0.96875,
        "org.jfree.data.time$RegularTimePeriod#getStart()": 19.375,
        "org.jfree.data.time$RegularTimePeriod#toString()": 0.0,
        "org.jfree.data.time$TimePeriodFormatException#TimePeriodFormatException(java.lang.String)": 1.9375,
        "org.jfree.data.time$Week#Week()": 0.0,
        "org.jfree.data.time$Week#Week(int,int)": -9.70967741935484,
        "org.jfree.data.time$Week#Week(int,org.jfree.data.time.Year)": 0.0,
        "org.jfree.data.time$Week#Week(java.util.Date)": 0.0,
        "org.jfree.data.time$Week#Week(java.util.Date,java.util.TimeZone)": -29.064516129032256,
        "org.jfree.data.time$Week#Week(java.util.Date,java.util.TimeZone,java.util.Locale)": -29.064516129032256,
        "org.jfree.data.time$Week#compareTo(java.lang.Object)": 0.0,
        "org.jfree.data.time$Week#equals(java.lang.Object)": 4.84375,
        "org.jfree.data.time$Week#evaluateAsYear(java.lang.String)": 0.0,
        "org.jfree.data.time$Week#findSeparator(java.lang.String)": 0.0,
        "org.jfree.data.time$Week#getFirstMillisecond()": 1.9375,
        "org.jfree.data.time$Week#getFirstMillisecond(java.util.Calendar)": -9.70967741935484,
        "org.jfree.data.time$Week#getLastMillisecond()": 1.9375,
        "org.jfree.data.time$Week#getLastMillisecond(java.util.Calendar)": -9.70967741935484,
        "org.jfree.data.time$Week#getSerialIndex()": 0.96875,
        "org.jfree.data.time$Week#getWeek()": -28.096774193548388,
        "org.jfree.data.time$Week#getYear()": 1.9375,
        "org.jfree.data.time$Week#getYearValue()": 0.96875,
        "org.jfree.data.time$Week#hashCode()": 0.96875,
        "org.jfree.data.time$Week#next()": 2.90625,
        "org.jfree.data.time$Week#parseWeek(java.lang.String)": 0.0,
        "org.jfree.data.time$Week#peg(java.util.Calendar)": -9.70967741935484,
        "org.jfree.data.time$Week#previous()": 1.9375,
        "org.jfree.data.time$Week#stringToWeek(java.lang.String)": 0.0,
        "org.jfree.data.time$Week#toString()": 0.0
    },
    "Chart-9": {
        "org.jfree.data.general$Series#Series(java.lang.Comparable)": 241.9032258064516,
        "org.jfree.data.general$Series#Series(java.lang.Comparable,java.lang.String)": 241.9032258064516,
        "org.jfree.data.general$Series#addChangeListener(org.jfree.data.general.SeriesChangeListener)": 161.78125,
        "org.jfree.data.general$Series#addPropertyChangeListener(java.beans.PropertyChangeListener)": 0.0,
        "org.jfree.data.general$Series#clone()": 22.28125,
        "org.jfree.data.general$Series#equals(java.lang.Object)": 72.65625,
        "org.jfree.data.general$Series#firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)": 0.96875,
        "org.jfree.data.general$Series#fireSeriesChanged()": 221.58064516129033,
        "org.jfree.data.general$Series#getDescription()": 66.84375,
        "org.jfree.data.general$Series#getKey()": 121.09375,
        "org.jfree.data.general$Series#getNotify()": 0.0,
        "org.jfree.data.general$Series#hashCode()": 2.90625,
        "org.jfree.data.general$Series#isEmpty()": 4.84375,
        "org.jfree.data.general$Series#notifyListeners(org.jfree.data.general.SeriesChangeEvent)": 221.58064516129033,
        "org.jfree.data.general$Series#removeChangeListener(org.jfree.data.general.SeriesChangeListener)": 11.625,
        "org.jfree.data.general$Series#removePropertyChangeListener(java.beans.PropertyChangeListener)": 0.0,
        "org.jfree.data.general$Series#setDescription(java.lang.String)": 5.8125,
        "org.jfree.data.general$Series#setKey(java.lang.Comparable)": 4.84375,
        "org.jfree.data.general$Series#setNotify(boolean)": 0.0,
        "org.jfree.data.general$SeriesChangeEvent#SeriesChangeEvent(java.lang.Object)": 221.58064516129033,
        "org.jfree.data.general$SeriesException#SeriesException(java.lang.String)": 1.9375,
        "org.jfree.data.time$Day#<clinit>()": 108.35483870967741,
        "org.jfree.data.time$Day#Day()": 11.625,
        "org.jfree.data.time$Day#Day(int,int,int)": 66.74193548387096,
        "org.jfree.data.time$Day#Day(java.util.Date)": 13.5625,
        "org.jfree.data.time$Day#Day(java.util.Date,java.util.TimeZone)": 31.96875,
        "org.jfree.data.time$Day#Day(org.jfree.data.time.SerialDate)": 13.5625,
        "org.jfree.data.time$Day#compareTo(java.lang.Object)": -22.29032258064516,
        "org.jfree.data.time$Day#equals(java.lang.Object)": 24.21875,
        "org.jfree.data.time$Day#getDayOfMonth()": 81.375,
        "org.jfree.data.time$Day#getFirstMillisecond()": 13.5625,
        "org.jfree.data.time$Day#getFirstMillisecond(java.util.Calendar)": 98.67741935483872,
        "org.jfree.data.time$Day#getLastMillisecond()": 13.5625,
        "org.jfree.data.time$Day#getLastMillisecond(java.util.Calendar)": 98.67741935483872,
        "org.jfree.data.time$Day#getMonth()": 81.375,
        "org.jfree.data.time$Day#getSerialDate()": -2.93548387096774,
        "org.jfree.data.time$Day#getSerialIndex()": -18.41935483870968,
        "org.jfree.data.time$Day#getYear()": 79.4375,
        "org.jfree.data.time$Day#hashCode()": 5.8125,
        "org.jfree.data.time$Day#next()": 18.40625,
        "org.jfree.data.time$Day#parseDay(java.lang.String)": 1.9375,
        "org.jfree.data.time$Day#peg(java.util.Calendar)": 98.67741935483872,
        "org.jfree.data.time$Day#previous()": 3.875,
        "org.jfree.data.time$Day#toString()": 0.0,
        "org.jfree.data.time$FixedMillisecond#FixedMillisecond()": 0.96875,
        "org.jfree.data.time$FixedMillisecond#FixedMillisecond(java.util.Date)": 4.84375,
        "org.jfree.data.time$FixedMillisecond#FixedMillisecond(long)": 2.90625,
        "org.jfree.data.time$FixedMillisecond#compareTo(java.lang.Object)": 0.96875,
        "org.jfree.data.time$FixedMillisecond#equals(java.lang.Object)": 1.9375,
        "org.jfree.data.time$FixedMillisecond#getFirstMillisecond()": 2.90625,
        "org.jfree.data.time$FixedMillisecond#getFirstMillisecond(java.util.Calendar)": 0.0,
        "org.jfree.data.time$FixedMillisecond#getLastMillisecond()": 0.0,
        "org.jfree.data.time$FixedMillisecond#getLastMillisecond(java.util.Calendar)": 0.0,
        "org.jfree.data.time$FixedMillisecond#getMiddleMillisecond()": 0.0,
        "org.jfree.data.time$FixedMillisecond#getMiddleMillisecond(java.util.Calendar)": 0.0,
        "org.jfree.data.time$FixedMillisecond#getSerialIndex()": 0.0,
        "org.jfree.data.time$FixedMillisecond#getTime()": 0.0,
        "org.jfree.data.time$FixedMillisecond#hashCode()": 0.96875,
        "org.jfree.data.time$FixedMillisecond#next()": 0.0,
        "org.jfree.data.time$FixedMillisecond#peg(java.util.Calendar)": 0.0,
        "org.jfree.data.time$FixedMillisecond#previous()": 0.0,
        "org.jfree.data.time$Month#Month()": 0.96875,
        "org.jfree.data.time$Month#Month(int,int)": 26.15625,
        "org.jfree.data.time$Month#Month(int,org.jfree.data.time.Year)": 0.96875,
        "org.jfree.data.time$Month#Month(java.util.Date)": 0.96875,
        "org.jfree.data.time$Month#Month(java.util.Date,java.util.TimeZone)": 5.8125,
        "org.jfree.data.time$Month#compareTo(java.lang.Object)": 2.90625,
        "org.jfree.data.time$Month#equals(java.lang.Object)": 6.78125,
        "org.jfree.data.time$Month#evaluateAsYear(java.lang.String)": 0.96875,
        "org.jfree.data.time$Month#findSeparator(java.lang.String)": 0.96875,
        "org.jfree.data.time$Month#getFirstMillisecond()": 4.84375,
        "org.jfree.data.time$Month#getFirstMillisecond(java.util.Calendar)": 27.125,
        "org.jfree.data.time$Month#getLastMillisecond()": 3.875,
        "org.jfree.data.time$Month#getLastMillisecond(java.util.Calendar)": 27.125,
        "org.jfree.data.time$Month#getMonth()": 12.59375,
        "org.jfree.data.time$Month#getSerialIndex()": 3.875,
        "org.jfree.data.time$Month#getYear()": 1.9375,
        "org.jfree.data.time$Month#getYearValue()": 8.71875,
        "org.jfree.data.time$Month#hashCode()": 0.96875,
        "org.jfree.data.time$Month#next()": 2.90625,
        "org.jfree.data.time$Month#parseMonth(java.lang.String)": 0.96875,
        "org.jfree.data.time$Month#peg(java.util.Calendar)": 27.125,
        "org.jfree.data.time$Month#previous()": 2.90625,
        "org.jfree.data.time$Month#toString()": 0.0,
        "org.jfree.data.time$RegularTimePeriod#<clinit>()": 246.74193548387098,
        "org.jfree.data.time$RegularTimePeriod#RegularTimePeriod()": 239.0,
        "org.jfree.data.time$RegularTimePeriod#createInstance(java.lang.Class,java.util.Date,java.util.TimeZone)": 0.96875,
        "org.jfree.data.time$RegularTimePeriod#downsize(java.lang.Class)": 3.875,
        "org.jfree.data.time$RegularTimePeriod#getEnd()": 19.375,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond()": 17.4375,
        "org.jfree.data.time$RegularTimePeriod#getMiddleMillisecond(java.util.Calendar)": 0.96875,
        "org.jfree.data.time$RegularTimePeriod#getStart()": 19.375,
        "org.jfree.data.time$RegularTimePeriod#toString()": 0.0,
        "org.jfree.data.time$SerialDate#<clinit>()": 148.03225806451613,
        "org.jfree.data.time$SerialDate#SerialDate()": 98.67741935483872,
        "org.jfree.data.time$SerialDate#addDays(int,org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SerialDate#addMonths(int,org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SerialDate#addYears(int,org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SerialDate#createInstance(int)": 13.5625,
        "org.jfree.data.time$SerialDate#createInstance(int,int,int)": 98.67741935483872,
        "org.jfree.data.time$SerialDate#createInstance(java.util.Date)": 0.0,
        "org.jfree.data.time$SerialDate#getDescription()": 0.0,
        "org.jfree.data.time$SerialDate#getEndOfCurrentMonth(org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int)": 0.0,
        "org.jfree.data.time$SerialDate#getFollowingDayOfWeek(int,org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SerialDate#getMonths()": 0.0,
        "org.jfree.data.time$SerialDate#getMonths(boolean)": 0.0,
        "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int)": 0.0,
        "org.jfree.data.time$SerialDate#getNearestDayOfWeek(int,org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int)": 0.0,
        "org.jfree.data.time$SerialDate#getPreviousDayOfWeek(int,org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SerialDate#isLeapYear(int)": 97.70967741935485,
        "org.jfree.data.time$SerialDate#isValidMonthCode(int)": 0.0,
        "org.jfree.data.time$SerialDate#isValidWeekInMonthCode(int)": 0.0,
        "org.jfree.data.time$SerialDate#isValidWeekdayCode(int)": 0.0,
        "org.jfree.data.time$SerialDate#lastDayOfMonth(int,int)": 148.03225806451613,
        "org.jfree.data.time$SerialDate#leapYearCount(int)": 98.67741935483872,
        "org.jfree.data.time$SerialDate#monthCodeToQuarter(int)": 2.90625,
        "org.jfree.data.time$SerialDate#monthCodeToString(int)": 0.0,
        "org.jfree.data.time$SerialDate#monthCodeToString(int,boolean)": 0.0,
        "org.jfree.data.time$SerialDate#relativeToString(int)": 0.0,
        "org.jfree.data.time$SerialDate#setDescription(java.lang.String)": 0.0,
        "org.jfree.data.time$SerialDate#stringToMonthCode(java.lang.String)": 0.96875,
        "org.jfree.data.time$SerialDate#stringToWeekdayCode(java.lang.String)": 0.0,
        "org.jfree.data.time$SerialDate#toString()": 0.0,
        "org.jfree.data.time$SerialDate#weekInMonthToString(int)": 0.0,
        "org.jfree.data.time$SerialDate#weekdayCodeToString(int)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int)": 13.5625,
        "org.jfree.data.time$SpreadsheetDate#SpreadsheetDate(int,int,int)": 98.67741935483872,
        "org.jfree.data.time$SpreadsheetDate#calcSerial(int,int,int)": 98.67741935483872,
        "org.jfree.data.time$SpreadsheetDate#compare(org.jfree.data.time.SerialDate)": -22.29032258064516,
        "org.jfree.data.time$SpreadsheetDate#compareTo(java.lang.Object)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#equals(java.lang.Object)": 20.34375,
        "org.jfree.data.time$SpreadsheetDate#getDayOfMonth()": 98.67741935483872,
        "org.jfree.data.time$SpreadsheetDate#getDayOfWeek()": 0.0,
        "org.jfree.data.time$SpreadsheetDate#getMonth()": 98.67741935483872,
        "org.jfree.data.time$SpreadsheetDate#getYYYY()": 98.67741935483872,
        "org.jfree.data.time$SpreadsheetDate#hashCode()": 5.8125,
        "org.jfree.data.time$SpreadsheetDate#isAfter(org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#isBefore(org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#isInRange(org.jfree.data.time.SerialDate,org.jfree.data.time.SerialDate,int)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#isOn(org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#isOnOrAfter(org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#isOnOrBefore(org.jfree.data.time.SerialDate)": 0.0,
        "org.jfree.data.time$SpreadsheetDate#toDate()": 0.0,
        "org.jfree.data.time$SpreadsheetDate#toSerial()": 20.29032258064516,
        "org.jfree.data.time$TimePeriodFormatException#TimePeriodFormatException(java.lang.String)": 1.9375,
        "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable)": -20.35483870967742,
        "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable,java.lang.Class)": -6.806451612903224,
        "org.jfree.data.time$TimeSeries#TimeSeries(java.lang.Comparable,java.lang.String,java.lang.String,java.lang.Class)": -1.0,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double)": -11.64516129032258,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,double,boolean)": -11.64516129032258,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": -9.70967741935484,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.RegularTimePeriod,java.lang.Number,boolean)": -9.70967741935484,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem)": 2.90625,
        "org.jfree.data.time$TimeSeries#add(org.jfree.data.time.TimeSeriesDataItem,boolean)": -4.870967741935484,
        "org.jfree.data.time$TimeSeries#addAndOrUpdate(org.jfree.data.time.TimeSeries)": 0.96875,
        "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,double)": 1.9375,
        "org.jfree.data.time$TimeSeries#addOrUpdate(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 2.90625,
        "org.jfree.data.time$TimeSeries#clear()": 0.0,
        "org.jfree.data.time$TimeSeries#clone()": 2.90625,
        "org.jfree.data.time$TimeSeries#createCopy(int,int)": -29.064516129032256,
        "org.jfree.data.time$TimeSeries#createCopy(org.jfree.data.time.RegularTimePeriod,org.jfree.data.time.RegularTimePeriod)": -30.032258064516128,
        "org.jfree.data.time$TimeSeries#delete(int,int)": 1.9375,
        "org.jfree.data.time$TimeSeries#delete(org.jfree.data.time.RegularTimePeriod)": 0.96875,
        "org.jfree.data.time$TimeSeries#equals(java.lang.Object)": 9.6875,
        "org.jfree.data.time$TimeSeries#getDataItem(int)": -4.870967741935484,
        "org.jfree.data.time$TimeSeries#getDataItem(org.jfree.data.time.RegularTimePeriod)": 0.96875,
        "org.jfree.data.time$TimeSeries#getDomainDescription()": 7.75,
        "org.jfree.data.time$TimeSeries#getIndex(org.jfree.data.time.RegularTimePeriod)": -23.258064516129032,
        "org.jfree.data.time$TimeSeries#getItemCount()": -3.903225806451612,
        "org.jfree.data.time$TimeSeries#getItems()": 0.0,
        "org.jfree.data.time$TimeSeries#getMaximumItemAge()": 9.6875,
        "org.jfree.data.time$TimeSeries#getMaximumItemCount()": 9.6875,
        "org.jfree.data.time$TimeSeries#getNextTimePeriod()": 0.0,
        "org.jfree.data.time$TimeSeries#getRangeDescription()": 7.75,
        "org.jfree.data.time$TimeSeries#getTimePeriod(int)": -4.870967741935484,
        "org.jfree.data.time$TimeSeries#getTimePeriodClass()": 1.9375,
        "org.jfree.data.time$TimeSeries#getTimePeriods()": 0.0,
        "org.jfree.data.time$TimeSeries#getTimePeriodsUniqueToOtherSeries(org.jfree.data.time.TimeSeries)": 0.0,
        "org.jfree.data.time$TimeSeries#getValue(int)": 3.875,
        "org.jfree.data.time$TimeSeries#getValue(org.jfree.data.time.RegularTimePeriod)": 3.875,
        "org.jfree.data.time$TimeSeries#hashCode()": 0.96875,
        "org.jfree.data.time$TimeSeries#removeAgedItems(boolean)": -4.870967741935484,
        "org.jfree.data.time$TimeSeries#removeAgedItems(long,boolean)": 0.96875,
        "org.jfree.data.time$TimeSeries#setDomainDescription(java.lang.String)": 0.0,
        "org.jfree.data.time$TimeSeries#setMaximumItemAge(long)": 2.90625,
        "org.jfree.data.time$TimeSeries#setMaximumItemCount(int)": 2.90625,
        "org.jfree.data.time$TimeSeries#setRangeDescription(java.lang.String)": 0.0,
        "org.jfree.data.time$TimeSeries#update(int,java.lang.Number)": 0.0,
        "org.jfree.data.time$TimeSeries#update(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": 0.96875,
        "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,double)": -4.870967741935484,
        "org.jfree.data.time$TimeSeriesDataItem#TimeSeriesDataItem(org.jfree.data.time.RegularTimePeriod,java.lang.Number)": -1.9677419354838719,
        "org.jfree.data.time$TimeSeriesDataItem#clone()": 5.8125,
        "org.jfree.data.time$TimeSeriesDataItem#compareTo(java.lang.Object)": -18.41935483870968,
        "org.jfree.data.time$TimeSeriesDataItem#equals(java.lang.Object)": 7.75,
        "org.jfree.data.time$TimeSeriesDataItem#getPeriod()": -4.870967741935484,
        "org.jfree.data.time$TimeSeriesDataItem#getValue()": 5.8125,
        "org.jfree.data.time$TimeSeriesDataItem#hashCode()": 0.96875,
        "org.jfree.data.time$TimeSeriesDataItem#setValue(java.lang.Number)": 4.84375,
        "org.jfree.data.time$Year#Year()": 0.96875,
        "org.jfree.data.time$Year#Year(int)": 48.35483870967742,
        "org.jfree.data.time$Year#Year(java.util.Date)": 0.96875,
        "org.jfree.data.time$Year#Year(java.util.Date,java.util.TimeZone)": 3.875,
        "org.jfree.data.time$Year#compareTo(java.lang.Object)": -1.0,
        "org.jfree.data.time$Year#equals(java.lang.Object)": 29.0625,
        "org.jfree.data.time$Year#getFirstMillisecond()": 14.53125,
        "org.jfree.data.time$Year#getFirstMillisecond(java.util.Calendar)": 51.25806451612904,
        "org.jfree.data.time$Year#getLastMillisecond()": 14.53125,
        "org.jfree.data.time$Year#getLastMillisecond(java.util.Calendar)": 51.25806451612904,
        "org.jfree.data.time$Year#getSerialIndex()": -9.70967741935484,
        "org.jfree.data.time$Year#getYear()": 26.096774193548384,
        "org.jfree.data.time$Year#hashCode()": 0.96875,
        "org.jfree.data.time$Year#next()": 2.90625,
        "org.jfree.data.time$Year#parseYear(java.lang.String)": 2.90625,
        "org.jfree.data.time$Year#peg(java.util.Calendar)": 51.25806451612904,
        "org.jfree.data.time$Year#previous()": 1.9375,
        "org.jfree.data.time$Year#toString()": 0.0
    },
    "Lang-1": {
        "org.apache.commons.lang3$StringUtils#<clinit>()": 367.7096774193548,
        "org.apache.commons.lang3$StringUtils#StringUtils()": 0.96875,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#abbreviateMiddle(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])": 1.9375,
        "org.apache.commons.lang3$StringUtils#appendIfMissing(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#appendIfMissingIgnoreCase(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#capitalize(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#chop(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,char[])": 7.75,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,java.lang.CharSequence)": 2.90625,
        "org.apache.commons.lang3$StringUtils#containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,char[])": 8.71875,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,char[])": 4.84375,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#containsWhitespace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#countMatches(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#defaultIfBlank(java.lang.CharSequence,java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#deleteWhitespace(java.lang.String)": 14.53125,
        "org.apache.commons.lang3$StringUtils#difference(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 5.8125,
        "org.apache.commons.lang3$StringUtils#endsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#endsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#equals(java.lang.CharSequence,java.lang.CharSequence)": 16.46875,
        "org.apache.commons.lang3$StringUtils#equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#getCommonPrefix(java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,char[])": 3.875,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,char[])": 6.78125,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence[])": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#isAllLowerCase(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAllUpperCase(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlpha(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlphaSpace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlphanumeric(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlphanumericSpace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAsciiPrintable(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isBlank(java.lang.CharSequence)": -1.9677419354838719,
        "org.apache.commons.lang3$StringUtils#isEmpty(java.lang.CharSequence)": 239.28125,
        "org.apache.commons.lang3$StringUtils#isNotBlank(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isNotEmpty(java.lang.CharSequence)": 10.65625,
        "org.apache.commons.lang3$StringUtils#isNumeric(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isNumericSpace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isWhitespace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(byte[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(byte[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(char[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(char[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(double[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(double[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(float[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(float[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(int[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(int[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[])": 2.90625,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char,int,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String)": 3.875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String,int,int)": 3.875,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(long[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(long[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(short[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(short[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#lastOrdinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#left(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,char)": 18.40625,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#length(java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String,java.util.Locale)": 0.96875,
        "org.apache.commons.lang3$StringUtils#mid(java.lang.String,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#normalizeSpace(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)": 1.9375,
        "org.apache.commons.lang3$StringUtils#overlay(java.lang.String,java.lang.String,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])": 1.9375,
        "org.apache.commons.lang3$StringUtils#prependIfMissing(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#prependIfMissingIgnoreCase(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removeEnd(java.lang.String,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#removeEndIgnoreCase(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removePattern(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removeStart(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removeStartIgnoreCase(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#repeat(char,int)": 20.34375,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,int)": 3.875,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String)": 4.84375,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String,int)": 9.6875,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,char,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#replaceOnce(java.lang.String,java.lang.String,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#replacePattern(java.lang.String,java.lang.String,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#reverse(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#reverseDelimited(java.lang.String,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#right(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,char)": 5.8125,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String,boolean)": 1.9375,
        "org.apache.commons.lang3$StringUtils#splitByCharacterTypeCamelCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)": 2.90625,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,char,boolean)": 2.90625,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,java.lang.String,int,boolean)": 6.78125,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 5.8125,
        "org.apache.commons.lang3$StringUtils#startsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#startsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String,java.lang.String)": 4.84375,
        "org.apache.commons.lang3$StringUtils#stripAccents(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[],java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripEnd(java.lang.String,java.lang.String)": 6.78125,
        "org.apache.commons.lang3$StringUtils#stripStart(java.lang.String,java.lang.String)": 5.8125,
        "org.apache.commons.lang3$StringUtils#stripToEmpty(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripToNull(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringAfter(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringAfterLast(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBefore(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBeforeLast(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#substringsBetween(java.lang.String,java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#swapCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#toString(byte[],java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#trim(java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#trimToEmpty(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#trimToNull(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#uncapitalize(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String,java.util.Locale)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#<clinit>()": 53.19354838709677,
        "org.apache.commons.lang3.math$NumberUtils#NumberUtils()": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#createBigDecimal(java.lang.String)": 6.78125,
        "org.apache.commons.lang3.math$NumberUtils#createBigInteger(java.lang.String)": 3.875,
        "org.apache.commons.lang3.math$NumberUtils#createDouble(java.lang.String)": 6.78125,
        "org.apache.commons.lang3.math$NumberUtils#createFloat(java.lang.String)": 6.78125,
        "org.apache.commons.lang3.math$NumberUtils#createInteger(java.lang.String)": -27.129032258064516,
        "org.apache.commons.lang3.math$NumberUtils#createLong(java.lang.String)": 4.84375,
        "org.apache.commons.lang3.math$NumberUtils#createNumber(java.lang.String)": -22.29032258064516,
        "org.apache.commons.lang3.math$NumberUtils#isAllZeros(java.lang.String)": 6.78125,
        "org.apache.commons.lang3.math$NumberUtils#isDigits(java.lang.String)": 3.875,
        "org.apache.commons.lang3.math$NumberUtils#isNumber(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#max(byte,byte,byte)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#max(byte[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#max(double,double,double)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#max(double[])": 3.875,
        "org.apache.commons.lang3.math$NumberUtils#max(float,float,float)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#max(float[])": 3.875,
        "org.apache.commons.lang3.math$NumberUtils#max(int,int,int)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#max(int[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#max(long,long,long)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#max(long[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#max(short,short,short)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#max(short[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#min(byte,byte,byte)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#min(byte[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#min(double,double,double)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#min(double[])": 3.875,
        "org.apache.commons.lang3.math$NumberUtils#min(float,float,float)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#min(float[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#min(int,int,int)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#min(int[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#min(long,long,long)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#min(long[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#min(short,short,short)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#min(short[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#toByte(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toByte(java.lang.String,byte)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#toDouble(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toDouble(java.lang.String,double)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#toFloat(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toFloat(java.lang.String,float)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#toInt(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toInt(java.lang.String,int)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#toLong(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toLong(java.lang.String,long)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#toShort(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toShort(java.lang.String,short)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#validateArray(java.lang.Object)": 35.84375
    },
    "Lang-10": {
        "org.apache.commons.lang3.time$FastDateFormat#<clinit>()": 47.46875,
        "org.apache.commons.lang3.time$FastDateFormat#FastDateFormat(java.lang.String,java.util.TimeZone,java.util.Locale)": 47.46875,
        "org.apache.commons.lang3.time$FastDateFormat#applyRules(java.util.Calendar,java.lang.StringBuffer)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#equals(java.lang.Object)": 6.787878787878788,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Calendar)": 33.93939393939394,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Calendar,java.lang.StringBuffer)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Date)": 32.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Date,java.lang.StringBuffer)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(long)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#format(long,java.lang.StringBuffer)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int)": 1.9393939393939394,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.Locale)": 1.9393939393939394,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.TimeZone)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.TimeZone,java.util.Locale)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int)": 2.909090909090909,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.Locale)": 2.909090909090909,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.TimeZone)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance()": 1.9393939393939394,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String)": 35.878787878787875,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.Locale)": 33.93939393939394,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.TimeZone)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 11.625,
        "org.apache.commons.lang3.time$FastDateFormat#getLocale()": 7.757575757575758,
        "org.apache.commons.lang3.time$FastDateFormat#getMaxLengthEstimate()": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#getPattern()": 10.666666666666666,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.Locale)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.TimeZone)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.TimeZone,java.util.Locale)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeZone()": 5.818181818181818,
        "org.apache.commons.lang3.time$FastDateFormat#hashCode()": 2.909090909090909,
        "org.apache.commons.lang3.time$FastDateFormat#parse(java.lang.String)": -15.5,
        "org.apache.commons.lang3.time$FastDateFormat#parse(java.lang.String,java.text.ParsePosition)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#parseObject(java.lang.String,java.text.ParsePosition)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#toString()": 1.9393939393939394,
        "org.apache.commons.lang3.time$FastDateFormat$1#createInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 47.46875,
        "org.apache.commons.lang3.time$FastDateParser#<clinit>()": 85.61290322580645,
        "org.apache.commons.lang3.time$FastDateParser#FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale)": 83.6774193548387,
        "org.apache.commons.lang3.time$FastDateParser#adjustYear(int)": 7.757575757575758,
        "org.apache.commons.lang3.time$FastDateParser#copy(org.apache.commons.lang3.time.FastDateParser$KeyValue[],int,java.lang.String[])": 41.096774193548384,
        "org.apache.commons.lang3.time$FastDateParser#count(java.lang.String[])": 41.096774193548384,
        "org.apache.commons.lang3.time$FastDateParser#createKeyValues(java.lang.String[],java.lang.String[])": 41.096774193548384,
        "org.apache.commons.lang3.time$FastDateParser#equals(java.lang.Object)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateParser#escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)": 81.74193548387096,
        "org.apache.commons.lang3.time$FastDateParser#getDisplayNames(int)": 41.096774193548384,
        "org.apache.commons.lang3.time$FastDateParser#getFieldWidth()": 5.818181818181818,
        "org.apache.commons.lang3.time$FastDateParser#getLocale()": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateParser#getParsePattern()": -31.0,
        "org.apache.commons.lang3.time$FastDateParser#getPattern()": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateParser#getStrategy(java.lang.String)": 83.6774193548387,
        "org.apache.commons.lang3.time$FastDateParser#getTimeZone()": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateParser#hashCode()": 1.9393939393939394,
        "org.apache.commons.lang3.time$FastDateParser#init()": 83.6774193548387,
        "org.apache.commons.lang3.time$FastDateParser#isNextNumber()": 83.6774193548387,
        "org.apache.commons.lang3.time$FastDateParser#parse(java.lang.String)": 14.967741935483872,
        "org.apache.commons.lang3.time$FastDateParser#parse(java.lang.String,java.text.ParsePosition)": 15.935483870967744,
        "org.apache.commons.lang3.time$FastDateParser#parseObject(java.lang.String)": 0.0,
        "org.apache.commons.lang3.time$FastDateParser#parseObject(java.lang.String,java.text.ParsePosition)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateParser#readObject(java.io.ObjectInputStream)": 2.909090909090909,
        "org.apache.commons.lang3.time$FastDateParser#toArray(java.util.Map)": 6.787878787878788,
        "org.apache.commons.lang3.time$FastDateParser#toString()": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateParser$1#compare(org.apache.commons.lang3.time.FastDateParser$KeyValue,org.apache.commons.lang3.time.FastDateParser$KeyValue)": 41.096774193548384,
        "org.apache.commons.lang3.time$FastDateParser$2#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 11.636363636363637,
        "org.apache.commons.lang3.time$FastDateParser$3#modify(int)": 8.193548387096776,
        "org.apache.commons.lang3.time$FastDateParser$4#modify(int)": 10.666666666666666,
        "org.apache.commons.lang3.time$FastDateParser$5#modify(int)": 13.575757575757576,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#FastDateParser$CopyQuotedStrategy(java.lang.String)": 81.74193548387096,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": 81.74193548387096,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#isNumber()": 80.7741935483871,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 0.0,
        "org.apache.commons.lang3.time$FastDateParser$KeyValue#FastDateParser$KeyValue(java.lang.String,int)": 41.096774193548384,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#FastDateParser$NumberStrategy(int)": 85.61290322580645,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": 83.6774193548387,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#isNumber()": 5.818181818181818,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#modify(int)": 32.0,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 15.935483870967744,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#FastDateParser$TextStrategy(int)": 85.61290322580645,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": 41.096774193548384,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#isNumber()": 0.0,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": -0.5161290322580641,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#FastDateParser$TimeZoneStrategy(java.util.Locale)": 58.18181818181818,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": 58.18181818181818,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#isNumber()": 32.0,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 14.545454545454545,
        "org.apache.commons.lang3.time$FastDatePrinter#<clinit>()": 60.0625,
        "org.apache.commons.lang3.time$FastDatePrinter#FastDatePrinter(java.lang.String,java.util.TimeZone,java.util.Locale)": 60.0625,
        "org.apache.commons.lang3.time$FastDatePrinter#applyRules(java.util.Calendar,java.lang.StringBuffer)": 46.54545454545455,
        "org.apache.commons.lang3.time$FastDatePrinter#equals(java.lang.Object)": 7.757575757575758,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Calendar)": 40.72727272727273,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Calendar,java.lang.StringBuffer)": 40.72727272727273,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Date)": 34.90909090909091,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Date,java.lang.StringBuffer)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter#format(long)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter#format(long,java.lang.StringBuffer)": 0.0,
        "org.apache.commons.lang3.time$FastDatePrinter#getLocale()": 10.666666666666666,
        "org.apache.commons.lang3.time$FastDatePrinter#getMaxLengthEstimate()": 0.0,
        "org.apache.commons.lang3.time$FastDatePrinter#getPattern()": 13.575757575757576,
        "org.apache.commons.lang3.time$FastDatePrinter#getTimeZone()": 8.727272727272727,
        "org.apache.commons.lang3.time$FastDatePrinter#getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)": 4.848484848484849,
        "org.apache.commons.lang3.time$FastDatePrinter#hashCode()": 3.878787878787879,
        "org.apache.commons.lang3.time$FastDatePrinter#init()": 60.0625,
        "org.apache.commons.lang3.time$FastDatePrinter#parsePattern()": 60.0625,
        "org.apache.commons.lang3.time$FastDatePrinter#parseToken(java.lang.String,int[])": 60.0625,
        "org.apache.commons.lang3.time$FastDatePrinter#readObject(java.io.ObjectInputStream)": 2.909090909090909,
        "org.apache.commons.lang3.time$FastDatePrinter#selectNumberRule(int,int)": 91.15151515151516,
        "org.apache.commons.lang3.time$FastDatePrinter#toString()": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter$CharacterLiteral#FastDatePrinter$CharacterLiteral(char)": 57.15625,
        "org.apache.commons.lang3.time$FastDatePrinter$CharacterLiteral#appendTo(java.lang.StringBuffer,java.util.Calendar)": 42.666666666666664,
        "org.apache.commons.lang3.time$FastDatePrinter$CharacterLiteral#estimateLength()": 57.15625,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#FastDatePrinter$PaddedNumberField(int,int)": 86.3030303030303,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#appendTo(java.lang.StringBuffer,int)": 42.666666666666664,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 42.666666666666664,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#estimateLength()": 86.3030303030303,
        "org.apache.commons.lang3.time$FastDatePrinter$StringLiteral#FastDatePrinter$StringLiteral(java.lang.String)": 39.75757575757576,
        "org.apache.commons.lang3.time$FastDatePrinter$StringLiteral#appendTo(java.lang.StringBuffer,java.util.Calendar)": 2.909090909090909,
        "org.apache.commons.lang3.time$FastDatePrinter$StringLiteral#estimateLength()": 39.75757575757576,
        "org.apache.commons.lang3.time$FastDatePrinter$TextField#FastDatePrinter$TextField(int,java.lang.String[])": 20.34375,
        "org.apache.commons.lang3.time$FastDatePrinter$TextField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 4.848484848484849,
        "org.apache.commons.lang3.time$FastDatePrinter$TextField#estimateLength()": 20.34375,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneDisplayKey#FastDatePrinter$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale)": 4.848484848484849,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneDisplayKey#equals(java.lang.Object)": 2.909090909090909,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneDisplayKey#hashCode()": 4.848484848484849,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNameRule#FastDatePrinter$TimeZoneNameRule(java.util.TimeZone,java.util.Locale,int)": 4.848484848484849,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNameRule#appendTo(java.lang.StringBuffer,java.util.Calendar)": 1.9393939393939394,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNameRule#estimateLength()": 4.848484848484849,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#<clinit>()": 45.57575757575758,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#FastDatePrinter$TimeZoneNumberRule(boolean)": 45.57575757575758,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#appendTo(java.lang.StringBuffer,java.util.Calendar)": 9.696969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#estimateLength()": 45.57575757575758,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#FastDatePrinter$TwelveHourField(org.apache.commons.lang3.time.FastDatePrinter$NumberRule)": 12.606060606060606,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#appendTo(java.lang.StringBuffer,int)": 0.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 0.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#estimateLength()": 12.606060606060606,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#FastDatePrinter$TwentyFourHourField(org.apache.commons.lang3.time.FastDatePrinter$NumberRule)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#appendTo(java.lang.StringBuffer,int)": 0.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 0.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#estimateLength()": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#<clinit>()": 73.6969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#FastDatePrinter$TwoDigitMonthField()": 73.6969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#appendTo(java.lang.StringBuffer,int)": 39.75757575757576,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 39.75757575757576,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#estimateLength()": 73.6969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#FastDatePrinter$TwoDigitNumberField(int)": 81.45454545454545,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#appendTo(java.lang.StringBuffer,int)": 44.60606060606061,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 44.60606060606061,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#estimateLength()": 81.45454545454545,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#<clinit>()": 7.757575757575758,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#FastDatePrinter$TwoDigitYearField()": 7.757575757575758,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#appendTo(java.lang.StringBuffer,int)": 3.878787878787879,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 3.878787878787879,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#estimateLength()": 7.757575757575758,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#<clinit>()": -17.4375,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#FastDatePrinter$UnpaddedMonthField()": -17.4375,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#appendTo(java.lang.StringBuffer,int)": 5.818181818181818,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 5.818181818181818,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#estimateLength()": -17.4375,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#FastDatePrinter$UnpaddedNumberField(int)": 19.393939393939394,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#appendTo(java.lang.StringBuffer,int)": 5.818181818181818,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 5.818181818181818,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#estimateLength()": 19.393939393939394,
        "org.apache.commons.lang3.time$FormatCache#<clinit>()": 49.40625,
        "org.apache.commons.lang3.time$FormatCache#FormatCache()": 47.46875,
        "org.apache.commons.lang3.time$FormatCache#getDateTimeInstance(java.lang.Integer,java.lang.Integer,java.util.TimeZone,java.util.Locale)": 7.757575757575758,
        "org.apache.commons.lang3.time$FormatCache#getInstance()": 1.9393939393939394,
        "org.apache.commons.lang3.time$FormatCache#getInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 47.46875,
        "org.apache.commons.lang3.time$FormatCache#getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)": 11.636363636363637,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#FormatCache$MultipartKey(java.lang.Object[])": 49.40625,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#equals(java.lang.Object)": 21.333333333333332,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#hashCode()": 49.40625
    },
    "Lang-12": {
        "org.apache.commons.lang3$RandomStringUtils#<clinit>()": -13.096774193548388,
        "org.apache.commons.lang3$RandomStringUtils#RandomStringUtils()": 0.9696969696969697,
        "org.apache.commons.lang3$RandomStringUtils#random(int)": -29.0625,
        "org.apache.commons.lang3$RandomStringUtils#random(int,boolean,boolean)": -29.0625,
        "org.apache.commons.lang3$RandomStringUtils#random(int,char[])": -30.03125,
        "org.apache.commons.lang3$RandomStringUtils#random(int,int,int,boolean,boolean)": -29.0625,
        "org.apache.commons.lang3$RandomStringUtils#random(int,int,int,boolean,boolean,char[])": 0.0,
        "org.apache.commons.lang3$RandomStringUtils#random(int,int,int,boolean,boolean,char[],java.util.Random)": -14.064516129032258,
        "org.apache.commons.lang3$RandomStringUtils#random(int,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$RandomStringUtils#randomAlphabetic(int)": 0.9696969696969697,
        "org.apache.commons.lang3$RandomStringUtils#randomAlphanumeric(int)": 0.9696969696969697,
        "org.apache.commons.lang3$RandomStringUtils#randomAscii(int)": 0.9696969696969697,
        "org.apache.commons.lang3$RandomStringUtils#randomNumeric(int)": 0.9696969696969697
    },
    "Lang-13": {
        "org.apache.commons.lang3$SerializationException#SerializationException()": 0.96875,
        "org.apache.commons.lang3$SerializationException#SerializationException(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$SerializationException#SerializationException(java.lang.String,java.lang.Throwable)": -30.032258064516128,
        "org.apache.commons.lang3$SerializationException#SerializationException(java.lang.Throwable)": 7.75,
        "org.apache.commons.lang3$SerializationUtils#SerializationUtils()": 0.96875,
        "org.apache.commons.lang3$SerializationUtils#clone(java.io.Serializable)": -24.225806451612904,
        "org.apache.commons.lang3$SerializationUtils#deserialize(byte[])": 10.65625,
        "org.apache.commons.lang3$SerializationUtils#deserialize(java.io.InputStream)": 14.53125,
        "org.apache.commons.lang3$SerializationUtils#serialize(java.io.Serializable)": -15.516129032258064,
        "org.apache.commons.lang3$SerializationUtils#serialize(java.io.Serializable,java.io.OutputStream)": -9.70967741935484,
        "org.apache.commons.lang3$SerializationUtils$ClassLoaderAwareObjectInputStream#SerializationUtils$ClassLoaderAwareObjectInputStream(java.io.InputStream,java.lang.ClassLoader)": -26.161290322580644,
        "org.apache.commons.lang3$SerializationUtils$ClassLoaderAwareObjectInputStream#resolveClass(java.io.ObjectStreamClass)": -26.161290322580644
    },
    "Lang-14": {
        "org.apache.commons.lang3$CharSequenceUtils#CharSequenceUtils()": 0.96875,
        "org.apache.commons.lang3$CharSequenceUtils#indexOf(java.lang.CharSequence,int,int)": 4.84375,
        "org.apache.commons.lang3$CharSequenceUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 7.75,
        "org.apache.commons.lang3$CharSequenceUtils#lastIndexOf(java.lang.CharSequence,int,int)": 1.9375,
        "org.apache.commons.lang3$CharSequenceUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 3.875,
        "org.apache.commons.lang3$CharSequenceUtils#regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)": 14.53125,
        "org.apache.commons.lang3$CharSequenceUtils#subSequence(java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$CharSequenceUtils#toCharArray(java.lang.CharSequence)": 2.90625,
        "org.apache.commons.lang3$StringUtils#<clinit>()": 270.93548387096774,
        "org.apache.commons.lang3$StringUtils#StringUtils()": 0.96875,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#abbreviateMiddle(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#capitalize(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#chop(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,char[])": 7.75,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,java.lang.CharSequence)": 2.90625,
        "org.apache.commons.lang3$StringUtils#containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,char[])": 7.75,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,char[])": 4.84375,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#containsWhitespace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#countMatches(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#defaultIfBlank(java.lang.CharSequence,java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#deleteWhitespace(java.lang.String)": 14.53125,
        "org.apache.commons.lang3$StringUtils#difference(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 3.875,
        "org.apache.commons.lang3$StringUtils#endsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#endsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#equals(java.lang.CharSequence,java.lang.CharSequence)": -15.516129032258064,
        "org.apache.commons.lang3$StringUtils#equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#getCommonPrefix(java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,char[])": 3.875,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,char[])": 6.78125,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence[])": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#isAllLowerCase(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAllUpperCase(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlpha(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlphaSpace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlphanumeric(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlphanumericSpace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAsciiPrintable(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isBlank(java.lang.CharSequence)": 23.25,
        "org.apache.commons.lang3$StringUtils#isEmpty(java.lang.CharSequence)": 157.90625,
        "org.apache.commons.lang3$StringUtils#isNotBlank(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isNotEmpty(java.lang.CharSequence)": 8.71875,
        "org.apache.commons.lang3$StringUtils#isNumeric(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isNumericSpace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isWhitespace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[])": 2.90625,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char,int,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String)": 3.875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String,int,int)": 3.875,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#lastOrdinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#left(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,char)": 17.4375,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#length(java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String,java.util.Locale)": 0.96875,
        "org.apache.commons.lang3$StringUtils#mid(java.lang.String,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#normalizeSpace(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)": 1.9375,
        "org.apache.commons.lang3$StringUtils#overlay(java.lang.String,java.lang.String,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removeAccentsJava6(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removeAccentsSUN(java.lang.CharSequence)": 0.0,
        "org.apache.commons.lang3$StringUtils#removeEnd(java.lang.String,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#removeEndIgnoreCase(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removeStart(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removeStartIgnoreCase(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#repeat(char,int)": 20.34375,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,int)": 3.875,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String)": 4.84375,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String,int)": 9.6875,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,char,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#replaceOnce(java.lang.String,java.lang.String,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#reverse(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#reverseDelimited(java.lang.String,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#right(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,char)": 5.8125,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String,boolean)": 1.9375,
        "org.apache.commons.lang3$StringUtils#splitByCharacterTypeCamelCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)": 2.90625,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,char,boolean)": 2.90625,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,java.lang.String,int,boolean)": 6.78125,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 3.875,
        "org.apache.commons.lang3$StringUtils#startsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#startsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String,java.lang.String)": 4.84375,
        "org.apache.commons.lang3$StringUtils#stripAccents(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[],java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripEnd(java.lang.String,java.lang.String)": 6.78125,
        "org.apache.commons.lang3$StringUtils#stripStart(java.lang.String,java.lang.String)": 5.8125,
        "org.apache.commons.lang3$StringUtils#stripToEmpty(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripToNull(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringAfter(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringAfterLast(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBefore(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBeforeLast(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#substringsBetween(java.lang.String,java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#swapCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#toString(byte[],java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#trim(java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#trimToEmpty(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#trimToNull(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#uncapitalize(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String,java.util.Locale)": 0.96875,
        "org.apache.commons.lang3$StringUtils$InitStripAccents#<clinit>()": 0.96875,
        "org.apache.commons.lang3$StringUtils$InitStripAccents#StringUtils$InitStripAccents()": 0.0
    },
    "Lang-15": {
        "org.apache.commons.lang3$ArrayUtils#<clinit>()": 338.09375,
        "org.apache.commons.lang3$ArrayUtils#ArrayUtils()": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#add(boolean[],boolean)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#add(boolean[],int,boolean)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#add(byte[],byte)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#add(byte[],int,byte)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#add(char[],char)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#add(char[],int,char)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#add(double[],double)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#add(double[],int,double)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#add(float[],float)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#add(float[],int,float)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#add(int[],int)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#add(int[],int,int)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#add(java.lang.Object,int,java.lang.Object,java.lang.Class)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#add(java.lang.Object[],int,java.lang.Object)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#add(java.lang.Object[],java.lang.Object)": 3.878787878787879,
        "org.apache.commons.lang3$ArrayUtils#add(long[],int,long)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#add(long[],long)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#add(short[],int,short)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#add(short[],short)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#addAll(boolean[],boolean[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#addAll(byte[],byte[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#addAll(char[],char[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#addAll(double[],double[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#addAll(float[],float[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#addAll(int[],int[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#addAll(java.lang.Object[],java.lang.Object[])": 3.878787878787879,
        "org.apache.commons.lang3$ArrayUtils#addAll(long[],long[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#addAll(short[],short[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#clone(boolean[])": 3.878787878787879,
        "org.apache.commons.lang3$ArrayUtils#clone(byte[])": 3.878787878787879,
        "org.apache.commons.lang3$ArrayUtils#clone(char[])": 14.545454545454545,
        "org.apache.commons.lang3$ArrayUtils#clone(double[])": 3.878787878787879,
        "org.apache.commons.lang3$ArrayUtils#clone(float[])": 3.878787878787879,
        "org.apache.commons.lang3$ArrayUtils#clone(int[])": 55.27272727272727,
        "org.apache.commons.lang3$ArrayUtils#clone(java.lang.Object[])": -4.84375,
        "org.apache.commons.lang3$ArrayUtils#clone(long[])": 3.878787878787879,
        "org.apache.commons.lang3$ArrayUtils#clone(short[])": 3.878787878787879,
        "org.apache.commons.lang3$ArrayUtils#contains(boolean[],boolean)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#contains(byte[],byte)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#contains(char[],char)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#contains(double[],double)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#contains(double[],double,double)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#contains(float[],float)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#contains(int[],int)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#contains(java.lang.Object[],java.lang.Object)": 22.303030303030305,
        "org.apache.commons.lang3$ArrayUtils#contains(long[],long)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#contains(short[],short)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#copyArrayGrow1(java.lang.Object,java.lang.Class)": 10.666666666666666,
        "org.apache.commons.lang3$ArrayUtils#extractIndices(java.util.HashSet)": 8.727272727272727,
        "org.apache.commons.lang3$ArrayUtils#getLength(java.lang.Object)": 72.72727272727273,
        "org.apache.commons.lang3$ArrayUtils#hashCode(java.lang.Object)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#indexOf(boolean[],boolean)": 2.909090909090909,
        "org.apache.commons.lang3$ArrayUtils#indexOf(boolean[],boolean,int)": 4.848484848484849,
        "org.apache.commons.lang3$ArrayUtils#indexOf(byte[],byte)": 2.909090909090909,
        "org.apache.commons.lang3$ArrayUtils#indexOf(byte[],byte,int)": 4.848484848484849,
        "org.apache.commons.lang3$ArrayUtils#indexOf(char[],char)": 2.909090909090909,
        "org.apache.commons.lang3$ArrayUtils#indexOf(char[],char,int)": 4.848484848484849,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double)": 2.909090909090909,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double,double)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double,int)": 4.848484848484849,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double,int,double)": 2.909090909090909,
        "org.apache.commons.lang3$ArrayUtils#indexOf(float[],float)": 2.909090909090909,
        "org.apache.commons.lang3$ArrayUtils#indexOf(float[],float,int)": 4.848484848484849,
        "org.apache.commons.lang3$ArrayUtils#indexOf(int[],int)": 2.909090909090909,
        "org.apache.commons.lang3$ArrayUtils#indexOf(int[],int,int)": 4.848484848484849,
        "org.apache.commons.lang3$ArrayUtils#indexOf(java.lang.Object[],java.lang.Object)": 24.242424242424242,
        "org.apache.commons.lang3$ArrayUtils#indexOf(java.lang.Object[],java.lang.Object,int)": 26.181818181818183,
        "org.apache.commons.lang3$ArrayUtils#indexOf(long[],long)": 2.909090909090909,
        "org.apache.commons.lang3$ArrayUtils#indexOf(long[],long,int)": 4.848484848484849,
        "org.apache.commons.lang3$ArrayUtils#indexOf(short[],short)": 2.909090909090909,
        "org.apache.commons.lang3$ArrayUtils#indexOf(short[],short,int)": 4.848484848484849,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(boolean[])": 7.757575757575758,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(byte[])": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(char[])": 20.363636363636363,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(double[])": 12.606060606060606,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(float[])": 7.757575757575758,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(int[])": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(java.lang.Object[])": 3.878787878787879,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(long[])": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(short[])": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#isEquals(java.lang.Object,java.lang.Object)": 10.666666666666666,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(boolean[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(byte[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(char[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(double[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(float[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(int[])": 53.333333333333336,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(java.lang.Object[])": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(long[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(short[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(boolean[],boolean[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(byte[],byte[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(char[],char[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(double[],double[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(float[],float[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(int[],int[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(java.lang.Object[],java.lang.Object[])": 13.575757575757576,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(long[],long[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(short[],short[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#isSameType(java.lang.Object,java.lang.Object)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(boolean[],boolean)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(boolean[],boolean,int)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(byte[],byte)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(byte[],byte,int)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(char[],char)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(char[],char,int)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double,double)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double,int)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double,int,double)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(float[],float)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(float[],float,int)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(int[],int)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(int[],int,int)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(java.lang.Object[],java.lang.Object)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(java.lang.Object[],java.lang.Object,int)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(long[],long)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(long[],long,int)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(short[],short)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(short[],short,int)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(boolean[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(byte[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(char[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(double[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(float[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(int[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Boolean[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Byte[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Character[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Double[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Float[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Integer[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Long[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Object[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Short[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.String[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(long[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(short[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#remove(boolean[],int)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#remove(byte[],int)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#remove(char[],int)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#remove(double[],int)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#remove(float[],int)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#remove(int[],int)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#remove(java.lang.Object,int)": 19.393939393939394,
        "org.apache.commons.lang3$ArrayUtils#remove(java.lang.Object[],int)": 3.878787878787879,
        "org.apache.commons.lang3$ArrayUtils#remove(long[],int)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#remove(short[],int)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#removeAll(boolean[],int[])": 5.818181818181818,
        "org.apache.commons.lang3$ArrayUtils#removeAll(byte[],int[])": 5.818181818181818,
        "org.apache.commons.lang3$ArrayUtils#removeAll(char[],int[])": 5.818181818181818,
        "org.apache.commons.lang3$ArrayUtils#removeAll(double[],int[])": 5.818181818181818,
        "org.apache.commons.lang3$ArrayUtils#removeAll(float[],int[])": 5.818181818181818,
        "org.apache.commons.lang3$ArrayUtils#removeAll(int[],int[])": 5.818181818181818,
        "org.apache.commons.lang3$ArrayUtils#removeAll(java.lang.Object,int[])": 52.36363636363637,
        "org.apache.commons.lang3$ArrayUtils#removeAll(java.lang.Object[],int[])": 5.818181818181818,
        "org.apache.commons.lang3$ArrayUtils#removeAll(long[],int[])": 5.818181818181818,
        "org.apache.commons.lang3$ArrayUtils#removeAll(short[],int[])": 5.818181818181818,
        "org.apache.commons.lang3$ArrayUtils#removeElement(boolean[],boolean)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#removeElement(byte[],byte)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#removeElement(char[],char)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#removeElement(double[],double)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#removeElement(float[],float)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#removeElement(int[],int)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#removeElement(java.lang.Object[],java.lang.Object)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#removeElement(long[],long)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#removeElement(short[],short)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#removeElements(boolean[],boolean[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#removeElements(byte[],byte[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#removeElements(char[],char[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#removeElements(double[],double[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#removeElements(float[],float[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#removeElements(int[],int[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#removeElements(java.lang.Object[],java.lang.Object[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#removeElements(long[],long[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#removeElements(short[],short[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#reverse(boolean[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#reverse(byte[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#reverse(char[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#reverse(double[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#reverse(float[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#reverse(int[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#reverse(java.lang.Object[])": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#reverse(long[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#reverse(short[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#subarray(boolean[],int,int)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#subarray(byte[],int,int)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#subarray(char[],int,int)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#subarray(double[],int,int)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#subarray(float[],int,int)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#subarray(int[],int,int)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#subarray(java.lang.Object[],int,int)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#subarray(long[],int,int)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#subarray(short[],int,int)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toArray(java.lang.Object[])": 5.818181818181818,
        "org.apache.commons.lang3$ArrayUtils#toMap(java.lang.Object[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toObject(boolean[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toObject(byte[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toObject(char[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toObject(double[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toObject(float[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toObject(int[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toObject(long[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toObject(short[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Boolean[])": 9.696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Boolean[],boolean)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Byte[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Byte[],byte)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Character[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Character[],char)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Double[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Double[],double)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Float[])": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Float[],float)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Integer[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Integer[],int)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Long[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Long[],long)": 1.9393939393939394,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Short[])": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Short[],short)": 0.9696969696969697,
        "org.apache.commons.lang3$ArrayUtils#toString(java.lang.Object)": 8.727272727272727,
        "org.apache.commons.lang3$ArrayUtils#toString(java.lang.Object,java.lang.String)": 8.727272727272727,
        "org.apache.commons.lang3$ClassUtils#<clinit>()": 78.83870967741936,
        "org.apache.commons.lang3$ClassUtils#ClassUtils()": 5.818181818181818,
        "org.apache.commons.lang3$ClassUtils#addAbbreviation(java.lang.String,java.lang.String)": 78.83870967741936,
        "org.apache.commons.lang3$ClassUtils#convertClassNamesToClasses(java.util.List)": 0.9696969696969697,
        "org.apache.commons.lang3$ClassUtils#convertClassesToClassNames(java.util.List)": 0.9696969696969697,
        "org.apache.commons.lang3$ClassUtils#getAllInterfaces(java.lang.Class)": 11.636363636363637,
        "org.apache.commons.lang3$ClassUtils#getAllInterfaces(java.lang.Class,java.util.HashSet)": 11.636363636363637,
        "org.apache.commons.lang3$ClassUtils#getAllSuperclasses(java.lang.Class)": 1.9393939393939394,
        "org.apache.commons.lang3$ClassUtils#getCanonicalName(java.lang.String)": 5.818181818181818,
        "org.apache.commons.lang3$ClassUtils#getClass(java.lang.ClassLoader,java.lang.String)": 0.0,
        "org.apache.commons.lang3$ClassUtils#getClass(java.lang.ClassLoader,java.lang.String,boolean)": 8.727272727272727,
        "org.apache.commons.lang3$ClassUtils#getClass(java.lang.String)": 8.727272727272727,
        "org.apache.commons.lang3$ClassUtils#getClass(java.lang.String,boolean)": 8.727272727272727,
        "org.apache.commons.lang3$ClassUtils#getPackageCanonicalName(java.lang.Class)": 0.9696969696969697,
        "org.apache.commons.lang3$ClassUtils#getPackageCanonicalName(java.lang.Object,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$ClassUtils#getPackageCanonicalName(java.lang.String)": 2.909090909090909,
        "org.apache.commons.lang3$ClassUtils#getPackageName(java.lang.Class)": 1.9393939393939394,
        "org.apache.commons.lang3$ClassUtils#getPackageName(java.lang.Object,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$ClassUtils#getPackageName(java.lang.String)": 5.818181818181818,
        "org.apache.commons.lang3$ClassUtils#getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])": 0.9696969696969697,
        "org.apache.commons.lang3$ClassUtils#getShortCanonicalName(java.lang.Class)": 0.9696969696969697,
        "org.apache.commons.lang3$ClassUtils#getShortCanonicalName(java.lang.Object,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$ClassUtils#getShortCanonicalName(java.lang.String)": 2.909090909090909,
        "org.apache.commons.lang3$ClassUtils#getShortClassName(java.lang.Class)": 25.21212121212121,
        "org.apache.commons.lang3$ClassUtils#getShortClassName(java.lang.Object,java.lang.String)": 2.909090909090909,
        "org.apache.commons.lang3$ClassUtils#getShortClassName(java.lang.String)": 29.09090909090909,
        "org.apache.commons.lang3$ClassUtils#getSimpleName(java.lang.Class)": 1.9393939393939394,
        "org.apache.commons.lang3$ClassUtils#getSimpleName(java.lang.Object,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$ClassUtils#isAssignable(java.lang.Class,java.lang.Class)": -8.258064516129032,
        "org.apache.commons.lang3$ClassUtils#isAssignable(java.lang.Class,java.lang.Class,boolean)": 6.258064516129032,
        "org.apache.commons.lang3$ClassUtils#isAssignable(java.lang.Class[],java.lang.Class[])": 0.9696969696969697,
        "org.apache.commons.lang3$ClassUtils#isAssignable(java.lang.Class[],java.lang.Class[],boolean)": 12.606060606060606,
        "org.apache.commons.lang3$ClassUtils#isInnerClass(java.lang.Class)": 0.9696969696969697,
        "org.apache.commons.lang3$ClassUtils#isPrimitiveOrWrapper(java.lang.Class)": 0.9696969696969697,
        "org.apache.commons.lang3$ClassUtils#isPrimitiveWrapper(java.lang.Class)": 1.9393939393939394,
        "org.apache.commons.lang3$ClassUtils#primitiveToWrapper(java.lang.Class)": -22.28125,
        "org.apache.commons.lang3$ClassUtils#primitivesToWrappers(java.lang.Class[])": 0.9696969696969697,
        "org.apache.commons.lang3$ClassUtils#toCanonicalName(java.lang.String)": 7.757575757575758,
        "org.apache.commons.lang3$ClassUtils#toClass(java.lang.Object[])": 0.9696969696969697,
        "org.apache.commons.lang3$ClassUtils#wrapperToPrimitive(java.lang.Class)": 15.515151515151516,
        "org.apache.commons.lang3$ClassUtils#wrappersToPrimitives(java.lang.Class[])": 2.909090909090909,
        "org.apache.commons.lang3$JavaVersion#<clinit>()": 228.83870967741936,
        "org.apache.commons.lang3$JavaVersion#JavaVersion(java.lang.String,int,float,java.lang.String)": 228.83870967741936,
        "org.apache.commons.lang3$JavaVersion#atLeast(org.apache.commons.lang3.JavaVersion)": 8.193548387096776,
        "org.apache.commons.lang3$JavaVersion#get(java.lang.String)": 226.90322580645162,
        "org.apache.commons.lang3$JavaVersion#getJavaVersion(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$JavaVersion#toString()": 0.9696969696969697,
        "org.apache.commons.lang3$StringEscapeUtils#<clinit>()": -8.71875,
        "org.apache.commons.lang3$StringEscapeUtils#StringEscapeUtils()": 0.9696969696969697,
        "org.apache.commons.lang3$StringEscapeUtils#escapeCsv(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringEscapeUtils#escapeEcmaScript(java.lang.String)": 1.9393939393939394,
        "org.apache.commons.lang3$StringEscapeUtils#escapeHtml3(java.lang.String)": 0.0,
        "org.apache.commons.lang3$StringEscapeUtils#escapeHtml4(java.lang.String)": -27.125,
        "org.apache.commons.lang3$StringEscapeUtils#escapeJava(java.lang.String)": 2.909090909090909,
        "org.apache.commons.lang3$StringEscapeUtils#escapeXml(java.lang.String)": 1.9393939393939394,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeCsv(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeEcmaScript(java.lang.String)": 0.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeHtml3(java.lang.String)": 0.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeHtml4(java.lang.String)": 7.757575757575758,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeJava(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeXml(java.lang.String)": 2.909090909090909,
        "org.apache.commons.lang3$StringEscapeUtils$CsvEscaper#<clinit>()": -8.71875,
        "org.apache.commons.lang3$StringEscapeUtils$CsvEscaper#StringEscapeUtils$CsvEscaper()": -8.71875,
        "org.apache.commons.lang3$StringEscapeUtils$CsvEscaper#translate(java.lang.CharSequence,int,java.io.Writer)": 1.9393939393939394,
        "org.apache.commons.lang3$StringEscapeUtils$CsvUnescaper#<clinit>()": -8.71875,
        "org.apache.commons.lang3$StringEscapeUtils$CsvUnescaper#StringEscapeUtils$CsvUnescaper()": -8.71875,
        "org.apache.commons.lang3$StringEscapeUtils$CsvUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 1.9393939393939394,
        "org.apache.commons.lang3$SystemUtils#<clinit>()": 225.93548387096774,
        "org.apache.commons.lang3$SystemUtils#SystemUtils()": 0.9696969696969697,
        "org.apache.commons.lang3$SystemUtils#getJavaHome()": 0.9696969696969697,
        "org.apache.commons.lang3$SystemUtils#getJavaIoTmpDir()": 0.9696969696969697,
        "org.apache.commons.lang3$SystemUtils#getJavaVersionMatches(java.lang.String)": 225.93548387096774,
        "org.apache.commons.lang3$SystemUtils#getOSMatches(java.lang.String,java.lang.String)": 225.93548387096774,
        "org.apache.commons.lang3$SystemUtils#getOSMatchesName(java.lang.String)": 225.93548387096774,
        "org.apache.commons.lang3$SystemUtils#getSystemProperty(java.lang.String)": 225.93548387096774,
        "org.apache.commons.lang3$SystemUtils#getUserDir()": 0.9696969696969697,
        "org.apache.commons.lang3$SystemUtils#getUserHome()": 0.9696969696969697,
        "org.apache.commons.lang3$SystemUtils#isJavaAwtHeadless()": 0.9696969696969697,
        "org.apache.commons.lang3$SystemUtils#isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion)": 7.225806451612904,
        "org.apache.commons.lang3$SystemUtils#isJavaVersionMatch(java.lang.String,java.lang.String)": 225.93548387096774,
        "org.apache.commons.lang3$SystemUtils#isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 225.93548387096774,
        "org.apache.commons.lang3$SystemUtils#isOSNameMatch(java.lang.String,java.lang.String)": 225.93548387096774,
        "org.apache.commons.lang3.reflect$TypeUtils#TypeUtils()": 0.0,
        "org.apache.commons.lang3.reflect$TypeUtils#determineTypeArguments(java.lang.Class,java.lang.reflect.ParameterizedType)": 0.9696969696969697,
        "org.apache.commons.lang3.reflect$TypeUtils#getArrayComponentType(java.lang.reflect.Type)": 1.9393939393939394,
        "org.apache.commons.lang3.reflect$TypeUtils#getClosestParentType(java.lang.Class,java.lang.Class)": -12.129032258064516,
        "org.apache.commons.lang3.reflect$TypeUtils#getImplicitBounds(java.lang.reflect.TypeVariable)": 0.9696969696969697,
        "org.apache.commons.lang3.reflect$TypeUtils#getImplicitLowerBounds(java.lang.reflect.WildcardType)": -30.03125,
        "org.apache.commons.lang3.reflect$TypeUtils#getImplicitUpperBounds(java.lang.reflect.WildcardType)": -30.03125,
        "org.apache.commons.lang3.reflect$TypeUtils#getRawType(java.lang.reflect.ParameterizedType)": -12.129032258064516,
        "org.apache.commons.lang3.reflect$TypeUtils#getRawType(java.lang.reflect.Type,java.lang.reflect.Type)": 0.9696969696969697,
        "org.apache.commons.lang3.reflect$TypeUtils#getTypeArguments(java.lang.Class,java.lang.Class,java.util.Map)": -13.096774193548388,
        "org.apache.commons.lang3.reflect$TypeUtils#getTypeArguments(java.lang.reflect.ParameterizedType)": 0.0,
        "org.apache.commons.lang3.reflect$TypeUtils#getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)": -12.129032258064516,
        "org.apache.commons.lang3.reflect$TypeUtils#getTypeArguments(java.lang.reflect.Type,java.lang.Class)": -30.03125,
        "org.apache.commons.lang3.reflect$TypeUtils#getTypeArguments(java.lang.reflect.Type,java.lang.Class,java.util.Map)": -13.096774193548388,
        "org.apache.commons.lang3.reflect$TypeUtils#isArrayType(java.lang.reflect.Type)": 1.9393939393939394,
        "org.apache.commons.lang3.reflect$TypeUtils#isAssignable(java.lang.reflect.Type,java.lang.Class)": -12.129032258064516,
        "org.apache.commons.lang3.reflect$TypeUtils#isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map)": -31.0,
        "org.apache.commons.lang3.reflect$TypeUtils#isAssignable(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)": -29.0625,
        "org.apache.commons.lang3.reflect$TypeUtils#isAssignable(java.lang.reflect.Type,java.lang.reflect.Type)": -12.129032258064516,
        "org.apache.commons.lang3.reflect$TypeUtils#isAssignable(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)": -12.129032258064516,
        "org.apache.commons.lang3.reflect$TypeUtils#isAssignable(java.lang.reflect.Type,java.lang.reflect.TypeVariable,java.util.Map)": 0.0,
        "org.apache.commons.lang3.reflect$TypeUtils#isAssignable(java.lang.reflect.Type,java.lang.reflect.WildcardType,java.util.Map)": -30.03125,
        "org.apache.commons.lang3.reflect$TypeUtils#isInstance(java.lang.Object,java.lang.reflect.Type)": 0.9696969696969697,
        "org.apache.commons.lang3.reflect$TypeUtils#mapTypeVariablesToArguments(java.lang.Class,java.lang.reflect.ParameterizedType,java.util.Map)": 0.9696969696969697,
        "org.apache.commons.lang3.reflect$TypeUtils#normalizeUpperBounds(java.lang.reflect.Type[])": -30.03125,
        "org.apache.commons.lang3.reflect$TypeUtils#substituteTypeVariables(java.lang.reflect.Type,java.util.Map)": -30.03125,
        "org.apache.commons.lang3.reflect$TypeUtils#typesSatisfyVariables(java.util.Map)": 0.9696969696969697,
        "org.apache.commons.lang3.reflect$TypeUtils#unrollVariableAssignments(java.lang.reflect.TypeVariable,java.util.Map)": 0.0,
        "org.apache.commons.lang3.text.translate$AggregateTranslator#AggregateTranslator(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])": -8.71875,
        "org.apache.commons.lang3.text.translate$AggregateTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": -13.5625,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#CharSequenceTranslator()": 5.8125,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#hex(int)": 5.818181818181818,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#translate(java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#translate(java.lang.CharSequence,java.io.Writer)": 3.875,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])": -8.71875,
        "org.apache.commons.lang3.text.translate$CodePointTranslator#CodePointTranslator()": -1.9375,
        "org.apache.commons.lang3.text.translate$CodePointTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": 12.606060606060606,
        "org.apache.commons.lang3.text.translate$EntityArrays#<clinit>()": -5.8125,
        "org.apache.commons.lang3.text.translate$EntityArrays#APOS_ESCAPE()": -8.71875,
        "org.apache.commons.lang3.text.translate$EntityArrays#APOS_UNESCAPE()": -8.71875,
        "org.apache.commons.lang3.text.translate$EntityArrays#BASIC_ESCAPE()": -8.71875,
        "org.apache.commons.lang3.text.translate$EntityArrays#BASIC_UNESCAPE()": -8.71875,
        "org.apache.commons.lang3.text.translate$EntityArrays#EntityArrays()": 0.9696969696969697,
        "org.apache.commons.lang3.text.translate$EntityArrays#HTML40_EXTENDED_ESCAPE()": -7.75,
        "org.apache.commons.lang3.text.translate$EntityArrays#HTML40_EXTENDED_UNESCAPE()": -8.71875,
        "org.apache.commons.lang3.text.translate$EntityArrays#ISO8859_1_ESCAPE()": -7.75,
        "org.apache.commons.lang3.text.translate$EntityArrays#ISO8859_1_UNESCAPE()": -8.71875,
        "org.apache.commons.lang3.text.translate$EntityArrays#JAVA_CTRL_CHARS_ESCAPE()": -8.71875,
        "org.apache.commons.lang3.text.translate$EntityArrays#JAVA_CTRL_CHARS_UNESCAPE()": -8.71875,
        "org.apache.commons.lang3.text.translate$EntityArrays#invert(java.lang.String[][])": -5.8125,
        "org.apache.commons.lang3.text.translate$LookupTranslator#LookupTranslator(java.lang.CharSequence[][])": -7.75,
        "org.apache.commons.lang3.text.translate$LookupTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": -12.59375,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#NumericEntityUnescaper(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[])": -5.8125,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION)": 1.9393939393939394,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 11.636363636363637,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper$OPTION#<clinit>()": -5.8125,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper$OPTION#NumericEntityUnescaper$OPTION(java.lang.String,int)": -5.8125,
        "org.apache.commons.lang3.text.translate$OctalUnescaper#<clinit>()": -7.75,
        "org.apache.commons.lang3.text.translate$OctalUnescaper#OctalUnescaper()": -7.75,
        "org.apache.commons.lang3.text.translate$OctalUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 1.9393939393939394,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#UnicodeEscaper()": 0.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#UnicodeEscaper(int,int,boolean)": -5.8125,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#above(int)": 0.9696969696969697,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#below(int)": 0.9696969696969697,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#between(int,int)": 0.9696969696969697,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#outsideOf(int,int)": -6.78125,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#translate(int,java.io.Writer)": 7.757575757575758,
        "org.apache.commons.lang3.text.translate$UnicodeUnescaper#UnicodeUnescaper()": -5.8125,
        "org.apache.commons.lang3.text.translate$UnicodeUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 3.878787878787879
    },
    "Lang-16": {
        "org.apache.commons.lang3$JavaVersion#<clinit>()": 242.1875,
        "org.apache.commons.lang3$JavaVersion#JavaVersion(java.lang.String,int,float,java.lang.String)": 242.1875,
        "org.apache.commons.lang3$JavaVersion#atLeast(org.apache.commons.lang3.JavaVersion)": 25.1875,
        "org.apache.commons.lang3$JavaVersion#get(java.lang.String)": 240.25,
        "org.apache.commons.lang3$JavaVersion#getJavaVersion(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$JavaVersion#toString()": 0.96875,
        "org.apache.commons.lang3$StringUtils#<clinit>()": 269.0,
        "org.apache.commons.lang3$StringUtils#StringUtils()": 0.96875,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#abbreviateMiddle(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#capitalize(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#chop(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,char[])": 7.75,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,java.lang.CharSequence)": 2.90625,
        "org.apache.commons.lang3$StringUtils#containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,char[])": 7.75,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,char[])": 4.84375,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#containsWhitespace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#countMatches(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#defaultIfBlank(java.lang.CharSequence,java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#deleteWhitespace(java.lang.String)": 14.53125,
        "org.apache.commons.lang3$StringUtils#difference(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 3.875,
        "org.apache.commons.lang3$StringUtils#endsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#endsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#equals(java.lang.CharSequence,java.lang.CharSequence)": 15.5,
        "org.apache.commons.lang3$StringUtils#equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#getCommonPrefix(java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,char[])": 3.875,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,char[])": 6.78125,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence[])": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#isAllLowerCase(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAllUpperCase(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlpha(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlphaSpace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlphanumeric(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlphanumericSpace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAsciiPrintable(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isBlank(java.lang.CharSequence)": -8.741935483870968,
        "org.apache.commons.lang3$StringUtils#isEmpty(java.lang.CharSequence)": 125.7741935483871,
        "org.apache.commons.lang3$StringUtils#isNotBlank(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isNotEmpty(java.lang.CharSequence)": 8.71875,
        "org.apache.commons.lang3$StringUtils#isNumeric(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isNumericSpace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isWhitespace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[])": 2.90625,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char,int,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String)": 3.875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String,int,int)": 3.875,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#lastOrdinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#left(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,char)": 17.4375,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#length(java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String,java.util.Locale)": 0.96875,
        "org.apache.commons.lang3$StringUtils#mid(java.lang.String,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#normalizeSpace(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)": 1.9375,
        "org.apache.commons.lang3$StringUtils#overlay(java.lang.String,java.lang.String,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removeAccentsJava6(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removeAccentsSUN(java.lang.CharSequence)": 0.0,
        "org.apache.commons.lang3$StringUtils#removeEnd(java.lang.String,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#removeEndIgnoreCase(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removeStart(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removeStartIgnoreCase(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#repeat(char,int)": 20.34375,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,int)": 3.875,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String)": 4.84375,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String,int)": 9.6875,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,char,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#replaceOnce(java.lang.String,java.lang.String,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#reverse(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#reverseDelimited(java.lang.String,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#right(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,char)": 5.8125,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String,boolean)": 1.9375,
        "org.apache.commons.lang3$StringUtils#splitByCharacterTypeCamelCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)": 2.90625,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,char,boolean)": 2.90625,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,java.lang.String,int,boolean)": 6.78125,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 3.875,
        "org.apache.commons.lang3$StringUtils#startsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#startsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String,java.lang.String)": 4.84375,
        "org.apache.commons.lang3$StringUtils#stripAccents(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[],java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripEnd(java.lang.String,java.lang.String)": 6.78125,
        "org.apache.commons.lang3$StringUtils#stripStart(java.lang.String,java.lang.String)": 5.8125,
        "org.apache.commons.lang3$StringUtils#stripToEmpty(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripToNull(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringAfter(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringAfterLast(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBefore(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBeforeLast(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#substringsBetween(java.lang.String,java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#swapCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#trim(java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#trimToEmpty(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#trimToNull(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#uncapitalize(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String,java.util.Locale)": 0.96875,
        "org.apache.commons.lang3$SystemUtils#<clinit>()": 239.28125,
        "org.apache.commons.lang3$SystemUtils#SystemUtils()": 0.96875,
        "org.apache.commons.lang3$SystemUtils#getJavaHome()": 0.96875,
        "org.apache.commons.lang3$SystemUtils#getJavaIoTmpDir()": 0.96875,
        "org.apache.commons.lang3$SystemUtils#getJavaVersionMatches(java.lang.String)": 239.28125,
        "org.apache.commons.lang3$SystemUtils#getOSMatches(java.lang.String,java.lang.String)": 239.28125,
        "org.apache.commons.lang3$SystemUtils#getOSMatchesName(java.lang.String)": 239.28125,
        "org.apache.commons.lang3$SystemUtils#getSystemProperty(java.lang.String)": 239.28125,
        "org.apache.commons.lang3$SystemUtils#getUserDir()": 0.96875,
        "org.apache.commons.lang3$SystemUtils#getUserHome()": 0.96875,
        "org.apache.commons.lang3$SystemUtils#isJavaAwtHeadless()": 0.96875,
        "org.apache.commons.lang3$SystemUtils#isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion)": 24.21875,
        "org.apache.commons.lang3$SystemUtils#isJavaVersionMatch(java.lang.String,java.lang.String)": 239.28125,
        "org.apache.commons.lang3$SystemUtils#isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 239.28125,
        "org.apache.commons.lang3$SystemUtils#isOSNameMatch(java.lang.String,java.lang.String)": 239.28125,
        "org.apache.commons.lang3.math$NumberUtils#<clinit>()": 46.41935483870968,
        "org.apache.commons.lang3.math$NumberUtils#NumberUtils()": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#createBigDecimal(java.lang.String)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#createBigInteger(java.lang.String)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#createDouble(java.lang.String)": -29.064516129032256,
        "org.apache.commons.lang3.math$NumberUtils#createFloat(java.lang.String)": -29.064516129032256,
        "org.apache.commons.lang3.math$NumberUtils#createInteger(java.lang.String)": -29.064516129032256,
        "org.apache.commons.lang3.math$NumberUtils#createLong(java.lang.String)": -28.096774193548388,
        "org.apache.commons.lang3.math$NumberUtils#createNumber(java.lang.String)": -29.064516129032256,
        "org.apache.commons.lang3.math$NumberUtils#isAllZeros(java.lang.String)": -29.064516129032256,
        "org.apache.commons.lang3.math$NumberUtils#isDigits(java.lang.String)": -28.096774193548388,
        "org.apache.commons.lang3.math$NumberUtils#isNumber(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#max(byte,byte,byte)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#max(byte[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#max(double,double,double)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#max(double[])": 3.875,
        "org.apache.commons.lang3.math$NumberUtils#max(float,float,float)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#max(float[])": 3.875,
        "org.apache.commons.lang3.math$NumberUtils#max(int,int,int)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#max(int[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#max(long,long,long)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#max(long[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#max(short,short,short)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#max(short[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#min(byte,byte,byte)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#min(byte[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#min(double,double,double)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#min(double[])": 3.875,
        "org.apache.commons.lang3.math$NumberUtils#min(float,float,float)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#min(float[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#min(int,int,int)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#min(int[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#min(long,long,long)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#min(long[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#min(short,short,short)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#min(short[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#toByte(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toByte(java.lang.String,byte)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#toDouble(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toDouble(java.lang.String,double)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#toFloat(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toFloat(java.lang.String,float)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#toInt(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toInt(java.lang.String,int)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#toLong(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toLong(java.lang.String,long)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#toShort(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toShort(java.lang.String,short)": 1.9375
    },
    "Lang-17": {
        "org.apache.commons.lang3$ArrayUtils#<clinit>()": 274.80645161290323,
        "org.apache.commons.lang3$ArrayUtils#ArrayUtils()": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(boolean[],boolean)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(boolean[],int,boolean)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(byte[],byte)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(byte[],int,byte)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(char[],char)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(char[],int,char)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(double[],double)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(double[],int,double)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(float[],float)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(float[],int,float)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(int[],int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(int[],int,int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(java.lang.Object,int,java.lang.Object,java.lang.Class)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(java.lang.Object[],int,java.lang.Object)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#add(java.lang.Object[],java.lang.Object)": 3.875,
        "org.apache.commons.lang3$ArrayUtils#add(long[],int,long)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(long[],long)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(short[],int,short)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(short[],short)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#addAll(boolean[],boolean[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#addAll(byte[],byte[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#addAll(char[],char[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#addAll(double[],double[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#addAll(float[],float[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#addAll(int[],int[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#addAll(java.lang.Object[],java.lang.Object[])": 3.875,
        "org.apache.commons.lang3$ArrayUtils#addAll(long[],long[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#addAll(short[],short[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#clone(boolean[])": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#clone(byte[])": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#clone(char[])": 13.5625,
        "org.apache.commons.lang3$ArrayUtils#clone(double[])": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#clone(float[])": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#clone(int[])": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#clone(java.lang.Object[])": -8.741935483870968,
        "org.apache.commons.lang3$ArrayUtils#clone(long[])": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#clone(short[])": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#contains(boolean[],boolean)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#contains(byte[],byte)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#contains(char[],char)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#contains(double[],double)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#contains(double[],double,double)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#contains(float[],float)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#contains(int[],int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#contains(java.lang.Object[],java.lang.Object)": 22.28125,
        "org.apache.commons.lang3$ArrayUtils#contains(long[],long)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#contains(short[],short)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#copyArrayGrow1(java.lang.Object,java.lang.Class)": 10.65625,
        "org.apache.commons.lang3$ArrayUtils#getLength(java.lang.Object)": 19.375,
        "org.apache.commons.lang3$ArrayUtils#hashCode(java.lang.Object)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#indexOf(boolean[],boolean)": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#indexOf(boolean[],boolean,int)": 3.875,
        "org.apache.commons.lang3$ArrayUtils#indexOf(byte[],byte)": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#indexOf(byte[],byte,int)": 3.875,
        "org.apache.commons.lang3$ArrayUtils#indexOf(char[],char)": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#indexOf(char[],char,int)": 3.875,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double)": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double,double)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double,int)": 3.875,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double,int,double)": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#indexOf(float[],float)": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#indexOf(float[],float,int)": 3.875,
        "org.apache.commons.lang3$ArrayUtils#indexOf(int[],int)": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#indexOf(int[],int,int)": 3.875,
        "org.apache.commons.lang3$ArrayUtils#indexOf(java.lang.Object[],java.lang.Object)": 24.21875,
        "org.apache.commons.lang3$ArrayUtils#indexOf(java.lang.Object[],java.lang.Object,int)": 25.1875,
        "org.apache.commons.lang3$ArrayUtils#indexOf(long[],long)": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#indexOf(long[],long,int)": 3.875,
        "org.apache.commons.lang3$ArrayUtils#indexOf(short[],short)": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#indexOf(short[],short,int)": 3.875,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(boolean[])": 6.78125,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(byte[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(char[])": 19.375,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(double[])": 11.625,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(float[])": 6.78125,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(int[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(java.lang.Object[])": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(long[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(short[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isEquals(java.lang.Object,java.lang.Object)": 10.65625,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(boolean[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(byte[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(char[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(double[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(float[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(int[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(java.lang.Object[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(long[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(short[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(boolean[],boolean[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(byte[],byte[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(char[],char[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(double[],double[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(float[],float[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(int[],int[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(java.lang.Object[],java.lang.Object[])": 13.5625,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(long[],long[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(short[],short[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isSameType(java.lang.Object,java.lang.Object)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(boolean[],boolean)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(boolean[],boolean,int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(byte[],byte)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(byte[],byte,int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(char[],char)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(char[],char,int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double,double)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double,int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double,int,double)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(float[],float)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(float[],float,int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(int[],int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(int[],int,int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(java.lang.Object[],java.lang.Object)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(java.lang.Object[],java.lang.Object,int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(long[],long)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(long[],long,int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(short[],short)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(short[],short,int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(boolean[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(byte[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(char[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(double[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(float[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(int[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Boolean[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Byte[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Character[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Double[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Float[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Integer[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Long[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Object[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Short[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(long[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(short[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#remove(boolean[],int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#remove(byte[],int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#remove(char[],int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#remove(double[],int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#remove(float[],int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#remove(int[],int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#remove(java.lang.Object,int)": 18.40625,
        "org.apache.commons.lang3$ArrayUtils#remove(java.lang.Object[],int)": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#remove(long[],int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#remove(short[],int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#removeElement(boolean[],boolean)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElement(byte[],byte)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElement(char[],char)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElement(double[],double)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElement(float[],float)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElement(int[],int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElement(java.lang.Object[],java.lang.Object)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElement(long[],long)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElement(short[],short)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#reverse(boolean[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#reverse(byte[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#reverse(char[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#reverse(double[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#reverse(float[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#reverse(int[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#reverse(java.lang.Object[])": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#reverse(long[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#reverse(short[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#subarray(boolean[],int,int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#subarray(byte[],int,int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#subarray(char[],int,int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#subarray(double[],int,int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#subarray(float[],int,int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#subarray(int[],int,int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#subarray(java.lang.Object[],int,int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#subarray(long[],int,int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#subarray(short[],int,int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toArray(java.lang.Object[])": 5.8125,
        "org.apache.commons.lang3$ArrayUtils#toMap(java.lang.Object[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toObject(boolean[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toObject(byte[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toObject(char[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toObject(double[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toObject(float[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toObject(int[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toObject(long[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toObject(short[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Boolean[])": 3.875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Boolean[],boolean)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Byte[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Byte[],byte)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Character[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Character[],char)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Double[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Double[],double)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Float[])": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Float[],float)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Integer[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Integer[],int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Long[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Long[],long)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Short[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Short[],short)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toString(java.lang.Object)": 8.71875,
        "org.apache.commons.lang3$ArrayUtils#toString(java.lang.Object,java.lang.String)": 8.71875,
        "org.apache.commons.lang3$StringEscapeUtils#<clinit>()": -11.64516129032258,
        "org.apache.commons.lang3$StringEscapeUtils#StringEscapeUtils()": 0.96875,
        "org.apache.commons.lang3$StringEscapeUtils#escapeCsv(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringEscapeUtils#escapeEcmaScript(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringEscapeUtils#escapeHtml3(java.lang.String)": 0.0,
        "org.apache.commons.lang3$StringEscapeUtils#escapeHtml4(java.lang.String)": 4.84375,
        "org.apache.commons.lang3$StringEscapeUtils#escapeJava(java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringEscapeUtils#escapeXml(java.lang.String)": -30.032258064516128,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeCsv(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeEcmaScript(java.lang.String)": 0.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeHtml3(java.lang.String)": 0.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeHtml4(java.lang.String)": 7.75,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeJava(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeXml(java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringEscapeUtils$CsvEscaper#<clinit>()": -11.64516129032258,
        "org.apache.commons.lang3$StringEscapeUtils$CsvEscaper#StringEscapeUtils$CsvEscaper()": -11.64516129032258,
        "org.apache.commons.lang3$StringEscapeUtils$CsvEscaper#translate(java.lang.CharSequence,int,java.io.Writer)": 1.9375,
        "org.apache.commons.lang3$StringEscapeUtils$CsvUnescaper#<clinit>()": -11.64516129032258,
        "org.apache.commons.lang3$StringEscapeUtils$CsvUnescaper#StringEscapeUtils$CsvUnescaper()": -11.64516129032258,
        "org.apache.commons.lang3$StringEscapeUtils$CsvUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 1.9375,
        "org.apache.commons.lang3.text.translate$AggregateTranslator#AggregateTranslator(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])": -11.64516129032258,
        "org.apache.commons.lang3.text.translate$AggregateTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": -16.483870967741936,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#CharSequenceTranslator()": 2.8709677419354804,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#hex(int)": 4.84375,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#translate(java.lang.CharSequence)": -1.0,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#translate(java.lang.CharSequence,java.io.Writer)": 0.9354838709677438,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])": -11.64516129032258,
        "org.apache.commons.lang3.text.translate$CodePointTranslator#CodePointTranslator()": -4.870967741935484,
        "org.apache.commons.lang3.text.translate$CodePointTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": 10.65625,
        "org.apache.commons.lang3.text.translate$EntityArrays#<clinit>()": -8.741935483870968,
        "org.apache.commons.lang3.text.translate$EntityArrays#APOS_ESCAPE()": -11.64516129032258,
        "org.apache.commons.lang3.text.translate$EntityArrays#APOS_UNESCAPE()": -11.64516129032258,
        "org.apache.commons.lang3.text.translate$EntityArrays#BASIC_ESCAPE()": -11.64516129032258,
        "org.apache.commons.lang3.text.translate$EntityArrays#BASIC_UNESCAPE()": -11.64516129032258,
        "org.apache.commons.lang3.text.translate$EntityArrays#EntityArrays()": 0.96875,
        "org.apache.commons.lang3.text.translate$EntityArrays#HTML40_EXTENDED_ESCAPE()": -10.677419354838708,
        "org.apache.commons.lang3.text.translate$EntityArrays#HTML40_EXTENDED_UNESCAPE()": -11.64516129032258,
        "org.apache.commons.lang3.text.translate$EntityArrays#ISO8859_1_ESCAPE()": -10.677419354838708,
        "org.apache.commons.lang3.text.translate$EntityArrays#ISO8859_1_UNESCAPE()": -11.64516129032258,
        "org.apache.commons.lang3.text.translate$EntityArrays#JAVA_CTRL_CHARS_ESCAPE()": -11.64516129032258,
        "org.apache.commons.lang3.text.translate$EntityArrays#JAVA_CTRL_CHARS_UNESCAPE()": -11.64516129032258,
        "org.apache.commons.lang3.text.translate$EntityArrays#invert(java.lang.String[][])": -8.741935483870968,
        "org.apache.commons.lang3.text.translate$LookupTranslator#LookupTranslator(java.lang.CharSequence[][])": -10.677419354838708,
        "org.apache.commons.lang3.text.translate$LookupTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": -15.516129032258064,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#NumericEntityUnescaper(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[])": -8.741935483870968,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION)": 1.9375,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 10.65625,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper$OPTION#<clinit>()": -8.741935483870968,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper$OPTION#NumericEntityUnescaper$OPTION(java.lang.String,int)": -8.741935483870968,
        "org.apache.commons.lang3.text.translate$OctalUnescaper#<clinit>()": -10.677419354838708,
        "org.apache.commons.lang3.text.translate$OctalUnescaper#OctalUnescaper()": -10.677419354838708,
        "org.apache.commons.lang3.text.translate$OctalUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 1.9375,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#UnicodeEscaper()": 0.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#UnicodeEscaper(int,int,boolean)": -8.741935483870968,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#above(int)": 0.96875,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#below(int)": 0.96875,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#between(int,int)": 0.96875,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#outsideOf(int,int)": -9.70967741935484,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#translate(int,java.io.Writer)": 6.78125,
        "org.apache.commons.lang3.text.translate$UnicodeUnescaper#UnicodeUnescaper()": -8.741935483870968,
        "org.apache.commons.lang3.text.translate$UnicodeUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 3.875
    },
    "Lang-18": {
        "org.apache.commons.lang3$Validate#Validate()": 0.96875,
        "org.apache.commons.lang3$Validate#exclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable)": 0.96875,
        "org.apache.commons.lang3$Validate#exclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable,java.lang.String,java.lang.Object[])": 0.96875,
        "org.apache.commons.lang3$Validate#inclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable)": 0.96875,
        "org.apache.commons.lang3$Validate#inclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable,java.lang.String,java.lang.Object[])": 0.96875,
        "org.apache.commons.lang3$Validate#isAssignableFrom(java.lang.Class,java.lang.Class)": 0.96875,
        "org.apache.commons.lang3$Validate#isAssignableFrom(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])": 0.96875,
        "org.apache.commons.lang3$Validate#isInstanceOf(java.lang.Class,java.lang.Object)": 0.96875,
        "org.apache.commons.lang3$Validate#isInstanceOf(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])": 0.96875,
        "org.apache.commons.lang3$Validate#isTrue(boolean)": 5.8125,
        "org.apache.commons.lang3$Validate#isTrue(boolean,java.lang.String,double)": 0.96875,
        "org.apache.commons.lang3$Validate#isTrue(boolean,java.lang.String,java.lang.Object[])": 19.375,
        "org.apache.commons.lang3$Validate#isTrue(boolean,java.lang.String,long)": 3.8387096774193523,
        "org.apache.commons.lang3$Validate#matchesPattern(java.lang.CharSequence,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$Validate#matchesPattern(java.lang.CharSequence,java.lang.String,java.lang.String,java.lang.Object[])": 0.96875,
        "org.apache.commons.lang3$Validate#noNullElements(java.lang.Iterable)": 0.96875,
        "org.apache.commons.lang3$Validate#noNullElements(java.lang.Iterable,java.lang.String,java.lang.Object[])": 1.9375,
        "org.apache.commons.lang3$Validate#noNullElements(java.lang.Object[])": 1.9375,
        "org.apache.commons.lang3$Validate#noNullElements(java.lang.Object[],java.lang.String,java.lang.Object[])": 3.875,
        "org.apache.commons.lang3$Validate#notBlank(java.lang.CharSequence)": 7.75,
        "org.apache.commons.lang3$Validate#notBlank(java.lang.CharSequence,java.lang.String,java.lang.Object[])": 15.5,
        "org.apache.commons.lang3$Validate#notEmpty(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$Validate#notEmpty(java.lang.CharSequence,java.lang.String,java.lang.Object[])": 1.9375,
        "org.apache.commons.lang3$Validate#notEmpty(java.lang.Object[])": 0.96875,
        "org.apache.commons.lang3$Validate#notEmpty(java.lang.Object[],java.lang.String,java.lang.Object[])": 1.9375,
        "org.apache.commons.lang3$Validate#notEmpty(java.util.Collection)": 0.96875,
        "org.apache.commons.lang3$Validate#notEmpty(java.util.Collection,java.lang.String,java.lang.Object[])": 1.9375,
        "org.apache.commons.lang3$Validate#notEmpty(java.util.Map)": 0.96875,
        "org.apache.commons.lang3$Validate#notEmpty(java.util.Map,java.lang.String,java.lang.Object[])": 1.9375,
        "org.apache.commons.lang3$Validate#notNull(java.lang.Object)": 10.65625,
        "org.apache.commons.lang3$Validate#notNull(java.lang.Object,java.lang.String,java.lang.Object[])": 29.0625,
        "org.apache.commons.lang3$Validate#validIndex(java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$Validate#validIndex(java.lang.CharSequence,int,java.lang.String,java.lang.Object[])": 1.9375,
        "org.apache.commons.lang3$Validate#validIndex(java.lang.Object[],int)": 0.96875,
        "org.apache.commons.lang3$Validate#validIndex(java.lang.Object[],int,java.lang.String,java.lang.Object[])": 1.9375,
        "org.apache.commons.lang3$Validate#validIndex(java.util.Collection,int)": 0.96875,
        "org.apache.commons.lang3$Validate#validIndex(java.util.Collection,int,java.lang.String,java.lang.Object[])": 1.9375,
        "org.apache.commons.lang3$Validate#validState(boolean)": 0.0,
        "org.apache.commons.lang3$Validate#validState(boolean,java.lang.String,java.lang.Object[])": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#<clinit>()": 14.483870967741936,
        "org.apache.commons.lang3.time$FastDateFormat#FastDateFormat(java.lang.String,java.util.TimeZone,java.util.Locale)": 14.483870967741936,
        "org.apache.commons.lang3.time$FastDateFormat#applyRules(java.util.Calendar,java.lang.StringBuffer)": 5.774193548387096,
        "org.apache.commons.lang3.time$FastDateFormat#equals(java.lang.Object)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Calendar)": 1.9032258064516157,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Calendar,java.lang.StringBuffer)": 1.9032258064516157,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Date)": -0.032258064516128115,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Date,java.lang.StringBuffer)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(long)": -31.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(long,java.lang.StringBuffer)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int)": 0.96875,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.Locale)": 1.9375,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.TimeZone)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.TimeZone,java.util.Locale)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int)": 0.96875,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.Locale)": 0.96875,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.TimeZone)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance()": 0.96875,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String)": 7.70967741935484,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.Locale)": 34.875,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.TimeZone)": 1.9375,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 8.71875,
        "org.apache.commons.lang3.time$FastDateFormat#getLocale()": 4.84375,
        "org.apache.commons.lang3.time$FastDateFormat#getMaxLengthEstimate()": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#getPattern()": 8.71875,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.Locale)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.TimeZone)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.TimeZone,java.util.Locale)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeZone()": 2.90625,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)": -30.032258064516128,
        "org.apache.commons.lang3.time$FastDateFormat#hashCode()": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#init()": 14.483870967741936,
        "org.apache.commons.lang3.time$FastDateFormat#parseObject(java.lang.String,java.text.ParsePosition)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#parsePattern()": 14.483870967741936,
        "org.apache.commons.lang3.time$FastDateFormat#parseToken(java.lang.String,int[])": 14.483870967741936,
        "org.apache.commons.lang3.time$FastDateFormat#readObject(java.io.ObjectInputStream)": 0.96875,
        "org.apache.commons.lang3.time$FastDateFormat#selectNumberRule(int,int)": 14.483870967741936,
        "org.apache.commons.lang3.time$FastDateFormat#toString()": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat$1#createInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 14.483870967741936,
        "org.apache.commons.lang3.time$FastDateFormat$CharacterLiteral#FastDateFormat$CharacterLiteral(char)": 13.516129032258064,
        "org.apache.commons.lang3.time$FastDateFormat$CharacterLiteral#appendTo(java.lang.StringBuffer,java.util.Calendar)": 2.8709677419354804,
        "org.apache.commons.lang3.time$FastDateFormat$CharacterLiteral#estimateLength()": 13.516129032258064,
        "org.apache.commons.lang3.time$FastDateFormat$PaddedNumberField#FastDateFormat$PaddedNumberField(int,int)": 12.548387096774192,
        "org.apache.commons.lang3.time$FastDateFormat$PaddedNumberField#appendTo(java.lang.StringBuffer,int)": 2.8709677419354804,
        "org.apache.commons.lang3.time$FastDateFormat$PaddedNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 2.8709677419354804,
        "org.apache.commons.lang3.time$FastDateFormat$PaddedNumberField#estimateLength()": 12.548387096774192,
        "org.apache.commons.lang3.time$FastDateFormat$StringLiteral#FastDateFormat$StringLiteral(java.lang.String)": 34.875,
        "org.apache.commons.lang3.time$FastDateFormat$StringLiteral#appendTo(java.lang.StringBuffer,java.util.Calendar)": 1.9375,
        "org.apache.commons.lang3.time$FastDateFormat$StringLiteral#estimateLength()": 34.875,
        "org.apache.commons.lang3.time$FastDateFormat$TextField#FastDateFormat$TextField(int,java.lang.String[])": 4.806451612903224,
        "org.apache.commons.lang3.time$FastDateFormat$TextField#appendTo(java.lang.StringBuffer,java.util.Calendar)": -29.064516129032256,
        "org.apache.commons.lang3.time$FastDateFormat$TextField#estimateLength()": 4.806451612903224,
        "org.apache.commons.lang3.time$FastDateFormat$TimeZoneDisplayKey#FastDateFormat$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale)": -30.032258064516128,
        "org.apache.commons.lang3.time$FastDateFormat$TimeZoneDisplayKey#equals(java.lang.Object)": -31.0,
        "org.apache.commons.lang3.time$FastDateFormat$TimeZoneDisplayKey#hashCode()": -30.032258064516128,
        "org.apache.commons.lang3.time$FastDateFormat$TimeZoneNameRule#FastDateFormat$TimeZoneNameRule(java.util.TimeZone,java.util.Locale,int)": -30.032258064516128,
        "org.apache.commons.lang3.time$FastDateFormat$TimeZoneNameRule#appendTo(java.lang.StringBuffer,java.util.Calendar)": -31.0,
        "org.apache.commons.lang3.time$FastDateFormat$TimeZoneNameRule#estimateLength()": -30.032258064516128,
        "org.apache.commons.lang3.time$FastDateFormat$TimeZoneNumberRule#<clinit>()": 0.9354838709677438,
        "org.apache.commons.lang3.time$FastDateFormat$TimeZoneNumberRule#FastDateFormat$TimeZoneNumberRule(boolean)": 0.9354838709677438,
        "org.apache.commons.lang3.time$FastDateFormat$TimeZoneNumberRule#appendTo(java.lang.StringBuffer,java.util.Calendar)": -24.225806451612904,
        "org.apache.commons.lang3.time$FastDateFormat$TimeZoneNumberRule#estimateLength()": 0.9354838709677438,
        "org.apache.commons.lang3.time$FastDateFormat$TwelveHourField#FastDateFormat$TwelveHourField(org.apache.commons.lang3.time.FastDateFormat$NumberRule)": 1.9375,
        "org.apache.commons.lang3.time$FastDateFormat$TwelveHourField#appendTo(java.lang.StringBuffer,int)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat$TwelveHourField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat$TwelveHourField#estimateLength()": 1.9375,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitMonthField#<clinit>()": 10.612903225806448,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitMonthField#FastDateFormat$TwoDigitMonthField()": 10.612903225806448,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitMonthField#appendTo(java.lang.StringBuffer,int)": -0.032258064516128115,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitMonthField#appendTo(java.lang.StringBuffer,java.util.Calendar)": -0.032258064516128115,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitMonthField#estimateLength()": 10.612903225806448,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitNumberField#FastDateFormat$TwoDigitNumberField(int)": 13.516129032258064,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitNumberField#appendTo(java.lang.StringBuffer,int)": 3.8387096774193523,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 3.8387096774193523,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitNumberField#estimateLength()": 13.516129032258064,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitYearField#<clinit>()": -29.064516129032256,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitYearField#FastDateFormat$TwoDigitYearField()": -29.064516129032256,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitYearField#appendTo(java.lang.StringBuffer,int)": -30.032258064516128,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitYearField#appendTo(java.lang.StringBuffer,java.util.Calendar)": -30.032258064516128,
        "org.apache.commons.lang3.time$FastDateFormat$TwoDigitYearField#estimateLength()": -29.064516129032256,
        "org.apache.commons.lang3.time$FastDateFormat$UnpaddedMonthField#<clinit>()": -27.129032258064516,
        "org.apache.commons.lang3.time$FastDateFormat$UnpaddedMonthField#FastDateFormat$UnpaddedMonthField()": -27.129032258064516,
        "org.apache.commons.lang3.time$FastDateFormat$UnpaddedMonthField#appendTo(java.lang.StringBuffer,int)": -28.096774193548388,
        "org.apache.commons.lang3.time$FastDateFormat$UnpaddedMonthField#appendTo(java.lang.StringBuffer,java.util.Calendar)": -28.096774193548388,
        "org.apache.commons.lang3.time$FastDateFormat$UnpaddedMonthField#estimateLength()": -27.129032258064516,
        "org.apache.commons.lang3.time$FastDateFormat$UnpaddedNumberField#FastDateFormat$UnpaddedNumberField(int)": -25.193548387096776,
        "org.apache.commons.lang3.time$FastDateFormat$UnpaddedNumberField#appendTo(java.lang.StringBuffer,int)": -28.096774193548388,
        "org.apache.commons.lang3.time$FastDateFormat$UnpaddedNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": -28.096774193548388,
        "org.apache.commons.lang3.time$FastDateFormat$UnpaddedNumberField#estimateLength()": -25.193548387096776,
        "org.apache.commons.lang3.time$FormatCache#FormatCache()": 14.483870967741936,
        "org.apache.commons.lang3.time$FormatCache#getDateTimeInstance(java.lang.Integer,java.lang.Integer,java.util.TimeZone,java.util.Locale)": 3.875,
        "org.apache.commons.lang3.time$FormatCache#getInstance()": 0.0,
        "org.apache.commons.lang3.time$FormatCache#getInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 14.483870967741936,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#FormatCache$MultipartKey(java.lang.Object[])": 14.483870967741936,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#equals(java.lang.Object)": 14.53125,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#hashCode()": 14.483870967741936
    },
    "Lang-19": {
        "org.apache.commons.lang3.text.translate$AggregateTranslator#AggregateTranslator(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])": 19.393939393939394,
        "org.apache.commons.lang3.text.translate$AggregateTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": 14.545454545454545,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#CharSequenceTranslator()": 14.967741935483872,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#hex(int)": 4.848484848484849,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#translate(java.lang.CharSequence)": 11.096774193548388,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#translate(java.lang.CharSequence,java.io.Writer)": 13.032258064516128,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])": 19.393939393939394,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#NumericEntityUnescaper()": 4.322580645161292,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": -7.290322580645162
    },
    "Lang-20": {
        "org.apache.commons.lang3$StringUtils#<clinit>()": 209.48387096774192,
        "org.apache.commons.lang3$StringUtils#StringUtils()": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int,int)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#abbreviateMiddle(java.lang.String,java.lang.String,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#capitalize(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,char)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#chop(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,java.lang.CharSequence)": 3.878787878787879,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,char[])": 7.757575757575758,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,java.lang.CharSequence)": 2.909090909090909,
        "org.apache.commons.lang3$StringUtils#containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,char[])": 7.757575757575758,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,java.lang.String)": 2.909090909090909,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,char[])": 4.848484848484849,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#containsWhitespace(java.lang.CharSequence)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#countMatches(java.lang.CharSequence,java.lang.CharSequence)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#defaultIfBlank(java.lang.CharSequence,java.lang.CharSequence)": 3.878787878787879,
        "org.apache.commons.lang3$StringUtils#defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence)": 3.878787878787879,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String)": 2.909090909090909,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#deleteWhitespace(java.lang.String)": 14.545454545454545,
        "org.apache.commons.lang3$StringUtils#difference(java.lang.String,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 3.878787878787879,
        "org.apache.commons.lang3$StringUtils#endsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#endsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#equals(java.lang.CharSequence,java.lang.CharSequence)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#getCommonPrefix(java.lang.String[])": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,char[])": 3.878787878787879,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.String)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,char[])": 6.787878787878788,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence[])": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#isAllLowerCase(java.lang.CharSequence)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#isAllUpperCase(java.lang.CharSequence)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#isAlpha(java.lang.CharSequence)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#isAlphaSpace(java.lang.CharSequence)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#isAlphanumeric(java.lang.CharSequence)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#isAlphanumericSpace(java.lang.CharSequence)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#isAsciiPrintable(java.lang.CharSequence)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#isBlank(java.lang.CharSequence)": 23.272727272727273,
        "org.apache.commons.lang3$StringUtils#isEmpty(java.lang.CharSequence)": 97.93939393939394,
        "org.apache.commons.lang3$StringUtils#isNotBlank(java.lang.CharSequence)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#isNotEmpty(java.lang.CharSequence)": 8.727272727272727,
        "org.apache.commons.lang3$StringUtils#isNumeric(java.lang.CharSequence)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#isNumericSpace(java.lang.CharSequence)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#isWhitespace(java.lang.CharSequence)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,char)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[])": -29.0625,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char)": -30.03125,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char,int,int)": -30.03125,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String)": -28.09375,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String,int,int)": -28.09375,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,char)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,java.lang.String)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#lastOrdinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#left(java.lang.String,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,char)": 17.454545454545453,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,java.lang.String)": 2.909090909090909,
        "org.apache.commons.lang3$StringUtils#length(java.lang.CharSequence)": 3.878787878787879,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String,java.util.Locale)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#mid(java.lang.String,int,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#normalizeSpace(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#overlay(java.lang.String,java.lang.String,int,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,char)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#removeAccentsJava6(java.lang.CharSequence)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#removeAccentsSUN(java.lang.CharSequence)": 0.0,
        "org.apache.commons.lang3$StringUtils#removeEnd(java.lang.String,java.lang.String)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#removeEndIgnoreCase(java.lang.String,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#removeStart(java.lang.String,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#removeStartIgnoreCase(java.lang.String,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#repeat(char,int)": 20.363636363636363,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,int)": 3.878787878787879,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,java.lang.String,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String)": 4.848484848484849,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String,int)": 9.696969696969697,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,char,char)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,java.lang.String,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[])": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[])": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#replaceOnce(java.lang.String,java.lang.String,java.lang.String)": 2.909090909090909,
        "org.apache.commons.lang3$StringUtils#reverse(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#reverseDelimited(java.lang.String,char)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#right(java.lang.String,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,char)": 5.818181818181818,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,java.lang.String)": 2.909090909090909,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,char)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String,int)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String,boolean)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#splitByCharacterTypeCamelCase(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)": 2.909090909090909,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,char)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,char,boolean)": 2.909090909090909,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,java.lang.String,int,boolean)": 6.787878787878788,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 3.878787878787879,
        "org.apache.commons.lang3$StringUtils#startsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#startsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String,java.lang.String)": 4.848484848484849,
        "org.apache.commons.lang3$StringUtils#stripAccents(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[])": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[],java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#stripEnd(java.lang.String,java.lang.String)": 6.787878787878788,
        "org.apache.commons.lang3$StringUtils#stripStart(java.lang.String,java.lang.String)": 5.818181818181818,
        "org.apache.commons.lang3$StringUtils#stripToEmpty(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#stripToNull(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int,int)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#substringAfter(java.lang.String,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#substringAfterLast(java.lang.String,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#substringBefore(java.lang.String,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#substringBeforeLast(java.lang.String,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String,java.lang.String)": 1.9393939393939394,
        "org.apache.commons.lang3$StringUtils#substringsBetween(java.lang.String,java.lang.String,java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#swapCase(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#trim(java.lang.String)": 2.909090909090909,
        "org.apache.commons.lang3$StringUtils#trimToEmpty(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#trimToNull(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#uncapitalize(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String)": 0.9696969696969697,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String,java.util.Locale)": 0.9696969696969697
    },
    "Lang-22": {},
    "Lang-24": {},
    "Lang-26": {},
    "Lang-27": {},
    "Lang-28": {},
    "Lang-3": {
        "org.apache.commons.lang3$StringUtils#<clinit>()": 366.741935483871,
        "org.apache.commons.lang3$StringUtils#StringUtils()": 0.96875,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#abbreviateMiddle(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])": 1.9375,
        "org.apache.commons.lang3$StringUtils#appendIfMissing(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#appendIfMissingIgnoreCase(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#capitalize(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#chop(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,char[])": 7.75,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,java.lang.CharSequence)": 2.90625,
        "org.apache.commons.lang3$StringUtils#containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,char[])": 8.71875,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,char[])": 4.84375,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#containsWhitespace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#countMatches(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#defaultIfBlank(java.lang.CharSequence,java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#deleteWhitespace(java.lang.String)": 14.53125,
        "org.apache.commons.lang3$StringUtils#difference(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 5.8125,
        "org.apache.commons.lang3$StringUtils#endsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#endsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#equals(java.lang.CharSequence,java.lang.CharSequence)": 16.46875,
        "org.apache.commons.lang3$StringUtils#equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#getCommonPrefix(java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,char[])": 3.875,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,char[])": 6.78125,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence[])": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#isAllLowerCase(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAllUpperCase(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlpha(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlphaSpace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlphanumeric(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlphanumericSpace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAsciiPrintable(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isBlank(java.lang.CharSequence)": -2.93548387096774,
        "org.apache.commons.lang3$StringUtils#isEmpty(java.lang.CharSequence)": 239.28125,
        "org.apache.commons.lang3$StringUtils#isNotBlank(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isNotEmpty(java.lang.CharSequence)": 10.65625,
        "org.apache.commons.lang3$StringUtils#isNumeric(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isNumericSpace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isWhitespace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(byte[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(byte[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(char[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(char[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(double[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(double[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(float[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(float[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(int[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(int[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[])": 2.90625,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char,int,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String)": 3.875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String,int,int)": 3.875,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(long[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(long[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(short[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(short[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#lastOrdinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#left(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,char)": 18.40625,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#length(java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String,java.util.Locale)": 0.96875,
        "org.apache.commons.lang3$StringUtils#mid(java.lang.String,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#normalizeSpace(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)": 1.9375,
        "org.apache.commons.lang3$StringUtils#overlay(java.lang.String,java.lang.String,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])": 1.9375,
        "org.apache.commons.lang3$StringUtils#prependIfMissing(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#prependIfMissingIgnoreCase(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removeEnd(java.lang.String,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#removeEndIgnoreCase(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removePattern(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removeStart(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removeStartIgnoreCase(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#repeat(char,int)": 20.34375,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,int)": 3.875,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String)": 4.84375,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String,int)": 9.6875,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,char,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#replaceOnce(java.lang.String,java.lang.String,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#replacePattern(java.lang.String,java.lang.String,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#reverse(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#reverseDelimited(java.lang.String,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#right(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,char)": 5.8125,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String,boolean)": 1.9375,
        "org.apache.commons.lang3$StringUtils#splitByCharacterTypeCamelCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)": 2.90625,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,char,boolean)": 2.90625,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,java.lang.String,int,boolean)": 6.78125,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 5.8125,
        "org.apache.commons.lang3$StringUtils#startsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#startsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String,java.lang.String)": 4.84375,
        "org.apache.commons.lang3$StringUtils#stripAccents(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[],java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripEnd(java.lang.String,java.lang.String)": 6.78125,
        "org.apache.commons.lang3$StringUtils#stripStart(java.lang.String,java.lang.String)": 5.8125,
        "org.apache.commons.lang3$StringUtils#stripToEmpty(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripToNull(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringAfter(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringAfterLast(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBefore(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBeforeLast(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#substringsBetween(java.lang.String,java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#swapCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#toString(byte[],java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#trim(java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#trimToEmpty(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#trimToNull(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#uncapitalize(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String,java.util.Locale)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#<clinit>()": 52.2258064516129,
        "org.apache.commons.lang3.math$NumberUtils#NumberUtils()": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#createBigDecimal(java.lang.String)": 5.8125,
        "org.apache.commons.lang3.math$NumberUtils#createBigInteger(java.lang.String)": 3.875,
        "org.apache.commons.lang3.math$NumberUtils#createDouble(java.lang.String)": 5.8125,
        "org.apache.commons.lang3.math$NumberUtils#createFloat(java.lang.String)": -25.193548387096776,
        "org.apache.commons.lang3.math$NumberUtils#createInteger(java.lang.String)": 3.875,
        "org.apache.commons.lang3.math$NumberUtils#createLong(java.lang.String)": 4.84375,
        "org.apache.commons.lang3.math$NumberUtils#createNumber(java.lang.String)": -23.258064516129032,
        "org.apache.commons.lang3.math$NumberUtils#isAllZeros(java.lang.String)": -25.193548387096776,
        "org.apache.commons.lang3.math$NumberUtils#isDigits(java.lang.String)": 3.875,
        "org.apache.commons.lang3.math$NumberUtils#isNumber(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#max(byte,byte,byte)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#max(byte[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#max(double,double,double)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#max(double[])": 3.875,
        "org.apache.commons.lang3.math$NumberUtils#max(float,float,float)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#max(float[])": 3.875,
        "org.apache.commons.lang3.math$NumberUtils#max(int,int,int)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#max(int[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#max(long,long,long)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#max(long[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#max(short,short,short)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#max(short[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#min(byte,byte,byte)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#min(byte[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#min(double,double,double)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#min(double[])": 3.875,
        "org.apache.commons.lang3.math$NumberUtils#min(float,float,float)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#min(float[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#min(int,int,int)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#min(int[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#min(long,long,long)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#min(long[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#min(short,short,short)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#min(short[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#toByte(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toByte(java.lang.String,byte)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#toDouble(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toDouble(java.lang.String,double)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#toFloat(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toFloat(java.lang.String,float)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#toInt(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toInt(java.lang.String,int)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#toLong(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toLong(java.lang.String,long)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#toShort(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toShort(java.lang.String,short)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#validateArray(java.lang.Object)": 35.84375
    },
    "Lang-30": {},
    "Lang-31": {},
    "Lang-32": {},
    "Lang-33": {},
    "Lang-34": {},
    "Lang-35": {},
    "Lang-36": {},
    "Lang-37": {},
    "Lang-38": {},
    "Lang-39": {},
    "Lang-4": {
        "org.apache.commons.lang3.text.translate$AggregateTranslator#AggregateTranslator(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])": 28.09375,
        "org.apache.commons.lang3.text.translate$AggregateTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": 23.25,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#CharSequenceTranslator()": 11.58064516129032,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#hex(int)": 6.78125,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#translate(java.lang.CharSequence)": 38.75,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#translate(java.lang.CharSequence,java.io.Writer)": 40.6875,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])": 28.09375,
        "org.apache.commons.lang3.text.translate$LookupTranslator#LookupTranslator(java.lang.CharSequence[][])": -1.9677419354838719,
        "org.apache.commons.lang3.text.translate$LookupTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": -6.806451612903224
    },
    "Lang-40": {},
    "Lang-5": {
        "org.apache.commons.lang3$LocaleUtils#<clinit>()": -19.387096774193548,
        "org.apache.commons.lang3$LocaleUtils#LocaleUtils()": 0.96875,
        "org.apache.commons.lang3$LocaleUtils#availableLocaleList()": -19.387096774193548,
        "org.apache.commons.lang3$LocaleUtils#availableLocaleSet()": 1.9375,
        "org.apache.commons.lang3$LocaleUtils#countriesByLanguage(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$LocaleUtils#isAvailableLocale(java.util.Locale)": -19.387096774193548,
        "org.apache.commons.lang3$LocaleUtils#languagesByCountry(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$LocaleUtils#localeLookupList(java.util.Locale)": 1.9375,
        "org.apache.commons.lang3$LocaleUtils#localeLookupList(java.util.Locale,java.util.Locale)": 1.9375,
        "org.apache.commons.lang3$LocaleUtils#toLocale(java.lang.String)": -27.129032258064516,
        "org.apache.commons.lang3$LocaleUtils$SyncAvoid#<clinit>()": -19.387096774193548,
        "org.apache.commons.lang3$LocaleUtils$SyncAvoid#LocaleUtils$SyncAvoid()": 0.0
    },
    "Lang-6": {
        "org.apache.commons.lang3$ArrayUtils#<clinit>()": 347.38709677419354,
        "org.apache.commons.lang3$ArrayUtils#ArrayUtils()": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(boolean[],boolean)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(boolean[],int,boolean)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(byte[],byte)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(byte[],int,byte)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(char[],char)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(char[],int,char)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(double[],double)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(double[],int,double)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(float[],float)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(float[],int,float)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(int[],int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(int[],int,int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(java.lang.Object,int,java.lang.Object,java.lang.Class)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(java.lang.Object[],int,java.lang.Object)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#add(java.lang.Object[],java.lang.Object)": 5.8125,
        "org.apache.commons.lang3$ArrayUtils#add(long[],int,long)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(long[],long)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(short[],int,short)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#add(short[],short)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#addAll(boolean[],boolean[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#addAll(byte[],byte[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#addAll(char[],char[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#addAll(double[],double[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#addAll(float[],float[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#addAll(int[],int[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#addAll(java.lang.Object[],java.lang.Object[])": 3.875,
        "org.apache.commons.lang3$ArrayUtils#addAll(long[],long[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#addAll(short[],short[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#clone(boolean[])": 3.875,
        "org.apache.commons.lang3$ArrayUtils#clone(byte[])": 3.875,
        "org.apache.commons.lang3$ArrayUtils#clone(char[])": 14.53125,
        "org.apache.commons.lang3$ArrayUtils#clone(double[])": 3.875,
        "org.apache.commons.lang3$ArrayUtils#clone(float[])": 3.875,
        "org.apache.commons.lang3$ArrayUtils#clone(int[])": 47.46875,
        "org.apache.commons.lang3$ArrayUtils#clone(java.lang.Object[])": -3.903225806451612,
        "org.apache.commons.lang3$ArrayUtils#clone(long[])": 5.8125,
        "org.apache.commons.lang3$ArrayUtils#clone(short[])": 3.875,
        "org.apache.commons.lang3$ArrayUtils#contains(boolean[],boolean)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#contains(byte[],byte)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#contains(char[],char)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#contains(double[],double)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#contains(double[],double,double)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#contains(float[],float)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#contains(int[],int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#contains(java.lang.Object[],java.lang.Object)": 22.28125,
        "org.apache.commons.lang3$ArrayUtils#contains(long[],long)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#contains(short[],short)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#copyArrayGrow1(java.lang.Object,java.lang.Class)": 12.59375,
        "org.apache.commons.lang3$ArrayUtils#getLength(java.lang.Object)": 73.625,
        "org.apache.commons.lang3$ArrayUtils#hashCode(java.lang.Object)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#indexOf(boolean[],boolean)": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#indexOf(boolean[],boolean,int)": 4.84375,
        "org.apache.commons.lang3$ArrayUtils#indexOf(byte[],byte)": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#indexOf(byte[],byte,int)": 4.84375,
        "org.apache.commons.lang3$ArrayUtils#indexOf(char[],char)": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#indexOf(char[],char,int)": 4.84375,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double)": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double,double)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double,int)": 4.84375,
        "org.apache.commons.lang3$ArrayUtils#indexOf(double[],double,int,double)": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#indexOf(float[],float)": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#indexOf(float[],float,int)": 4.84375,
        "org.apache.commons.lang3$ArrayUtils#indexOf(int[],int)": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#indexOf(int[],int,int)": 4.84375,
        "org.apache.commons.lang3$ArrayUtils#indexOf(java.lang.Object[],java.lang.Object)": 24.21875,
        "org.apache.commons.lang3$ArrayUtils#indexOf(java.lang.Object[],java.lang.Object,int)": 26.15625,
        "org.apache.commons.lang3$ArrayUtils#indexOf(long[],long)": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#indexOf(long[],long,int)": 4.84375,
        "org.apache.commons.lang3$ArrayUtils#indexOf(short[],short)": 2.90625,
        "org.apache.commons.lang3$ArrayUtils#indexOf(short[],short,int)": 4.84375,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(boolean[])": 7.75,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(byte[])": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(char[])": 20.34375,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(double[])": 12.59375,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(float[])": 7.75,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(int[])": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(java.lang.Object[])": 3.875,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(long[])": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#isEmpty(short[])": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#isEquals(java.lang.Object,java.lang.Object)": 10.65625,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(boolean[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(byte[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(char[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(double[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(float[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(int[])": 45.53125,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(java.lang.Object[])": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(long[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isNotEmpty(short[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(boolean[],boolean[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(byte[],byte[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(char[],char[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(double[],double[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(float[],float[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(int[],int[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(java.lang.Object[],java.lang.Object[])": 15.5,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(long[],long[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isSameLength(short[],short[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#isSameType(java.lang.Object,java.lang.Object)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(boolean[],boolean)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(boolean[],boolean,int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(byte[],byte)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(byte[],byte,int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(char[],char)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(char[],char,int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double,double)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double,int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(double[],double,int,double)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(float[],float)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(float[],float,int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(int[],int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(int[],int,int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(java.lang.Object[],java.lang.Object)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(java.lang.Object[],java.lang.Object,int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(long[],long)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(long[],long,int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(short[],short)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#lastIndexOf(short[],short,int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(boolean[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(byte[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(char[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(double[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(float[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(int[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Boolean[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Byte[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Character[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Double[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Float[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Integer[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Long[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Object[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.Short[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(long[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#nullToEmpty(short[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#remove(boolean[],int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#remove(byte[],int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#remove(char[],int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#remove(double[],int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#remove(float[],int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#remove(int[],int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#remove(java.lang.Object,int)": 19.375,
        "org.apache.commons.lang3$ArrayUtils#remove(java.lang.Object[],int)": 3.875,
        "org.apache.commons.lang3$ArrayUtils#remove(long[],int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#remove(short[],int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#removeAll(boolean[],int[])": 4.84375,
        "org.apache.commons.lang3$ArrayUtils#removeAll(byte[],int[])": 4.84375,
        "org.apache.commons.lang3$ArrayUtils#removeAll(char[],int[])": 4.84375,
        "org.apache.commons.lang3$ArrayUtils#removeAll(double[],int[])": 4.84375,
        "org.apache.commons.lang3$ArrayUtils#removeAll(float[],int[])": 4.84375,
        "org.apache.commons.lang3$ArrayUtils#removeAll(int[],int[])": 4.84375,
        "org.apache.commons.lang3$ArrayUtils#removeAll(java.lang.Object,int[])": 44.5625,
        "org.apache.commons.lang3$ArrayUtils#removeAll(java.lang.Object,java.util.BitSet)": 9.6875,
        "org.apache.commons.lang3$ArrayUtils#removeAll(java.lang.Object[],int[])": 4.84375,
        "org.apache.commons.lang3$ArrayUtils#removeAll(long[],int[])": 4.84375,
        "org.apache.commons.lang3$ArrayUtils#removeAll(short[],int[])": 4.84375,
        "org.apache.commons.lang3$ArrayUtils#removeElement(boolean[],boolean)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElement(byte[],byte)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElement(char[],char)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElement(double[],double)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElement(float[],float)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElement(int[],int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElement(java.lang.Object[],java.lang.Object)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElement(long[],long)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElement(short[],short)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElements(boolean[],boolean[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElements(byte[],byte[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElements(char[],char[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElements(double[],double[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElements(float[],float[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElements(int[],int[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElements(java.lang.Object[],java.lang.Object[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElements(long[],long[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#removeElements(short[],short[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#reverse(boolean[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#reverse(byte[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#reverse(char[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#reverse(double[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#reverse(float[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#reverse(int[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#reverse(java.lang.Object[])": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#reverse(long[])": 4.84375,
        "org.apache.commons.lang3$ArrayUtils#reverse(short[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#subarray(boolean[],int,int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#subarray(byte[],int,int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#subarray(char[],int,int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#subarray(double[],int,int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#subarray(float[],int,int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#subarray(int[],int,int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#subarray(java.lang.Object[],int,int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#subarray(long[],int,int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#subarray(short[],int,int)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toArray(java.lang.Object[])": 5.8125,
        "org.apache.commons.lang3$ArrayUtils#toMap(java.lang.Object[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toObject(boolean[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toObject(byte[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toObject(char[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toObject(double[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toObject(float[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toObject(int[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toObject(long[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toObject(short[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Boolean[])": 9.6875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Boolean[],boolean)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Byte[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Byte[],byte)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Character[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Character[],char)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Double[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Double[],double)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Float[])": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Float[],float)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Integer[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Integer[],int)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Long[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Long[],long)": 1.9375,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Short[])": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toPrimitive(java.lang.Short[],short)": 0.96875,
        "org.apache.commons.lang3$ArrayUtils#toString(java.lang.Object)": 8.71875,
        "org.apache.commons.lang3$ArrayUtils#toString(java.lang.Object,java.lang.String)": 8.71875,
        "org.apache.commons.lang3$StringEscapeUtils#<clinit>()": -7.774193548387096,
        "org.apache.commons.lang3$StringEscapeUtils#StringEscapeUtils()": 0.96875,
        "org.apache.commons.lang3$StringEscapeUtils#escapeCsv(java.lang.String)": -30.032258064516128,
        "org.apache.commons.lang3$StringEscapeUtils#escapeEcmaScript(java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringEscapeUtils#escapeHtml3(java.lang.String)": 0.0,
        "org.apache.commons.lang3$StringEscapeUtils#escapeHtml4(java.lang.String)": 4.84375,
        "org.apache.commons.lang3$StringEscapeUtils#escapeJava(java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringEscapeUtils#escapeXml(java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeCsv(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeEcmaScript(java.lang.String)": 0.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeHtml3(java.lang.String)": 0.0,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeHtml4(java.lang.String)": 7.75,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeJava(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringEscapeUtils#unescapeXml(java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringEscapeUtils$CsvEscaper#<clinit>()": -7.774193548387096,
        "org.apache.commons.lang3$StringEscapeUtils$CsvEscaper#StringEscapeUtils$CsvEscaper()": -7.774193548387096,
        "org.apache.commons.lang3$StringEscapeUtils$CsvEscaper#translate(java.lang.CharSequence,int,java.io.Writer)": -29.064516129032256,
        "org.apache.commons.lang3$StringEscapeUtils$CsvUnescaper#<clinit>()": -7.774193548387096,
        "org.apache.commons.lang3$StringEscapeUtils$CsvUnescaper#StringEscapeUtils$CsvUnescaper()": -7.774193548387096,
        "org.apache.commons.lang3$StringEscapeUtils$CsvUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 1.9375,
        "org.apache.commons.lang3$StringUtils#<clinit>()": 356.0967741935484,
        "org.apache.commons.lang3$StringUtils#StringUtils()": 0.96875,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#abbreviateMiddle(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#capitalize(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#chop(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,char[])": 7.75,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,java.lang.CharSequence)": 2.90625,
        "org.apache.commons.lang3$StringUtils#containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,char[])": -23.258064516129032,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,char[])": 4.84375,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#containsWhitespace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#countMatches(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#defaultIfBlank(java.lang.CharSequence,java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#deleteWhitespace(java.lang.String)": 14.53125,
        "org.apache.commons.lang3$StringUtils#difference(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 3.875,
        "org.apache.commons.lang3$StringUtils#endsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#endsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#equals(java.lang.CharSequence,java.lang.CharSequence)": 16.46875,
        "org.apache.commons.lang3$StringUtils#equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#getCommonPrefix(java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,char[])": 3.875,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,char[])": 6.78125,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence[])": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#isAllLowerCase(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAllUpperCase(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlpha(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlphaSpace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlphanumeric(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlphanumericSpace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAsciiPrintable(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isBlank(java.lang.CharSequence)": 24.21875,
        "org.apache.commons.lang3$StringUtils#isEmpty(java.lang.CharSequence)": 233.46875,
        "org.apache.commons.lang3$StringUtils#isNotBlank(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isNotEmpty(java.lang.CharSequence)": 8.71875,
        "org.apache.commons.lang3$StringUtils#isNumeric(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isNumericSpace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isWhitespace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(byte[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(byte[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(char[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(char[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(double[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(double[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(float[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(float[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(int[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(int[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[])": 2.90625,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char,int,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String)": 3.875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String,int,int)": 3.875,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(long[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(long[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(short[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(short[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#lastOrdinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#left(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,char)": 18.40625,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#length(java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String,java.util.Locale)": 0.96875,
        "org.apache.commons.lang3$StringUtils#mid(java.lang.String,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#normalizeSpace(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)": 1.9375,
        "org.apache.commons.lang3$StringUtils#overlay(java.lang.String,java.lang.String,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removeEnd(java.lang.String,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#removeEndIgnoreCase(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removePattern(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removeStart(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removeStartIgnoreCase(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#repeat(char,int)": 20.34375,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,int)": 3.875,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String)": 4.84375,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String,int)": 9.6875,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,char,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#replaceOnce(java.lang.String,java.lang.String,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#replacePattern(java.lang.String,java.lang.String,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#reverse(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#reverseDelimited(java.lang.String,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#right(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,char)": 5.8125,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String,boolean)": 1.9375,
        "org.apache.commons.lang3$StringUtils#splitByCharacterTypeCamelCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)": 2.90625,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,char,boolean)": 2.90625,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,java.lang.String,int,boolean)": 6.78125,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 3.875,
        "org.apache.commons.lang3$StringUtils#startsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#startsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String,java.lang.String)": 4.84375,
        "org.apache.commons.lang3$StringUtils#stripAccents(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[],java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripEnd(java.lang.String,java.lang.String)": 6.78125,
        "org.apache.commons.lang3$StringUtils#stripStart(java.lang.String,java.lang.String)": 5.8125,
        "org.apache.commons.lang3$StringUtils#stripToEmpty(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripToNull(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringAfter(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringAfterLast(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBefore(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBeforeLast(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#substringsBetween(java.lang.String,java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#swapCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#toString(byte[],java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#trim(java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#trimToEmpty(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#trimToNull(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#uncapitalize(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String,java.util.Locale)": 0.96875,
        "org.apache.commons.lang3.text.translate$AggregateTranslator#AggregateTranslator(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])": -7.774193548387096,
        "org.apache.commons.lang3.text.translate$AggregateTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": 18.40625,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#CharSequenceTranslator()": 6.741935483870968,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#hex(int)": 5.8125,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#translate(java.lang.CharSequence)": 2.8709677419354804,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#translate(java.lang.CharSequence,java.io.Writer)": 4.806451612903224,
        "org.apache.commons.lang3.text.translate$CharSequenceTranslator#with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])": -7.774193548387096,
        "org.apache.commons.lang3.text.translate$CodePointTranslator#CodePointTranslator()": -1.0,
        "org.apache.commons.lang3.text.translate$CodePointTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": 12.59375,
        "org.apache.commons.lang3.text.translate$EntityArrays#<clinit>()": -4.870967741935484,
        "org.apache.commons.lang3.text.translate$EntityArrays#APOS_ESCAPE()": -7.774193548387096,
        "org.apache.commons.lang3.text.translate$EntityArrays#APOS_UNESCAPE()": -7.774193548387096,
        "org.apache.commons.lang3.text.translate$EntityArrays#BASIC_ESCAPE()": -7.774193548387096,
        "org.apache.commons.lang3.text.translate$EntityArrays#BASIC_UNESCAPE()": -7.774193548387096,
        "org.apache.commons.lang3.text.translate$EntityArrays#EntityArrays()": 0.96875,
        "org.apache.commons.lang3.text.translate$EntityArrays#HTML40_EXTENDED_ESCAPE()": -6.806451612903224,
        "org.apache.commons.lang3.text.translate$EntityArrays#HTML40_EXTENDED_UNESCAPE()": -7.774193548387096,
        "org.apache.commons.lang3.text.translate$EntityArrays#ISO8859_1_ESCAPE()": -6.806451612903224,
        "org.apache.commons.lang3.text.translate$EntityArrays#ISO8859_1_UNESCAPE()": -7.774193548387096,
        "org.apache.commons.lang3.text.translate$EntityArrays#JAVA_CTRL_CHARS_ESCAPE()": -7.774193548387096,
        "org.apache.commons.lang3.text.translate$EntityArrays#JAVA_CTRL_CHARS_UNESCAPE()": -7.774193548387096,
        "org.apache.commons.lang3.text.translate$EntityArrays#invert(java.lang.String[][])": -4.870967741935484,
        "org.apache.commons.lang3.text.translate$LookupTranslator#LookupTranslator(java.lang.CharSequence[][])": -6.806451612903224,
        "org.apache.commons.lang3.text.translate$LookupTranslator#translate(java.lang.CharSequence,int,java.io.Writer)": 19.375,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#NumericEntityUnescaper(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[])": -4.870967741935484,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION)": 1.9375,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 11.625,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper$OPTION#<clinit>()": -4.870967741935484,
        "org.apache.commons.lang3.text.translate$NumericEntityUnescaper$OPTION#NumericEntityUnescaper$OPTION(java.lang.String,int)": -4.870967741935484,
        "org.apache.commons.lang3.text.translate$OctalUnescaper#<clinit>()": -6.806451612903224,
        "org.apache.commons.lang3.text.translate$OctalUnescaper#OctalUnescaper()": -6.806451612903224,
        "org.apache.commons.lang3.text.translate$OctalUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 1.9375,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#UnicodeEscaper()": 0.0,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#UnicodeEscaper(int,int,boolean)": -4.870967741935484,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#above(int)": 0.96875,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#below(int)": 0.96875,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#between(int,int)": 0.96875,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#outsideOf(int,int)": -5.838709677419356,
        "org.apache.commons.lang3.text.translate$UnicodeEscaper#translate(int,java.io.Writer)": 7.75,
        "org.apache.commons.lang3.text.translate$UnicodeUnescaper#UnicodeUnescaper()": -4.870967741935484,
        "org.apache.commons.lang3.text.translate$UnicodeUnescaper#translate(java.lang.CharSequence,int,java.io.Writer)": 3.875
    },
    "Lang-7": {
        "org.apache.commons.lang3$JavaVersion#<clinit>()": 217.70967741935485,
        "org.apache.commons.lang3$JavaVersion#JavaVersion(java.lang.String,int,float,java.lang.String)": 217.70967741935485,
        "org.apache.commons.lang3$JavaVersion#atLeast(org.apache.commons.lang3.JavaVersion)": -5.838709677419356,
        "org.apache.commons.lang3$JavaVersion#get(java.lang.String)": 215.7741935483871,
        "org.apache.commons.lang3$JavaVersion#getJavaVersion(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$JavaVersion#toString()": 0.96875,
        "org.apache.commons.lang3$StringUtils#<clinit>()": 354.16129032258067,
        "org.apache.commons.lang3$StringUtils#StringUtils()": 0.96875,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#abbreviate(java.lang.String,int,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#abbreviateMiddle(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#capitalize(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#center(java.lang.String,int,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#chomp(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#chop(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#contains(java.lang.CharSequence,java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,char[])": 7.75,
        "org.apache.commons.lang3$StringUtils#containsAny(java.lang.CharSequence,java.lang.CharSequence)": 2.90625,
        "org.apache.commons.lang3$StringUtils#containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,char[])": 7.75,
        "org.apache.commons.lang3$StringUtils#containsNone(java.lang.CharSequence,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,char[])": 4.84375,
        "org.apache.commons.lang3$StringUtils#containsOnly(java.lang.CharSequence,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#containsWhitespace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#countMatches(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#defaultIfBlank(java.lang.CharSequence,java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#defaultString(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#deleteWhitespace(java.lang.String)": 14.53125,
        "org.apache.commons.lang3$StringUtils#difference(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 3.875,
        "org.apache.commons.lang3$StringUtils#endsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#endsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#equals(java.lang.CharSequence,java.lang.CharSequence)": 16.46875,
        "org.apache.commons.lang3$StringUtils#equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#getCommonPrefix(java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,char[])": 3.875,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOfAny(java.lang.CharSequence,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,char[])": 6.78125,
        "org.apache.commons.lang3$StringUtils#indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfDifference(java.lang.CharSequence[])": 1.9375,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#isAllLowerCase(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAllUpperCase(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlpha(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlphaSpace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlphanumeric(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAlphanumericSpace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isAsciiPrintable(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isBlank(java.lang.CharSequence)": -8.741935483870968,
        "org.apache.commons.lang3$StringUtils#isEmpty(java.lang.CharSequence)": 201.25806451612902,
        "org.apache.commons.lang3$StringUtils#isNotBlank(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isNotEmpty(java.lang.CharSequence)": 8.71875,
        "org.apache.commons.lang3$StringUtils#isNumeric(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isNumericSpace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#isWhitespace(java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(byte[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(byte[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(char[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(char[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(double[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(double[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(float[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(float[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(int[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(int[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Iterable,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[])": 2.90625,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],char,int,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String)": 3.875,
        "org.apache.commons.lang3$StringUtils#join(java.lang.Object[],java.lang.String,int,int)": 3.875,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(java.util.Iterator,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#join(long[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(long[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(short[],char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#join(short[],char,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#lastOrdinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#left(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,char)": 18.40625,
        "org.apache.commons.lang3$StringUtils#leftPad(java.lang.String,int,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#length(java.lang.CharSequence)": 3.875,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#lowerCase(java.lang.String,java.util.Locale)": 0.96875,
        "org.apache.commons.lang3$StringUtils#mid(java.lang.String,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#normalizeSpace(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)": 1.9375,
        "org.apache.commons.lang3$StringUtils#overlay(java.lang.String,java.lang.String,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#remove(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removeEnd(java.lang.String,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#removeEndIgnoreCase(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removePattern(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removeStart(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#removeStartIgnoreCase(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#repeat(char,int)": 20.34375,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,int)": 3.875,
        "org.apache.commons.lang3$StringUtils#repeat(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String)": 4.84375,
        "org.apache.commons.lang3$StringUtils#replace(java.lang.String,java.lang.String,java.lang.String,int)": 9.6875,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,char,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#replaceChars(java.lang.String,java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#replaceOnce(java.lang.String,java.lang.String,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#replacePattern(java.lang.String,java.lang.String,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#reverse(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#reverseDelimited(java.lang.String,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#right(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,char)": 5.8125,
        "org.apache.commons.lang3$StringUtils#rightPad(java.lang.String,int,java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,char)": 1.9375,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#split(java.lang.String,java.lang.String,int)": 1.9375,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByCharacterType(java.lang.String,boolean)": 1.9375,
        "org.apache.commons.lang3$StringUtils#splitByCharacterTypeCamelCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparator(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)": 2.90625,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,char)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitPreserveAllTokens(java.lang.String,java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,char,boolean)": 2.90625,
        "org.apache.commons.lang3$StringUtils#splitWorker(java.lang.String,java.lang.String,int,boolean)": 6.78125,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)": 3.875,
        "org.apache.commons.lang3$StringUtils#startsWithAny(java.lang.CharSequence,java.lang.CharSequence[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#startsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)": 1.9375,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#strip(java.lang.String,java.lang.String)": 4.84375,
        "org.apache.commons.lang3$StringUtils#stripAccents(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[])": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripAll(java.lang.String[],java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripEnd(java.lang.String,java.lang.String)": 6.78125,
        "org.apache.commons.lang3$StringUtils#stripStart(java.lang.String,java.lang.String)": 5.8125,
        "org.apache.commons.lang3$StringUtils#stripToEmpty(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#stripToNull(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substring(java.lang.String,int,int)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringAfter(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringAfterLast(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBefore(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBeforeLast(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#substringBetween(java.lang.String,java.lang.String,java.lang.String)": 1.9375,
        "org.apache.commons.lang3$StringUtils#substringsBetween(java.lang.String,java.lang.String,java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#swapCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#toString(byte[],java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#trim(java.lang.String)": 2.90625,
        "org.apache.commons.lang3$StringUtils#trimToEmpty(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#trimToNull(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#uncapitalize(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String)": 0.96875,
        "org.apache.commons.lang3$StringUtils#upperCase(java.lang.String,java.util.Locale)": 0.96875,
        "org.apache.commons.lang3$SystemUtils#<clinit>()": 214.80645161290323,
        "org.apache.commons.lang3$SystemUtils#SystemUtils()": 0.96875,
        "org.apache.commons.lang3$SystemUtils#getJavaHome()": 0.96875,
        "org.apache.commons.lang3$SystemUtils#getJavaIoTmpDir()": 0.96875,
        "org.apache.commons.lang3$SystemUtils#getJavaVersionMatches(java.lang.String)": 214.80645161290323,
        "org.apache.commons.lang3$SystemUtils#getOSMatches(java.lang.String,java.lang.String)": 214.80645161290323,
        "org.apache.commons.lang3$SystemUtils#getOSMatchesName(java.lang.String)": 214.80645161290323,
        "org.apache.commons.lang3$SystemUtils#getSystemProperty(java.lang.String)": 214.80645161290323,
        "org.apache.commons.lang3$SystemUtils#getUserDir()": 0.96875,
        "org.apache.commons.lang3$SystemUtils#getUserHome()": 0.96875,
        "org.apache.commons.lang3$SystemUtils#isJavaAwtHeadless()": 0.96875,
        "org.apache.commons.lang3$SystemUtils#isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion)": -6.806451612903224,
        "org.apache.commons.lang3$SystemUtils#isJavaVersionMatch(java.lang.String,java.lang.String)": 214.80645161290323,
        "org.apache.commons.lang3$SystemUtils#isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 214.80645161290323,
        "org.apache.commons.lang3$SystemUtils#isOSNameMatch(java.lang.String,java.lang.String)": 214.80645161290323,
        "org.apache.commons.lang3.math$NumberUtils#<clinit>()": 46.41935483870968,
        "org.apache.commons.lang3.math$NumberUtils#NumberUtils()": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#createBigDecimal(java.lang.String)": -29.064516129032256,
        "org.apache.commons.lang3.math$NumberUtils#createBigInteger(java.lang.String)": -29.064516129032256,
        "org.apache.commons.lang3.math$NumberUtils#createDouble(java.lang.String)": -29.064516129032256,
        "org.apache.commons.lang3.math$NumberUtils#createFloat(java.lang.String)": -29.064516129032256,
        "org.apache.commons.lang3.math$NumberUtils#createInteger(java.lang.String)": -29.064516129032256,
        "org.apache.commons.lang3.math$NumberUtils#createLong(java.lang.String)": -28.096774193548388,
        "org.apache.commons.lang3.math$NumberUtils#createNumber(java.lang.String)": -29.064516129032256,
        "org.apache.commons.lang3.math$NumberUtils#isAllZeros(java.lang.String)": -29.064516129032256,
        "org.apache.commons.lang3.math$NumberUtils#isDigits(java.lang.String)": -28.096774193548388,
        "org.apache.commons.lang3.math$NumberUtils#isNumber(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#max(byte,byte,byte)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#max(byte[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#max(double,double,double)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#max(double[])": 3.875,
        "org.apache.commons.lang3.math$NumberUtils#max(float,float,float)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#max(float[])": 3.875,
        "org.apache.commons.lang3.math$NumberUtils#max(int,int,int)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#max(int[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#max(long,long,long)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#max(long[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#max(short,short,short)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#max(short[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#min(byte,byte,byte)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#min(byte[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#min(double,double,double)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#min(double[])": 3.875,
        "org.apache.commons.lang3.math$NumberUtils#min(float,float,float)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#min(float[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#min(int,int,int)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#min(int[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#min(long,long,long)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#min(long[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#min(short,short,short)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#min(short[])": 2.90625,
        "org.apache.commons.lang3.math$NumberUtils#toByte(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toByte(java.lang.String,byte)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#toDouble(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toDouble(java.lang.String,double)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#toFloat(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toFloat(java.lang.String,float)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#toInt(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toInt(java.lang.String,int)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#toLong(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toLong(java.lang.String,long)": 1.9375,
        "org.apache.commons.lang3.math$NumberUtils#toShort(java.lang.String)": 0.96875,
        "org.apache.commons.lang3.math$NumberUtils#toShort(java.lang.String,short)": 1.9375
    },
    "Lang-8": {
        "org.apache.commons.lang3.time$FastDateFormat#<clinit>()": 67.2258064516129,
        "org.apache.commons.lang3.time$FastDateFormat#FastDateFormat(java.lang.String,java.util.TimeZone,java.util.Locale)": 67.2258064516129,
        "org.apache.commons.lang3.time$FastDateFormat#applyRules(java.util.Calendar,java.lang.StringBuffer)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#equals(java.lang.Object)": 6.787878787878788,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Calendar)": 17.87096774193548,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Calendar,java.lang.StringBuffer)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Date)": 32.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Date,java.lang.StringBuffer)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(long)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#format(long,java.lang.StringBuffer)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int)": 1.9393939393939394,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.Locale)": 1.9393939393939394,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.TimeZone)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.TimeZone,java.util.Locale)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int)": 2.909090909090909,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.Locale)": 2.909090909090909,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.TimeZone)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance()": 1.9393939393939394,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String)": 19.806451612903224,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.Locale)": 33.93939393939394,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.TimeZone)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 47.515151515151516,
        "org.apache.commons.lang3.time$FastDateFormat#getLocale()": 7.757575757575758,
        "org.apache.commons.lang3.time$FastDateFormat#getMaxLengthEstimate()": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#getPattern()": 10.666666666666666,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.Locale)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.TimeZone)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.TimeZone,java.util.Locale)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeZone()": 5.818181818181818,
        "org.apache.commons.lang3.time$FastDateFormat#hashCode()": 2.909090909090909,
        "org.apache.commons.lang3.time$FastDateFormat#parse(java.lang.String)": 20.363636363636363,
        "org.apache.commons.lang3.time$FastDateFormat#parse(java.lang.String,java.text.ParsePosition)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#parseObject(java.lang.String,java.text.ParsePosition)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#toString()": 1.9393939393939394,
        "org.apache.commons.lang3.time$FastDateFormat$1#createInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 67.2258064516129,
        "org.apache.commons.lang3.time$FastDateParser#<clinit>()": 95.29032258064517,
        "org.apache.commons.lang3.time$FastDateParser#FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale)": 93.35483870967742,
        "org.apache.commons.lang3.time$FastDateParser#adjustYear(int)": 9.696969696969697,
        "org.apache.commons.lang3.time$FastDateParser#equals(java.lang.Object)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateParser#escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)": 91.41935483870968,
        "org.apache.commons.lang3.time$FastDateParser#getCache(int)": 55.61290322580645,
        "org.apache.commons.lang3.time$FastDateParser#getDisplayNames(int,java.util.Calendar,java.util.Locale)": 46.903225806451616,
        "org.apache.commons.lang3.time$FastDateParser#getFieldWidth()": 7.757575757575758,
        "org.apache.commons.lang3.time$FastDateParser#getLocale()": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateParser#getLocaleSpecificStrategy(int,java.util.Calendar)": 55.61290322580645,
        "org.apache.commons.lang3.time$FastDateParser#getParsePattern()": 0.0,
        "org.apache.commons.lang3.time$FastDateParser#getPattern()": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateParser#getStrategy(java.lang.String,java.util.Calendar)": 93.35483870967742,
        "org.apache.commons.lang3.time$FastDateParser#getTimeZone()": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateParser#hashCode()": 1.9393939393939394,
        "org.apache.commons.lang3.time$FastDateParser#init()": 93.35483870967742,
        "org.apache.commons.lang3.time$FastDateParser#isNextNumber()": 93.35483870967742,
        "org.apache.commons.lang3.time$FastDateParser#parse(java.lang.String)": 40.72727272727273,
        "org.apache.commons.lang3.time$FastDateParser#parse(java.lang.String,java.text.ParsePosition)": 41.696969696969695,
        "org.apache.commons.lang3.time$FastDateParser#parseObject(java.lang.String)": 0.0,
        "org.apache.commons.lang3.time$FastDateParser#parseObject(java.lang.String,java.text.ParsePosition)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateParser#readObject(java.io.ObjectInputStream)": 2.909090909090909,
        "org.apache.commons.lang3.time$FastDateParser#toString()": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateParser$1#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 13.575757575757576,
        "org.apache.commons.lang3.time$FastDateParser$2#modify(int)": 28.12121212121212,
        "org.apache.commons.lang3.time$FastDateParser$3#modify(int)": 12.606060606060606,
        "org.apache.commons.lang3.time$FastDateParser$4#modify(int)": 17.454545454545453,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#FastDateParser$CopyQuotedStrategy(java.lang.String)": 91.41935483870968,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": 91.41935483870968,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#isNumber()": 88.51612903225806,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 0.0,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#FastDateParser$NumberStrategy(int)": 95.29032258064517,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": 93.35483870967742,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#isNumber()": 7.757575757575758,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#modify(int)": 39.75757575757576,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 39.75757575757576,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#FastDateParser$TextStrategy(int,java.util.Calendar,java.util.Locale)": 46.903225806451616,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": 46.903225806451616,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#isNumber()": -16.0,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 19.393939393939394,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#FastDateParser$TimeZoneStrategy(java.util.Locale)": 45.935483870967744,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": 45.935483870967744,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#isNumber()": 32.0,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 18.424242424242426,
        "org.apache.commons.lang3.time$FastDatePrinter#<clinit>()": 79.80645161290323,
        "org.apache.commons.lang3.time$FastDatePrinter#FastDatePrinter(java.lang.String,java.util.TimeZone,java.util.Locale)": 79.80645161290323,
        "org.apache.commons.lang3.time$FastDatePrinter#applyRules(java.util.Calendar,java.lang.StringBuffer)": 30.451612903225808,
        "org.apache.commons.lang3.time$FastDatePrinter#equals(java.lang.Object)": 7.757575757575758,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Calendar)": 24.645161290322584,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Calendar,java.lang.StringBuffer)": 24.645161290322584,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Date)": 34.90909090909091,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Date,java.lang.StringBuffer)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter#format(long)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter#format(long,java.lang.StringBuffer)": 0.0,
        "org.apache.commons.lang3.time$FastDatePrinter#getLocale()": 10.666666666666666,
        "org.apache.commons.lang3.time$FastDatePrinter#getMaxLengthEstimate()": 0.0,
        "org.apache.commons.lang3.time$FastDatePrinter#getPattern()": 13.575757575757576,
        "org.apache.commons.lang3.time$FastDatePrinter#getTimeZone()": 8.727272727272727,
        "org.apache.commons.lang3.time$FastDatePrinter#getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)": -11.161290322580644,
        "org.apache.commons.lang3.time$FastDatePrinter#hashCode()": 3.878787878787879,
        "org.apache.commons.lang3.time$FastDatePrinter#init()": 79.80645161290323,
        "org.apache.commons.lang3.time$FastDatePrinter#parsePattern()": 79.80645161290323,
        "org.apache.commons.lang3.time$FastDatePrinter#parseToken(java.lang.String,int[])": 79.80645161290323,
        "org.apache.commons.lang3.time$FastDatePrinter#readObject(java.io.ObjectInputStream)": 2.909090909090909,
        "org.apache.commons.lang3.time$FastDatePrinter#selectNumberRule(int,int)": 78.83870967741936,
        "org.apache.commons.lang3.time$FastDatePrinter#toString()": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter$CharacterLiteral#FastDatePrinter$CharacterLiteral(char)": 76.90322580645162,
        "org.apache.commons.lang3.time$FastDatePrinter$CharacterLiteral#appendTo(java.lang.StringBuffer,java.util.Calendar)": 26.58064516129032,
        "org.apache.commons.lang3.time$FastDatePrinter$CharacterLiteral#estimateLength()": 76.90322580645162,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#FastDatePrinter$PaddedNumberField(int,int)": 89.21212121212122,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#appendTo(java.lang.StringBuffer,int)": 42.666666666666664,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 42.666666666666664,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#estimateLength()": 89.21212121212122,
        "org.apache.commons.lang3.time$FastDatePrinter$StringLiteral#FastDatePrinter$StringLiteral(java.lang.String)": 41.696969696969695,
        "org.apache.commons.lang3.time$FastDatePrinter$StringLiteral#appendTo(java.lang.StringBuffer,java.util.Calendar)": 2.909090909090909,
        "org.apache.commons.lang3.time$FastDatePrinter$StringLiteral#estimateLength()": 41.696969696969695,
        "org.apache.commons.lang3.time$FastDatePrinter$TextField#FastDatePrinter$TextField(int,java.lang.String[])": 38.193548387096776,
        "org.apache.commons.lang3.time$FastDatePrinter$TextField#appendTo(java.lang.StringBuffer,java.util.Calendar)": -11.161290322580644,
        "org.apache.commons.lang3.time$FastDatePrinter$TextField#estimateLength()": 38.193548387096776,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneDisplayKey#FastDatePrinter$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale)": -11.161290322580644,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneDisplayKey#equals(java.lang.Object)": -13.096774193548388,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneDisplayKey#hashCode()": -11.161290322580644,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNameRule#FastDatePrinter$TimeZoneNameRule(java.util.TimeZone,java.util.Locale,int)": -11.161290322580644,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNameRule#appendTo(java.lang.StringBuffer,java.util.Calendar)": -14.064516129032258,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNameRule#estimateLength()": -11.161290322580644,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#<clinit>()": 47.515151515151516,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#FastDatePrinter$TimeZoneNumberRule(boolean)": 47.515151515151516,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#appendTo(java.lang.StringBuffer,java.util.Calendar)": 9.696969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#estimateLength()": 47.515151515151516,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#FastDatePrinter$TwelveHourField(org.apache.commons.lang3.time.FastDatePrinter$NumberRule)": -1.483870967741936,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#appendTo(java.lang.StringBuffer,int)": 0.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#appendTo(java.lang.StringBuffer,java.util.Calendar)": -16.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#estimateLength()": -1.483870967741936,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#FastDatePrinter$TwentyFourHourField(org.apache.commons.lang3.time.FastDatePrinter$NumberRule)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#appendTo(java.lang.StringBuffer,int)": 0.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 0.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#estimateLength()": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#<clinit>()": 74.66666666666667,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#FastDatePrinter$TwoDigitMonthField()": 74.66666666666667,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#appendTo(java.lang.StringBuffer,int)": 39.75757575757576,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 39.75757575757576,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#estimateLength()": 74.66666666666667,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#FastDatePrinter$TwoDigitNumberField(int)": 66.25806451612904,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#appendTo(java.lang.StringBuffer,int)": 28.516129032258064,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 28.516129032258064,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#estimateLength()": 66.25806451612904,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#<clinit>()": 7.757575757575758,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#FastDatePrinter$TwoDigitYearField()": 7.757575757575758,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#appendTo(java.lang.StringBuffer,int)": 3.878787878787879,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 3.878787878787879,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#estimateLength()": 7.757575757575758,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#<clinit>()": 15.515151515151516,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#FastDatePrinter$UnpaddedMonthField()": 15.515151515151516,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#appendTo(java.lang.StringBuffer,int)": 5.818181818181818,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 5.818181818181818,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#estimateLength()": 15.515151515151516,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#FastDatePrinter$UnpaddedNumberField(int)": 6.258064516129032,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#appendTo(java.lang.StringBuffer,int)": -10.193548387096774,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 5.818181818181818,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#estimateLength()": 6.258064516129032,
        "org.apache.commons.lang3.time$FormatCache#<clinit>()": 69.16129032258064,
        "org.apache.commons.lang3.time$FormatCache#FormatCache()": 67.2258064516129,
        "org.apache.commons.lang3.time$FormatCache#getDateTimeInstance(java.lang.Integer,java.lang.Integer,java.util.TimeZone,java.util.Locale)": 7.757575757575758,
        "org.apache.commons.lang3.time$FormatCache#getInstance()": 1.9393939393939394,
        "org.apache.commons.lang3.time$FormatCache#getInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 67.2258064516129,
        "org.apache.commons.lang3.time$FormatCache#getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)": 11.636363636363637,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#FormatCache$MultipartKey(java.lang.Object[])": 69.16129032258064,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#equals(java.lang.Object)": 21.333333333333332,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#hashCode()": 69.16129032258064
    },
    "Lang-9": {
        "org.apache.commons.lang3.time$FastDateFormat#<clinit>()": 48.4375,
        "org.apache.commons.lang3.time$FastDateFormat#FastDateFormat(java.lang.String,java.util.TimeZone,java.util.Locale)": 48.4375,
        "org.apache.commons.lang3.time$FastDateFormat#applyRules(java.util.Calendar,java.lang.StringBuffer)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#equals(java.lang.Object)": 6.787878787878788,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Calendar)": 33.93939393939394,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Calendar,java.lang.StringBuffer)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Date)": 32.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(java.util.Date,java.lang.StringBuffer)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#format(long)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#format(long,java.lang.StringBuffer)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int)": 1.9393939393939394,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.Locale)": 1.9393939393939394,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.TimeZone)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getDateInstance(int,java.util.TimeZone,java.util.Locale)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int)": 2.909090909090909,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.Locale)": 2.909090909090909,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.TimeZone)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance()": 1.9393939393939394,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String)": 35.878787878787875,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.Locale)": 33.93939393939394,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.TimeZone)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 12.59375,
        "org.apache.commons.lang3.time$FastDateFormat#getLocale()": 7.757575757575758,
        "org.apache.commons.lang3.time$FastDateFormat#getMaxLengthEstimate()": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#getPattern()": 10.666666666666666,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.Locale)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.TimeZone)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeInstance(int,java.util.TimeZone,java.util.Locale)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#getTimeZone()": 5.818181818181818,
        "org.apache.commons.lang3.time$FastDateFormat#hashCode()": 2.909090909090909,
        "org.apache.commons.lang3.time$FastDateFormat#parse(java.lang.String)": -14.53125,
        "org.apache.commons.lang3.time$FastDateFormat#parse(java.lang.String,java.text.ParsePosition)": 0.0,
        "org.apache.commons.lang3.time$FastDateFormat#parseObject(java.lang.String,java.text.ParsePosition)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateFormat#toString()": 1.9393939393939394,
        "org.apache.commons.lang3.time$FastDateFormat$1#createInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 48.4375,
        "org.apache.commons.lang3.time$FastDateParser#<clinit>()": 87.54838709677419,
        "org.apache.commons.lang3.time$FastDateParser#FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale)": 85.61290322580645,
        "org.apache.commons.lang3.time$FastDateParser#adjustYear(int)": 7.757575757575758,
        "org.apache.commons.lang3.time$FastDateParser#copy(org.apache.commons.lang3.time.FastDateParser$KeyValue[],int,java.lang.String[])": 59.15151515151515,
        "org.apache.commons.lang3.time$FastDateParser#count(java.lang.String[])": 59.15151515151515,
        "org.apache.commons.lang3.time$FastDateParser#createKeyValues(java.lang.String[],java.lang.String[])": 59.15151515151515,
        "org.apache.commons.lang3.time$FastDateParser#equals(java.lang.Object)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateParser#escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)": 83.6774193548387,
        "org.apache.commons.lang3.time$FastDateParser#getDisplayNames(int)": 59.15151515151515,
        "org.apache.commons.lang3.time$FastDateParser#getFieldWidth()": 5.818181818181818,
        "org.apache.commons.lang3.time$FastDateParser#getLocale()": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateParser#getParsePattern()": -31.0,
        "org.apache.commons.lang3.time$FastDateParser#getPattern()": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateParser#getStrategy(java.lang.String)": 85.61290322580645,
        "org.apache.commons.lang3.time$FastDateParser#getTimeZone()": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateParser#hashCode()": 1.9393939393939394,
        "org.apache.commons.lang3.time$FastDateParser#init()": 85.61290322580645,
        "org.apache.commons.lang3.time$FastDateParser#isNextNumber()": 85.61290322580645,
        "org.apache.commons.lang3.time$FastDateParser#parse(java.lang.String)": 16.903225806451616,
        "org.apache.commons.lang3.time$FastDateParser#parse(java.lang.String,java.text.ParsePosition)": 17.87096774193548,
        "org.apache.commons.lang3.time$FastDateParser#parseObject(java.lang.String)": 0.0,
        "org.apache.commons.lang3.time$FastDateParser#parseObject(java.lang.String,java.text.ParsePosition)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateParser#readObject(java.io.ObjectInputStream)": 2.909090909090909,
        "org.apache.commons.lang3.time$FastDateParser#toArray(java.util.Map)": 6.787878787878788,
        "org.apache.commons.lang3.time$FastDateParser#toString()": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDateParser$1#compare(org.apache.commons.lang3.time.FastDateParser$KeyValue,org.apache.commons.lang3.time.FastDateParser$KeyValue)": 59.15151515151515,
        "org.apache.commons.lang3.time$FastDateParser$2#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 11.636363636363637,
        "org.apache.commons.lang3.time$FastDateParser$3#modify(int)": 24.242424242424242,
        "org.apache.commons.lang3.time$FastDateParser$4#modify(int)": 10.666666666666666,
        "org.apache.commons.lang3.time$FastDateParser$5#modify(int)": 13.575757575757576,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#FastDateParser$CopyQuotedStrategy(java.lang.String)": 83.6774193548387,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": 83.6774193548387,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#isNumber()": 98.9090909090909,
        "org.apache.commons.lang3.time$FastDateParser$CopyQuotedStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 0.0,
        "org.apache.commons.lang3.time$FastDateParser$KeyValue#FastDateParser$KeyValue(java.lang.String,int)": 59.15151515151515,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#FastDateParser$NumberStrategy(int)": 87.54838709677419,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": 85.61290322580645,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#isNumber()": 5.818181818181818,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#modify(int)": 15.935483870967744,
        "org.apache.commons.lang3.time$FastDateParser$NumberStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 15.935483870967744,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#FastDateParser$TextStrategy(int)": 87.54838709677419,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": 59.15151515151515,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#isNumber()": 0.0,
        "org.apache.commons.lang3.time$FastDateParser$TextStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 15.515151515151516,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#FastDateParser$TimeZoneStrategy(java.util.Locale)": 58.18181818181818,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)": 58.18181818181818,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#isNumber()": 32.0,
        "org.apache.commons.lang3.time$FastDateParser$TimeZoneStrategy#setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)": 14.545454545454545,
        "org.apache.commons.lang3.time$FastDatePrinter#<clinit>()": 61.03125,
        "org.apache.commons.lang3.time$FastDatePrinter#FastDatePrinter(java.lang.String,java.util.TimeZone,java.util.Locale)": 61.03125,
        "org.apache.commons.lang3.time$FastDatePrinter#applyRules(java.util.Calendar,java.lang.StringBuffer)": 46.54545454545455,
        "org.apache.commons.lang3.time$FastDatePrinter#equals(java.lang.Object)": 7.757575757575758,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Calendar)": 40.72727272727273,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Calendar,java.lang.StringBuffer)": 40.72727272727273,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Date)": 34.90909090909091,
        "org.apache.commons.lang3.time$FastDatePrinter#format(java.util.Date,java.lang.StringBuffer)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter#format(long)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter#format(long,java.lang.StringBuffer)": 0.0,
        "org.apache.commons.lang3.time$FastDatePrinter#getLocale()": 10.666666666666666,
        "org.apache.commons.lang3.time$FastDatePrinter#getMaxLengthEstimate()": 0.0,
        "org.apache.commons.lang3.time$FastDatePrinter#getPattern()": 13.575757575757576,
        "org.apache.commons.lang3.time$FastDatePrinter#getTimeZone()": 8.727272727272727,
        "org.apache.commons.lang3.time$FastDatePrinter#getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)": 4.848484848484849,
        "org.apache.commons.lang3.time$FastDatePrinter#hashCode()": 3.878787878787879,
        "org.apache.commons.lang3.time$FastDatePrinter#init()": 61.03125,
        "org.apache.commons.lang3.time$FastDatePrinter#parsePattern()": 61.03125,
        "org.apache.commons.lang3.time$FastDatePrinter#parseToken(java.lang.String,int[])": 61.03125,
        "org.apache.commons.lang3.time$FastDatePrinter#readObject(java.io.ObjectInputStream)": 2.909090909090909,
        "org.apache.commons.lang3.time$FastDatePrinter#selectNumberRule(int,int)": 60.0625,
        "org.apache.commons.lang3.time$FastDatePrinter#toString()": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter$CharacterLiteral#FastDatePrinter$CharacterLiteral(char)": 58.125,
        "org.apache.commons.lang3.time$FastDatePrinter$CharacterLiteral#appendTo(java.lang.StringBuffer,java.util.Calendar)": 42.666666666666664,
        "org.apache.commons.lang3.time$FastDatePrinter$CharacterLiteral#estimateLength()": 58.125,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#FastDatePrinter$PaddedNumberField(int,int)": 86.3030303030303,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#appendTo(java.lang.StringBuffer,int)": 42.666666666666664,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 42.666666666666664,
        "org.apache.commons.lang3.time$FastDatePrinter$PaddedNumberField#estimateLength()": 86.3030303030303,
        "org.apache.commons.lang3.time$FastDatePrinter$StringLiteral#FastDatePrinter$StringLiteral(java.lang.String)": 8.71875,
        "org.apache.commons.lang3.time$FastDatePrinter$StringLiteral#appendTo(java.lang.StringBuffer,java.util.Calendar)": 2.909090909090909,
        "org.apache.commons.lang3.time$FastDatePrinter$StringLiteral#estimateLength()": 8.71875,
        "org.apache.commons.lang3.time$FastDatePrinter$TextField#FastDatePrinter$TextField(int,java.lang.String[])": 52.36363636363637,
        "org.apache.commons.lang3.time$FastDatePrinter$TextField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 4.848484848484849,
        "org.apache.commons.lang3.time$FastDatePrinter$TextField#estimateLength()": 52.36363636363637,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneDisplayKey#FastDatePrinter$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale)": 4.848484848484849,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneDisplayKey#equals(java.lang.Object)": 2.909090909090909,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneDisplayKey#hashCode()": 4.848484848484849,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNameRule#FastDatePrinter$TimeZoneNameRule(java.util.TimeZone,java.util.Locale,int)": 4.848484848484849,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNameRule#appendTo(java.lang.StringBuffer,java.util.Calendar)": 1.9393939393939394,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNameRule#estimateLength()": 4.848484848484849,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#<clinit>()": 45.57575757575758,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#FastDatePrinter$TimeZoneNumberRule(boolean)": 45.57575757575758,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#appendTo(java.lang.StringBuffer,java.util.Calendar)": 9.696969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter$TimeZoneNumberRule#estimateLength()": 45.57575757575758,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#FastDatePrinter$TwelveHourField(org.apache.commons.lang3.time.FastDatePrinter$NumberRule)": 12.606060606060606,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#appendTo(java.lang.StringBuffer,int)": 0.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 0.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwelveHourField#estimateLength()": 12.606060606060606,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#FastDatePrinter$TwentyFourHourField(org.apache.commons.lang3.time.FastDatePrinter$NumberRule)": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#appendTo(java.lang.StringBuffer,int)": 0.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 0.0,
        "org.apache.commons.lang3.time$FastDatePrinter$TwentyFourHourField#estimateLength()": 0.9696969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#<clinit>()": 73.6969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#FastDatePrinter$TwoDigitMonthField()": 73.6969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#appendTo(java.lang.StringBuffer,int)": 39.75757575757576,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 39.75757575757576,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitMonthField#estimateLength()": 73.6969696969697,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#FastDatePrinter$TwoDigitNumberField(int)": 81.45454545454545,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#appendTo(java.lang.StringBuffer,int)": 44.60606060606061,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 44.60606060606061,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitNumberField#estimateLength()": 81.45454545454545,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#<clinit>()": 7.757575757575758,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#FastDatePrinter$TwoDigitYearField()": 7.757575757575758,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#appendTo(java.lang.StringBuffer,int)": 3.878787878787879,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 3.878787878787879,
        "org.apache.commons.lang3.time$FastDatePrinter$TwoDigitYearField#estimateLength()": 7.757575757575758,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#<clinit>()": 14.545454545454545,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#FastDatePrinter$UnpaddedMonthField()": 14.545454545454545,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#appendTo(java.lang.StringBuffer,int)": 5.818181818181818,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 5.818181818181818,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedMonthField#estimateLength()": 14.545454545454545,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#FastDatePrinter$UnpaddedNumberField(int)": -11.625,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#appendTo(java.lang.StringBuffer,int)": 5.818181818181818,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#appendTo(java.lang.StringBuffer,java.util.Calendar)": 5.818181818181818,
        "org.apache.commons.lang3.time$FastDatePrinter$UnpaddedNumberField#estimateLength()": -11.625,
        "org.apache.commons.lang3.time$FormatCache#<clinit>()": 50.375,
        "org.apache.commons.lang3.time$FormatCache#FormatCache()": 48.4375,
        "org.apache.commons.lang3.time$FormatCache#getDateTimeInstance(java.lang.Integer,java.lang.Integer,java.util.TimeZone,java.util.Locale)": 7.757575757575758,
        "org.apache.commons.lang3.time$FormatCache#getInstance()": 1.9393939393939394,
        "org.apache.commons.lang3.time$FormatCache#getInstance(java.lang.String,java.util.TimeZone,java.util.Locale)": 48.4375,
        "org.apache.commons.lang3.time$FormatCache#getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)": 11.636363636363637,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#FormatCache$MultipartKey(java.lang.Object[])": 50.375,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#equals(java.lang.Object)": 21.333333333333332,
        "org.apache.commons.lang3.time$FormatCache$MultipartKey#hashCode()": 50.375
    },
    "Math-1": {
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException()": 1.9393939393939394,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 7.225806451612904,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.666666666666666,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 52.36363636363637,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.9696969696969697,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 900.8484848484849,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 8.727272727272727,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 1.9393939393939394,
        "org.apache.commons.math3.exception$MathIllegalNumberException#<clinit>()": 731.1515151515151,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 731.1515151515151,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 13.575757575757576,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 55.61290322580645,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 81.74193548387096,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 52.70967741935483,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": -13.096774193548388,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 8.727272727272727,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 20.363636363636363,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 21.333333333333332,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 12.606060606060606,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 50.42424242424242,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 77.57575757575758,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 113.45454545454545,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 254.06060606060606,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.909090909090909,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.909090909090909,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 1.9393939393939394,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 11.636363636363637,
        "org.apache.commons.math3.exception.util$LocalizedFormats#<clinit>()": 1100.774193548387,
        "org.apache.commons.math3.exception.util$LocalizedFormats#LocalizedFormats(java.lang.String,int,java.lang.String)": 1100.774193548387,
        "org.apache.commons.math3.exception.util$LocalizedFormats#getLocalizedString(java.util.Locale)": -4.387096774193548,
        "org.apache.commons.math3.exception.util$LocalizedFormats#getSourceString()": 1.9393939393939394,
        "org.apache.commons.math3.fraction$BigFraction#<clinit>()": 49.40625,
        "org.apache.commons.math3.fraction$BigFraction#BigFraction(double)": 5.818181818181818,
        "org.apache.commons.math3.fraction$BigFraction#BigFraction(double,double,int)": 4.848484848484849,
        "org.apache.commons.math3.fraction$BigFraction#BigFraction(double,double,int,int)": -25.1875,
        "org.apache.commons.math3.fraction$BigFraction#BigFraction(double,int)": -30.03125,
        "org.apache.commons.math3.fraction$BigFraction#BigFraction(int)": 49.40625,
        "org.apache.commons.math3.fraction$BigFraction#BigFraction(int,int)": 49.40625,
        "org.apache.commons.math3.fraction$BigFraction#BigFraction(java.math.BigInteger)": 1.9393939393939394,
        "org.apache.commons.math3.fraction$BigFraction#BigFraction(java.math.BigInteger,java.math.BigInteger)": 49.40625,
        "org.apache.commons.math3.fraction$BigFraction#BigFraction(long)": 0.9696969696969697,
        "org.apache.commons.math3.fraction$BigFraction#BigFraction(long,long)": 0.9696969696969697,
        "org.apache.commons.math3.fraction$BigFraction#abs()": 0.9696969696969697,
        "org.apache.commons.math3.fraction$BigFraction#add(int)": 0.9696969696969697,
        "org.apache.commons.math3.fraction$BigFraction#add(java.math.BigInteger)": 0.9696969696969697,
        "org.apache.commons.math3.fraction$BigFraction#add(long)": 0.9696969696969697,
        "org.apache.commons.math3.fraction$BigFraction#add(org.apache.commons.math3.fraction.BigFraction)": 23.272727272727273,
        "org.apache.commons.math3.fraction$BigFraction#bigDecimalValue()": 0.9696969696969697,
        "org.apache.commons.math3.fraction$BigFraction#bigDecimalValue(int)": 0.9696969696969697,
        "org.apache.commons.math3.fraction$BigFraction#bigDecimalValue(int,int)": 1.9393939393939394,
        "org.apache.commons.math3.fraction$BigFraction#compareTo(org.apache.commons.math3.fraction.BigFraction)": 1.9393939393939394,
        "org.apache.commons.math3.fraction$BigFraction#divide(int)": 1.9393939393939394,
        "org.apache.commons.math3.fraction$BigFraction#divide(java.math.BigInteger)": 1.9393939393939394,
        "org.apache.commons.math3.fraction$BigFraction#divide(long)": 0.9696969696969697,
        "org.apache.commons.math3.fraction$BigFraction#divide(org.apache.commons.math3.fraction.BigFraction)": 14.545454545454545,
        "org.apache.commons.math3.fraction$BigFraction#doubleValue()": 40.72727272727273,
        "org.apache.commons.math3.fraction$BigFraction#equals(java.lang.Object)": 46.54545454545455,
        "org.apache.commons.math3.fraction$BigFraction#floatValue()": 1.9393939393939394,
        "org.apache.commons.math3.fraction$BigFraction#getDenominator()": 9.696969696969697,
        "org.apache.commons.math3.fraction$BigFraction#getDenominatorAsInt()": -17.4375,
        "org.apache.commons.math3.fraction$BigFraction#getDenominatorAsLong()": 1.9393939393939394,
        "org.apache.commons.math3.fraction$BigFraction#getField()": 20.363636363636363,
        "org.apache.commons.math3.fraction$BigFraction#getNumerator()": 9.696969696969697,
        "org.apache.commons.math3.fraction$BigFraction#getNumeratorAsInt()": -16.46875,
        "org.apache.commons.math3.fraction$BigFraction#getNumeratorAsLong()": 1.9393939393939394,
        "org.apache.commons.math3.fraction$BigFraction#getReducedFraction(int,int)": 0.9696969696969697,
        "org.apache.commons.math3.fraction$BigFraction#hashCode()": 0.9696969696969697,
        "org.apache.commons.math3.fraction$BigFraction#intValue()": 0.9696969696969697,
        "org.apache.commons.math3.fraction$BigFraction#longValue()": 0.9696969696969697,
        "org.apache.commons.math3.fraction$BigFraction#multiply(int)": 3.878787878787879,
        "org.apache.commons.math3.fraction$BigFraction#multiply(java.math.BigInteger)": 4.848484848484849,
        "org.apache.commons.math3.fraction$BigFraction#multiply(long)": 0.9696969696969697,
        "org.apache.commons.math3.fraction$BigFraction#multiply(org.apache.commons.math3.fraction.BigFraction)": 38.78787878787879,
        "org.apache.commons.math3.fraction$BigFraction#negate()": 2.909090909090909,
        "org.apache.commons.math3.fraction$BigFraction#percentageValue()": 0.9696969696969697,
        "org.apache.commons.math3.fraction$BigFraction#pow(double)": 0.0,
        "org.apache.commons.math3.fraction$BigFraction#pow(int)": 1.9393939393939394,
        "org.apache.commons.math3.fraction$BigFraction#pow(java.math.BigInteger)": 0.9696969696969697,
        "org.apache.commons.math3.fraction$BigFraction#pow(long)": 0.9696969696969697,
        "org.apache.commons.math3.fraction$BigFraction#reciprocal()": 20.363636363636363,
        "org.apache.commons.math3.fraction$BigFraction#reduce()": 44.60606060606061,
        "org.apache.commons.math3.fraction$BigFraction#subtract(int)": 0.9696969696969697,
        "org.apache.commons.math3.fraction$BigFraction#subtract(java.math.BigInteger)": 0.9696969696969697,
        "org.apache.commons.math3.fraction$BigFraction#subtract(long)": 0.0,
        "org.apache.commons.math3.fraction$BigFraction#subtract(org.apache.commons.math3.fraction.BigFraction)": 36.84848484848485,
        "org.apache.commons.math3.fraction$BigFraction#toString()": 0.0,
        "org.apache.commons.math3.fraction$Fraction#<clinit>()": 173.40625,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double)": 49.45454545454545,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double,double,int)": 52.36363636363637,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double,double,int,int)": 22.28125,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double,int)": -30.03125,
        "org.apache.commons.math3.fraction$Fraction#Fraction(int)": 160.0,
        "org.apache.commons.math3.fraction$Fraction#Fraction(int,int)": 173.40625,
        "org.apache.commons.math3.fraction$Fraction#abs()": 0.9696969696969697,
        "org.apache.commons.math3.fraction$Fraction#add(int)": 0.9696969696969697,
        "org.apache.commons.math3.fraction$Fraction#add(org.apache.commons.math3.fraction.Fraction)": 45.57575757575758,
        "org.apache.commons.math3.fraction$Fraction#addSub(org.apache.commons.math3.fraction.Fraction,boolean)": 60.121212121212125,
        "org.apache.commons.math3.fraction$Fraction#compareTo(org.apache.commons.math3.fraction.Fraction)": 0.9696969696969697,
        "org.apache.commons.math3.fraction$Fraction#divide(int)": 0.9696969696969697,
        "org.apache.commons.math3.fraction$Fraction#divide(org.apache.commons.math3.fraction.Fraction)": 23.272727272727273,
        "org.apache.commons.math3.fraction$Fraction#doubleValue()": 26.181818181818183,
        "org.apache.commons.math3.fraction$Fraction#equals(java.lang.Object)": 142.54545454545453,
        "org.apache.commons.math3.fraction$Fraction#floatValue()": 0.9696969696969697,
        "org.apache.commons.math3.fraction$Fraction#getDenominator()": -4.84375,
        "org.apache.commons.math3.fraction$Fraction#getField()": 88.24242424242425,
        "org.apache.commons.math3.fraction$Fraction#getNumerator()": -3.875,
        "org.apache.commons.math3.fraction$Fraction#getReducedFraction(int,int)": 51.39393939393939,
        "org.apache.commons.math3.fraction$Fraction#hashCode()": 5.818181818181818,
        "org.apache.commons.math3.fraction$Fraction#intValue()": 0.9696969696969697,
        "org.apache.commons.math3.fraction$Fraction#longValue()": 0.9696969696969697,
        "org.apache.commons.math3.fraction$Fraction#multiply(int)": 0.9696969696969697,
        "org.apache.commons.math3.fraction$Fraction#multiply(org.apache.commons.math3.fraction.Fraction)": 50.42424242424242,
        "org.apache.commons.math3.fraction$Fraction#negate()": 24.242424242424242,
        "org.apache.commons.math3.fraction$Fraction#percentageValue()": 1.9393939393939394,
        "org.apache.commons.math3.fraction$Fraction#reciprocal()": 24.242424242424242,
        "org.apache.commons.math3.fraction$Fraction#subtract(int)": 0.9696969696969697,
        "org.apache.commons.math3.fraction$Fraction#subtract(org.apache.commons.math3.fraction.Fraction)": 27.151515151515152,
        "org.apache.commons.math3.fraction$Fraction#toString()": 2.909090909090909,
        "org.apache.commons.math3.fraction$FractionConversionException#FractionConversionException(double,int)": 1.9393939393939394,
        "org.apache.commons.math3.fraction$FractionConversionException#FractionConversionException(double,long,long)": -13.096774193548388,
        "org.apache.commons.math3.util$ArithmeticUtils#ArithmeticUtils()": 0.0,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(int,int)": 39.75757575757576,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long)": 2.909090909090909,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long,org.apache.commons.math3.exception.util.Localizable)": 3.878787878787879,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficient(int,int)": 0.0,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientDouble(int,int)": 0.0,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)": 0.0,
        "org.apache.commons.math3.util$ArithmeticUtils#factorial(int)": 0.0,
        "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)": 0.0,
        "org.apache.commons.math3.util$ArithmeticUtils#factorialLog(int)": 0.0,
        "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)": 180.1875,
        "org.apache.commons.math3.util$ArithmeticUtils#gcd(long,long)": 2.909090909090909,
        "org.apache.commons.math3.util$ArithmeticUtils#gcdPositive(int,int)": 180.1875,
        "org.apache.commons.math3.util$ArithmeticUtils#isPowerOfTwo(long)": 43.63636363636363,
        "org.apache.commons.math3.util$ArithmeticUtils#lcm(int,int)": 0.9696969696969697,
        "org.apache.commons.math3.util$ArithmeticUtils#lcm(long,long)": 0.9696969696969697,
        "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(int,int)": 63.03030303030303,
        "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(long,long)": 13.575757575757576,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(int,int)": 2.909090909090909,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(int,long)": 1.9393939393939394,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,int)": 0.9696969696969697,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,java.math.BigInteger)": 1.9393939393939394,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,long)": 1.9393939393939394,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(long,int)": 0.9696969696969697,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(long,long)": 0.9696969696969697,
        "org.apache.commons.math3.util$ArithmeticUtils#stirlingS2(int,int)": 0.0,
        "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(int,int)": 28.12121212121212,
        "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(long,long)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 3568.516129032258,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 8.727272727272727,
        "org.apache.commons.math3.util$FastMath#abs(double)": 2126.5806451612902,
        "org.apache.commons.math3.util$FastMath#abs(float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#abs(int)": 291.59375,
        "org.apache.commons.math3.util$FastMath#abs(long)": 909.65625,
        "org.apache.commons.math3.util$FastMath#acos(double)": 34.90909090909091,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 4.848484848484849,
        "org.apache.commons.math3.util$FastMath#asin(double)": 35.878787878787875,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 4.848484848484849,
        "org.apache.commons.math3.util$FastMath#atan(double)": 37.81818181818182,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 128.0,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 92.12121212121212,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 4.848484848484849,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 44.60606060606061,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 292.8484848484849,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 23.272727272727273,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#cos(double)": 317.09090909090907,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 396.6060606060606,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 32.96969696969697,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 89.21212121212122,
        "org.apache.commons.math3.util$FastMath#exp(double)": 817.4545454545455,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 1095.7575757575758,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 17.454545454545453,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 38.78787878787879,
        "org.apache.commons.math3.util$FastMath#floor(double)": 752.3870967741935,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 78.54545454545455,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 73.6969696969697,
        "org.apache.commons.math3.util$FastMath#log(double)": 903.7575757575758,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1179.1515151515152,
        "org.apache.commons.math3.util$FastMath#log10(double)": 54.303030303030305,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 525.5757575757576,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 969.6969696969697,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 680.7272727272727,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 12.606060606060606,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 528.4848484848485,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 1012.3636363636364,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 48.484848484848484,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 14.545454545454545,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.909090909090909,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 2.909090909090909,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 440.24242424242425,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 440.24242424242425,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 722.4242424242424,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 230.78787878787878,
        "org.apache.commons.math3.util$FastMath#random()": 18.424242424242426,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.848484848484849,
        "org.apache.commons.math3.util$FastMath#rint(double)": 71.75757575757575,
        "org.apache.commons.math3.util$FastMath#round(double)": 23.272727272727273,
        "org.apache.commons.math3.util$FastMath#round(float)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 63.03030303030303,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#signum(double)": 13.575757575757576,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#sin(double)": 411.1515151515151,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 417.93939393939394,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 32.96969696969697,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 2021.8181818181818,
        "org.apache.commons.math3.util$FastMath#tan(double)": 30.060606060606062,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 30.060606060606062,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 14.545454545454545,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3.878787878787879,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3.878787878787879,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 281.2121212121212,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double)": 336.4848484848485,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 336.4848484848485,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 336.4848484848485,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 336.4848484848485,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 1080.2424242424242,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 1075.3939393939395,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1159.7575757575758,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 0.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 16.484848484848484,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 0.9696969696969697,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 1218.909090909091,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 52.3125,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 3.878787878787879,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 3.878787878787879,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 1.9393939393939394,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 1.9393939393939394,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 46.54545454545455,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 36.84848484848485,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 53.333333333333336,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 4.848484848484849
    },
    "Math-10": {
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#<clinit>()": 195.4516129032258,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#DSCompiler(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler)": 195.4516129032258,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#acos(double[],int,double[],int)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#acosh(double[],int,double[],int)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#add(double[],int,double[],int,double[],int)": 81.25806451612904,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#asin(double[],int,double[],int)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#asinh(double[],int,double[],int)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#atan(double[],int,double[],int)": -27.129032258064516,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#atan2(double[],int,double[],int,double[],int)": -29.064516129032256,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#atanh(double[],int,double[],int)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#checkCompatibility(org.apache.commons.math3.analysis.differentiation.DSCompiler)": 118.03225806451613,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compileCompositionIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[][],int[][])": 195.4516129032258,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compileDerivativesIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler)": 195.4516129032258,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compileLowerIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler)": 195.4516129032258,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compileMultiplicationIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[])": 195.4516129032258,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compileSizes(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler)": 195.4516129032258,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compose(double[],int,double[],double[],int)": 64.80645161290323,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#convertIndex(int,int,int[][],int,int,int[][])": 51.25806451612904,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#cos(double[],int,double[],int)": 8.71875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#cosh(double[],int,double[],int)": 2.90625,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#divide(double[],int,double[],int,double[],int)": -11.64516129032258,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#exp(double[],int,double[],int)": 15.5,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#expm1(double[],int,double[],int)": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getCompiler(int,int)": 195.4516129032258,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getFreeParameters()": 209.25,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getOrder()": 157.90625,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getPartialDerivativeIndex(int,int,int[][],int[])": 192.5483870967742,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getPartialDerivativeIndex(int[])": 209.25,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getPartialDerivativeOrders(int)": 5.8125,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getSize()": 195.4516129032258,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#linearCombination(double,double[],int,double,double[],int,double,double[],int,double,double[],int,double[],int)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#linearCombination(double,double[],int,double,double[],int,double,double[],int,double[],int)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#linearCombination(double,double[],int,double,double[],int,double[],int)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#log(double[],int,double[],int)": 7.75,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#log10(double[],int,double[],int)": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#log1p(double[],int,double[],int)": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#multiply(double[],int,double[],int,double[],int)": 59.96774193548387,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#pow(double[],int,double,double[],int)": 4.84375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#pow(double[],int,double[],int,double[],int)": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#pow(double[],int,int,double[],int)": 1.9032258064516157,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#remainder(double[],int,double[],int,double[],int)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#rootN(double[],int,int,double[],int)": -1.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#sin(double[],int,double[],int)": 12.59375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#sinh(double[],int,double[],int)": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#subtract(double[],int,double[],int,double[],int)": 48.4375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#tan(double[],int,double[],int)": 2.90625,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#tanh(double[],int,double[],int)": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#taylor(double[],int,double[])": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(int,int)": 188.67741935483872,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(int,int,double)": 186.74193548387098,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(int,int,double[])": 101.71875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(int,int,int,double)": 183.83870967741936,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)": 188.67741935483872,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 146.28125,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#abs()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#acos()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#acosh()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#add(double)": 65.875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#add(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 110.4375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#asin()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#asinh()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#atan()": 2.90625,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#atan2(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": -29.064516129032256,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#atanh()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#cbrt()": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#ceil()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#compose(double[])": 18.40625,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#copySign(double)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#cos()": 8.71875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#cosh()": 2.90625,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#divide(double)": 11.625,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#divide(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 18.40625,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#exp()": 13.5625,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#expm1()": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#floor()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getAllDerivatives()": 14.53125,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getExponent()": 3.875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getField()": 72.65625,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getFreeParameters()": 115.28125,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getOrder()": 131.75,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getPartialDerivative(int[])": 208.28125,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getValue()": 118.03225806451613,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#hypot(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3.875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#log()": 5.8125,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#log10()": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#log1p()": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#multiply(double)": 86.21875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#multiply(int)": 10.65625,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 75.5625,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#negate()": 14.53125,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#pow(double)": 4.84375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#pow(int)": 4.84375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#pow(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#reciprocal()": 12.59375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#remainder(double)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#remainder(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#rint()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#rootN(int)": 28.09375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#round()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#scalb(int)": 3.875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#signum()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#sin()": 12.59375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#sinh()": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#sqrt()": 25.1875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#subtract(double)": 47.46875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#subtract(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 48.4375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#tan()": 2.90625,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#tanh()": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#taylor(double[])": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#toDegrees()": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#toRadians()": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#writeReplace()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure$1#getOne()": 16.46875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure$1#getRuntimeClass()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure$1#getZero()": 68.78125,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure$DataTransferObject#DerivativeStructure$DataTransferObject(int,int,double[])": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure$DataTransferObject#readResolve()": 0.96875,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 164.6875,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 185.03125,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 2.90625,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 809.875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 8.71875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 663.59375,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 13.5625,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 32.9375,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 127.875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 0.96875,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 3094.8064516129034,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1820.28125,
        "org.apache.commons.math3.util$FastMath#abs(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#abs(int)": 319.6875,
        "org.apache.commons.math3.util$FastMath#abs(long)": 899.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 24.21875,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#asin(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#atan(double)": -0.032258064516128115,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 74.48387096774194,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 84.28125,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 40.6875,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 282.875,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cos(double)": 285.78125,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 363.28125,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 29.0625,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 76.53125,
        "org.apache.commons.math3.util$FastMath#exp(double)": 737.21875,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 956.15625,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 14.53125,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 29.0625,
        "org.apache.commons.math3.util$FastMath#floor(double)": 768.21875,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 73.625,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 68.78125,
        "org.apache.commons.math3.util$FastMath#log(double)": 824.40625,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1042.375,
        "org.apache.commons.math3.util$FastMath#log10(double)": 54.25,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 465.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 862.1875,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 516.741935483871,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 0.96875,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 457.25,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 738.3548387096774,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 33.90625,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 14.53125,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 402.03125,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 402.03125,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 611.28125,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 152.8709677419355,
        "org.apache.commons.math3.util$FastMath#random()": 18.40625,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.84375,
        "org.apache.commons.math3.util$FastMath#rint(double)": 65.875,
        "org.apache.commons.math3.util$FastMath#round(double)": 21.3125,
        "org.apache.commons.math3.util$FastMath#round(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 56.1875,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9375,
        "org.apache.commons.math3.util$FastMath#signum(double)": 11.625,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#sin(double)": 377.8125,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 383.625,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 29.0625,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1734.1612903225807,
        "org.apache.commons.math3.util$FastMath#tan(double)": 26.15625,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 26.15625,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 11.625,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 276.09375,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double)": 314.84375,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 314.84375,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 314.84375,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 314.84375,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 940.65625,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 936.78125,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1027.84375,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0
    },
    "Math-11": {
        "org.apache.commons.math3.distribution$AbstractMultivariateRealDistribution#AbstractMultivariateRealDistribution(org.apache.commons.math3.random.RandomGenerator,int)": -22.29032258064516,
        "org.apache.commons.math3.distribution$AbstractMultivariateRealDistribution#getDimension()": -23.258064516129032,
        "org.apache.commons.math3.distribution$AbstractMultivariateRealDistribution#reseedRandomGenerator(long)": 1.9375,
        "org.apache.commons.math3.distribution$AbstractMultivariateRealDistribution#sample(int)": 1.9375,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#AbstractRealDistribution()": 0.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#AbstractRealDistribution(org.apache.commons.math3.random.RandomGenerator)": 594.1612903225806,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#cumulativeProbability(double,double)": 43.59375,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#getSolverAbsoluteAccuracy()": 1.9375,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#inverseCumulativeProbability(double)": 107.53125,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#probability(double)": 0.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#probability(double,double)": 46.5,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#reseedRandomGenerator(long)": 22.28125,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#sample()": 74.59375,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#sample(int)": 12.59375,
        "org.apache.commons.math3.distribution$AbstractRealDistribution$1#value(double)": 95.90625,
        "org.apache.commons.math3.distribution$MultivariateNormalDistribution#MultivariateNormalDistribution(double[],double[][])": -22.29032258064516,
        "org.apache.commons.math3.distribution$MultivariateNormalDistribution#MultivariateNormalDistribution(org.apache.commons.math3.random.RandomGenerator,double[],double[][])": -22.29032258064516,
        "org.apache.commons.math3.distribution$MultivariateNormalDistribution#density(double[])": -29.064516129032256,
        "org.apache.commons.math3.distribution$MultivariateNormalDistribution#getCovariances()": 0.96875,
        "org.apache.commons.math3.distribution$MultivariateNormalDistribution#getExponentTerm(double[])": -29.064516129032256,
        "org.apache.commons.math3.distribution$MultivariateNormalDistribution#getMeans()": -28.096774193548388,
        "org.apache.commons.math3.distribution$MultivariateNormalDistribution#getStandardDeviations()": 0.0,
        "org.apache.commons.math3.distribution$MultivariateNormalDistribution#sample()": 1.9375,
        "org.apache.commons.math3.distribution$NormalDistribution#<clinit>()": 69.64516129032258,
        "org.apache.commons.math3.distribution$NormalDistribution#NormalDistribution()": 0.0,
        "org.apache.commons.math3.distribution$NormalDistribution#NormalDistribution(double,double)": 18.354838709677416,
        "org.apache.commons.math3.distribution$NormalDistribution#NormalDistribution(double,double,double)": 18.354838709677416,
        "org.apache.commons.math3.distribution$NormalDistribution#NormalDistribution(org.apache.commons.math3.random.RandomGenerator,double,double,double)": 69.64516129032258,
        "org.apache.commons.math3.distribution$NormalDistribution#cumulativeProbability(double)": 15.5,
        "org.apache.commons.math3.distribution$NormalDistribution#cumulativeProbability(double,double)": 28.09375,
        "org.apache.commons.math3.distribution$NormalDistribution#density(double)": -1.9677419354838719,
        "org.apache.commons.math3.distribution$NormalDistribution#getMean()": 7.75,
        "org.apache.commons.math3.distribution$NormalDistribution#getNumericalMean()": 5.8125,
        "org.apache.commons.math3.distribution$NormalDistribution#getNumericalVariance()": 5.8125,
        "org.apache.commons.math3.distribution$NormalDistribution#getSolverAbsoluteAccuracy()": 4.84375,
        "org.apache.commons.math3.distribution$NormalDistribution#getStandardDeviation()": 7.75,
        "org.apache.commons.math3.distribution$NormalDistribution#getSupportLowerBound()": 6.78125,
        "org.apache.commons.math3.distribution$NormalDistribution#getSupportUpperBound()": 6.78125,
        "org.apache.commons.math3.distribution$NormalDistribution#isSupportConnected()": 4.84375,
        "org.apache.commons.math3.distribution$NormalDistribution#isSupportLowerBoundInclusive()": 0.96875,
        "org.apache.commons.math3.distribution$NormalDistribution#isSupportUpperBoundInclusive()": 0.96875,
        "org.apache.commons.math3.distribution$NormalDistribution#probability(double,double)": 28.09375,
        "org.apache.commons.math3.distribution$NormalDistribution#sample()": 12.59375,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 164.6875,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 185.03125,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 2.90625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.65625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 42.625,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 809.875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 8.71875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 663.59375,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 13.5625,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 61.03125,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 85.25,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 58.125,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int)": 0.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int,java.lang.Class)": 12.59375,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException()": 18.40625,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 18.40625,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 28.09375,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 28.09375,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 12.59375,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(java.lang.Integer[],java.lang.Integer[])": 0.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,java.lang.Integer[],java.lang.Integer[])": 37.78125,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimension(int)": 0.96875,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimensions()": 0.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimension(int)": 0.96875,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimensions()": 0.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 10.65625,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 26.15625,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 15.5,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 0.96875,
        "org.apache.commons.math3.exception$NotANumberException#NotANumberException()": 12.59375,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 6.78125,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 17.4375,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 17.4375,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 11.625,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 46.5,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 78.46875,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 45.53125,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 71.6875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 32.9375,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 127.875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 94.9375,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 227.65625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.90625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.90625,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 39.71875,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 188.90625,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 0.96875,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 0.96875,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 1.9375,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 10.65625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix()": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field)": 69.75,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field,int,int)": 99.78125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 3.875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int)": 64.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int,int)": 115.28125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkAdditionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkColumnIndex(int)": 122.0625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkMultiplicationCompatible(org.apache.commons.math3.linear.FieldMatrix)": 17.4375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkRowIndex(int)": 122.0625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int,int,int,int)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int[],int[])": 4.84375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubtractionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3.875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int,int,int,int,org.apache.commons.math3.FieldElement[][])": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int[],int[],org.apache.commons.math3.FieldElement[][])": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#equals(java.lang.Object)": 31.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[][])": 88.15625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumn(int)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnMatrix(int)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnVector(int)": 5.8125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getData()": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getField()": 126.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRow(int)": 6.78125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowVector(int)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int[],int[])": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getTrace()": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#hashCode()": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#isSquare()": 36.8125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.linear.FieldVector)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#power(int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldMatrix)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldVector)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#toString()": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#transpose()": 5.8125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 22.28125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$1#visit(int,int,org.apache.commons.math3.FieldElement)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#start(int,int,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#visit(int,int,org.apache.commons.math3.FieldElement)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$3#visit(int,int,org.apache.commons.math3.FieldElement)": 5.8125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#<clinit>()": 701.5806451612904,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix()": 511.9032258064516,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix(int,int)": 593.1935483870968,
        "org.apache.commons.math3.linear$AbstractRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 35.84375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int,int,int,int,double[][])": 28.09375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int[],int[],double[][])": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#equals(java.lang.Object)": 51.34375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumn(int)": 54.25,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnMatrix(int)": 35.84375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnVector(int)": 15.5,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getData()": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getFrobeniusNorm()": 32.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getNorm()": 78.46875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRow(int)": 138.53125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowVector(int)": 51.34375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int,int,int,int)": 10.65625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int[],int[])": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getTrace()": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#hashCode()": 6.78125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#isSquare()": 160.61290322580646,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 115.12903225806451,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(double[])": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(org.apache.commons.math3.linear.RealVector)": 211.1875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#power(int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(double[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealMatrix)": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarAdd(double)": 33.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarMultiply(double)": 155.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumn(int,double[])": -21.32258064516129,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 41.65625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRow(int,double[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 53.28125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setSubMatrix(double[][],int,int)": 4.84375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 101.71875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#toString()": 6.78125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#transpose()": 158.67741935483872,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 7.75,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4.84375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 160.61290322580646,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 27.125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#end()": 78.46875,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#start(int,int,int,int,int,int)": 78.46875,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#visit(int,int,double)": 78.46875,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#end()": 32.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#start(int,int,int,int,int,int)": 32.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#visit(int,int,double)": 32.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$3#visit(int,int,double)": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#start(int,int,int,int,int,int)": 28.09375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#visit(int,int,double)": 28.09375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$5#visit(int,int,double)": 158.67741935483872,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,int,int)": 33.90625,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][])": 47.46875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],boolean)": 30.03125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][])": 37.78125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][],boolean)": 17.4375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#add(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copy()": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyIn(org.apache.commons.math3.FieldElement[][])": 47.46875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyOut()": 31.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#createMatrix(int,int)": 17.4375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getColumnDimension()": 76.53125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getData()": 30.03125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getDataRef()": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getEntry(int,int)": 63.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getRowDimension()": 76.53125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 36.8125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 47.46875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 21.3125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix()": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[])": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][])": 444.16129032258067,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][],boolean)": 298.375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(int,int)": 428.6774193548387,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#add(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copy()": 13.5625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyIn(double[][])": 446.0967741935484,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyOut()": 309.64516129032256,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#createMatrix(int,int)": 299.96774193548384,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getColumnDimension()": 557.3870967741935,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getData()": 301.9032258064516,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getDataRef()": 70.71875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getEntry(int,int)": 478.0322580645161,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getRowDimension()": 556.4193548387096,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 10.65625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiplyEntry(int,int,double)": -22.29032258064516,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#operate(double[])": 59.09375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#preMultiply(double[])": -27.129032258064516,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setEntry(int,int,double)": 419.96774193548384,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setSubMatrix(double[][],int,int)": 446.0967741935484,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 73.625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 159.6451612903226,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 27.125,
        "org.apache.commons.math3.linear$ArrayRealVector#<clinit>()": 588.3548387096774,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector()": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[])": 394.80645161290323,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],boolean)": 470.8125,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],double[])": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],int,int)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int)": 170.5,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int,double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[])": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[],int,int)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean)": 93.83870967741936,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,double[])": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#add(org.apache.commons.math3.linear.RealVector)": 8.71875,
        "org.apache.commons.math3.linear$ArrayRealVector#addToEntry(int,double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#append(double)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.ArrayRealVector)": 0.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(int)": 340.03125,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$ArrayRealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$ArrayRealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 39.71875,
        "org.apache.commons.math3.linear$ArrayRealVector#copy()": 92.87096774193549,
        "org.apache.commons.math3.linear$ArrayRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 267.375,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 25.1875,
        "org.apache.commons.math3.linear$ArrayRealVector#equals(java.lang.Object)": 47.46875,
        "org.apache.commons.math3.linear$ArrayRealVector#getDataRef()": 196.41935483870967,
        "org.apache.commons.math3.linear$ArrayRealVector#getDimension()": 375.875,
        "org.apache.commons.math3.linear$ArrayRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 4.84375,
        "org.apache.commons.math3.linear$ArrayRealVector#getEntry(int)": 316.78125,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Norm()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfNorm()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#getNorm()": 54.25,
        "org.apache.commons.math3.linear$ArrayRealVector#getSubVector(int,int)": 6.78125,
        "org.apache.commons.math3.linear$ArrayRealVector#hashCode()": 28.09375,
        "org.apache.commons.math3.linear$ArrayRealVector#isInfinite()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#isNaN()": 75.5625,
        "org.apache.commons.math3.linear$ArrayRealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapAddToSelf(double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapDivideToSelf(double)": 4.84375,
        "org.apache.commons.math3.linear$ArrayRealVector#mapMultiplyToSelf(double)": 75.5625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapSubtractToSelf(double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#set(double)": 43.59375,
        "org.apache.commons.math3.linear$ArrayRealVector#setEntry(int,double)": 84.28125,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,double[])": 24.21875,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 25.1875,
        "org.apache.commons.math3.linear$ArrayRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 98.8125,
        "org.apache.commons.math3.linear$ArrayRealVector#toArray()": 143.19354838709677,
        "org.apache.commons.math3.linear$ArrayRealVector#toString()": 0.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(int,int,org.apache.commons.math3.FieldElement[][],boolean)": 33.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.Field,int,int)": 26.15625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.FieldElement[][])": 33.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.BlockFieldMatrix)": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockHeight(int)": 39.71875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockWidth(int)": 44.5625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copy()": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copyBlockPart(org.apache.commons.math3.FieldElement[],int,int,int,int,int,org.apache.commons.math3.FieldElement[],int,int,int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createBlocksLayout(org.apache.commons.math3.Field,int,int)": 26.15625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createMatrix(int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumn(int)": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnDimension()": 39.71875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnMatrix(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getData()": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getEntry(int,int)": 27.125,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRow(int)": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowDimension()": 40.6875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getSubMatrix(int,int,int,int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.BlockFieldMatrix)": 6.78125,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 5.8125,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#toBlocksLayout(org.apache.commons.math3.FieldElement[][])": 33.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#transpose()": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(double[][])": 162.75,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int)": 69.75,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int,double[][],boolean)": 186.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.BlockRealMatrix)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#addToEntry(int,int,double)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockHeight(int)": 193.75,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockWidth(int)": 201.5,
        "org.apache.commons.math3.linear$BlockRealMatrix#copy()": 4.84375,
        "org.apache.commons.math3.linear$BlockRealMatrix#copyBlockPart(double[],int,int,int,int,int,double[],int,int,int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#createBlocksLayout(int,int)": 93.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#createMatrix(int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumn(int)": 20.34375,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnDimension()": 192.78125,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnMatrix(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getData()": 99.78125,
        "org.apache.commons.math3.linear$BlockRealMatrix#getEntry(int,int)": 80.40625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getFrobeniusNorm()": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getNorm()": 22.28125,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRow(int)": 4.84375,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowDimension()": 193.75,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getSubMatrix(int,int,int,int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.BlockRealMatrix)": 12.59375,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 12.59375,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#operate(double[])": 76.53125,
        "org.apache.commons.math3.linear$BlockRealMatrix#preMultiply(double[])": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarAdd(double)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarMultiply(double)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumn(int,double[])": 7.75,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setEntry(int,int,double)": 24.21875,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRow(int,double[])": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setSubMatrix(double[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.BlockRealMatrix)": 18.40625,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 21.3125,
        "org.apache.commons.math3.linear$BlockRealMatrix#toBlocksLayout(double[][])": 162.75,
        "org.apache.commons.math3.linear$BlockRealMatrix#transpose()": 26.15625,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 8.71875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#DefaultRealMatrixPreservingVisitor()": 164.48387096774192,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#end()": 164.48387096774192,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#start(int,int,int,int,int,int)": 160.61290322580646,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#visit(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(double[],double[])": 3.875,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(double[],double[],double)": 0.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(org.apache.commons.math3.linear.RealMatrix)": 33.83870967741936,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(org.apache.commons.math3.linear.RealMatrix,double)": 0.0,
        "org.apache.commons.math3.linear$EigenDecomposition#cdiv(double,double,double,double)": 1.9375,
        "org.apache.commons.math3.linear$EigenDecomposition#findEigenVectors(double[][])": 34.80645161290323,
        "org.apache.commons.math3.linear$EigenDecomposition#findEigenVectorsFromSchur(org.apache.commons.math3.linear.SchurTransformer)": 2.90625,
        "org.apache.commons.math3.linear$EigenDecomposition#getD()": 35.84375,
        "org.apache.commons.math3.linear$EigenDecomposition#getDeterminant()": -22.29032258064516,
        "org.apache.commons.math3.linear$EigenDecomposition#getEigenvector(int)": -18.41935483870968,
        "org.apache.commons.math3.linear$EigenDecomposition#getImagEigenvalue(int)": 0.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getImagEigenvalues()": 0.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getRealEigenvalue(int)": 7.75,
        "org.apache.commons.math3.linear$EigenDecomposition#getRealEigenvalues()": -13.580645161290324,
        "org.apache.commons.math3.linear$EigenDecomposition#getSolver()": -18.41935483870968,
        "org.apache.commons.math3.linear$EigenDecomposition#getSquareRoot()": 2.90625,
        "org.apache.commons.math3.linear$EigenDecomposition#getV()": 40.6875,
        "org.apache.commons.math3.linear$EigenDecomposition#getVT()": 3.875,
        "org.apache.commons.math3.linear$EigenDecomposition#hasComplexEigenvalues()": -18.41935483870968,
        "org.apache.commons.math3.linear$EigenDecomposition#transformToSchur(org.apache.commons.math3.linear.RealMatrix)": 2.90625,
        "org.apache.commons.math3.linear$EigenDecomposition#transformToTridiagonal(org.apache.commons.math3.linear.RealMatrix)": 30.935483870967744,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#EigenDecomposition$Solver(double[],double[],org.apache.commons.math3.linear.ArrayRealVector[])": -18.41935483870968,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#getInverse()": -20.35483870967742,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#isNonSingular()": -18.41935483870968,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#solve(org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#solve(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#MatrixDimensionMismatchException(int,int,int,int)": 37.78125,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedColumnDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedRowDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongColumnDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongRowDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#<clinit>()": 646.4193548387096,
        "org.apache.commons.math3.linear$MatrixUtils#MatrixUtils()": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#bigFractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils#blockInverse(org.apache.commons.math3.linear.RealMatrix,int)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#checkAdditionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 50.375,
        "org.apache.commons.math3.linear$MatrixUtils#checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 604.8064516129032,
        "org.apache.commons.math3.linear$MatrixUtils#checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)": 572.8709677419355,
        "org.apache.commons.math3.linear$MatrixUtils#checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 300.93548387096774,
        "org.apache.commons.math3.linear$MatrixUtils#checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 604.8064516129032,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int,int,int)": 45.53125,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int[],int[])": 4.84375,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubtractionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 120.125,
        "org.apache.commons.math3.linear$MatrixUtils#checkSymmetric(org.apache.commons.math3.linear.RealMatrix,double)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnRealMatrix(double[])": 32.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldDiagonalMatrix(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldIdentityMatrix(org.apache.commons.math3.Field,int)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.Field,int,int)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.FieldElement[][])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldVector(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealDiagonalMatrix(double[])": 63.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createRealIdentityMatrix(int)": 58.125,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(double[][])": 337.7096774193548,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(int,int)": 155.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealVector(double[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createRowRealMatrix(double[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealMatrix(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealVector(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#fractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#isSymmetric(org.apache.commons.math3.linear.RealMatrix,double)": 35.7741935483871,
        "org.apache.commons.math3.linear$MatrixUtils#isSymmetricInternal(org.apache.commons.math3.linear.RealMatrix,double,boolean)": 37.70967741935483,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealMatrix(org.apache.commons.math3.linear.RealMatrix,java.io.ObjectOutputStream)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealVector(org.apache.commons.math3.linear.RealVector,java.io.ObjectOutputStream)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#solveLowerTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#solveUpperTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#MatrixUtils$BigFractionMatrixConverter()": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#getConvertedMatrix()": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#start(int,int,int,int,int,int)": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.BigFraction)": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#MatrixUtils$FractionMatrixConverter()": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#getConvertedMatrix()": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#start(int,int,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.Fraction)": 0.96875,
        "org.apache.commons.math3.linear$NonPositiveDefiniteMatrixException#NonPositiveDefiniteMatrixException(double,int,double)": 1.9375,
        "org.apache.commons.math3.linear$NonPositiveDefiniteMatrixException#getColumn()": 0.0,
        "org.apache.commons.math3.linear$NonPositiveDefiniteMatrixException#getRow()": 0.0,
        "org.apache.commons.math3.linear$NonPositiveDefiniteMatrixException#getThreshold()": 0.0,
        "org.apache.commons.math3.linear$NonSquareMatrixException#NonSquareMatrixException(int,int)": 13.5625,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#NonSymmetricMatrixException(int,int,double)": 1.9375,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getColumn()": 0.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getRow()": 0.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getThreshold()": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(int,int)": 30.03125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(org.apache.commons.math3.linear.OpenMapRealMatrix)": 8.71875,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#add(org.apache.commons.math3.linear.OpenMapRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#computeKey(int,int)": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#copy()": 1.9375,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#createMatrix(int,int)": 6.78125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getColumnDimension()": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getEntry(int,int)": 27.125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getRowDimension()": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3.875,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3.875,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#setEntry(int,int,double)": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.OpenMapRealMatrix)": 5.8125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 5.8125,
        "org.apache.commons.math3.linear$RealLinearOperator#RealLinearOperator()": 736.4193548387096,
        "org.apache.commons.math3.linear$RealLinearOperator#isTransposable()": 0.0,
        "org.apache.commons.math3.linear$RealLinearOperator#operateTranspose(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat()": 0.96875,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 646.4193548387096,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 710.2903225806451,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.text.NumberFormat)": 710.2903225806451,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix)": 17.4375,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition)": 17.4375,
        "org.apache.commons.math3.linear$RealMatrixFormat#getAvailableLocales()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getColumnSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getFormat()": 702.5483870967741,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance()": 646.4193548387096,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance(java.util.Locale)": 710.2903225806451,
        "org.apache.commons.math3.linear$RealMatrixFormat#getPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String)": 11.625,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String,java.text.ParsePosition)": 15.5,
        "org.apache.commons.math3.linear$RealVector#RealVector()": 767.3870967741935,
        "org.apache.commons.math3.linear$RealVector#add(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#addToEntry(int,double)": 5.8125,
        "org.apache.commons.math3.linear$RealVector#checkIndex(int)": 176.3125,
        "org.apache.commons.math3.linear$RealVector#checkIndices(int,int)": 23.25,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(int)": 68.78125,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 58.125,
        "org.apache.commons.math3.linear$RealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 8.71875,
        "org.apache.commons.math3.linear$RealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$RealVector#cosine(org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$RealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 27.125,
        "org.apache.commons.math3.linear$RealVector#equals(java.lang.Object)": 0.0,
        "org.apache.commons.math3.linear$RealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#getL1Norm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#getLInfNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector#getMaxIndex()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getMaxValue()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getMinIndex()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getMinValue()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getNorm()": 21.3125,
        "org.apache.commons.math3.linear$RealVector#hashCode()": 0.0,
        "org.apache.commons.math3.linear$RealVector#iterator()": 68.78125,
        "org.apache.commons.math3.linear$RealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#mapAdd(double)": 2.90625,
        "org.apache.commons.math3.linear$RealVector#mapAddToSelf(double)": 3.875,
        "org.apache.commons.math3.linear$RealVector#mapDivide(double)": 6.78125,
        "org.apache.commons.math3.linear$RealVector#mapDivideToSelf(double)": 6.78125,
        "org.apache.commons.math3.linear$RealVector#mapMultiply(double)": 84.28125,
        "org.apache.commons.math3.linear$RealVector#mapMultiplyToSelf(double)": 12.59375,
        "org.apache.commons.math3.linear$RealVector#mapSubtract(double)": 4.84375,
        "org.apache.commons.math3.linear$RealVector#mapSubtractToSelf(double)": 4.84375,
        "org.apache.commons.math3.linear$RealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 24.21875,
        "org.apache.commons.math3.linear$RealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 4.84375,
        "org.apache.commons.math3.linear$RealVector#projection(org.apache.commons.math3.linear.RealVector)": 13.5625,
        "org.apache.commons.math3.linear$RealVector#set(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#sparseIterator()": 1.9375,
        "org.apache.commons.math3.linear$RealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#toArray()": 2.90625,
        "org.apache.commons.math3.linear$RealVector#unitVector()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#unitize()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)": 27.125,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3.875,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 7.75,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3.875,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 7.75,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$RealVector$1#hasNext()": 68.78125,
        "org.apache.commons.math3.linear$RealVector$1#next()": 68.78125,
        "org.apache.commons.math3.linear$RealVector$1#remove()": 2.90625,
        "org.apache.commons.math3.linear$RealVector$2#add(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#addToEntry(int,double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#append(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#append(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#combine(double,double,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#copy()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#cosine(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#dotProduct(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#ebeDivide(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealVector$2#getDimension()": 5.8125,
        "org.apache.commons.math3.linear$RealVector$2#getDistance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getEntry(int)": 7.75,
        "org.apache.commons.math3.linear$RealVector$2#getL1Distance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getL1Norm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getLInfNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getSubVector(int,int)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#isInfinite()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#isNaN()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#iterator()": 3.875,
        "org.apache.commons.math3.linear$RealVector$2#map(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapAdd(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapAddToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapDivide(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapDivideToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiply(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiplyToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtract(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtractToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#outerProduct(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#set(double)": 2.90625,
        "org.apache.commons.math3.linear$RealVector$2#setEntry(int,double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#sparseIterator()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#subtract(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector$2#toArray()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#unitVector()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#unitize()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2$1#hasNext()": 3.875,
        "org.apache.commons.math3.linear$RealVector$2$1#next()": 3.875,
        "org.apache.commons.math3.linear$RealVector$2$1#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2$2#hasNext()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2$2#next()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2$2#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2)": 5.8125,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#getValue()": 5.8125,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#setValue(double)": 3.875,
        "org.apache.commons.math3.linear$RealVector$Entry#RealVector$Entry(org.apache.commons.math3.linear.RealVector)": 71.6875,
        "org.apache.commons.math3.linear$RealVector$Entry#getIndex()": 71.6875,
        "org.apache.commons.math3.linear$RealVector$Entry#getValue()": 68.78125,
        "org.apache.commons.math3.linear$RealVector$Entry#setIndex(int)": 71.6875,
        "org.apache.commons.math3.linear$RealVector$Entry#setValue(double)": 26.15625,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#RealVector$SparseEntryIterator(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#advance(org.apache.commons.math3.linear.RealVector$Entry)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#hasNext()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#next()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat()": 7.75,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 598.0322580645161,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.text.NumberFormat)": 598.0322580645161,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector)": 21.3125,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition)": 21.3125,
        "org.apache.commons.math3.linear$RealVectorFormat#getAvailableLocales()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getFormat()": 1.9375,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance()": 588.3548387096774,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance(java.util.Locale)": 598.0322580645161,
        "org.apache.commons.math3.linear$RealVectorFormat#getPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String)": 27.125,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String,java.text.ParsePosition)": 34.875,
        "org.apache.commons.math3.linear$SingularMatrixException#SingularMatrixException()": 18.40625,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#TriDiagonalTransformer(org.apache.commons.math3.linear.RealMatrix)": 39.64516129032258,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getHouseholderVectorsRef()": 0.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getMainDiagonalRef()": 31.903225806451616,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getQ()": 35.7741935483871,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getQT()": 36.74193548387096,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getSecondaryDiagonalRef()": 31.903225806451616,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getT()": 4.84375,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#transform()": 38.677419354838705,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int)": 626.0967741935484,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,int)": 364.25,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,int[])": 963.8387096774194,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,long)": 673.28125,
        "org.apache.commons.math3.random$AbstractWell#setSeed(int)": 5.8125,
        "org.apache.commons.math3.random$AbstractWell#setSeed(int[])": 963.8387096774194,
        "org.apache.commons.math3.random$AbstractWell#setSeed(long)": 937.7096774193549,
        "org.apache.commons.math3.random$BitsStreamGenerator#BitsStreamGenerator()": 1056.741935483871,
        "org.apache.commons.math3.random$BitsStreamGenerator#clear()": 1056.741935483871,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBoolean()": 27.125,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBytes(byte[])": 19.375,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextDouble()": 466.9375,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextFloat()": 27.125,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextGaussian()": 98.8125,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt()": 34.875,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt(int)": 35.84375,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong()": 27.125,
        "org.apache.commons.math3.random$RandomDataGenerator#RandomDataGenerator()": 947.3870967741935,
        "org.apache.commons.math3.random$RandomDataGenerator#RandomDataGenerator(org.apache.commons.math3.random.RandomGenerator)": 589.96875,
        "org.apache.commons.math3.random$RandomDataGenerator#getNatural(int)": 23.25,
        "org.apache.commons.math3.random$RandomDataGenerator#getRan()": 665.53125,
        "org.apache.commons.math3.random$RandomDataGenerator#getSecRan()": 17.4375,
        "org.apache.commons.math3.random$RandomDataGenerator#initRan()": 662.625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextBeta(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextBinomial(int,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextCauchy(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextChiSquare(double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextExponential(double)": 12.59375,
        "org.apache.commons.math3.random$RandomDataGenerator#nextF(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextGamma(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextGaussian(double,double)": 19.375,
        "org.apache.commons.math3.random$RandomDataGenerator#nextHexString(int)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextHypergeometric(int,int,int)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextInt(int,int)": 66.84375,
        "org.apache.commons.math3.random$RandomDataGenerator#nextLong(long,long)": 64.90625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPascal(int,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPermutation(int,int)": 23.25,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPoisson(double)": 21.3125,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSample(java.util.Collection,int)": 11.625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureHexString(int)": 11.625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureInt(int,int)": 3.875,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureLong(long,long)": 14.53125,
        "org.apache.commons.math3.random$RandomDataGenerator#nextT(double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextUniform(double,double)": 116.25,
        "org.apache.commons.math3.random$RandomDataGenerator#nextUniform(double,double,boolean)": 116.25,
        "org.apache.commons.math3.random$RandomDataGenerator#nextWeibull(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextZipf(int,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeed()": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeed(long)": 659.71875,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeedSecure()": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeedSecure(long)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#setSecureAlgorithm(java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.math3.random$RandomDataGenerator#shuffle(int[],int)": 23.25,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl()": 947.3870967741935,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl(org.apache.commons.math3.random.RandomGenerator)": 589.0,
        "org.apache.commons.math3.random$RandomDataImpl#getDelegate()": 2.90625,
        "org.apache.commons.math3.random$RandomDataImpl#nextBeta(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextBinomial(int,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextCauchy(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextChiSquare(double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextExponential(double)": 12.59375,
        "org.apache.commons.math3.random$RandomDataImpl#nextF(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextGamma(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextGaussian(double,double)": 12.59375,
        "org.apache.commons.math3.random$RandomDataImpl#nextHexString(int)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextHypergeometric(int,int,int)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextInt(int,int)": 43.59375,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.IntegerDistribution)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.RealDistribution)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextLong(long,long)": 64.90625,
        "org.apache.commons.math3.random$RandomDataImpl#nextPascal(int,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextPermutation(int,int)": 11.625,
        "org.apache.commons.math3.random$RandomDataImpl#nextPoisson(double)": 21.3125,
        "org.apache.commons.math3.random$RandomDataImpl#nextSample(java.util.Collection,int)": 11.625,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureHexString(int)": 11.625,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureInt(int,int)": 3.875,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureLong(long,long)": 14.53125,
        "org.apache.commons.math3.random$RandomDataImpl#nextT(double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double)": 108.5,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double,boolean)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextWeibull(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextZipf(int,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed()": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed(long)": 653.90625,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure()": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure(long)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#setSecureAlgorithm(java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.math3.random$Well19937c#Well19937c()": 626.0967741935484,
        "org.apache.commons.math3.random$Well19937c#Well19937c(int)": 73.625,
        "org.apache.commons.math3.random$Well19937c#Well19937c(int[])": 0.96875,
        "org.apache.commons.math3.random$Well19937c#Well19937c(long)": 662.625,
        "org.apache.commons.math3.random$Well19937c#next(int)": 150.15625,
        "org.apache.commons.math3.util$CompositeFormat#CompositeFormat()": 0.0,
        "org.apache.commons.math3.util$CompositeFormat#formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)": 89.125,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat()": 665.7741935483871,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat(java.util.Locale)": 1023.8387096774193,
        "org.apache.commons.math3.util$CompositeFormat#parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)": 106.5625,
        "org.apache.commons.math3.util$CompositeFormat#parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)": 104.625,
        "org.apache.commons.math3.util$CompositeFormat#parseNextCharacter(java.lang.String,java.text.ParsePosition)": 106.5625,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,double,java.text.ParsePosition)": 23.25,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)": 101.71875,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 3078.3548387096776,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1780.6129032258063,
        "org.apache.commons.math3.util$FastMath#abs(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#abs(int)": 318.71875,
        "org.apache.commons.math3.util$FastMath#abs(long)": 865.1290322580645,
        "org.apache.commons.math3.util$FastMath#acos(double)": 21.3125,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#asin(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#atan(double)": 31.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 103.65625,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 82.34375,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 40.6875,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 282.875,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cos(double)": 279.96875,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 357.46875,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 29.0625,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 74.59375,
        "org.apache.commons.math3.util$FastMath#exp(double)": 704.483870967742,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 923.1935483870968,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 14.53125,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 29.0625,
        "org.apache.commons.math3.util$FastMath#floor(double)": 768.21875,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 73.625,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 68.78125,
        "org.apache.commons.math3.util$FastMath#log(double)": 822.46875,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1009.3225806451612,
        "org.apache.commons.math3.util$FastMath#log10(double)": 54.25,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 465.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 861.21875,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 542.5,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 0.96875,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 457.25,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 730.6129032258065,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 33.90625,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 14.53125,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 396.21875,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 396.21875,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 578.6774193548387,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 152.8709677419355,
        "org.apache.commons.math3.util$FastMath#random()": 18.40625,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.84375,
        "org.apache.commons.math3.util$FastMath#rint(double)": 65.875,
        "org.apache.commons.math3.util$FastMath#round(double)": 21.3125,
        "org.apache.commons.math3.util$FastMath#round(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 56.1875,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9375,
        "org.apache.commons.math3.util$FastMath#signum(double)": 11.625,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#sin(double)": 372.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 377.8125,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 29.0625,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1724.483870967742,
        "org.apache.commons.math3.util$FastMath#tan(double)": 26.15625,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 26.15625,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 11.625,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 275.125,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double)": 309.03125,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 309.03125,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 309.03125,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 309.03125,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 907.7096774193549,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 903.8387096774194,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 994.8064516129032,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 1096.4193548387098,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 907.7096774193549,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 907.7096774193549,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 903.8387096774194,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 903.8387096774194,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 994.8064516129032,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 0.0,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[])": 369.09375,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[][])": 4.84375,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 47.46875,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 48.4375,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 140.46875,
        "org.apache.commons.math3.util$MathArrays#checkPositive(double[])": 360.375,
        "org.apache.commons.math3.util$MathArrays#checkRectangular(long[][])": 4.84375,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 22.225806451612904,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 48.35483870967742,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 5.8125,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": 39.71875,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 2.90625,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 6.78125,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#ebeAdd(double[],double[])": 1.9375,
        "org.apache.commons.math3.util$MathArrays#ebeDivide(double[],double[])": 8.71875,
        "org.apache.commons.math3.util$MathArrays#ebeMultiply(double[],double[])": 1.9375,
        "org.apache.commons.math3.util$MathArrays#ebeSubtract(double[],double[])": 1.9375,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 4.84375,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.96875,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.96875,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 48.4375,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 50.375,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 2.90625,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": 2.90625,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": 1.9375,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 8.71875,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 8.71875,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 7.75,
        "org.apache.commons.math3.util$MathArrays$2#<clinit>()": 140.46875,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 145.3125,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 145.3125,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 0.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 16.46875,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 0.96875,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 979.3225806451613,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 74.59375,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 3.875,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 3.875,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 1.9375,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 1.9375,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 45.53125,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 33.90625,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 41.65625,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 4.84375,
        "org.apache.commons.math3.util$Precision#<clinit>()": 1209.6451612903227,
        "org.apache.commons.math3.util$Precision#Precision()": 0.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 92.03125,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 48.4375,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 177.28125,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 443.19354838709677,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 807.0645161290323,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 0.96875,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 77.5,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 130.78125,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 50.375,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 76.53125,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsWithRelativeTolerance(double,double,double)": 0.96875,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 0.96875
    },
    "Math-13": {
        "org.apache.commons.math3.analysis$FunctionUtils#FunctionUtils()": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils#add(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[])": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils#add(org.apache.commons.math3.analysis.UnivariateFunction[])": 4.84375,
        "org.apache.commons.math3.analysis$FunctionUtils#add(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[])": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils#collector(org.apache.commons.math3.analysis.BivariateFunction,double)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils#collector(org.apache.commons.math3.analysis.BivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction,double)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils#combine(org.apache.commons.math3.analysis.BivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils#compose(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[])": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils#compose(org.apache.commons.math3.analysis.UnivariateFunction[])": 2.90625,
        "org.apache.commons.math3.analysis$FunctionUtils#compose(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[])": 3.875,
        "org.apache.commons.math3.analysis$FunctionUtils#fix1stArgument(org.apache.commons.math3.analysis.BivariateFunction,double)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils#fix2ndArgument(org.apache.commons.math3.analysis.BivariateFunction,double)": 23.25,
        "org.apache.commons.math3.analysis$FunctionUtils#multiply(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[])": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils#multiply(org.apache.commons.math3.analysis.UnivariateFunction[])": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils#multiply(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction[])": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils#sample(org.apache.commons.math3.analysis.UnivariateFunction,double,double,int)": 31.96875,
        "org.apache.commons.math3.analysis$FunctionUtils#toDifferentiableMultivariateFunction(org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction)": 13.5625,
        "org.apache.commons.math3.analysis$FunctionUtils#toDifferentiableMultivariateVectorFunction(org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction)": 54.16129032258064,
        "org.apache.commons.math3.analysis$FunctionUtils#toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils#toMultivariateDifferentiableFunction(org.apache.commons.math3.analysis.DifferentiableMultivariateFunction)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils#toMultivariateDifferentiableVectorFunction(org.apache.commons.math3.analysis.DifferentiableMultivariateVectorFunction)": 54.16129032258064,
        "org.apache.commons.math3.analysis$FunctionUtils#toUnivariateDifferential(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils$1#value(double)": 2.90625,
        "org.apache.commons.math3.analysis$FunctionUtils$10#value(double)": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils$11#value(double[])": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils$12#value(double)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils$13#value(double)": 23.25,
        "org.apache.commons.math3.analysis$FunctionUtils$14#derivative()": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils$14#value(double)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils$14$1#value(double)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils$15#value(double)": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils$15#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils$16#gradient()": 13.5625,
        "org.apache.commons.math3.analysis$FunctionUtils$16#partialDerivative(int)": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils$16#value(double[])": 13.5625,
        "org.apache.commons.math3.analysis$FunctionUtils$16$2#value(double[])": 13.5625,
        "org.apache.commons.math3.analysis$FunctionUtils$17#value(double[])": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils$17#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[])": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils$18#jacobian()": 82.34375,
        "org.apache.commons.math3.analysis$FunctionUtils$18#value(double[])": 85.25,
        "org.apache.commons.math3.analysis$FunctionUtils$18$1#value(double[])": 82.34375,
        "org.apache.commons.math3.analysis$FunctionUtils$19#value(double[])": 22.28125,
        "org.apache.commons.math3.analysis$FunctionUtils$19#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[])": 82.34375,
        "org.apache.commons.math3.analysis$FunctionUtils$2#value(double)": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils$2#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3.875,
        "org.apache.commons.math3.analysis$FunctionUtils$4#value(double)": 4.84375,
        "org.apache.commons.math3.analysis$FunctionUtils$5#value(double)": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils$5#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils$7#value(double)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils$8#value(double)": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils$8#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#<clinit>()": 219.90625,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#DSCompiler(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler)": 219.90625,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#acos(double[],int,double[],int)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#acosh(double[],int,double[],int)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#add(double[],int,double[],int,double[],int)": 108.5,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#asin(double[],int,double[],int)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#asinh(double[],int,double[],int)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#atan(double[],int,double[],int)": 3.875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#atan2(double[],int,double[],int,double[],int)": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#atanh(double[],int,double[],int)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#checkCompatibility(org.apache.commons.math3.analysis.differentiation.DSCompiler)": 143.375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compileCompositionIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[][],int[][])": 219.90625,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compileDerivativesIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler)": 219.90625,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compileLowerIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler)": 219.90625,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compileMultiplicationIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[])": 219.90625,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compileSizes(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler)": 219.90625,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#compose(double[],int,double[],double[],int)": 93.96875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#convertIndex(int,int,int[][],int,int,int[][])": 81.375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#cos(double[],int,double[],int)": 6.78125,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#cosh(double[],int,double[],int)": 2.90625,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#divide(double[],int,double[],int,double[],int)": 17.4375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#exp(double[],int,double[],int)": 15.5,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#expm1(double[],int,double[],int)": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getCompiler(int,int)": 219.90625,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getFreeParameters()": 202.46875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getOrder()": 153.0625,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getPartialDerivativeIndex(int,int,int[][],int[])": 217.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getPartialDerivativeIndex(int[])": 202.46875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getPartialDerivativeOrders(int)": 5.8125,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#getSize()": 219.90625,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#linearCombination(double,double[],int,double,double[],int,double,double[],int,double,double[],int,double[],int)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#linearCombination(double,double[],int,double,double[],int,double,double[],int,double[],int)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#linearCombination(double,double[],int,double,double[],int,double[],int)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#log(double[],int,double[],int)": 7.75,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#log10(double[],int,double[],int)": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#log1p(double[],int,double[],int)": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#multiply(double[],int,double[],int,double[],int)": 87.1875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#pow(double[],int,double,double[],int)": 4.84375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#pow(double[],int,double[],int,double[],int)": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#pow(double[],int,int,double[],int)": 31.0,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#remainder(double[],int,double[],int,double[],int)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#rootN(double[],int,int,double[],int)": 30.03125,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#sin(double[],int,double[],int)": 10.65625,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#sinh(double[],int,double[],int)": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#subtract(double[],int,double[],int,double[],int)": 48.4375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#tan(double[],int,double[],int)": 2.90625,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#tanh(double[],int,double[],int)": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DSCompiler#taylor(double[],int,double[])": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(int,int)": 213.125,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(int,int,double)": 211.1875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(int,int,double[])": 96.875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(int,int,int,double)": 208.28125,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)": 213.125,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 140.46875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#abs()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#acos()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#acosh()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#add(double)": 63.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#add(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 106.5625,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#asin()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#asinh()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#atan()": 2.90625,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#atan2(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#atanh()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#cbrt()": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#ceil()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#compose(double[])": 18.40625,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#copySign(double)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#cos()": 6.78125,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#cosh()": 2.90625,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#divide(double)": 11.625,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#divide(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 16.46875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#exp()": 13.5625,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#expm1()": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#floor()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getAllDerivatives()": 10.65625,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getExponent()": 3.875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getField()": 70.71875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getFreeParameters()": 110.4375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getOrder()": 126.90625,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getPartialDerivative(int[])": 201.5,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#getValue()": 144.34375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#hypot(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3.875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#log()": 5.8125,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#log10()": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#log1p()": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#multiply(double)": 82.34375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#multiply(int)": 8.71875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 71.6875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#negate()": 14.53125,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#pow(double)": 4.84375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#pow(int)": 2.90625,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#pow(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#reciprocal()": 12.59375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#remainder(double)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#remainder(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#rint()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#rootN(int)": 28.09375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#round()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#scalb(int)": 3.875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#signum()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#sin()": 10.65625,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#sinh()": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#sqrt()": 25.1875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#subtract(double)": 47.46875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#subtract(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 48.4375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#tan()": 2.90625,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#tanh()": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#taylor(double[])": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#toDegrees()": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#toRadians()": 1.9375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure#writeReplace()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure$1#getOne()": 16.46875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure$1#getRuntimeClass()": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure$1#getZero()": 66.84375,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure$DataTransferObject#DerivativeStructure$DataTransferObject(int,int,double[])": 0.96875,
        "org.apache.commons.math3.analysis.differentiation$DerivativeStructure$DataTransferObject#readResolve()": 0.96875,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#PolynomialFunction(double[])": 42.54838709677419,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#add(org.apache.commons.math3.analysis.polynomials.PolynomialFunction)": 11.625,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#degree()": 17.4375,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#derivative()": 4.84375,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#differentiate(double[])": 20.34375,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#equals(java.lang.Object)": 0.96875,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#evaluate(double[],double)": 26.096774193548384,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#getCoefficients()": 29.0625,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#hashCode()": 0.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#multiply(org.apache.commons.math3.analysis.polynomials.PolynomialFunction)": 13.5625,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#negate()": 0.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#polynomialDerivative()": 20.34375,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#subtract(org.apache.commons.math3.analysis.polynomials.PolynomialFunction)": 1.9375,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#toString()": 8.71875,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#toString(double)": 8.71875,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#value(double)": 20.29032258064516,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 0.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction$Parametric#PolynomialFunction$Parametric()": -11.64516129032258,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction$Parametric#gradient(double,double[])": 19.375,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction$Parametric#value(double,double[])": 19.375,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException()": 0.96875,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 17.4375,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 164.6875,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 185.03125,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 2.90625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.65625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 42.625,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 808.90625,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 8.71875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 662.625,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 13.5625,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 61.03125,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 85.25,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 58.125,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int)": 0.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int,java.lang.Class)": 12.59375,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException()": 17.4375,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 17.4375,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 28.09375,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 28.09375,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 12.59375,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(java.lang.Integer[],java.lang.Integer[])": 0.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,java.lang.Integer[],java.lang.Integer[])": 37.78125,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimension(int)": 0.96875,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimensions()": 0.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimension(int)": 0.96875,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimensions()": 0.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 10.65625,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 26.15625,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 6.78125,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 17.4375,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 17.4375,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 11.625,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 46.5,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 78.46875,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 45.53125,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 71.6875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 32.9375,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 127.875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 94.9375,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 227.65625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.90625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.90625,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 39.71875,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 187.9375,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 0.96875,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 0.96875,
        "org.apache.commons.math3.exception$TooManyEvaluationsException#TooManyEvaluationsException(java.lang.Number)": 21.3125,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 1.9375,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 10.65625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix()": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field)": 69.75,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field,int,int)": 99.78125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 3.875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int)": 64.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int,int)": 115.28125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkAdditionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkColumnIndex(int)": 122.0625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkMultiplicationCompatible(org.apache.commons.math3.linear.FieldMatrix)": 17.4375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkRowIndex(int)": 122.0625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int,int,int,int)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int[],int[])": 4.84375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubtractionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3.875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int,int,int,int,org.apache.commons.math3.FieldElement[][])": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int[],int[],org.apache.commons.math3.FieldElement[][])": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#equals(java.lang.Object)": 31.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[][])": 88.15625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumn(int)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnMatrix(int)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnVector(int)": 5.8125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getData()": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getField()": 126.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRow(int)": 6.78125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowVector(int)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int[],int[])": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getTrace()": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#hashCode()": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#isSquare()": 36.8125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.linear.FieldVector)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#power(int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldMatrix)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldVector)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#toString()": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#transpose()": 5.8125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 22.28125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$1#visit(int,int,org.apache.commons.math3.FieldElement)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#start(int,int,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#visit(int,int,org.apache.commons.math3.FieldElement)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$3#visit(int,int,org.apache.commons.math3.FieldElement)": 5.8125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#<clinit>()": 688.0322580645161,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix()": 502.2258064516129,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix(int,int)": 619.03125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 35.84375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int,int,int,int,double[][])": 28.09375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int[],int[],double[][])": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#equals(java.lang.Object)": 51.34375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumn(int)": 54.25,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnMatrix(int)": 35.84375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnVector(int)": 15.5,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getData()": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getFrobeniusNorm()": 32.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getNorm()": 78.46875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRow(int)": 133.6875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowVector(int)": 51.34375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int,int,int,int)": 10.65625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int[],int[])": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getTrace()": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#hashCode()": 6.78125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#isSquare()": 222.5483870967742,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 201.5,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(double[])": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(org.apache.commons.math3.linear.RealVector)": 210.21875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#power(int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(double[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealMatrix)": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarAdd(double)": 33.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarMultiply(double)": 141.4375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumn(int,double[])": 9.6875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 105.59375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRow(int,double[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 117.21875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setSubMatrix(double[][],int,int)": 4.84375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 101.71875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#toString()": 6.78125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#transpose()": 246.0625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 7.75,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4.84375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 248.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 27.125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#end()": 78.46875,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#start(int,int,int,int,int,int)": 78.46875,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#visit(int,int,double)": 78.46875,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#end()": 32.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#start(int,int,int,int,int,int)": 32.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#visit(int,int,double)": 32.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$3#visit(int,int,double)": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#start(int,int,int,int,int,int)": 28.09375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#visit(int,int,double)": 28.09375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$5#visit(int,int,double)": 246.0625,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,int,int)": 33.90625,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][])": 47.46875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],boolean)": 30.03125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][])": 37.78125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][],boolean)": 17.4375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#add(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copy()": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyIn(org.apache.commons.math3.FieldElement[][])": 47.46875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyOut()": 31.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#createMatrix(int,int)": 17.4375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getColumnDimension()": 76.53125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getData()": 30.03125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getDataRef()": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getEntry(int,int)": 63.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getRowDimension()": 76.53125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 36.8125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 47.46875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 21.3125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix()": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[])": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][])": 473.71875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][],boolean)": 259.625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(int,int)": 462.09375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#add(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copy()": 59.09375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyIn(double[][])": 475.65625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyOut()": 341.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#createMatrix(int,int)": 331.3125,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getColumnDimension()": 586.09375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getData()": 334.21875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getDataRef()": 70.71875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getEntry(int,int)": 508.59375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getRowDimension()": 585.125,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 10.65625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiplyEntry(int,int,double)": 8.71875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#operate(double[])": 103.65625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#preMultiply(double[])": 2.90625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setEntry(int,int,double)": 453.375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setSubMatrix(double[][],int,int)": 475.65625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 73.625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 247.03125,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 27.125,
        "org.apache.commons.math3.linear$ArrayRealVector#<clinit>()": 620.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector()": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[])": 433.03125,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],boolean)": 469.84375,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],double[])": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],int,int)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int)": 170.5,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int,double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[])": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[],int,int)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean)": 124.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,double[])": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#add(org.apache.commons.math3.linear.RealVector)": 8.71875,
        "org.apache.commons.math3.linear$ArrayRealVector#addToEntry(int,double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#append(double)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.ArrayRealVector)": 0.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(int)": 339.0625,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$ArrayRealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$ArrayRealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 39.71875,
        "org.apache.commons.math3.linear$ArrayRealVector#copy()": 124.0,
        "org.apache.commons.math3.linear$ArrayRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 266.40625,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 25.1875,
        "org.apache.commons.math3.linear$ArrayRealVector#equals(java.lang.Object)": 47.46875,
        "org.apache.commons.math3.linear$ArrayRealVector#getDataRef()": 228.625,
        "org.apache.commons.math3.linear$ArrayRealVector#getDimension()": 421.40625,
        "org.apache.commons.math3.linear$ArrayRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 4.84375,
        "org.apache.commons.math3.linear$ArrayRealVector#getEntry(int)": 365.21875,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Norm()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfNorm()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#getNorm()": 54.25,
        "org.apache.commons.math3.linear$ArrayRealVector#getSubVector(int,int)": 6.78125,
        "org.apache.commons.math3.linear$ArrayRealVector#hashCode()": 28.09375,
        "org.apache.commons.math3.linear$ArrayRealVector#isInfinite()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#isNaN()": 75.5625,
        "org.apache.commons.math3.linear$ArrayRealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapAddToSelf(double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapDivideToSelf(double)": 4.84375,
        "org.apache.commons.math3.linear$ArrayRealVector#mapMultiplyToSelf(double)": 75.5625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapSubtractToSelf(double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#set(double)": 43.59375,
        "org.apache.commons.math3.linear$ArrayRealVector#setEntry(int,double)": 84.28125,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,double[])": 24.21875,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 25.1875,
        "org.apache.commons.math3.linear$ArrayRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 98.8125,
        "org.apache.commons.math3.linear$ArrayRealVector#toArray()": 174.375,
        "org.apache.commons.math3.linear$ArrayRealVector#toString()": 0.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(int,int,org.apache.commons.math3.FieldElement[][],boolean)": 33.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.Field,int,int)": 26.15625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.FieldElement[][])": 33.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.BlockFieldMatrix)": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockHeight(int)": 39.71875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockWidth(int)": 44.5625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copy()": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copyBlockPart(org.apache.commons.math3.FieldElement[],int,int,int,int,int,org.apache.commons.math3.FieldElement[],int,int,int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createBlocksLayout(org.apache.commons.math3.Field,int,int)": 26.15625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createMatrix(int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumn(int)": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnDimension()": 39.71875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnMatrix(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getData()": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getEntry(int,int)": 27.125,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRow(int)": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowDimension()": 40.6875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getSubMatrix(int,int,int,int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.BlockFieldMatrix)": 6.78125,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 5.8125,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#toBlocksLayout(org.apache.commons.math3.FieldElement[][])": 33.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#transpose()": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(double[][])": 179.21875,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int)": 93.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int,double[][],boolean)": 200.53125,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.BlockRealMatrix)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#addToEntry(int,int,double)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockHeight(int)": 207.3125,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockWidth(int)": 215.0625,
        "org.apache.commons.math3.linear$BlockRealMatrix#copy()": 18.40625,
        "org.apache.commons.math3.linear$BlockRealMatrix#copyBlockPart(double[],int,int,int,int,int,double[],int,int,int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#createBlocksLayout(int,int)": 112.375,
        "org.apache.commons.math3.linear$BlockRealMatrix#createMatrix(int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumn(int)": 20.34375,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnDimension()": 206.34375,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnMatrix(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getData()": 114.3125,
        "org.apache.commons.math3.linear$BlockRealMatrix#getEntry(int,int)": 79.4375,
        "org.apache.commons.math3.linear$BlockRealMatrix#getFrobeniusNorm()": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getNorm()": 22.28125,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRow(int)": 10.65625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowDimension()": 207.3125,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getSubMatrix(int,int,int,int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.BlockRealMatrix)": 35.84375,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 35.84375,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#operate(double[])": 90.09375,
        "org.apache.commons.math3.linear$BlockRealMatrix#preMultiply(double[])": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarAdd(double)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarMultiply(double)": 14.53125,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumn(int,double[])": 31.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 25.1875,
        "org.apache.commons.math3.linear$BlockRealMatrix#setEntry(int,int,double)": 47.46875,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRow(int,double[])": 27.125,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 25.1875,
        "org.apache.commons.math3.linear$BlockRealMatrix#setSubMatrix(double[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.BlockRealMatrix)": 18.40625,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 21.3125,
        "org.apache.commons.math3.linear$BlockRealMatrix#toBlocksLayout(double[][])": 179.21875,
        "org.apache.commons.math3.linear$BlockRealMatrix#transpose()": 49.40625,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 8.71875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$DiagonalMatrix#DiagonalMatrix()": 0.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#DiagonalMatrix(double[])": 143.19354838709677,
        "org.apache.commons.math3.linear$DiagonalMatrix#DiagonalMatrix(double[],boolean)": 158.875,
        "org.apache.commons.math3.linear$DiagonalMatrix#DiagonalMatrix(int)": 89.125,
        "org.apache.commons.math3.linear$DiagonalMatrix#add(org.apache.commons.math3.linear.DiagonalMatrix)": 0.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#copy()": 143.19354838709677,
        "org.apache.commons.math3.linear$DiagonalMatrix#createMatrix(int,int)": 0.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#getColumnDimension()": 143.19354838709677,
        "org.apache.commons.math3.linear$DiagonalMatrix#getData()": 54.16129032258064,
        "org.apache.commons.math3.linear$DiagonalMatrix#getDataRef()": 158.875,
        "org.apache.commons.math3.linear$DiagonalMatrix#getEntry(int,int)": 143.19354838709677,
        "org.apache.commons.math3.linear$DiagonalMatrix#getRowDimension()": 143.19354838709677,
        "org.apache.commons.math3.linear$DiagonalMatrix#multiply(org.apache.commons.math3.linear.DiagonalMatrix)": 158.875,
        "org.apache.commons.math3.linear$DiagonalMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 86.21875,
        "org.apache.commons.math3.linear$DiagonalMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#operate(double[])": 158.875,
        "org.apache.commons.math3.linear$DiagonalMatrix#preMultiply(double[])": 0.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#setEntry(int,int,double)": 89.125,
        "org.apache.commons.math3.linear$DiagonalMatrix#setSubMatrix(double[][],int,int)": 0.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#subtract(org.apache.commons.math3.linear.DiagonalMatrix)": 0.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 0.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 0.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#MatrixDimensionMismatchException(int,int,int,int)": 37.78125,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedColumnDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedRowDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongColumnDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongRowDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#<clinit>()": 634.8064516129032,
        "org.apache.commons.math3.linear$MatrixUtils#MatrixUtils()": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#bigFractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils#blockInverse(org.apache.commons.math3.linear.RealMatrix,int)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#checkAdditionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 49.40625,
        "org.apache.commons.math3.linear$MatrixUtils#checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 596.0967741935484,
        "org.apache.commons.math3.linear$MatrixUtils#checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)": 563.1935483870968,
        "org.apache.commons.math3.linear$MatrixUtils#checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 328.40625,
        "org.apache.commons.math3.linear$MatrixUtils#checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 595.1290322580645,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int,int,int)": 45.53125,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int[],int[])": 4.84375,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubtractionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 120.125,
        "org.apache.commons.math3.linear$MatrixUtils#checkSymmetric(org.apache.commons.math3.linear.RealMatrix,double)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnRealMatrix(double[])": 32.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldDiagonalMatrix(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldIdentityMatrix(org.apache.commons.math3.Field,int)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.Field,int,int)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.FieldElement[][])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldVector(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealDiagonalMatrix(double[])": 149.1875,
        "org.apache.commons.math3.linear$MatrixUtils#createRealIdentityMatrix(int)": 58.125,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(double[][])": 371.03125,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(int,int)": 232.5,
        "org.apache.commons.math3.linear$MatrixUtils#createRealVector(double[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createRowRealMatrix(double[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealMatrix(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealVector(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#fractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#isSymmetric(org.apache.commons.math3.linear.RealMatrix,double)": 120.93548387096774,
        "org.apache.commons.math3.linear$MatrixUtils#isSymmetricInternal(org.apache.commons.math3.linear.RealMatrix,double,boolean)": 122.87096774193549,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealMatrix(org.apache.commons.math3.linear.RealMatrix,java.io.ObjectOutputStream)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealVector(org.apache.commons.math3.linear.RealVector,java.io.ObjectOutputStream)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#solveLowerTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#solveUpperTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#MatrixUtils$BigFractionMatrixConverter()": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#getConvertedMatrix()": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#start(int,int,int,int,int,int)": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.BigFraction)": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#MatrixUtils$FractionMatrixConverter()": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#getConvertedMatrix()": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#start(int,int,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.Fraction)": 0.96875,
        "org.apache.commons.math3.linear$NonSquareMatrixException#NonSquareMatrixException(int,int)": 13.5625,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#NonSymmetricMatrixException(int,int,double)": 1.9375,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getColumn()": 0.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getRow()": 0.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getThreshold()": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(int,int)": 30.03125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(org.apache.commons.math3.linear.OpenMapRealMatrix)": 8.71875,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#add(org.apache.commons.math3.linear.OpenMapRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#computeKey(int,int)": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#copy()": 1.9375,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#createMatrix(int,int)": 6.78125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getColumnDimension()": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getEntry(int,int)": 27.125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getRowDimension()": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3.875,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3.875,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#setEntry(int,int,double)": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.OpenMapRealMatrix)": 5.8125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 5.8125,
        "org.apache.commons.math3.linear$RealLinearOperator#RealLinearOperator()": 722.8709677419355,
        "org.apache.commons.math3.linear$RealLinearOperator#isTransposable()": 0.0,
        "org.apache.commons.math3.linear$RealLinearOperator#operateTranspose(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat()": 0.96875,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 634.8064516129032,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 696.741935483871,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.text.NumberFormat)": 696.741935483871,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix)": 17.4375,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition)": 17.4375,
        "org.apache.commons.math3.linear$RealMatrixFormat#getAvailableLocales()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getColumnSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getFormat()": 689.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance()": 634.8064516129032,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance(java.util.Locale)": 696.741935483871,
        "org.apache.commons.math3.linear$RealMatrixFormat#getPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String)": 11.625,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String,java.text.ParsePosition)": 15.5,
        "org.apache.commons.math3.linear$RealVector#RealVector()": 799.21875,
        "org.apache.commons.math3.linear$RealVector#add(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#addToEntry(int,double)": 5.8125,
        "org.apache.commons.math3.linear$RealVector#checkIndex(int)": 176.3125,
        "org.apache.commons.math3.linear$RealVector#checkIndices(int,int)": 23.25,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(int)": 68.78125,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 58.125,
        "org.apache.commons.math3.linear$RealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 8.71875,
        "org.apache.commons.math3.linear$RealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$RealVector#cosine(org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$RealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 27.125,
        "org.apache.commons.math3.linear$RealVector#equals(java.lang.Object)": 0.0,
        "org.apache.commons.math3.linear$RealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#getL1Norm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#getLInfNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector#getMaxIndex()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getMaxValue()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getMinIndex()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getMinValue()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getNorm()": 21.3125,
        "org.apache.commons.math3.linear$RealVector#hashCode()": 0.0,
        "org.apache.commons.math3.linear$RealVector#iterator()": 68.78125,
        "org.apache.commons.math3.linear$RealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#mapAdd(double)": 2.90625,
        "org.apache.commons.math3.linear$RealVector#mapAddToSelf(double)": 3.875,
        "org.apache.commons.math3.linear$RealVector#mapDivide(double)": 6.78125,
        "org.apache.commons.math3.linear$RealVector#mapDivideToSelf(double)": 6.78125,
        "org.apache.commons.math3.linear$RealVector#mapMultiply(double)": 84.28125,
        "org.apache.commons.math3.linear$RealVector#mapMultiplyToSelf(double)": 12.59375,
        "org.apache.commons.math3.linear$RealVector#mapSubtract(double)": 4.84375,
        "org.apache.commons.math3.linear$RealVector#mapSubtractToSelf(double)": 4.84375,
        "org.apache.commons.math3.linear$RealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 24.21875,
        "org.apache.commons.math3.linear$RealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 4.84375,
        "org.apache.commons.math3.linear$RealVector#projection(org.apache.commons.math3.linear.RealVector)": 13.5625,
        "org.apache.commons.math3.linear$RealVector#set(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#sparseIterator()": 1.9375,
        "org.apache.commons.math3.linear$RealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#toArray()": 2.90625,
        "org.apache.commons.math3.linear$RealVector#unitVector()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#unitize()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)": 27.125,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3.875,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 7.75,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3.875,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 7.75,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$RealVector$1#hasNext()": 68.78125,
        "org.apache.commons.math3.linear$RealVector$1#next()": 68.78125,
        "org.apache.commons.math3.linear$RealVector$1#remove()": 2.90625,
        "org.apache.commons.math3.linear$RealVector$2#add(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#addToEntry(int,double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#append(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#append(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#combine(double,double,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#copy()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#cosine(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#dotProduct(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#ebeDivide(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealVector$2#getDimension()": 5.8125,
        "org.apache.commons.math3.linear$RealVector$2#getDistance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getEntry(int)": 7.75,
        "org.apache.commons.math3.linear$RealVector$2#getL1Distance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getL1Norm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getLInfNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getSubVector(int,int)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#isInfinite()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#isNaN()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#iterator()": 3.875,
        "org.apache.commons.math3.linear$RealVector$2#map(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapAdd(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapAddToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapDivide(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapDivideToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiply(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiplyToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtract(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtractToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#outerProduct(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#set(double)": 2.90625,
        "org.apache.commons.math3.linear$RealVector$2#setEntry(int,double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#sparseIterator()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#subtract(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector$2#toArray()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#unitVector()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#unitize()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2$1#hasNext()": 3.875,
        "org.apache.commons.math3.linear$RealVector$2$1#next()": 3.875,
        "org.apache.commons.math3.linear$RealVector$2$1#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2$2#hasNext()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2$2#next()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2$2#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2)": 5.8125,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#getValue()": 5.8125,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#setValue(double)": 3.875,
        "org.apache.commons.math3.linear$RealVector$Entry#RealVector$Entry(org.apache.commons.math3.linear.RealVector)": 71.6875,
        "org.apache.commons.math3.linear$RealVector$Entry#getIndex()": 71.6875,
        "org.apache.commons.math3.linear$RealVector$Entry#getValue()": 68.78125,
        "org.apache.commons.math3.linear$RealVector$Entry#setIndex(int)": 71.6875,
        "org.apache.commons.math3.linear$RealVector$Entry#setValue(double)": 26.15625,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#RealVector$SparseEntryIterator(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#advance(org.apache.commons.math3.linear.RealVector$Entry)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#hasNext()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#next()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat()": 7.75,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 629.6875,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.text.NumberFormat)": 629.6875,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector)": 21.3125,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition)": 21.3125,
        "org.apache.commons.math3.linear$RealVectorFormat#getAvailableLocales()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getFormat()": 1.9375,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance()": 620.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance(java.util.Locale)": 629.6875,
        "org.apache.commons.math3.linear$RealVectorFormat#getPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String)": 27.125,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String,java.text.ParsePosition)": 34.875,
        "org.apache.commons.math3.optimization$InitialGuess#InitialGuess(double[])": 133.51612903225808,
        "org.apache.commons.math3.optimization$InitialGuess#getInitialGuess()": 132.5483870967742,
        "org.apache.commons.math3.optimization$PointVectorValuePair#PointVectorValuePair(double[],double[])": 86.21875,
        "org.apache.commons.math3.optimization$PointVectorValuePair#PointVectorValuePair(double[],double[],boolean)": 86.21875,
        "org.apache.commons.math3.optimization$PointVectorValuePair#getPoint()": 74.59375,
        "org.apache.commons.math3.optimization$PointVectorValuePair#getPointRef()": 46.5,
        "org.apache.commons.math3.optimization$PointVectorValuePair#getValue()": 5.8125,
        "org.apache.commons.math3.optimization$PointVectorValuePair#getValueRef()": 21.3125,
        "org.apache.commons.math3.optimization$PointVectorValuePair#writeReplace()": 0.96875,
        "org.apache.commons.math3.optimization$PointVectorValuePair$DataTransferObject#PointVectorValuePair$DataTransferObject(double[],double[])": 0.96875,
        "org.apache.commons.math3.optimization$PointVectorValuePair$DataTransferObject#readResolve()": 0.96875,
        "org.apache.commons.math3.optimization$Target#Target(double[])": 54.16129032258064,
        "org.apache.commons.math3.optimization$Target#getTarget()": 54.16129032258064,
        "org.apache.commons.math3.optimization$Weight#Weight(double[])": 54.16129032258064,
        "org.apache.commons.math3.optimization$Weight#Weight(org.apache.commons.math3.linear.RealMatrix)": 0.0,
        "org.apache.commons.math3.optimization$Weight#getWeight()": 54.16129032258064,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#BaseAbstractMultivariateVectorOptimizer()": 0.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#BaseAbstractMultivariateVectorOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker)": 57.064516129032256,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#checkParameters()": 54.16129032258064,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#computeObjectiveValue(double[])": 85.25,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#getConvergenceChecker()": 80.40625,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#getEvaluations()": 4.84375,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#getMaxEvaluations()": 0.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#getObjectiveFunction()": 85.25,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#getStartPoint()": 85.25,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#getTarget()": 85.25,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#getTargetRef()": 0.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#getWeight()": 54.16129032258064,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#getWeightRef()": 0.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#optimize(int,org.apache.commons.math3.analysis.MultivariateVectorFunction,double[],double[],double[])": 0.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#optimize(int,org.apache.commons.math3.analysis.MultivariateVectorFunction,org.apache.commons.math3.optimization.OptimizationData[])": 0.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#optimizeInternal(int,org.apache.commons.math3.analysis.MultivariateVectorFunction,double[],double[],double[])": 0.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#optimizeInternal(int,org.apache.commons.math3.analysis.MultivariateVectorFunction,org.apache.commons.math3.optimization.OptimizationData[])": 54.16129032258064,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#parseOptimizationData(org.apache.commons.math3.optimization.OptimizationData[])": 54.16129032258064,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateVectorOptimizer#setUp()": 54.16129032258064,
        "org.apache.commons.math3.optimization.fitting$CurveFitter#CurveFitter(org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer)": -5.838709677419356,
        "org.apache.commons.math3.optimization.fitting$CurveFitter#CurveFitter(org.apache.commons.math3.optimization.MultivariateDifferentiableVectorOptimizer)": 0.0,
        "org.apache.commons.math3.optimization.fitting$CurveFitter#addObservedPoint(double,double)": 14.53125,
        "org.apache.commons.math3.optimization.fitting$CurveFitter#addObservedPoint(double,double,double)": -7.774193548387096,
        "org.apache.commons.math3.optimization.fitting$CurveFitter#addObservedPoint(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint)": 0.0,
        "org.apache.commons.math3.optimization.fitting$CurveFitter#clearObservations()": 0.0,
        "org.apache.commons.math3.optimization.fitting$CurveFitter#fit(int,org.apache.commons.math3.analysis.ParametricUnivariateFunction,double[])": -8.741935483870968,
        "org.apache.commons.math3.optimization.fitting$CurveFitter#fit(org.apache.commons.math3.analysis.ParametricUnivariateFunction,double[])": -11.64516129032258,
        "org.apache.commons.math3.optimization.fitting$CurveFitter#getObservations()": 13.5625,
        "org.apache.commons.math3.optimization.fitting$CurveFitter$OldTheoreticalValuesFunction#CurveFitter$OldTheoreticalValuesFunction(org.apache.commons.math3.optimization.fitting.CurveFitter,org.apache.commons.math3.analysis.ParametricUnivariateFunction)": -8.741935483870968,
        "org.apache.commons.math3.optimization.fitting$CurveFitter$OldTheoreticalValuesFunction#jacobian()": 22.28125,
        "org.apache.commons.math3.optimization.fitting$CurveFitter$OldTheoreticalValuesFunction#value(double[])": 22.28125,
        "org.apache.commons.math3.optimization.fitting$CurveFitter$OldTheoreticalValuesFunction$1#value(double[])": 22.28125,
        "org.apache.commons.math3.optimization.fitting$PolynomialFitter#PolynomialFitter(int,org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer)": 0.0,
        "org.apache.commons.math3.optimization.fitting$PolynomialFitter#PolynomialFitter(org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer)": -26.161290322580644,
        "org.apache.commons.math3.optimization.fitting$PolynomialFitter#fit()": 0.0,
        "org.apache.commons.math3.optimization.fitting$PolynomialFitter#fit(double[])": -26.161290322580644,
        "org.apache.commons.math3.optimization.fitting$PolynomialFitter#fit(int,double[])": 0.0,
        "org.apache.commons.math3.optimization.fitting$WeightedObservedPoint#WeightedObservedPoint(double,double,double)": -6.806451612903224,
        "org.apache.commons.math3.optimization.fitting$WeightedObservedPoint#getWeight()": -8.741935483870968,
        "org.apache.commons.math3.optimization.fitting$WeightedObservedPoint#getX()": 23.25,
        "org.apache.commons.math3.optimization.fitting$WeightedObservedPoint#getY()": -7.774193548387096,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#AbstractLeastSquaresOptimizer()": 0.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#AbstractLeastSquaresOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker)": 57.064516129032256,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#computeCost(double[])": 77.5,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#computeCovariances(double[],double)": 7.75,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#computeResiduals(double[])": 84.28125,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#computeSigma(double[],double)": 2.90625,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#computeWeightedJacobian(double[])": 82.34375,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#getChiSquare()": 50.375,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#getCovariances()": 0.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#getCovariances(double)": 0.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#getJacobianEvaluations()": 2.90625,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#getRMS()": 46.5,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#getWeightSquareRoot()": 58.125,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#guessParametersErrors()": 2.90625,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#optimize(int,org.apache.commons.math3.analysis.DifferentiableMultivariateVectorFunction,double[],double[],double[])": -8.741935483870968,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#optimize(int,org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction,double[],double[],double[])": 62.96875,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#optimizeInternal(int,org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction,org.apache.commons.math3.optimization.OptimizationData[])": 54.16129032258064,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#setCost(double)": 62.96875,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#setUp()": 54.16129032258064,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#squareRoot(org.apache.commons.math3.linear.RealMatrix)": 54.16129032258064,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#updateJacobian()": 0.0,
        "org.apache.commons.math3.optimization.general$AbstractLeastSquaresOptimizer#updateResidualsAndCost()": 0.0,
        "org.apache.commons.math3.optimization.general$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer()": 9.645161290322584,
        "org.apache.commons.math3.optimization.general$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(double,double,double)": 17.4375,
        "org.apache.commons.math3.optimization.general$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(double,double,double,double,double)": 28.032258064516128,
        "org.apache.commons.math3.optimization.general$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(double,org.apache.commons.math3.optimization.ConvergenceChecker,double,double,double,double)": 1.9375,
        "org.apache.commons.math3.optimization.general$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker)": 1.9375,
        "org.apache.commons.math3.optimization.general$LevenbergMarquardtOptimizer#determineLMDirection(double[],double[],double[],double[])": 23.25,
        "org.apache.commons.math3.optimization.general$LevenbergMarquardtOptimizer#determineLMParameter(double[],double,double[],double[],double[],double[])": 58.125,
        "org.apache.commons.math3.optimization.general$LevenbergMarquardtOptimizer#doOptimize()": 58.125,
        "org.apache.commons.math3.optimization.general$LevenbergMarquardtOptimizer#qTy(double[])": 58.125,
        "org.apache.commons.math3.optimization.general$LevenbergMarquardtOptimizer#qrDecomposition(org.apache.commons.math3.linear.RealMatrix)": 58.125,
        "org.apache.commons.math3.util$CompositeFormat#CompositeFormat()": 0.0,
        "org.apache.commons.math3.util$CompositeFormat#formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)": 89.125,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat()": 654.1612903225806,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat(java.util.Locale)": 1010.2903225806451,
        "org.apache.commons.math3.util$CompositeFormat#parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)": 106.5625,
        "org.apache.commons.math3.util$CompositeFormat#parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)": 104.625,
        "org.apache.commons.math3.util$CompositeFormat#parseNextCharacter(java.lang.String,java.text.ParsePosition)": 106.5625,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,double,java.text.ParsePosition)": 23.25,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)": 101.71875,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 3064.8064516129034,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1777.7096774193549,
        "org.apache.commons.math3.util$FastMath#abs(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#abs(int)": 318.71875,
        "org.apache.commons.math3.util$FastMath#abs(long)": 891.25,
        "org.apache.commons.math3.util$FastMath#acos(double)": 21.3125,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#asin(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#atan(double)": 31.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 103.65625,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 82.34375,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 40.6875,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 281.90625,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cos(double)": 276.09375,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 353.59375,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 29.0625,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 74.59375,
        "org.apache.commons.math3.util$FastMath#exp(double)": 730.4375,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 948.40625,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 14.53125,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 29.0625,
        "org.apache.commons.math3.util$FastMath#floor(double)": 766.28125,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 73.625,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 68.78125,
        "org.apache.commons.math3.util$FastMath#log(double)": 813.75,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1032.6875,
        "org.apache.commons.math3.util$FastMath#log10(double)": 54.25,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 462.09375,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 833.1935483870968,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 540.5625,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 0.96875,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 454.34375,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 760.46875,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 33.90625,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 14.53125,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 391.375,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 391.375,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 607.40625,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 183.09375,
        "org.apache.commons.math3.util$FastMath#random()": 18.40625,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.84375,
        "org.apache.commons.math3.util$FastMath#rint(double)": 64.90625,
        "org.apache.commons.math3.util$FastMath#round(double)": 21.3125,
        "org.apache.commons.math3.util$FastMath#round(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 56.1875,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9375,
        "org.apache.commons.math3.util$FastMath#signum(double)": 11.625,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#sin(double)": 368.125,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 373.9375,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 29.0625,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1748.59375,
        "org.apache.commons.math3.util$FastMath#tan(double)": 25.1875,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 25.1875,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 11.625,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 274.15625,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double)": 308.0625,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 308.0625,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 308.0625,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 308.0625,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 932.90625,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 929.03125,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1018.15625,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor()": 551.5806451612904,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int)": 605.7741935483871,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int,org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback)": 805.1290322580645,
        "org.apache.commons.math3.util$Incrementor#canIncrement()": 1.9375,
        "org.apache.commons.math3.util$Incrementor#getCount()": 219.90625,
        "org.apache.commons.math3.util$Incrementor#getMaximalCount()": 42.625,
        "org.apache.commons.math3.util$Incrementor#incrementCount()": 770.15625,
        "org.apache.commons.math3.util$Incrementor#incrementCount(int)": 0.96875,
        "org.apache.commons.math3.util$Incrementor#resetCount()": 764.483870967742,
        "org.apache.commons.math3.util$Incrementor#setMaximalCount(int)": 728.6774193548387,
        "org.apache.commons.math3.util$Incrementor$1#trigger(int)": 17.4375,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 0.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 16.46875,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 0.96875,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 972.5483870967741,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 74.59375,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 3.875,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 3.875,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 1.9375,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 1.9375,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 45.53125,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 33.90625,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 41.65625,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 4.84375,
        "org.apache.commons.math3.util$Pair#Pair(java.lang.Object,java.lang.Object)": 478.5625,
        "org.apache.commons.math3.util$Pair#Pair(org.apache.commons.math3.util.Pair)": 0.0,
        "org.apache.commons.math3.util$Pair#equals(java.lang.Object)": 0.96875,
        "org.apache.commons.math3.util$Pair#getFirst()": 89.125,
        "org.apache.commons.math3.util$Pair#getKey()": 334.21875,
        "org.apache.commons.math3.util$Pair#getSecond()": 89.125,
        "org.apache.commons.math3.util$Pair#getValue()": 242.1875,
        "org.apache.commons.math3.util$Pair#hashCode()": 0.96875,
        "org.apache.commons.math3.util$Precision#<clinit>()": 1207.7096774193549,
        "org.apache.commons.math3.util$Precision#Precision()": 0.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 92.03125,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 48.4375,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 174.375,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 470.8125,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 833.125,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 0.96875,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 77.5,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 128.84375,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 48.4375,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 76.53125,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsWithRelativeTolerance(double,double,double)": 0.96875,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 0.96875
    },
    "Math-14": {
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#PolynomialFunction(double[])": 41.58064516129032,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#add(org.apache.commons.math3.analysis.polynomials.PolynomialFunction)": 11.625,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#degree()": 17.4375,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#derivative()": 4.84375,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#differentiate(double[])": 20.34375,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#equals(java.lang.Object)": 0.96875,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#evaluate(double[],double)": 25.12903225806452,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#getCoefficients()": 29.0625,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#hashCode()": 0.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#multiply(org.apache.commons.math3.analysis.polynomials.PolynomialFunction)": 13.5625,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#negate()": 0.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#polynomialDerivative()": 20.34375,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#subtract(org.apache.commons.math3.analysis.polynomials.PolynomialFunction)": 1.9375,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#toString()": 8.71875,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#toString(double)": 8.71875,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#value(double)": 19.32258064516129,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 0.0,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction$Parametric#PolynomialFunction$Parametric()": -12.612903225806452,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction$Parametric#gradient(double,double[])": 18.40625,
        "org.apache.commons.math3.analysis.polynomials$PolynomialFunction$Parametric#value(double,double[])": 18.40625,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException()": 0.96875,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 17.4375,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 164.6875,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 185.03125,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 2.90625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.65625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 42.625,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 808.90625,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 8.71875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 662.625,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 13.5625,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 62.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 86.21875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 58.125,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int)": 0.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int,java.lang.Class)": 12.59375,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException()": 17.4375,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 17.4375,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 28.09375,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 28.09375,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 12.59375,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(java.lang.Integer[],java.lang.Integer[])": 0.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,java.lang.Integer[],java.lang.Integer[])": 37.78125,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimension(int)": 0.96875,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimensions()": 0.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimension(int)": 0.96875,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimensions()": 0.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 10.65625,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 26.15625,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 6.78125,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 17.4375,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 17.4375,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 11.625,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 46.5,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 78.46875,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 45.53125,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 71.6875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 32.9375,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 127.875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 94.9375,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 227.65625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.90625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.90625,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 39.71875,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 187.9375,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 0.96875,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 0.96875,
        "org.apache.commons.math3.exception$TooManyEvaluationsException#TooManyEvaluationsException(java.lang.Number)": 21.3125,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 1.9375,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 10.65625,
        "org.apache.commons.math3.fitting$CurveFitter#CurveFitter(org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer)": -2.93548387096774,
        "org.apache.commons.math3.fitting$CurveFitter#addObservedPoint(double,double)": 14.53125,
        "org.apache.commons.math3.fitting$CurveFitter#addObservedPoint(double,double,double)": -4.870967741935484,
        "org.apache.commons.math3.fitting$CurveFitter#addObservedPoint(org.apache.commons.math3.fitting.WeightedObservedPoint)": 0.0,
        "org.apache.commons.math3.fitting$CurveFitter#clearObservations()": 2.90625,
        "org.apache.commons.math3.fitting$CurveFitter#fit(int,org.apache.commons.math3.analysis.ParametricUnivariateFunction,double[])": -5.838709677419356,
        "org.apache.commons.math3.fitting$CurveFitter#fit(org.apache.commons.math3.analysis.ParametricUnivariateFunction,double[])": -8.741935483870968,
        "org.apache.commons.math3.fitting$CurveFitter#getObservations()": 13.5625,
        "org.apache.commons.math3.fitting$CurveFitter$TheoreticalValuesFunction#CurveFitter$TheoreticalValuesFunction(org.apache.commons.math3.fitting.CurveFitter,org.apache.commons.math3.analysis.ParametricUnivariateFunction)": -5.838709677419356,
        "org.apache.commons.math3.fitting$CurveFitter$TheoreticalValuesFunction#getModelFunction()": -5.838709677419356,
        "org.apache.commons.math3.fitting$CurveFitter$TheoreticalValuesFunction#getModelFunctionJacobian()": -5.838709677419356,
        "org.apache.commons.math3.fitting$CurveFitter$TheoreticalValuesFunction$1#value(double[])": 25.1875,
        "org.apache.commons.math3.fitting$CurveFitter$TheoreticalValuesFunction$2#value(double[])": 25.1875,
        "org.apache.commons.math3.fitting$PolynomialFitter#PolynomialFitter(org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer)": -23.258064516129032,
        "org.apache.commons.math3.fitting$PolynomialFitter#fit(double[])": -23.258064516129032,
        "org.apache.commons.math3.fitting$PolynomialFitter#fit(int,double[])": 0.0,
        "org.apache.commons.math3.fitting$WeightedObservedPoint#WeightedObservedPoint(double,double,double)": -3.903225806451612,
        "org.apache.commons.math3.fitting$WeightedObservedPoint#getWeight()": -5.838709677419356,
        "org.apache.commons.math3.fitting$WeightedObservedPoint#getX()": 26.15625,
        "org.apache.commons.math3.fitting$WeightedObservedPoint#getY()": -4.870967741935484,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix()": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field)": 69.75,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field,int,int)": 99.78125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 3.875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int)": 64.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int,int)": 115.28125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkAdditionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkColumnIndex(int)": 122.0625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkMultiplicationCompatible(org.apache.commons.math3.linear.FieldMatrix)": 17.4375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkRowIndex(int)": 122.0625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int,int,int,int)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int[],int[])": 4.84375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubtractionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3.875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int,int,int,int,org.apache.commons.math3.FieldElement[][])": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int[],int[],org.apache.commons.math3.FieldElement[][])": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#equals(java.lang.Object)": 31.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[][])": 88.15625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumn(int)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnMatrix(int)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnVector(int)": 5.8125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getData()": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getField()": 126.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRow(int)": 6.78125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowVector(int)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int[],int[])": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getTrace()": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#hashCode()": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#isSquare()": 36.8125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.linear.FieldVector)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#power(int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldMatrix)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldVector)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#toString()": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#transpose()": 5.8125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 22.28125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$1#visit(int,int,org.apache.commons.math3.FieldElement)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#start(int,int,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#visit(int,int,org.apache.commons.math3.FieldElement)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$3#visit(int,int,org.apache.commons.math3.FieldElement)": 5.8125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#<clinit>()": 687.0645161290323,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix()": 530.875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix(int,int)": 586.4193548387096,
        "org.apache.commons.math3.linear$AbstractRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 35.84375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int,int,int,int,double[][])": 28.09375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int[],int[],double[][])": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#equals(java.lang.Object)": 51.34375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumn(int)": 54.25,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnMatrix(int)": 35.84375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnVector(int)": 15.5,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getData()": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getFrobeniusNorm()": 32.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getNorm()": 78.46875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRow(int)": 128.84375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowVector(int)": 51.34375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int,int,int,int)": 10.65625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int[],int[])": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getTrace()": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#hashCode()": 6.78125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#isSquare()": 318.71875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 260.59375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(double[])": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(org.apache.commons.math3.linear.RealVector)": 209.25,
        "org.apache.commons.math3.linear$AbstractRealMatrix#power(int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(double[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealMatrix)": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarAdd(double)": 33.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarMultiply(double)": 127.875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumn(int,double[])": 9.6875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 172.4375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRow(int,double[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 184.0625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setSubMatrix(double[][],int,int)": 4.84375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 101.71875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#toString()": 6.78125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#transpose()": 305.15625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 7.75,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4.84375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 307.09375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 27.125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#end()": 78.46875,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#start(int,int,int,int,int,int)": 78.46875,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#visit(int,int,double)": 78.46875,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#end()": 32.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#start(int,int,int,int,int,int)": 32.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#visit(int,int,double)": 32.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$3#visit(int,int,double)": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#start(int,int,int,int,int,int)": 28.09375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#visit(int,int,double)": 28.09375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$5#visit(int,int,double)": 305.15625,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,int,int)": 33.90625,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][])": 47.46875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],boolean)": 30.03125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][])": 37.78125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][],boolean)": 17.4375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#add(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copy()": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyIn(org.apache.commons.math3.FieldElement[][])": 47.46875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyOut()": 31.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#createMatrix(int,int)": 17.4375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getColumnDimension()": 76.53125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getData()": 30.03125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getDataRef()": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getEntry(int,int)": 63.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getRowDimension()": 76.53125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 36.8125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 47.46875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 21.3125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix()": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[])": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][])": 474.6875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][],boolean)": 279.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(int,int)": 487.28125,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#add(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copy()": 165.65625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyIn(double[][])": 476.625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyOut()": 367.15625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#createMatrix(int,int)": 335.1875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getColumnDimension()": 588.03125,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getData()": 359.40625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getDataRef()": 70.71875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getEntry(int,int)": 510.53125,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getRowDimension()": 587.0625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 10.65625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiplyEntry(int,int,double)": 8.71875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#operate(double[])": 196.65625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#preMultiply(double[])": 2.90625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setEntry(int,int,double)": 478.5625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setSubMatrix(double[][],int,int)": 476.625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 73.625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 306.125,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 27.125,
        "org.apache.commons.math3.linear$ArrayRealVector#<clinit>()": 619.03125,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector()": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[])": 439.8125,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],boolean)": 468.875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],double[])": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],int,int)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int)": 170.5,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int,double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[])": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[],int,int)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean)": 124.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,double[])": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#add(org.apache.commons.math3.linear.RealVector)": 8.71875,
        "org.apache.commons.math3.linear$ArrayRealVector#addToEntry(int,double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#append(double)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.ArrayRealVector)": 0.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(int)": 338.09375,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$ArrayRealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$ArrayRealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 39.71875,
        "org.apache.commons.math3.linear$ArrayRealVector#copy()": 124.0,
        "org.apache.commons.math3.linear$ArrayRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 265.4375,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 25.1875,
        "org.apache.commons.math3.linear$ArrayRealVector#equals(java.lang.Object)": 47.46875,
        "org.apache.commons.math3.linear$ArrayRealVector#getDataRef()": 229.59375,
        "org.apache.commons.math3.linear$ArrayRealVector#getDimension()": 466.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 4.84375,
        "org.apache.commons.math3.linear$ArrayRealVector#getEntry(int)": 416.5625,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Norm()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfNorm()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#getNorm()": 54.25,
        "org.apache.commons.math3.linear$ArrayRealVector#getSubVector(int,int)": 6.78125,
        "org.apache.commons.math3.linear$ArrayRealVector#hashCode()": 28.09375,
        "org.apache.commons.math3.linear$ArrayRealVector#isInfinite()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#isNaN()": 75.5625,
        "org.apache.commons.math3.linear$ArrayRealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapAddToSelf(double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapDivideToSelf(double)": 4.84375,
        "org.apache.commons.math3.linear$ArrayRealVector#mapMultiplyToSelf(double)": 75.5625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapSubtractToSelf(double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#set(double)": 43.59375,
        "org.apache.commons.math3.linear$ArrayRealVector#setEntry(int,double)": 84.28125,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,double[])": 24.21875,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 25.1875,
        "org.apache.commons.math3.linear$ArrayRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 98.8125,
        "org.apache.commons.math3.linear$ArrayRealVector#toArray()": 174.375,
        "org.apache.commons.math3.linear$ArrayRealVector#toString()": 0.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(int,int,org.apache.commons.math3.FieldElement[][],boolean)": 33.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.Field,int,int)": 26.15625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.FieldElement[][])": 33.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.BlockFieldMatrix)": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockHeight(int)": 39.71875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockWidth(int)": 44.5625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copy()": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copyBlockPart(org.apache.commons.math3.FieldElement[],int,int,int,int,int,org.apache.commons.math3.FieldElement[],int,int,int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createBlocksLayout(org.apache.commons.math3.Field,int,int)": 26.15625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createMatrix(int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumn(int)": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnDimension()": 39.71875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnMatrix(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getData()": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getEntry(int,int)": 27.125,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRow(int)": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowDimension()": 40.6875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getSubMatrix(int,int,int,int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.BlockFieldMatrix)": 6.78125,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 5.8125,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#toBlocksLayout(org.apache.commons.math3.FieldElement[][])": 33.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#transpose()": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(double[][])": 195.6875,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int)": 85.12903225806451,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int,double[][],boolean)": 214.09375,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.BlockRealMatrix)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#addToEntry(int,int,double)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockHeight(int)": 220.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockWidth(int)": 228.625,
        "org.apache.commons.math3.linear$BlockRealMatrix#copy()": 41.65625,
        "org.apache.commons.math3.linear$BlockRealMatrix#copyBlockPart(double[],int,int,int,int,int,double[],int,int,int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#createBlocksLayout(int,int)": 100.61290322580646,
        "org.apache.commons.math3.linear$BlockRealMatrix#createMatrix(int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumn(int)": 20.34375,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnDimension()": 219.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnMatrix(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getData()": 128.84375,
        "org.apache.commons.math3.linear$BlockRealMatrix#getEntry(int,int)": 101.71875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getFrobeniusNorm()": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getNorm()": 22.28125,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRow(int)": 16.46875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowDimension()": 220.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getSubMatrix(int,int,int,int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.BlockRealMatrix)": 59.09375,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 59.09375,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#operate(double[])": 111.40625,
        "org.apache.commons.math3.linear$BlockRealMatrix#preMultiply(double[])": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarAdd(double)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarMultiply(double)": 28.09375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumn(int,double[])": 54.25,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 48.4375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setEntry(int,int,double)": 70.71875,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRow(int,double[])": 50.375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 48.4375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setSubMatrix(double[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.BlockRealMatrix)": 18.40625,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 21.3125,
        "org.apache.commons.math3.linear$BlockRealMatrix#toBlocksLayout(double[][])": 195.6875,
        "org.apache.commons.math3.linear$BlockRealMatrix#transpose()": 72.65625,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 8.71875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#MatrixDimensionMismatchException(int,int,int,int)": 37.78125,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedColumnDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedRowDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongColumnDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongRowDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#<clinit>()": 633.8387096774194,
        "org.apache.commons.math3.linear$MatrixUtils#MatrixUtils()": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#bigFractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils#blockInverse(org.apache.commons.math3.linear.RealMatrix,int)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#checkAdditionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 49.40625,
        "org.apache.commons.math3.linear$MatrixUtils#checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 626.78125,
        "org.apache.commons.math3.linear$MatrixUtils#checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)": 593.84375,
        "org.apache.commons.math3.linear$MatrixUtils#checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 328.40625,
        "org.apache.commons.math3.linear$MatrixUtils#checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 625.8125,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int,int,int)": 45.53125,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int[],int[])": 4.84375,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubtractionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 120.125,
        "org.apache.commons.math3.linear$MatrixUtils#checkSymmetric(org.apache.commons.math3.linear.RealMatrix,double)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnRealMatrix(double[])": 32.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldDiagonalMatrix(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldIdentityMatrix(org.apache.commons.math3.Field,int)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.Field,int,int)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.FieldElement[][])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldVector(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealDiagonalMatrix(double[])": 237.34375,
        "org.apache.commons.math3.linear$MatrixUtils#createRealIdentityMatrix(int)": 58.125,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(double[][])": 372.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(int,int)": 281.5806451612903,
        "org.apache.commons.math3.linear$MatrixUtils#createRealVector(double[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createRowRealMatrix(double[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealMatrix(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealVector(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#fractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#isSymmetric(org.apache.commons.math3.linear.RealMatrix,double)": 240.25,
        "org.apache.commons.math3.linear$MatrixUtils#isSymmetricInternal(org.apache.commons.math3.linear.RealMatrix,double,boolean)": 242.1875,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealMatrix(org.apache.commons.math3.linear.RealMatrix,java.io.ObjectOutputStream)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealVector(org.apache.commons.math3.linear.RealVector,java.io.ObjectOutputStream)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#solveLowerTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#solveUpperTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#MatrixUtils$BigFractionMatrixConverter()": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#getConvertedMatrix()": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#start(int,int,int,int,int,int)": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.BigFraction)": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#MatrixUtils$FractionMatrixConverter()": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#getConvertedMatrix()": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#start(int,int,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.Fraction)": 0.96875,
        "org.apache.commons.math3.linear$NonSquareMatrixException#NonSquareMatrixException(int,int)": 13.5625,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#NonSymmetricMatrixException(int,int,double)": 1.9375,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getColumn()": 0.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getRow()": 0.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getThreshold()": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(int,int)": 30.03125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(org.apache.commons.math3.linear.OpenMapRealMatrix)": 8.71875,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#add(org.apache.commons.math3.linear.OpenMapRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#computeKey(int,int)": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#copy()": 1.9375,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#createMatrix(int,int)": 6.78125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getColumnDimension()": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getEntry(int,int)": 27.125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getRowDimension()": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3.875,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3.875,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#setEntry(int,int,double)": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.OpenMapRealMatrix)": 5.8125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 5.8125,
        "org.apache.commons.math3.linear$RealLinearOperator#RealLinearOperator()": 721.9032258064516,
        "org.apache.commons.math3.linear$RealLinearOperator#isTransposable()": 0.0,
        "org.apache.commons.math3.linear$RealLinearOperator#operateTranspose(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat()": 0.96875,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 633.8387096774194,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 695.7741935483871,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.text.NumberFormat)": 695.7741935483871,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix)": 17.4375,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition)": 17.4375,
        "org.apache.commons.math3.linear$RealMatrixFormat#getAvailableLocales()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getColumnSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getFormat()": 688.0322580645161,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance()": 633.8387096774194,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance(java.util.Locale)": 695.7741935483871,
        "org.apache.commons.math3.linear$RealMatrixFormat#getPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String)": 11.625,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String,java.text.ParsePosition)": 15.5,
        "org.apache.commons.math3.linear$RealVector#RealVector()": 798.25,
        "org.apache.commons.math3.linear$RealVector#add(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#addToEntry(int,double)": 5.8125,
        "org.apache.commons.math3.linear$RealVector#checkIndex(int)": 176.3125,
        "org.apache.commons.math3.linear$RealVector#checkIndices(int,int)": 23.25,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(int)": 68.78125,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 58.125,
        "org.apache.commons.math3.linear$RealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 8.71875,
        "org.apache.commons.math3.linear$RealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$RealVector#cosine(org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$RealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 27.125,
        "org.apache.commons.math3.linear$RealVector#equals(java.lang.Object)": 0.0,
        "org.apache.commons.math3.linear$RealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#getL1Norm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#getLInfNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector#getMaxIndex()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getMaxValue()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getMinIndex()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getMinValue()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getNorm()": 21.3125,
        "org.apache.commons.math3.linear$RealVector#hashCode()": 0.0,
        "org.apache.commons.math3.linear$RealVector#iterator()": 68.78125,
        "org.apache.commons.math3.linear$RealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#mapAdd(double)": 2.90625,
        "org.apache.commons.math3.linear$RealVector#mapAddToSelf(double)": 3.875,
        "org.apache.commons.math3.linear$RealVector#mapDivide(double)": 6.78125,
        "org.apache.commons.math3.linear$RealVector#mapDivideToSelf(double)": 6.78125,
        "org.apache.commons.math3.linear$RealVector#mapMultiply(double)": 84.28125,
        "org.apache.commons.math3.linear$RealVector#mapMultiplyToSelf(double)": 12.59375,
        "org.apache.commons.math3.linear$RealVector#mapSubtract(double)": 4.84375,
        "org.apache.commons.math3.linear$RealVector#mapSubtractToSelf(double)": 4.84375,
        "org.apache.commons.math3.linear$RealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 24.21875,
        "org.apache.commons.math3.linear$RealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 4.84375,
        "org.apache.commons.math3.linear$RealVector#projection(org.apache.commons.math3.linear.RealVector)": 13.5625,
        "org.apache.commons.math3.linear$RealVector#set(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#sparseIterator()": 1.9375,
        "org.apache.commons.math3.linear$RealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#toArray()": 2.90625,
        "org.apache.commons.math3.linear$RealVector#unitVector()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#unitize()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)": 27.125,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3.875,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 7.75,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3.875,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 7.75,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$RealVector$1#hasNext()": 68.78125,
        "org.apache.commons.math3.linear$RealVector$1#next()": 68.78125,
        "org.apache.commons.math3.linear$RealVector$1#remove()": 2.90625,
        "org.apache.commons.math3.linear$RealVector$2#add(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#addToEntry(int,double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#append(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#append(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#combine(double,double,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#copy()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#cosine(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#dotProduct(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#ebeDivide(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealVector$2#getDimension()": 5.8125,
        "org.apache.commons.math3.linear$RealVector$2#getDistance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getEntry(int)": 7.75,
        "org.apache.commons.math3.linear$RealVector$2#getL1Distance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getL1Norm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getLInfNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getSubVector(int,int)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#isInfinite()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#isNaN()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#iterator()": 3.875,
        "org.apache.commons.math3.linear$RealVector$2#map(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapAdd(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapAddToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapDivide(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapDivideToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiply(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiplyToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtract(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtractToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#outerProduct(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#set(double)": 2.90625,
        "org.apache.commons.math3.linear$RealVector$2#setEntry(int,double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#sparseIterator()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#subtract(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector$2#toArray()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#unitVector()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#unitize()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2$1#hasNext()": 3.875,
        "org.apache.commons.math3.linear$RealVector$2$1#next()": 3.875,
        "org.apache.commons.math3.linear$RealVector$2$1#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2$2#hasNext()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2$2#next()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2$2#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2)": 5.8125,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#getValue()": 5.8125,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#setValue(double)": 3.875,
        "org.apache.commons.math3.linear$RealVector$Entry#RealVector$Entry(org.apache.commons.math3.linear.RealVector)": 71.6875,
        "org.apache.commons.math3.linear$RealVector$Entry#getIndex()": 71.6875,
        "org.apache.commons.math3.linear$RealVector$Entry#getValue()": 68.78125,
        "org.apache.commons.math3.linear$RealVector$Entry#setIndex(int)": 71.6875,
        "org.apache.commons.math3.linear$RealVector$Entry#setValue(double)": 26.15625,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#RealVector$SparseEntryIterator(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#advance(org.apache.commons.math3.linear.RealVector$Entry)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#hasNext()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#next()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat()": 7.75,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 628.71875,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.text.NumberFormat)": 628.71875,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector)": 21.3125,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition)": 21.3125,
        "org.apache.commons.math3.linear$RealVectorFormat#getAvailableLocales()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getFormat()": 1.9375,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance()": 619.03125,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance(java.util.Locale)": 628.71875,
        "org.apache.commons.math3.linear$RealVectorFormat#getPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String)": 27.125,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String,java.text.ParsePosition)": 34.875,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#BaseMultivariateOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 168.3548387096774,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#checkParameters()": 194.71875,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#getLowerBound()": 37.78125,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#getStartPoint()": 164.6875,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#getUpperBound()": 37.78125,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 194.71875,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 194.71875,
        "org.apache.commons.math3.optim$BaseOptimizer#BaseOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 182.8709677419355,
        "org.apache.commons.math3.optim$BaseOptimizer#getConvergenceChecker()": 158.875,
        "org.apache.commons.math3.optim$BaseOptimizer#getEvaluations()": 47.46875,
        "org.apache.commons.math3.optim$BaseOptimizer#getIterations()": 0.0,
        "org.apache.commons.math3.optim$BaseOptimizer#getMaxEvaluations()": 23.25,
        "org.apache.commons.math3.optim$BaseOptimizer#getMaxIterations()": 0.0,
        "org.apache.commons.math3.optim$BaseOptimizer#incrementEvaluationCount()": 174.375,
        "org.apache.commons.math3.optim$BaseOptimizer#incrementIterationCount()": 23.25,
        "org.apache.commons.math3.optim$BaseOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 204.40625,
        "org.apache.commons.math3.optim$BaseOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 204.40625,
        "org.apache.commons.math3.optim$BaseOptimizer$MaxEvalCallback#BaseOptimizer$MaxEvalCallback()": 182.8709677419355,
        "org.apache.commons.math3.optim$BaseOptimizer$MaxEvalCallback#trigger(int)": 7.75,
        "org.apache.commons.math3.optim$BaseOptimizer$MaxIterCallback#BaseOptimizer$MaxIterCallback()": 182.8709677419355,
        "org.apache.commons.math3.optim$BaseOptimizer$MaxIterCallback#trigger(int)": 0.0,
        "org.apache.commons.math3.optim$InitialGuess#InitialGuess(double[])": 170.5,
        "org.apache.commons.math3.optim$InitialGuess#getInitialGuess()": 169.53125,
        "org.apache.commons.math3.optim$MaxEval#MaxEval(int)": 152.8709677419355,
        "org.apache.commons.math3.optim$MaxEval#getMaxEval()": 178.25,
        "org.apache.commons.math3.optim$MaxEval#unlimited()": 0.0,
        "org.apache.commons.math3.optim$MaxIter#MaxIter(int)": 25.1875,
        "org.apache.commons.math3.optim$MaxIter#getMaxIter()": 25.1875,
        "org.apache.commons.math3.optim$MaxIter#unlimited()": 0.0,
        "org.apache.commons.math3.optim$PointVectorValuePair#PointVectorValuePair(double[],double[])": 89.125,
        "org.apache.commons.math3.optim$PointVectorValuePair#PointVectorValuePair(double[],double[],boolean)": 89.125,
        "org.apache.commons.math3.optim$PointVectorValuePair#getPoint()": 26.15625,
        "org.apache.commons.math3.optim$PointVectorValuePair#getPointRef()": 49.40625,
        "org.apache.commons.math3.optim$PointVectorValuePair#getValue()": 5.8125,
        "org.apache.commons.math3.optim$PointVectorValuePair#getValueRef()": 24.21875,
        "org.apache.commons.math3.optim$PointVectorValuePair#writeReplace()": 0.96875,
        "org.apache.commons.math3.optim$PointVectorValuePair$DataTransferObject#PointVectorValuePair$DataTransferObject(double[],double[])": 0.96875,
        "org.apache.commons.math3.optim$PointVectorValuePair$DataTransferObject#readResolve()": 0.96875,
        "org.apache.commons.math3.optim$SimpleBounds#SimpleBounds(double[],double[])": 39.71875,
        "org.apache.commons.math3.optim$SimpleBounds#getLower()": 38.75,
        "org.apache.commons.math3.optim$SimpleBounds#getUpper()": 38.75,
        "org.apache.commons.math3.optim$SimpleBounds#unbounded(int)": 29.0625,
        "org.apache.commons.math3.optim.nonlinear.vector$JacobianMultivariateVectorOptimizer#JacobianMultivariateVectorOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 60.935483870967744,
        "org.apache.commons.math3.optim.nonlinear.vector$JacobianMultivariateVectorOptimizer#computeJacobian(double[])": 85.25,
        "org.apache.commons.math3.optim.nonlinear.vector$JacobianMultivariateVectorOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 88.15625,
        "org.apache.commons.math3.optim.nonlinear.vector$JacobianMultivariateVectorOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 88.15625,
        "org.apache.commons.math3.optim.nonlinear.vector$ModelFunction#ModelFunction(org.apache.commons.math3.analysis.MultivariateVectorFunction)": 57.064516129032256,
        "org.apache.commons.math3.optim.nonlinear.vector$ModelFunction#getModelFunction()": 88.15625,
        "org.apache.commons.math3.optim.nonlinear.vector$ModelFunctionJacobian#ModelFunctionJacobian(org.apache.commons.math3.analysis.MultivariateMatrixFunction)": 56.096774193548384,
        "org.apache.commons.math3.optim.nonlinear.vector$ModelFunctionJacobian#getModelFunctionJacobian()": 87.1875,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#MultivariateVectorOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 60.935483870967744,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#checkParameters()": 88.15625,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#computeObjectiveValue(double[])": 88.15625,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#getTarget()": 89.125,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#getTargetSize()": 46.5,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#getWeight()": 88.15625,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 88.15625,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 88.15625,
        "org.apache.commons.math3.optim.nonlinear.vector$Target#Target(double[])": 57.064516129032256,
        "org.apache.commons.math3.optim.nonlinear.vector$Target#getTarget()": 88.15625,
        "org.apache.commons.math3.optim.nonlinear.vector$Weight#Weight(double[])": 57.064516129032256,
        "org.apache.commons.math3.optim.nonlinear.vector$Weight#Weight(org.apache.commons.math3.linear.RealMatrix)": 0.0,
        "org.apache.commons.math3.optim.nonlinear.vector$Weight#getWeight()": 88.15625,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#AbstractLeastSquaresOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 60.935483870967744,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#computeCost(double[])": 80.40625,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#computeCovariances(double[],double)": 7.75,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#computeResiduals(double[])": 87.1875,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#computeSigma(double[],double)": 3.875,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#computeWeightedJacobian(double[])": 85.25,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#getChiSquare()": 49.40625,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#getRMS()": 46.5,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#getWeightSquareRoot()": 58.125,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 88.15625,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 88.15625,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#setCost(double)": 80.40625,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#squareRoot(org.apache.commons.math3.linear.RealMatrix)": 88.15625,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$GaussNewtonOptimizer#GaussNewtonOptimizer(boolean,org.apache.commons.math3.optim.ConvergenceChecker)": 28.09375,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$GaussNewtonOptimizer#GaussNewtonOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 21.3125,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$GaussNewtonOptimizer#doOptimize()": 27.125,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer()": 9.645161290322584,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(double,double,double)": 17.4375,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(double,double,double,double,double)": 28.032258064516128,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(double,org.apache.commons.math3.optim.ConvergenceChecker,double,double,double,double)": 1.9375,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 1.9375,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#determineLMDirection(double[],double[],double[],double[])": 24.21875,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#determineLMParameter(double[],double,double[],double[],double[],double[])": 58.125,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#doOptimize()": 58.125,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#qTy(double[])": 58.125,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#qrDecomposition(org.apache.commons.math3.linear.RealMatrix)": 58.125,
        "org.apache.commons.math3.util$CompositeFormat#CompositeFormat()": 0.0,
        "org.apache.commons.math3.util$CompositeFormat#formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)": 89.125,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat()": 653.1935483870968,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat(java.util.Locale)": 1009.3225806451612,
        "org.apache.commons.math3.util$CompositeFormat#parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)": 106.5625,
        "org.apache.commons.math3.util$CompositeFormat#parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)": 104.625,
        "org.apache.commons.math3.util$CompositeFormat#parseNextCharacter(java.lang.String,java.text.ParsePosition)": 106.5625,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,double,java.text.ParsePosition)": 23.25,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)": 101.71875,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 3063.8387096774195,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1812.53125,
        "org.apache.commons.math3.util$FastMath#abs(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#abs(int)": 318.71875,
        "org.apache.commons.math3.util$FastMath#abs(long)": 891.25,
        "org.apache.commons.math3.util$FastMath#acos(double)": 21.3125,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#asin(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#atan(double)": 31.0,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 103.65625,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 82.34375,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 40.6875,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 281.90625,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cos(double)": 276.09375,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 353.59375,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 29.0625,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 74.59375,
        "org.apache.commons.math3.util$FastMath#exp(double)": 730.4375,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 948.40625,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 14.53125,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 29.0625,
        "org.apache.commons.math3.util$FastMath#floor(double)": 766.28125,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 73.625,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 68.78125,
        "org.apache.commons.math3.util$FastMath#log(double)": 813.75,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1032.6875,
        "org.apache.commons.math3.util$FastMath#log10(double)": 54.25,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 462.09375,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 871.875,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 540.5625,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 0.96875,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 453.375,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 727.7096774193549,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 33.90625,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 14.53125,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 391.375,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 391.375,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 607.40625,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 183.09375,
        "org.apache.commons.math3.util$FastMath#random()": 18.40625,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.84375,
        "org.apache.commons.math3.util$FastMath#rint(double)": 64.90625,
        "org.apache.commons.math3.util$FastMath#round(double)": 21.3125,
        "org.apache.commons.math3.util$FastMath#round(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 56.1875,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9375,
        "org.apache.commons.math3.util$FastMath#signum(double)": 11.625,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#sin(double)": 368.125,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 373.9375,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 29.0625,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1747.625,
        "org.apache.commons.math3.util$FastMath#tan(double)": 25.1875,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 25.1875,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 11.625,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 274.15625,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double)": 308.0625,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 308.0625,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 308.0625,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 308.0625,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 932.90625,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 929.03125,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1018.15625,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor()": 583.1875,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int)": 637.4375,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int,org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback)": 804.1612903225806,
        "org.apache.commons.math3.util$Incrementor#canIncrement()": 1.9375,
        "org.apache.commons.math3.util$Incrementor#getCount()": 219.90625,
        "org.apache.commons.math3.util$Incrementor#getMaximalCount()": 42.625,
        "org.apache.commons.math3.util$Incrementor#incrementCount()": 769.1875,
        "org.apache.commons.math3.util$Incrementor#incrementCount(int)": 0.96875,
        "org.apache.commons.math3.util$Incrementor#resetCount()": 795.34375,
        "org.apache.commons.math3.util$Incrementor#setMaximalCount(int)": 759.5,
        "org.apache.commons.math3.util$Incrementor$1#trigger(int)": 17.4375,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 0.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 16.46875,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 0.96875,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 972.5483870967741,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 74.59375,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 3.875,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 3.875,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 1.9375,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 1.9375,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 45.53125,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 33.90625,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 41.65625,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 4.84375,
        "org.apache.commons.math3.util$Pair#Pair(java.lang.Object,java.lang.Object)": 477.59375,
        "org.apache.commons.math3.util$Pair#Pair(org.apache.commons.math3.util.Pair)": 0.0,
        "org.apache.commons.math3.util$Pair#equals(java.lang.Object)": 0.96875,
        "org.apache.commons.math3.util$Pair#getFirst()": 89.125,
        "org.apache.commons.math3.util$Pair#getKey()": 333.25,
        "org.apache.commons.math3.util$Pair#getSecond()": 89.125,
        "org.apache.commons.math3.util$Pair#getValue()": 242.1875,
        "org.apache.commons.math3.util$Pair#hashCode()": 0.96875,
        "org.apache.commons.math3.util$Precision#<clinit>()": 1233.8387096774193,
        "org.apache.commons.math3.util$Precision#Precision()": 0.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 92.03125,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 48.4375,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 174.375,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 470.8125,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 833.125,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 0.96875,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 77.5,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 128.84375,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 48.4375,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 76.53125,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsWithRelativeTolerance(double,double,double)": 0.96875,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 0.96875
    },
    "Math-15": {
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.Dfp)": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField)": 1.9375,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,byte)": 1.9375,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,byte,byte)": 29.0625,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,double)": 27.125,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,int)": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,java.lang.String)": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,long)": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#abs()": 1.9375,
        "org.apache.commons.math3.dfp$Dfp#add(org.apache.commons.math3.dfp.Dfp)": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#align(int)": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#ceil()": 0.96875,
        "org.apache.commons.math3.dfp$Dfp#classify()": 18.40625,
        "org.apache.commons.math3.dfp$Dfp#compare(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#complement(int)": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#copysign(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 3.875,
        "org.apache.commons.math3.dfp$Dfp#dfp2sci()": 0.96875,
        "org.apache.commons.math3.dfp$Dfp#dfp2string()": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#divide(int)": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#divide(org.apache.commons.math3.dfp.Dfp)": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#equals(java.lang.Object)": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#floor()": 7.75,
        "org.apache.commons.math3.dfp$Dfp#getField()": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#getOne()": 34.875,
        "org.apache.commons.math3.dfp$Dfp#getRadixDigits()": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#getTwo()": 23.25,
        "org.apache.commons.math3.dfp$Dfp#getZero()": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#greaterThan(org.apache.commons.math3.dfp.Dfp)": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#hashCode()": 0.0,
        "org.apache.commons.math3.dfp$Dfp#intValue()": 12.59375,
        "org.apache.commons.math3.dfp$Dfp#isInfinite()": 25.1875,
        "org.apache.commons.math3.dfp$Dfp#isNaN()": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#isZero()": 2.90625,
        "org.apache.commons.math3.dfp$Dfp#lessThan(org.apache.commons.math3.dfp.Dfp)": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#log10()": 23.25,
        "org.apache.commons.math3.dfp$Dfp#log10K()": 7.75,
        "org.apache.commons.math3.dfp$Dfp#multiply(int)": 26.15625,
        "org.apache.commons.math3.dfp$Dfp#multiply(org.apache.commons.math3.dfp.Dfp)": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#multiplyFast(int)": 26.15625,
        "org.apache.commons.math3.dfp$Dfp#negate()": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#negativeOrNull()": 2.90625,
        "org.apache.commons.math3.dfp$Dfp#newInstance()": 0.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(byte)": 0.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(byte,byte)": 2.90625,
        "org.apache.commons.math3.dfp$Dfp#newInstance(double)": 0.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(int)": 13.5625,
        "org.apache.commons.math3.dfp$Dfp#newInstance(java.lang.String)": 27.125,
        "org.apache.commons.math3.dfp$Dfp#newInstance(long)": 21.3125,
        "org.apache.commons.math3.dfp$Dfp#newInstance(org.apache.commons.math3.dfp.Dfp)": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#nextAfter(org.apache.commons.math3.dfp.Dfp)": 0.96875,
        "org.apache.commons.math3.dfp$Dfp#positiveOrNull()": 2.90625,
        "org.apache.commons.math3.dfp$Dfp#power10(int)": 1.9375,
        "org.apache.commons.math3.dfp$Dfp#power10K(int)": 17.4375,
        "org.apache.commons.math3.dfp$Dfp#reciprocal()": 0.96875,
        "org.apache.commons.math3.dfp$Dfp#remainder(org.apache.commons.math3.dfp.Dfp)": 8.71875,
        "org.apache.commons.math3.dfp$Dfp#rint()": 27.125,
        "org.apache.commons.math3.dfp$Dfp#round(int)": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#shiftLeft()": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#shiftRight()": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#sqrt()": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#strictlyNegative()": 0.96875,
        "org.apache.commons.math3.dfp$Dfp#strictlyPositive()": 0.96875,
        "org.apache.commons.math3.dfp$Dfp#subtract(org.apache.commons.math3.dfp.Dfp)": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#toDouble()": 22.28125,
        "org.apache.commons.math3.dfp$Dfp#toSplitDouble()": 0.0,
        "org.apache.commons.math3.dfp$Dfp#toString()": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#trap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp#trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode)": 29.0625,
        "org.apache.commons.math3.dfp$Dfp#unequal(org.apache.commons.math3.dfp.Dfp)": 49.322580645161295,
        "org.apache.commons.math3.dfp$Dfp$1#<clinit>()": 49.322580645161295,
        "org.apache.commons.math3.dfp$DfpField#DfpField(int)": 49.322580645161295,
        "org.apache.commons.math3.dfp$DfpField#DfpField(int,boolean)": 49.322580645161295,
        "org.apache.commons.math3.dfp$DfpField#clearIEEEFlags()": 30.03125,
        "org.apache.commons.math3.dfp$DfpField#computeExp(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 49.322580645161295,
        "org.apache.commons.math3.dfp$DfpField#computeLn(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 49.322580645161295,
        "org.apache.commons.math3.dfp$DfpField#computePi(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 49.322580645161295,
        "org.apache.commons.math3.dfp$DfpField#computeStringConstants(int)": 49.322580645161295,
        "org.apache.commons.math3.dfp$DfpField#getE()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getESplit()": 8.71875,
        "org.apache.commons.math3.dfp$DfpField#getIEEEFlags()": 20.34375,
        "org.apache.commons.math3.dfp$DfpField#getLn10()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getLn2()": 2.90625,
        "org.apache.commons.math3.dfp$DfpField#getLn2Split()": 6.78125,
        "org.apache.commons.math3.dfp$DfpField#getLn5()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getLn5Split()": 6.78125,
        "org.apache.commons.math3.dfp$DfpField#getOne()": 36.8125,
        "org.apache.commons.math3.dfp$DfpField#getPi()": 11.625,
        "org.apache.commons.math3.dfp$DfpField#getPiSplit()": 9.6875,
        "org.apache.commons.math3.dfp$DfpField#getRadixDigits()": 49.322580645161295,
        "org.apache.commons.math3.dfp$DfpField#getRoundingMode()": 49.322580645161295,
        "org.apache.commons.math3.dfp$DfpField#getRuntimeClass()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr2()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr2Reciprocal()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr2Split()": 4.84375,
        "org.apache.commons.math3.dfp$DfpField#getSqr3()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr3Reciprocal()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getTwo()": 27.125,
        "org.apache.commons.math3.dfp$DfpField#getZero()": 49.322580645161295,
        "org.apache.commons.math3.dfp$DfpField#newDfp()": 1.9375,
        "org.apache.commons.math3.dfp$DfpField#newDfp(byte)": 0.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(byte,byte)": 29.0625,
        "org.apache.commons.math3.dfp$DfpField#newDfp(double)": 27.125,
        "org.apache.commons.math3.dfp$DfpField#newDfp(int)": 0.96875,
        "org.apache.commons.math3.dfp$DfpField#newDfp(java.lang.String)": 28.09375,
        "org.apache.commons.math3.dfp$DfpField#newDfp(long)": 0.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(org.apache.commons.math3.dfp.Dfp)": 0.0,
        "org.apache.commons.math3.dfp$DfpField#setIEEEFlags(int)": 0.0,
        "org.apache.commons.math3.dfp$DfpField#setIEEEFlagsBits(int)": 49.322580645161295,
        "org.apache.commons.math3.dfp$DfpField#setRoundingMode(org.apache.commons.math3.dfp.DfpField$RoundingMode)": 2.90625,
        "org.apache.commons.math3.dfp$DfpField#split(java.lang.String)": 49.322580645161295,
        "org.apache.commons.math3.dfp$DfpField$RoundingMode#<clinit>()": 49.322580645161295,
        "org.apache.commons.math3.dfp$DfpField$RoundingMode#DfpField$RoundingMode(java.lang.String,int)": 49.322580645161295,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 768.21875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 8.71875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 628.71875,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 12.59375,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 41.65625,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 78.46875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 84.28125,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 216.03125,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.90625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.90625,
        "org.apache.commons.math3.random$BitsStreamGenerator#BitsStreamGenerator()": 993.8387096774193,
        "org.apache.commons.math3.random$BitsStreamGenerator#clear()": 993.8387096774193,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBoolean()": 27.125,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBytes(byte[])": 19.375,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextDouble()": 433.03125,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextFloat()": 27.125,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextGaussian()": 73.625,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt()": 34.875,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt(int)": 35.84375,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong()": 27.125,
        "org.apache.commons.math3.random$MersenneTwister#<clinit>()": 95.7741935483871,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister()": 23.25,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(int)": 59.09375,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(int[])": 0.96875,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(long)": 13.516129032258064,
        "org.apache.commons.math3.random$MersenneTwister#next(int)": 81.375,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(int)": 95.7741935483871,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(int[])": 51.25806451612904,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(long)": 50.29032258064517,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 2851.9032258064517,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1590.6875,
        "org.apache.commons.math3.util$FastMath#abs(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#abs(int)": 318.71875,
        "org.apache.commons.math3.util$FastMath#abs(long)": 799.21875,
        "org.apache.commons.math3.util$FastMath#acos(double)": 21.3125,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#asin(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#atan(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 91.0625,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 78.46875,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 40.6875,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 268.34375,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cos(double)": 247.03125,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 317.75,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 29.0625,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 70.71875,
        "org.apache.commons.math3.util$FastMath#exp(double)": 692.65625,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 876.741935483871,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 14.53125,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 29.0625,
        "org.apache.commons.math3.util$FastMath#floor(double)": 785.65625,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 73.625,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 68.78125,
        "org.apache.commons.math3.util$FastMath#log(double)": 775.0,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 960.9354838709678,
        "org.apache.commons.math3.util$FastMath#log10(double)": 54.25,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 458.21875,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 607.40625,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 470.2903225806452,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 0.96875,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 260.59375,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 621.9375,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 33.90625,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 14.53125,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 355.53125,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 355.53125,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 571.9032258064516,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 183.09375,
        "org.apache.commons.math3.util$FastMath#random()": 18.40625,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.84375,
        "org.apache.commons.math3.util$FastMath#rint(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#round(double)": 21.3125,
        "org.apache.commons.math3.util$FastMath#round(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 56.1875,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9375,
        "org.apache.commons.math3.util$FastMath#signum(double)": 11.625,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#sin(double)": 332.28125,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 338.09375,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 29.0625,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1603.28125,
        "org.apache.commons.math3.util$FastMath#tan(double)": 25.1875,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 25.1875,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 11.625,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 242.1875,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 272.21875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 272.21875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 272.21875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 272.21875,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 861.258064516129,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 857.3870967741935,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 946.4193548387096,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 1041.258064516129,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 861.258064516129,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 861.258064516129,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 857.3870967741935,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 857.3870967741935,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 946.4193548387096
    },
    "Math-16": {
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.Dfp)": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField)": 1.9393939393939394,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,byte)": 1.9393939393939394,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,byte,byte)": 29.09090909090909,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,double)": 27.151515151515152,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,int)": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,java.lang.String)": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,long)": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#abs()": 1.9393939393939394,
        "org.apache.commons.math3.dfp$Dfp#add(org.apache.commons.math3.dfp.Dfp)": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#align(int)": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#ceil()": 0.9696969696969697,
        "org.apache.commons.math3.dfp$Dfp#classify()": 18.424242424242426,
        "org.apache.commons.math3.dfp$Dfp#compare(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#complement(int)": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#copysign(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 3.878787878787879,
        "org.apache.commons.math3.dfp$Dfp#dfp2sci()": 0.9696969696969697,
        "org.apache.commons.math3.dfp$Dfp#dfp2string()": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#divide(int)": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#divide(org.apache.commons.math3.dfp.Dfp)": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#equals(java.lang.Object)": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#floor()": 7.757575757575758,
        "org.apache.commons.math3.dfp$Dfp#getField()": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#getOne()": 34.90909090909091,
        "org.apache.commons.math3.dfp$Dfp#getRadixDigits()": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#getTwo()": 23.272727272727273,
        "org.apache.commons.math3.dfp$Dfp#getZero()": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#greaterThan(org.apache.commons.math3.dfp.Dfp)": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#hashCode()": 0.0,
        "org.apache.commons.math3.dfp$Dfp#intValue()": 12.606060606060606,
        "org.apache.commons.math3.dfp$Dfp#isInfinite()": 25.21212121212121,
        "org.apache.commons.math3.dfp$Dfp#isNaN()": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#isZero()": 2.909090909090909,
        "org.apache.commons.math3.dfp$Dfp#lessThan(org.apache.commons.math3.dfp.Dfp)": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#log10()": 23.272727272727273,
        "org.apache.commons.math3.dfp$Dfp#log10K()": 7.757575757575758,
        "org.apache.commons.math3.dfp$Dfp#multiply(int)": 26.181818181818183,
        "org.apache.commons.math3.dfp$Dfp#multiply(org.apache.commons.math3.dfp.Dfp)": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#multiplyFast(int)": 26.181818181818183,
        "org.apache.commons.math3.dfp$Dfp#negate()": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#negativeOrNull()": 2.909090909090909,
        "org.apache.commons.math3.dfp$Dfp#newInstance()": 0.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(byte)": 0.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(byte,byte)": 2.909090909090909,
        "org.apache.commons.math3.dfp$Dfp#newInstance(double)": 0.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(int)": 13.575757575757576,
        "org.apache.commons.math3.dfp$Dfp#newInstance(java.lang.String)": 27.151515151515152,
        "org.apache.commons.math3.dfp$Dfp#newInstance(long)": 21.333333333333332,
        "org.apache.commons.math3.dfp$Dfp#newInstance(org.apache.commons.math3.dfp.Dfp)": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#nextAfter(org.apache.commons.math3.dfp.Dfp)": 0.9696969696969697,
        "org.apache.commons.math3.dfp$Dfp#positiveOrNull()": 2.909090909090909,
        "org.apache.commons.math3.dfp$Dfp#power10(int)": 1.9393939393939394,
        "org.apache.commons.math3.dfp$Dfp#power10K(int)": 17.454545454545453,
        "org.apache.commons.math3.dfp$Dfp#reciprocal()": 0.9696969696969697,
        "org.apache.commons.math3.dfp$Dfp#remainder(org.apache.commons.math3.dfp.Dfp)": 8.727272727272727,
        "org.apache.commons.math3.dfp$Dfp#rint()": 27.151515151515152,
        "org.apache.commons.math3.dfp$Dfp#round(int)": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#shiftLeft()": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#shiftRight()": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#sqrt()": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#strictlyNegative()": 0.9696969696969697,
        "org.apache.commons.math3.dfp$Dfp#strictlyPositive()": 0.9696969696969697,
        "org.apache.commons.math3.dfp$Dfp#subtract(org.apache.commons.math3.dfp.Dfp)": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#toDouble()": 22.303030303030305,
        "org.apache.commons.math3.dfp$Dfp#toSplitDouble()": 0.0,
        "org.apache.commons.math3.dfp$Dfp#toString()": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#trap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp#trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode)": 29.09090909090909,
        "org.apache.commons.math3.dfp$Dfp#unequal(org.apache.commons.math3.dfp.Dfp)": 62.38709677419355,
        "org.apache.commons.math3.dfp$Dfp$1#<clinit>()": 62.38709677419355,
        "org.apache.commons.math3.dfp$DfpField#DfpField(int)": 62.38709677419355,
        "org.apache.commons.math3.dfp$DfpField#DfpField(int,boolean)": 62.38709677419355,
        "org.apache.commons.math3.dfp$DfpField#clearIEEEFlags()": 30.060606060606062,
        "org.apache.commons.math3.dfp$DfpField#computeExp(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 62.38709677419355,
        "org.apache.commons.math3.dfp$DfpField#computeLn(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 62.38709677419355,
        "org.apache.commons.math3.dfp$DfpField#computePi(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 62.38709677419355,
        "org.apache.commons.math3.dfp$DfpField#computeStringConstants(int)": 62.38709677419355,
        "org.apache.commons.math3.dfp$DfpField#getE()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getESplit()": 8.727272727272727,
        "org.apache.commons.math3.dfp$DfpField#getIEEEFlags()": 20.363636363636363,
        "org.apache.commons.math3.dfp$DfpField#getLn10()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getLn2()": 2.909090909090909,
        "org.apache.commons.math3.dfp$DfpField#getLn2Split()": 6.787878787878788,
        "org.apache.commons.math3.dfp$DfpField#getLn5()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getLn5Split()": 6.787878787878788,
        "org.apache.commons.math3.dfp$DfpField#getOne()": 36.84848484848485,
        "org.apache.commons.math3.dfp$DfpField#getPi()": 11.636363636363637,
        "org.apache.commons.math3.dfp$DfpField#getPiSplit()": 9.696969696969697,
        "org.apache.commons.math3.dfp$DfpField#getRadixDigits()": 62.38709677419355,
        "org.apache.commons.math3.dfp$DfpField#getRoundingMode()": 62.38709677419355,
        "org.apache.commons.math3.dfp$DfpField#getRuntimeClass()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr2()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr2Reciprocal()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr2Split()": 4.848484848484849,
        "org.apache.commons.math3.dfp$DfpField#getSqr3()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr3Reciprocal()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getTwo()": 27.151515151515152,
        "org.apache.commons.math3.dfp$DfpField#getZero()": 62.38709677419355,
        "org.apache.commons.math3.dfp$DfpField#newDfp()": 1.9393939393939394,
        "org.apache.commons.math3.dfp$DfpField#newDfp(byte)": 0.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(byte,byte)": 29.09090909090909,
        "org.apache.commons.math3.dfp$DfpField#newDfp(double)": 27.151515151515152,
        "org.apache.commons.math3.dfp$DfpField#newDfp(int)": 0.9696969696969697,
        "org.apache.commons.math3.dfp$DfpField#newDfp(java.lang.String)": 28.12121212121212,
        "org.apache.commons.math3.dfp$DfpField#newDfp(long)": 0.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(org.apache.commons.math3.dfp.Dfp)": 0.0,
        "org.apache.commons.math3.dfp$DfpField#setIEEEFlags(int)": 0.0,
        "org.apache.commons.math3.dfp$DfpField#setIEEEFlagsBits(int)": 62.38709677419355,
        "org.apache.commons.math3.dfp$DfpField#setRoundingMode(org.apache.commons.math3.dfp.DfpField$RoundingMode)": 2.909090909090909,
        "org.apache.commons.math3.dfp$DfpField#split(java.lang.String)": 62.38709677419355,
        "org.apache.commons.math3.dfp$DfpField$RoundingMode#<clinit>()": 62.38709677419355,
        "org.apache.commons.math3.dfp$DfpField$RoundingMode#DfpField$RoundingMode(java.lang.String,int)": 62.38709677419355,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 768.969696969697,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 8.727272727272727,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 629.3333333333334,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 12.606060606060606,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 41.696969696969695,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 78.54545454545455,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 84.36363636363636,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 216.24242424242425,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.909090909090909,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.909090909090909,
        "org.apache.commons.math3.random$BitsStreamGenerator#BitsStreamGenerator()": 1006.9032258064516,
        "org.apache.commons.math3.random$BitsStreamGenerator#clear()": 1006.9032258064516,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBoolean()": 27.151515151515152,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBytes(byte[])": 19.393939393939394,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextDouble()": 433.45454545454544,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextFloat()": 27.151515151515152,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextGaussian()": 73.6969696969697,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt()": 34.90909090909091,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt(int)": 35.878787878787875,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong()": 27.151515151515152,
        "org.apache.commons.math3.random$MersenneTwister#<clinit>()": 108.83870967741936,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister()": 23.272727272727273,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(int)": 59.15151515151515,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(int[])": 0.9696969696969697,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(long)": 26.58064516129032,
        "org.apache.commons.math3.random$MersenneTwister#next(int)": 81.45454545454545,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(int)": 108.83870967741936,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(int[])": 64.3225806451613,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(long)": 63.35483870967742,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 2864.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1571.0967741935483,
        "org.apache.commons.math3.util$FastMath#abs(float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#abs(int)": 319.030303030303,
        "org.apache.commons.math3.util$FastMath#abs(long)": 800.969696969697,
        "org.apache.commons.math3.util$FastMath#acos(double)": 21.333333333333332,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#asin(double)": 22.303030303030305,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#atan(double)": 22.303030303030305,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 91.15151515151516,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 78.54545454545455,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 40.72727272727273,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 268.6060606060606,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 12.606060606060606,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#cos(double)": 247.27272727272728,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 318.06060606060606,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 11.096774193548388,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 70.78787878787878,
        "org.apache.commons.math3.util$FastMath#exp(double)": 674.0,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 889.8064516129032,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 14.545454545454545,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 29.09090909090909,
        "org.apache.commons.math3.util$FastMath#floor(double)": 784.4848484848485,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 73.6969696969697,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 68.84848484848484,
        "org.apache.commons.math3.util$FastMath#log(double)": 774.7878787878788,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 992.969696969697,
        "org.apache.commons.math3.util$FastMath#log10(double)": 54.303030303030305,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 458.6666666666667,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 588.8387096774194,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 483.35483870967744,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 260.8484848484849,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 622.5454545454545,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 33.93939393939394,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 14.545454545454545,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.909090909090909,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 2.909090909090909,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 355.8787878787879,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 355.8787878787879,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 604.1212121212121,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 183.27272727272728,
        "org.apache.commons.math3.util$FastMath#random()": 18.424242424242426,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.848484848484849,
        "org.apache.commons.math3.util$FastMath#rint(double)": 20.363636363636363,
        "org.apache.commons.math3.util$FastMath#round(double)": 21.333333333333332,
        "org.apache.commons.math3.util$FastMath#round(float)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 56.24242424242424,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#signum(double)": 11.636363636363637,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#sin(double)": 332.6060606060606,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 338.42424242424244,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 27.151515151515152,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1604.8484848484848,
        "org.apache.commons.math3.util$FastMath#tan(double)": 25.21212121212121,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 25.21212121212121,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 11.636363636363637,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3.878787878787879,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3.878787878787879,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 224.0,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 272.4848484848485,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 272.4848484848485,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 272.4848484848485,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 272.4848484848485,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 874.3225806451613,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 870.4516129032259,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 978.4242424242424,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 1053.3548387096773,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 874.3225806451613,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 874.3225806451613,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 870.4516129032259,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 870.4516129032259,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 978.4242424242424
    },
    "Math-17": {
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.Dfp)": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField)": 1.9375,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,byte)": 1.9375,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,byte,byte)": -2.93548387096774,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,double)": 27.125,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,int)": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,java.lang.String)": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#Dfp(org.apache.commons.math3.dfp.DfpField,long)": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#abs()": 1.9375,
        "org.apache.commons.math3.dfp$Dfp#add(org.apache.commons.math3.dfp.Dfp)": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#align(int)": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#ceil()": 0.96875,
        "org.apache.commons.math3.dfp$Dfp#classify()": 18.40625,
        "org.apache.commons.math3.dfp$Dfp#compare(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#complement(int)": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#copysign(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 3.875,
        "org.apache.commons.math3.dfp$Dfp#dfp2sci()": 0.96875,
        "org.apache.commons.math3.dfp$Dfp#dfp2string()": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#divide(int)": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#divide(org.apache.commons.math3.dfp.Dfp)": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#equals(java.lang.Object)": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#floor()": 7.75,
        "org.apache.commons.math3.dfp$Dfp#getField()": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#getOne()": 34.875,
        "org.apache.commons.math3.dfp$Dfp#getRadixDigits()": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#getTwo()": 23.25,
        "org.apache.commons.math3.dfp$Dfp#getZero()": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#greaterThan(org.apache.commons.math3.dfp.Dfp)": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#hashCode()": 0.0,
        "org.apache.commons.math3.dfp$Dfp#intValue()": 12.59375,
        "org.apache.commons.math3.dfp$Dfp#isInfinite()": 25.1875,
        "org.apache.commons.math3.dfp$Dfp#isNaN()": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#isZero()": 2.90625,
        "org.apache.commons.math3.dfp$Dfp#lessThan(org.apache.commons.math3.dfp.Dfp)": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#log10()": 23.25,
        "org.apache.commons.math3.dfp$Dfp#log10K()": 7.75,
        "org.apache.commons.math3.dfp$Dfp#multiply(int)": -5.838709677419356,
        "org.apache.commons.math3.dfp$Dfp#multiply(org.apache.commons.math3.dfp.Dfp)": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#multiplyFast(int)": -5.838709677419356,
        "org.apache.commons.math3.dfp$Dfp#negate()": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#negativeOrNull()": 2.90625,
        "org.apache.commons.math3.dfp$Dfp#newInstance()": 0.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(byte)": 0.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(byte,byte)": 2.90625,
        "org.apache.commons.math3.dfp$Dfp#newInstance(double)": 0.0,
        "org.apache.commons.math3.dfp$Dfp#newInstance(int)": 12.59375,
        "org.apache.commons.math3.dfp$Dfp#newInstance(java.lang.String)": 27.125,
        "org.apache.commons.math3.dfp$Dfp#newInstance(long)": 21.3125,
        "org.apache.commons.math3.dfp$Dfp#newInstance(org.apache.commons.math3.dfp.Dfp)": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#nextAfter(org.apache.commons.math3.dfp.Dfp)": 0.96875,
        "org.apache.commons.math3.dfp$Dfp#positiveOrNull()": 2.90625,
        "org.apache.commons.math3.dfp$Dfp#power10(int)": 1.9375,
        "org.apache.commons.math3.dfp$Dfp#power10K(int)": 17.4375,
        "org.apache.commons.math3.dfp$Dfp#reciprocal()": 0.96875,
        "org.apache.commons.math3.dfp$Dfp#remainder(org.apache.commons.math3.dfp.Dfp)": 8.71875,
        "org.apache.commons.math3.dfp$Dfp#rint()": 27.125,
        "org.apache.commons.math3.dfp$Dfp#round(int)": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#shiftLeft()": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#shiftRight()": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#sqrt()": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#strictlyNegative()": 0.96875,
        "org.apache.commons.math3.dfp$Dfp#strictlyPositive()": 0.96875,
        "org.apache.commons.math3.dfp$Dfp#subtract(org.apache.commons.math3.dfp.Dfp)": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#toDouble()": 22.28125,
        "org.apache.commons.math3.dfp$Dfp#toSplitDouble()": 0.0,
        "org.apache.commons.math3.dfp$Dfp#toString()": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#trap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp#trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode)": 29.0625,
        "org.apache.commons.math3.dfp$Dfp#unequal(org.apache.commons.math3.dfp.Dfp)": 46.41935483870968,
        "org.apache.commons.math3.dfp$Dfp$1#<clinit>()": 46.41935483870968,
        "org.apache.commons.math3.dfp$DfpField#DfpField(int)": 46.41935483870968,
        "org.apache.commons.math3.dfp$DfpField#DfpField(int,boolean)": 46.41935483870968,
        "org.apache.commons.math3.dfp$DfpField#clearIEEEFlags()": -1.9677419354838719,
        "org.apache.commons.math3.dfp$DfpField#computeExp(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 46.41935483870968,
        "org.apache.commons.math3.dfp$DfpField#computeLn(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 46.41935483870968,
        "org.apache.commons.math3.dfp$DfpField#computePi(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)": 46.41935483870968,
        "org.apache.commons.math3.dfp$DfpField#computeStringConstants(int)": 46.41935483870968,
        "org.apache.commons.math3.dfp$DfpField#getE()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getESplit()": 8.71875,
        "org.apache.commons.math3.dfp$DfpField#getIEEEFlags()": -11.64516129032258,
        "org.apache.commons.math3.dfp$DfpField#getLn10()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getLn2()": 2.90625,
        "org.apache.commons.math3.dfp$DfpField#getLn2Split()": 6.78125,
        "org.apache.commons.math3.dfp$DfpField#getLn5()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getLn5Split()": 6.78125,
        "org.apache.commons.math3.dfp$DfpField#getOne()": 36.8125,
        "org.apache.commons.math3.dfp$DfpField#getPi()": 11.625,
        "org.apache.commons.math3.dfp$DfpField#getPiSplit()": 9.6875,
        "org.apache.commons.math3.dfp$DfpField#getRadixDigits()": 46.41935483870968,
        "org.apache.commons.math3.dfp$DfpField#getRoundingMode()": 46.41935483870968,
        "org.apache.commons.math3.dfp$DfpField#getRuntimeClass()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr2()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr2Reciprocal()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr2Split()": 4.84375,
        "org.apache.commons.math3.dfp$DfpField#getSqr3()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getSqr3Reciprocal()": 0.0,
        "org.apache.commons.math3.dfp$DfpField#getTwo()": 27.125,
        "org.apache.commons.math3.dfp$DfpField#getZero()": 46.41935483870968,
        "org.apache.commons.math3.dfp$DfpField#newDfp()": 1.9375,
        "org.apache.commons.math3.dfp$DfpField#newDfp(byte)": 0.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(byte,byte)": -2.93548387096774,
        "org.apache.commons.math3.dfp$DfpField#newDfp(double)": 27.125,
        "org.apache.commons.math3.dfp$DfpField#newDfp(int)": 0.96875,
        "org.apache.commons.math3.dfp$DfpField#newDfp(java.lang.String)": -3.903225806451612,
        "org.apache.commons.math3.dfp$DfpField#newDfp(long)": 0.0,
        "org.apache.commons.math3.dfp$DfpField#newDfp(org.apache.commons.math3.dfp.Dfp)": 0.0,
        "org.apache.commons.math3.dfp$DfpField#setIEEEFlags(int)": 0.0,
        "org.apache.commons.math3.dfp$DfpField#setIEEEFlagsBits(int)": 46.41935483870968,
        "org.apache.commons.math3.dfp$DfpField#setRoundingMode(org.apache.commons.math3.dfp.DfpField$RoundingMode)": 2.90625,
        "org.apache.commons.math3.dfp$DfpField#split(java.lang.String)": 46.41935483870968,
        "org.apache.commons.math3.dfp$DfpField$RoundingMode#<clinit>()": 46.41935483870968,
        "org.apache.commons.math3.dfp$DfpField$RoundingMode#DfpField$RoundingMode(java.lang.String,int)": 46.41935483870968
    },
    "Math-18": {
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 150.15625,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 169.53125,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 2.90625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.65625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 41.65625,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 742.0625,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 7.75,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 602.5625,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 12.59375,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 46.5,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 65.875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 45.53125,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int)": 0.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int,java.lang.Class)": 12.59375,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException()": 17.4375,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 17.4375,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 20.34375,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 20.34375,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 12.59375,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(java.lang.Integer[],java.lang.Integer[])": 0.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,java.lang.Integer[],java.lang.Integer[])": 37.78125,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimension(int)": 0.96875,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimensions()": 0.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimension(int)": 0.96875,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimensions()": 0.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 10.65625,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 26.15625,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 15.5,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 0.96875,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 6.78125,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 17.4375,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 9.6875,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 11.625,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 35.84375,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 77.5,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 43.59375,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 69.75,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 30.03125,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 123.03125,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 65.875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 197.625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.90625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.90625,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 30.03125,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 177.28125,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 0.96875,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 0.96875,
        "org.apache.commons.math3.exception$TooManyEvaluationsException#TooManyEvaluationsException(java.lang.Number)": 13.5625,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 0.96875,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix()": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field)": 69.75,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field,int,int)": 99.78125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 3.875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int)": 64.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int,int)": 115.28125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkAdditionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkColumnIndex(int)": 122.0625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkMultiplicationCompatible(org.apache.commons.math3.linear.FieldMatrix)": 17.4375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkRowIndex(int)": 122.0625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int,int,int,int)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int[],int[])": 4.84375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubtractionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3.875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int,int,int,int,org.apache.commons.math3.FieldElement[][])": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int[],int[],org.apache.commons.math3.FieldElement[][])": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#equals(java.lang.Object)": 31.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[][])": 88.15625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumn(int)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnMatrix(int)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnVector(int)": 5.8125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getData()": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getField()": 126.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRow(int)": 6.78125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowVector(int)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int[],int[])": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getTrace()": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#hashCode()": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#isSquare()": 36.8125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.linear.FieldVector)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#power(int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldMatrix)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldVector)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#toString()": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#transpose()": 5.8125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 22.28125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$1#visit(int,int,org.apache.commons.math3.FieldElement)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#start(int,int,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#visit(int,int,org.apache.commons.math3.FieldElement)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$3#visit(int,int,org.apache.commons.math3.FieldElement)": 5.8125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#<clinit>()": 471.258064516129,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix()": 284.48387096774195,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix(int,int)": 377.38709677419354,
        "org.apache.commons.math3.linear$AbstractRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": -14.548387096774192,
        "org.apache.commons.math3.linear$AbstractRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int,int,int,int,double[][])": 24.21875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int[],int[],double[][])": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#equals(java.lang.Object)": 50.375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumn(int)": 3.8387096774193523,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnMatrix(int)": -14.548387096774192,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnVector(int)": 15.5,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getData()": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getFrobeniusNorm()": -17.451612903225808,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getNorm()": 78.46875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRow(int)": 15.451612903225808,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowVector(int)": 27.125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int,int,int,int)": 10.65625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int[],int[])": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getTrace()": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#hashCode()": 6.78125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#isSquare()": 110.29032258064515,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 71.58064516129032,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(double[])": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(org.apache.commons.math3.linear.RealVector)": 38.75,
        "org.apache.commons.math3.linear$AbstractRealMatrix#power(int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(double[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealMatrix)": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarAdd(double)": -16.483870967741936,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarMultiply(double)": -13.580645161290324,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumn(int,double[])": 4.84375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": -8.741935483870968,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRow(int,double[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 28.09375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setSubMatrix(double[][],int,int)": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 51.25806451612904,
        "org.apache.commons.math3.linear$AbstractRealMatrix#toString()": 6.78125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#transpose()": 126.74193548387098,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 7.75,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4.84375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 128.67741935483872,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 23.25,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#end()": 78.46875,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#start(int,int,int,int,int,int)": 78.46875,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#visit(int,int,double)": 78.46875,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#end()": -17.451612903225808,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#start(int,int,int,int,int,int)": -17.451612903225808,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#visit(int,int,double)": -17.451612903225808,
        "org.apache.commons.math3.linear$AbstractRealMatrix$3#visit(int,int,double)": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#start(int,int,int,int,int,int)": 24.21875,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#visit(int,int,double)": 24.21875,
        "org.apache.commons.math3.linear$AbstractRealMatrix$5#visit(int,int,double)": 126.74193548387098,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,int,int)": 33.90625,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][])": 47.46875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],boolean)": 30.03125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][])": 37.78125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][],boolean)": 17.4375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#add(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copy()": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyIn(org.apache.commons.math3.FieldElement[][])": 47.46875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyOut()": 31.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#createMatrix(int,int)": 17.4375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getColumnDimension()": 76.53125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getData()": 30.03125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getDataRef()": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getEntry(int,int)": 63.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getRowDimension()": 76.53125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 36.8125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 47.46875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 21.3125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix()": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[])": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][])": 234.16129032258067,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][],boolean)": 73.51612903225806,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(int,int)": 242.8709677419355,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#add(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copy()": 12.59375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyIn(double[][])": 236.0967741935484,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyOut()": 164.48387096774192,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#createMatrix(int,int)": 156.74193548387098,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getColumnDimension()": 319.3225806451613,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getData()": 157.70967741935485,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getDataRef()": 41.65625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getEntry(int,int)": 235.1290322580645,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getRowDimension()": 318.35483870967744,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 10.65625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiplyEntry(int,int,double)": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#operate(double[])": 41.65625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#preMultiply(double[])": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setEntry(int,int,double)": 234.16129032258067,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setSubMatrix(double[][],int,int)": 236.0967741935484,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 73.625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 127.70967741935485,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 23.25,
        "org.apache.commons.math3.linear$ArrayRealVector#<clinit>()": 369.64516129032256,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector()": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[])": 166.41935483870967,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],boolean)": 280.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],double[])": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],int,int)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int)": 131.75,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int,double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[])": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[],int,int)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean)": 99.78125,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,double[])": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#add(org.apache.commons.math3.linear.RealVector)": 8.71875,
        "org.apache.commons.math3.linear$ArrayRealVector#addToEntry(int,double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#append(double)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.ArrayRealVector)": 0.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(int)": 139.5,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$ArrayRealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$ArrayRealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 39.71875,
        "org.apache.commons.math3.linear$ArrayRealVector#copy()": 98.8125,
        "org.apache.commons.math3.linear$ArrayRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 86.21875,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": 6.78125,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 12.59375,
        "org.apache.commons.math3.linear$ArrayRealVector#equals(java.lang.Object)": 45.53125,
        "org.apache.commons.math3.linear$ArrayRealVector#getDataRef()": 50.375,
        "org.apache.commons.math3.linear$ArrayRealVector#getDimension()": 258.35483870967744,
        "org.apache.commons.math3.linear$ArrayRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 4.84375,
        "org.apache.commons.math3.linear$ArrayRealVector#getEntry(int)": 207.06451612903226,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Norm()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfNorm()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#getNorm()": 54.25,
        "org.apache.commons.math3.linear$ArrayRealVector#getSubVector(int,int)": 6.78125,
        "org.apache.commons.math3.linear$ArrayRealVector#hashCode()": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#isInfinite()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#isNaN()": 49.40625,
        "org.apache.commons.math3.linear$ArrayRealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapAddToSelf(double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapDivideToSelf(double)": 4.84375,
        "org.apache.commons.math3.linear$ArrayRealVector#mapMultiplyToSelf(double)": 55.21875,
        "org.apache.commons.math3.linear$ArrayRealVector#mapSubtractToSelf(double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#set(double)": 43.59375,
        "org.apache.commons.math3.linear$ArrayRealVector#setEntry(int,double)": 70.71875,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,double[])": 24.21875,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 25.1875,
        "org.apache.commons.math3.linear$ArrayRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 73.625,
        "org.apache.commons.math3.linear$ArrayRealVector#toArray()": 98.8125,
        "org.apache.commons.math3.linear$ArrayRealVector#toString()": 0.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(int,int,org.apache.commons.math3.FieldElement[][],boolean)": 33.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.Field,int,int)": 26.15625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.FieldElement[][])": 33.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.BlockFieldMatrix)": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockHeight(int)": 39.71875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockWidth(int)": 44.5625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copy()": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copyBlockPart(org.apache.commons.math3.FieldElement[],int,int,int,int,int,org.apache.commons.math3.FieldElement[],int,int,int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createBlocksLayout(org.apache.commons.math3.Field,int,int)": 26.15625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createMatrix(int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumn(int)": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnDimension()": 39.71875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnMatrix(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getData()": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getEntry(int,int)": 27.125,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRow(int)": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowDimension()": 40.6875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getSubMatrix(int,int,int,int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.BlockFieldMatrix)": 6.78125,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 5.8125,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#toBlocksLayout(org.apache.commons.math3.FieldElement[][])": 33.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#transpose()": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(double[][])": 112.375,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int)": 59.09375,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int,double[][],boolean)": 132.71875,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.BlockRealMatrix)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#addToEntry(int,int,double)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockHeight(int)": 139.5,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockWidth(int)": 147.25,
        "org.apache.commons.math3.linear$BlockRealMatrix#copy()": 4.84375,
        "org.apache.commons.math3.linear$BlockRealMatrix#copyBlockPart(double[],int,int,int,int,int,double[],int,int,int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#createBlocksLayout(int,int)": 78.46875,
        "org.apache.commons.math3.linear$BlockRealMatrix#createMatrix(int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumn(int)": 20.34375,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnDimension()": 139.5,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnMatrix(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getData()": 59.09375,
        "org.apache.commons.math3.linear$BlockRealMatrix#getEntry(int,int)": 78.46875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getFrobeniusNorm()": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getNorm()": 22.28125,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRow(int)": 4.84375,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowDimension()": 140.46875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getSubMatrix(int,int,int,int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.BlockRealMatrix)": 12.59375,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 12.59375,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#operate(double[])": 39.71875,
        "org.apache.commons.math3.linear$BlockRealMatrix#preMultiply(double[])": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarAdd(double)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarMultiply(double)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumn(int,double[])": 7.75,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setEntry(int,int,double)": 23.25,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRow(int,double[])": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setSubMatrix(double[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.BlockRealMatrix)": 18.40625,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 21.3125,
        "org.apache.commons.math3.linear$BlockRealMatrix#toBlocksLayout(double[][])": 112.375,
        "org.apache.commons.math3.linear$BlockRealMatrix#transpose()": 15.5,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 8.71875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#DefaultRealMatrixPreservingVisitor()": 132.5483870967742,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#end()": 132.5483870967742,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#start(int,int,int,int,int,int)": 128.67741935483872,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#visit(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(double[],double[])": 3.875,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(double[],double[],double)": 0.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(org.apache.commons.math3.linear.RealMatrix)": 7.70967741935484,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(org.apache.commons.math3.linear.RealMatrix,double)": 0.0,
        "org.apache.commons.math3.linear$EigenDecomposition#cdiv(double,double,double,double)": 1.9375,
        "org.apache.commons.math3.linear$EigenDecomposition#findEigenVectors(double[][])": 9.645161290322584,
        "org.apache.commons.math3.linear$EigenDecomposition#findEigenVectorsFromSchur(org.apache.commons.math3.linear.SchurTransformer)": 1.9375,
        "org.apache.commons.math3.linear$EigenDecomposition#getD()": -13.580645161290324,
        "org.apache.commons.math3.linear$EigenDecomposition#getDeterminant()": 3.875,
        "org.apache.commons.math3.linear$EigenDecomposition#getEigenvector(int)": 7.75,
        "org.apache.commons.math3.linear$EigenDecomposition#getImagEigenvalue(int)": 0.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getImagEigenvalues()": 0.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getRealEigenvalue(int)": 7.75,
        "org.apache.commons.math3.linear$EigenDecomposition#getRealEigenvalues()": 12.59375,
        "org.apache.commons.math3.linear$EigenDecomposition#getSolver()": 7.75,
        "org.apache.commons.math3.linear$EigenDecomposition#getV()": -9.70967741935484,
        "org.apache.commons.math3.linear$EigenDecomposition#getVT()": 2.90625,
        "org.apache.commons.math3.linear$EigenDecomposition#hasComplexEigenvalues()": 7.75,
        "org.apache.commons.math3.linear$EigenDecomposition#isSymmetric(org.apache.commons.math3.linear.RealMatrix,boolean)": 7.70967741935484,
        "org.apache.commons.math3.linear$EigenDecomposition#transformToSchur(org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$EigenDecomposition#transformToTridiagonal(org.apache.commons.math3.linear.RealMatrix)": 5.774193548387096,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#EigenDecomposition$Solver(double[],double[],org.apache.commons.math3.linear.ArrayRealVector[])": 7.75,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#getInverse()": 5.8125,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#isNonSingular()": 7.75,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#solve(org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#solve(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#MatrixDimensionMismatchException(int,int,int,int)": 37.78125,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedColumnDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedRowDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongColumnDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongRowDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#<clinit>()": 422.8709677419355,
        "org.apache.commons.math3.linear$MatrixUtils#MatrixUtils()": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#bigFractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils#blockInverse(org.apache.commons.math3.linear.RealMatrix,int)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#checkAdditionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": -1.0,
        "org.apache.commons.math3.linear$MatrixUtils#checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 384.16129032258067,
        "org.apache.commons.math3.linear$MatrixUtils#checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)": 351.258064516129,
        "org.apache.commons.math3.linear$MatrixUtils#checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 96.74193548387098,
        "org.apache.commons.math3.linear$MatrixUtils#checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 383.19354838709677,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int,int,int)": 41.65625,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int[],int[])": 4.84375,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubtractionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 69.64516129032258,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnRealMatrix(double[])": -17.451612903225808,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldDiagonalMatrix(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldIdentityMatrix(org.apache.commons.math3.Field,int)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.Field,int,int)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.FieldElement[][])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldVector(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealDiagonalMatrix(double[])": -10.677419354838708,
        "org.apache.commons.math3.linear$MatrixUtils#createRealIdentityMatrix(int)": 53.28125,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(double[][])": 149.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(int,int)": 79.3225806451613,
        "org.apache.commons.math3.linear$MatrixUtils#createRealVector(double[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createRowRealMatrix(double[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealMatrix(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealVector(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#fractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealMatrix(org.apache.commons.math3.linear.RealMatrix,java.io.ObjectOutputStream)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealVector(org.apache.commons.math3.linear.RealVector,java.io.ObjectOutputStream)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#solveLowerTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#solveUpperTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#MatrixUtils$BigFractionMatrixConverter()": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#getConvertedMatrix()": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#start(int,int,int,int,int,int)": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.BigFraction)": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#MatrixUtils$FractionMatrixConverter()": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#getConvertedMatrix()": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#start(int,int,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.Fraction)": 0.96875,
        "org.apache.commons.math3.linear$NonSquareMatrixException#NonSquareMatrixException(int,int)": 13.5625,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#NonSymmetricMatrixException(int,int,double)": 0.96875,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getColumn()": 0.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getRow()": 0.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getThreshold()": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(int,int)": 30.03125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(org.apache.commons.math3.linear.OpenMapRealMatrix)": 8.71875,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#add(org.apache.commons.math3.linear.OpenMapRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#computeKey(int,int)": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#copy()": 1.9375,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#createMatrix(int,int)": 6.78125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getColumnDimension()": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getEntry(int,int)": 27.125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getRowDimension()": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3.875,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3.875,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#setEntry(int,int,double)": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.OpenMapRealMatrix)": 5.8125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 5.8125,
        "org.apache.commons.math3.linear$RealLinearOperator#RealLinearOperator()": 506.0967741935484,
        "org.apache.commons.math3.linear$RealLinearOperator#isTransposable()": 0.0,
        "org.apache.commons.math3.linear$RealLinearOperator#operateTranspose(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat()": 0.96875,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 422.8709677419355,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 479.9677419354839,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.text.NumberFormat)": 479.9677419354839,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix)": 17.4375,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition)": 17.4375,
        "org.apache.commons.math3.linear$RealMatrixFormat#getAvailableLocales()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getColumnSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getFormat()": 472.2258064516129,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance()": 422.8709677419355,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance(java.util.Locale)": 479.9677419354839,
        "org.apache.commons.math3.linear$RealMatrixFormat#getPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String)": 11.625,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String,java.text.ParsePosition)": 15.5,
        "org.apache.commons.math3.linear$RealVector#RealVector()": 549.6451612903226,
        "org.apache.commons.math3.linear$RealVector#add(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#addToEntry(int,double)": 5.8125,
        "org.apache.commons.math3.linear$RealVector#checkIndex(int)": 168.5625,
        "org.apache.commons.math3.linear$RealVector#checkIndices(int,int)": 23.25,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(int)": 68.78125,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 58.125,
        "org.apache.commons.math3.linear$RealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 8.71875,
        "org.apache.commons.math3.linear$RealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$RealVector#cosine(org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$RealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 27.125,
        "org.apache.commons.math3.linear$RealVector#equals(java.lang.Object)": 0.0,
        "org.apache.commons.math3.linear$RealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#getL1Norm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#getLInfNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector#getMaxIndex()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getMaxValue()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getMinIndex()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getMinValue()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getNorm()": 21.3125,
        "org.apache.commons.math3.linear$RealVector#hashCode()": 0.0,
        "org.apache.commons.math3.linear$RealVector#iterator()": 33.90625,
        "org.apache.commons.math3.linear$RealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#mapAdd(double)": 2.90625,
        "org.apache.commons.math3.linear$RealVector#mapAddToSelf(double)": 3.875,
        "org.apache.commons.math3.linear$RealVector#mapDivide(double)": 6.78125,
        "org.apache.commons.math3.linear$RealVector#mapDivideToSelf(double)": 6.78125,
        "org.apache.commons.math3.linear$RealVector#mapMultiply(double)": 63.9375,
        "org.apache.commons.math3.linear$RealVector#mapMultiplyToSelf(double)": 12.59375,
        "org.apache.commons.math3.linear$RealVector#mapSubtract(double)": 4.84375,
        "org.apache.commons.math3.linear$RealVector#mapSubtractToSelf(double)": 4.84375,
        "org.apache.commons.math3.linear$RealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 24.21875,
        "org.apache.commons.math3.linear$RealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 4.84375,
        "org.apache.commons.math3.linear$RealVector#projection(org.apache.commons.math3.linear.RealVector)": 13.5625,
        "org.apache.commons.math3.linear$RealVector#set(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#sparseIterator()": 30.03125,
        "org.apache.commons.math3.linear$RealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#toArray()": 2.90625,
        "org.apache.commons.math3.linear$RealVector#unitVector()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#unitize()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)": 27.125,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3.875,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 7.75,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3.875,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 7.75,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$RealVector$1#hasNext()": 33.90625,
        "org.apache.commons.math3.linear$RealVector$1#next()": 33.90625,
        "org.apache.commons.math3.linear$RealVector$1#remove()": 2.90625,
        "org.apache.commons.math3.linear$RealVector$2#add(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#addToEntry(int,double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#append(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#append(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#combine(double,double,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#copy()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#cosine(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#dotProduct(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#ebeDivide(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealVector$2#getDimension()": 5.8125,
        "org.apache.commons.math3.linear$RealVector$2#getDistance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getEntry(int)": 7.75,
        "org.apache.commons.math3.linear$RealVector$2#getL1Distance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getL1Norm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getLInfNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getSubVector(int,int)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#isInfinite()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#isNaN()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#iterator()": 3.875,
        "org.apache.commons.math3.linear$RealVector$2#map(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapAdd(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapAddToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapDivide(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapDivideToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiply(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiplyToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtract(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtractToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#outerProduct(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#set(double)": 2.90625,
        "org.apache.commons.math3.linear$RealVector$2#setEntry(int,double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#sparseIterator()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#subtract(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector$2#toArray()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#unitVector()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#unitize()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2$1#hasNext()": 3.875,
        "org.apache.commons.math3.linear$RealVector$2$1#next()": 3.875,
        "org.apache.commons.math3.linear$RealVector$2$1#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2$2#hasNext()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2$2#next()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2$2#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2)": 5.8125,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#getValue()": 5.8125,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#setValue(double)": 3.875,
        "org.apache.commons.math3.linear$RealVector$Entry#RealVector$Entry(org.apache.commons.math3.linear.RealVector)": 71.6875,
        "org.apache.commons.math3.linear$RealVector$Entry#getIndex()": 59.09375,
        "org.apache.commons.math3.linear$RealVector$Entry#getValue()": 56.1875,
        "org.apache.commons.math3.linear$RealVector$Entry#setIndex(int)": 71.6875,
        "org.apache.commons.math3.linear$RealVector$Entry#setValue(double)": 24.21875,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#RealVector$SparseEntryIterator(org.apache.commons.math3.linear.RealVector)": 30.03125,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#advance(org.apache.commons.math3.linear.RealVector$Entry)": 30.03125,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#hasNext()": 30.03125,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#next()": 28.09375,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat()": 7.75,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 379.3225806451613,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.text.NumberFormat)": 379.3225806451613,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector)": 21.3125,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition)": 21.3125,
        "org.apache.commons.math3.linear$RealVectorFormat#getAvailableLocales()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getFormat()": 1.9375,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance()": 369.64516129032256,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance(java.util.Locale)": 379.3225806451613,
        "org.apache.commons.math3.linear$RealVectorFormat#getPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String)": 27.125,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String,java.text.ParsePosition)": 34.875,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#TriDiagonalTransformer(org.apache.commons.math3.linear.RealMatrix)": 14.483870967741936,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getHouseholderVectorsRef()": 0.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getMainDiagonalRef()": 6.741935483870968,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getQ()": 10.612903225806448,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getQT()": 11.58064516129032,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getSecondaryDiagonalRef()": 6.741935483870968,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getT()": 4.84375,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#transform()": 13.516129032258064,
        "org.apache.commons.math3.optimization$AbstractConvergenceChecker#<clinit>()": 59.96774193548387,
        "org.apache.commons.math3.optimization$AbstractConvergenceChecker#AbstractConvergenceChecker()": -6.806451612903224,
        "org.apache.commons.math3.optimization$AbstractConvergenceChecker#AbstractConvergenceChecker(double,double)": 66.84375,
        "org.apache.commons.math3.optimization$AbstractConvergenceChecker#getAbsoluteThreshold()": 46.41935483870968,
        "org.apache.commons.math3.optimization$AbstractConvergenceChecker#getRelativeThreshold()": 47.38709677419355,
        "org.apache.commons.math3.optimization$GoalType#<clinit>()": 94.80645161290323,
        "org.apache.commons.math3.optimization$GoalType#GoalType(java.lang.String,int)": 94.80645161290323,
        "org.apache.commons.math3.optimization$PointValuePair#PointValuePair(double[],double)": 66.74193548387096,
        "org.apache.commons.math3.optimization$PointValuePair#PointValuePair(double[],double,boolean)": 66.74193548387096,
        "org.apache.commons.math3.optimization$PointValuePair#getPoint()": 41.58064516129032,
        "org.apache.commons.math3.optimization$PointValuePair#getPointRef()": 28.09375,
        "org.apache.commons.math3.optimization$PointValuePair#writeReplace()": 0.96875,
        "org.apache.commons.math3.optimization$PointValuePair$DataTransferObject#PointValuePair$DataTransferObject(double[],double)": 0.96875,
        "org.apache.commons.math3.optimization$PointValuePair$DataTransferObject#readResolve()": 0.96875,
        "org.apache.commons.math3.optimization$SimpleValueChecker#SimpleValueChecker()": -9.70967741935484,
        "org.apache.commons.math3.optimization$SimpleValueChecker#SimpleValueChecker(double,double)": 36.8125,
        "org.apache.commons.math3.optimization$SimpleValueChecker#converged(int,org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.PointValuePair)": 18.354838709677416,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#BaseAbstractMultivariateOptimizer()": 0.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#BaseAbstractMultivariateOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker)": 49.322580645161295,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#computeObjectiveValue(double[])": 37.70967741935483,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#getConvergenceChecker()": 24.161290322580648,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#getEvaluations()": 31.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#getGoalType()": 37.70967741935483,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#getMaxEvaluations()": -5.838709677419356,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#getStartPoint()": 44.483870967741936,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[])": 31.903225806451616,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#optimizeInternal(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[])": 44.483870967741936,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#BaseAbstractMultivariateSimpleBoundsOptimizer()": 0.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#BaseAbstractMultivariateSimpleBoundsOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker)": 6.741935483870968,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#getLowerBound()": 1.9032258064516157,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#getUpperBound()": 1.9032258064516157,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[])": -31.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[],double[],double[])": 6.741935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#<clinit>()": -9.70967741935484,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#CMAESOptimizer()": -29.064516129032256,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#CMAESOptimizer(int)": -29.064516129032256,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#CMAESOptimizer(int,double[])": 0.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#CMAESOptimizer(int,double[],int,double,boolean,int,int,org.apache.commons.math3.random.RandomGenerator,boolean)": -9.70967741935484,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#CMAESOptimizer(int,double[],int,double,boolean,int,int,org.apache.commons.math3.random.RandomGenerator,boolean,org.apache.commons.math3.optimization.ConvergenceChecker)": -9.70967741935484,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#checkParameters()": -12.612903225806452,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#copyColumn(org.apache.commons.math3.linear.RealMatrix,int,org.apache.commons.math3.linear.RealMatrix,int)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#diag(org.apache.commons.math3.linear.RealMatrix)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#divide(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#doOptimize()": -12.612903225806452,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#eye(int,int)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#getStatisticsDHistory()": 0.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#getStatisticsFitnessHistory()": 0.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#getStatisticsMeanHistory()": 0.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#getStatisticsSigmaHistory()": 0.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#initializeCMA(double[])": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#inverse(int[])": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#log(org.apache.commons.math3.linear.RealMatrix)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#max(double[])": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#max(org.apache.commons.math3.linear.RealMatrix)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#min(double[])": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#min(org.apache.commons.math3.linear.RealMatrix)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#ones(int,int)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#push(double[],double)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#randn(int)": 0.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#randn1(int,int)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#repmat(org.apache.commons.math3.linear.RealMatrix,int,int)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#reverse(int[])": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#selectColumns(org.apache.commons.math3.linear.RealMatrix,int[])": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#sequence(double,double,double)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#sortedIndices(double[])": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#sqrt(org.apache.commons.math3.linear.RealMatrix)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#square(org.apache.commons.math3.linear.RealMatrix)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#sumRows(org.apache.commons.math3.linear.RealMatrix)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#times(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#triu(org.apache.commons.math3.linear.RealMatrix,int)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#updateBD(double)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#updateCovariance(boolean,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix,int[],org.apache.commons.math3.linear.RealMatrix)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#updateCovarianceDiagonalOnly(boolean,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": 0.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#updateEvolutionPaths(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#zeros(int,int)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$DoubleIndex#CMAESOptimizer$DoubleIndex(double,int)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$DoubleIndex#compareTo(org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$DoubleIndex#equals(java.lang.Object)": 0.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$DoubleIndex#hashCode()": 0.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#CMAESOptimizer$FitnessFunction(org.apache.commons.math3.optimization.direct.CMAESOptimizer)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#decode(double[])": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#encode(double[])": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#isFeasible(double[])": 0.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#penalty(double[],double[])": -29.064516129032256,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#repair(double[])": -29.064516129032256,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#repairAndDecode(double[])": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#setValueRange(double)": -18.41935483870968,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#value(double[])": -18.41935483870968,
        "org.apache.commons.math3.random$BitsStreamGenerator#BitsStreamGenerator()": 973.516129032258,
        "org.apache.commons.math3.random$BitsStreamGenerator#clear()": 973.516129032258,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBoolean()": 26.15625,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBytes(byte[])": 18.40625,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextDouble()": 396.741935483871,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextFloat()": 26.15625,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextGaussian()": 37.70967741935483,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt()": 33.90625,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt(int)": 34.875,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong()": 26.15625,
        "org.apache.commons.math3.random$MersenneTwister#<clinit>()": 92.87096774193549,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister()": -7.774193548387096,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(int)": 58.125,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(int[])": 0.96875,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(long)": 42.625,
        "org.apache.commons.math3.random$MersenneTwister#next(int)": 46.41935483870968,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(int)": 92.87096774193549,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(int[])": 49.322580645161295,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(long)": 48.35483870967742,
        "org.apache.commons.math3.util$CompositeFormat#CompositeFormat()": 0.0,
        "org.apache.commons.math3.util$CompositeFormat#formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)": 89.125,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat()": 442.2258064516129,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat(java.util.Locale)": 793.516129032258,
        "org.apache.commons.math3.util$CompositeFormat#parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)": 106.5625,
        "org.apache.commons.math3.util$CompositeFormat#parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)": 104.625,
        "org.apache.commons.math3.util$CompositeFormat#parseNextCharacter(java.lang.String,java.text.ParsePosition)": 106.5625,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,double,java.text.ParsePosition)": 23.25,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)": 101.71875,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 2797.7096774193546,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1519.3225806451612,
        "org.apache.commons.math3.util$FastMath#abs(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#abs(int)": 314.84375,
        "org.apache.commons.math3.util$FastMath#abs(long)": 752.8709677419355,
        "org.apache.commons.math3.util$FastMath#acos(double)": 21.3125,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#asin(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#atan(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 86.21875,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 73.625,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 40.6875,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 339.0625,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cos(double)": 204.16129032258064,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 274.80645161290323,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 27.125,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 65.875,
        "org.apache.commons.math3.util$FastMath#exp(double)": 677.15625,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 892.21875,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 14.53125,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 29.0625,
        "org.apache.commons.math3.util$FastMath#floor(double)": 833.125,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 66.84375,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 62.0,
        "org.apache.commons.math3.util$FastMath#log(double)": 717.0645161290323,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 932.8709677419355,
        "org.apache.commons.math3.util$FastMath#log10(double)": 54.25,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 447.5625,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 548.6774193548387,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 437.38709677419354,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 0.96875,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 259.625,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 599.0,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 33.90625,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 15.5,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 312.5483870967742,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 312.5483870967742,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 589.0,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 182.125,
        "org.apache.commons.math3.util$FastMath#random()": 18.40625,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.84375,
        "org.apache.commons.math3.util$FastMath#rint(double)": 20.34375,
        "org.apache.commons.math3.util$FastMath#round(double)": 19.375,
        "org.apache.commons.math3.util$FastMath#round(float)": 2.90625,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 49.40625,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9375,
        "org.apache.commons.math3.util$FastMath#signum(double)": 11.625,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#sin(double)": 289.3225806451613,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 295.1290322580645,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 27.125,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1533.8387096774193,
        "org.apache.commons.math3.util$FastMath#tan(double)": 25.1875,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 25.1875,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 11.625,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 237.34375,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 230.29032258064518,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 230.29032258064518,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 230.29032258064518,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 230.29032258064518,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 876.71875,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 872.84375,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 918.3548387096774,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 1011.258064516129,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 876.71875,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 876.71875,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 872.84375,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 872.84375,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 918.3548387096774,
        "org.apache.commons.math3.util$Incrementor#Incrementor()": 532.2258064516129,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int)": 586.4193548387096,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int,org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback)": 587.3870967741935,
        "org.apache.commons.math3.util$Incrementor#canIncrement()": 1.9375,
        "org.apache.commons.math3.util$Incrementor#getCount()": 159.84375,
        "org.apache.commons.math3.util$Incrementor#getMaximalCount()": 0.9354838709677438,
        "org.apache.commons.math3.util$Incrementor#incrementCount()": 534.1612903225806,
        "org.apache.commons.math3.util$Incrementor#incrementCount(int)": 0.96875,
        "org.apache.commons.math3.util$Incrementor#resetCount()": 552.5483870967741,
        "org.apache.commons.math3.util$Incrementor#setMaximalCount(int)": 517.7096774193549,
        "org.apache.commons.math3.util$Incrementor$1#trigger(int)": 17.4375,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 0.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 45.53125,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 46.5,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 137.5625,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 35.84375,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 62.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 5.8125,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": -10.677419354838708,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 5.8125,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 4.84375,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.96875,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.96875,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 48.4375,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 49.40625,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 2.90625,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": 2.90625,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": 1.9375,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 8.71875,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 8.71875,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 7.75,
        "org.apache.commons.math3.util$MathArrays$2#<clinit>()": 137.5625,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 142.40625,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 142.40625,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 0.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 16.46875,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 0.96875,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 738.3548387096774,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 74.59375,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 3.875,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 3.875,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 1.9375,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 1.9375,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 45.53125,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 8.71875,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 34.875,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 4.84375,
        "org.apache.commons.math3.util$Pair#Pair(java.lang.Object,java.lang.Object)": 243.83870967741933,
        "org.apache.commons.math3.util$Pair#Pair(org.apache.commons.math3.util.Pair)": 0.0,
        "org.apache.commons.math3.util$Pair#equals(java.lang.Object)": 0.96875,
        "org.apache.commons.math3.util$Pair#getFirst()": 83.3125,
        "org.apache.commons.math3.util$Pair#getKey()": 132.5483870967742,
        "org.apache.commons.math3.util$Pair#getSecond()": 83.3125,
        "org.apache.commons.math3.util$Pair#getValue()": 91.90322580645162,
        "org.apache.commons.math3.util$Pair#hashCode()": 0.96875,
        "org.apache.commons.math3.util$Precision#<clinit>()": 1023.8387096774193,
        "org.apache.commons.math3.util$Precision#Precision()": 0.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 15.451612903225808,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 25.1875,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 143.375,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 360.93548387096774,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 694.8064516129032,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 0.96875,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 77.5,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 126.90625,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 46.5,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 76.53125,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsWithRelativeTolerance(double,double,double)": 0.96875,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 0.96875
    },
    "Math-2": {
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#AbstractIntegerDistribution()": 0.0,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#AbstractIntegerDistribution(org.apache.commons.math3.random.RandomGenerator)": 237.06451612903226,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#checkedCumulativeProbability(int)": 62.0,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#cumulativeProbability(int,int)": 19.375,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#inverseCumulativeProbability(double)": 50.29032258064517,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#reseedRandomGenerator(long)": 19.375,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#sample()": 20.29032258064516,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#sample(int)": 7.75,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#solveInverseCumulativeProbability(double,int,int)": 35.7741935483871,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#HypergeometricDistribution(int,int,int)": -4.870967741935484,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#HypergeometricDistribution(org.apache.commons.math3.random.RandomGenerator,int,int,int)": -4.870967741935484,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#calculateNumericalVariance()": -13.580645161290324,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#cumulativeProbability(int)": 21.3125,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#getDomain(int,int,int)": 22.28125,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#getLowerDomain(int,int,int)": 22.28125,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#getNumberOfSuccesses()": -11.64516129032258,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#getNumericalMean()": -13.580645161290324,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#getNumericalVariance()": -13.580645161290324,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#getPopulationSize()": -11.64516129032258,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#getSampleSize()": -11.64516129032258,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#getSupportLowerBound()": -13.580645161290324,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#getSupportUpperBound()": -13.580645161290324,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#getUpperDomain(int,int)": 22.28125,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#innerCumulativeProbability(int,int,int)": 18.40625,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#isSupportConnected()": 0.0,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#probability(int)": 22.28125,
        "org.apache.commons.math3.distribution$HypergeometricDistribution#upperCumulativeProbability(int)": 2.90625,
        "org.apache.commons.math3.distribution$SaddlePointExpansion#<clinit>()": 38.75,
        "org.apache.commons.math3.distribution$SaddlePointExpansion#SaddlePointExpansion()": 0.0,
        "org.apache.commons.math3.distribution$SaddlePointExpansion#getDeviancePart(double,double)": 37.78125,
        "org.apache.commons.math3.distribution$SaddlePointExpansion#getStirlingError(double)": 36.8125,
        "org.apache.commons.math3.distribution$SaddlePointExpansion#logBinomialProbability(int,int,double,double)": 26.15625,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 890.28125,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 8.71875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 1.9375,
        "org.apache.commons.math3.exception$MathIllegalNumberException#<clinit>()": 720.75,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 720.75,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 13.5625,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 71.6875,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 97.84375,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 67.8125,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$NotANumberException#NotANumberException()": 15.5,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 8.71875,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 20.34375,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 21.3125,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 11.625,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 52.3125,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 84.28125,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 36.8125,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 151.125,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 107.53125,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 247.03125,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.90625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.90625,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 48.4375,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 197.625,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 0.96875,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 0.96875,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int)": 723.8387096774194,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,int)": 387.5,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,int[])": 1167.0645161290322,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,long)": 833.125,
        "org.apache.commons.math3.random$AbstractWell#setSeed(int)": 17.4375,
        "org.apache.commons.math3.random$AbstractWell#setSeed(int[])": 1167.0645161290322,
        "org.apache.commons.math3.random$AbstractWell#setSeed(long)": 1087.7096774193549,
        "org.apache.commons.math3.random$BitsStreamGenerator#BitsStreamGenerator()": 1260.9354838709678,
        "org.apache.commons.math3.random$BitsStreamGenerator#clear()": 1260.9354838709678,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBoolean()": 27.125,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBytes(byte[])": 19.375,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextDouble()": 389.96774193548384,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextFloat()": 27.125,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextGaussian()": 107.53125,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt()": 54.25,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt(int)": 136.59375,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong()": 46.5,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong(long)": 0.0,
        "org.apache.commons.math3.random$RandomDataGenerator#RandomDataGenerator()": 1109.967741935484,
        "org.apache.commons.math3.random$RandomDataGenerator#RandomDataGenerator(org.apache.commons.math3.random.RandomGenerator)": 680.0625,
        "org.apache.commons.math3.random$RandomDataGenerator#getNatural(int)": 25.1875,
        "org.apache.commons.math3.random$RandomDataGenerator#getRandomGenerator()": 772.09375,
        "org.apache.commons.math3.random$RandomDataGenerator#getSecRan()": 19.375,
        "org.apache.commons.math3.random$RandomDataGenerator#initRan()": 769.1875,
        "org.apache.commons.math3.random$RandomDataGenerator#nextBeta(double,double)": 11.625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextBinomial(int,double)": 11.625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextCauchy(double,double)": 11.625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextChiSquare(double)": 11.625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextExponential(double)": 13.5625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextF(double,double)": 11.625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextGamma(double,double)": 11.625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextGaussian(double,double)": 13.5625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextHexString(int)": 11.625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextHypergeometric(int,int,int)": 11.625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextInt(int,int)": 69.75,
        "org.apache.commons.math3.random$RandomDataGenerator#nextLong(long,long)": 82.34375,
        "org.apache.commons.math3.random$RandomDataGenerator#nextLong(org.apache.commons.math3.random.RandomGenerator,long)": 0.0,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPascal(int,double)": 11.625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPermutation(int,int)": 25.1875,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPoisson(double)": 23.25,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSample(java.util.Collection,int)": 12.59375,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureHexString(int)": 12.59375,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureInt(int,int)": 3.875,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureLong(long,long)": 15.5,
        "org.apache.commons.math3.random$RandomDataGenerator#nextT(double)": 11.625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextUniform(double,double)": 127.875,
        "org.apache.commons.math3.random$RandomDataGenerator#nextUniform(double,double,boolean)": 127.875,
        "org.apache.commons.math3.random$RandomDataGenerator#nextWeibull(double,double)": 11.625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextZipf(int,double)": 11.625,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeed()": 11.625,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeed(long)": 757.5625,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeedSecure()": 11.625,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeedSecure(long)": 11.625,
        "org.apache.commons.math3.random$RandomDataGenerator#setSecureAlgorithm(java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.math3.random$RandomDataGenerator#shuffle(int[],int)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl()": 802.2258064516129,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl(org.apache.commons.math3.random.RandomGenerator)": 8.71875,
        "org.apache.commons.math3.random$RandomDataImpl#getDelegate()": 2.90625,
        "org.apache.commons.math3.random$RandomDataImpl#nextBeta(double,double)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextBinomial(int,double)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextCauchy(double,double)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextChiSquare(double)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextExponential(double)": 1.9375,
        "org.apache.commons.math3.random$RandomDataImpl#nextF(double,double)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextGamma(double,double)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextGaussian(double,double)": 1.9375,
        "org.apache.commons.math3.random$RandomDataImpl#nextHexString(int)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextHypergeometric(int,int,int)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInt(int,int)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.IntegerDistribution)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.RealDistribution)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextLong(long,long)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextPascal(int,double)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextPermutation(int,int)": 0.96875,
        "org.apache.commons.math3.random$RandomDataImpl#nextPoisson(double)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSample(java.util.Collection,int)": 0.96875,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureHexString(int)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureInt(int,int)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureLong(long,long)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextT(double)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double)": 1.9375,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double,boolean)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextWeibull(double,double)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextZipf(int,double)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed()": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed(long)": 47.46875,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure()": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure(long)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#setSecureAlgorithm(java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.math3.random$Well19937c#Well19937c()": 723.8387096774194,
        "org.apache.commons.math3.random$Well19937c#Well19937c(int)": 87.1875,
        "org.apache.commons.math3.random$Well19937c#Well19937c(int[])": 0.96875,
        "org.apache.commons.math3.random$Well19937c#Well19937c(long)": 773.0625,
        "org.apache.commons.math3.random$Well19937c#next(int)": 146.09677419354838,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 3535.1290322580644,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 8.71875,
        "org.apache.commons.math3.util$FastMath#abs(double)": 2133.1875,
        "org.apache.commons.math3.util$FastMath#abs(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#abs(int)": 323.5625,
        "org.apache.commons.math3.util$FastMath#abs(long)": 939.6875,
        "org.apache.commons.math3.util$FastMath#acos(double)": 34.875,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 4.84375,
        "org.apache.commons.math3.util$FastMath#asin(double)": 35.84375,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 4.84375,
        "org.apache.commons.math3.util$FastMath#atan(double)": 37.78125,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 127.875,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 92.03125,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 4.84375,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 44.5625,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 292.5625,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 23.25,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cos(double)": 316.78125,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 396.21875,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 32.9375,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 89.125,
        "org.apache.commons.math3.util$FastMath#exp(double)": 805.03125,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 1083.0625,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 17.4375,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 38.75,
        "org.apache.commons.math3.util$FastMath#floor(double)": 770.15625,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 78.46875,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 73.625,
        "org.apache.commons.math3.util$FastMath#log(double)": 894.15625,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1169.28125,
        "org.apache.commons.math3.util$FastMath#log10(double)": 54.25,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 525.0625,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 959.0625,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 645.4516129032259,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 12.59375,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 518.28125,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 966.741935483871,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 48.4375,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 14.53125,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 439.8125,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 439.8125,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 720.75,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 230.5625,
        "org.apache.commons.math3.util$FastMath#random()": 18.40625,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.84375,
        "org.apache.commons.math3.util$FastMath#rint(double)": 71.6875,
        "org.apache.commons.math3.util$FastMath#round(double)": 23.25,
        "org.apache.commons.math3.util$FastMath#round(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 62.96875,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9375,
        "org.apache.commons.math3.util$FastMath#signum(double)": 13.5625,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#sin(double)": 410.75,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 417.53125,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 32.9375,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1974.1612903225807,
        "org.apache.commons.math3.util$FastMath#tan(double)": 30.03125,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 30.03125,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 14.53125,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 280.9375,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double)": 336.15625,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 336.15625,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 336.15625,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 336.15625,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 1067.5625,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 1062.71875,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1149.90625,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 1272.9375,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 1067.5625,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 1067.5625,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 1062.71875,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 1062.71875,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 1149.90625
    },
    "Math-20": {
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 150.15625,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 169.53125,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 2.90625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.65625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 41.65625,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 740.125,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 6.78125,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 600.625,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 12.59375,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 46.5,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 65.875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 45.53125,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int)": 0.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int,java.lang.Class)": 12.59375,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException()": 17.4375,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 17.4375,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 20.34375,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 20.34375,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 12.59375,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(java.lang.Integer[],java.lang.Integer[])": 0.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,java.lang.Integer[],java.lang.Integer[])": 37.78125,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimension(int)": 0.96875,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimensions()": 0.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimension(int)": 0.96875,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimensions()": 0.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 10.65625,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 26.15625,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 15.5,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 0.96875,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 6.78125,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 17.4375,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 9.6875,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 11.625,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 35.84375,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 77.5,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 43.59375,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 69.75,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 29.0625,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 122.0625,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 65.875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 197.625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.90625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.90625,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 29.0625,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 176.3125,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 0.96875,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 0.96875,
        "org.apache.commons.math3.exception$TooManyEvaluationsException#TooManyEvaluationsException(java.lang.Number)": 13.5625,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 0.96875,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix()": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field)": 69.75,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field,int,int)": 99.78125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 3.875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int)": 64.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int,int)": 115.28125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkAdditionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkColumnIndex(int)": 122.0625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkMultiplicationCompatible(org.apache.commons.math3.linear.FieldMatrix)": 17.4375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkRowIndex(int)": 122.0625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int,int,int,int)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int[],int[])": 4.84375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubtractionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3.875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int,int,int,int,org.apache.commons.math3.FieldElement[][])": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int[],int[],org.apache.commons.math3.FieldElement[][])": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#equals(java.lang.Object)": 31.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[][])": 88.15625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumn(int)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnMatrix(int)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnVector(int)": 5.8125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getData()": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getField()": 126.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRow(int)": 6.78125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowVector(int)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int[],int[])": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getTrace()": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#hashCode()": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#isSquare()": 36.8125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.linear.FieldVector)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#power(int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldMatrix)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldVector)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#toString()": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#transpose()": 5.8125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 22.28125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$1#visit(int,int,org.apache.commons.math3.FieldElement)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#start(int,int,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#visit(int,int,org.apache.commons.math3.FieldElement)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$3#visit(int,int,org.apache.commons.math3.FieldElement)": 5.8125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#<clinit>()": 467.38709677419354,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix()": 280.61290322580646,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix(int,int)": 373.51612903225805,
        "org.apache.commons.math3.linear$AbstractRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": -15.516129032258064,
        "org.apache.commons.math3.linear$AbstractRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int,int,int,int,double[][])": 24.21875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int[],int[],double[][])": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#equals(java.lang.Object)": 50.375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumn(int)": 2.8709677419354804,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnMatrix(int)": -15.516129032258064,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnVector(int)": 15.5,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getData()": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getFrobeniusNorm()": -18.41935483870968,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getNorm()": 76.53125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRow(int)": 14.483870967741936,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowVector(int)": 27.125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int,int,int,int)": 9.6875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int[],int[])": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getTrace()": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#hashCode()": 6.78125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#isSquare()": 107.38709677419354,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 67.70967741935483,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(double[])": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(org.apache.commons.math3.linear.RealVector)": 38.75,
        "org.apache.commons.math3.linear$AbstractRealMatrix#power(int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(double[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealMatrix)": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarAdd(double)": -17.451612903225808,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarMultiply(double)": -15.516129032258064,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumn(int,double[])": 4.84375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": -10.677419354838708,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRow(int,double[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 28.09375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setSubMatrix(double[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 47.38709677419355,
        "org.apache.commons.math3.linear$AbstractRealMatrix#toString()": 5.8125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#transpose()": 122.87096774193549,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 7.75,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4.84375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 124.80645161290323,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 23.25,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#end()": 76.53125,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#start(int,int,int,int,int,int)": 76.53125,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#visit(int,int,double)": 76.53125,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#end()": -18.41935483870968,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#start(int,int,int,int,int,int)": -18.41935483870968,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#visit(int,int,double)": -18.41935483870968,
        "org.apache.commons.math3.linear$AbstractRealMatrix$3#visit(int,int,double)": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#start(int,int,int,int,int,int)": 24.21875,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#visit(int,int,double)": 24.21875,
        "org.apache.commons.math3.linear$AbstractRealMatrix$5#visit(int,int,double)": 122.87096774193549,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,int,int)": 33.90625,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][])": 47.46875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],boolean)": 30.03125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][])": 37.78125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][],boolean)": 17.4375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#add(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copy()": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyIn(org.apache.commons.math3.FieldElement[][])": 47.46875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyOut()": 31.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#createMatrix(int,int)": 17.4375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getColumnDimension()": 76.53125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getData()": 30.03125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getDataRef()": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getEntry(int,int)": 63.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getRowDimension()": 76.53125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 36.8125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 47.46875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 21.3125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix()": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[])": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][])": 230.29032258064518,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][],boolean)": 70.61290322580645,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(int,int)": 239.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#add(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copy()": 12.59375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyIn(double[][])": 232.22580645161293,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyOut()": 160.61290322580646,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#createMatrix(int,int)": 152.8709677419355,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getColumnDimension()": 315.4516129032258,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getData()": 153.83870967741936,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getDataRef()": 41.65625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getEntry(int,int)": 231.25806451612902,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getRowDimension()": 314.48387096774195,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 10.65625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiplyEntry(int,int,double)": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#operate(double[])": 41.65625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#preMultiply(double[])": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setEntry(int,int,double)": 230.29032258064518,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setSubMatrix(double[][],int,int)": 232.22580645161293,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 71.6875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 123.83870967741936,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 23.25,
        "org.apache.commons.math3.linear$ArrayRealVector#<clinit>()": 367.7096774193548,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector()": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[])": 164.48387096774192,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],boolean)": 280.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],double[])": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],int,int)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int)": 131.75,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int,double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[])": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[],int,int)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean)": 99.78125,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,double[])": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#add(org.apache.commons.math3.linear.RealVector)": 8.71875,
        "org.apache.commons.math3.linear$ArrayRealVector#addToEntry(int,double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#append(double)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.ArrayRealVector)": 0.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(int)": 139.5,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$ArrayRealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$ArrayRealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 39.71875,
        "org.apache.commons.math3.linear$ArrayRealVector#copy()": 98.8125,
        "org.apache.commons.math3.linear$ArrayRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 86.21875,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": 6.78125,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 12.59375,
        "org.apache.commons.math3.linear$ArrayRealVector#equals(java.lang.Object)": 45.53125,
        "org.apache.commons.math3.linear$ArrayRealVector#getDataRef()": 50.375,
        "org.apache.commons.math3.linear$ArrayRealVector#getDimension()": 256.4193548387097,
        "org.apache.commons.math3.linear$ArrayRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 4.84375,
        "org.apache.commons.math3.linear$ArrayRealVector#getEntry(int)": 205.1290322580645,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Norm()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfNorm()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#getNorm()": 54.25,
        "org.apache.commons.math3.linear$ArrayRealVector#getSubVector(int,int)": 6.78125,
        "org.apache.commons.math3.linear$ArrayRealVector#hashCode()": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#isInfinite()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#isNaN()": 49.40625,
        "org.apache.commons.math3.linear$ArrayRealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapAddToSelf(double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapDivideToSelf(double)": 4.84375,
        "org.apache.commons.math3.linear$ArrayRealVector#mapMultiplyToSelf(double)": 55.21875,
        "org.apache.commons.math3.linear$ArrayRealVector#mapSubtractToSelf(double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#set(double)": 43.59375,
        "org.apache.commons.math3.linear$ArrayRealVector#setEntry(int,double)": 70.71875,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,double[])": 24.21875,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 25.1875,
        "org.apache.commons.math3.linear$ArrayRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 73.625,
        "org.apache.commons.math3.linear$ArrayRealVector#toArray()": 98.8125,
        "org.apache.commons.math3.linear$ArrayRealVector#toString()": 0.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(int,int,org.apache.commons.math3.FieldElement[][],boolean)": 33.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.Field,int,int)": 26.15625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.FieldElement[][])": 33.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.BlockFieldMatrix)": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockHeight(int)": 39.71875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockWidth(int)": 44.5625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copy()": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copyBlockPart(org.apache.commons.math3.FieldElement[],int,int,int,int,int,org.apache.commons.math3.FieldElement[],int,int,int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createBlocksLayout(org.apache.commons.math3.Field,int,int)": 26.15625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createMatrix(int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumn(int)": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnDimension()": 39.71875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnMatrix(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getData()": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getEntry(int,int)": 27.125,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRow(int)": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowDimension()": 40.6875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getSubMatrix(int,int,int,int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.BlockFieldMatrix)": 6.78125,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 5.8125,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#toBlocksLayout(org.apache.commons.math3.FieldElement[][])": 33.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#transpose()": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(double[][])": 112.375,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int)": 59.09375,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int,double[][],boolean)": 132.71875,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.BlockRealMatrix)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#addToEntry(int,int,double)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockHeight(int)": 139.5,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockWidth(int)": 147.25,
        "org.apache.commons.math3.linear$BlockRealMatrix#copy()": 4.84375,
        "org.apache.commons.math3.linear$BlockRealMatrix#copyBlockPart(double[],int,int,int,int,int,double[],int,int,int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#createBlocksLayout(int,int)": 78.46875,
        "org.apache.commons.math3.linear$BlockRealMatrix#createMatrix(int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumn(int)": 20.34375,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnDimension()": 139.5,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnMatrix(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getData()": 59.09375,
        "org.apache.commons.math3.linear$BlockRealMatrix#getEntry(int,int)": 78.46875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getFrobeniusNorm()": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getNorm()": 22.28125,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRow(int)": 4.84375,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowDimension()": 140.46875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getSubMatrix(int,int,int,int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.BlockRealMatrix)": 12.59375,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 12.59375,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#operate(double[])": 39.71875,
        "org.apache.commons.math3.linear$BlockRealMatrix#preMultiply(double[])": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarAdd(double)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarMultiply(double)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumn(int,double[])": 7.75,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setEntry(int,int,double)": 23.25,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRow(int,double[])": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setSubMatrix(double[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.BlockRealMatrix)": 18.40625,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 21.3125,
        "org.apache.commons.math3.linear$BlockRealMatrix#toBlocksLayout(double[][])": 112.375,
        "org.apache.commons.math3.linear$BlockRealMatrix#transpose()": 15.5,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 8.71875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#DefaultRealMatrixPreservingVisitor()": 128.67741935483872,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#end()": 128.67741935483872,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#start(int,int,int,int,int,int)": 124.80645161290323,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#visit(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(double[],double[])": 3.875,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(double[],double[],double)": 0.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(org.apache.commons.math3.linear.RealMatrix)": 5.774193548387096,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(org.apache.commons.math3.linear.RealMatrix,double)": 0.0,
        "org.apache.commons.math3.linear$EigenDecomposition#cdiv(double,double,double,double)": 0.96875,
        "org.apache.commons.math3.linear$EigenDecomposition#findEigenVectors(double[][])": 8.677419354838712,
        "org.apache.commons.math3.linear$EigenDecomposition#findEigenVectorsFromSchur(org.apache.commons.math3.linear.SchurTransformer)": 0.96875,
        "org.apache.commons.math3.linear$EigenDecomposition#getD()": -15.516129032258064,
        "org.apache.commons.math3.linear$EigenDecomposition#getDeterminant()": 3.875,
        "org.apache.commons.math3.linear$EigenDecomposition#getEigenvector(int)": 7.75,
        "org.apache.commons.math3.linear$EigenDecomposition#getImagEigenvalue(int)": 0.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getImagEigenvalues()": 0.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getRealEigenvalue(int)": 7.75,
        "org.apache.commons.math3.linear$EigenDecomposition#getRealEigenvalues()": 12.59375,
        "org.apache.commons.math3.linear$EigenDecomposition#getSolver()": 7.75,
        "org.apache.commons.math3.linear$EigenDecomposition#getV()": -11.64516129032258,
        "org.apache.commons.math3.linear$EigenDecomposition#getVT()": 2.90625,
        "org.apache.commons.math3.linear$EigenDecomposition#hasComplexEigenvalues()": 7.75,
        "org.apache.commons.math3.linear$EigenDecomposition#isSymmetric(org.apache.commons.math3.linear.RealMatrix,boolean)": 5.774193548387096,
        "org.apache.commons.math3.linear$EigenDecomposition#transformToSchur(org.apache.commons.math3.linear.RealMatrix)": 0.96875,
        "org.apache.commons.math3.linear$EigenDecomposition#transformToTridiagonal(org.apache.commons.math3.linear.RealMatrix)": 4.806451612903224,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#EigenDecomposition$Solver(double[],double[],org.apache.commons.math3.linear.ArrayRealVector[])": 7.75,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#getInverse()": 5.8125,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#isNonSingular()": 7.75,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#solve(org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#solve(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#MatrixDimensionMismatchException(int,int,int,int)": 37.78125,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedColumnDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedRowDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongColumnDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongRowDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#<clinit>()": 419.0,
        "org.apache.commons.math3.linear$MatrixUtils#MatrixUtils()": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#bigFractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils#checkAdditionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": -1.9677419354838719,
        "org.apache.commons.math3.linear$MatrixUtils#checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 380.2903225806452,
        "org.apache.commons.math3.linear$MatrixUtils#checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)": 347.38709677419354,
        "org.apache.commons.math3.linear$MatrixUtils#checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 92.87096774193549,
        "org.apache.commons.math3.linear$MatrixUtils#checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 379.3225806451613,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int,int,int)": 40.6875,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int[],int[])": 4.84375,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubtractionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 65.7741935483871,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnRealMatrix(double[])": -18.41935483870968,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldDiagonalMatrix(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldIdentityMatrix(org.apache.commons.math3.Field,int)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.Field,int,int)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.FieldElement[][])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldVector(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealDiagonalMatrix(double[])": -12.612903225806452,
        "org.apache.commons.math3.linear$MatrixUtils#createRealIdentityMatrix(int)": 52.3125,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(double[][])": 145.1290322580645,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(int,int)": 77.38709677419355,
        "org.apache.commons.math3.linear$MatrixUtils#createRealVector(double[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createRowRealMatrix(double[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealMatrix(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealVector(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#fractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealMatrix(org.apache.commons.math3.linear.RealMatrix,java.io.ObjectOutputStream)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealVector(org.apache.commons.math3.linear.RealVector,java.io.ObjectOutputStream)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#solveLowerTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#solveUpperTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#MatrixUtils$BigFractionMatrixConverter()": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#getConvertedMatrix()": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#start(int,int,int,int,int,int)": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.BigFraction)": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#MatrixUtils$FractionMatrixConverter()": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#getConvertedMatrix()": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#start(int,int,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.Fraction)": 0.96875,
        "org.apache.commons.math3.linear$NonSquareMatrixException#NonSquareMatrixException(int,int)": 13.5625,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#NonSymmetricMatrixException(int,int,double)": 0.96875,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getColumn()": 0.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getRow()": 0.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getThreshold()": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(int,int)": 30.03125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(org.apache.commons.math3.linear.OpenMapRealMatrix)": 8.71875,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#add(org.apache.commons.math3.linear.OpenMapRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#computeKey(int,int)": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#copy()": 1.9375,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#createMatrix(int,int)": 6.78125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getColumnDimension()": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getEntry(int,int)": 27.125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getRowDimension()": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3.875,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3.875,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#setEntry(int,int,double)": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.OpenMapRealMatrix)": 5.8125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 5.8125,
        "org.apache.commons.math3.linear$RealLinearOperator#RealLinearOperator()": 502.2258064516129,
        "org.apache.commons.math3.linear$RealLinearOperator#isTransposable()": 0.0,
        "org.apache.commons.math3.linear$RealLinearOperator#operateTranspose(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat()": 0.96875,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 419.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 476.0967741935484,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.text.NumberFormat)": 476.0967741935484,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix)": 16.46875,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition)": 16.46875,
        "org.apache.commons.math3.linear$RealMatrixFormat#getAvailableLocales()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getColumnSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getFormat()": 468.35483870967744,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance()": 419.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance(java.util.Locale)": 476.0967741935484,
        "org.apache.commons.math3.linear$RealMatrixFormat#getPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String)": 11.625,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String,java.text.ParsePosition)": 15.5,
        "org.apache.commons.math3.linear$RealVector#RealVector()": 547.7096774193549,
        "org.apache.commons.math3.linear$RealVector#add(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#addToEntry(int,double)": 5.8125,
        "org.apache.commons.math3.linear$RealVector#checkIndex(int)": 168.5625,
        "org.apache.commons.math3.linear$RealVector#checkIndices(int,int)": 23.25,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(int)": 68.78125,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 58.125,
        "org.apache.commons.math3.linear$RealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 8.71875,
        "org.apache.commons.math3.linear$RealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$RealVector#cosine(org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$RealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 27.125,
        "org.apache.commons.math3.linear$RealVector#equals(java.lang.Object)": 0.0,
        "org.apache.commons.math3.linear$RealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#getL1Norm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#getLInfNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector#getMaxIndex()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getMaxValue()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getMinIndex()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getMinValue()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getNorm()": 21.3125,
        "org.apache.commons.math3.linear$RealVector#hashCode()": 0.0,
        "org.apache.commons.math3.linear$RealVector#iterator()": 33.90625,
        "org.apache.commons.math3.linear$RealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#mapAdd(double)": 2.90625,
        "org.apache.commons.math3.linear$RealVector#mapAddToSelf(double)": 3.875,
        "org.apache.commons.math3.linear$RealVector#mapDivide(double)": 6.78125,
        "org.apache.commons.math3.linear$RealVector#mapDivideToSelf(double)": 6.78125,
        "org.apache.commons.math3.linear$RealVector#mapMultiply(double)": 63.9375,
        "org.apache.commons.math3.linear$RealVector#mapMultiplyToSelf(double)": 12.59375,
        "org.apache.commons.math3.linear$RealVector#mapSubtract(double)": 4.84375,
        "org.apache.commons.math3.linear$RealVector#mapSubtractToSelf(double)": 4.84375,
        "org.apache.commons.math3.linear$RealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 24.21875,
        "org.apache.commons.math3.linear$RealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 4.84375,
        "org.apache.commons.math3.linear$RealVector#projection(org.apache.commons.math3.linear.RealVector)": 13.5625,
        "org.apache.commons.math3.linear$RealVector#set(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#sparseIterator()": 30.03125,
        "org.apache.commons.math3.linear$RealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#toArray()": 2.90625,
        "org.apache.commons.math3.linear$RealVector#unitVector()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#unitize()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)": 27.125,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3.875,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 7.75,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3.875,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 7.75,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$RealVector$1#hasNext()": 33.90625,
        "org.apache.commons.math3.linear$RealVector$1#next()": 33.90625,
        "org.apache.commons.math3.linear$RealVector$1#remove()": 2.90625,
        "org.apache.commons.math3.linear$RealVector$2#add(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#addToEntry(int,double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#append(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#append(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#combine(double,double,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#copy()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#cosine(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#dotProduct(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#ebeDivide(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealVector$2#getDimension()": 5.8125,
        "org.apache.commons.math3.linear$RealVector$2#getDistance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getEntry(int)": 7.75,
        "org.apache.commons.math3.linear$RealVector$2#getL1Distance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getL1Norm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getLInfNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getSubVector(int,int)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#isInfinite()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#isNaN()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#iterator()": 3.875,
        "org.apache.commons.math3.linear$RealVector$2#map(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapAdd(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapAddToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapDivide(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapDivideToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiply(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiplyToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtract(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtractToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#outerProduct(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#set(double)": 2.90625,
        "org.apache.commons.math3.linear$RealVector$2#setEntry(int,double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#sparseIterator()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#subtract(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector$2#toArray()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#unitVector()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#unitize()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2$1#hasNext()": 3.875,
        "org.apache.commons.math3.linear$RealVector$2$1#next()": 3.875,
        "org.apache.commons.math3.linear$RealVector$2$1#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2$2#hasNext()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2$2#next()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2$2#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2)": 5.8125,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#getValue()": 5.8125,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#setValue(double)": 3.875,
        "org.apache.commons.math3.linear$RealVector$Entry#RealVector$Entry(org.apache.commons.math3.linear.RealVector)": 71.6875,
        "org.apache.commons.math3.linear$RealVector$Entry#getIndex()": 59.09375,
        "org.apache.commons.math3.linear$RealVector$Entry#getValue()": 56.1875,
        "org.apache.commons.math3.linear$RealVector$Entry#setIndex(int)": 71.6875,
        "org.apache.commons.math3.linear$RealVector$Entry#setValue(double)": 24.21875,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#RealVector$SparseEntryIterator(org.apache.commons.math3.linear.RealVector)": 30.03125,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#advance(org.apache.commons.math3.linear.RealVector$Entry)": 30.03125,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#hasNext()": 30.03125,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#next()": 28.09375,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat()": 7.75,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 377.38709677419354,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.text.NumberFormat)": 377.38709677419354,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector)": 21.3125,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition)": 21.3125,
        "org.apache.commons.math3.linear$RealVectorFormat#getAvailableLocales()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getFormat()": 1.9375,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance()": 367.7096774193548,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance(java.util.Locale)": 377.38709677419354,
        "org.apache.commons.math3.linear$RealVectorFormat#getPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String)": 27.125,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String,java.text.ParsePosition)": 34.875,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#TriDiagonalTransformer(org.apache.commons.math3.linear.RealMatrix)": 13.516129032258064,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getHouseholderVectorsRef()": 0.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getMainDiagonalRef()": 5.774193548387096,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getQ()": 9.645161290322584,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getQT()": 10.612903225806448,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getSecondaryDiagonalRef()": 5.774193548387096,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getT()": 4.84375,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#transform()": 12.548387096774192,
        "org.apache.commons.math3.optimization$AbstractConvergenceChecker#<clinit>()": 58.03225806451613,
        "org.apache.commons.math3.optimization$AbstractConvergenceChecker#AbstractConvergenceChecker()": -8.741935483870968,
        "org.apache.commons.math3.optimization$AbstractConvergenceChecker#AbstractConvergenceChecker(double,double)": 66.84375,
        "org.apache.commons.math3.optimization$AbstractConvergenceChecker#getAbsoluteThreshold()": 45.45161290322581,
        "org.apache.commons.math3.optimization$AbstractConvergenceChecker#getRelativeThreshold()": 46.41935483870968,
        "org.apache.commons.math3.optimization$GoalType#<clinit>()": 92.87096774193549,
        "org.apache.commons.math3.optimization$GoalType#GoalType(java.lang.String,int)": 92.87096774193549,
        "org.apache.commons.math3.optimization$PointValuePair#PointValuePair(double[],double)": 65.7741935483871,
        "org.apache.commons.math3.optimization$PointValuePair#PointValuePair(double[],double,boolean)": 65.7741935483871,
        "org.apache.commons.math3.optimization$PointValuePair#getPoint()": 40.61290322580645,
        "org.apache.commons.math3.optimization$PointValuePair#getPointRef()": 28.09375,
        "org.apache.commons.math3.optimization$PointValuePair#writeReplace()": 0.96875,
        "org.apache.commons.math3.optimization$PointValuePair$DataTransferObject#PointValuePair$DataTransferObject(double[],double)": 0.96875,
        "org.apache.commons.math3.optimization$PointValuePair$DataTransferObject#readResolve()": 0.96875,
        "org.apache.commons.math3.optimization$SimpleValueChecker#SimpleValueChecker()": -11.64516129032258,
        "org.apache.commons.math3.optimization$SimpleValueChecker#SimpleValueChecker(double,double)": 36.8125,
        "org.apache.commons.math3.optimization$SimpleValueChecker#converged(int,org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.PointValuePair)": 17.38709677419355,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#BaseAbstractMultivariateOptimizer()": 0.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#BaseAbstractMultivariateOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker)": 47.38709677419355,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#computeObjectiveValue(double[])": 36.74193548387096,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#getConvergenceChecker()": 23.193548387096776,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#getEvaluations()": 31.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#getGoalType()": 36.74193548387096,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#getMaxEvaluations()": -6.806451612903224,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#getStartPoint()": 42.54838709677419,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[])": 29.967741935483872,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateOptimizer#optimizeInternal(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[])": 42.54838709677419,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#BaseAbstractMultivariateSimpleBoundsOptimizer()": 0.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#BaseAbstractMultivariateSimpleBoundsOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker)": 4.806451612903224,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#getLowerBound()": -0.032258064516128115,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#getUpperBound()": -0.032258064516128115,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[])": 0.0,
        "org.apache.commons.math3.optimization.direct$BaseAbstractMultivariateSimpleBoundsOptimizer#optimize(int,org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optimization.GoalType,double[],double[],double[])": 4.806451612903224,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#<clinit>()": -11.64516129032258,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#CMAESOptimizer()": -31.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#CMAESOptimizer(int)": -31.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#CMAESOptimizer(int,double[])": 0.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#CMAESOptimizer(int,double[],int,double,boolean,int,int,org.apache.commons.math3.random.RandomGenerator,boolean)": -11.64516129032258,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#CMAESOptimizer(int,double[],int,double,boolean,int,int,org.apache.commons.math3.random.RandomGenerator,boolean,org.apache.commons.math3.optimization.ConvergenceChecker)": -11.64516129032258,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#checkParameters()": -14.548387096774192,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#copyColumn(org.apache.commons.math3.linear.RealMatrix,int,org.apache.commons.math3.linear.RealMatrix,int)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#diag(org.apache.commons.math3.linear.RealMatrix)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#divide(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#doOptimize()": -14.548387096774192,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#eye(int,int)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#getStatisticsDHistory()": 0.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#getStatisticsFitnessHistory()": 0.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#getStatisticsMeanHistory()": 0.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#getStatisticsSigmaHistory()": 0.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#initializeCMA(double[])": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#inverse(int[])": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#log(org.apache.commons.math3.linear.RealMatrix)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#max(double[])": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#max(org.apache.commons.math3.linear.RealMatrix)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#min(double[])": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#min(org.apache.commons.math3.linear.RealMatrix)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#ones(int,int)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#push(double[],double)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#randn(int)": 0.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#randn1(int,int)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#repmat(org.apache.commons.math3.linear.RealMatrix,int,int)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#reverse(int[])": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#selectColumns(org.apache.commons.math3.linear.RealMatrix,int[])": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#sequence(double,double,double)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#sortedIndices(double[])": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#sqrt(org.apache.commons.math3.linear.RealMatrix)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#square(org.apache.commons.math3.linear.RealMatrix)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#sumRows(org.apache.commons.math3.linear.RealMatrix)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#times(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#triu(org.apache.commons.math3.linear.RealMatrix,int)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#updateBD(double)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#updateCovariance(boolean,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix,int[],org.apache.commons.math3.linear.RealMatrix)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#updateCovarianceDiagonalOnly(boolean,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": 0.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#updateEvolutionPaths(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer#zeros(int,int)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$DoubleIndex#CMAESOptimizer$DoubleIndex(double,int)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$DoubleIndex#compareTo(org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$DoubleIndex#equals(java.lang.Object)": 0.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$DoubleIndex#hashCode()": 0.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#CMAESOptimizer$FitnessFunction(org.apache.commons.math3.optimization.direct.CMAESOptimizer)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#decode(double[])": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#encode(double[])": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#isFeasible(double[])": 0.0,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#penalty(double[],double[])": -30.032258064516128,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#repair(double[])": -30.032258064516128,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#repairAndDecode(double[])": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#setValueRange(double)": -19.387096774193548,
        "org.apache.commons.math3.optimization.direct$CMAESOptimizer$FitnessFunction#value(double[])": -19.387096774193548,
        "org.apache.commons.math3.random$BitsStreamGenerator#BitsStreamGenerator()": 971.5806451612904,
        "org.apache.commons.math3.random$BitsStreamGenerator#clear()": 971.5806451612904,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBoolean()": 26.15625,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBytes(byte[])": 18.40625,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextDouble()": 395.7741935483871,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextFloat()": 26.15625,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextGaussian()": 36.74193548387096,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt()": 33.90625,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt(int)": 34.875,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong()": 26.15625,
        "org.apache.commons.math3.random$MersenneTwister#<clinit>()": 90.93548387096774,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister()": -9.70967741935484,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(int)": 58.125,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(int[])": 0.96875,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(long)": 42.625,
        "org.apache.commons.math3.random$MersenneTwister#next(int)": 45.45161290322581,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(int)": 90.93548387096774,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(int[])": 47.38709677419355,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(long)": 46.41935483870968,
        "org.apache.commons.math3.util$CompositeFormat#CompositeFormat()": 0.0,
        "org.apache.commons.math3.util$CompositeFormat#formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)": 88.15625,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat()": 438.35483870967744,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat(java.util.Locale)": 789.6451612903226,
        "org.apache.commons.math3.util$CompositeFormat#parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)": 106.5625,
        "org.apache.commons.math3.util$CompositeFormat#parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)": 104.625,
        "org.apache.commons.math3.util$CompositeFormat#parseNextCharacter(java.lang.String,java.text.ParsePosition)": 106.5625,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,double,java.text.ParsePosition)": 23.25,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)": 101.71875,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 2791.9032258064517,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1517.3870967741937,
        "org.apache.commons.math3.util$FastMath#abs(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#abs(int)": 313.875,
        "org.apache.commons.math3.util$FastMath#abs(long)": 749.9677419354839,
        "org.apache.commons.math3.util$FastMath#acos(double)": 21.3125,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#asin(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#atan(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 86.21875,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 73.625,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 39.71875,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 339.0625,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cos(double)": 203.19354838709677,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 273.83870967741933,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 27.125,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 65.875,
        "org.apache.commons.math3.util$FastMath#exp(double)": 677.15625,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 892.21875,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 14.53125,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 29.0625,
        "org.apache.commons.math3.util$FastMath#floor(double)": 833.125,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 65.875,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 61.03125,
        "org.apache.commons.math3.util$FastMath#log(double)": 716.0967741935484,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 931.9032258064516,
        "org.apache.commons.math3.util$FastMath#log10(double)": 54.25,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 447.5625,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 544.8064516129032,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 431.5806451612903,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 0.96875,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 259.625,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 594.1612903225806,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 33.90625,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 14.53125,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 311.5806451612903,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 311.5806451612903,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 588.03125,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 181.15625,
        "org.apache.commons.math3.util$FastMath#random()": 18.40625,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.84375,
        "org.apache.commons.math3.util$FastMath#rint(double)": 20.34375,
        "org.apache.commons.math3.util$FastMath#round(double)": 19.375,
        "org.apache.commons.math3.util$FastMath#round(float)": 2.90625,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 48.4375,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9375,
        "org.apache.commons.math3.util$FastMath#signum(double)": 11.625,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#sin(double)": 288.35483870967744,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 294.16129032258067,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 27.125,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1529.0,
        "org.apache.commons.math3.util$FastMath#tan(double)": 25.1875,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 25.1875,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 11.625,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 237.34375,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 230.29032258064518,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 230.29032258064518,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 230.29032258064518,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 230.29032258064518,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 876.71875,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 872.84375,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 917.3870967741935,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 1010.2903225806451,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 876.71875,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 876.71875,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 872.84375,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 872.84375,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 917.3870967741935,
        "org.apache.commons.math3.util$Incrementor#Incrementor()": 530.2903225806451,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int)": 584.483870967742,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int,org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback)": 585.4516129032259,
        "org.apache.commons.math3.util$Incrementor#canIncrement()": 1.9375,
        "org.apache.commons.math3.util$Incrementor#getCount()": 159.84375,
        "org.apache.commons.math3.util$Incrementor#getMaximalCount()": -0.032258064516128115,
        "org.apache.commons.math3.util$Incrementor#incrementCount()": 533.1935483870968,
        "org.apache.commons.math3.util$Incrementor#incrementCount(int)": 0.96875,
        "org.apache.commons.math3.util$Incrementor#resetCount()": 550.6129032258065,
        "org.apache.commons.math3.util$Incrementor#setMaximalCount(int)": 515.7741935483871,
        "org.apache.commons.math3.util$Incrementor$1#trigger(int)": 17.4375,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 0.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 45.53125,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 46.5,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 137.5625,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 35.84375,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 62.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 5.8125,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": -11.64516129032258,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 5.8125,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 4.84375,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.96875,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.96875,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 48.4375,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 49.40625,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 2.90625,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": 2.90625,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": 1.9375,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 8.71875,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 8.71875,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 7.75,
        "org.apache.commons.math3.util$MathArrays$2#<clinit>()": 137.5625,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 142.40625,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 142.40625,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 0.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 16.46875,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 0.96875,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 734.483870967742,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 74.59375,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 3.875,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 3.875,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 1.9375,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 1.9375,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 45.53125,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 8.71875,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 34.875,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 4.84375,
        "org.apache.commons.math3.util$Pair#Pair(java.lang.Object,java.lang.Object)": 242.8709677419355,
        "org.apache.commons.math3.util$Pair#Pair(org.apache.commons.math3.util.Pair)": 0.0,
        "org.apache.commons.math3.util$Pair#equals(java.lang.Object)": 0.96875,
        "org.apache.commons.math3.util$Pair#getFirst()": 83.3125,
        "org.apache.commons.math3.util$Pair#getKey()": 131.58064516129033,
        "org.apache.commons.math3.util$Pair#getSecond()": 83.3125,
        "org.apache.commons.math3.util$Pair#getValue()": 90.93548387096774,
        "org.apache.commons.math3.util$Pair#hashCode()": 0.96875,
        "org.apache.commons.math3.util$Precision#<clinit>()": 1019.0,
        "org.apache.commons.math3.util$Precision#Precision()": 0.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 13.516129032258064,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 25.1875,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 141.4375,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 358.03225806451616,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 691.9032258064516,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 0.96875,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 77.5,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 126.90625,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 46.5,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 76.53125,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsWithRelativeTolerance(double,double,double)": 0.96875,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 0.96875
    },
    "Math-21": {
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 147.52941176470588,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 166.94117647058823,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 2.911764705882353,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.676470588235293,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 41.73529411764706,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.9705882352941176,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 731.8235294117648,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 6.794117647058823,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 592.0588235294117,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 12.617647058823529,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 46.588235294117645,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 66.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 45.61764705882353,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.9705882352941176,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int)": 0.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int,java.lang.Class)": 12.617647058823529,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(java.lang.Integer[],java.lang.Integer[])": 0.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,java.lang.Integer[],java.lang.Integer[])": 37.85294117647059,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimension(int)": 0.9705882352941176,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimensions()": 0.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimension(int)": 0.9705882352941176,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimensions()": 0.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 10.676470588235293,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 26.205882352941178,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 6.794117647058823,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 17.470588235294116,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 35.911764705882355,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 77.6470588235294,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 43.6764705882353,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 69.88235294117646,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 64.05882352941177,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 195.08823529411765,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.911764705882353,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.911764705882353,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 29.11764705882353,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 176.64705882352942,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 0.9705882352941176,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 0.9705882352941176,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 0.9705882352941176,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 7.764705882352941,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix()": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field)": 69.88235294117646,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field,int,int)": 99.97058823529412,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 3.8823529411764706,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int)": 65.02941176470588,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int,int)": 115.5,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkAdditionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 9.705882352941176,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkColumnIndex(int)": 122.29411764705883,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkMultiplicationCompatible(org.apache.commons.math3.linear.FieldMatrix)": 17.470588235294116,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkRowIndex(int)": 122.29411764705883,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int,int,int,int)": 9.705882352941176,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int[],int[])": 4.852941176470588,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubtractionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3.8823529411764706,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int,int,int,int,org.apache.commons.math3.FieldElement[][])": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int[],int[],org.apache.commons.math3.FieldElement[][])": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#equals(java.lang.Object)": 31.058823529411764,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[][])": 88.32352941176471,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumn(int)": 9.705882352941176,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnMatrix(int)": 2.911764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnVector(int)": 5.823529411764706,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getData()": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getField()": 127.1470588235294,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRow(int)": 6.794117647058823,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowMatrix(int)": 3.8823529411764706,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowVector(int)": 2.911764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int,int,int,int)": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int[],int[])": 2.911764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getTrace()": 2.911764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#hashCode()": 2.911764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#isSquare()": 36.88235294117647,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 9.705882352941176,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.linear.FieldVector)": 2.911764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#power(int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldMatrix)": 2.911764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldVector)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#toString()": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#transpose()": 5.823529411764706,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 2.911764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 22.323529411764707,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$1#visit(int,int,org.apache.commons.math3.FieldElement)": 2.911764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#start(int,int,int,int,int,int)": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#visit(int,int,org.apache.commons.math3.FieldElement)": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$3#visit(int,int,org.apache.commons.math3.FieldElement)": 5.823529411764706,
        "org.apache.commons.math3.linear$AbstractRealMatrix#<clinit>()": 484.48387096774195,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix()": 297.7096774193548,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix(int,int)": 390.61290322580646,
        "org.apache.commons.math3.linear$AbstractRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 15.529411764705882,
        "org.apache.commons.math3.linear$AbstractRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int,int,int,int,double[][])": 24.264705882352942,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int[],int[],double[][])": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#equals(java.lang.Object)": 50.470588235294116,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumn(int)": 33.970588235294116,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnMatrix(int)": 15.529411764705882,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnVector(int)": 15.529411764705882,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getData()": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getFrobeniusNorm()": 12.617647058823529,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getNorm()": 62.54838709677419,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRow(int)": 45.61764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowMatrix(int)": 3.8823529411764706,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowVector(int)": 27.176470588235293,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int,int,int,int)": 9.705882352941176,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int[],int[])": 2.911764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getTrace()": 2.911764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#hashCode()": 6.794117647058823,
        "org.apache.commons.math3.linear$AbstractRealMatrix#isSquare()": 138.7941176470588,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 84.80645161290323,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(double[])": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(org.apache.commons.math3.linear.RealVector)": 38.8235294117647,
        "org.apache.commons.math3.linear$AbstractRealMatrix#power(int)": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(double[])": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealMatrix)": 2.911764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarAdd(double)": 13.588235294117647,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarMultiply(double)": 15.529411764705882,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumn(int,double[])": 4.852941176470588,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 20.38235294117647,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRow(int,double[])": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 28.147058823529413,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setSubMatrix(double[][],int,int)": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 60.53125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#toString()": 5.823529411764706,
        "org.apache.commons.math3.linear$AbstractRealMatrix#transpose()": 139.96774193548387,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 7.764705882352941,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4.852941176470588,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 141.90322580645162,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 23.294117647058822,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#end()": 62.54838709677419,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#start(int,int,int,int,int,int)": 62.54838709677419,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#visit(int,int,double)": 62.54838709677419,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#end()": 12.617647058823529,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#start(int,int,int,int,int,int)": 12.617647058823529,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#visit(int,int,double)": 12.617647058823529,
        "org.apache.commons.math3.linear$AbstractRealMatrix$3#visit(int,int,double)": 2.911764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#start(int,int,int,int,int,int)": 24.264705882352942,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#visit(int,int,double)": 24.264705882352942,
        "org.apache.commons.math3.linear$AbstractRealMatrix$5#visit(int,int,double)": 139.96774193548387,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field)": 1.9411764705882353,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,int,int)": 33.970588235294116,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][])": 47.55882352941177,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],boolean)": 30.08823529411765,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][])": 37.85294117647059,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][],boolean)": 17.470588235294116,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#add(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 1.9411764705882353,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copy()": 1.9411764705882353,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyIn(org.apache.commons.math3.FieldElement[][])": 47.55882352941177,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyOut()": 32.029411764705884,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#createMatrix(int,int)": 17.470588235294116,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getColumnDimension()": 76.67647058823529,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getData()": 30.08823529411765,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getDataRef()": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getEntry(int,int)": 64.05882352941177,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getRowDimension()": 76.67647058823529,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 0.9705882352941176,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 1.9411764705882353,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 0.9705882352941176,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 36.88235294117647,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 47.55882352941177,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 0.9705882352941176,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.9705882352941176,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.9705882352941176,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 1.9411764705882353,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 21.352941176470587,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9411764705882353,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix()": 3.8823529411764706,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[])": 3.8823529411764706,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][])": 247.38709677419354,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][],boolean)": 101.91176470588235,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(int,int)": 256.0967741935484,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#add(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 1.9411764705882353,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copy()": 12.617647058823529,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyIn(double[][])": 249.32258064516128,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyOut()": 177.70967741935485,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#createMatrix(int,int)": 169.96774193548387,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getColumnDimension()": 332.5483870967742,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getData()": 170.93548387096774,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getDataRef()": 41.73529411764706,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getEntry(int,int)": 248.35483870967744,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getRowDimension()": 331.5806451612903,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 10.676470588235293,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiplyEntry(int,int,double)": 3.8823529411764706,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#operate(double[])": 41.73529411764706,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#preMultiply(double[])": 1.9411764705882353,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setEntry(int,int,double)": 247.38709677419354,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setSubMatrix(double[][],int,int)": 249.32258064516128,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 0.9705882352941176,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.9705882352941176,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 57.70967741935483,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3.8823529411764706,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 140.93548387096774,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 23.294117647058822,
        "org.apache.commons.math3.linear$ArrayRealVector#<clinit>()": 399.88235294117646,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector()": 2.911764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[])": 196.05882352941177,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],boolean)": 281.47058823529414,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],double[])": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],org.apache.commons.math3.linear.ArrayRealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int)": 132.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int,double)": 2.911764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[])": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[],int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean)": 99.97058823529412,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,double[])": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector)": 2.911764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.RealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.ArrayRealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#add(org.apache.commons.math3.linear.RealVector)": 8.735294117647058,
        "org.apache.commons.math3.linear$ArrayRealVector#addToEntry(int,double)": 2.911764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#append(double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.ArrayRealVector)": 0.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.RealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(int)": 139.76470588235293,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 16.5,
        "org.apache.commons.math3.linear$ArrayRealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 16.5,
        "org.apache.commons.math3.linear$ArrayRealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 39.794117647058826,
        "org.apache.commons.math3.linear$ArrayRealVector#copy()": 99.0,
        "org.apache.commons.math3.linear$ArrayRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 86.38235294117646,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": 6.794117647058823,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 12.617647058823529,
        "org.apache.commons.math3.linear$ArrayRealVector#equals(java.lang.Object)": 45.61764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#getDataRef()": 50.470588235294116,
        "org.apache.commons.math3.linear$ArrayRealVector#getDimension()": 288.2647058823529,
        "org.apache.commons.math3.linear$ArrayRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 4.852941176470588,
        "org.apache.commons.math3.linear$ArrayRealVector#getEntry(int)": 236.8235294117647,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3.8823529411764706,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Norm()": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3.8823529411764706,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfNorm()": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#getNorm()": 54.35294117647059,
        "org.apache.commons.math3.linear$ArrayRealVector#getSubVector(int,int)": 6.794117647058823,
        "org.apache.commons.math3.linear$ArrayRealVector#hashCode()": 2.911764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#isInfinite()": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#isNaN()": 49.5,
        "org.apache.commons.math3.linear$ArrayRealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 2.911764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#mapAddToSelf(double)": 2.911764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#mapDivideToSelf(double)": 4.852941176470588,
        "org.apache.commons.math3.linear$ArrayRealVector#mapMultiplyToSelf(double)": 55.3235294117647,
        "org.apache.commons.math3.linear$ArrayRealVector#mapSubtractToSelf(double)": 2.911764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3.8823529411764706,
        "org.apache.commons.math3.linear$ArrayRealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 2.911764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#set(double)": 43.6764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#setEntry(int,double)": 70.8529411764706,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,double[])": 24.264705882352942,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 25.235294117647058,
        "org.apache.commons.math3.linear$ArrayRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 73.76470588235294,
        "org.apache.commons.math3.linear$ArrayRealVector#toArray()": 99.0,
        "org.apache.commons.math3.linear$ArrayRealVector#toString()": 0.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3.8823529411764706,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3.8823529411764706,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(int,int,org.apache.commons.math3.FieldElement[][],boolean)": 33.970588235294116,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.Field,int,int)": 26.205882352941178,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.FieldElement[][])": 33.970588235294116,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.BlockFieldMatrix)": 3.8823529411764706,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockHeight(int)": 39.794117647058826,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockWidth(int)": 44.64705882352941,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copy()": 0.9705882352941176,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copyBlockPart(org.apache.commons.math3.FieldElement[],int,int,int,int,int,org.apache.commons.math3.FieldElement[],int,int,int)": 2.911764705882353,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createBlocksLayout(org.apache.commons.math3.Field,int,int)": 26.205882352941178,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createMatrix(int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumn(int)": 4.852941176470588,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnDimension()": 39.794117647058826,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnMatrix(int)": 2.911764705882353,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnVector(int)": 2.911764705882353,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getData()": 4.852941176470588,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getEntry(int,int)": 27.176470588235293,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRow(int)": 4.852941176470588,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowDimension()": 40.76470588235294,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowMatrix(int)": 3.8823529411764706,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowVector(int)": 2.911764705882353,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getSubMatrix(int,int,int,int)": 2.911764705882353,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.BlockFieldMatrix)": 6.794117647058823,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 5.823529411764706,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 2.911764705882353,
        "org.apache.commons.math3.linear$BlockFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 3.8823529411764706,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 0.9705882352941176,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 3.8823529411764706,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 4.852941176470588,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 3.8823529411764706,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 0.9705882352941176,
        "org.apache.commons.math3.linear$BlockFieldMatrix#toBlocksLayout(org.apache.commons.math3.FieldElement[][])": 33.970588235294116,
        "org.apache.commons.math3.linear$BlockFieldMatrix#transpose()": 2.911764705882353,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.9705882352941176,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.9705882352941176,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.9705882352941176,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(double[][])": 112.58823529411765,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int)": 69.88235294117646,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int,double[][],boolean)": 132.97058823529412,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.BlockRealMatrix)": 3.8823529411764706,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockRealMatrix#addToEntry(int,int,double)": 0.9705882352941176,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockHeight(int)": 139.76470588235293,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockWidth(int)": 147.52941176470588,
        "org.apache.commons.math3.linear$BlockRealMatrix#copy()": 4.852941176470588,
        "org.apache.commons.math3.linear$BlockRealMatrix#copyBlockPart(double[],int,int,int,int,int,double[],int,int,int)": 3.8823529411764706,
        "org.apache.commons.math3.linear$BlockRealMatrix#createBlocksLayout(int,int)": 89.29411764705883,
        "org.apache.commons.math3.linear$BlockRealMatrix#createMatrix(int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumn(int)": 20.38235294117647,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnDimension()": 139.76470588235293,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnMatrix(int)": 2.911764705882353,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnVector(int)": 2.911764705882353,
        "org.apache.commons.math3.linear$BlockRealMatrix#getData()": 71.82352941176471,
        "org.apache.commons.math3.linear$BlockRealMatrix#getEntry(int,int)": 41.73529411764706,
        "org.apache.commons.math3.linear$BlockRealMatrix#getFrobeniusNorm()": 0.9705882352941176,
        "org.apache.commons.math3.linear$BlockRealMatrix#getNorm()": 22.323529411764707,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRow(int)": 4.852941176470588,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowDimension()": 140.73529411764707,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowMatrix(int)": 3.8823529411764706,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowVector(int)": 2.911764705882353,
        "org.apache.commons.math3.linear$BlockRealMatrix#getSubMatrix(int,int,int,int)": 3.8823529411764706,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.BlockRealMatrix)": 12.617647058823529,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 12.617647058823529,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#operate(double[])": 39.794117647058826,
        "org.apache.commons.math3.linear$BlockRealMatrix#preMultiply(double[])": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarAdd(double)": 3.8823529411764706,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarMultiply(double)": 0.9705882352941176,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumn(int,double[])": 7.764705882352941,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockRealMatrix#setEntry(int,int,double)": 23.294117647058822,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRow(int,double[])": 3.8823529411764706,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockRealMatrix#setSubMatrix(double[][],int,int)": 1.9411764705882353,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.BlockRealMatrix)": 18.441176470588236,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 21.352941176470587,
        "org.apache.commons.math3.linear$BlockRealMatrix#toBlocksLayout(double[][])": 112.58823529411765,
        "org.apache.commons.math3.linear$BlockRealMatrix#transpose()": 26.205882352941178,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 8.735294117647058,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 2.911764705882353,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3.8823529411764706,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.9705882352941176,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 0.9705882352941176,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#DefaultRealMatrixPreservingVisitor()": 145.7741935483871,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#end()": 145.7741935483871,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#start(int,int,int,int,int,int)": 141.90322580645162,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#visit(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#MatrixDimensionMismatchException(int,int,int,int)": 37.85294117647059,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedColumnDimension()": 0.9705882352941176,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedRowDimension()": 0.9705882352941176,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongColumnDimension()": 0.9705882352941176,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongRowDimension()": 0.9705882352941176,
        "org.apache.commons.math3.linear$MatrixUtils#<clinit>()": 400.2903225806452,
        "org.apache.commons.math3.linear$MatrixUtils#MatrixUtils()": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#bigFractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 14.558823529411764,
        "org.apache.commons.math3.linear$MatrixUtils#checkAdditionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 29.11764705882353,
        "org.apache.commons.math3.linear$MatrixUtils#checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 361.5806451612903,
        "org.apache.commons.math3.linear$MatrixUtils#checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)": 328.6774193548387,
        "org.apache.commons.math3.linear$MatrixUtils#checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 109.96774193548387,
        "org.apache.commons.math3.linear$MatrixUtils#checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 360.61290322580646,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int,int,int)": 40.76470588235294,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int[],int[])": 4.852941176470588,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubtractionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 78.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.9705882352941176,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnRealMatrix(double[])": 12.617647058823529,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldDiagonalMatrix(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldIdentityMatrix(org.apache.commons.math3.Field,int)": 1.9411764705882353,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.Field,int,int)": 1.9411764705882353,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.FieldElement[][])": 0.9705882352941176,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldVector(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealDiagonalMatrix(double[])": 18.441176470588236,
        "org.apache.commons.math3.linear$MatrixUtils#createRealIdentityMatrix(int)": 52.411764705882355,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(double[][])": 158.375,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(int,int)": 94.48387096774194,
        "org.apache.commons.math3.linear$MatrixUtils#createRealVector(double[])": 0.9705882352941176,
        "org.apache.commons.math3.linear$MatrixUtils#createRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.9705882352941176,
        "org.apache.commons.math3.linear$MatrixUtils#createRowRealMatrix(double[])": 0.9705882352941176,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealMatrix(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 0.9705882352941176,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealVector(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 0.9705882352941176,
        "org.apache.commons.math3.linear$MatrixUtils#fractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 0.9705882352941176,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealMatrix(org.apache.commons.math3.linear.RealMatrix,java.io.ObjectOutputStream)": 0.9705882352941176,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealVector(org.apache.commons.math3.linear.RealVector,java.io.ObjectOutputStream)": 0.9705882352941176,
        "org.apache.commons.math3.linear$MatrixUtils#solveLowerTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$MatrixUtils#solveUpperTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#MatrixUtils$BigFractionMatrixConverter()": 14.558823529411764,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#getConvertedMatrix()": 14.558823529411764,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#start(int,int,int,int,int,int)": 14.558823529411764,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.BigFraction)": 14.558823529411764,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#MatrixUtils$FractionMatrixConverter()": 0.9705882352941176,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#getConvertedMatrix()": 0.9705882352941176,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#start(int,int,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.Fraction)": 0.9705882352941176,
        "org.apache.commons.math3.linear$NonPositiveDefiniteMatrixException#NonPositiveDefiniteMatrixException(double,int,double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$NonPositiveDefiniteMatrixException#getColumn()": 0.0,
        "org.apache.commons.math3.linear$NonPositiveDefiniteMatrixException#getRow()": 0.0,
        "org.apache.commons.math3.linear$NonPositiveDefiniteMatrixException#getThreshold()": 0.0,
        "org.apache.commons.math3.linear$NonSquareMatrixException#NonSquareMatrixException(int,int)": 13.588235294117647,
        "org.apache.commons.math3.linear$RealLinearOperator#RealLinearOperator()": 519.3225806451613,
        "org.apache.commons.math3.linear$RealLinearOperator#isTransposable()": 0.0,
        "org.apache.commons.math3.linear$RealLinearOperator#operateTranspose(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat()": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 400.2903225806452,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 493.19354838709677,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.text.NumberFormat)": 493.19354838709677,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix)": 16.5,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition)": 16.5,
        "org.apache.commons.math3.linear$RealMatrixFormat#getAvailableLocales()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getColumnSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getFormat()": 485.4516129032258,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance()": 400.2903225806452,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance(java.util.Locale)": 493.19354838709677,
        "org.apache.commons.math3.linear$RealMatrixFormat#getPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String)": 11.647058823529411,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String,java.text.ParsePosition)": 15.529411764705882,
        "org.apache.commons.math3.linear$RealVector#RealVector()": 580.4117647058823,
        "org.apache.commons.math3.linear$RealVector#add(org.apache.commons.math3.linear.RealVector)": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector#addToEntry(int,double)": 5.823529411764706,
        "org.apache.commons.math3.linear$RealVector#checkIndex(int)": 168.88235294117646,
        "org.apache.commons.math3.linear$RealVector#checkIndices(int,int)": 23.294117647058822,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(int)": 68.91176470588235,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 58.23529411764706,
        "org.apache.commons.math3.linear$RealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 8.735294117647058,
        "org.apache.commons.math3.linear$RealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 16.5,
        "org.apache.commons.math3.linear$RealVector#cosine(org.apache.commons.math3.linear.RealVector)": 16.5,
        "org.apache.commons.math3.linear$RealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 27.176470588235293,
        "org.apache.commons.math3.linear$RealVector#equals(java.lang.Object)": 0.0,
        "org.apache.commons.math3.linear$RealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector#getL1Norm()": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector#getLInfNorm()": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector#getMaxIndex()": 4.852941176470588,
        "org.apache.commons.math3.linear$RealVector#getMaxValue()": 4.852941176470588,
        "org.apache.commons.math3.linear$RealVector#getMinIndex()": 4.852941176470588,
        "org.apache.commons.math3.linear$RealVector#getMinValue()": 4.852941176470588,
        "org.apache.commons.math3.linear$RealVector#getNorm()": 21.352941176470587,
        "org.apache.commons.math3.linear$RealVector#hashCode()": 0.0,
        "org.apache.commons.math3.linear$RealVector#iterator()": 33.970588235294116,
        "org.apache.commons.math3.linear$RealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector#mapAdd(double)": 2.911764705882353,
        "org.apache.commons.math3.linear$RealVector#mapAddToSelf(double)": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector#mapDivide(double)": 6.794117647058823,
        "org.apache.commons.math3.linear$RealVector#mapDivideToSelf(double)": 6.794117647058823,
        "org.apache.commons.math3.linear$RealVector#mapMultiply(double)": 64.05882352941177,
        "org.apache.commons.math3.linear$RealVector#mapMultiplyToSelf(double)": 12.617647058823529,
        "org.apache.commons.math3.linear$RealVector#mapSubtract(double)": 4.852941176470588,
        "org.apache.commons.math3.linear$RealVector#mapSubtractToSelf(double)": 4.852941176470588,
        "org.apache.commons.math3.linear$RealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 24.264705882352942,
        "org.apache.commons.math3.linear$RealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 4.852941176470588,
        "org.apache.commons.math3.linear$RealVector#projection(org.apache.commons.math3.linear.RealVector)": 13.588235294117647,
        "org.apache.commons.math3.linear$RealVector#set(double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector#sparseIterator()": 30.08823529411765,
        "org.apache.commons.math3.linear$RealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector#toArray()": 2.911764705882353,
        "org.apache.commons.math3.linear$RealVector#unitVector()": 4.852941176470588,
        "org.apache.commons.math3.linear$RealVector#unitize()": 4.852941176470588,
        "org.apache.commons.math3.linear$RealVector#unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)": 27.176470588235293,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 7.764705882352941,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 7.764705882352941,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector$1#hasNext()": 33.970588235294116,
        "org.apache.commons.math3.linear$RealVector$1#next()": 33.970588235294116,
        "org.apache.commons.math3.linear$RealVector$1#remove()": 2.911764705882353,
        "org.apache.commons.math3.linear$RealVector$2#add(org.apache.commons.math3.linear.RealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#addToEntry(int,double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#append(double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#append(org.apache.commons.math3.linear.RealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#combine(double,double,org.apache.commons.math3.linear.RealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#copy()": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#cosine(org.apache.commons.math3.linear.RealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#dotProduct(org.apache.commons.math3.linear.RealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#ebeDivide(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealVector$2#getDimension()": 5.823529411764706,
        "org.apache.commons.math3.linear$RealVector$2#getDistance(org.apache.commons.math3.linear.RealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#getEntry(int)": 7.764705882352941,
        "org.apache.commons.math3.linear$RealVector$2#getL1Distance(org.apache.commons.math3.linear.RealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#getL1Norm()": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#getLInfNorm()": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#getNorm()": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#getSubVector(int,int)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#isInfinite()": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#isNaN()": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#iterator()": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector$2#map(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#mapAdd(double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#mapAddToSelf(double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#mapDivide(double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#mapDivideToSelf(double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiply(double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiplyToSelf(double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtract(double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtractToSelf(double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#outerProduct(org.apache.commons.math3.linear.RealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#set(double)": 2.911764705882353,
        "org.apache.commons.math3.linear$RealVector$2#setEntry(int,double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#sparseIterator()": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#subtract(org.apache.commons.math3.linear.RealVector)": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector$2#toArray()": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#unitVector()": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#unitize()": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2$1#hasNext()": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector$2$1#next()": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector$2$1#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2$2#hasNext()": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2$2#next()": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2$2#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2)": 5.823529411764706,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#getValue()": 5.823529411764706,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#setValue(double)": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector$Entry#RealVector$Entry(org.apache.commons.math3.linear.RealVector)": 71.82352941176471,
        "org.apache.commons.math3.linear$RealVector$Entry#getIndex()": 59.205882352941174,
        "org.apache.commons.math3.linear$RealVector$Entry#getValue()": 56.294117647058826,
        "org.apache.commons.math3.linear$RealVector$Entry#setIndex(int)": 71.82352941176471,
        "org.apache.commons.math3.linear$RealVector$Entry#setValue(double)": 24.264705882352942,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#RealVector$SparseEntryIterator(org.apache.commons.math3.linear.RealVector)": 30.08823529411765,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#advance(org.apache.commons.math3.linear.RealVector$Entry)": 30.08823529411765,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#hasNext()": 30.08823529411765,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#next()": 28.147058823529413,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#remove()": 0.0,
        "org.apache.commons.math3.linear$RectangularCholeskyDecomposition#RectangularCholeskyDecomposition(org.apache.commons.math3.linear.RealMatrix,double)": -5.193548387096774,
        "org.apache.commons.math3.linear$RectangularCholeskyDecomposition#getRank()": -26.151515151515152,
        "org.apache.commons.math3.linear$RectangularCholeskyDecomposition#getRootMatrix()": -5.193548387096774,
        "org.apache.commons.math3.util$CompositeFormat#CompositeFormat()": 0.0,
        "org.apache.commons.math3.util$CompositeFormat#formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)": 88.32352941176471,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat()": 419.64516129032256,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat(java.util.Locale)": 806.741935483871,
        "org.apache.commons.math3.util$CompositeFormat#parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)": 106.76470588235294,
        "org.apache.commons.math3.util$CompositeFormat#parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)": 104.82352941176471,
        "org.apache.commons.math3.util$CompositeFormat#parseNextCharacter(java.lang.String,java.text.ParsePosition)": 106.76470588235294,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,double,java.text.ParsePosition)": 23.294117647058822,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)": 101.91176470588235,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 2785.7741935483873,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 0.9705882352941176,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1525.774193548387,
        "org.apache.commons.math3.util$FastMath#abs(float)": 1.9411764705882353,
        "org.apache.commons.math3.util$FastMath#abs(int)": 314.47058823529414,
        "org.apache.commons.math3.util$FastMath#abs(long)": 744.7575757575758,
        "org.apache.commons.math3.util$FastMath#acos(double)": 20.38235294117647,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 1.9411764705882353,
        "org.apache.commons.math3.util$FastMath#asin(double)": 21.352941176470587,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 1.9411764705882353,
        "org.apache.commons.math3.util$FastMath#atan(double)": 22.323529411764707,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 85.41176470588235,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 73.76470588235294,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 1.9411764705882353,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 39.794117647058826,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 339.70588235294116,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 12.617647058823529,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9411764705882353,
        "org.apache.commons.math3.util$FastMath#cos(double)": 231.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 301.8529411764706,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 26.205882352941178,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 65.02941176470588,
        "org.apache.commons.math3.util$FastMath#exp(double)": 676.5,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 891.0,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 14.558823529411764,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 28.147058823529413,
        "org.apache.commons.math3.util$FastMath#floor(double)": 834.7058823529412,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 65.02941176470588,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9411764705882353,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 60.1764705882353,
        "org.apache.commons.math3.util$FastMath#log(double)": 749.2941176470588,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.9705882352941176,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 965.7352941176471,
        "org.apache.commons.math3.util$FastMath#log10(double)": 54.35294117647059,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 448.4117647058824,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 558.0322580645161,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9411764705882353,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 376.5882352941176,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 0.9705882352941176,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 260.11764705882354,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9411764705882353,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 613.4117647058823,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 33.970588235294116,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 13.588235294117647,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.911764705882353,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 1.9411764705882353,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.9705882352941176,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 339.70588235294116,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 339.70588235294116,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 589.1470588235294,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 168.88235294117646,
        "org.apache.commons.math3.util$FastMath#random()": 18.441176470588236,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.852941176470588,
        "org.apache.commons.math3.util$FastMath#rint(double)": 20.38235294117647,
        "org.apache.commons.math3.util$FastMath#round(double)": 19.41176470588235,
        "org.apache.commons.math3.util$FastMath#round(float)": 2.911764705882353,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 47.55882352941177,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9411764705882353,
        "org.apache.commons.math3.util$FastMath#signum(double)": 11.647058823529411,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9411764705882353,
        "org.apache.commons.math3.util$FastMath#sin(double)": 316.4117647058824,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 322.2352941176471,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 26.205882352941178,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1536.4193548387098,
        "org.apache.commons.math3.util$FastMath#tan(double)": 25.235294117647058,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 25.235294117647058,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 11.647058823529411,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3.8823529411764706,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3.8823529411764706,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 237.7941176470588,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 0.9705882352941176,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 260.11764705882354,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 260.11764705882354,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 260.11764705882354,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 260.11764705882354,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 875.4705882352941,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 871.5882352941177,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 951.1764705882352,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 0.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 16.5,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 0.9705882352941176,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 751.5806451612904,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 74.73529411764706,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 3.8823529411764706,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 3.8823529411764706,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 1.9411764705882353,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 1.9411764705882353,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 45.61764705882353,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 8.735294117647058,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 34.94117647058823,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 4.852941176470588
    },
    "Math-22": {
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#BaseAbstractUnivariateIntegrator(double,double)": 0.0,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#BaseAbstractUnivariateIntegrator(double,double,int,int)": 32.96969696969697,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#BaseAbstractUnivariateIntegrator(int,int)": 9.696969696969697,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#computeObjectiveValue(double)": 30.060606060606062,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#getAbsoluteAccuracy()": 29.09090909090909,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#getEvaluations()": 7.757575757575758,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#getIterations()": 7.757575757575758,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#getMax()": 30.060606060606062,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#getMaximalIterationCount()": 0.0,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#getMin()": 30.060606060606062,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#getMinimalIterationCount()": 30.060606060606062,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#getRelativeAccuracy()": 30.060606060606062,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#integrate(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 32.96969696969697,
        "org.apache.commons.math3.analysis.integration$BaseAbstractUnivariateIntegrator#setup(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 32.96969696969697,
        "org.apache.commons.math3.analysis.integration$IterativeLegendreGaussIntegrator#<clinit>()": 19.393939393939394,
        "org.apache.commons.math3.analysis.integration$IterativeLegendreGaussIntegrator#IterativeLegendreGaussIntegrator(int,double,double)": 10.666666666666666,
        "org.apache.commons.math3.analysis.integration$IterativeLegendreGaussIntegrator#IterativeLegendreGaussIntegrator(int,double,double,int,int)": 19.393939393939394,
        "org.apache.commons.math3.analysis.integration$IterativeLegendreGaussIntegrator#IterativeLegendreGaussIntegrator(int,int,int)": 0.9696969696969697,
        "org.apache.commons.math3.analysis.integration$IterativeLegendreGaussIntegrator#doIntegrate()": 19.393939393939394,
        "org.apache.commons.math3.analysis.integration$IterativeLegendreGaussIntegrator#stage(int)": 19.393939393939394,
        "org.apache.commons.math3.analysis.integration$IterativeLegendreGaussIntegrator$1#value(double)": 19.393939393939394,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#AbstractRealDistribution()": 0.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#AbstractRealDistribution(org.apache.commons.math3.random.RandomGenerator)": 554.9677419354839,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#cumulativeProbability(double,double)": 39.75757575757576,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#getSolverAbsoluteAccuracy()": 1.9393939393939394,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#inverseCumulativeProbability(double)": 102.78787878787878,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#probability(double)": 0.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#probability(double,double)": 42.666666666666664,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#reseedRandomGenerator(long)": 10.666666666666666,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#sample()": 68.84848484848484,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#sample(int)": 11.636363636363637,
        "org.apache.commons.math3.distribution$AbstractRealDistribution$1#value(double)": 91.15151515151516,
        "org.apache.commons.math3.distribution$FDistribution#FDistribution(double,double)": -1.9375,
        "org.apache.commons.math3.distribution$FDistribution#FDistribution(double,double,double)": -1.9375,
        "org.apache.commons.math3.distribution$FDistribution#FDistribution(org.apache.commons.math3.random.RandomGenerator,double,double,double)": -1.9375,
        "org.apache.commons.math3.distribution$FDistribution#calculateNumericalVariance()": 16.484848484848484,
        "org.apache.commons.math3.distribution$FDistribution#cumulativeProbability(double)": 22.303030303030305,
        "org.apache.commons.math3.distribution$FDistribution#density(double)": -28.09375,
        "org.apache.commons.math3.distribution$FDistribution#getDenominatorDegreesOfFreedom()": 17.454545454545453,
        "org.apache.commons.math3.distribution$FDistribution#getNumeratorDegreesOfFreedom()": 16.484848484848484,
        "org.apache.commons.math3.distribution$FDistribution#getNumericalMean()": 16.484848484848484,
        "org.apache.commons.math3.distribution$FDistribution#getNumericalVariance()": 16.484848484848484,
        "org.apache.commons.math3.distribution$FDistribution#getSolverAbsoluteAccuracy()": 15.515151515151516,
        "org.apache.commons.math3.distribution$FDistribution#getSupportLowerBound()": -14.53125,
        "org.apache.commons.math3.distribution$FDistribution#getSupportUpperBound()": 17.454545454545453,
        "org.apache.commons.math3.distribution$FDistribution#isSupportConnected()": 15.515151515151516,
        "org.apache.commons.math3.distribution$FDistribution#isSupportLowerBoundInclusive()": -31.0,
        "org.apache.commons.math3.distribution$FDistribution#isSupportUpperBoundInclusive()": 0.9696969696969697,
        "org.apache.commons.math3.distribution$UniformRealDistribution#UniformRealDistribution()": 0.0,
        "org.apache.commons.math3.distribution$UniformRealDistribution#UniformRealDistribution(double,double)": -14.53125,
        "org.apache.commons.math3.distribution$UniformRealDistribution#UniformRealDistribution(double,double,double)": -14.53125,
        "org.apache.commons.math3.distribution$UniformRealDistribution#UniformRealDistribution(org.apache.commons.math3.random.RandomGenerator,double,double,double)": -11.625,
        "org.apache.commons.math3.distribution$UniformRealDistribution#cumulativeProbability(double)": 4.848484848484849,
        "org.apache.commons.math3.distribution$UniformRealDistribution#density(double)": -28.09375,
        "org.apache.commons.math3.distribution$UniformRealDistribution#getNumericalMean()": 2.909090909090909,
        "org.apache.commons.math3.distribution$UniformRealDistribution#getNumericalVariance()": 2.909090909090909,
        "org.apache.commons.math3.distribution$UniformRealDistribution#getSolverAbsoluteAccuracy()": 1.9393939393939394,
        "org.apache.commons.math3.distribution$UniformRealDistribution#getSupportLowerBound()": 3.878787878787879,
        "org.apache.commons.math3.distribution$UniformRealDistribution#getSupportUpperBound()": -28.09375,
        "org.apache.commons.math3.distribution$UniformRealDistribution#isSupportConnected()": 1.9393939393939394,
        "org.apache.commons.math3.distribution$UniformRealDistribution#isSupportLowerBoundInclusive()": 0.9696969696969697,
        "org.apache.commons.math3.distribution$UniformRealDistribution#isSupportUpperBoundInclusive()": -31.0,
        "org.apache.commons.math3.distribution$UniformRealDistribution#sample()": 7.757575757575758,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 730.1818181818181,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 6.787878787878788,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 568.2424242424242,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 12.606060606060606,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 46.54545454545455,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 66.9090909090909,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 45.57575757575758,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.9696969696969697,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 20.363636363636363,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 20.363636363636363,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 12.606060606060606,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 35.878787878787875,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 77.57575757575758,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 26.181818181818183,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 96.96969696969697,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 0.9696969696969697,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 0.9696969696969697,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 64.0,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 194.9090909090909,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.909090909090909,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.909090909090909,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 29.09090909090909,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 176.4848484848485,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 0.9696969696969697,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 0.9696969696969697,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int)": 586.9032258064516,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,int)": 355.8787878787879,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,int[])": 920.7741935483871,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,long)": 659.3939393939394,
        "org.apache.commons.math3.random$AbstractWell#setSeed(int)": 5.818181818181818,
        "org.apache.commons.math3.random$AbstractWell#setSeed(int[])": 920.7741935483871,
        "org.apache.commons.math3.random$AbstractWell#setSeed(long)": 902.3870967741935,
        "org.apache.commons.math3.random$BitsStreamGenerator#BitsStreamGenerator()": 984.6451612903226,
        "org.apache.commons.math3.random$BitsStreamGenerator#clear()": 984.6451612903226,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBoolean()": 26.181818181818183,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBytes(byte[])": 18.424242424242426,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextDouble()": 427.6363636363636,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextFloat()": 26.181818181818183,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextGaussian()": 67.87878787878788,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt()": 33.93939393939394,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt(int)": 34.90909090909091,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong()": 26.181818181818183,
        "org.apache.commons.math3.random$RandomDataGenerator#RandomDataGenerator()": 928.516129032258,
        "org.apache.commons.math3.random$RandomDataGenerator#RandomDataGenerator(org.apache.commons.math3.random.RandomGenerator)": 581.8181818181819,
        "org.apache.commons.math3.random$RandomDataGenerator#getNatural(int)": 23.272727272727273,
        "org.apache.commons.math3.random$RandomDataGenerator#getRan()": 652.6060606060606,
        "org.apache.commons.math3.random$RandomDataGenerator#getSecRan()": 17.454545454545453,
        "org.apache.commons.math3.random$RandomDataGenerator#initRan()": 651.6363636363636,
        "org.apache.commons.math3.random$RandomDataGenerator#nextBeta(double,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataGenerator#nextBinomial(int,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataGenerator#nextCauchy(double,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataGenerator#nextChiSquare(double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataGenerator#nextExponential(double)": 12.606060606060606,
        "org.apache.commons.math3.random$RandomDataGenerator#nextF(double,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataGenerator#nextGamma(double,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataGenerator#nextGaussian(double,double)": 17.454545454545453,
        "org.apache.commons.math3.random$RandomDataGenerator#nextHexString(int)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataGenerator#nextHypergeometric(int,int,int)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataGenerator#nextInt(int,int)": 66.9090909090909,
        "org.apache.commons.math3.random$RandomDataGenerator#nextLong(long,long)": 64.96969696969697,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPascal(int,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPermutation(int,int)": 23.272727272727273,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPoisson(double)": 21.333333333333332,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSample(java.util.Collection,int)": 11.636363636363637,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureHexString(int)": 11.636363636363637,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureInt(int,int)": 3.878787878787879,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureLong(long,long)": 14.545454545454545,
        "org.apache.commons.math3.random$RandomDataGenerator#nextT(double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataGenerator#nextUniform(double,double)": 114.42424242424242,
        "org.apache.commons.math3.random$RandomDataGenerator#nextUniform(double,double,boolean)": 114.42424242424242,
        "org.apache.commons.math3.random$RandomDataGenerator#nextWeibull(double,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataGenerator#nextZipf(int,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeed()": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeed(long)": 646.7878787878788,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeedSecure()": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeedSecure(long)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataGenerator#setSecureAlgorithm(java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.math3.random$RandomDataGenerator#shuffle(int[],int)": 23.272727272727273,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl()": 928.516129032258,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl(org.apache.commons.math3.random.RandomGenerator)": 581.8181818181819,
        "org.apache.commons.math3.random$RandomDataImpl#nextBeta(double,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextBinomial(int,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextCauchy(double,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextChiSquare(double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextExponential(double)": 12.606060606060606,
        "org.apache.commons.math3.random$RandomDataImpl#nextF(double,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextGamma(double,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextGaussian(double,double)": 17.454545454545453,
        "org.apache.commons.math3.random$RandomDataImpl#nextHexString(int)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextHypergeometric(int,int,int)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextInt(int,int)": 43.63636363636363,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.IntegerDistribution)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.RealDistribution)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextLong(long,long)": 64.96969696969697,
        "org.apache.commons.math3.random$RandomDataImpl#nextPascal(int,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextPermutation(int,int)": 11.636363636363637,
        "org.apache.commons.math3.random$RandomDataImpl#nextPoisson(double)": 21.333333333333332,
        "org.apache.commons.math3.random$RandomDataImpl#nextSample(java.util.Collection,int)": 11.636363636363637,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureHexString(int)": 11.636363636363637,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureInt(int,int)": 3.878787878787879,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureLong(long,long)": 14.545454545454545,
        "org.apache.commons.math3.random$RandomDataImpl#nextT(double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double)": 114.42424242424242,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double,boolean)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextWeibull(double,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextZipf(int,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed()": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed(long)": 646.7878787878788,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure()": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure(long)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#setSecureAlgorithm(java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.math3.random$Well19937c#Well19937c()": 586.9032258064516,
        "org.apache.commons.math3.random$Well19937c#Well19937c(int)": 64.96969696969697,
        "org.apache.commons.math3.random$Well19937c#Well19937c(int[])": 0.9696969696969697,
        "org.apache.commons.math3.random$Well19937c#Well19937c(long)": 651.6363636363636,
        "org.apache.commons.math3.random$Well19937c#next(int)": 135.75757575757575,
        "org.apache.commons.math3.special$Beta#Beta()": 0.0,
        "org.apache.commons.math3.special$Beta#logBeta(double,double)": -21.3125,
        "org.apache.commons.math3.special$Beta#logBeta(double,double,double,int)": 100.75,
        "org.apache.commons.math3.special$Beta#regularizedBeta(double,double,double)": 130.9090909090909,
        "org.apache.commons.math3.special$Beta#regularizedBeta(double,double,double,double)": 0.0,
        "org.apache.commons.math3.special$Beta#regularizedBeta(double,double,double,double,int)": 130.9090909090909,
        "org.apache.commons.math3.special$Beta#regularizedBeta(double,double,double,int)": 0.0,
        "org.apache.commons.math3.special$Beta$1#getA(int,double)": 123.15151515151516,
        "org.apache.commons.math3.special$Beta$1#getB(int,double)": 123.15151515151516,
        "org.apache.commons.math3.special$Gamma#<clinit>()": 454.34375,
        "org.apache.commons.math3.special$Gamma#Gamma()": 0.0,
        "org.apache.commons.math3.special$Gamma#digamma(double)": 1.9393939393939394,
        "org.apache.commons.math3.special$Gamma#gamma(double)": 0.9696969696969697,
        "org.apache.commons.math3.special$Gamma#invGamma1pm1(double)": 403.0,
        "org.apache.commons.math3.special$Gamma#lanczos(double)": 390.7878787878788,
        "org.apache.commons.math3.special$Gamma#logGamma(double)": 415.59375,
        "org.apache.commons.math3.special$Gamma#logGamma1p(double)": 401.0625,
        "org.apache.commons.math3.special$Gamma#regularizedGammaP(double,double)": 335.5151515151515,
        "org.apache.commons.math3.special$Gamma#regularizedGammaP(double,double,double,int)": 373.3333333333333,
        "org.apache.commons.math3.special$Gamma#regularizedGammaQ(double,double)": 6.787878787878788,
        "org.apache.commons.math3.special$Gamma#regularizedGammaQ(double,double,double,int)": 224.0,
        "org.apache.commons.math3.special$Gamma#trigamma(double)": 0.9696969696969697,
        "org.apache.commons.math3.special$Gamma$1#getA(int,double)": 209.45454545454547,
        "org.apache.commons.math3.special$Gamma$1#getB(int,double)": 209.45454545454547,
        "org.apache.commons.math3.util$ContinuedFraction#ContinuedFraction()": 325.8181818181818,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double)": 0.0,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double,double)": 0.9696969696969697,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double,double,int)": 325.8181818181818,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double,int)": 0.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 2762.875,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1536.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#abs(int)": 314.1818181818182,
        "org.apache.commons.math3.util$FastMath#abs(long)": 772.8484848484849,
        "org.apache.commons.math3.util$FastMath#acos(double)": 20.363636363636363,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#asin(double)": 21.333333333333332,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#atan(double)": 22.303030303030305,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 85.33333333333333,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 73.6969696969697,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 39.75757575757576,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 339.3939393939394,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 12.606060606060606,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#cos(double)": 229.8181818181818,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 300.6060606060606,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 26.181818181818183,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 64.96969696969697,
        "org.apache.commons.math3.util$FastMath#exp(double)": 643.25,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 857.34375,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 14.545454545454545,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 28.12121212121212,
        "org.apache.commons.math3.util$FastMath#floor(double)": 801.15625,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 64.96969696969697,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 60.121212121212125,
        "org.apache.commons.math3.util$FastMath#log(double)": 715.90625,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 931.9375,
        "org.apache.commons.math3.util$FastMath#log10(double)": 54.303030303030305,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 415.59375,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 569.2121212121212,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 370.42424242424244,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 258.90909090909093,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 607.030303030303,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 33.93939393939394,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 13.575757575757576,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.909090909090909,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 338.42424242424244,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 338.42424242424244,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 588.6060606060606,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 168.72727272727272,
        "org.apache.commons.math3.util$FastMath#random()": 18.424242424242426,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.848484848484849,
        "org.apache.commons.math3.util$FastMath#rint(double)": 20.363636363636363,
        "org.apache.commons.math3.util$FastMath#round(double)": 19.393939393939394,
        "org.apache.commons.math3.util$FastMath#round(float)": 2.909090909090909,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 47.515151515151516,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#signum(double)": 11.636363636363637,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#sin(double)": 315.1515151515151,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 320.969696969697,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 26.181818181818183,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1547.6363636363637,
        "org.apache.commons.math3.util$FastMath#tan(double)": 25.21212121212121,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 25.21212121212121,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 11.636363636363637,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3.878787878787879,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3.878787878787879,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 237.57575757575756,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 258.90909090909093,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 258.90909090909093,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 258.90909090909093,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 258.90909090909093,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 841.84375,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 837.96875,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 917.40625,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 1007.5,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 841.84375,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 841.84375,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 837.96875,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 837.96875,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 917.40625
    },
    "Math-23": {
        "org.apache.commons.math3.analysis$FunctionUtils#FunctionUtils()": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils#add(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[])": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils#add(org.apache.commons.math3.analysis.UnivariateFunction[])": -29.064516129032256,
        "org.apache.commons.math3.analysis$FunctionUtils#add(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[])": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils#collector(org.apache.commons.math3.analysis.BivariateFunction,double)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils#collector(org.apache.commons.math3.analysis.BivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction,double)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils#combine(org.apache.commons.math3.analysis.BivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils#compose(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[])": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils#compose(org.apache.commons.math3.analysis.UnivariateFunction[])": 2.90625,
        "org.apache.commons.math3.analysis$FunctionUtils#compose(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[])": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils#fix1stArgument(org.apache.commons.math3.analysis.BivariateFunction,double)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils#fix2ndArgument(org.apache.commons.math3.analysis.BivariateFunction,double)": 23.25,
        "org.apache.commons.math3.analysis$FunctionUtils#multiply(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[])": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils#multiply(org.apache.commons.math3.analysis.UnivariateFunction[])": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils#multiply(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[])": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils#sample(org.apache.commons.math3.analysis.UnivariateFunction,double,double,int)": 31.96875,
        "org.apache.commons.math3.analysis$FunctionUtils#toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable)": 5.8125,
        "org.apache.commons.math3.analysis$FunctionUtils#toUnivariateDifferential(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction)": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils$1#value(double)": 2.90625,
        "org.apache.commons.math3.analysis$FunctionUtils$10#value(double)": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils$11#value(double[])": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils$12#value(double)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils$13#value(double)": 23.25,
        "org.apache.commons.math3.analysis$FunctionUtils$14#derivative()": 5.8125,
        "org.apache.commons.math3.analysis$FunctionUtils$14#value(double)": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils$14$1#value(double)": 4.84375,
        "org.apache.commons.math3.analysis$FunctionUtils$2#value(double)": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils$2#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils$3#derivative()": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils$3#value(double)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils$3$1#value(double)": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils$4#value(double)": -29.064516129032256,
        "org.apache.commons.math3.analysis$FunctionUtils$6#derivative()": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils$6#value(double)": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils$6$1#value(double)": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils$7#value(double)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils$9#derivative()": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils$9#value(double)": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils$9$1#value(double)": 1.9375,
        "org.apache.commons.math3.analysis.function$Sin#Sin()": 61.903225806451616,
        "org.apache.commons.math3.analysis.function$Sin#derivative()": 1.9375,
        "org.apache.commons.math3.analysis.function$Sin#value(double)": 44.483870967741936,
        "org.apache.commons.math3.analysis.function$Sin#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 2.90625,
        "org.apache.commons.math3.analysis.function$StepFunction#StepFunction(double[],double[])": -21.32258064516129,
        "org.apache.commons.math3.analysis.function$StepFunction#value(double)": -27.129032258064516,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 147.25,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 166.625,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 2.90625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.65625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 41.65625,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 729.46875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 6.78125,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 567.6875,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 12.59375,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 47.46875,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 67.8125,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 45.53125,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 20.34375,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 20.34375,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 12.59375,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 10.65625,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 25.1875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 15.5,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 0.96875,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 35.84375,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 77.5,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 43.59375,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 69.75,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 26.15625,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 96.875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 63.9375,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 194.71875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.90625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.90625,
        "org.apache.commons.math3.exception$TooManyEvaluationsException#TooManyEvaluationsException(java.lang.Number)": 13.5625,
        "org.apache.commons.math3.optimization$GoalType#<clinit>()": 91.90322580645162,
        "org.apache.commons.math3.optimization$GoalType#GoalType(java.lang.String,int)": 91.90322580645162,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#BaseAbstractUnivariateOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker)": -15.516129032258064,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#computeObjectiveValue(double)": -15.516129032258064,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getConvergenceChecker()": -15.516129032258064,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getEvaluations()": -24.225806451612904,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getGoalType()": -15.516129032258064,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getMax()": -15.516129032258064,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getMaxEvaluations()": 0.96875,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getMin()": -15.516129032258064,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getStartValue()": -15.516129032258064,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double)": 7.75,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double,double)": -15.516129032258064,
        "org.apache.commons.math3.optimization.univariate$BrentOptimizer#<clinit>()": -15.516129032258064,
        "org.apache.commons.math3.optimization.univariate$BrentOptimizer#BrentOptimizer(double,double)": -20.35483870967742,
        "org.apache.commons.math3.optimization.univariate$BrentOptimizer#BrentOptimizer(double,double,org.apache.commons.math3.optimization.ConvergenceChecker)": -15.516129032258064,
        "org.apache.commons.math3.optimization.univariate$BrentOptimizer#best(org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair,org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair,boolean)": -16.483870967741936,
        "org.apache.commons.math3.optimization.univariate$BrentOptimizer#doOptimize()": -15.516129032258064,
        "org.apache.commons.math3.optimization.univariate$UnivariatePointValuePair#UnivariatePointValuePair(double,double)": -16.483870967741936,
        "org.apache.commons.math3.optimization.univariate$UnivariatePointValuePair#getPoint()": -16.483870967741936,
        "org.apache.commons.math3.optimization.univariate$UnivariatePointValuePair#getValue()": -16.483870967741936,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 2742.548387096774,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1499.0,
        "org.apache.commons.math3.util$FastMath#abs(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#abs(int)": 313.875,
        "org.apache.commons.math3.util$FastMath#abs(long)": 738.3548387096774,
        "org.apache.commons.math3.util$FastMath#acos(double)": 20.34375,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#asin(double)": 21.3125,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#atan(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 85.25,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 73.625,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 39.71875,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 337.125,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cos(double)": 229.59375,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 268.03225806451616,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 26.15625,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 64.90625,
        "org.apache.commons.math3.util$FastMath#exp(double)": 660.6875,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 874.78125,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 14.53125,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 28.09375,
        "org.apache.commons.math3.util$FastMath#floor(double)": 827.3125,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 64.90625,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 60.0625,
        "org.apache.commons.math3.util$FastMath#log(double)": 737.21875,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 953.25,
        "org.apache.commons.math3.util$FastMath#log10(double)": 54.25,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 441.75,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 566.71875,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 370.0625,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 0.96875,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 258.65625,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 573.8387096774194,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 33.90625,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 13.5625,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 305.7741935483871,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 305.7741935483871,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 582.21875,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 166.625,
        "org.apache.commons.math3.util$FastMath#random()": 18.40625,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.84375,
        "org.apache.commons.math3.util$FastMath#rint(double)": 20.34375,
        "org.apache.commons.math3.util$FastMath#round(double)": 19.375,
        "org.apache.commons.math3.util$FastMath#round(float)": 2.90625,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 47.46875,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9375,
        "org.apache.commons.math3.util$FastMath#signum(double)": 11.625,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#sin(double)": 282.5483870967742,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 288.35483870967744,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 26.15625,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1504.8064516129032,
        "org.apache.commons.math3.util$FastMath#tan(double)": 25.1875,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 25.1875,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 11.625,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 203.19354838709677,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 225.4516129032258,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 225.4516129032258,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 225.4516129032258,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 225.4516129032258,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 866.0625,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 862.1875,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 939.6875,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor()": 529.3225806451613,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int)": 583.516129032258,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int,org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback)": 584.483870967742,
        "org.apache.commons.math3.util$Incrementor#canIncrement()": 1.9375,
        "org.apache.commons.math3.util$Incrementor#getCount()": 127.70967741935485,
        "org.apache.commons.math3.util$Incrementor#getMaximalCount()": 31.0,
        "org.apache.commons.math3.util$Incrementor#incrementCount()": 532.2258064516129,
        "org.apache.commons.math3.util$Incrementor#incrementCount(int)": 0.96875,
        "org.apache.commons.math3.util$Incrementor#resetCount()": 549.6451612903226,
        "org.apache.commons.math3.util$Incrementor#setMaximalCount(int)": 514.8064516129032,
        "org.apache.commons.math3.util$Incrementor$1#trigger(int)": 17.4375,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 0.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 13.516129032258064,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 14.483870967741936,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 105.4516129032258,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 3.8387096774193523,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 29.967741935483872,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 5.8125,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": 19.375,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 5.8125,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 4.84375,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.96875,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.96875,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 46.5,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 47.46875,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 2.90625,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": 2.90625,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": 1.9375,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 8.71875,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 8.71875,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 7.75,
        "org.apache.commons.math3.util$MathArrays$2#<clinit>()": 105.4516129032258,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 110.29032258064515,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 110.29032258064515,
        "org.apache.commons.math3.util$Precision#<clinit>()": 1003.516129032258,
        "org.apache.commons.math3.util$Precision#Precision()": 0.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 44.5625,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 25.1875,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 109.32258064516128,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 385.5625,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 680.2903225806451,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 0.96875,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 77.5,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 121.09375,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 40.6875,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 76.53125,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 0.0,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 0.96875
    },
    "Math-24": {
        "org.apache.commons.math3.analysis$FunctionUtils#FunctionUtils()": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils#add(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[])": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils#add(org.apache.commons.math3.analysis.UnivariateFunction[])": -30.032258064516128,
        "org.apache.commons.math3.analysis$FunctionUtils#add(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[])": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils#collector(org.apache.commons.math3.analysis.BivariateFunction,double)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils#collector(org.apache.commons.math3.analysis.BivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction,double)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils#combine(org.apache.commons.math3.analysis.BivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils#compose(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[])": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils#compose(org.apache.commons.math3.analysis.UnivariateFunction[])": 2.90625,
        "org.apache.commons.math3.analysis$FunctionUtils#compose(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[])": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils#fix1stArgument(org.apache.commons.math3.analysis.BivariateFunction,double)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils#fix2ndArgument(org.apache.commons.math3.analysis.BivariateFunction,double)": 23.25,
        "org.apache.commons.math3.analysis$FunctionUtils#multiply(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction[])": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils#multiply(org.apache.commons.math3.analysis.UnivariateFunction[])": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils#multiply(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable[])": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils#sample(org.apache.commons.math3.analysis.UnivariateFunction,double,double,int)": 31.96875,
        "org.apache.commons.math3.analysis$FunctionUtils#toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable)": 5.8125,
        "org.apache.commons.math3.analysis$FunctionUtils#toUnivariateDifferential(org.apache.commons.math3.analysis.DifferentiableUnivariateFunction)": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils$1#value(double)": 2.90625,
        "org.apache.commons.math3.analysis$FunctionUtils$10#value(double)": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils$11#value(double[])": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils$12#value(double)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils$13#value(double)": 23.25,
        "org.apache.commons.math3.analysis$FunctionUtils$14#derivative()": 5.8125,
        "org.apache.commons.math3.analysis$FunctionUtils$14#value(double)": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils$14$1#value(double)": 4.84375,
        "org.apache.commons.math3.analysis$FunctionUtils$2#value(double)": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils$2#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils$3#derivative()": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils$3#value(double)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils$3$1#value(double)": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils$4#value(double)": -30.032258064516128,
        "org.apache.commons.math3.analysis$FunctionUtils$6#derivative()": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils$6#value(double)": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils$6$1#value(double)": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils$7#value(double)": 0.96875,
        "org.apache.commons.math3.analysis$FunctionUtils$9#derivative()": 1.9375,
        "org.apache.commons.math3.analysis$FunctionUtils$9#value(double)": 0.0,
        "org.apache.commons.math3.analysis$FunctionUtils$9$1#value(double)": 1.9375,
        "org.apache.commons.math3.analysis.function$Sin#Sin()": 60.935483870967744,
        "org.apache.commons.math3.analysis.function$Sin#derivative()": 1.9375,
        "org.apache.commons.math3.analysis.function$Sin#value(double)": 43.516129032258064,
        "org.apache.commons.math3.analysis.function$Sin#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 2.90625,
        "org.apache.commons.math3.analysis.function$StepFunction#StepFunction(double[],double[])": -22.29032258064516,
        "org.apache.commons.math3.analysis.function$StepFunction#value(double)": -28.096774193548388,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 147.25,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 166.625,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 2.90625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.65625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 41.65625,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 729.46875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 6.78125,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 567.6875,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 12.59375,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 47.46875,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 67.8125,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 45.53125,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 20.34375,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 20.34375,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 12.59375,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 10.65625,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 25.1875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 15.5,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 0.96875,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 35.84375,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 77.5,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 43.59375,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 69.75,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 26.15625,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 96.875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 63.9375,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 194.71875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.90625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.90625,
        "org.apache.commons.math3.exception$TooManyEvaluationsException#TooManyEvaluationsException(java.lang.Number)": 13.5625,
        "org.apache.commons.math3.optimization$GoalType#<clinit>()": 90.93548387096774,
        "org.apache.commons.math3.optimization$GoalType#GoalType(java.lang.String,int)": 90.93548387096774,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#BaseAbstractUnivariateOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker)": -16.483870967741936,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#computeObjectiveValue(double)": -16.483870967741936,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getConvergenceChecker()": -16.483870967741936,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getEvaluations()": -25.193548387096776,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getGoalType()": -16.483870967741936,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getMax()": -16.483870967741936,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getMaxEvaluations()": 0.96875,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getMin()": -16.483870967741936,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#getStartValue()": -16.483870967741936,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double)": -24.225806451612904,
        "org.apache.commons.math3.optimization.univariate$BaseAbstractUnivariateOptimizer#optimize(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optimization.GoalType,double,double,double)": -16.483870967741936,
        "org.apache.commons.math3.optimization.univariate$BrentOptimizer#<clinit>()": -16.483870967741936,
        "org.apache.commons.math3.optimization.univariate$BrentOptimizer#BrentOptimizer(double,double)": -21.32258064516129,
        "org.apache.commons.math3.optimization.univariate$BrentOptimizer#BrentOptimizer(double,double,org.apache.commons.math3.optimization.ConvergenceChecker)": -16.483870967741936,
        "org.apache.commons.math3.optimization.univariate$BrentOptimizer#best(org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair,org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair,boolean)": 0.0,
        "org.apache.commons.math3.optimization.univariate$BrentOptimizer#doOptimize()": -16.483870967741936,
        "org.apache.commons.math3.optimization.univariate$UnivariatePointValuePair#UnivariatePointValuePair(double,double)": -17.451612903225808,
        "org.apache.commons.math3.optimization.univariate$UnivariatePointValuePair#getPoint()": -17.451612903225808,
        "org.apache.commons.math3.optimization.univariate$UnivariatePointValuePair#getValue()": 6.78125,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 2741.5806451612902,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1498.032258064516,
        "org.apache.commons.math3.util$FastMath#abs(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#abs(int)": 313.875,
        "org.apache.commons.math3.util$FastMath#abs(long)": 736.4193548387096,
        "org.apache.commons.math3.util$FastMath#acos(double)": 20.34375,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#asin(double)": 21.3125,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#atan(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 85.25,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 73.625,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 39.71875,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 337.125,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cos(double)": 229.59375,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 267.06451612903226,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 26.15625,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 64.90625,
        "org.apache.commons.math3.util$FastMath#exp(double)": 660.6875,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 874.78125,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 14.53125,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 28.09375,
        "org.apache.commons.math3.util$FastMath#floor(double)": 827.3125,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 64.90625,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 60.0625,
        "org.apache.commons.math3.util$FastMath#log(double)": 737.21875,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 953.25,
        "org.apache.commons.math3.util$FastMath#log10(double)": 54.25,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 441.75,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 566.71875,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 370.0625,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 0.96875,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 258.65625,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 572.8709677419355,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 33.90625,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 13.5625,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 304.80645161290323,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 304.80645161290323,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 582.21875,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 166.625,
        "org.apache.commons.math3.util$FastMath#random()": 18.40625,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.84375,
        "org.apache.commons.math3.util$FastMath#rint(double)": 20.34375,
        "org.apache.commons.math3.util$FastMath#round(double)": 19.375,
        "org.apache.commons.math3.util$FastMath#round(float)": 2.90625,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 47.46875,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9375,
        "org.apache.commons.math3.util$FastMath#signum(double)": 11.625,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#sin(double)": 281.5806451612903,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 287.38709677419354,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 26.15625,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1503.8387096774193,
        "org.apache.commons.math3.util$FastMath#tan(double)": 25.1875,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 25.1875,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 11.625,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 202.2258064516129,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 224.48387096774195,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 224.48387096774195,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 224.48387096774195,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 224.48387096774195,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 866.0625,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 862.1875,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 939.6875,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$Incrementor#Incrementor()": 528.3548387096774,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int)": 582.5483870967741,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int,org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback)": 583.516129032258,
        "org.apache.commons.math3.util$Incrementor#canIncrement()": 1.9375,
        "org.apache.commons.math3.util$Incrementor#getCount()": 126.74193548387098,
        "org.apache.commons.math3.util$Incrementor#getMaximalCount()": 31.0,
        "org.apache.commons.math3.util$Incrementor#incrementCount()": 531.258064516129,
        "org.apache.commons.math3.util$Incrementor#incrementCount(int)": 0.96875,
        "org.apache.commons.math3.util$Incrementor#resetCount()": 548.6774193548387,
        "org.apache.commons.math3.util$Incrementor#setMaximalCount(int)": 513.8387096774194,
        "org.apache.commons.math3.util$Incrementor$1#trigger(int)": 17.4375,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 0.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 12.548387096774192,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 13.516129032258064,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 104.48387096774192,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 2.8709677419354804,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 29.0,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 5.8125,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": 19.375,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 5.8125,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 4.84375,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.96875,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.96875,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 46.5,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 47.46875,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 2.90625,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": 2.90625,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": 1.9375,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 8.71875,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 8.71875,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 7.75,
        "org.apache.commons.math3.util$MathArrays$2#<clinit>()": 104.48387096774192,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 109.32258064516128,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 109.32258064516128,
        "org.apache.commons.math3.util$Precision#<clinit>()": 1001.5806451612902,
        "org.apache.commons.math3.util$Precision#Precision()": 0.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 44.5625,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 25.1875,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 108.35483870967741,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 384.59375,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 678.3548387096774,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 0.96875,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 77.5,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 121.09375,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 40.6875,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 76.53125,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 0.0,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 0.96875
    },
    "Math-25": {
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 726.5625,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 6.78125,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 586.09375,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 12.59375,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 47.46875,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 67.8125,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 45.53125,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 61.03125,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 191.8125,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.90625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.90625,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 0.96875,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 6.78125,
        "org.apache.commons.math3.exception.util$ArgUtils#ArgUtils()": 0.0,
        "org.apache.commons.math3.exception.util$ArgUtils#flatten(java.lang.Object[])": 844.75,
        "org.apache.commons.math3.exception.util$ExceptionContext#ExceptionContext(java.lang.Throwable)": 844.75,
        "org.apache.commons.math3.exception.util$ExceptionContext#addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 843.78125,
        "org.apache.commons.math3.exception.util$ExceptionContext#buildMessage(java.util.Locale,java.lang.String)": 5.8125,
        "org.apache.commons.math3.exception.util$ExceptionContext#deSerializeContext(java.io.ObjectInputStream)": 1.9375,
        "org.apache.commons.math3.exception.util$ExceptionContext#deSerializeMessages(java.io.ObjectInputStream)": 1.9375,
        "org.apache.commons.math3.exception.util$ExceptionContext#getKeys()": 1.9375,
        "org.apache.commons.math3.exception.util$ExceptionContext#getLocalizedMessage()": 0.96875,
        "org.apache.commons.math3.exception.util$ExceptionContext#getMessage()": 3.875,
        "org.apache.commons.math3.exception.util$ExceptionContext#getMessage(java.util.Locale)": 4.84375,
        "org.apache.commons.math3.exception.util$ExceptionContext#getMessage(java.util.Locale,java.lang.String)": 0.96875,
        "org.apache.commons.math3.exception.util$ExceptionContext#getThrowable()": 0.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getValue(java.lang.String)": 2.90625,
        "org.apache.commons.math3.exception.util$ExceptionContext#nonSerializableReplacement(java.lang.Object)": 0.96875,
        "org.apache.commons.math3.exception.util$ExceptionContext#readObject(java.io.ObjectInputStream)": 1.9375,
        "org.apache.commons.math3.exception.util$ExceptionContext#serializeContext(java.io.ObjectOutputStream)": 1.9375,
        "org.apache.commons.math3.exception.util$ExceptionContext#serializeMessages(java.io.ObjectOutputStream)": 1.9375,
        "org.apache.commons.math3.exception.util$ExceptionContext#setValue(java.lang.String,java.lang.Object)": 7.75,
        "org.apache.commons.math3.exception.util$ExceptionContext#writeObject(java.io.ObjectOutputStream)": 1.9375,
        "org.apache.commons.math3.exception.util$LocalizedFormats#<clinit>()": 906.75,
        "org.apache.commons.math3.exception.util$LocalizedFormats#LocalizedFormats(java.lang.String,int,java.lang.String)": 906.75,
        "org.apache.commons.math3.exception.util$LocalizedFormats#getLocalizedString(java.util.Locale)": 8.71875,
        "org.apache.commons.math3.exception.util$LocalizedFormats#getSourceString()": 1.9375,
        "org.apache.commons.math3.optimization.fitting$HarmonicFitter#HarmonicFitter(org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer)": 5.8125,
        "org.apache.commons.math3.optimization.fitting$HarmonicFitter#fit()": 4.84375,
        "org.apache.commons.math3.optimization.fitting$HarmonicFitter#fit(double[])": 4.84375,
        "org.apache.commons.math3.optimization.fitting$HarmonicFitter$ParameterGuesser#HarmonicFitter$ParameterGuesser(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint[])": -26.161290322580644,
        "org.apache.commons.math3.optimization.fitting$HarmonicFitter$ParameterGuesser#guess()": -27.129032258064516,
        "org.apache.commons.math3.optimization.fitting$HarmonicFitter$ParameterGuesser#guessAOmega()": -27.129032258064516,
        "org.apache.commons.math3.optimization.fitting$HarmonicFitter$ParameterGuesser#guessPhi()": -27.129032258064516,
        "org.apache.commons.math3.optimization.fitting$HarmonicFitter$ParameterGuesser#sortObservations()": -27.129032258064516,
        "org.apache.commons.math3.optimization.fitting$WeightedObservedPoint#WeightedObservedPoint(double,double,double)": -5.838709677419356,
        "org.apache.commons.math3.optimization.fitting$WeightedObservedPoint#getWeight()": 24.21875,
        "org.apache.commons.math3.optimization.fitting$WeightedObservedPoint#getX()": -6.806451612903224,
        "org.apache.commons.math3.optimization.fitting$WeightedObservedPoint#getY()": -6.806451612903224
    },
    "Math-26": {
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException()": 0.96875,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": -19.387096774193548,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.65625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 39.71875,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 714.9375,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 6.78125,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 578.34375,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 12.59375,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 14.483870967741936,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 34.80645161290323,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 13.516129032258064,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 6.78125,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 10.65625,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 43.59375,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 69.75,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 20.34375,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 113.34375,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 60.0625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 190.84375,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.90625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.90625,
        "org.apache.commons.math3.exception.util$ArgUtils#ArgUtils()": 0.0,
        "org.apache.commons.math3.exception.util$ArgUtils#flatten(java.lang.Object[])": 798.3548387096774,
        "org.apache.commons.math3.exception.util$ExceptionContext#ExceptionContext(java.lang.Throwable)": 798.3548387096774,
        "org.apache.commons.math3.exception.util$ExceptionContext#addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 797.3870967741935,
        "org.apache.commons.math3.exception.util$ExceptionContext#buildMessage(java.util.Locale,java.lang.String)": 5.8125,
        "org.apache.commons.math3.exception.util$ExceptionContext#deSerializeContext(java.io.ObjectInputStream)": 1.9375,
        "org.apache.commons.math3.exception.util$ExceptionContext#deSerializeMessages(java.io.ObjectInputStream)": 1.9375,
        "org.apache.commons.math3.exception.util$ExceptionContext#getKeys()": 1.9375,
        "org.apache.commons.math3.exception.util$ExceptionContext#getLocalizedMessage()": 0.96875,
        "org.apache.commons.math3.exception.util$ExceptionContext#getMessage()": 3.875,
        "org.apache.commons.math3.exception.util$ExceptionContext#getMessage(java.util.Locale)": 4.84375,
        "org.apache.commons.math3.exception.util$ExceptionContext#getMessage(java.util.Locale,java.lang.String)": 0.96875,
        "org.apache.commons.math3.exception.util$ExceptionContext#getThrowable()": 0.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getValue(java.lang.String)": 2.90625,
        "org.apache.commons.math3.exception.util$ExceptionContext#nonSerializableReplacement(java.lang.Object)": 0.96875,
        "org.apache.commons.math3.exception.util$ExceptionContext#readObject(java.io.ObjectInputStream)": 1.9375,
        "org.apache.commons.math3.exception.util$ExceptionContext#serializeContext(java.io.ObjectOutputStream)": 1.9375,
        "org.apache.commons.math3.exception.util$ExceptionContext#serializeMessages(java.io.ObjectOutputStream)": 1.9375,
        "org.apache.commons.math3.exception.util$ExceptionContext#setValue(java.lang.String,java.lang.Object)": 7.75,
        "org.apache.commons.math3.exception.util$ExceptionContext#writeObject(java.io.ObjectOutputStream)": 1.9375,
        "org.apache.commons.math3.exception.util$LocalizedFormats#<clinit>()": 860.2903225806451,
        "org.apache.commons.math3.exception.util$LocalizedFormats#LocalizedFormats(java.lang.String,int,java.lang.String)": 860.2903225806451,
        "org.apache.commons.math3.exception.util$LocalizedFormats#getLocalizedString(java.util.Locale)": 8.71875,
        "org.apache.commons.math3.exception.util$LocalizedFormats#getSourceString()": 1.9375,
        "org.apache.commons.math3.fraction$Fraction#<clinit>()": 167.38709677419354,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double)": 49.40625,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double,double,int)": 20.29032258064516,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double,double,int,int)": 22.225806451612904,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double,int)": 1.9375,
        "org.apache.commons.math3.fraction$Fraction#Fraction(int)": 154.03125,
        "org.apache.commons.math3.fraction$Fraction#Fraction(int,int)": 167.38709677419354,
        "org.apache.commons.math3.fraction$Fraction#abs()": 0.96875,
        "org.apache.commons.math3.fraction$Fraction#add(int)": 0.96875,
        "org.apache.commons.math3.fraction$Fraction#add(org.apache.commons.math3.fraction.Fraction)": 45.53125,
        "org.apache.commons.math3.fraction$Fraction#addSub(org.apache.commons.math3.fraction.Fraction,boolean)": 60.0625,
        "org.apache.commons.math3.fraction$Fraction#compareTo(org.apache.commons.math3.fraction.Fraction)": 0.96875,
        "org.apache.commons.math3.fraction$Fraction#divide(int)": 0.96875,
        "org.apache.commons.math3.fraction$Fraction#divide(org.apache.commons.math3.fraction.Fraction)": 23.25,
        "org.apache.commons.math3.fraction$Fraction#doubleValue()": 26.15625,
        "org.apache.commons.math3.fraction$Fraction#equals(java.lang.Object)": 142.40625,
        "org.apache.commons.math3.fraction$Fraction#floatValue()": 0.96875,
        "org.apache.commons.math3.fraction$Fraction#getDenominator()": 27.125,
        "org.apache.commons.math3.fraction$Fraction#getField()": 88.15625,
        "org.apache.commons.math3.fraction$Fraction#getNumerator()": 28.09375,
        "org.apache.commons.math3.fraction$Fraction#getReducedFraction(int,int)": 51.34375,
        "org.apache.commons.math3.fraction$Fraction#hashCode()": 5.8125,
        "org.apache.commons.math3.fraction$Fraction#intValue()": 0.96875,
        "org.apache.commons.math3.fraction$Fraction#longValue()": 0.96875,
        "org.apache.commons.math3.fraction$Fraction#multiply(int)": 0.96875,
        "org.apache.commons.math3.fraction$Fraction#multiply(org.apache.commons.math3.fraction.Fraction)": 50.375,
        "org.apache.commons.math3.fraction$Fraction#negate()": 24.21875,
        "org.apache.commons.math3.fraction$Fraction#percentageValue()": 1.9375,
        "org.apache.commons.math3.fraction$Fraction#reciprocal()": 24.21875,
        "org.apache.commons.math3.fraction$Fraction#subtract(int)": 0.96875,
        "org.apache.commons.math3.fraction$Fraction#subtract(org.apache.commons.math3.fraction.Fraction)": 27.125,
        "org.apache.commons.math3.fraction$Fraction#toString()": 2.90625,
        "org.apache.commons.math3.fraction$FractionConversionException#FractionConversionException(double,int)": 1.9375,
        "org.apache.commons.math3.fraction$FractionConversionException#FractionConversionException(double,long,long)": -29.064516129032256,
        "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()": 1156.4193548387098,
        "org.apache.commons.math3.util$ArithmeticUtils#ArithmeticUtils()": 0.0,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(int,int)": 39.71875,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long)": 2.90625,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long,org.apache.commons.math3.exception.util.Localizable)": 3.875,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficient(int,int)": 16.46875,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientDouble(int,int)": 7.75,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)": 3.875,
        "org.apache.commons.math3.util$ArithmeticUtils#checkBinomial(int,int)": 17.4375,
        "org.apache.commons.math3.util$ArithmeticUtils#factorial(int)": 920.3125,
        "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)": 1.9375,
        "org.apache.commons.math3.util$ArithmeticUtils#factorialLog(int)": 12.59375,
        "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)": 173.19354838709677,
        "org.apache.commons.math3.util$ArithmeticUtils#gcd(long,long)": 2.90625,
        "org.apache.commons.math3.util$ArithmeticUtils#isPowerOfTwo(long)": 43.59375,
        "org.apache.commons.math3.util$ArithmeticUtils#lcm(int,int)": 0.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#lcm(long,long)": 0.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(int,int)": 62.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(long,long)": 12.59375,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(int,int)": 0.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(int,long)": 0.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,int)": 0.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,java.math.BigInteger)": 1.9375,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,long)": 1.9375,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(long,int)": 0.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(long,long)": 0.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(int,int)": 28.09375,
        "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(long,long)": 0.96875,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 2861.5806451612902,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1467.0645161290322,
        "org.apache.commons.math3.util$FastMath#abs(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#abs(int)": 281.5806451612903,
        "org.apache.commons.math3.util$FastMath#abs(long)": 707.1875,
        "org.apache.commons.math3.util$FastMath#acos(double)": 19.375,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#asin(double)": 20.34375,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#atan(double)": 18.40625,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 79.4375,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 72.65625,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 37.78125,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 1168.3125,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cos(double)": 220.875,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 289.65625,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 60.0625,
        "org.apache.commons.math3.util$FastMath#exp(double)": 640.34375,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 1280.6875,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 20.34375,
        "org.apache.commons.math3.util$FastMath#floor(double)": 1300.6129032258063,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 62.96875,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 60.0625,
        "org.apache.commons.math3.util$FastMath#log(double)": 1073.375,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1284.5625,
        "org.apache.commons.math3.util$FastMath#log10(double)": 52.3125,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 13.5625,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 552.1875,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 270.28125,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 0.96875,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 248.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 512.46875,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 12.59375,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 326.46875,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 326.46875,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 1141.1875,
        "org.apache.commons.math3.util$FastMath#random()": 18.40625,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.84375,
        "org.apache.commons.math3.util$FastMath#rint(double)": 19.375,
        "org.apache.commons.math3.util$FastMath#round(double)": 18.40625,
        "org.apache.commons.math3.util$FastMath#round(float)": 2.90625,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 45.53125,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9375,
        "org.apache.commons.math3.util$FastMath#signum(double)": 10.65625,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#sin(double)": 303.21875,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 310.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1507.375,
        "org.apache.commons.math3.util$FastMath#tan(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 22.28125,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 9.6875,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 225.71875,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 251.875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 251.875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 251.875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 251.875,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 1275.84375,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 1271.96875,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1271.96875,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0
    },
    "Math-27": {
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException()": 0.96875,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 12.59375,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.65625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 39.71875,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 714.9375,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 6.78125,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 578.34375,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 12.59375,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 47.46875,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 67.8125,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 45.53125,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 6.78125,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 10.65625,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 43.59375,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 69.75,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 20.34375,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 113.34375,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 60.0625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 190.84375,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.90625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.90625,
        "org.apache.commons.math3.fraction$Fraction#<clinit>()": 167.38709677419354,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double)": 49.40625,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double,double,int)": 52.3125,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double,double,int,int)": 54.25,
        "org.apache.commons.math3.fraction$Fraction#Fraction(double,int)": 1.9375,
        "org.apache.commons.math3.fraction$Fraction#Fraction(int)": 154.03125,
        "org.apache.commons.math3.fraction$Fraction#Fraction(int,int)": 167.38709677419354,
        "org.apache.commons.math3.fraction$Fraction#abs()": 0.96875,
        "org.apache.commons.math3.fraction$Fraction#add(int)": 0.96875,
        "org.apache.commons.math3.fraction$Fraction#add(org.apache.commons.math3.fraction.Fraction)": 45.53125,
        "org.apache.commons.math3.fraction$Fraction#addSub(org.apache.commons.math3.fraction.Fraction,boolean)": 60.0625,
        "org.apache.commons.math3.fraction$Fraction#compareTo(org.apache.commons.math3.fraction.Fraction)": 0.96875,
        "org.apache.commons.math3.fraction$Fraction#divide(int)": 0.96875,
        "org.apache.commons.math3.fraction$Fraction#divide(org.apache.commons.math3.fraction.Fraction)": 23.25,
        "org.apache.commons.math3.fraction$Fraction#doubleValue()": -5.838709677419356,
        "org.apache.commons.math3.fraction$Fraction#equals(java.lang.Object)": 142.40625,
        "org.apache.commons.math3.fraction$Fraction#floatValue()": 0.96875,
        "org.apache.commons.math3.fraction$Fraction#getDenominator()": 27.125,
        "org.apache.commons.math3.fraction$Fraction#getField()": 88.15625,
        "org.apache.commons.math3.fraction$Fraction#getNumerator()": 28.09375,
        "org.apache.commons.math3.fraction$Fraction#getReducedFraction(int,int)": 51.34375,
        "org.apache.commons.math3.fraction$Fraction#hashCode()": 5.8125,
        "org.apache.commons.math3.fraction$Fraction#intValue()": 0.96875,
        "org.apache.commons.math3.fraction$Fraction#longValue()": 0.96875,
        "org.apache.commons.math3.fraction$Fraction#multiply(int)": -29.064516129032256,
        "org.apache.commons.math3.fraction$Fraction#multiply(org.apache.commons.math3.fraction.Fraction)": 50.375,
        "org.apache.commons.math3.fraction$Fraction#negate()": 24.21875,
        "org.apache.commons.math3.fraction$Fraction#percentageValue()": -30.032258064516128,
        "org.apache.commons.math3.fraction$Fraction#reciprocal()": 24.21875,
        "org.apache.commons.math3.fraction$Fraction#subtract(int)": 0.96875,
        "org.apache.commons.math3.fraction$Fraction#subtract(org.apache.commons.math3.fraction.Fraction)": 27.125,
        "org.apache.commons.math3.fraction$Fraction#toString()": 2.90625,
        "org.apache.commons.math3.fraction$FractionConversionException#FractionConversionException(double,int)": 1.9375,
        "org.apache.commons.math3.fraction$FractionConversionException#FractionConversionException(double,long,long)": 2.90625,
        "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()": 1156.4193548387098,
        "org.apache.commons.math3.util$ArithmeticUtils#ArithmeticUtils()": 0.0,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(int,int)": 39.71875,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long)": 2.90625,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long,org.apache.commons.math3.exception.util.Localizable)": 3.875,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficient(int,int)": 16.46875,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientDouble(int,int)": 7.75,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)": 3.875,
        "org.apache.commons.math3.util$ArithmeticUtils#checkBinomial(int,int)": 17.4375,
        "org.apache.commons.math3.util$ArithmeticUtils#factorial(int)": 920.3125,
        "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)": 1.9375,
        "org.apache.commons.math3.util$ArithmeticUtils#factorialLog(int)": 12.59375,
        "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)": 173.19354838709677,
        "org.apache.commons.math3.util$ArithmeticUtils#gcd(long,long)": 2.90625,
        "org.apache.commons.math3.util$ArithmeticUtils#isPowerOfTwo(long)": 43.59375,
        "org.apache.commons.math3.util$ArithmeticUtils#lcm(int,int)": 0.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#lcm(long,long)": 0.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(int,int)": 62.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(long,long)": 12.59375,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(int,int)": 0.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(int,long)": 0.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,int)": 0.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,java.math.BigInteger)": 1.9375,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,long)": 1.9375,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(long,int)": 0.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(long,long)": 0.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(int,int)": 28.09375,
        "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(long,long)": 0.96875,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 2861.5806451612902,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1500.59375,
        "org.apache.commons.math3.util$FastMath#abs(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#abs(int)": 281.5806451612903,
        "org.apache.commons.math3.util$FastMath#abs(long)": 706.21875,
        "org.apache.commons.math3.util$FastMath#acos(double)": 19.375,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#asin(double)": 20.34375,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#atan(double)": 18.40625,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 79.4375,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 72.65625,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 37.78125,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 1168.3125,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cos(double)": 220.875,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 289.65625,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 60.0625,
        "org.apache.commons.math3.util$FastMath#exp(double)": 640.34375,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 1280.6875,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 20.34375,
        "org.apache.commons.math3.util$FastMath#floor(double)": 1333.96875,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 62.96875,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 60.0625,
        "org.apache.commons.math3.util$FastMath#log(double)": 1073.375,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1284.5625,
        "org.apache.commons.math3.util$FastMath#log10(double)": 52.3125,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 13.5625,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 552.1875,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 270.28125,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 0.96875,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 248.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 512.46875,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 12.59375,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 326.46875,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 326.46875,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 1141.1875,
        "org.apache.commons.math3.util$FastMath#random()": 18.40625,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.84375,
        "org.apache.commons.math3.util$FastMath#rint(double)": 19.375,
        "org.apache.commons.math3.util$FastMath#round(double)": 18.40625,
        "org.apache.commons.math3.util$FastMath#round(float)": 2.90625,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 45.53125,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9375,
        "org.apache.commons.math3.util$FastMath#signum(double)": 10.65625,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#sin(double)": 303.21875,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 310.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1507.375,
        "org.apache.commons.math3.util$FastMath#tan(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 22.28125,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 9.6875,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 225.71875,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 252.84375,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 252.84375,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 252.84375,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 252.84375,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 1275.84375,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 1271.96875,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1271.96875,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0
    },
    "Math-28": {
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 143.375,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 162.75,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 2.90625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.65625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 39.71875,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 714.9375,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 6.78125,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 578.34375,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 12.59375,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 15.451612903225808,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 35.7741935483871,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 14.483870967741936,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": -29.064516129032256,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int)": 0.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int,java.lang.Class)": 12.59375,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": -10.677419354838708,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": -10.677419354838708,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 12.59375,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(java.lang.Integer[],java.lang.Integer[])": 0.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,java.lang.Integer[],java.lang.Integer[])": 37.78125,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimension(int)": 0.96875,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimensions()": 0.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimension(int)": 0.96875,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimensions()": 0.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 10.65625,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 25.1875,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 6.78125,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 6.78125,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 6.78125,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 10.65625,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 35.84375,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 77.5,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 43.59375,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 69.75,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 20.34375,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 113.34375,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 60.0625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 190.84375,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.90625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.90625,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 28.09375,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 175.34375,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 0.96875,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 0.96875,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 0.96875,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 6.78125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix()": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field)": 69.75,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field,int,int)": 99.78125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 3.875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int)": 64.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int,int)": 115.28125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkAdditionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkColumnIndex(int)": 122.0625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkMultiplicationCompatible(org.apache.commons.math3.linear.FieldMatrix)": 17.4375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkRowIndex(int)": 122.0625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int,int,int,int)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int[],int[])": 4.84375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubtractionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3.875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int,int,int,int,org.apache.commons.math3.FieldElement[][])": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int[],int[],org.apache.commons.math3.FieldElement[][])": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#equals(java.lang.Object)": 31.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[][])": 88.15625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumn(int)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnMatrix(int)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnVector(int)": 5.8125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getData()": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getField()": 126.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRow(int)": 6.78125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowVector(int)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int[],int[])": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getTrace()": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#hashCode()": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#isSquare()": 36.8125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.linear.FieldVector)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#power(int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldMatrix)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldVector)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#toString()": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#transpose()": 5.8125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 22.28125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$1#visit(int,int,org.apache.commons.math3.FieldElement)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#start(int,int,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#visit(int,int,org.apache.commons.math3.FieldElement)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$3#visit(int,int,org.apache.commons.math3.FieldElement)": 5.8125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#<clinit>()": 460.61290322580646,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix()": 273.83870967741933,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix(int,int)": 366.741935483871,
        "org.apache.commons.math3.linear$AbstractRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 15.5,
        "org.apache.commons.math3.linear$AbstractRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int,int,int,int,double[][])": 24.21875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int[],int[],double[][])": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#equals(java.lang.Object)": 50.375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumn(int)": 33.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnMatrix(int)": 15.5,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnVector(int)": 15.5,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getData()": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getFrobeniusNorm()": 12.59375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getNorm()": 74.59375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRow(int)": 13.516129032258064,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowVector(int)": -4.870967741935484,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int,int,int,int)": 9.6875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int[],int[])": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getTrace()": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#hashCode()": 6.78125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#isSquare()": 136.59375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 93.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(double[])": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(org.apache.commons.math3.linear.RealVector)": 38.75,
        "org.apache.commons.math3.linear$AbstractRealMatrix#power(int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(double[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealMatrix)": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarAdd(double)": 13.5625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarMultiply(double)": 15.5,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumn(int,double[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 22.28125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRow(int,double[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": -3.903225806451612,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setSubMatrix(double[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 77.5,
        "org.apache.commons.math3.linear$AbstractRealMatrix#toString()": 4.84375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#transpose()": 148.21875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 7.75,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4.84375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 150.15625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 23.25,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#end()": 74.59375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#start(int,int,int,int,int,int)": 74.59375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#visit(int,int,double)": 74.59375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#end()": 12.59375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#start(int,int,int,int,int,int)": 12.59375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#visit(int,int,double)": 12.59375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$3#visit(int,int,double)": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#start(int,int,int,int,int,int)": 24.21875,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#visit(int,int,double)": 24.21875,
        "org.apache.commons.math3.linear$AbstractRealMatrix$5#visit(int,int,double)": 148.21875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,int,int)": 33.90625,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][])": 47.46875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],boolean)": 30.03125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][])": 37.78125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][],boolean)": 17.4375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#add(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copy()": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyIn(org.apache.commons.math3.FieldElement[][])": 47.46875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyOut()": 31.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#createMatrix(int,int)": 17.4375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getColumnDimension()": 76.53125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getData()": 30.03125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getDataRef()": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getEntry(int,int)": 63.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getRowDimension()": 76.53125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 36.8125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 47.46875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 21.3125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix()": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[])": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][])": 223.51612903225805,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][],boolean)": 102.6875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(int,int)": 232.22580645161293,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#add(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copy()": 11.625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyIn(double[][])": 225.4516129032258,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyOut()": 186.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#createMatrix(int,int)": 178.25,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getColumnDimension()": 308.6774193548387,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getData()": 179.21875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getDataRef()": 9.645161290322584,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getEntry(int,int)": 224.48387096774195,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getRowDimension()": 307.7096774193548,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 10.65625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#operate(double[])": 40.6875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#preMultiply(double[])": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setEntry(int,int,double)": 223.51612903225805,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setSubMatrix(double[][],int,int)": 225.4516129032258,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 69.75,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 149.1875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 23.25,
        "org.apache.commons.math3.linear$ArrayRealVector#<clinit>()": 364.80645161290323,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector()": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[])": 161.58064516129033,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],boolean)": 248.67741935483872,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],double[])": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],int,int)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int)": 99.64516129032259,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int,double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[])": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[],int,int)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean)": 95.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,double[])": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#add(org.apache.commons.math3.linear.RealVector)": 8.71875,
        "org.apache.commons.math3.linear$ArrayRealVector#addToEntry(int,double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#append(double)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.ArrayRealVector)": 0.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(int)": 107.38709677419354,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$ArrayRealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$ArrayRealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 39.71875,
        "org.apache.commons.math3.linear$ArrayRealVector#copy()": 94.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 85.25,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": 6.78125,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 12.59375,
        "org.apache.commons.math3.linear$ArrayRealVector#equals(java.lang.Object)": 45.53125,
        "org.apache.commons.math3.linear$ArrayRealVector#getDataRef()": 46.5,
        "org.apache.commons.math3.linear$ArrayRealVector#getDimension()": 257.38709677419354,
        "org.apache.commons.math3.linear$ArrayRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 4.84375,
        "org.apache.commons.math3.linear$ArrayRealVector#getEntry(int)": 206.09677419354838,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Norm()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfNorm()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#getNorm()": 54.25,
        "org.apache.commons.math3.linear$ArrayRealVector#getSubVector(int,int)": 6.78125,
        "org.apache.commons.math3.linear$ArrayRealVector#hashCode()": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#isInfinite()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#isNaN()": 49.40625,
        "org.apache.commons.math3.linear$ArrayRealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapAddToSelf(double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapDivideToSelf(double)": 4.84375,
        "org.apache.commons.math3.linear$ArrayRealVector#mapMultiplyToSelf(double)": 55.21875,
        "org.apache.commons.math3.linear$ArrayRealVector#mapSubtractToSelf(double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#set(double)": 43.59375,
        "org.apache.commons.math3.linear$ArrayRealVector#setEntry(int,double)": 70.71875,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,double[])": 24.21875,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 25.1875,
        "org.apache.commons.math3.linear$ArrayRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 41.58064516129032,
        "org.apache.commons.math3.linear$ArrayRealVector#toArray()": 62.87096774193549,
        "org.apache.commons.math3.linear$ArrayRealVector#toString()": 0.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(int,int,org.apache.commons.math3.FieldElement[][],boolean)": 33.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.Field,int,int)": 26.15625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.FieldElement[][])": 33.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.BlockFieldMatrix)": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockHeight(int)": 39.71875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockWidth(int)": 44.5625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copy()": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copyBlockPart(org.apache.commons.math3.FieldElement[],int,int,int,int,int,org.apache.commons.math3.FieldElement[],int,int,int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createBlocksLayout(org.apache.commons.math3.Field,int,int)": 26.15625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createMatrix(int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumn(int)": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnDimension()": 39.71875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnMatrix(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getData()": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getEntry(int,int)": 27.125,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRow(int)": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowDimension()": 40.6875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getSubMatrix(int,int,int,int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.BlockFieldMatrix)": 6.78125,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 5.8125,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#toBlocksLayout(org.apache.commons.math3.FieldElement[][])": 33.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#transpose()": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(double[][])": 111.40625,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int)": 68.78125,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int,double[][],boolean)": 131.75,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.BlockRealMatrix)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#addToEntry(int,int,double)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockHeight(int)": 138.53125,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockWidth(int)": 146.28125,
        "org.apache.commons.math3.linear$BlockRealMatrix#copy()": 4.84375,
        "org.apache.commons.math3.linear$BlockRealMatrix#copyBlockPart(double[],int,int,int,int,int,double[],int,int,int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#createBlocksLayout(int,int)": 88.15625,
        "org.apache.commons.math3.linear$BlockRealMatrix#createMatrix(int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumn(int)": 19.375,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnDimension()": 138.53125,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnMatrix(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getData()": 70.71875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getEntry(int,int)": 41.65625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getFrobeniusNorm()": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getNorm()": 22.28125,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRow(int)": 4.84375,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowDimension()": 139.5,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getSubMatrix(int,int,int,int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.BlockRealMatrix)": 12.59375,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 12.59375,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#operate(double[])": 39.71875,
        "org.apache.commons.math3.linear$BlockRealMatrix#preMultiply(double[])": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarAdd(double)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarMultiply(double)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumn(int,double[])": 7.75,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setEntry(int,int,double)": 22.28125,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRow(int,double[])": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setSubMatrix(double[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.BlockRealMatrix)": 18.40625,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 21.3125,
        "org.apache.commons.math3.linear$BlockRealMatrix#toBlocksLayout(double[][])": 111.40625,
        "org.apache.commons.math3.linear$BlockRealMatrix#transpose()": 26.15625,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 8.71875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#MatrixDimensionMismatchException(int,int,int,int)": 37.78125,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedColumnDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedRowDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongColumnDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongRowDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#<clinit>()": 376.4193548387097,
        "org.apache.commons.math3.linear$MatrixUtils#MatrixUtils()": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#bigFractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils#checkAdditionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 29.0625,
        "org.apache.commons.math3.linear$MatrixUtils#checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 337.7096774193548,
        "org.apache.commons.math3.linear$MatrixUtils#checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)": 304.80645161290323,
        "org.apache.commons.math3.linear$MatrixUtils#checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 118.1875,
        "org.apache.commons.math3.linear$MatrixUtils#checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 336.741935483871,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int,int,int)": 40.6875,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int[],int[])": 4.84375,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubtractionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 95.90625,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnRealMatrix(double[])": 12.59375,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldDiagonalMatrix(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldIdentityMatrix(org.apache.commons.math3.Field,int)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.Field,int,int)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.FieldElement[][])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldVector(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealDiagonalMatrix(double[])": 20.34375,
        "org.apache.commons.math3.linear$MatrixUtils#createRealIdentityMatrix(int)": 54.25,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(double[][])": 171.46875,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(int,int)": 106.5625,
        "org.apache.commons.math3.linear$MatrixUtils#createRealVector(double[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createRowRealMatrix(double[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealMatrix(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealVector(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#fractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealMatrix(org.apache.commons.math3.linear.RealMatrix,java.io.ObjectOutputStream)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealVector(org.apache.commons.math3.linear.RealVector,java.io.ObjectOutputStream)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#solveLowerTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#solveUpperTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#MatrixUtils$BigFractionMatrixConverter()": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#getConvertedMatrix()": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#start(int,int,int,int,int,int)": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.BigFraction)": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#MatrixUtils$FractionMatrixConverter()": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#getConvertedMatrix()": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#start(int,int,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.Fraction)": 0.96875,
        "org.apache.commons.math3.linear$NonSquareMatrixException#NonSquareMatrixException(int,int)": 13.5625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(int,int)": 30.03125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(org.apache.commons.math3.linear.OpenMapRealMatrix)": 8.71875,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#add(org.apache.commons.math3.linear.OpenMapRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#computeKey(int,int)": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#copy()": 1.9375,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#createMatrix(int,int)": 6.78125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getColumnDimension()": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getEntry(int,int)": 27.125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getRowDimension()": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3.875,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3.875,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#setEntry(int,int,double)": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.OpenMapRealMatrix)": 5.8125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 5.8125,
        "org.apache.commons.math3.linear$RealLinearOperator#RealLinearOperator()": 495.45161290322585,
        "org.apache.commons.math3.linear$RealLinearOperator#isTransposable()": 0.0,
        "org.apache.commons.math3.linear$RealLinearOperator#operateTranspose(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat()": 3.875,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 376.4193548387097,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 469.3225806451613,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.text.NumberFormat)": 469.3225806451613,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix)": 15.5,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition)": 15.5,
        "org.apache.commons.math3.linear$RealMatrixFormat#getAvailableLocales()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getColumnSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getFormat()": 461.5806451612903,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance()": 464.48387096774195,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance(java.util.Locale)": 469.3225806451613,
        "org.apache.commons.math3.linear$RealMatrixFormat#getPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String)": 11.625,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String,java.text.ParsePosition)": 15.5,
        "org.apache.commons.math3.linear$RealVector#RealVector()": 544.8064516129032,
        "org.apache.commons.math3.linear$RealVector#add(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#addToEntry(int,double)": 5.8125,
        "org.apache.commons.math3.linear$RealVector#checkIndex(int)": 168.5625,
        "org.apache.commons.math3.linear$RealVector#checkIndices(int,int)": 23.25,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(int)": 68.78125,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 58.125,
        "org.apache.commons.math3.linear$RealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 8.71875,
        "org.apache.commons.math3.linear$RealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$RealVector#cosine(org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$RealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 27.125,
        "org.apache.commons.math3.linear$RealVector#equals(java.lang.Object)": 0.0,
        "org.apache.commons.math3.linear$RealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#getL1Norm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#getLInfNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector#getMaxIndex()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getMaxValue()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getMinIndex()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getMinValue()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#getNorm()": 21.3125,
        "org.apache.commons.math3.linear$RealVector#hashCode()": 0.0,
        "org.apache.commons.math3.linear$RealVector#iterator()": 33.90625,
        "org.apache.commons.math3.linear$RealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#mapAdd(double)": 2.90625,
        "org.apache.commons.math3.linear$RealVector#mapAddToSelf(double)": 3.875,
        "org.apache.commons.math3.linear$RealVector#mapDivide(double)": 6.78125,
        "org.apache.commons.math3.linear$RealVector#mapDivideToSelf(double)": 6.78125,
        "org.apache.commons.math3.linear$RealVector#mapMultiply(double)": 63.9375,
        "org.apache.commons.math3.linear$RealVector#mapMultiplyToSelf(double)": 12.59375,
        "org.apache.commons.math3.linear$RealVector#mapSubtract(double)": 4.84375,
        "org.apache.commons.math3.linear$RealVector#mapSubtractToSelf(double)": 4.84375,
        "org.apache.commons.math3.linear$RealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 24.21875,
        "org.apache.commons.math3.linear$RealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 4.84375,
        "org.apache.commons.math3.linear$RealVector#projection(org.apache.commons.math3.linear.RealVector)": 13.5625,
        "org.apache.commons.math3.linear$RealVector#set(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#sparseIterator()": 30.03125,
        "org.apache.commons.math3.linear$RealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector#toArray()": 2.90625,
        "org.apache.commons.math3.linear$RealVector#unitVector()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#unitize()": 4.84375,
        "org.apache.commons.math3.linear$RealVector#unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)": 27.125,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3.875,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 7.75,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3.875,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 7.75,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3.875,
        "org.apache.commons.math3.linear$RealVector$1#hasNext()": 33.90625,
        "org.apache.commons.math3.linear$RealVector$1#next()": 33.90625,
        "org.apache.commons.math3.linear$RealVector$1#remove()": 2.90625,
        "org.apache.commons.math3.linear$RealVector$2#add(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#addToEntry(int,double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#append(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#append(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#combine(double,double,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#copy()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#cosine(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#dotProduct(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#ebeDivide(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealVector$2#getDimension()": 5.8125,
        "org.apache.commons.math3.linear$RealVector$2#getDistance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getEntry(int)": 7.75,
        "org.apache.commons.math3.linear$RealVector$2#getL1Distance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getL1Norm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getLInfNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getSubVector(int,int)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#isInfinite()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#isNaN()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#iterator()": 3.875,
        "org.apache.commons.math3.linear$RealVector$2#map(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapAdd(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapAddToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapDivide(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapDivideToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiply(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiplyToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtract(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtractToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#outerProduct(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#set(double)": 2.90625,
        "org.apache.commons.math3.linear$RealVector$2#setEntry(int,double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#sparseIterator()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#subtract(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector$2#toArray()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#unitVector()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#unitize()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2$1#hasNext()": 3.875,
        "org.apache.commons.math3.linear$RealVector$2$1#next()": 3.875,
        "org.apache.commons.math3.linear$RealVector$2$1#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2$2#hasNext()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2$2#next()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2$2#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2)": 5.8125,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#getValue()": 5.8125,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#setValue(double)": 3.875,
        "org.apache.commons.math3.linear$RealVector$Entry#RealVector$Entry(org.apache.commons.math3.linear.RealVector)": 71.6875,
        "org.apache.commons.math3.linear$RealVector$Entry#getIndex()": 59.09375,
        "org.apache.commons.math3.linear$RealVector$Entry#getValue()": 56.1875,
        "org.apache.commons.math3.linear$RealVector$Entry#setIndex(int)": 71.6875,
        "org.apache.commons.math3.linear$RealVector$Entry#setValue(double)": 24.21875,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#RealVector$SparseEntryIterator(org.apache.commons.math3.linear.RealVector)": 30.03125,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#advance(org.apache.commons.math3.linear.RealVector$Entry)": 30.03125,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#hasNext()": 30.03125,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#next()": 28.09375,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat()": 7.75,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 374.48387096774195,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.text.NumberFormat)": 374.48387096774195,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector)": 21.3125,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition)": 21.3125,
        "org.apache.commons.math3.linear$RealVectorFormat#getAvailableLocales()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getFormat()": 1.9375,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance()": 364.80645161290323,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance(java.util.Locale)": 374.48387096774195,
        "org.apache.commons.math3.linear$RealVectorFormat#getPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String)": 27.125,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String,java.text.ParsePosition)": 34.875,
        "org.apache.commons.math3.optimization$GoalType#<clinit>()": 89.96774193548387,
        "org.apache.commons.math3.optimization$GoalType#GoalType(java.lang.String,int)": 89.96774193548387,
        "org.apache.commons.math3.optimization$PointValuePair#PointValuePair(double[],double)": 95.90625,
        "org.apache.commons.math3.optimization$PointValuePair#PointValuePair(double[],double,boolean)": 95.90625,
        "org.apache.commons.math3.optimization$PointValuePair#getPoint()": 70.71875,
        "org.apache.commons.math3.optimization$PointValuePair#getPointRef()": 28.09375,
        "org.apache.commons.math3.optimization$PointValuePair#writeReplace()": 0.96875,
        "org.apache.commons.math3.optimization$PointValuePair$DataTransferObject#PointValuePair$DataTransferObject(double[],double)": 0.96875,
        "org.apache.commons.math3.optimization$PointValuePair$DataTransferObject#readResolve()": 0.96875,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#AbstractLinearOptimizer()": -6.806451612903224,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#getConstraints()": -6.806451612903224,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#getFunction()": -6.806451612903224,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#getGoalType()": -6.806451612903224,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#getIterations()": 0.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#getMaxIterations()": 0.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#incrementIterationsCounter()": -8.741935483870968,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#optimize(org.apache.commons.math3.optimization.linear.LinearObjectiveFunction,java.util.Collection,org.apache.commons.math3.optimization.GoalType,boolean)": -6.806451612903224,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#restrictToNonNegative()": -6.806451612903224,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#setMaxIterations(int)": -6.806451612903224,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#LinearConstraint(double[],double,org.apache.commons.math3.optimization.linear.Relationship,double[],double)": 0.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#LinearConstraint(double[],org.apache.commons.math3.optimization.linear.Relationship,double)": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#LinearConstraint(org.apache.commons.math3.linear.RealVector,double,org.apache.commons.math3.optimization.linear.Relationship,org.apache.commons.math3.linear.RealVector,double)": 0.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#LinearConstraint(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.optimization.linear.Relationship,double)": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#equals(java.lang.Object)": 0.96875,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#getCoefficients()": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#getRelationship()": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#getValue()": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#hashCode()": 0.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#readObject(java.io.ObjectInputStream)": 0.96875,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#writeObject(java.io.ObjectOutputStream)": 0.96875,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#LinearObjectiveFunction(double[],double)": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#LinearObjectiveFunction(org.apache.commons.math3.linear.RealVector,double)": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#equals(java.lang.Object)": 0.96875,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#getCoefficients()": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#getConstantTerm()": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#getValue(double[])": 20.34375,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#getValue(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#hashCode()": 0.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#readObject(java.io.ObjectInputStream)": 0.96875,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#writeObject(java.io.ObjectOutputStream)": 0.96875,
        "org.apache.commons.math3.optimization.linear$NoFeasibleSolutionException#NoFeasibleSolutionException()": 2.90625,
        "org.apache.commons.math3.optimization.linear$Relationship#<clinit>()": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$Relationship#Relationship(java.lang.String,int,java.lang.String)": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$Relationship#oppositeRelationship()": 4.84375,
        "org.apache.commons.math3.optimization.linear$Relationship#toString()": 0.0,
        "org.apache.commons.math3.optimization.linear$Relationship$1#<clinit>()": 4.84375,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#SimplexSolver()": -6.806451612903224,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#SimplexSolver(double,int)": -6.806451612903224,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#doIteration(org.apache.commons.math3.optimization.linear.SimplexTableau)": -8.741935483870968,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#doOptimize()": -6.806451612903224,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#getPivotColumn(org.apache.commons.math3.optimization.linear.SimplexTableau)": -8.741935483870968,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#getPivotRow(org.apache.commons.math3.optimization.linear.SimplexTableau,int)": -8.741935483870968,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#solvePhase1(org.apache.commons.math3.optimization.linear.SimplexTableau)": -6.806451612903224,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#SimplexTableau(org.apache.commons.math3.optimization.linear.LinearObjectiveFunction,java.util.Collection,org.apache.commons.math3.optimization.GoalType,boolean,double)": 3.875,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#SimplexTableau(org.apache.commons.math3.optimization.linear.LinearObjectiveFunction,java.util.Collection,org.apache.commons.math3.optimization.GoalType,boolean,double,int)": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#copyArray(double[],double[])": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#createTableau(boolean)": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#divideRow(int,double)": -8.741935483870968,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#dropPhase1Objective()": -8.741935483870968,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#equals(java.lang.Object)": 0.96875,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getArtificialVariableOffset()": -7.774193548387096,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getBasicRow(int)": -8.741935483870968,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getConstraintTypeCounts(org.apache.commons.math3.optimization.linear.Relationship)": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getData()": 2.90625,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getEntry(int,int)": -5.838709677419356,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getHeight()": -6.806451612903224,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getInvertedCoefficientSum(org.apache.commons.math3.linear.RealVector)": 15.5,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getNumArtificialVariables()": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getNumDecisionVariables()": 0.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getNumObjectiveFunctions()": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getNumSlackVariables()": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getOriginalNumDecisionVariables()": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getRhsOffset()": -7.774193548387096,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getSlackVariableOffset()": -5.838709677419356,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getSolution()": 20.34375,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getWidth()": -5.838709677419356,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#hashCode()": 0.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#initializeColumnLabels()": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#isOptimal()": -6.806451612903224,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#normalize(org.apache.commons.math3.optimization.linear.LinearConstraint)": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#normalizeConstraints(java.util.Collection)": -2.93548387096774,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#readObject(java.io.ObjectInputStream)": 0.96875,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#setEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#subtractRow(int,int,double)": -8.741935483870968,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#writeObject(java.io.ObjectOutputStream)": 0.96875,
        "org.apache.commons.math3.optimization.linear$UnboundedSolutionException#UnboundedSolutionException()": 0.96875,
        "org.apache.commons.math3.util$CompositeFormat#CompositeFormat()": 0.0,
        "org.apache.commons.math3.util$CompositeFormat#formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)": 87.1875,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat()": 398.6774193548387,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat(java.util.Locale)": 782.8709677419355,
        "org.apache.commons.math3.util$CompositeFormat#parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)": 106.5625,
        "org.apache.commons.math3.util$CompositeFormat#parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)": 104.625,
        "org.apache.commons.math3.util$CompositeFormat#parseNextCharacter(java.lang.String,java.text.ParsePosition)": 106.5625,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,double,java.text.ParsePosition)": 23.25,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)": 101.71875,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 2860.6129032258063,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1467.0645161290322,
        "org.apache.commons.math3.util$FastMath#abs(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#abs(int)": 312.90625,
        "org.apache.commons.math3.util$FastMath#abs(long)": 674.483870967742,
        "org.apache.commons.math3.util$FastMath#acos(double)": 19.375,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#asin(double)": 20.34375,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#atan(double)": 18.40625,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 79.4375,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 72.65625,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 37.78125,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 1168.3125,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cos(double)": 220.875,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 289.65625,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 60.0625,
        "org.apache.commons.math3.util$FastMath#exp(double)": 640.34375,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 1280.6875,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 20.34375,
        "org.apache.commons.math3.util$FastMath#floor(double)": 1333.96875,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 62.96875,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 60.0625,
        "org.apache.commons.math3.util$FastMath#log(double)": 1073.375,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1284.5625,
        "org.apache.commons.math3.util$FastMath#log10(double)": 52.3125,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 13.5625,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 552.1875,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 270.28125,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 0.96875,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 248.0,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 512.46875,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 12.59375,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 326.46875,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 326.46875,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 1141.1875,
        "org.apache.commons.math3.util$FastMath#random()": 18.40625,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.84375,
        "org.apache.commons.math3.util$FastMath#rint(double)": 19.375,
        "org.apache.commons.math3.util$FastMath#round(double)": 18.40625,
        "org.apache.commons.math3.util$FastMath#round(float)": 2.90625,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 45.53125,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9375,
        "org.apache.commons.math3.util$FastMath#signum(double)": 10.65625,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#sin(double)": 303.21875,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 310.0,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1507.375,
        "org.apache.commons.math3.util$FastMath#tan(double)": 22.28125,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 22.28125,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 9.6875,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 225.71875,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double,double)": 252.84375,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 252.84375,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 252.84375,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 252.84375,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 1275.84375,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 1271.96875,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1271.96875,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 0.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 16.46875,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 0.96875,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 714.1612903225806,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 74.59375,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 3.875,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 3.875,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 1.9375,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 1.9375,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 45.53125,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 8.71875,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 34.875,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 4.84375,
        "org.apache.commons.math3.util$Pair#Pair(java.lang.Object,java.lang.Object)": 257.6875,
        "org.apache.commons.math3.util$Pair#Pair(org.apache.commons.math3.util.Pair)": 0.0,
        "org.apache.commons.math3.util$Pair#equals(java.lang.Object)": 0.96875,
        "org.apache.commons.math3.util$Pair#getFirst()": 67.8125,
        "org.apache.commons.math3.util$Pair#getKey()": 161.78125,
        "org.apache.commons.math3.util$Pair#getSecond()": 67.8125,
        "org.apache.commons.math3.util$Pair#getValue()": 121.09375,
        "org.apache.commons.math3.util$Pair#hashCode()": 0.96875,
        "org.apache.commons.math3.util$Precision#<clinit>()": 984.1612903225806,
        "org.apache.commons.math3.util$Precision#Precision()": 0.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 20.29032258064516,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": -6.806451612903224,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 141.4375,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 345.4516129032258,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 670.6129032258065,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 0.96875,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 77.5,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 121.09375,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 40.6875,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 76.53125,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 0.0,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 0.96875
    },
    "Math-29": {
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 132.97058823529412,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 152.38235294117646,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 2.911764705882353,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.676470588235293,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 33.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.9705882352941176,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 701.7352941176471,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 6.794117647058823,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 567.7941176470588,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 12.617647058823529,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 6.794117647058823,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 10.676470588235293,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 60.1764705882353,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 191.2058823529412,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.911764705882353,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.911764705882353,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 27.176470588235293,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 174.7058823529412,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 0.9705882352941176,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix()": 276.61764705882354,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix(int,int)": 389.20588235294116,
        "org.apache.commons.math3.linear$AbstractRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 15.529411764705882,
        "org.apache.commons.math3.linear$AbstractRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int,int,int,int,double[][])": 24.264705882352942,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int[],int[],double[][])": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#equals(java.lang.Object)": 40.76470588235294,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumn(int)": 33.970588235294116,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnMatrix(int)": 15.529411764705882,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnVector(int)": 15.529411764705882,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getData()": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getFrobeniusNorm()": 12.617647058823529,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getNorm()": 68.91176470588235,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRow(int)": 46.588235294117645,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowMatrix(int)": 3.8823529411764706,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowVector(int)": 28.147058823529413,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int,int,int,int)": 9.705882352941176,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int[],int[])": 2.911764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getTrace()": 2.911764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#hashCode()": 6.794117647058823,
        "org.apache.commons.math3.linear$AbstractRealMatrix#isSquare()": 130.05882352941177,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 87.3529411764706,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(double[])": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(org.apache.commons.math3.linear.RealVector)": 38.8235294117647,
        "org.apache.commons.math3.linear$AbstractRealMatrix#power(int)": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(double[])": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealMatrix)": 2.911764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarAdd(double)": 13.588235294117647,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarMultiply(double)": 15.529411764705882,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumn(int,double[])": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 20.38235294117647,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRow(int,double[])": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 29.11764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setSubMatrix(double[][],int,int)": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 71.82352941176471,
        "org.apache.commons.math3.linear$AbstractRealMatrix#toString()": 4.852941176470588,
        "org.apache.commons.math3.linear$AbstractRealMatrix#transpose()": 142.6764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 7.764705882352941,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4.852941176470588,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 144.61764705882354,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 23.294117647058822,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.9705882352941176,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 1.9411764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#end()": 68.91176470588235,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#start(int,int,int,int,int,int)": 68.91176470588235,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#visit(int,int,double)": 68.91176470588235,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#end()": 12.617647058823529,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#start(int,int,int,int,int,int)": 12.617647058823529,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#visit(int,int,double)": 12.617647058823529,
        "org.apache.commons.math3.linear$AbstractRealMatrix$3#visit(int,int,double)": 2.911764705882353,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#start(int,int,int,int,int,int)": 24.264705882352942,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#visit(int,int,double)": 24.264705882352942,
        "org.apache.commons.math3.linear$AbstractRealMatrix$5#visit(int,int,double)": 142.6764705882353,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix()": 3.8823529411764706,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[])": 3.8823529411764706,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][])": 226.14705882352942,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][],boolean)": 100.94117647058823,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(int,int)": 256.2352941176471,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#add(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 1.9411764705882353,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copy()": 11.647058823529411,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyIn(double[][])": 228.08823529411765,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyOut()": 180.52941176470588,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#createMatrix(int,int)": 172.76470588235293,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getColumnDimension()": 310.5882352941176,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getData()": 173.73529411764707,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getDataRef()": 39.794117647058826,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getEntry(int,int)": 227.11764705882354,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getRowDimension()": 310.5882352941176,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 10.676470588235293,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#operate(double[])": 40.76470588235294,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#preMultiply(double[])": 0.9705882352941176,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setEntry(int,int,double)": 247.5,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setSubMatrix(double[][],int,int)": 228.08823529411765,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 0.9705882352941176,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.9705882352941176,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 64.05882352941177,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3.8823529411764706,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 143.64705882352942,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 23.294117647058822,
        "org.apache.commons.math3.linear$ArrayRealVector#<clinit>()": 364.94117647058823,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector()": 2.911764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[])": 195.08823529411765,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],boolean)": 248.47058823529412,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],double[])": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],org.apache.commons.math3.linear.ArrayRealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int)": 135.88235294117646,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int,double)": 2.911764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[])": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[],int,int)": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean)": 97.05882352941177,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,double[])": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector)": 2.911764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.RealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.ArrayRealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#add(org.apache.commons.math3.linear.RealVector)": 8.735294117647058,
        "org.apache.commons.math3.linear$ArrayRealVector#addToEntry(int,double)": 2.911764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#append(double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.ArrayRealVector)": 0.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.RealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(int)": 128.11764705882354,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 8.735294117647058,
        "org.apache.commons.math3.linear$ArrayRealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 16.5,
        "org.apache.commons.math3.linear$ArrayRealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 39.794117647058826,
        "org.apache.commons.math3.linear$ArrayRealVector#copy()": 96.08823529411765,
        "org.apache.commons.math3.linear$ArrayRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 76.67647058823529,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": 10.676470588235293,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 16.5,
        "org.apache.commons.math3.linear$ArrayRealVector#equals(java.lang.Object)": 46.588235294117645,
        "org.apache.commons.math3.linear$ArrayRealVector#getDataRef()": 47.55882352941177,
        "org.apache.commons.math3.linear$ArrayRealVector#getDimension()": 265.94117647058823,
        "org.apache.commons.math3.linear$ArrayRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 2.911764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#getEntry(int)": 219.35294117647058,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Norm()": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfNorm()": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#getNorm()": 50.470588235294116,
        "org.apache.commons.math3.linear$ArrayRealVector#getSubVector(int,int)": 6.794117647058823,
        "org.apache.commons.math3.linear$ArrayRealVector#hashCode()": 2.911764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#isInfinite()": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#isNaN()": 49.5,
        "org.apache.commons.math3.linear$ArrayRealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 4.852941176470588,
        "org.apache.commons.math3.linear$ArrayRealVector#mapAddToSelf(double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#mapDivideToSelf(double)": 2.911764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#mapMultiplyToSelf(double)": 60.1764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#mapSubtractToSelf(double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 4.852941176470588,
        "org.apache.commons.math3.linear$ArrayRealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 2.911764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#projection(org.apache.commons.math3.linear.RealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#set(double)": 42.705882352941174,
        "org.apache.commons.math3.linear$ArrayRealVector#setEntry(int,double)": 72.79411764705883,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,double[])": 25.235294117647058,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 26.205882352941178,
        "org.apache.commons.math3.linear$ArrayRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 75.70588235294117,
        "org.apache.commons.math3.linear$ArrayRealVector#toArray()": 99.97058823529412,
        "org.apache.commons.math3.linear$ArrayRealVector#toString()": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#unitVector()": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#unitize()": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3.8823529411764706,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3.8823529411764706,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 1.9411764705882353,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 0.9705882352941176,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 1.9411764705882353,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(int,int)": 29.11764705882353,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(org.apache.commons.math3.linear.OpenMapRealMatrix)": 8.735294117647058,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#add(org.apache.commons.math3.linear.OpenMapRealMatrix)": 1.9411764705882353,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#computeKey(int,int)": 28.147058823529413,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#copy()": 1.9411764705882353,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#createMatrix(int,int)": 6.794117647058823,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getColumnDimension()": 28.147058823529413,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getEntry(int,int)": 26.205882352941178,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getRowDimension()": 28.147058823529413,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3.8823529411764706,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3.8823529411764706,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#setEntry(int,int,double)": 28.147058823529413,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.OpenMapRealMatrix)": 5.823529411764706,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 5.823529411764706,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector()": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(double[])": 51.903225806451616,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(double[],double)": 51.903225806451616,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(int)": 3.8823529411764706,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(int,double)": 10.676470588235293,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(int,int)": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(java.lang.Double[])": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(java.lang.Double[],double)": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(org.apache.commons.math3.linear.OpenMapRealVector)": 2.548387096774194,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(org.apache.commons.math3.linear.OpenMapRealVector,int)": 1.9411764705882353,
        "org.apache.commons.math3.linear$OpenMapRealVector#OpenMapRealVector(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#add(org.apache.commons.math3.linear.OpenMapRealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#add(org.apache.commons.math3.linear.RealVector)": 2.911764705882353,
        "org.apache.commons.math3.linear$OpenMapRealVector#append(double)": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#append(org.apache.commons.math3.linear.OpenMapRealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#append(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#copy()": 11.647058823529411,
        "org.apache.commons.math3.linear$OpenMapRealVector#dotProduct(org.apache.commons.math3.linear.OpenMapRealVector)": 2.911764705882353,
        "org.apache.commons.math3.linear$OpenMapRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 2.911764705882353,
        "org.apache.commons.math3.linear$OpenMapRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": -29.060606060606062,
        "org.apache.commons.math3.linear$OpenMapRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": -14.0625,
        "org.apache.commons.math3.linear$OpenMapRealVector#equals(java.lang.Object)": 2.911764705882353,
        "org.apache.commons.math3.linear$OpenMapRealVector#getDimension()": 57.70967741935483,
        "org.apache.commons.math3.linear$OpenMapRealVector#getDistance(org.apache.commons.math3.linear.OpenMapRealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#getEntries()": 3.516129032258064,
        "org.apache.commons.math3.linear$OpenMapRealVector#getEntry(int)": 26.741935483870968,
        "org.apache.commons.math3.linear$OpenMapRealVector#getL1Distance(org.apache.commons.math3.linear.OpenMapRealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#getSparsity()": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealVector#getSubVector(int,int)": 6.794117647058823,
        "org.apache.commons.math3.linear$OpenMapRealVector#hashCode()": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#isDefaultValue(double)": 59.64516129032258,
        "org.apache.commons.math3.linear$OpenMapRealVector#isInfinite()": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#isNaN()": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#mapAdd(double)": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#mapAddToSelf(double)": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#projection(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#set(double)": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#setEntry(int,double)": 21.903225806451616,
        "org.apache.commons.math3.linear$OpenMapRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 5.823529411764706,
        "org.apache.commons.math3.linear$OpenMapRealVector#sparseIterator()": 9.705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#subtract(org.apache.commons.math3.linear.OpenMapRealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$OpenMapRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3.8823529411764706,
        "org.apache.commons.math3.linear$OpenMapRealVector#toArray()": 5.823529411764706,
        "org.apache.commons.math3.linear$OpenMapRealVector#unitVector()": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector#unitize()": 0.9705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector$OpenMapEntry#OpenMapRealVector$OpenMapEntry(org.apache.commons.math3.linear.OpenMapRealVector,org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator)": 9.705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector$OpenMapEntry#getIndex()": 4.852941176470588,
        "org.apache.commons.math3.linear$OpenMapRealVector$OpenMapEntry#getValue()": 9.705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector$OpenMapEntry#setValue(double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$OpenMapRealVector$OpenMapSparseIterator#OpenMapRealVector$OpenMapSparseIterator(org.apache.commons.math3.linear.OpenMapRealVector)": 9.705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector$OpenMapSparseIterator#hasNext()": 9.705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector$OpenMapSparseIterator#next()": 9.705882352941176,
        "org.apache.commons.math3.linear$OpenMapRealVector$OpenMapSparseIterator#remove()": 0.0,
        "org.apache.commons.math3.linear$RealLinearOperator#RealLinearOperator()": 495.97058823529414,
        "org.apache.commons.math3.linear$RealLinearOperator#isTransposable()": 0.0,
        "org.apache.commons.math3.linear$RealLinearOperator#operateTranspose(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealVector#RealVector()": 468.03225806451616,
        "org.apache.commons.math3.linear$RealVector#add(org.apache.commons.math3.linear.RealVector)": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector#addToEntry(int,double)": 5.823529411764706,
        "org.apache.commons.math3.linear$RealVector#checkIndex(int)": 49.0,
        "org.apache.commons.math3.linear$RealVector#checkIndices(int,int)": 23.294117647058822,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(int)": 27.70967741935484,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 30.08823529411765,
        "org.apache.commons.math3.linear$RealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 7.764705882352941,
        "org.apache.commons.math3.linear$RealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 17.470588235294116,
        "org.apache.commons.math3.linear$RealVector#cosine(org.apache.commons.math3.linear.RealVector)": 12.617647058823529,
        "org.apache.commons.math3.linear$RealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 2.911764705882353,
        "org.apache.commons.math3.linear$RealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector#getL1Norm()": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector#getLInfNorm()": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector#getMaxIndex()": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector#getMaxValue()": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector#getMinIndex()": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector#getMinValue()": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector#getNorm()": 8.735294117647058,
        "org.apache.commons.math3.linear$RealVector#iterator()": 9.705882352941176,
        "org.apache.commons.math3.linear$RealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 2.911764705882353,
        "org.apache.commons.math3.linear$RealVector#mapAdd(double)": 2.911764705882353,
        "org.apache.commons.math3.linear$RealVector#mapAddToSelf(double)": 0.0,
        "org.apache.commons.math3.linear$RealVector#mapDivide(double)": 5.823529411764706,
        "org.apache.commons.math3.linear$RealVector#mapDivideToSelf(double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector#mapMultiply(double)": 64.05882352941177,
        "org.apache.commons.math3.linear$RealVector#mapMultiplyToSelf(double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector#mapSubtract(double)": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector#mapSubtractToSelf(double)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 2.911764705882353,
        "org.apache.commons.math3.linear$RealVector#set(double)": 0.0,
        "org.apache.commons.math3.linear$RealVector#sparseIterator()": 13.588235294117647,
        "org.apache.commons.math3.linear$RealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector#toArray()": 0.0,
        "org.apache.commons.math3.linear$RealVector#unitVector()": 0.0,
        "org.apache.commons.math3.linear$RealVector#unitize()": 0.0,
        "org.apache.commons.math3.linear$RealVector#unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)": 26.205882352941178,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 7.764705882352941,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 7.764705882352941,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector$1#hasNext()": 9.705882352941176,
        "org.apache.commons.math3.linear$RealVector$1#next()": 9.705882352941176,
        "org.apache.commons.math3.linear$RealVector$1#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2#add(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#addToEntry(int,double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#append(double)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#append(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#combine(double,double,org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#copy()": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#cosine(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#dotProduct(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#ebeDivide(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#getDimension()": 4.852941176470588,
        "org.apache.commons.math3.linear$RealVector$2#getDistance(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#getEntry(int)": 6.794117647058823,
        "org.apache.commons.math3.linear$RealVector$2#getL1Distance(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#getL1Norm()": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#getLInfNorm()": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#getNorm()": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#getSubVector(int,int)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#isInfinite()": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#isNaN()": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#iterator()": 2.911764705882353,
        "org.apache.commons.math3.linear$RealVector$2#map(org.apache.commons.math3.analysis.UnivariateFunction)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#mapAdd(double)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#mapAddToSelf(double)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#mapDivide(double)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#mapDivideToSelf(double)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiply(double)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiplyToSelf(double)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtract(double)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtractToSelf(double)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#outerProduct(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#projection(org.apache.commons.math3.linear.RealVector)": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#set(double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#setEntry(int,double)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#sparseIterator()": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2#subtract(org.apache.commons.math3.linear.RealVector)": 2.911764705882353,
        "org.apache.commons.math3.linear$RealVector$2#toArray()": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#unitVector()": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2#unitize()": 0.9705882352941176,
        "org.apache.commons.math3.linear$RealVector$2$1#hasNext()": 2.911764705882353,
        "org.apache.commons.math3.linear$RealVector$2$1#next()": 2.911764705882353,
        "org.apache.commons.math3.linear$RealVector$2$1#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2$2#hasNext()": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2$2#next()": 1.9411764705882353,
        "org.apache.commons.math3.linear$RealVector$2$2#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2)": 4.852941176470588,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#getValue()": 4.852941176470588,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#setValue(double)": 3.8823529411764706,
        "org.apache.commons.math3.linear$RealVector$Entry#RealVector$Entry(org.apache.commons.math3.linear.RealVector)": 33.0,
        "org.apache.commons.math3.linear$RealVector$Entry#getIndex()": 26.205882352941178,
        "org.apache.commons.math3.linear$RealVector$Entry#getValue()": 21.352941176470587,
        "org.apache.commons.math3.linear$RealVector$Entry#setIndex(int)": 33.0,
        "org.apache.commons.math3.linear$RealVector$Entry#setValue(double)": 2.911764705882353,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#RealVector$SparseEntryIterator(org.apache.commons.math3.linear.RealVector)": 13.588235294117647,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#advance(org.apache.commons.math3.linear.RealVector$Entry)": 13.588235294117647,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#hasNext()": 13.588235294117647,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#next()": 13.588235294117647,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#remove()": 0.0,
        "org.apache.commons.math3.linear$SparseRealVector#SparseRealVector()": 59.64516129032258,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 2779.0,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 0.9705882352941176,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1422.225806451613,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3.8823529411764706,
        "org.apache.commons.math3.util$FastMath#abs(int)": 313.5,
        "org.apache.commons.math3.util$FastMath#abs(long)": 693.0,
        "org.apache.commons.math3.util$FastMath#acos(double)": 18.441176470588236,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 0.9705882352941176,
        "org.apache.commons.math3.util$FastMath#asin(double)": 19.41176470588235,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 0.9705882352941176,
        "org.apache.commons.math3.util$FastMath#atan(double)": 17.470588235294116,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 78.61764705882354,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 72.79411764705883,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 0.9705882352941176,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 36.88235294117647,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 1119.3225806451612,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 11.647058823529411,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9411764705882353,
        "org.apache.commons.math3.util$FastMath#cos(double)": 214.5,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 282.44117647058823,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 21.352941176470587,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 63.088235294117645,
        "org.apache.commons.math3.util$FastMath#exp(double)": 639.6176470588235,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 1218.0882352941176,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 11.647058823529411,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 19.41176470588235,
        "org.apache.commons.math3.util$FastMath#floor(double)": 1284.8064516129032,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 63.088235294117645,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9411764705882353,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 60.1764705882353,
        "org.apache.commons.math3.util$FastMath#log(double)": 1069.5882352941176,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.9705882352941176,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1221.0,
        "org.apache.commons.math3.util$FastMath#log10(double)": 51.44117647058823,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 12.617647058823529,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 533.8235294117648,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9411764705882353,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 256.2352941176471,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 0.9705882352941176,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 242.64705882352942,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9411764705882353,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 539.6470588235294,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 12.617647058823529,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 12.617647058823529,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.911764705882353,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 1.9411764705882353,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.9705882352941176,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 318.3529411764706,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 318.3529411764706,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 1077.3529411764705,
        "org.apache.commons.math3.util$FastMath#random()": 18.441176470588236,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.852941176470588,
        "org.apache.commons.math3.util$FastMath#rint(double)": 18.441176470588236,
        "org.apache.commons.math3.util$FastMath#round(double)": 18.441176470588236,
        "org.apache.commons.math3.util$FastMath#round(float)": 2.911764705882353,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 45.61764705882353,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9411764705882353,
        "org.apache.commons.math3.util$FastMath#signum(double)": 9.705882352941176,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9411764705882353,
        "org.apache.commons.math3.util$FastMath#sin(double)": 297.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 301.8529411764706,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 21.352941176470587,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1476.264705882353,
        "org.apache.commons.math3.util$FastMath#tan(double)": 21.352941176470587,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 21.352941176470587,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 8.735294117647058,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 1.9411764705882353,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 1.9411764705882353,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 224.2058823529412,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 2.911764705882353,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 1213.235294117647,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 1209.3529411764705,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1208.3823529411766,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#OpenIntToDoubleHashMap()": 14.558823529411764,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#OpenIntToDoubleHashMap(double)": 85.7741935483871,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#OpenIntToDoubleHashMap(int)": 1.9411764705882353,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#OpenIntToDoubleHashMap(int,double)": 102.2258064516129,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#OpenIntToDoubleHashMap(org.apache.commons.math3.util.OpenIntToDoubleHashMap)": 14.161290322580644,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#changeIndexSign(int)": 19.967741935483872,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#computeCapacity(int)": 102.2258064516129,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#containsKey(int)": 9.322580645161292,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#containsKey(int,int)": 66.41935483870968,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#doRemove(int)": 9.322580645161292,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#findInsertionIndex(int)": 85.7741935483871,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#findInsertionIndex(int[],byte[],int,int)": 85.7741935483871,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#get(int)": 62.54838709677419,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#growTable()": 12.225806451612904,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#hashOf(int)": 87.70967741935483,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#iterator()": 23.838709677419352,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#nextPowerOfTwo(int)": 0.9705882352941176,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#perturb(int)": 19.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#probe(int,int)": 19.0,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#put(int,double)": 85.7741935483871,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#readObject(java.io.ObjectInputStream)": 1.9411764705882353,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#remove(int)": 23.838709677419352,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#shouldGrowTable()": 85.7741935483871,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap#size()": 14.558823529411764,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap$Iterator#OpenIntToDoubleHashMap$Iterator(org.apache.commons.math3.util.OpenIntToDoubleHashMap)": 23.838709677419352,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap$Iterator#advance()": 23.838709677419352,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap$Iterator#hasNext()": 22.87096774193548,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap$Iterator#key()": 17.06451612903226,
        "org.apache.commons.math3.util$OpenIntToDoubleHashMap$Iterator#value()": 22.87096774193548
    },
    "Math-3": {
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 172.4375,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 192.78125,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 2.90625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.65625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 52.3125,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 866.0625,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 8.71875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 1.9375,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 706.21875,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 13.5625,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 62.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 89.125,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 60.0625,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 11.625,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 29.0625,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 15.5,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 0.96875,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 21.3125,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 11.625,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 50.375,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 79.4375,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 50.375,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 76.53125,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 105.59375,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 240.25,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.90625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.90625,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 0.0,
        "org.apache.commons.math3.util$MathArrays#buildArray(org.apache.commons.math3.Field,int)": 128.84375,
        "org.apache.commons.math3.util$MathArrays#buildArray(org.apache.commons.math3.Field,int,int)": 126.90625,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[])": 393.3125,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[][])": 4.84375,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 46.5,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 47.46875,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 177.28125,
        "org.apache.commons.math3.util$MathArrays#checkPositive(double[])": 384.59375,
        "org.apache.commons.math3.util$MathArrays#checkRectangular(long[][])": 4.84375,
        "org.apache.commons.math3.util$MathArrays#convolve(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 61.03125,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 88.15625,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 5.8125,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": 39.71875,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 11.625,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 6.78125,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 2.90625,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 2.90625,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#ebeAdd(double[],double[])": 1.9375,
        "org.apache.commons.math3.util$MathArrays#ebeDivide(double[],double[])": 8.71875,
        "org.apache.commons.math3.util$MathArrays#ebeMultiply(double[],double[])": 1.9375,
        "org.apache.commons.math3.util$MathArrays#ebeSubtract(double[],double[])": 3.875,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 2.90625,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 4.84375,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.96875,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.96875,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 71.6875,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 73.625,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 11.625,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": -20.35483870967742,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": 24.21875,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#scale(double,double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#scaleInPlace(double,double[])": 6.78125,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 8.71875,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 9.6875,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 7.75,
        "org.apache.commons.math3.util$MathArrays$2#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 0.96875,
        "org.apache.commons.math3.util$MathArrays$3#<clinit>()": 173.40625,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 183.09375,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 183.09375
    },
    "Math-30": {
        "org.apache.commons.math3.distribution$AbstractRealDistribution#AbstractRealDistribution()": 483.8387096774194,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#cumulativeProbability(double,double)": 33.90625,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#getSolverAbsoluteAccuracy()": 1.9375,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#inverseCumulativeProbability(double)": 102.6875,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#reseedRandomGenerator(long)": 9.6875,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#sample()": 4.84375,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#sample(int)": 9.6875,
        "org.apache.commons.math3.distribution$AbstractRealDistribution$1#value(double)": 91.0625,
        "org.apache.commons.math3.distribution$NormalDistribution#<clinit>()": 20.29032258064516,
        "org.apache.commons.math3.distribution$NormalDistribution#NormalDistribution()": 0.0,
        "org.apache.commons.math3.distribution$NormalDistribution#NormalDistribution(double,double)": 20.29032258064516,
        "org.apache.commons.math3.distribution$NormalDistribution#NormalDistribution(double,double,double)": 20.29032258064516,
        "org.apache.commons.math3.distribution$NormalDistribution#cumulativeProbability(double)": -21.32258064516129,
        "org.apache.commons.math3.distribution$NormalDistribution#cumulativeProbability(double,double)": 3.875,
        "org.apache.commons.math3.distribution$NormalDistribution#density(double)": 2.90625,
        "org.apache.commons.math3.distribution$NormalDistribution#getMean()": 5.8125,
        "org.apache.commons.math3.distribution$NormalDistribution#getNumericalMean()": 3.875,
        "org.apache.commons.math3.distribution$NormalDistribution#getNumericalVariance()": 3.875,
        "org.apache.commons.math3.distribution$NormalDistribution#getSolverAbsoluteAccuracy()": 2.90625,
        "org.apache.commons.math3.distribution$NormalDistribution#getStandardDeviation()": 5.8125,
        "org.apache.commons.math3.distribution$NormalDistribution#getSupportLowerBound()": 3.875,
        "org.apache.commons.math3.distribution$NormalDistribution#getSupportUpperBound()": 3.875,
        "org.apache.commons.math3.distribution$NormalDistribution#isSupportConnected()": 2.90625,
        "org.apache.commons.math3.distribution$NormalDistribution#isSupportLowerBoundInclusive()": 0.0,
        "org.apache.commons.math3.distribution$NormalDistribution#isSupportUpperBoundInclusive()": 0.0,
        "org.apache.commons.math3.distribution$NormalDistribution#probability(double)": 0.0,
        "org.apache.commons.math3.distribution$NormalDistribution#sample()": 0.96875,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.65625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 32.9375,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 684.90625,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 6.78125,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 551.21875,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 12.59375,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 43.59375,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 62.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 42.625,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 18.40625,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 18.40625,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 10.65625,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 10.65625,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 25.1875,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 6.78125,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 10.65625,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 35.84375,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 77.5,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 43.59375,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 69.75,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 20.34375,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 113.34375,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 60.0625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 190.84375,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.90625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.90625,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 27.125,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 168.5625,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 0.96875,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 0.96875,
        "org.apache.commons.math3.random$RandomDataImpl#<clinit>()": 880.6129032258065,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl()": 876.741935483871,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl(org.apache.commons.math3.random.RandomGenerator)": 584.15625,
        "org.apache.commons.math3.random$RandomDataImpl#getNatural(int)": 23.25,
        "org.apache.commons.math3.random$RandomDataImpl#getRan()": 409.78125,
        "org.apache.commons.math3.random$RandomDataImpl#getSecRan()": 17.4375,
        "org.apache.commons.math3.random$RandomDataImpl#initRan()": 657.78125,
        "org.apache.commons.math3.random$RandomDataImpl#nextBeta(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextBinomial(int,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextCauchy(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextChiSquare(double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextExponential(double)": 24.21875,
        "org.apache.commons.math3.random$RandomDataImpl#nextF(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextGamma(double,double)": 11.625,
        "org.apache.commons.math3.random$RandomDataImpl#nextGaussian(double,double)": 35.84375,
        "org.apache.commons.math3.random$RandomDataImpl#nextHexString(int)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextHypergeometric(int,int,int)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextInt(int,int)": 74.59375,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.IntegerDistribution)": 46.5,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.RealDistribution)": 79.4375,
        "org.apache.commons.math3.random$RandomDataImpl#nextLong(long,long)": 64.90625,
        "org.apache.commons.math3.random$RandomDataImpl#nextPascal(int,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextPermutation(int,int)": 23.25,
        "org.apache.commons.math3.random$RandomDataImpl#nextPoisson(double)": 32.9375,
        "org.apache.commons.math3.random$RandomDataImpl#nextSample(java.util.Collection,int)": 11.625,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureHexString(int)": 11.625,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureInt(int,int)": 3.875,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureLong(long,long)": 14.53125,
        "org.apache.commons.math3.random$RandomDataImpl#nextT(double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double)": 259.625,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double,boolean)": 260.59375,
        "org.apache.commons.math3.random$RandomDataImpl#nextWeibull(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextZipf(int,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed()": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed(long)": 646.15625,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure()": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure(long)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#setSecureAlgorithm(java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#shuffle(int[],int)": 23.25,
        "org.apache.commons.math3.special$Erf#Erf()": 0.0,
        "org.apache.commons.math3.special$Erf#erf(double)": -7.774193548387096,
        "org.apache.commons.math3.special$Erf#erf(double,double)": 6.78125,
        "org.apache.commons.math3.special$Erf#erfc(double)": 14.53125,
        "org.apache.commons.math3.special$Gamma#<clinit>()": 429.64516129032256,
        "org.apache.commons.math3.special$Gamma#Gamma()": 0.0,
        "org.apache.commons.math3.special$Gamma#digamma(double)": 1.9375,
        "org.apache.commons.math3.special$Gamma#lanczos(double)": 448.53125,
        "org.apache.commons.math3.special$Gamma#logGamma(double)": 438.84375,
        "org.apache.commons.math3.special$Gamma#regularizedGammaP(double,double)": 333.25,
        "org.apache.commons.math3.special$Gamma#regularizedGammaP(double,double,double,int)": 336.741935483871,
        "org.apache.commons.math3.special$Gamma#regularizedGammaQ(double,double)": 6.78125,
        "org.apache.commons.math3.special$Gamma#regularizedGammaQ(double,double,double,int)": 217.96875,
        "org.apache.commons.math3.special$Gamma#trigamma(double)": 0.96875,
        "org.apache.commons.math3.special$Gamma$1#getA(int,double)": 203.4375,
        "org.apache.commons.math3.special$Gamma$1#getB(int,double)": 203.4375,
        "org.apache.commons.math3.stat.inference$MannWhitneyUTest#MannWhitneyUTest()": -29.064516129032256,
        "org.apache.commons.math3.stat.inference$MannWhitneyUTest#MannWhitneyUTest(org.apache.commons.math3.stat.ranking.NaNStrategy,org.apache.commons.math3.stat.ranking.TiesStrategy)": 0.0,
        "org.apache.commons.math3.stat.inference$MannWhitneyUTest#calculateAsymptoticPValue(double,int,int)": -30.032258064516128,
        "org.apache.commons.math3.stat.inference$MannWhitneyUTest#concatenateSamples(double[],double[])": -30.032258064516128,
        "org.apache.commons.math3.stat.inference$MannWhitneyUTest#ensureDataConformance(double[],double[])": -29.064516129032256,
        "org.apache.commons.math3.stat.inference$MannWhitneyUTest#mannWhitneyU(double[],double[])": -30.032258064516128,
        "org.apache.commons.math3.stat.inference$MannWhitneyUTest#mannWhitneyUTest(double[],double[])": -29.064516129032256,
        "org.apache.commons.math3.stat.ranking$NaNStrategy#<clinit>()": -15.516129032258064,
        "org.apache.commons.math3.stat.ranking$NaNStrategy#NaNStrategy(java.lang.String,int)": -15.516129032258064,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#<clinit>()": -15.516129032258064,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#NaturalRanking()": 5.8125,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#NaturalRanking(org.apache.commons.math3.random.RandomGenerator)": 0.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#NaturalRanking(org.apache.commons.math3.stat.ranking.NaNStrategy)": 1.9375,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#NaturalRanking(org.apache.commons.math3.stat.ranking.NaNStrategy,org.apache.commons.math3.random.RandomGenerator)": 0.96875,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#NaturalRanking(org.apache.commons.math3.stat.ranking.NaNStrategy,org.apache.commons.math3.stat.ranking.TiesStrategy)": -25.193548387096776,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#NaturalRanking(org.apache.commons.math3.stat.ranking.TiesStrategy)": 0.96875,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#containsNaNs(org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair[])": 0.96875,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#fill(double[],java.util.List,double)": 7.75,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#getNanPositions(org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair[])": -27.129032258064516,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#getNanStrategy()": 0.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#getTiesStrategy()": 0.0,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#rank(double[])": -16.483870967741936,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#recodeNaNs(org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair[],double)": 9.6875,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#removeNaNs(org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair[])": 0.96875,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#resolveTie(double[],java.util.List)": 9.6875,
        "org.apache.commons.math3.stat.ranking$NaturalRanking#restoreNaNs(double[],java.util.List)": -27.129032258064516,
        "org.apache.commons.math3.stat.ranking$NaturalRanking$1#<clinit>()": -16.483870967741936,
        "org.apache.commons.math3.stat.ranking$NaturalRanking$IntDoublePair#NaturalRanking$IntDoublePair(double,int)": -16.483870967741936,
        "org.apache.commons.math3.stat.ranking$NaturalRanking$IntDoublePair#compareTo(org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair)": -16.483870967741936,
        "org.apache.commons.math3.stat.ranking$NaturalRanking$IntDoublePair#getPosition()": -16.483870967741936,
        "org.apache.commons.math3.stat.ranking$NaturalRanking$IntDoublePair#getValue()": -16.483870967741936,
        "org.apache.commons.math3.stat.ranking$TiesStrategy#<clinit>()": -15.516129032258064,
        "org.apache.commons.math3.stat.ranking$TiesStrategy#TiesStrategy(java.lang.String,int)": -15.516129032258064,
        "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()": 1150.6129032258063,
        "org.apache.commons.math3.util$ArithmeticUtils#ArithmeticUtils()": 0.0,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(int,int)": 39.71875,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long)": 2.90625,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long,org.apache.commons.math3.exception.util.Localizable)": 3.875,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficient(int,int)": 16.46875,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientDouble(int,int)": 7.75,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)": 3.875,
        "org.apache.commons.math3.util$ArithmeticUtils#checkBinomial(int,int)": 17.4375,
        "org.apache.commons.math3.util$ArithmeticUtils#factorial(int)": 882.5483870967741,
        "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)": 1.9375,
        "org.apache.commons.math3.util$ArithmeticUtils#factorialLog(int)": 12.59375,
        "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)": 204.40625,
        "org.apache.commons.math3.util$ArithmeticUtils#gcd(long,long)": 2.90625,
        "org.apache.commons.math3.util$ArithmeticUtils#isPowerOfTwo(long)": 43.59375,
        "org.apache.commons.math3.util$ArithmeticUtils#lcm(int,int)": 0.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#lcm(long,long)": 0.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(int,int)": 62.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(long,long)": 12.59375,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(int,int)": 0.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(int,long)": 0.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,int)": 0.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,java.math.BigInteger)": 1.9375,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,long)": 1.9375,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(long,int)": 0.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(long,long)": 0.96875,
        "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(int,int)": 28.09375,
        "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(long,long)": 0.96875,
        "org.apache.commons.math3.util$ContinuedFraction#ContinuedFraction()": 317.75,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double)": 0.0,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double,double)": 0.96875,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double,double,int)": 317.75,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double,int)": 0.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 2738.6774193548385,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1387.7096774193549,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3.875,
        "org.apache.commons.math3.util$FastMath#abs(int)": 312.90625,
        "org.apache.commons.math3.util$FastMath#abs(long)": 691.6875,
        "org.apache.commons.math3.util$FastMath#acos(double)": 18.40625,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#asin(double)": 19.375,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#atan(double)": 17.4375,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 78.46875,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 72.65625,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 36.8125,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 1084.8064516129032,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 11.625,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cos(double)": 214.09375,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 281.90625,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 21.3125,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 62.96875,
        "org.apache.commons.math3.util$FastMath#exp(double)": 637.4375,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 1182.5483870967741,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 11.625,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 19.375,
        "org.apache.commons.math3.util$FastMath#floor(double)": 1250.2903225806451,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 62.96875,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 60.0625,
        "org.apache.commons.math3.util$FastMath#log(double)": 1034.483870967742,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1185.4516129032259,
        "org.apache.commons.math3.util$FastMath#log10(double)": 51.34375,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 501.258064516129,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 255.75,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 0.96875,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 242.1875,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 532.8125,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 12.59375,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 318.71875,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 318.71875,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 1042.225806451613,
        "org.apache.commons.math3.util$FastMath#random()": 18.40625,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.84375,
        "org.apache.commons.math3.util$FastMath#rint(double)": 18.40625,
        "org.apache.commons.math3.util$FastMath#round(double)": 18.40625,
        "org.apache.commons.math3.util$FastMath#round(float)": 2.90625,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 45.53125,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9375,
        "org.apache.commons.math3.util$FastMath#signum(double)": 9.6875,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#sin(double)": 297.40625,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 302.25,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 21.3125,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1440.9354838709678,
        "org.apache.commons.math3.util$FastMath#tan(double)": 21.3125,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 21.3125,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 8.71875,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 223.78125,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 2.90625,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 1177.7096774193549,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 1173.8387096774193,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1172.8709677419354,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 1254.1612903225807,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 1177.7096774193549,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 1177.7096774193549,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 1173.8387096774193,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 1173.8387096774193,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 1172.8709677419354,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray()": 49.40625,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(double[])": 0.96875,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(int)": 881.5806451612904,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(int,float)": 0.96875,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(int,float,float)": 2.90625,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(int,float,float,int)": 3.875,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(org.apache.commons.math3.util.ResizableDoubleArray)": 1.9375,
        "org.apache.commons.math3.util$ResizableDoubleArray#addElement(double)": 918.3548387096774,
        "org.apache.commons.math3.util$ResizableDoubleArray#addElementRolling(double)": 7.75,
        "org.apache.commons.math3.util$ResizableDoubleArray#addElements(double[])": 0.96875,
        "org.apache.commons.math3.util$ResizableDoubleArray#checkContractExpand(float,float)": 6.78125,
        "org.apache.commons.math3.util$ResizableDoubleArray#clear()": 8.71875,
        "org.apache.commons.math3.util$ResizableDoubleArray#contract()": 917.3870967741935,
        "org.apache.commons.math3.util$ResizableDoubleArray#copy()": 2.90625,
        "org.apache.commons.math3.util$ResizableDoubleArray#copy(org.apache.commons.math3.util.ResizableDoubleArray,org.apache.commons.math3.util.ResizableDoubleArray)": 3.875,
        "org.apache.commons.math3.util$ResizableDoubleArray#discardExtremeElements(int,boolean)": 6.78125,
        "org.apache.commons.math3.util$ResizableDoubleArray#discardFrontElements(int)": 3.875,
        "org.apache.commons.math3.util$ResizableDoubleArray#discardMostRecentElements(int)": 4.84375,
        "org.apache.commons.math3.util$ResizableDoubleArray#equals(java.lang.Object)": 1.9375,
        "org.apache.commons.math3.util$ResizableDoubleArray#expand()": 912.5483870967741,
        "org.apache.commons.math3.util$ResizableDoubleArray#expandTo(int)": 1.9375,
        "org.apache.commons.math3.util$ResizableDoubleArray#getContractionCriteria()": 1.9375,
        "org.apache.commons.math3.util$ResizableDoubleArray#getElement(int)": 6.78125,
        "org.apache.commons.math3.util$ResizableDoubleArray#getElements()": 887.3870967741935,
        "org.apache.commons.math3.util$ResizableDoubleArray#getExpansionFactor()": 6.78125,
        "org.apache.commons.math3.util$ResizableDoubleArray#getExpansionMode()": 1.9375,
        "org.apache.commons.math3.util$ResizableDoubleArray#getInternalLength()": 4.84375,
        "org.apache.commons.math3.util$ResizableDoubleArray#getInternalValues()": 25.1875,
        "org.apache.commons.math3.util$ResizableDoubleArray#getNumElements()": 39.71875,
        "org.apache.commons.math3.util$ResizableDoubleArray#hashCode()": 0.96875,
        "org.apache.commons.math3.util$ResizableDoubleArray#setContractionCriteria(float)": 6.78125,
        "org.apache.commons.math3.util$ResizableDoubleArray#setElement(int,double)": 0.96875,
        "org.apache.commons.math3.util$ResizableDoubleArray#setExpansionFactor(float)": 0.96875,
        "org.apache.commons.math3.util$ResizableDoubleArray#setExpansionMode(int)": 4.84375,
        "org.apache.commons.math3.util$ResizableDoubleArray#setInitialCapacity(int)": 885.4516129032259,
        "org.apache.commons.math3.util$ResizableDoubleArray#setNumElements(int)": 0.96875,
        "org.apache.commons.math3.util$ResizableDoubleArray#shouldContract()": 918.3548387096774,
        "org.apache.commons.math3.util$ResizableDoubleArray#start()": 25.1875,
        "org.apache.commons.math3.util$ResizableDoubleArray#substituteMostRecentElement(double)": 2.90625
    },
    "Math-31": {
        "org.apache.commons.math3.analysis.solvers$AbstractUnivariateSolver#AbstractUnivariateSolver(double)": 154.03125,
        "org.apache.commons.math3.analysis.solvers$AbstractUnivariateSolver#AbstractUnivariateSolver(double,double)": 8.727272727272727,
        "org.apache.commons.math3.analysis.solvers$AbstractUnivariateSolver#AbstractUnivariateSolver(double,double,double)": 8.727272727272727,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#BaseAbstractUnivariateSolver(double)": 160.8125,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#BaseAbstractUnivariateSolver(double,double)": 8.727272727272727,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#BaseAbstractUnivariateSolver(double,double,double)": 170.5,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#computeObjectiveValue(double)": 162.75,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getAbsoluteAccuracy()": 179.3939393939394,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getEvaluations()": 32.96969696969697,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getFunctionValueAccuracy()": 148.21875,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getMax()": 161.78125,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getMaxEvaluations()": 0.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getMin()": 161.78125,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getRelativeAccuracy()": 173.57575757575756,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getStartValue()": 119.15625,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#incrementEvaluationCount()": 162.75,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#isBracketing(double,double)": 2.909090909090909,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#isSequence(double,double,double)": 5.818181818181818,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#setup(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 163.71875,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double)": 2.909090909090909,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 132.71875,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 163.71875,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#verifyBracketing(double,double)": 38.78787878787879,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#verifyInterval(double,double)": 6.787878787878788,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#verifySequence(double,double,double)": 117.21875,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#BrentSolver()": 18.424242424242426,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#BrentSolver(double)": 81.375,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#BrentSolver(double,double)": 1.9393939393939394,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#BrentSolver(double,double,double)": 0.0,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#brent(double,double,double,double)": 108.60606060606061,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#doSolve()": 83.3125,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#UnivariateSolverUtils()": 0.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 4.848484848484849,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,int)": 5.818181818181818,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#forceSide(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver,double,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution)": 4.848484848484849,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#isBracketing(org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 38.78787878787879,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#isSequence(double,double,double)": 5.818181818181818,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#midpoint(double,double)": 5.818181818181818,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#solve(org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 3.878787878787879,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#solve(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 62.96875,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#verifyBracketing(org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 38.78787878787879,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#verifyInterval(double,double)": 179.21875,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#verifySequence(double,double,double)": 121.09375,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#AbstractIntegerDistribution()": 94.9375,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#checkedCumulativeProbability(int)": 24.21875,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#cumulativeProbability(int,int)": 17.454545454545453,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#inverseCumulativeProbability(double)": 41.65625,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#reseedRandomGenerator(long)": 16.484848484848484,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#sample()": 3.878787878787879,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#sample(int)": 5.818181818181818,
        "org.apache.commons.math3.distribution$AbstractIntegerDistribution#solveInverseCumulativeProbability(double,int,int)": 29.0625,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#AbstractRealDistribution()": 461.125,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#cumulativeProbability(double,double)": 33.93939393939394,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#getSolverAbsoluteAccuracy()": 1.9393939393939394,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#inverseCumulativeProbability(double)": 70.71875,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#reseedRandomGenerator(long)": 9.696969696969697,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#sample()": 5.818181818181818,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#sample(int)": 9.696969696969697,
        "org.apache.commons.math3.distribution$AbstractRealDistribution$1#value(double)": 59.09375,
        "org.apache.commons.math3.distribution$BinomialDistribution#BinomialDistribution(int,double)": -11.625,
        "org.apache.commons.math3.distribution$BinomialDistribution#cumulativeProbability(int)": -14.53125,
        "org.apache.commons.math3.distribution$BinomialDistribution#getNumberOfTrials()": 10.666666666666666,
        "org.apache.commons.math3.distribution$BinomialDistribution#getNumericalMean()": -15.5,
        "org.apache.commons.math3.distribution$BinomialDistribution#getNumericalVariance()": -15.5,
        "org.apache.commons.math3.distribution$BinomialDistribution#getProbabilityOfSuccess()": 10.666666666666666,
        "org.apache.commons.math3.distribution$BinomialDistribution#getSupportLowerBound()": -15.5,
        "org.apache.commons.math3.distribution$BinomialDistribution#getSupportUpperBound()": -15.5,
        "org.apache.commons.math3.distribution$BinomialDistribution#isSupportConnected()": 0.0,
        "org.apache.commons.math3.distribution$BinomialDistribution#probability(int)": 3.878787878787879,
        "org.apache.commons.math3.distribution$FDistribution#FDistribution(double,double)": -4.84375,
        "org.apache.commons.math3.distribution$FDistribution#FDistribution(double,double,double)": -4.84375,
        "org.apache.commons.math3.distribution$FDistribution#calculateNumericalVariance()": -15.5,
        "org.apache.commons.math3.distribution$FDistribution#cumulativeProbability(double)": -10.65625,
        "org.apache.commons.math3.distribution$FDistribution#density(double)": 0.9696969696969697,
        "org.apache.commons.math3.distribution$FDistribution#getDenominatorDegreesOfFreedom()": -14.53125,
        "org.apache.commons.math3.distribution$FDistribution#getNumeratorDegreesOfFreedom()": -15.5,
        "org.apache.commons.math3.distribution$FDistribution#getNumericalMean()": -15.5,
        "org.apache.commons.math3.distribution$FDistribution#getNumericalVariance()": -15.5,
        "org.apache.commons.math3.distribution$FDistribution#getSolverAbsoluteAccuracy()": -16.46875,
        "org.apache.commons.math3.distribution$FDistribution#getSupportLowerBound()": -15.5,
        "org.apache.commons.math3.distribution$FDistribution#getSupportUpperBound()": -15.5,
        "org.apache.commons.math3.distribution$FDistribution#isSupportConnected()": 14.545454545454545,
        "org.apache.commons.math3.distribution$FDistribution#isSupportLowerBoundInclusive()": 0.0,
        "org.apache.commons.math3.distribution$FDistribution#isSupportUpperBoundInclusive()": 0.0,
        "org.apache.commons.math3.distribution$FDistribution#probability(double)": 0.0,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException()": 0.9696969696969697,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": -3.419354838709678,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.666666666666666,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 28.12121212121212,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.9696969696969697,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 636.1212121212121,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 6.787878787878788,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 503.27272727272725,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 12.606060606060606,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 28.516129032258064,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 47.87096774193549,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 26.58064516129032,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": -29.0625,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.9696969696969697,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 18.424242424242426,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 18.424242424242426,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 10.666666666666666,
        "org.apache.commons.math3.exception$NoBracketingException#NoBracketingException(double,double,double,double)": 10.666666666666666,
        "org.apache.commons.math3.exception$NoBracketingException#NoBracketingException(org.apache.commons.math3.exception.util.Localizable,double,double,double,double,java.lang.Object[])": 10.666666666666666,
        "org.apache.commons.math3.exception$NoBracketingException#getFHi()": 0.0,
        "org.apache.commons.math3.exception$NoBracketingException#getFLo()": 0.0,
        "org.apache.commons.math3.exception$NoBracketingException#getHi()": 0.0,
        "org.apache.commons.math3.exception$NoBracketingException#getLo()": 0.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 6.787878787878788,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 6.787878787878788,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 6.787878787878788,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 8.727272727272727,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 35.878787878787875,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 77.57575757575758,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 43.63636363636363,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 69.81818181818181,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 19.393939393939394,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 112.48484848484848,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 0.9696969696969697,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 0.9696969696969697,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 60.121212121212125,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 177.45454545454547,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.909090909090909,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.909090909090909,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 27.151515151515152,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 133.8181818181818,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 0.9696969696969697,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 0.9696969696969697,
        "org.apache.commons.math3.exception$TooManyEvaluationsException#TooManyEvaluationsException(java.lang.Number)": 11.636363636363637,
        "org.apache.commons.math3.random$RandomDataImpl#<clinit>()": 891.741935483871,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl()": 887.8709677419355,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl(org.apache.commons.math3.random.RandomGenerator)": 584.7272727272727,
        "org.apache.commons.math3.random$RandomDataImpl#getNatural(int)": 23.272727272727273,
        "org.apache.commons.math3.random$RandomDataImpl#getRan()": 409.2121212121212,
        "org.apache.commons.math3.random$RandomDataImpl#getSecRan()": 17.454545454545453,
        "org.apache.commons.math3.random$RandomDataImpl#initRan()": 657.4545454545455,
        "org.apache.commons.math3.random$RandomDataImpl#nextBeta(double,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextBinomial(int,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextCauchy(double,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextChiSquare(double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextExponential(double)": 24.242424242424242,
        "org.apache.commons.math3.random$RandomDataImpl#nextF(double,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextGamma(double,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextGaussian(double,double)": 35.878787878787875,
        "org.apache.commons.math3.random$RandomDataImpl#nextHexString(int)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextHypergeometric(int,int,int)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextInt(int,int)": 74.66666666666667,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.IntegerDistribution)": 46.54545454545455,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.RealDistribution)": 80.48484848484848,
        "org.apache.commons.math3.random$RandomDataImpl#nextLong(long,long)": 64.96969696969697,
        "org.apache.commons.math3.random$RandomDataImpl#nextPascal(int,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextPermutation(int,int)": 23.272727272727273,
        "org.apache.commons.math3.random$RandomDataImpl#nextPoisson(double)": 32.96969696969697,
        "org.apache.commons.math3.random$RandomDataImpl#nextSample(java.util.Collection,int)": 11.636363636363637,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureHexString(int)": 11.636363636363637,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureInt(int,int)": 3.878787878787879,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureLong(long,long)": 14.545454545454545,
        "org.apache.commons.math3.random$RandomDataImpl#nextT(double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double)": 258.90909090909093,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double,boolean)": 259.8787878787879,
        "org.apache.commons.math3.random$RandomDataImpl#nextWeibull(double,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#nextZipf(int,double)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed()": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed(long)": 645.8181818181819,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure()": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure(long)": 10.666666666666666,
        "org.apache.commons.math3.random$RandomDataImpl#setSecureAlgorithm(java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#shuffle(int[],int)": 23.272727272727273,
        "org.apache.commons.math3.special$Beta#Beta()": 0.0,
        "org.apache.commons.math3.special$Beta#logBeta(double,double)": 7.757575757575758,
        "org.apache.commons.math3.special$Beta#logBeta(double,double,double,int)": 110.7741935483871,
        "org.apache.commons.math3.special$Beta#regularizedBeta(double,double,double)": 110.7741935483871,
        "org.apache.commons.math3.special$Beta#regularizedBeta(double,double,double,double)": 0.0,
        "org.apache.commons.math3.special$Beta#regularizedBeta(double,double,double,double,int)": 110.7741935483871,
        "org.apache.commons.math3.special$Beta#regularizedBeta(double,double,double,int)": 0.0,
        "org.apache.commons.math3.special$Beta$1#getA(int,double)": 103.03225806451613,
        "org.apache.commons.math3.special$Beta$1#getB(int,double)": 103.03225806451613,
        "org.apache.commons.math3.special$Gamma#<clinit>()": 420.4516129032258,
        "org.apache.commons.math3.special$Gamma#Gamma()": 0.0,
        "org.apache.commons.math3.special$Gamma#digamma(double)": 1.9393939393939394,
        "org.apache.commons.math3.special$Gamma#lanczos(double)": 407.8709677419355,
        "org.apache.commons.math3.special$Gamma#logGamma(double)": 398.19354838709677,
        "org.apache.commons.math3.special$Gamma#regularizedGammaP(double,double)": 311.27272727272725,
        "org.apache.commons.math3.special$Gamma#regularizedGammaP(double,double,double,int)": 346.1818181818182,
        "org.apache.commons.math3.special$Gamma#regularizedGammaQ(double,double)": 6.787878787878788,
        "org.apache.commons.math3.special$Gamma#regularizedGammaQ(double,double,double,int)": 213.33333333333334,
        "org.apache.commons.math3.special$Gamma#trigamma(double)": 0.9696969696969697,
        "org.apache.commons.math3.special$Gamma$1#getA(int,double)": 198.78787878787878,
        "org.apache.commons.math3.special$Gamma$1#getB(int,double)": 198.78787878787878,
        "org.apache.commons.math3.util$ArithmeticUtils#<clinit>()": 1161.741935483871,
        "org.apache.commons.math3.util$ArithmeticUtils#ArithmeticUtils()": 0.0,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(int,int)": 39.75757575757576,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long)": 2.909090909090909,
        "org.apache.commons.math3.util$ArithmeticUtils#addAndCheck(long,long,org.apache.commons.math3.exception.util.Localizable)": 3.878787878787879,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficient(int,int)": 32.0,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientDouble(int,int)": 8.727272727272727,
        "org.apache.commons.math3.util$ArithmeticUtils#binomialCoefficientLog(int,int)": 20.363636363636363,
        "org.apache.commons.math3.util$ArithmeticUtils#checkBinomial(int,int)": 33.93939393939394,
        "org.apache.commons.math3.util$ArithmeticUtils#factorial(int)": 893.6774193548387,
        "org.apache.commons.math3.util$ArithmeticUtils#factorialDouble(int)": 1.9393939393939394,
        "org.apache.commons.math3.util$ArithmeticUtils#factorialLog(int)": 12.606060606060606,
        "org.apache.commons.math3.util$ArithmeticUtils#gcd(int,int)": 204.6060606060606,
        "org.apache.commons.math3.util$ArithmeticUtils#gcd(long,long)": 2.909090909090909,
        "org.apache.commons.math3.util$ArithmeticUtils#isPowerOfTwo(long)": 43.63636363636363,
        "org.apache.commons.math3.util$ArithmeticUtils#lcm(int,int)": 0.9696969696969697,
        "org.apache.commons.math3.util$ArithmeticUtils#lcm(long,long)": 0.9696969696969697,
        "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(int,int)": 63.03030303030303,
        "org.apache.commons.math3.util$ArithmeticUtils#mulAndCheck(long,long)": 12.606060606060606,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(int,int)": 0.9696969696969697,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(int,long)": 0.9696969696969697,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,int)": 0.9696969696969697,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,java.math.BigInteger)": 1.9393939393939394,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(java.math.BigInteger,long)": 1.9393939393939394,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(long,int)": 0.9696969696969697,
        "org.apache.commons.math3.util$ArithmeticUtils#pow(long,long)": 0.9696969696969697,
        "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(int,int)": 28.12121212121212,
        "org.apache.commons.math3.util$ArithmeticUtils#subAndCheck(long,long)": 0.9696969696969697,
        "org.apache.commons.math3.util$ContinuedFraction#ContinuedFraction()": 294.64516129032256,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double)": 0.0,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double,double)": 0.9696969696969697,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double,double,int)": 294.64516129032256,
        "org.apache.commons.math3.util$ContinuedFraction#evaluate(double,int)": 0.0,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 2667.548387096774,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1358.1935483870968,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3.878787878787879,
        "org.apache.commons.math3.util$FastMath#abs(int)": 313.2121212121212,
        "org.apache.commons.math3.util$FastMath#abs(long)": 666.258064516129,
        "org.apache.commons.math3.util$FastMath#acos(double)": 17.454545454545453,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#asin(double)": 17.454545454545453,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#atan(double)": 16.484848484848484,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 75.63636363636364,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 72.72727272727273,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 35.878787878787875,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 1058.1935483870968,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 11.636363636363637,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#cos(double)": 212.36363636363637,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 280.24242424242425,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 20.363636363636363,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 62.06060606060606,
        "org.apache.commons.math3.util$FastMath#exp(double)": 594.6451612903226,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 1192.7096774193549,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 10.666666666666666,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 18.424242424242426,
        "org.apache.commons.math3.util$FastMath#floor(double)": 1223.6774193548388,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 63.03030303030303,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 60.121212121212125,
        "org.apache.commons.math3.util$FastMath#log(double)": 1044.6451612903227,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1195.6129032258063,
        "org.apache.commons.math3.util$FastMath#log10(double)": 50.42424242424242,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 11.636363636363637,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 533.3333333333334,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 255.03030303030303,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 240.4848484848485,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 484.8484848484849,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 12.606060606060606,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 12.606060606060606,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.909090909090909,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 317.09090909090907,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 317.09090909090907,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 1052.3870967741937,
        "org.apache.commons.math3.util$FastMath#random()": 18.424242424242426,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.848484848484849,
        "org.apache.commons.math3.util$FastMath#rint(double)": 17.454545454545453,
        "org.apache.commons.math3.util$FastMath#round(double)": 18.424242424242426,
        "org.apache.commons.math3.util$FastMath#round(float)": 2.909090909090909,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 45.57575757575758,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#signum(double)": 8.727272727272727,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#sin(double)": 295.75757575757575,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 300.6060606060606,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 20.363636363636363,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1420.1290322580646,
        "org.apache.commons.math3.util$FastMath#tan(double)": 20.363636363636363,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 20.363636363636363,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 7.757575757575758,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 223.03030303030303,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 2.909090909090909,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 1187.8709677419354,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 1184.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1183.032258064516,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 1264.3225806451612,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 1187.8709677419354,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 1187.8709677419354,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 1184.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 1184.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 1183.032258064516,
        "org.apache.commons.math3.util$Incrementor#Incrementor()": 556.0625,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int)": 558.96875,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int,org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback)": 559.9375,
        "org.apache.commons.math3.util$Incrementor#canIncrement()": 1.9393939393939394,
        "org.apache.commons.math3.util$Incrementor#getCount()": 142.54545454545453,
        "org.apache.commons.math3.util$Incrementor#getMaximalCount()": 31.03030303030303,
        "org.apache.commons.math3.util$Incrementor#incrementCount()": 507.625,
        "org.apache.commons.math3.util$Incrementor#incrementCount(int)": 0.9696969696969697,
        "org.apache.commons.math3.util$Incrementor#resetCount()": 525.0625,
        "org.apache.commons.math3.util$Incrementor#setMaximalCount(int)": 541.53125,
        "org.apache.commons.math3.util$Incrementor$1#trigger(int)": 15.515151515151516,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 0.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 16.484848484848484,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 0.9696969696969697,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 669.40625,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 74.66666666666667,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 3.878787878787879,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 3.878787878787879,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 1.9393939393939394,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 1.9393939393939394,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 45.57575757575758,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 8.727272727272727,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 34.90909090909091,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 4.848484848484849,
        "org.apache.commons.math3.util$Precision#<clinit>()": 1001.0967741935484,
        "org.apache.commons.math3.util$Precision#Precision()": 0.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 46.54545454545455,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 22.303030303030305,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 132.84848484848484,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 343.03225806451616,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 662.3870967741935,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 0.9696969696969697,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 77.57575757575758,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 120.24242424242425,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 39.75757575757576,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 0.9696969696969697,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 76.60606060606061,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 0.0,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 0.9696969696969697,
        "org.apache.commons.math3.util$Precision#round(double,int)": 0.9696969696969697,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 0.9696969696969697,
        "org.apache.commons.math3.util$Precision#round(float,int)": 0.9696969696969697,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 0.9696969696969697,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 0.9696969696969697,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray()": 49.45454545454545,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(double[])": 0.9696969696969697,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(int)": 892.7096774193549,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(int,float)": 0.9696969696969697,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(int,float,float)": 2.909090909090909,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(int,float,float,int)": 3.878787878787879,
        "org.apache.commons.math3.util$ResizableDoubleArray#ResizableDoubleArray(org.apache.commons.math3.util.ResizableDoubleArray)": 1.9393939393939394,
        "org.apache.commons.math3.util$ResizableDoubleArray#addElement(double)": 929.483870967742,
        "org.apache.commons.math3.util$ResizableDoubleArray#addElementRolling(double)": 7.757575757575758,
        "org.apache.commons.math3.util$ResizableDoubleArray#addElements(double[])": 0.9696969696969697,
        "org.apache.commons.math3.util$ResizableDoubleArray#checkContractExpand(float,float)": 6.787878787878788,
        "org.apache.commons.math3.util$ResizableDoubleArray#clear()": 8.727272727272727,
        "org.apache.commons.math3.util$ResizableDoubleArray#contract()": 928.516129032258,
        "org.apache.commons.math3.util$ResizableDoubleArray#copy()": 2.909090909090909,
        "org.apache.commons.math3.util$ResizableDoubleArray#copy(org.apache.commons.math3.util.ResizableDoubleArray,org.apache.commons.math3.util.ResizableDoubleArray)": 3.878787878787879,
        "org.apache.commons.math3.util$ResizableDoubleArray#discardExtremeElements(int,boolean)": 6.787878787878788,
        "org.apache.commons.math3.util$ResizableDoubleArray#discardFrontElements(int)": 3.878787878787879,
        "org.apache.commons.math3.util$ResizableDoubleArray#discardMostRecentElements(int)": 4.848484848484849,
        "org.apache.commons.math3.util$ResizableDoubleArray#equals(java.lang.Object)": 1.9393939393939394,
        "org.apache.commons.math3.util$ResizableDoubleArray#expand()": 923.6774193548387,
        "org.apache.commons.math3.util$ResizableDoubleArray#expandTo(int)": 1.9393939393939394,
        "org.apache.commons.math3.util$ResizableDoubleArray#getContractionCriteria()": 1.9393939393939394,
        "org.apache.commons.math3.util$ResizableDoubleArray#getElement(int)": 6.787878787878788,
        "org.apache.commons.math3.util$ResizableDoubleArray#getElements()": 898.516129032258,
        "org.apache.commons.math3.util$ResizableDoubleArray#getExpansionFactor()": 6.787878787878788,
        "org.apache.commons.math3.util$ResizableDoubleArray#getExpansionMode()": 1.9393939393939394,
        "org.apache.commons.math3.util$ResizableDoubleArray#getInternalLength()": 4.848484848484849,
        "org.apache.commons.math3.util$ResizableDoubleArray#getInternalValues()": 25.21212121212121,
        "org.apache.commons.math3.util$ResizableDoubleArray#getNumElements()": 39.75757575757576,
        "org.apache.commons.math3.util$ResizableDoubleArray#hashCode()": 0.9696969696969697,
        "org.apache.commons.math3.util$ResizableDoubleArray#setContractionCriteria(float)": 6.787878787878788,
        "org.apache.commons.math3.util$ResizableDoubleArray#setElement(int,double)": 0.9696969696969697,
        "org.apache.commons.math3.util$ResizableDoubleArray#setExpansionFactor(float)": 0.9696969696969697,
        "org.apache.commons.math3.util$ResizableDoubleArray#setExpansionMode(int)": 4.848484848484849,
        "org.apache.commons.math3.util$ResizableDoubleArray#setInitialCapacity(int)": 896.5806451612904,
        "org.apache.commons.math3.util$ResizableDoubleArray#setNumElements(int)": 0.9696969696969697,
        "org.apache.commons.math3.util$ResizableDoubleArray#shouldContract()": 929.483870967742,
        "org.apache.commons.math3.util$ResizableDoubleArray#start()": 25.21212121212121,
        "org.apache.commons.math3.util$ResizableDoubleArray#substituteMostRecentElement(double)": 2.909090909090909
    },
    "Math-32": {
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 112.375,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 131.75,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 2.90625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.65625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 28.09375,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 635.5,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 6.78125,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 502.78125,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 12.59375,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 43.59375,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 62.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 42.625,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 15.5,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 0.96875,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 6.78125,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 6.78125,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 43.59375,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 69.75,
        "org.apache.commons.math3.geometry.euclidean.oned$Interval#Interval(double,double)": 3.8387096774193523,
        "org.apache.commons.math3.geometry.euclidean.oned$Interval#getLength()": -12.612903225806452,
        "org.apache.commons.math3.geometry.euclidean.oned$Interval#getLower()": -1.9677419354838719,
        "org.apache.commons.math3.geometry.euclidean.oned$Interval#getMidPoint()": -12.612903225806452,
        "org.apache.commons.math3.geometry.euclidean.oned$Interval#getUpper()": -1.9677419354838719,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#IntervalsSet()": -5.838709677419356,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#IntervalsSet(double,double)": 7.70967741935484,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#IntervalsSet(java.util.Collection)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#IntervalsSet(org.apache.commons.math3.geometry.partitioning.BSPTree)": -3.903225806451612,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#asList()": 5.774193548387096,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree)": -5.838709677419356,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#buildTree(double,double)": 7.70967741935484,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#computeGeometricalProperties()": -12.612903225806452,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#getInf()": 2.90625,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#getSup()": 2.90625,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double)": 5.774193548387096,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#OrientedPoint(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,boolean)": 13.516129032258064,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#copySelf()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#getLocation()": 1.9032258064516157,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#getOffset(org.apache.commons.math3.geometry.Vector)": 6.741935483870968,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#isDirect()": 1.9032258064516157,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#revertSelf()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane)": -9.70967741935484,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#wholeHyperplane()": 13.516129032258064,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#wholeSpace()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$SubOrientedPoint#SubOrientedPoint(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": 13.516129032258064,
        "org.apache.commons.math3.geometry.euclidean.oned$SubOrientedPoint#buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": -5.838709677419356,
        "org.apache.commons.math3.geometry.euclidean.oned$SubOrientedPoint#getSize()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$SubOrientedPoint#side(org.apache.commons.math3.geometry.partitioning.Hyperplane)": -6.806451612903224,
        "org.apache.commons.math3.geometry.euclidean.oned$SubOrientedPoint#split(org.apache.commons.math3.geometry.partitioning.Hyperplane)": -8.741935483870968,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#<clinit>()": 18.354838709677416,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#Vector1D(double)": 18.354838709677416,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#add(double,org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#add(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distance(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distance(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distance1(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distanceInf(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distanceInf(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distanceSq(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distanceSq(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#dotProduct(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#equals(java.lang.Object)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getNorm()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getNorm1()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getNormInf()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getNormSq()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getSpace()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getX()": 18.354838709677416,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getZero()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#hashCode()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#isInfinite()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#isNaN()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#negate()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#normalize()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#scalarMultiply(double)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#subtract(double,org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#subtract(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#toString()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#toString(java.text.NumberFormat)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#Line(org.apache.commons.math3.geometry.euclidean.threed.Line)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#Line(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": -6.806451612903224,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#closestPoint(org.apache.commons.math3.geometry.euclidean.threed.Line)": 7.75,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#contains(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 10.65625,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#distance(org.apache.commons.math3.geometry.euclidean.threed.Line)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 12.59375,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#getAbscissa(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 6.78125,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#getDirection()": -23.258064516129032,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#getOrigin()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#intersection(org.apache.commons.math3.geometry.euclidean.threed.Line)": 6.78125,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#isSimilarTo(org.apache.commons.math3.geometry.euclidean.threed.Line)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#pointAt(double)": -20.35483870967742,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": -6.806451612903224,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#revert()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#toSpace(org.apache.commons.math3.geometry.Vector)": -20.35483870967742,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#toSubSpace(org.apache.commons.math3.geometry.Vector)": 6.78125,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#wholeLine()": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#Plane(org.apache.commons.math3.geometry.euclidean.threed.Plane)": -26.161290322580644,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#Plane(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": -25.193548387096776,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#Plane(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": -16.483870967741936,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#Plane(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": -24.225806451612904,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#contains(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 5.8125,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#copySelf()": -26.161290322580644,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#getNormal()": -21.32258064516129,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#getOffset(org.apache.commons.math3.geometry.Vector)": 8.71875,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#getOffset(org.apache.commons.math3.geometry.euclidean.threed.Plane)": -28.096774193548388,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#getOrigin()": 1.9375,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#getPointAt(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#getU()": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#getV()": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#intersection(org.apache.commons.math3.geometry.euclidean.threed.Line)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane)": -25.193548387096776,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane)": -24.225806451612904,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#isSimilarTo(org.apache.commons.math3.geometry.euclidean.threed.Plane)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#reset(org.apache.commons.math3.geometry.euclidean.threed.Plane)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#revertSelf()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#rotate(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Rotation)": 1.9375,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane)": -28.096774193548388,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#setFrame()": -16.483870967741936,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#setNormal(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": -16.483870967741936,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#toSpace(org.apache.commons.math3.geometry.Vector)": -26.161290322580644,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#toSubSpace(org.apache.commons.math3.geometry.Vector)": -26.161290322580644,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#translate(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 1.9375,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#wholeHyperplane()": -26.161290322580644,
        "org.apache.commons.math3.geometry.euclidean.threed$Plane#wholeSpace()": 4.84375,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#PolyhedronsSet()": 4.84375,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#PolyhedronsSet(double,double,double,double,double,double)": 2.90625,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#PolyhedronsSet(java.util.Collection)": -31.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#PolyhedronsSet(org.apache.commons.math3.geometry.partitioning.BSPTree)": 3.875,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#boundaryFacet(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.partitioning.BSPTree)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree)": 1.9375,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#computeGeometricalProperties()": -26.161290322580644,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#firstIntersection(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Line)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#recurseFirstIntersection(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Line)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#rotate(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Rotation)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet#translate(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$FacetsContributionVisitor#PolyhedronsSet$FacetsContributionVisitor(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet)": -26.161290322580644,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$FacetsContributionVisitor#addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean)": -26.161290322580644,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$FacetsContributionVisitor#visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": -26.161290322580644,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$FacetsContributionVisitor#visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": -26.161290322580644,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$FacetsContributionVisitor#visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)": -26.161290322580644,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$RotationTransform#PolyhedronsSet$RotationTransform(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Rotation)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$RotationTransform#apply(org.apache.commons.math3.geometry.Vector)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$RotationTransform#apply(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$RotationTransform#apply(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$TranslationTransform#PolyhedronsSet$TranslationTransform(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$TranslationTransform#apply(org.apache.commons.math3.geometry.Vector)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$TranslationTransform#apply(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$PolyhedronsSet$TranslationTransform#apply(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$SubPlane#SubPlane(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": -26.161290322580644,
        "org.apache.commons.math3.geometry.euclidean.threed$SubPlane#buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": -26.161290322580644,
        "org.apache.commons.math3.geometry.euclidean.threed$SubPlane#side(org.apache.commons.math3.geometry.partitioning.Hyperplane)": -26.161290322580644,
        "org.apache.commons.math3.geometry.euclidean.threed$SubPlane#split(org.apache.commons.math3.geometry.partitioning.Hyperplane)": -26.161290322580644,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#<clinit>()": 85.12903225806451,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,double)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,double,double)": 85.12903225806451,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 4.806451612903224,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": -0.032258064516128115,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": -25.193548387096776,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double[])": 1.9375,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#add(double,org.apache.commons.math3.geometry.Vector)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#add(org.apache.commons.math3.geometry.Vector)": -17.451612903225808,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#angle(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3.875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#crossProduct(org.apache.commons.math3.geometry.Vector)": -5.838709677419356,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": -8.741935483870968,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance(org.apache.commons.math3.geometry.Vector)": 11.625,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 1.9375,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance1(org.apache.commons.math3.geometry.Vector)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceInf(org.apache.commons.math3.geometry.Vector)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceSq(org.apache.commons.math3.geometry.Vector)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#dotProduct(org.apache.commons.math3.geometry.Vector)": 10.612903225806448,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#dotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3.875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#equals(java.lang.Object)": 25.1875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getAlpha()": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getDelta()": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNorm()": 15.451612903225808,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNorm1()": 1.9375,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNormInf()": 1.9375,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNormSq()": -4.870967741935484,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getSpace()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getX()": 22.225806451612904,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getY()": 22.225806451612904,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getZ()": 22.225806451612904,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getZero()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#hashCode()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#isInfinite()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#isNaN()": 25.1875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#negate()": 1.9375,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#normalize()": 1.9375,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#orthogonal()": -11.64516129032258,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#scalarMultiply(double)": 3.875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#subtract(double,org.apache.commons.math3.geometry.Vector)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#subtract(org.apache.commons.math3.geometry.Vector)": 10.612903225806448,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#toArray()": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#toString()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#toString(java.text.NumberFormat)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#Line(double,double,double,double)": 8.71875,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#Line(org.apache.commons.math3.geometry.euclidean.twod.Line)": -9.70967741935484,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#Line(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double)": 1.9375,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#Line(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 8.677419354838712,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#contains(org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#copySelf()": -9.70967741935484,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getAngle()": -8.741935483870968,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getOffset(org.apache.commons.math3.geometry.Vector)": 15.5,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getOffset(org.apache.commons.math3.geometry.euclidean.twod.Line)": -10.677419354838708,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getOriginOffset()": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getPointAt(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getReverse()": 6.78125,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getTransform(java.awt.geom.AffineTransform)": 1.9375,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#intersection(org.apache.commons.math3.geometry.euclidean.twod.Line)": -2.93548387096774,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#isParallelTo(org.apache.commons.math3.geometry.euclidean.twod.Line)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double)": 1.9375,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 8.677419354838712,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#revertSelf()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane)": -25.193548387096776,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#setAngle(double)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#setOriginOffset(double)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#toSpace(org.apache.commons.math3.geometry.Vector)": -6.806451612903224,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#toSubSpace(org.apache.commons.math3.geometry.Vector)": -1.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#translateToPoint(org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#wholeHyperplane()": -8.741935483870968,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#wholeSpace()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line$LineTransform#Line$LineTransform(java.awt.geom.AffineTransform)": 1.9375,
        "org.apache.commons.math3.geometry.euclidean.twod$Line$LineTransform#apply(org.apache.commons.math3.geometry.Vector)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.twod$Line$LineTransform#apply(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 1.9375,
        "org.apache.commons.math3.geometry.euclidean.twod$Line$LineTransform#apply(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet#PolygonsSet()": -26.161290322580644,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet#PolygonsSet(double,double,double,double)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet#PolygonsSet(java.util.Collection)": -17.451612903225808,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet#PolygonsSet(org.apache.commons.math3.geometry.partitioning.BSPTree)": -16.483870967741936,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet#boxBoundary(double,double,double,double)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet#buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree)": -18.41935483870968,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet#computeGeometricalProperties()": -25.193548387096776,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet#followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree)": -13.580645161290324,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet#getVertices()": -13.580645161290324,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$ComparableSegment#PolygonsSet$ComparableSegment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,double)": -13.580645161290324,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$ComparableSegment#PolygonsSet$ComparableSegment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Line)": -13.580645161290324,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$ComparableSegment#compareTo(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment)": -13.580645161290324,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$ComparableSegment#equals(java.lang.Object)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$ComparableSegment#hashCode()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$SegmentsBuilder#PolygonsSet$SegmentsBuilder()": -13.580645161290324,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$SegmentsBuilder#addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean)": -13.580645161290324,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$SegmentsBuilder#getSorted()": -13.580645161290324,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$SegmentsBuilder#visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": -13.580645161290324,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$SegmentsBuilder#visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": -13.580645161290324,
        "org.apache.commons.math3.geometry.euclidean.twod$PolygonsSet$SegmentsBuilder#visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)": -13.580645161290324,
        "org.apache.commons.math3.geometry.euclidean.twod$Segment#Segment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Line)": -8.741935483870968,
        "org.apache.commons.math3.geometry.euclidean.twod$Segment#getEnd()": -9.70967741935484,
        "org.apache.commons.math3.geometry.euclidean.twod$Segment#getLine()": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.twod$Segment#getStart()": -9.70967741935484,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#SubLine(org.apache.commons.math3.geometry.euclidean.twod.Segment)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#SubLine(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": -25.193548387096776,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#SubLine(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": -4.870967741935484,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#buildIntervalSet(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": -24.225806451612904,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": -9.70967741935484,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#getSegments()": 5.8125,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#intersection(org.apache.commons.math3.geometry.euclidean.twod.SubLine,boolean)": 5.8125,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#side(org.apache.commons.math3.geometry.partitioning.Hyperplane)": -9.70967741935484,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#split(org.apache.commons.math3.geometry.partitioning.Hyperplane)": -9.70967741935484,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#<clinit>()": 9.645161290322584,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double,double)": 9.645161290322584,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double[])": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#add(double,org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#add(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distance(org.apache.commons.math3.geometry.Vector)": -7.774193548387096,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distance(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distance1(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distanceInf(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distanceInf(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distanceSq(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distanceSq(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#dotProduct(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#equals(java.lang.Object)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getNorm()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getNorm1()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getNormInf()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getNormSq()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getSpace()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getX()": 9.645161290322584,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getY()": 9.645161290322584,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getZero()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#hashCode()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#isInfinite()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#isNaN()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#negate()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#normalize()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#scalarMultiply(double)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#subtract(double,org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#subtract(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#toArray()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#toString()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#toString(java.text.NumberFormat)": 0.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#AbstractRegion()": -5.838709677419356,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#AbstractRegion(java.util.Collection)": -17.451612903225808,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#AbstractRegion(org.apache.commons.math3.geometry.partitioning.BSPTree)": 15.451612903225808,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#AbstractRegion(org.apache.commons.math3.geometry.partitioning.Hyperplane[])": 0.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#applyTransform(org.apache.commons.math3.geometry.partitioning.Transform)": 0.96875,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.Characterization)": -12.612903225806452,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#checkPoint(org.apache.commons.math3.geometry.Vector)": 25.1875,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.Vector)": 13.516129032258064,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#contains(org.apache.commons.math3.geometry.partitioning.Region)": 0.96875,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#copySelf()": 5.8125,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#getBarycenter()": -23.258064516129032,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#getBoundarySize()": 4.84375,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#getSize()": -7.774193548387096,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#getTree(boolean)": 5.774193548387096,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection)": -17.451612903225808,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#intersection(org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 0.96875,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#isEmpty()": -9.70967741935484,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#isEmpty(org.apache.commons.math3.geometry.partitioning.BSPTree)": -9.70967741935484,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#recurseBuildBoundary(org.apache.commons.math3.geometry.partitioning.BSPTree)": -12.612903225806452,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#recurseIntersection(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 0.96875,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides)": -9.70967741935484,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#recurseTransform(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.Transform)": 0.96875,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#setBarycenter(org.apache.commons.math3.geometry.Vector)": -7.774193548387096,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#setSize(double)": -7.774193548387096,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#side(org.apache.commons.math3.geometry.partitioning.Hyperplane)": -9.70967741935484,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$1#compare(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane)": -17.451612903225808,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$2#visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": -17.451612903225808,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$2#visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": -17.451612903225808,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$2#visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)": -17.451612903225808,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$3#<clinit>()": -9.70967741935484,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$Sides#AbstractRegion$Sides()": -9.70967741935484,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$Sides#minusFound()": -9.70967741935484,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$Sides#plusFound()": -9.70967741935484,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$Sides#rememberMinusFound()": -9.70967741935484,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$Sides#rememberPlusFound()": -9.70967741935484,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#AbstractSubHyperplane(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": 15.451612903225808,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#applyTransform(org.apache.commons.math3.geometry.partitioning.Transform)": 0.96875,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#copySelf()": -5.838709677419356,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#getHyperplane()": 15.451612903225808,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#getRemainingRegion()": 1.9032258064516157,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#getSize()": -12.612903225806452,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#isEmpty()": -9.70967741935484,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#recurseTransform(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Transform)": 0.96875,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#reunite(org.apache.commons.math3.geometry.partitioning.SubHyperplane)": -11.64516129032258,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#BSPTree()": -12.612903225806452,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#BSPTree(java.lang.Object)": 17.38709677419355,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#BSPTree(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,java.lang.Object)": 13.516129032258064,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#chopOffMinus(org.apache.commons.math3.geometry.partitioning.Hyperplane)": -8.741935483870968,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#chopOffPlus(org.apache.commons.math3.geometry.partitioning.Hyperplane)": -11.64516129032258,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#condense()": -6.806451612903224,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#copySelf()": -6.806451612903224,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#fitToCell(org.apache.commons.math3.geometry.partitioning.SubHyperplane)": -6.806451612903224,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getAttribute()": 17.38709677419355,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getCell(org.apache.commons.math3.geometry.Vector)": 13.516129032258064,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getCut()": 17.38709677419355,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getMinus()": 7.70967741935484,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getParent()": -17.451612903225808,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getPlus()": 7.70967741935484,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#insertCut(org.apache.commons.math3.geometry.partitioning.Hyperplane)": -12.612903225806452,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#insertInTree(org.apache.commons.math3.geometry.partitioning.BSPTree,boolean)": -6.806451612903224,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger)": -6.806451612903224,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean)": -6.806451612903224,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#setAttribute(java.lang.Object)": -6.806451612903224,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#split(org.apache.commons.math3.geometry.partitioning.SubHyperplane)": -6.806451612903224,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)": -6.806451612903224,
        "org.apache.commons.math3.geometry.partitioning$BSPTree$1#<clinit>()": -6.806451612903224,
        "org.apache.commons.math3.geometry.partitioning$BSPTreeVisitor$Order#<clinit>()": -6.806451612903224,
        "org.apache.commons.math3.geometry.partitioning$BSPTreeVisitor$Order#BSPTreeVisitor$Order(java.lang.String,int)": -6.806451612903224,
        "org.apache.commons.math3.geometry.partitioning$BoundaryAttribute#BoundaryAttribute(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane)": -12.612903225806452,
        "org.apache.commons.math3.geometry.partitioning$BoundaryAttribute#getPlusInside()": -12.612903225806452,
        "org.apache.commons.math3.geometry.partitioning$BoundaryAttribute#getPlusOutside()": -12.612903225806452,
        "org.apache.commons.math3.geometry.partitioning$BoundarySizeVisitor#BoundarySizeVisitor()": 4.84375,
        "org.apache.commons.math3.geometry.partitioning$BoundarySizeVisitor#getSize()": 4.84375,
        "org.apache.commons.math3.geometry.partitioning$BoundarySizeVisitor#visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": 4.84375,
        "org.apache.commons.math3.geometry.partitioning$BoundarySizeVisitor#visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": 4.84375,
        "org.apache.commons.math3.geometry.partitioning$BoundarySizeVisitor#visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)": 4.84375,
        "org.apache.commons.math3.geometry.partitioning$Characterization#Characterization()": -12.612903225806452,
        "org.apache.commons.math3.geometry.partitioning$Characterization#add(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean)": -12.612903225806452,
        "org.apache.commons.math3.geometry.partitioning$Characterization#getIn()": -12.612903225806452,
        "org.apache.commons.math3.geometry.partitioning$Characterization#getOut()": -12.612903225806452,
        "org.apache.commons.math3.geometry.partitioning$Characterization#hasIn()": -12.612903225806452,
        "org.apache.commons.math3.geometry.partitioning$Characterization#hasOut()": -12.612903225806452,
        "org.apache.commons.math3.geometry.partitioning$Region$Location#<clinit>()": 13.516129032258064,
        "org.apache.commons.math3.geometry.partitioning$Region$Location#Region$Location(java.lang.String,int)": 13.516129032258064,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory#RegionFactory()": -3.903225806451612,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory#buildConvex(org.apache.commons.math3.geometry.partitioning.Hyperplane[])": 4.84375,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory#difference(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region)": 3.875,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory#getComplement(org.apache.commons.math3.geometry.partitioning.Region)": 2.90625,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory#intersection(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region)": 1.9375,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory#recurseComplement(org.apache.commons.math3.geometry.partitioning.BSPTree)": 7.75,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory#union(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region)": -8.741935483870968,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory#xor(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region)": 0.96875,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$DifferenceMerger#RegionFactory$DifferenceMerger(org.apache.commons.math3.geometry.partitioning.RegionFactory)": 3.875,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$DifferenceMerger#merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean)": 3.875,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$IntersectionMerger#RegionFactory$IntersectionMerger(org.apache.commons.math3.geometry.partitioning.RegionFactory)": 1.9375,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$IntersectionMerger#merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean)": 1.9375,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$NodesCleaner#RegionFactory$NodesCleaner(org.apache.commons.math3.geometry.partitioning.RegionFactory)": -3.903225806451612,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$NodesCleaner#visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": -8.741935483870968,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$NodesCleaner#visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": -6.806451612903224,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$NodesCleaner#visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)": -8.741935483870968,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$UnionMerger#RegionFactory$UnionMerger(org.apache.commons.math3.geometry.partitioning.RegionFactory)": -8.741935483870968,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$UnionMerger#merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean)": -8.741935483870968,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$XorMerger#RegionFactory$XorMerger(org.apache.commons.math3.geometry.partitioning.RegionFactory)": 0.96875,
        "org.apache.commons.math3.geometry.partitioning$RegionFactory$XorMerger#merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean)": 0.96875,
        "org.apache.commons.math3.geometry.partitioning$Side#<clinit>()": -6.806451612903224,
        "org.apache.commons.math3.geometry.partitioning$Side#Side(java.lang.String,int)": -6.806451612903224,
        "org.apache.commons.math3.geometry.partitioning$SubHyperplane$SplitSubHyperplane#SubHyperplane$SplitSubHyperplane(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane)": -6.806451612903224,
        "org.apache.commons.math3.geometry.partitioning$SubHyperplane$SplitSubHyperplane#getMinus()": -6.806451612903224,
        "org.apache.commons.math3.geometry.partitioning$SubHyperplane$SplitSubHyperplane#getPlus()": -6.806451612903224,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree#AVLTree()": -8.741935483870968,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree#delete(java.lang.Comparable)": 0.96875,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree#getLargest()": 0.96875,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree#getNotLarger(java.lang.Comparable)": 1.9375,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree#getNotSmaller(java.lang.Comparable)": -9.70967741935484,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree#getSmallest()": -9.70967741935484,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree#insert(java.lang.Comparable)": -8.741935483870968,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree#isEmpty()": -13.580645161290324,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree#size()": 2.90625,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$1#<clinit>()": -8.741935483870968,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#AVLTree$Node(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree,java.lang.Comparable,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node)": -8.741935483870968,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#delete()": -12.612903225806452,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#getElement()": -8.741935483870968,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#getLargest()": -15.516129032258064,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#getNext()": -9.70967741935484,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#getPrevious()": 1.9375,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#getSmallest()": -8.741935483870968,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#insert(java.lang.Comparable)": -8.741935483870968,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#rebalanceLeftGrown()": -12.612903225806452,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#rebalanceLeftShrunk()": -13.580645161290324,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#rebalanceRightGrown()": -8.741935483870968,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#rebalanceRightShrunk()": -12.612903225806452,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#rotateCCW()": -9.70967741935484,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#rotateCW()": -13.580645161290324,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Node#size()": 2.90625,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Skew#<clinit>()": -8.741935483870968,
        "org.apache.commons.math3.geometry.partitioning.utilities$AVLTree$Skew#AVLTree$Skew(java.lang.String,int)": -8.741935483870968,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#OrderedTuple(double[])": -13.580645161290324,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#compareTo(org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple)": -13.580645161290324,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#computeLSB(long)": -13.580645161290324,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#computeMSB(long)": -13.580645161290324,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#encode(int)": -13.580645161290324,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#equals(java.lang.Object)": 0.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#exponent(long)": -13.580645161290324,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#getBit(int,int)": -13.580645161290324,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#getComponents()": 0.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#hashCode()": 0.0,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#mantissa(long)": -13.580645161290324,
        "org.apache.commons.math3.geometry.partitioning.utilities$OrderedTuple#sign(long)": -13.580645161290324,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 2644.8064516129034,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1335.4516129032259,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3.875,
        "org.apache.commons.math3.util$FastMath#abs(int)": 312.90625,
        "org.apache.commons.math3.util$FastMath#abs(long)": 457.25,
        "org.apache.commons.math3.util$FastMath#acos(double)": 17.4375,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#asin(double)": 17.4375,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#atan(double)": 16.46875,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 43.516129032258064,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 40.61290322580645,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 35.84375,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 1068.53125,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 11.625,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cos(double)": 178.03225806451613,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 245.77419354838707,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 20.34375,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 29.967741935483872,
        "org.apache.commons.math3.util$FastMath#exp(double)": 597.71875,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 1203.1875,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 10.65625,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 18.40625,
        "org.apache.commons.math3.util$FastMath#floor(double)": 1200.9354838709678,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 30.935483870967744,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 28.032258064516128,
        "org.apache.commons.math3.util$FastMath#log(double)": 1054.96875,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1206.09375,
        "org.apache.commons.math3.util$FastMath#log10(double)": 50.375,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 7.75,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 532.8125,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 222.5483870967742,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 0.96875,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 240.25,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 449.9677419354839,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 12.59375,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 282.5483870967742,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 282.5483870967742,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 1062.71875,
        "org.apache.commons.math3.util$FastMath#random()": 18.40625,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.84375,
        "org.apache.commons.math3.util$FastMath#rint(double)": 17.4375,
        "org.apache.commons.math3.util$FastMath#round(double)": 18.40625,
        "org.apache.commons.math3.util$FastMath#round(float)": 2.90625,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 13.516129032258064,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9375,
        "org.apache.commons.math3.util$FastMath#signum(double)": 8.71875,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#sin(double)": 261.258064516129,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 266.0967741935484,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 20.34375,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1205.774193548387,
        "org.apache.commons.math3.util$FastMath#tan(double)": 20.34375,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 20.34375,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 7.75,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 217.96875,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 2.90625,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 1198.34375,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 1194.46875,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1193.5,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 0.0,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 43.59375,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 44.5625,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 54.25,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 24.21875,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 50.375,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 5.8125,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": 19.375,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 5.8125,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 4.84375,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.96875,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.96875,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 12.548387096774192,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 14.483870967741936,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 1.9375,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": 2.90625,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": 1.9375,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 8.71875,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 8.71875,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 7.75,
        "org.apache.commons.math3.util$MathArrays$2#<clinit>()": 56.1875,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 59.09375,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 59.09375,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 0.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 16.46875,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 0.96875,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 698.46875,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 74.59375,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 3.875,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 3.875,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 1.9375,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 1.9375,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 45.53125,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 8.71875,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 2.8709677419354804,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 4.84375,
        "org.apache.commons.math3.util$Precision#<clinit>()": 757.7096774193549,
        "org.apache.commons.math3.util$Precision#Precision()": 0.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 46.5,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 22.28125,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 132.71875,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 48.4375,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 453.375,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 0.96875,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 77.5,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 120.125,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 39.71875,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 76.53125,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 0.0,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 0.96875
    },
    "Math-33": {
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 112.375,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 129.8125,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 2.90625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.65625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 28.09375,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 633.5625,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 6.78125,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 500.84375,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 12.59375,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 44.5625,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 63.9375,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 42.625,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int)": 0.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int,java.lang.Class)": 11.625,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 18.40625,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 18.40625,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 10.65625,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(java.lang.Integer[],java.lang.Integer[])": 0.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,java.lang.Integer[],java.lang.Integer[])": 37.78125,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimension(int)": 0.96875,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimensions()": 0.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimension(int)": 0.96875,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimensions()": 0.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 10.65625,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 25.1875,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 6.78125,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 6.78125,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 35.84375,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 77.5,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 43.59375,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 69.75,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 19.375,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 112.375,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 60.0625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 177.28125,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.90625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.90625,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 27.125,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 133.6875,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 0.96875,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 0.96875,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 0.96875,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 6.78125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix()": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field)": 69.75,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field,int,int)": 99.78125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 3.875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int)": 64.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int,int)": 115.28125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkAdditionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkColumnIndex(int)": 122.0625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkMultiplicationCompatible(org.apache.commons.math3.linear.FieldMatrix)": 17.4375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkRowIndex(int)": 122.0625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int,int,int,int)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int[],int[])": 4.84375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubtractionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3.875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int,int,int,int,org.apache.commons.math3.FieldElement[][])": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int[],int[],org.apache.commons.math3.FieldElement[][])": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#equals(java.lang.Object)": 31.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[][])": 88.15625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumn(int)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnMatrix(int)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnVector(int)": 5.8125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getData()": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getField()": 126.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRow(int)": 6.78125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowVector(int)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int[],int[])": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getTrace()": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#hashCode()": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#isSquare()": 36.8125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 9.6875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.linear.FieldVector)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#power(int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldMatrix)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldVector)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#toString()": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#transpose()": 5.8125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 22.28125,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$1#visit(int,int,org.apache.commons.math3.FieldElement)": 2.90625,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#start(int,int,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#visit(int,int,org.apache.commons.math3.FieldElement)": 1.9375,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$3#visit(int,int,org.apache.commons.math3.FieldElement)": 5.8125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix()": 228.35483870967744,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix(int,int)": 343.51612903225805,
        "org.apache.commons.math3.linear$AbstractRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 15.5,
        "org.apache.commons.math3.linear$AbstractRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int,int,int,int,double[][])": 22.28125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int[],int[],double[][])": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#equals(java.lang.Object)": 40.6875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumn(int)": 33.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnMatrix(int)": 15.5,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnVector(int)": 15.5,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getData()": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getFrobeniusNorm()": 12.59375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getNorm()": 59.09375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRow(int)": 14.483870967741936,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowVector(int)": -3.903225806451612,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int,int,int,int)": 9.6875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int[],int[])": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getTrace()": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#hashCode()": 6.78125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#isSquare()": 115.28125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 79.4375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(double[])": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(org.apache.commons.math3.linear.RealVector)": 38.75,
        "org.apache.commons.math3.linear$AbstractRealMatrix#power(int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(double[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealMatrix)": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarAdd(double)": 13.5625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarMultiply(double)": 15.5,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumn(int,double[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 18.40625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRow(int,double[])": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": -3.903225806451612,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setSubMatrix(double[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 62.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#toString()": 4.84375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#transpose()": 132.71875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 7.75,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4.84375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 134.65625,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 21.3125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#end()": 59.09375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#start(int,int,int,int,int,int)": 59.09375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#visit(int,int,double)": 59.09375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#end()": 12.59375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#start(int,int,int,int,int,int)": 12.59375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#visit(int,int,double)": 12.59375,
        "org.apache.commons.math3.linear$AbstractRealMatrix$3#visit(int,int,double)": 2.90625,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#start(int,int,int,int,int,int)": 22.28125,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#visit(int,int,double)": 22.28125,
        "org.apache.commons.math3.linear$AbstractRealMatrix$5#visit(int,int,double)": 132.71875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,int,int)": 33.90625,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][])": 47.46875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],boolean)": 30.03125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][])": 37.78125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][],boolean)": 17.4375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#add(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copy()": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyIn(org.apache.commons.math3.FieldElement[][])": 47.46875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyOut()": 31.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#createMatrix(int,int)": 17.4375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getColumnDimension()": 76.53125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getData()": 30.03125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getDataRef()": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getEntry(int,int)": 63.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getRowDimension()": 76.53125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 36.8125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 47.46875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 21.3125,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix()": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[])": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][])": 178.03225806451613,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][],boolean)": 99.78125,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(int,int)": 210.93548387096774,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#add(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copy()": 11.625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyIn(double[][])": 179.96774193548387,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyOut()": 166.625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#createMatrix(int,int)": 160.8125,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getColumnDimension()": 261.258064516129,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getData()": 159.84375,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getDataRef()": 7.70967741935484,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getEntry(int,int)": 181.90322580645162,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getRowDimension()": 261.258064516129,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 10.65625,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#operate(double[])": 40.6875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#preMultiply(double[])": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setEntry(int,int,double)": 202.2258064516129,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setSubMatrix(double[][],int,int)": 179.96774193548387,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 54.25,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 3.875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 133.6875,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 21.3125,
        "org.apache.commons.math3.linear$ArrayRealVector#<clinit>()": 281.5806451612903,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector()": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[])": 168.3548387096774,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],boolean)": 154.80645161290323,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],double[])": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],int,int)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int)": 100.61290322580646,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int,double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[])": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[],int,int)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean)": 62.87096774193549,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,double[])": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#add(org.apache.commons.math3.linear.RealVector)": 6.78125,
        "org.apache.commons.math3.linear$ArrayRealVector#addToEntry(int,double)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#append(double)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.ArrayRealVector)": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(int)": 84.16129032258064,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 6.78125,
        "org.apache.commons.math3.linear$ArrayRealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 16.46875,
        "org.apache.commons.math3.linear$ArrayRealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 39.71875,
        "org.apache.commons.math3.linear$ArrayRealVector#copy()": 61.903225806451616,
        "org.apache.commons.math3.linear$ArrayRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 44.483870967741936,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": 8.71875,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 14.53125,
        "org.apache.commons.math3.linear$ArrayRealVector#equals(java.lang.Object)": 46.5,
        "org.apache.commons.math3.linear$ArrayRealVector#getDataRef()": 47.46875,
        "org.apache.commons.math3.linear$ArrayRealVector#getDimension()": 206.09677419354838,
        "org.apache.commons.math3.linear$ArrayRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#getEntry(int)": 163.51612903225808,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Norm()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfNorm()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#getNorm()": 50.375,
        "org.apache.commons.math3.linear$ArrayRealVector#getSubVector(int,int)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#hashCode()": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#isInfinite()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#isNaN()": 47.46875,
        "org.apache.commons.math3.linear$ArrayRealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapAddToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#mapDivideToSelf(double)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#mapMultiplyToSelf(double)": 28.032258064516128,
        "org.apache.commons.math3.linear$ArrayRealVector#mapSubtractToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 2.90625,
        "org.apache.commons.math3.linear$ArrayRealVector#projection(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#set(double)": 42.625,
        "org.apache.commons.math3.linear$ArrayRealVector#setEntry(int,double)": 70.71875,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,double[])": 20.34375,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 21.3125,
        "org.apache.commons.math3.linear$ArrayRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 40.61290322580645,
        "org.apache.commons.math3.linear$ArrayRealVector#toArray()": 64.80645161290323,
        "org.apache.commons.math3.linear$ArrayRealVector#toString()": 0.96875,
        "org.apache.commons.math3.linear$ArrayRealVector#unitVector()": 1.9375,
        "org.apache.commons.math3.linear$ArrayRealVector#unitize()": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(int,int,org.apache.commons.math3.FieldElement[][],boolean)": 33.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.Field,int,int)": 26.15625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.FieldElement[][])": 33.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.BlockFieldMatrix)": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockHeight(int)": 39.71875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockWidth(int)": 44.5625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copy()": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copyBlockPart(org.apache.commons.math3.FieldElement[],int,int,int,int,int,org.apache.commons.math3.FieldElement[],int,int,int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createBlocksLayout(org.apache.commons.math3.Field,int,int)": 26.15625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createMatrix(int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumn(int)": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnDimension()": 39.71875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnMatrix(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getData()": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getEntry(int,int)": 27.125,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRow(int)": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowDimension()": 40.6875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getSubMatrix(int,int,int,int)": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.BlockFieldMatrix)": 6.78125,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 5.8125,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 4.84375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 3.875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#toBlocksLayout(org.apache.commons.math3.FieldElement[][])": 33.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#transpose()": 2.90625,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(double[][])": 109.46875,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int)": 68.78125,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int,double[][],boolean)": 127.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.BlockRealMatrix)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#addToEntry(int,int,double)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockHeight(int)": 134.65625,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockWidth(int)": 142.40625,
        "org.apache.commons.math3.linear$BlockRealMatrix#copy()": 4.84375,
        "org.apache.commons.math3.linear$BlockRealMatrix#copyBlockPart(double[],int,int,int,int,int,double[],int,int,int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#createBlocksLayout(int,int)": 86.21875,
        "org.apache.commons.math3.linear$BlockRealMatrix#createMatrix(int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumn(int)": 19.375,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnDimension()": 134.65625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnMatrix(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getData()": 66.84375,
        "org.apache.commons.math3.linear$BlockRealMatrix#getEntry(int,int)": 41.65625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getFrobeniusNorm()": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getNorm()": 22.28125,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRow(int)": 4.84375,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowDimension()": 135.625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowMatrix(int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowVector(int)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#getSubMatrix(int,int,int,int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.BlockRealMatrix)": 12.59375,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 12.59375,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#operate(double[])": 39.71875,
        "org.apache.commons.math3.linear$BlockRealMatrix#preMultiply(double[])": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarAdd(double)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarMultiply(double)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumn(int,double[])": 7.75,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setEntry(int,int,double)": 22.28125,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRow(int,double[])": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#setSubMatrix(double[][],int,int)": 1.9375,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.BlockRealMatrix)": 18.40625,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 21.3125,
        "org.apache.commons.math3.linear$BlockRealMatrix#toBlocksLayout(double[][])": 109.46875,
        "org.apache.commons.math3.linear$BlockRealMatrix#transpose()": 26.15625,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 8.71875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 2.90625,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 3.875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 0.96875,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#MatrixDimensionMismatchException(int,int,int,int)": 37.78125,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedColumnDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedRowDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongColumnDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongRowDimension()": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#MatrixUtils()": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#bigFractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils#checkAdditionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 29.0625,
        "org.apache.commons.math3.linear$MatrixUtils#checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 293.19354838709677,
        "org.apache.commons.math3.linear$MatrixUtils#checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)": 260.2903225806452,
        "org.apache.commons.math3.linear$MatrixUtils#checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 104.625,
        "org.apache.commons.math3.linear$MatrixUtils#checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 292.2258064516129,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int,int,int)": 38.75,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int[],int[])": 4.84375,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubtractionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 80.40625,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnRealMatrix(double[])": 12.59375,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldDiagonalMatrix(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldIdentityMatrix(org.apache.commons.math3.Field,int)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.Field,int,int)": 1.9375,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.FieldElement[][])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldVector(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealDiagonalMatrix(double[])": 16.46875,
        "org.apache.commons.math3.linear$MatrixUtils#createRealIdentityMatrix(int)": 45.53125,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(double[][])": 127.875,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(int,int)": 96.875,
        "org.apache.commons.math3.linear$MatrixUtils#createRealVector(double[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#createRowRealMatrix(double[])": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealMatrix(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealVector(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#fractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealMatrix(org.apache.commons.math3.linear.RealMatrix,java.io.ObjectOutputStream)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealVector(org.apache.commons.math3.linear.RealVector,java.io.ObjectOutputStream)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#solveLowerTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils#solveUpperTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#MatrixUtils$BigFractionMatrixConverter()": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#getConvertedMatrix()": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#start(int,int,int,int,int,int)": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.BigFraction)": 14.53125,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#MatrixUtils$FractionMatrixConverter()": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#getConvertedMatrix()": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#start(int,int,int,int,int,int)": 0.96875,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.Fraction)": 0.96875,
        "org.apache.commons.math3.linear$NonSquareMatrixException#NonSquareMatrixException(int,int)": 11.625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(int,int)": 30.03125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(org.apache.commons.math3.linear.OpenMapRealMatrix)": 8.71875,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#add(org.apache.commons.math3.linear.OpenMapRealMatrix)": 1.9375,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#computeKey(int,int)": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#copy()": 1.9375,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#createMatrix(int,int)": 6.78125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getColumnDimension()": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getEntry(int,int)": 27.125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getRowDimension()": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3.875,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3.875,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#setEntry(int,int,double)": 29.0625,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.OpenMapRealMatrix)": 5.8125,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 5.8125,
        "org.apache.commons.math3.linear$RealLinearOperator#RealLinearOperator()": 446.0967741935484,
        "org.apache.commons.math3.linear$RealLinearOperator#isTransposable()": 0.0,
        "org.apache.commons.math3.linear$RealLinearOperator#operateTranspose(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealVector#RealVector()": 304.80645161290323,
        "org.apache.commons.math3.linear$RealVector#add(org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$RealVector#addToEntry(int,double)": 0.96875,
        "org.apache.commons.math3.linear$RealVector#checkIndex(int)": 17.4375,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(int)": 7.75,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 5.8125,
        "org.apache.commons.math3.linear$RealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 2.90625,
        "org.apache.commons.math3.linear$RealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 4.84375,
        "org.apache.commons.math3.linear$RealVector#cosine(org.apache.commons.math3.linear.RealVector)": 5.8125,
        "org.apache.commons.math3.linear$RealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$RealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$RealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$RealVector#getL1Norm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$RealVector#getLInfNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector#getMaxIndex()": 2.90625,
        "org.apache.commons.math3.linear$RealVector#getMaxValue()": 2.90625,
        "org.apache.commons.math3.linear$RealVector#getMinIndex()": 2.90625,
        "org.apache.commons.math3.linear$RealVector#getMinValue()": 2.90625,
        "org.apache.commons.math3.linear$RealVector#getNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector#iterator()": 7.75,
        "org.apache.commons.math3.linear$RealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 2.90625,
        "org.apache.commons.math3.linear$RealVector#mapAdd(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#mapAddToSelf(double)": 0.0,
        "org.apache.commons.math3.linear$RealVector#mapDivide(double)": 5.8125,
        "org.apache.commons.math3.linear$RealVector#mapDivideToSelf(double)": 2.90625,
        "org.apache.commons.math3.linear$RealVector#mapMultiply(double)": 29.967741935483872,
        "org.apache.commons.math3.linear$RealVector#mapMultiplyToSelf(double)": 2.90625,
        "org.apache.commons.math3.linear$RealVector#mapSubtract(double)": 3.875,
        "org.apache.commons.math3.linear$RealVector#mapSubtractToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3.875,
        "org.apache.commons.math3.linear$RealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 2.90625,
        "org.apache.commons.math3.linear$RealVector#set(double)": 0.0,
        "org.apache.commons.math3.linear$RealVector#sparseIterator()": 3.875,
        "org.apache.commons.math3.linear$RealVector#subtract(org.apache.commons.math3.linear.RealVector)": 0.96875,
        "org.apache.commons.math3.linear$RealVector#toArray()": 0.0,
        "org.apache.commons.math3.linear$RealVector#unitVector()": 0.0,
        "org.apache.commons.math3.linear$RealVector#unitize()": 0.0,
        "org.apache.commons.math3.linear$RealVector#unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)": 27.125,
        "org.apache.commons.math3.linear$RealVector$1#hasNext()": 7.75,
        "org.apache.commons.math3.linear$RealVector$1#next()": 7.75,
        "org.apache.commons.math3.linear$RealVector$1#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2#add(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#addToEntry(int,double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#append(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#append(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#combine(double,double,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#copy()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#cosine(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#dotProduct(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#ebeDivide(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getDimension()": 5.8125,
        "org.apache.commons.math3.linear$RealVector$2#getDistance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getEntry(int)": 7.75,
        "org.apache.commons.math3.linear$RealVector$2#getL1Distance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getL1Norm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getLInfNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getNorm()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#getSubVector(int,int)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#isInfinite()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#isNaN()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#iterator()": 3.875,
        "org.apache.commons.math3.linear$RealVector$2#map(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapAdd(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapAddToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapDivide(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapDivideToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiply(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiplyToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtract(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtractToSelf(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#outerProduct(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#projection(org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#set(double)": 2.90625,
        "org.apache.commons.math3.linear$RealVector$2#setEntry(int,double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#sparseIterator()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#subtract(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector$2#toArray()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#unitVector()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2#unitize()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2$1#hasNext()": 3.875,
        "org.apache.commons.math3.linear$RealVector$2$1#next()": 3.875,
        "org.apache.commons.math3.linear$RealVector$2$1#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2$2#hasNext()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2$2#next()": 1.9375,
        "org.apache.commons.math3.linear$RealVector$2$2#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2)": 5.8125,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#getValue()": 5.8125,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#setValue(double)": 3.875,
        "org.apache.commons.math3.linear$RealVector$Entry#RealVector$Entry(org.apache.commons.math3.linear.RealVector)": 14.53125,
        "org.apache.commons.math3.linear$RealVector$Entry#getIndex()": 13.5625,
        "org.apache.commons.math3.linear$RealVector$Entry#getValue()": 10.65625,
        "org.apache.commons.math3.linear$RealVector$Entry#setIndex(int)": 14.53125,
        "org.apache.commons.math3.linear$RealVector$Entry#setValue(double)": 1.9375,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#RealVector$SparseEntryIterator(org.apache.commons.math3.linear.RealVector)": 3.875,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#advance(org.apache.commons.math3.linear.RealVector$Entry)": 3.875,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#hasNext()": 3.875,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#next()": 3.875,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat()": 7.75,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 291.258064516129,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.text.NumberFormat)": 291.258064516129,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector)": 22.28125,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition)": 22.28125,
        "org.apache.commons.math3.linear$RealVectorFormat#getAvailableLocales()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getFormat()": 1.9375,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance()": 281.5806451612903,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance(java.util.Locale)": 291.258064516129,
        "org.apache.commons.math3.linear$RealVectorFormat#getPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String)": 27.125,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String,java.text.ParsePosition)": 34.875,
        "org.apache.commons.math3.optimization$GoalType#<clinit>()": 87.06451612903226,
        "org.apache.commons.math3.optimization$GoalType#GoalType(java.lang.String,int)": 87.06451612903226,
        "org.apache.commons.math3.optimization$PointValuePair#PointValuePair(double[],double)": 61.903225806451616,
        "org.apache.commons.math3.optimization$PointValuePair#PointValuePair(double[],double,boolean)": 61.903225806451616,
        "org.apache.commons.math3.optimization$PointValuePair#getPoint()": 37.70967741935483,
        "org.apache.commons.math3.optimization$PointValuePair#getPointRef()": 28.09375,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#AbstractLinearOptimizer()": -8.741935483870968,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#getConstraints()": -8.741935483870968,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#getFunction()": -8.741935483870968,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#getGoalType()": -8.741935483870968,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#getIterations()": 0.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#getMaxIterations()": 0.0,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#incrementIterationsCounter()": -10.677419354838708,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#optimize(org.apache.commons.math3.optimization.linear.LinearObjectiveFunction,java.util.Collection,org.apache.commons.math3.optimization.GoalType,boolean)": -8.741935483870968,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#restrictToNonNegative()": -8.741935483870968,
        "org.apache.commons.math3.optimization.linear$AbstractLinearOptimizer#setMaxIterations(int)": -8.741935483870968,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#LinearConstraint(double[],double,org.apache.commons.math3.optimization.linear.Relationship,double[],double)": 0.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#LinearConstraint(double[],org.apache.commons.math3.optimization.linear.Relationship,double)": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#LinearConstraint(org.apache.commons.math3.linear.RealVector,double,org.apache.commons.math3.optimization.linear.Relationship,org.apache.commons.math3.linear.RealVector,double)": 0.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#LinearConstraint(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.optimization.linear.Relationship,double)": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#equals(java.lang.Object)": 0.96875,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#getCoefficients()": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#getRelationship()": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#getValue()": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#hashCode()": 0.0,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#readObject(java.io.ObjectInputStream)": 0.96875,
        "org.apache.commons.math3.optimization.linear$LinearConstraint#writeObject(java.io.ObjectOutputStream)": 0.96875,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#LinearObjectiveFunction(double[],double)": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#LinearObjectiveFunction(org.apache.commons.math3.linear.RealVector,double)": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#equals(java.lang.Object)": 0.96875,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#getCoefficients()": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#getConstantTerm()": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#getValue(double[])": -12.612903225806452,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#getValue(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#hashCode()": 0.0,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#readObject(java.io.ObjectInputStream)": 0.96875,
        "org.apache.commons.math3.optimization.linear$LinearObjectiveFunction#writeObject(java.io.ObjectOutputStream)": 0.96875,
        "org.apache.commons.math3.optimization.linear$NoFeasibleSolutionException#NoFeasibleSolutionException()": 2.90625,
        "org.apache.commons.math3.optimization.linear$Relationship#<clinit>()": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$Relationship#Relationship(java.lang.String,int,java.lang.String)": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$Relationship#oppositeRelationship()": -27.129032258064516,
        "org.apache.commons.math3.optimization.linear$Relationship#toString()": 0.0,
        "org.apache.commons.math3.optimization.linear$Relationship$1#<clinit>()": -27.129032258064516,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#SimplexSolver()": -8.741935483870968,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#SimplexSolver(double,int)": -8.741935483870968,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#doIteration(org.apache.commons.math3.optimization.linear.SimplexTableau)": -10.677419354838708,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#doOptimize()": -8.741935483870968,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#getPivotColumn(org.apache.commons.math3.optimization.linear.SimplexTableau)": -10.677419354838708,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#getPivotRow(org.apache.commons.math3.optimization.linear.SimplexTableau,int)": -10.677419354838708,
        "org.apache.commons.math3.optimization.linear$SimplexSolver#solvePhase1(org.apache.commons.math3.optimization.linear.SimplexTableau)": -8.741935483870968,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#SimplexTableau(org.apache.commons.math3.optimization.linear.LinearObjectiveFunction,java.util.Collection,org.apache.commons.math3.optimization.GoalType,boolean,double)": 3.875,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#SimplexTableau(org.apache.commons.math3.optimization.linear.LinearObjectiveFunction,java.util.Collection,org.apache.commons.math3.optimization.GoalType,boolean,double,int)": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#copyArray(double[],double[])": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#createTableau(boolean)": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#divideRow(int,double)": -10.677419354838708,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#dropPhase1Objective()": -10.677419354838708,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#equals(java.lang.Object)": 0.96875,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getArtificialVariableOffset()": -9.70967741935484,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getBasicRow(int)": -10.677419354838708,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getConstraintTypeCounts(org.apache.commons.math3.optimization.linear.Relationship)": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getData()": 2.90625,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getEntry(int,int)": -7.774193548387096,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getHeight()": -8.741935483870968,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getInvertedCoefficientSum(org.apache.commons.math3.linear.RealVector)": -16.483870967741936,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getNumArtificialVariables()": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getNumDecisionVariables()": 0.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getNumObjectiveFunctions()": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getNumSlackVariables()": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getOriginalNumDecisionVariables()": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getRhsOffset()": -9.70967741935484,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getSlackVariableOffset()": -7.774193548387096,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getSolution()": -12.612903225806452,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#getWidth()": -7.774193548387096,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#hashCode()": 0.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#initializeColumnLabels()": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#isOptimal()": -8.741935483870968,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#normalize(org.apache.commons.math3.optimization.linear.LinearConstraint)": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#normalizeConstraints(java.util.Collection)": -4.870967741935484,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#readObject(java.io.ObjectInputStream)": 0.96875,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#setEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#subtractRow(int,int,double)": -10.677419354838708,
        "org.apache.commons.math3.optimization.linear$SimplexTableau#writeObject(java.io.ObjectOutputStream)": 0.96875,
        "org.apache.commons.math3.optimization.linear$UnboundedSolutionException#UnboundedSolutionException()": 0.96875,
        "org.apache.commons.math3.util$CompositeFormat#CompositeFormat()": 0.0,
        "org.apache.commons.math3.util$CompositeFormat#formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)": 72.65625,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat()": 19.375,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat(java.util.Locale)": 405.4516129032258,
        "org.apache.commons.math3.util$CompositeFormat#parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)": 91.0625,
        "org.apache.commons.math3.util$CompositeFormat#parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)": 89.125,
        "org.apache.commons.math3.util$CompositeFormat#parseNextCharacter(java.lang.String,java.text.ParsePosition)": 91.0625,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,double,java.text.ParsePosition)": 19.375,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)": 87.1875,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 2632.2258064516127,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1321.9032258064517,
        "org.apache.commons.math3.util$FastMath#abs(float)": 3.875,
        "org.apache.commons.math3.util$FastMath#abs(int)": 312.90625,
        "org.apache.commons.math3.util$FastMath#abs(long)": 399.64516129032256,
        "org.apache.commons.math3.util$FastMath#acos(double)": 17.4375,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#asin(double)": 17.4375,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#atan(double)": 16.46875,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 74.59375,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 71.6875,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 35.84375,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 1068.53125,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 11.625,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cos(double)": 209.25,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 277.0625,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 20.34375,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 61.03125,
        "org.apache.commons.math3.util$FastMath#exp(double)": 597.71875,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 1203.1875,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 10.65625,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 18.40625,
        "org.apache.commons.math3.util$FastMath#floor(double)": 1233.21875,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 62.0,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 59.09375,
        "org.apache.commons.math3.util$FastMath#log(double)": 1054.96875,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1206.09375,
        "org.apache.commons.math3.util$FastMath#log10(double)": 50.375,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 7.75,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 523.125,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 248.96875,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 0.96875,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 240.25,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 475.65625,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 12.59375,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 12.59375,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 313.875,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 313.875,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 1062.71875,
        "org.apache.commons.math3.util$FastMath#random()": 18.40625,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.84375,
        "org.apache.commons.math3.util$FastMath#rint(double)": 17.4375,
        "org.apache.commons.math3.util$FastMath#round(double)": 18.40625,
        "org.apache.commons.math3.util$FastMath#round(float)": 2.90625,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 44.5625,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9375,
        "org.apache.commons.math3.util$FastMath#signum(double)": 8.71875,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#sin(double)": 292.5625,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 297.40625,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 20.34375,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1226.4375,
        "org.apache.commons.math3.util$FastMath#tan(double)": 20.34375,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 20.34375,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 7.75,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 1.9375,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 217.96875,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 2.90625,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 1198.34375,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 1194.46875,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1193.5,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 0.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 16.46875,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 0.96875,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 652.2258064516129,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 74.59375,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 3.875,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 3.875,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 1.9375,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 1.9375,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 45.53125,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 8.71875,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 33.90625,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 4.84375,
        "org.apache.commons.math3.util$Pair#Pair(java.lang.Object,java.lang.Object)": 149.96774193548387,
        "org.apache.commons.math3.util$Pair#Pair(org.apache.commons.math3.util.Pair)": 0.0,
        "org.apache.commons.math3.util$Pair#equals(java.lang.Object)": 0.96875,
        "org.apache.commons.math3.util$Pair#getKey()": 122.87096774193549,
        "org.apache.commons.math3.util$Pair#getValue()": 167.59375,
        "org.apache.commons.math3.util$Pair#hashCode()": 0.0,
        "org.apache.commons.math3.util$Precision#<clinit>()": 744.1612903225806,
        "org.apache.commons.math3.util$Precision#Precision()": 0.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": -5.838709677419356,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": -8.741935483870968,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 122.0625,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": -3.903225806451612,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 395.7741935483871,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 0.96875,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 77.5,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 120.125,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 39.71875,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 76.53125,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 0.0,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 0.96875
    },
    "Math-34": {
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 630.65625,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 6.78125,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 498.90625,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 12.59375,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 6.78125,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 8.71875,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 43.59375,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 69.75,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 19.375,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 112.375,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 60.0625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 176.3125,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.90625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.90625,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 27.125,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 133.6875,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 0.96875,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 0.96875,
        "org.apache.commons.math3.genetics$AbstractListChromosome#AbstractListChromosome(java.lang.Object[])": 2.90625,
        "org.apache.commons.math3.genetics$AbstractListChromosome#AbstractListChromosome(java.util.List)": -6.806451612903224,
        "org.apache.commons.math3.genetics$AbstractListChromosome#getLength()": 13.5625,
        "org.apache.commons.math3.genetics$AbstractListChromosome#getRepresentation()": 14.53125,
        "org.apache.commons.math3.genetics$AbstractListChromosome#toString()": 0.96875,
        "org.apache.commons.math3.genetics$BinaryChromosome#BinaryChromosome(java.lang.Integer[])": 2.90625,
        "org.apache.commons.math3.genetics$BinaryChromosome#BinaryChromosome(java.util.List)": -20.35483870967742,
        "org.apache.commons.math3.genetics$BinaryChromosome#checkValidity(java.util.List)": -18.41935483870968,
        "org.apache.commons.math3.genetics$BinaryChromosome#isSame(org.apache.commons.math3.genetics.Chromosome)": 0.96875,
        "org.apache.commons.math3.genetics$BinaryChromosome#randomBinaryRepresentation(int)": -21.32258064516129,
        "org.apache.commons.math3.genetics$Chromosome#Chromosome()": -1.9677419354838719,
        "org.apache.commons.math3.genetics$Chromosome#compareTo(org.apache.commons.math3.genetics.Chromosome)": 6.78125,
        "org.apache.commons.math3.genetics$Chromosome#findSameChromosome(org.apache.commons.math3.genetics.Population)": 0.96875,
        "org.apache.commons.math3.genetics$Chromosome#getFitness()": 8.71875,
        "org.apache.commons.math3.genetics$Chromosome#isSame(org.apache.commons.math3.genetics.Chromosome)": 0.0,
        "org.apache.commons.math3.genetics$Chromosome#searchForFitnessUpdate(org.apache.commons.math3.genetics.Population)": 0.96875,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#<clinit>()": -16.483870967741936,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#GeneticAlgorithm(org.apache.commons.math3.genetics.CrossoverPolicy,double,org.apache.commons.math3.genetics.MutationPolicy,double,org.apache.commons.math3.genetics.SelectionPolicy)": 2.90625,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#evolve(org.apache.commons.math3.genetics.Population,org.apache.commons.math3.genetics.StoppingCondition)": 2.90625,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#getCrossoverPolicy()": 2.90625,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#getCrossoverRate()": 2.90625,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#getGenerationsEvolved()": 0.96875,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#getMutationPolicy()": 2.90625,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#getMutationRate()": 2.90625,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#getRandomGenerator()": -16.483870967741936,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#getSelectionPolicy()": 2.90625,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#nextGeneration(org.apache.commons.math3.genetics.Population)": 2.90625,
        "org.apache.commons.math3.genetics$GeneticAlgorithm#setRandomGenerator(org.apache.commons.math3.random.RandomGenerator)": 0.0,
        "org.apache.commons.math3.genetics$InvalidRepresentationException#InvalidRepresentationException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 3.875,
        "org.apache.commons.math3.genetics$ListPopulation#ListPopulation(int)": -16.483870967741936,
        "org.apache.commons.math3.genetics$ListPopulation#ListPopulation(java.util.List,int)": -9.70967741935484,
        "org.apache.commons.math3.genetics$ListPopulation#addChromosome(org.apache.commons.math3.genetics.Chromosome)": 5.8125,
        "org.apache.commons.math3.genetics$ListPopulation#addChromosomes(java.util.Collection)": -29.064516129032256,
        "org.apache.commons.math3.genetics$ListPopulation#getChromosomeList()": 3.875,
        "org.apache.commons.math3.genetics$ListPopulation#getChromosomes()": 4.84375,
        "org.apache.commons.math3.genetics$ListPopulation#getFittestChromosome()": 4.84375,
        "org.apache.commons.math3.genetics$ListPopulation#getPopulationLimit()": 6.78125,
        "org.apache.commons.math3.genetics$ListPopulation#getPopulationSize()": 4.84375,
        "org.apache.commons.math3.genetics$ListPopulation#iterator()": -30.032258064516128,
        "org.apache.commons.math3.genetics$ListPopulation#setChromosomes(java.util.List)": 0.0,
        "org.apache.commons.math3.genetics$ListPopulation#setPopulationLimit(int)": 2.90625,
        "org.apache.commons.math3.genetics$ListPopulation#toString()": 0.96875,
        "org.apache.commons.math3.random$JDKRandomGenerator#JDKRandomGenerator()": 0.9354838709677438,
        "org.apache.commons.math3.random$JDKRandomGenerator#setSeed(int)": 1.9375,
        "org.apache.commons.math3.random$JDKRandomGenerator#setSeed(int[])": 0.0
    },
    "Math-35": {
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 621.7142857142857,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 6.8,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 489.6,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 12.628571428571428,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 6.8,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 5.828571428571428,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 19.428571428571427,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 109.77142857142857,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 0.9714285714285714,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 0.9714285714285714,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 59.25714285714286,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 172.9142857142857,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.914285714285714,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.914285714285714,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 27.2,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 130.17142857142858,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 0.9714285714285714,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 0.9714285714285714,
        "org.apache.commons.math3.exception.util$ArgUtils#ArgUtils()": 0.0,
        "org.apache.commons.math3.exception.util$ArgUtils#flatten(java.lang.Object[])": 719.8285714285714,
        "org.apache.commons.math3.exception.util$ExceptionContext#ExceptionContext(java.lang.Throwable)": 719.8285714285714,
        "org.apache.commons.math3.exception.util$ExceptionContext#addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 718.8571428571429,
        "org.apache.commons.math3.exception.util$ExceptionContext#buildMessage(java.util.Locale,java.lang.String)": 5.828571428571428,
        "org.apache.commons.math3.exception.util$ExceptionContext#deSerializeContext(java.io.ObjectInputStream)": 1.9428571428571428,
        "org.apache.commons.math3.exception.util$ExceptionContext#deSerializeMessages(java.io.ObjectInputStream)": 1.9428571428571428,
        "org.apache.commons.math3.exception.util$ExceptionContext#getKeys()": 1.9428571428571428,
        "org.apache.commons.math3.exception.util$ExceptionContext#getLocalizedMessage()": 0.9714285714285714,
        "org.apache.commons.math3.exception.util$ExceptionContext#getMessage()": 3.8857142857142857,
        "org.apache.commons.math3.exception.util$ExceptionContext#getMessage(java.util.Locale)": 4.857142857142857,
        "org.apache.commons.math3.exception.util$ExceptionContext#getMessage(java.util.Locale,java.lang.String)": 0.9714285714285714,
        "org.apache.commons.math3.exception.util$ExceptionContext#getThrowable()": 0.0,
        "org.apache.commons.math3.exception.util$ExceptionContext#getValue(java.lang.String)": 2.914285714285714,
        "org.apache.commons.math3.exception.util$ExceptionContext#nonSerializableReplacement(java.lang.Object)": 0.9714285714285714,
        "org.apache.commons.math3.exception.util$ExceptionContext#readObject(java.io.ObjectInputStream)": 1.9428571428571428,
        "org.apache.commons.math3.exception.util$ExceptionContext#serializeContext(java.io.ObjectOutputStream)": 1.9428571428571428,
        "org.apache.commons.math3.exception.util$ExceptionContext#serializeMessages(java.io.ObjectOutputStream)": 1.9428571428571428,
        "org.apache.commons.math3.exception.util$ExceptionContext#setValue(java.lang.String,java.lang.Object)": 7.771428571428571,
        "org.apache.commons.math3.exception.util$ExceptionContext#writeObject(java.io.ObjectOutputStream)": 1.9428571428571428,
        "org.apache.commons.math3.exception.util$LocalizedFormats#<clinit>()": 782.0,
        "org.apache.commons.math3.exception.util$LocalizedFormats#LocalizedFormats(java.lang.String,int,java.lang.String)": 782.0,
        "org.apache.commons.math3.exception.util$LocalizedFormats#getLocalizedString(java.util.Locale)": 8.742857142857144,
        "org.apache.commons.math3.exception.util$LocalizedFormats#getSourceString()": 1.9428571428571428,
        "org.apache.commons.math3.genetics$Chromosome#Chromosome()": 23.314285714285713,
        "org.apache.commons.math3.genetics$Chromosome#compareTo(org.apache.commons.math3.genetics.Chromosome)": 6.8,
        "org.apache.commons.math3.genetics$Chromosome#findSameChromosome(org.apache.commons.math3.genetics.Population)": 0.9714285714285714,
        "org.apache.commons.math3.genetics$Chromosome#getFitness()": 7.771428571428571,
        "org.apache.commons.math3.genetics$Chromosome#isSame(org.apache.commons.math3.genetics.Chromosome)": 0.0,
        "org.apache.commons.math3.genetics$Chromosome#searchForFitnessUpdate(org.apache.commons.math3.genetics.Population)": 0.9714285714285714,
        "org.apache.commons.math3.genetics$ElitisticListPopulation#ElitisticListPopulation(int,double)": -8.242424242424242,
        "org.apache.commons.math3.genetics$ElitisticListPopulation#ElitisticListPopulation(java.util.List,int,double)": -13.09090909090909,
        "org.apache.commons.math3.genetics$ElitisticListPopulation#getElitismRate()": 4.857142857142857,
        "org.apache.commons.math3.genetics$ElitisticListPopulation#nextGeneration()": 3.8857142857142857,
        "org.apache.commons.math3.genetics$ElitisticListPopulation#setElitismRate(double)": 2.914285714285714,
        "org.apache.commons.math3.genetics$ListPopulation#ListPopulation(int)": -8.242424242424242,
        "org.apache.commons.math3.genetics$ListPopulation#ListPopulation(java.util.List,int)": -11.151515151515152,
        "org.apache.commons.math3.genetics$ListPopulation#addChromosome(org.apache.commons.math3.genetics.Chromosome)": 4.857142857142857,
        "org.apache.commons.math3.genetics$ListPopulation#getChromosomes()": 4.857142857142857,
        "org.apache.commons.math3.genetics$ListPopulation#getFittestChromosome()": 4.857142857142857,
        "org.apache.commons.math3.genetics$ListPopulation#getPopulationLimit()": 4.857142857142857,
        "org.apache.commons.math3.genetics$ListPopulation#getPopulationSize()": 4.857142857142857,
        "org.apache.commons.math3.genetics$ListPopulation#iterator()": 0.9714285714285714,
        "org.apache.commons.math3.genetics$ListPopulation#setChromosomes(java.util.List)": 0.0,
        "org.apache.commons.math3.genetics$ListPopulation#setPopulationLimit(int)": 0.0,
        "org.apache.commons.math3.genetics$ListPopulation#toString()": 0.0
    },
    "Math-36": {},
    "Math-37": {},
    "Math-38": {},
    "Math-39": {},
    "Math-4": {
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 172.6060606060606,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 192.96969696969697,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 2.909090909090909,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.666666666666666,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 52.36363636363637,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.9696969696969697,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 864.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 8.727272727272727,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 1.9393939393939394,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 704.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 13.575757575757576,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 63.03030303030303,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 89.21212121212122,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 60.121212121212125,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.9696969696969697,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 11.636363636363637,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 29.09090909090909,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 0.9696969696969697,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 15.515151515151516,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 0.9696969696969697,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 0.9696969696969697,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 0.9696969696969697,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 0.9696969696969697,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 21.333333333333332,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 11.636363636363637,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 50.42424242424242,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 79.51515151515152,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 50.42424242424242,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 76.60606060606061,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 104.72727272727273,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 239.5151515151515,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.909090909090909,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.909090909090909,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#IntervalsSet()": 29.09090909090909,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#IntervalsSet(double,double)": 23.67741935483871,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#IntervalsSet(java.util.Collection)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#IntervalsSet(org.apache.commons.math3.geometry.partitioning.BSPTree)": 31.03030303030303,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#asList()": 38.78787878787879,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree)": 27.151515151515152,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#buildTree(double,double)": 23.67741935483871,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#computeGeometricalProperties()": 19.393939393939394,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#getInf()": 2.909090909090909,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#getSup()": 2.909090909090909,
        "org.apache.commons.math3.geometry.euclidean.oned$IntervalsSet#recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double)": 38.78787878787879,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#OrientedPoint(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,boolean)": 32.38709677419355,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#copySelf()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#getLocation()": 36.84848484848485,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#getOffset(org.apache.commons.math3.geometry.Vector)": 41.696969696969695,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#isDirect()": 34.90909090909091,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#revertSelf()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 23.272727272727273,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#wholeHyperplane()": 32.38709677419355,
        "org.apache.commons.math3.geometry.euclidean.oned$OrientedPoint#wholeSpace()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$SubOrientedPoint#SubOrientedPoint(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": 32.38709677419355,
        "org.apache.commons.math3.geometry.euclidean.oned$SubOrientedPoint#buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": 29.09090909090909,
        "org.apache.commons.math3.geometry.euclidean.oned$SubOrientedPoint#getSize()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$SubOrientedPoint#side(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 28.12121212121212,
        "org.apache.commons.math3.geometry.euclidean.oned$SubOrientedPoint#split(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 24.242424242424242,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#<clinit>()": 37.225806451612904,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#Vector1D(double)": 37.225806451612904,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#Vector1D(double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#add(double,org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#add(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distance(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distance(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distance1(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distanceInf(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distanceInf(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distanceSq(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#distanceSq(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#dotProduct(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#equals(java.lang.Object)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getNorm()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getNorm1()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getNormInf()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getNormSq()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getSpace()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getX()": 37.225806451612904,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#getZero()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#hashCode()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#isInfinite()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#isNaN()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#negate()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#normalize()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#scalarMultiply(double)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#subtract(double,org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#subtract(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#toString()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.oned$Vector1D#toString(java.text.NumberFormat)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#Line(org.apache.commons.math3.geometry.euclidean.threed.Line)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#Line(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": -4.84375,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#closestPoint(org.apache.commons.math3.geometry.euclidean.threed.Line)": -23.25,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#contains(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": -20.34375,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#distance(org.apache.commons.math3.geometry.euclidean.threed.Line)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": -18.40625,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#getAbscissa(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": -24.21875,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#getDirection()": 9.696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#getOrigin()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#intersection(org.apache.commons.math3.geometry.euclidean.threed.Line)": -24.21875,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#isSimilarTo(org.apache.commons.math3.geometry.euclidean.threed.Line)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#pointAt(double)": 11.636363636363637,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": -4.84375,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#revert()": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#toSpace(org.apache.commons.math3.geometry.Vector)": 11.636363636363637,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#toSubSpace(org.apache.commons.math3.geometry.Vector)": -24.21875,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#wholeLine()": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$SubLine#SubLine(org.apache.commons.math3.geometry.euclidean.threed.Line,org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet)": -19.375,
        "org.apache.commons.math3.geometry.euclidean.threed$SubLine#SubLine(org.apache.commons.math3.geometry.euclidean.threed.Segment)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$SubLine#SubLine(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": -25.1875,
        "org.apache.commons.math3.geometry.euclidean.threed$SubLine#buildIntervalSet(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": -24.21875,
        "org.apache.commons.math3.geometry.euclidean.threed$SubLine#getSegments()": 5.818181818181818,
        "org.apache.commons.math3.geometry.euclidean.threed$SubLine#intersection(org.apache.commons.math3.geometry.euclidean.threed.SubLine,boolean)": -25.1875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#<clinit>()": 125.9375,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,double)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,double,double)": 125.9375,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 4.84375,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 7.757575757575758,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double[])": 4.848484848484849,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#add(double,org.apache.commons.math3.geometry.Vector)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#add(org.apache.commons.math3.geometry.Vector)": 16.484848484848484,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#angle(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 4.848484848484849,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#crossProduct(org.apache.commons.math3.geometry.Vector)": 30.060606060606062,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 26.181818181818183,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance(org.apache.commons.math3.geometry.Vector)": 14.545454545454545,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 1.9393939393939394,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance1(org.apache.commons.math3.geometry.Vector)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceInf(org.apache.commons.math3.geometry.Vector)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceSq(org.apache.commons.math3.geometry.Vector)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#dotProduct(org.apache.commons.math3.geometry.Vector)": 15.5,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#dotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 6.787878787878788,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#equals(java.lang.Object)": 26.181818181818183,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getAlpha()": 2.909090909090909,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getDelta()": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNorm()": 26.15625,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNorm1()": 1.9393939393939394,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNormInf()": 1.9393939393939394,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNormSq()": -3.875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getSpace()": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getX()": 81.45454545454545,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getY()": 81.45454545454545,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getZ()": 82.42424242424242,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getZero()": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#hashCode()": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#isInfinite()": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#isNaN()": 29.09090909090909,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#negate()": 3.878787878787879,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#normalize()": 4.848484848484849,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#orthogonal()": 20.363636363636363,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#scalarMultiply(double)": 8.727272727272727,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#subtract(double,org.apache.commons.math3.geometry.Vector)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#subtract(org.apache.commons.math3.geometry.Vector)": 13.5625,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#toArray()": 1.9393939393939394,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#toString()": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#toString(java.text.NumberFormat)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#Line(double,double,double,double)": 9.696969696969697,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#Line(org.apache.commons.math3.geometry.euclidean.twod.Line)": 25.21212121212121,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#Line(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double)": 1.9393939393939394,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#Line(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 14.53125,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#contains(org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#copySelf()": 25.21212121212121,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#distance(org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getAngle()": 26.181818181818183,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getOffset(org.apache.commons.math3.geometry.Vector)": 19.393939393939394,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getOffset(org.apache.commons.math3.geometry.euclidean.twod.Line)": 22.303030303030305,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getOriginOffset()": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getPointAt(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,double)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getReverse()": 7.757575757575758,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#getTransform(java.awt.geom.AffineTransform)": 1.9393939393939394,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#intersection(org.apache.commons.math3.geometry.euclidean.twod.Line)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#isParallelTo(org.apache.commons.math3.geometry.euclidean.twod.Line)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double)": 1.9393939393939394,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 14.53125,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#revertSelf()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 6.787878787878788,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#setAngle(double)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#setOriginOffset(double)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#toSpace(org.apache.commons.math3.geometry.Vector)": 26.181818181818183,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#toSubSpace(org.apache.commons.math3.geometry.Vector)": 2.90625,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#translateToPoint(org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#wholeHyperplane()": 26.181818181818183,
        "org.apache.commons.math3.geometry.euclidean.twod$Line#wholeSpace()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Line$LineTransform#Line$LineTransform(java.awt.geom.AffineTransform)": 1.9393939393939394,
        "org.apache.commons.math3.geometry.euclidean.twod$Line$LineTransform#apply(org.apache.commons.math3.geometry.Vector)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.twod$Line$LineTransform#apply(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 1.9393939393939394,
        "org.apache.commons.math3.geometry.euclidean.twod$Line$LineTransform#apply(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Hyperplane)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#SubLine(org.apache.commons.math3.geometry.euclidean.twod.Segment)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#SubLine(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": -24.21875,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#SubLine(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": 30.060606060606062,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#buildIntervalSet(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": -23.25,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": 23.272727272727273,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#getSegments()": 5.818181818181818,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#intersection(org.apache.commons.math3.geometry.euclidean.twod.SubLine,boolean)": -25.1875,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#side(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 23.272727272727273,
        "org.apache.commons.math3.geometry.euclidean.twod$SubLine#split(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 25.21212121212121,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#<clinit>()": 36.8125,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double,double)": 36.8125,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#Vector2D(double[])": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#add(double,org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#add(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distance(org.apache.commons.math3.geometry.Vector)": 45.57575757575758,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distance(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distance1(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distanceInf(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distanceInf(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distanceSq(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#distanceSq(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#dotProduct(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#equals(java.lang.Object)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getNorm()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getNorm1()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getNormInf()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getNormSq()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getSpace()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getX()": 36.8125,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getY()": 36.8125,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#getZero()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#hashCode()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#isInfinite()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#isNaN()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#negate()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#normalize()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#scalarMultiply(double)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#subtract(double,org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#subtract(org.apache.commons.math3.geometry.Vector)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#toArray()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#toString()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.twod$Vector2D#toString(java.text.NumberFormat)": 0.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#AbstractRegion()": 29.09090909090909,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#AbstractRegion(java.util.Collection)": 14.545454545454545,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#AbstractRegion(org.apache.commons.math3.geometry.partitioning.BSPTree)": 34.32258064516129,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#AbstractRegion(org.apache.commons.math3.geometry.partitioning.Hyperplane[])": 0.0,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#applyTransform(org.apache.commons.math3.geometry.partitioning.Transform)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#checkPoint(org.apache.commons.math3.geometry.Vector)": 28.12121212121212,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.Vector)": 48.484848484848484,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#contains(org.apache.commons.math3.geometry.partitioning.Region)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#copySelf()": 6.787878787878788,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#getBarycenter()": 8.727272727272727,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#getBoundarySize()": 5.818181818181818,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#getSize()": 24.242424242424242,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#getTree(boolean)": 40.72727272727273,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection)": 14.545454545454545,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#intersection(org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#isEmpty()": 25.21212121212121,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#isEmpty(org.apache.commons.math3.geometry.partitioning.BSPTree)": 25.21212121212121,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#recurseIntersection(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides)": 23.272727272727273,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#recurseTransform(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.Transform)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#setBarycenter(org.apache.commons.math3.geometry.Vector)": 24.242424242424242,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#setSize(double)": 24.242424242424242,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion#side(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 23.272727272727273,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$1#compare(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 14.545454545454545,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$2#visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": 14.545454545454545,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$2#visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": 14.545454545454545,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$2#visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)": 14.545454545454545,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$3#<clinit>()": 23.272727272727273,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$BoundaryBuilder#AbstractRegion$BoundaryBuilder()": 20.363636363636363,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$BoundaryBuilder#characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[])": 20.363636363636363,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$BoundaryBuilder#visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": 20.363636363636363,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$BoundaryBuilder#visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)": 20.363636363636363,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$BoundaryBuilder#visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)": 20.363636363636363,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$Sides#AbstractRegion$Sides()": 23.272727272727273,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$Sides#minusFound()": 23.272727272727273,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$Sides#plusFound()": 23.272727272727273,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$Sides#rememberMinusFound()": 23.272727272727273,
        "org.apache.commons.math3.geometry.partitioning$AbstractRegion$Sides#rememberPlusFound()": 23.272727272727273,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#AbstractSubHyperplane(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)": 34.32258064516129,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#applyTransform(org.apache.commons.math3.geometry.partitioning.Transform)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#copySelf()": 29.09090909090909,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#getHyperplane()": 19.375,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#getRemainingRegion()": 5.8125,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#getSize()": 19.393939393939394,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#isEmpty()": 25.21212121212121,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#recurseTransform(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Transform)": 0.9696969696969697,
        "org.apache.commons.math3.geometry.partitioning$AbstractSubHyperplane#reunite(org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 21.333333333333332,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#BSPTree()": 22.303030303030305,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#BSPTree(java.lang.Object)": 36.25806451612903,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#BSPTree(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,java.lang.Object)": 32.38709677419355,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#chopOffMinus(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 24.242424242424242,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#chopOffPlus(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 21.333333333333332,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#condense()": 28.12121212121212,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#copySelf()": 28.12121212121212,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#fitToCell(org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 28.12121212121212,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getAttribute()": 52.36363636363637,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getCell(org.apache.commons.math3.geometry.Vector)": 48.484848484848484,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getCut()": 52.36363636363637,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getMinus()": 42.666666666666664,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getParent()": 15.515151515151516,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#getPlus()": 42.666666666666664,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#insertCut(org.apache.commons.math3.geometry.partitioning.Hyperplane)": 22.303030303030305,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#insertInTree(org.apache.commons.math3.geometry.partitioning.BSPTree,boolean)": 26.181818181818183,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger)": 26.181818181818183,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean)": 26.181818181818183,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#setAttribute(java.lang.Object)": 28.12121212121212,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#split(org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 28.12121212121212,
        "org.apache.commons.math3.geometry.partitioning$BSPTree#visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)": 26.181818181818183,
        "org.apache.commons.math3.geometry.partitioning$BSPTree$1#<clinit>()": 28.12121212121212,
        "org.apache.commons.math3.geometry.partitioning$BSPTreeVisitor$Order#<clinit>()": 28.12121212121212,
        "org.apache.commons.math3.geometry.partitioning$BSPTreeVisitor$Order#BSPTreeVisitor$Order(java.lang.String,int)": 28.12121212121212,
        "org.apache.commons.math3.geometry.partitioning$Region$Location#<clinit>()": 51.39393939393939,
        "org.apache.commons.math3.geometry.partitioning$Region$Location#Region$Location(java.lang.String,int)": 51.39393939393939,
        "org.apache.commons.math3.geometry.partitioning$SubHyperplane$SplitSubHyperplane#SubHyperplane$SplitSubHyperplane(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane)": 28.12121212121212,
        "org.apache.commons.math3.geometry.partitioning$SubHyperplane$SplitSubHyperplane#getMinus()": 28.12121212121212,
        "org.apache.commons.math3.geometry.partitioning$SubHyperplane$SplitSubHyperplane#getPlus()": 28.12121212121212,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 3405.935483870968,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 8.727272727272727,
        "org.apache.commons.math3.util$FastMath#abs(double)": 2003.375,
        "org.apache.commons.math3.util$FastMath#abs(float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#abs(int)": 320.969696969697,
        "org.apache.commons.math3.util$FastMath#abs(long)": 924.1212121212121,
        "org.apache.commons.math3.util$FastMath#acos(double)": 34.90909090909091,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 4.848484848484849,
        "org.apache.commons.math3.util$FastMath#asin(double)": 35.878787878787875,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 4.848484848484849,
        "org.apache.commons.math3.util$FastMath#atan(double)": 36.84848484848485,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 127.03030303030303,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 60.0625,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 4.848484848484849,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 44.60606060606061,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 291.8787878787879,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 23.272727272727273,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#cos(double)": 279.0,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 357.46875,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 32.96969696969697,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 89.21212121212122,
        "org.apache.commons.math3.util$FastMath#exp(double)": 768.969696969697,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 1019.1515151515151,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 17.454545454545453,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 38.78787878787879,
        "org.apache.commons.math3.util$FastMath#floor(double)": 759.2727272727273,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 46.5,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 41.65625,
        "org.apache.commons.math3.util$FastMath#log(double)": 860.1212121212121,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1106.4242424242425,
        "org.apache.commons.math3.util$FastMath#log10(double)": 54.303030303030305,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 497.45454545454544,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 897.939393939394,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 673.939393939394,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 11.636363636363637,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 472.24242424242425,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 909.5757575757576,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 44.60606060606061,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 14.545454545454545,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.909090909090909,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 2.909090909090909,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 400.09375,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 400.09375,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 663.2727272727273,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 224.96969696969697,
        "org.apache.commons.math3.util$FastMath#random()": 18.424242424242426,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.848484848484849,
        "org.apache.commons.math3.util$FastMath#rint(double)": 70.78787878787878,
        "org.apache.commons.math3.util$FastMath#round(double)": 23.272727272727273,
        "org.apache.commons.math3.util$FastMath#round(float)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 63.03030303030303,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#signum(double)": 13.575757575757576,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9393939393939394,
        "org.apache.commons.math3.util$FastMath#sin(double)": 372.0,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 378.78125,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 32.96969696969697,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1844.5,
        "org.apache.commons.math3.util$FastMath#tan(double)": 29.09090909090909,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 29.09090909090909,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 14.545454545454545,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3.878787878787879,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3.878787878787879,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 281.2121212121212,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 0.9696969696969697,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double)": 329.6969696969697,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 329.6969696969697,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 329.6969696969697,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 329.6969696969697,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 1003.6363636363636,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 998.7878787878788,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1087.030303030303,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 0.0,
        "org.apache.commons.math3.util$MathArrays#buildArray(org.apache.commons.math3.Field,int)": 128.96969696969697,
        "org.apache.commons.math3.util$MathArrays#buildArray(org.apache.commons.math3.Field,int,int)": 127.03030303030303,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[])": 393.6969696969697,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[][])": 4.848484848484849,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 44.60606060606061,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 45.57575757575758,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 139.63636363636363,
        "org.apache.commons.math3.util$MathArrays#checkPositive(double[])": 384.969696969697,
        "org.apache.commons.math3.util$MathArrays#checkRectangular(long[][])": 4.848484848484849,
        "org.apache.commons.math3.util$MathArrays#convolve(double[],double[])": 0.9696969696969697,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 61.09090909090909,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 88.24242424242425,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 5.818181818181818,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": 39.75757575757576,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 11.636363636363637,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 6.787878787878788,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 2.909090909090909,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 0.9696969696969697,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 2.909090909090909,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 0.9696969696969697,
        "org.apache.commons.math3.util$MathArrays#ebeAdd(double[],double[])": 1.9393939393939394,
        "org.apache.commons.math3.util$MathArrays#ebeDivide(double[],double[])": 8.727272727272727,
        "org.apache.commons.math3.util$MathArrays#ebeMultiply(double[],double[])": 1.9393939393939394,
        "org.apache.commons.math3.util$MathArrays#ebeSubtract(double[],double[])": 3.878787878787879,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 2.909090909090909,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 4.848484848484849,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.9696969696969697,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.9696969696969697,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 39.71875,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 41.65625,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 11.636363636363637,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": 10.666666666666666,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": 24.242424242424242,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#scale(double,double[])": 0.9696969696969697,
        "org.apache.commons.math3.util$MathArrays#scaleInPlace(double,double[])": 6.787878787878788,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 8.727272727272727,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 8.727272727272727,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 7.757575757575758,
        "org.apache.commons.math3.util$MathArrays$2#<clinit>()": 139.63636363636363,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 144.4848484848485,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 144.4848484848485,
        "org.apache.commons.math3.util$Precision#<clinit>()": 1266.15625,
        "org.apache.commons.math3.util$Precision#Precision()": 0.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 93.0909090909091,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 49.45454545454545,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 175.5151515151515,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 489.6969696969697,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 865.939393939394,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 0.9696969696969697,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 77.57575757575758,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 130.9090909090909,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 50.42424242424242,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 0.9696969696969697,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 76.60606060606061,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsWithRelativeTolerance(double,double,double)": 0.9696969696969697,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 0.9696969696969697,
        "org.apache.commons.math3.util$Precision#round(double,int)": 0.9696969696969697,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 0.9696969696969697,
        "org.apache.commons.math3.util$Precision#round(float,int)": 0.9696969696969697,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 0.9696969696969697,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 0.9696969696969697
    },
    "Math-40": {},
    "Math-41": {},
    "Math-42": {},
    "Math-43": {},
    "Math-44": {},
    "Math-45": {},
    "Math-46": {},
    "Math-47": {},
    "Math-48": {},
    "Math-49": {},
    "Math-5": {
        "org.apache.commons.math3.complex$Complex#<clinit>()": 175.1290322580645,
        "org.apache.commons.math3.complex$Complex#Complex(double)": 15.5,
        "org.apache.commons.math3.complex$Complex#Complex(double,double)": 175.1290322580645,
        "org.apache.commons.math3.complex$Complex#abs()": 33.90625,
        "org.apache.commons.math3.complex$Complex#acos()": 2.90625,
        "org.apache.commons.math3.complex$Complex#add(double)": 2.90625,
        "org.apache.commons.math3.complex$Complex#add(org.apache.commons.math3.complex.Complex)": 16.46875,
        "org.apache.commons.math3.complex$Complex#asin()": 2.90625,
        "org.apache.commons.math3.complex$Complex#atan()": 3.875,
        "org.apache.commons.math3.complex$Complex#conjugate()": 2.90625,
        "org.apache.commons.math3.complex$Complex#cos()": 2.90625,
        "org.apache.commons.math3.complex$Complex#cosh()": 2.90625,
        "org.apache.commons.math3.complex$Complex#createComplex(double,double)": 76.53125,
        "org.apache.commons.math3.complex$Complex#divide(double)": 3.875,
        "org.apache.commons.math3.complex$Complex#divide(org.apache.commons.math3.complex.Complex)": 19.375,
        "org.apache.commons.math3.complex$Complex#equals(java.lang.Object)": 29.0,
        "org.apache.commons.math3.complex$Complex#exp()": 13.5625,
        "org.apache.commons.math3.complex$Complex#getArgument()": 6.78125,
        "org.apache.commons.math3.complex$Complex#getField()": 0.0,
        "org.apache.commons.math3.complex$Complex#getImaginary()": 130.78125,
        "org.apache.commons.math3.complex$Complex#getReal()": 130.78125,
        "org.apache.commons.math3.complex$Complex#hashCode()": 0.96875,
        "org.apache.commons.math3.complex$Complex#isInfinite()": 46.5,
        "org.apache.commons.math3.complex$Complex#isNaN()": 21.3125,
        "org.apache.commons.math3.complex$Complex#log()": 20.34375,
        "org.apache.commons.math3.complex$Complex#multiply(double)": 7.75,
        "org.apache.commons.math3.complex$Complex#multiply(int)": 1.9375,
        "org.apache.commons.math3.complex$Complex#multiply(org.apache.commons.math3.complex.Complex)": 30.03125,
        "org.apache.commons.math3.complex$Complex#negate()": 7.75,
        "org.apache.commons.math3.complex$Complex#nthRoot(int)": 4.84375,
        "org.apache.commons.math3.complex$Complex#pow(double)": 4.84375,
        "org.apache.commons.math3.complex$Complex#pow(org.apache.commons.math3.complex.Complex)": 8.71875,
        "org.apache.commons.math3.complex$Complex#readResolve()": 0.96875,
        "org.apache.commons.math3.complex$Complex#reciprocal()": -26.161290322580644,
        "org.apache.commons.math3.complex$Complex#sin()": 2.90625,
        "org.apache.commons.math3.complex$Complex#sinh()": 2.90625,
        "org.apache.commons.math3.complex$Complex#sqrt()": 16.46875,
        "org.apache.commons.math3.complex$Complex#sqrt1z()": 5.8125,
        "org.apache.commons.math3.complex$Complex#subtract(double)": 2.90625,
        "org.apache.commons.math3.complex$Complex#subtract(org.apache.commons.math3.complex.Complex)": 18.40625,
        "org.apache.commons.math3.complex$Complex#tan()": 3.875,
        "org.apache.commons.math3.complex$Complex#tanh()": 3.875,
        "org.apache.commons.math3.complex$Complex#toString()": -31.0,
        "org.apache.commons.math3.complex$Complex#valueOf(double)": 0.0,
        "org.apache.commons.math3.complex$Complex#valueOf(double,double)": 1.9375,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 846.6875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 8.71875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 1.9375,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 690.71875,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 13.5625,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 19.375,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 11.625,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 46.5,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 72.65625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 100.75,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 234.4375,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.90625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.90625
    },
    "Math-50": {},
    "Math-6": {
        "org.apache.commons.math3.analysis.function$Sinc#Sinc()": -7.413793103448278,
        "org.apache.commons.math3.analysis.function$Sinc#Sinc(boolean)": -3.482758620689655,
        "org.apache.commons.math3.analysis.function$Sinc#derivative()": 0.0,
        "org.apache.commons.math3.analysis.function$Sinc#value(double)": -16.258620689655174,
        "org.apache.commons.math3.analysis.function$Sinc#value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)": 3.9322033898305087,
        "org.apache.commons.math3.analysis.solvers$AbstractUnivariateSolver#AbstractUnivariateSolver(double)": 174.39655172413794,
        "org.apache.commons.math3.analysis.solvers$AbstractUnivariateSolver#AbstractUnivariateSolver(double,double)": 10.813559322033898,
        "org.apache.commons.math3.analysis.solvers$AbstractUnivariateSolver#AbstractUnivariateSolver(double,double,double)": 8.847457627118644,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#BaseAbstractUnivariateSolver(double)": 184.22413793103448,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#BaseAbstractUnivariateSolver(double,double)": 10.813559322033898,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#BaseAbstractUnivariateSolver(double,double,double)": 196.01724137931035,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#computeObjectiveValue(double)": 184.22413793103448,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getAbsoluteAccuracy()": 171.44827586206895,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getEvaluations()": 15.189655172413794,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getFunctionValueAccuracy()": 170.4655172413793,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getMax()": 183.24137931034483,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getMaxEvaluations()": 0.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getMin()": 183.24137931034483,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getRelativeAccuracy()": 163.58620689655172,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getStartValue()": 141.9655172413793,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#incrementEvaluationCount()": 187.17241379310346,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#isBracketing(double,double)": 2.9491525423728815,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#isSequence(double,double,double)": 5.898305084745763,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#setup(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 188.1551724137931,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double)": 4.915254237288136,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 172.03389830508473,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 187.17241379310346,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#verifyBracketing(double,double)": 39.32203389830509,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#verifyInterval(double,double)": 6.88135593220339,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#verifySequence(double,double,double)": 138.0344827586207,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#BrentSolver()": -0.5344827586206904,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#BrentSolver(double)": 96.75862068965517,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#BrentSolver(double,double)": 3.9322033898305087,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#BrentSolver(double,double,double)": 0.0,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#brent(double,double,double,double)": 92.82758620689656,
        "org.apache.commons.math3.analysis.solvers$BrentSolver#doSolve()": 99.70689655172413,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#UnivariateSolverUtils()": 0.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 4.915254237288136,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,int)": 5.898305084745763,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#forceSide(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver,double,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution)": 4.915254237288136,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#isBracketing(org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 39.32203389830509,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#isSequence(double,double,double)": 5.898305084745763,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#midpoint(double,double)": 7.864406779661017,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#solve(org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 3.9322033898305087,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#solve(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 97.32203389830508,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#verifyBracketing(org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 39.32203389830509,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#verifyInterval(double,double)": 217.63793103448276,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#verifySequence(double,double,double)": 141.9655172413793,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException()": 0.9830508474576272,
        "org.apache.commons.math3.exception$ConvergenceException#ConvergenceException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 17.694915254237287,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 172.03389830508473,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 192.67796610169492,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 2.9491525423728815,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.813559322033898,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 53.08474576271186,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.9830508474576272,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 853.2881355932203,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 8.847457627118644,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 1.9661016949152543,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 695.0169491525423,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 13.76271186440678,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 63.898305084745765,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 90.44067796610169,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 59.96610169491525,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.9830508474576272,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int)": 0.0,
        "org.apache.commons.math3.exception$MathParseException#MathParseException(java.lang.String,int,java.lang.Class)": 12.779661016949152,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException()": 17.694915254237287,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#MathUnsupportedOperationException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 23.593220338983052,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathUnsupportedOperationException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 29.491525423728813,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 29.491525423728813,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 12.779661016949152,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(java.lang.Integer[],java.lang.Integer[])": 0.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#MultiDimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,java.lang.Integer[],java.lang.Integer[])": 38.33898305084746,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimension(int)": 0.9830508474576272,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getExpectedDimensions()": 0.0,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimension(int)": 0.9830508474576272,
        "org.apache.commons.math3.exception$MultiDimensionMismatchException#getWrongDimensions()": 0.0,
        "org.apache.commons.math3.exception$NoBracketingException#NoBracketingException(double,double,double,double)": 10.813559322033898,
        "org.apache.commons.math3.exception$NoBracketingException#NoBracketingException(org.apache.commons.math3.exception.util.Localizable,double,double,double,double,java.lang.Object[])": 10.813559322033898,
        "org.apache.commons.math3.exception$NoBracketingException#getFHi()": 0.0,
        "org.apache.commons.math3.exception$NoBracketingException#getFLo()": 0.0,
        "org.apache.commons.math3.exception$NoBracketingException#getHi()": 0.0,
        "org.apache.commons.math3.exception$NoBracketingException#getLo()": 0.0,
        "org.apache.commons.math3.exception$NoDataException#NoDataException()": 10.813559322033898,
        "org.apache.commons.math3.exception$NoDataException#NoDataException(org.apache.commons.math3.exception.util.Localizable)": 28.508474576271187,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 0.9830508474576272,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 15.728813559322035,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 0.9830508474576272,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 0.9830508474576272,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 0.9830508474576272,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 0.9830508474576272,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 8.847457627118644,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 19.661016949152543,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 19.661016949152543,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 11.796610169491526,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 48.16949152542373,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 79.62711864406779,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 47.186440677966104,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 73.72881355932203,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 36.3728813559322,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 144.5084745762712,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 0.9830508474576272,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 0.9830508474576272,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 99.28813559322033,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 233.96610169491527,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.9491525423728815,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.9491525423728815,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 41.28813559322034,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 192.67796610169492,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 0.9830508474576272,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 0.9830508474576272,
        "org.apache.commons.math3.exception$TooManyEvaluationsException#TooManyEvaluationsException(java.lang.Number)": 22.610169491525422,
        "org.apache.commons.math3.exception$ZeroException#ZeroException()": 1.9661016949152543,
        "org.apache.commons.math3.exception$ZeroException#ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 11.796610169491526,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix()": 1.9661016949152543,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field)": 70.77966101694915,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#AbstractFieldMatrix(org.apache.commons.math3.Field,int,int)": 101.2542372881356,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 3.9322033898305087,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#buildArray(org.apache.commons.math3.Field,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkAdditionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 9.830508474576272,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkColumnIndex(int)": 123.86440677966101,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkMultiplicationCompatible(org.apache.commons.math3.linear.FieldMatrix)": 17.694915254237287,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkRowIndex(int)": 123.86440677966101,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int,int,int,int)": 9.830508474576272,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubMatrixIndex(int[],int[])": 4.915254237288136,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#checkSubtractionCompatible(org.apache.commons.math3.linear.FieldMatrix)": 3.9322033898305087,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int,int,int,int,org.apache.commons.math3.FieldElement[][])": 1.9661016949152543,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#copySubMatrix(int[],int[],org.apache.commons.math3.FieldElement[][])": 1.9661016949152543,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#equals(java.lang.Object)": 31.45762711864407,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#extractField(org.apache.commons.math3.FieldElement[][])": 89.45762711864407,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumn(int)": 9.830508474576272,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnMatrix(int)": 2.9491525423728815,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getColumnVector(int)": 5.898305084745763,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getData()": 1.9661016949152543,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getField()": 128.77966101694915,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRow(int)": 6.88135593220339,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowMatrix(int)": 3.9322033898305087,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getRowVector(int)": 2.9491525423728815,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int,int,int,int)": 1.9661016949152543,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getSubMatrix(int[],int[])": 2.9491525423728815,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#getTrace()": 2.9491525423728815,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#hashCode()": 2.9491525423728815,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#isSquare()": 37.355932203389834,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 9.830508474576272,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 1.9661016949152543,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#operate(org.apache.commons.math3.linear.FieldVector)": 2.9491525423728815,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#power(int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldMatrix)": 2.9491525423728815,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#preMultiply(org.apache.commons.math3.linear.FieldVector)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 1.9661016949152543,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 1.9661016949152543,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 1.9661016949152543,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#toString()": 1.9661016949152543,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#transpose()": 5.898305084745763,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 2.9491525423728815,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 22.610169491525422,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9661016949152543,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 1.9661016949152543,
        "org.apache.commons.math3.linear$AbstractFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$1#visit(int,int,org.apache.commons.math3.FieldElement)": 2.9491525423728815,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#start(int,int,int,int,int,int)": 1.9661016949152543,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$2#visit(int,int,org.apache.commons.math3.FieldElement)": 1.9661016949152543,
        "org.apache.commons.math3.linear$AbstractFieldMatrix$3#visit(int,int,org.apache.commons.math3.FieldElement)": 5.898305084745763,
        "org.apache.commons.math3.linear$AbstractRealMatrix#<clinit>()": 751.0960526315789,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix()": 552.4552845528456,
        "org.apache.commons.math3.linear$AbstractRealMatrix#AbstractRealMatrix(int,int)": 636.046052631579,
        "org.apache.commons.math3.linear$AbstractRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 17.636627906976745,
        "org.apache.commons.math3.linear$AbstractRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int,int,int,int,double[][])": 31.45762711864407,
        "org.apache.commons.math3.linear$AbstractRealMatrix#copySubMatrix(int[],int[],double[][])": 1.9661016949152543,
        "org.apache.commons.math3.linear$AbstractRealMatrix#equals(java.lang.Object)": 52.101694915254235,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumn(int)": 39.125,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnMatrix(int)": 17.636627906976745,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getColumnVector(int)": 18.677966101694917,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getData()": 1.9661016949152543,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getFrobeniusNorm()": 15.683139534883722,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getNorm()": 82.57627118644068,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRow(int)": 124.10174418604652,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowMatrix(int)": 3.9322033898305087,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getRowVector(int)": 53.08474576271186,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int,int,int,int)": 11.796610169491526,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getSubMatrix(int[],int[])": 2.9491525423728815,
        "org.apache.commons.math3.linear$AbstractRealMatrix#getTrace()": 2.9491525423728815,
        "org.apache.commons.math3.linear$AbstractRealMatrix#hashCode()": 6.88135593220339,
        "org.apache.commons.math3.linear$AbstractRealMatrix#isSquare()": 177.82267441860466,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 133.86918604651163,
        "org.apache.commons.math3.linear$AbstractRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(double[])": 1.9661016949152543,
        "org.apache.commons.math3.linear$AbstractRealMatrix#operate(org.apache.commons.math3.linear.RealVector)": 200.140350877193,
        "org.apache.commons.math3.linear$AbstractRealMatrix#power(int)": 1.9661016949152543,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(double[])": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealMatrix)": 2.9491525423728815,
        "org.apache.commons.math3.linear$AbstractRealMatrix#preMultiply(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarAdd(double)": 15.683139534883722,
        "org.apache.commons.math3.linear$AbstractRealMatrix#scalarMultiply(double)": 137.80672268907566,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumn(int,double[])": 10.813559322033898,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9661016949152543,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 24.363636363636363,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRow(int,double[])": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 55.05084745762712,
        "org.apache.commons.math3.linear$AbstractRealMatrix#setSubMatrix(double[][],int,int)": 6.88135593220339,
        "org.apache.commons.math3.linear$AbstractRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 86.98546511627907,
        "org.apache.commons.math3.linear$AbstractRealMatrix#toString()": 6.88135593220339,
        "org.apache.commons.math3.linear$AbstractRealMatrix#transpose()": 184.65988372093022,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 7.864406779661017,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 5.898305084745763,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 186.61337209302326,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 28.508474576271187,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.9830508474576272,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 1.9661016949152543,
        "org.apache.commons.math3.linear$AbstractRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.0,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#end()": 82.57627118644068,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#start(int,int,int,int,int,int)": 82.57627118644068,
        "org.apache.commons.math3.linear$AbstractRealMatrix$1#visit(int,int,double)": 82.57627118644068,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#end()": 15.683139534883722,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#start(int,int,int,int,int,int)": 15.683139534883722,
        "org.apache.commons.math3.linear$AbstractRealMatrix$2#visit(int,int,double)": 15.683139534883722,
        "org.apache.commons.math3.linear$AbstractRealMatrix$3#visit(int,int,double)": 2.9491525423728815,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#start(int,int,int,int,int,int)": 31.45762711864407,
        "org.apache.commons.math3.linear$AbstractRealMatrix$4#visit(int,int,double)": 31.45762711864407,
        "org.apache.commons.math3.linear$AbstractRealMatrix$5#visit(int,int,double)": 184.65988372093022,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field)": 1.9661016949152543,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,int,int)": 34.40677966101695,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][])": 48.16949152542373,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.Field,org.apache.commons.math3.FieldElement[][],boolean)": 30.47457627118644,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][])": 38.33898305084746,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#Array2DRowFieldMatrix(org.apache.commons.math3.FieldElement[][],boolean)": 17.694915254237287,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#add(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 1.9661016949152543,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copy()": 1.9661016949152543,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyIn(org.apache.commons.math3.FieldElement[][])": 48.16949152542373,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#copyOut()": 32.440677966101696,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#createMatrix(int,int)": 17.694915254237287,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getColumnDimension()": 77.66101694915254,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getData()": 30.47457627118644,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getDataRef()": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getEntry(int,int)": 64.88135593220339,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#getRowDimension()": 77.66101694915254,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 0.9830508474576272,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 1.9661016949152543,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 0.9830508474576272,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 37.355932203389834,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 48.16949152542373,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix)": 0.9830508474576272,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.9830508474576272,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.9830508474576272,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 1.9661016949152543,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 21.627118644067796,
        "org.apache.commons.math3.linear$Array2DRowFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9661016949152543,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix()": 3.9322033898305087,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[])": 3.9322033898305087,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][])": 476.54481792717087,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(double[][],boolean)": 284.1626016260162,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#Array2DRowRealMatrix(int,int)": 459.9495798319328,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#add(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 1.9661016949152543,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copy()": 13.76271186440678,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyIn(double[][])": 478.49719887955183,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#copyOut()": 338.98546511627904,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#createMatrix(int,int)": 328.1638655462185,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getColumnDimension()": 590.5040650406504,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getData()": 331.17151162790697,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getDataRef()": 72.7457627118644,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getEntry(int,int)": 505.6260162601626,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#getRowDimension()": 589.5284552845529,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 10.813559322033898,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#multiplyEntry(int,int,double)": 9.830508474576272,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#operate(double[])": 60.94915254237288,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#preMultiply(double[])": 4.915254237288136,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setEntry(int,int,double)": 450.18767507002804,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#setSubMatrix(double[][],int,int)": 478.49719887955183,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix)": 0.9830508474576272,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.9830508474576272,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 77.66101694915254,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 4.915254237288136,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 185.63662790697674,
        "org.apache.commons.math3.linear$Array2DRowRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 28.508474576271187,
        "org.apache.commons.math3.linear$ArrayRealVector#<clinit>()": 613.2114845938376,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector()": 2.9491525423728815,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[])": 415.04481792717087,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],boolean)": 466.3859649122807,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],double[])": 0.9830508474576272,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(double[],org.apache.commons.math3.linear.ArrayRealVector)": 0.9830508474576272,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int)": 174.98305084745763,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(int,double)": 2.9491525423728815,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[])": 0.9830508474576272,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(java.lang.Double[],int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector)": 0.9830508474576272,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean)": 127.79661016949153,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,double[])": 0.9830508474576272,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.ArrayRealVector)": 2.9491525423728815,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,org.apache.commons.math3.linear.RealVector)": 1.9661016949152543,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector)": 0.9830508474576272,
        "org.apache.commons.math3.linear$ArrayRealVector#ArrayRealVector(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.ArrayRealVector)": 0.9830508474576272,
        "org.apache.commons.math3.linear$ArrayRealVector#add(org.apache.commons.math3.linear.RealVector)": 8.847457627118644,
        "org.apache.commons.math3.linear$ArrayRealVector#addToEntry(int,double)": 2.9491525423728815,
        "org.apache.commons.math3.linear$ArrayRealVector#append(double)": 1.9661016949152543,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.ArrayRealVector)": 0.0,
        "org.apache.commons.math3.linear$ArrayRealVector#append(org.apache.commons.math3.linear.RealVector)": 1.9661016949152543,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(int)": 331.7894736842105,
        "org.apache.commons.math3.linear$ArrayRealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 16.71186440677966,
        "org.apache.commons.math3.linear$ArrayRealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 16.71186440677966,
        "org.apache.commons.math3.linear$ArrayRealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 40.30508474576271,
        "org.apache.commons.math3.linear$ArrayRealVector#copy()": 126.8135593220339,
        "org.apache.commons.math3.linear$ArrayRealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 257.12280701754383,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeDivide(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$ArrayRealVector#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 25.559322033898304,
        "org.apache.commons.math3.linear$ArrayRealVector#equals(java.lang.Object)": 49.152542372881356,
        "org.apache.commons.math3.linear$ArrayRealVector#getDataRef()": 217.82456140350877,
        "org.apache.commons.math3.linear$ArrayRealVector#getDimension()": 366.3343023255814,
        "org.apache.commons.math3.linear$ArrayRealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 4.915254237288136,
        "org.apache.commons.math3.linear$ArrayRealVector#getEntry(int)": 303.82267441860466,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3.9322033898305087,
        "org.apache.commons.math3.linear$ArrayRealVector#getL1Norm()": 1.9661016949152543,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3.9322033898305087,
        "org.apache.commons.math3.linear$ArrayRealVector#getLInfNorm()": 1.9661016949152543,
        "org.apache.commons.math3.linear$ArrayRealVector#getNorm()": 56.03389830508475,
        "org.apache.commons.math3.linear$ArrayRealVector#getSubVector(int,int)": 6.88135593220339,
        "org.apache.commons.math3.linear$ArrayRealVector#hashCode()": 29.491525423728813,
        "org.apache.commons.math3.linear$ArrayRealVector#isInfinite()": 1.9661016949152543,
        "org.apache.commons.math3.linear$ArrayRealVector#isNaN()": 77.66101694915254,
        "org.apache.commons.math3.linear$ArrayRealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 2.9491525423728815,
        "org.apache.commons.math3.linear$ArrayRealVector#mapAddToSelf(double)": 2.9491525423728815,
        "org.apache.commons.math3.linear$ArrayRealVector#mapDivideToSelf(double)": 4.915254237288136,
        "org.apache.commons.math3.linear$ArrayRealVector#mapMultiplyToSelf(double)": 76.67796610169492,
        "org.apache.commons.math3.linear$ArrayRealVector#mapSubtractToSelf(double)": 2.9491525423728815,
        "org.apache.commons.math3.linear$ArrayRealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 3.9322033898305087,
        "org.apache.commons.math3.linear$ArrayRealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 2.9491525423728815,
        "org.apache.commons.math3.linear$ArrayRealVector#set(double)": 44.23728813559322,
        "org.apache.commons.math3.linear$ArrayRealVector#setEntry(int,double)": 85.52542372881356,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,double[])": 24.576271186440678,
        "org.apache.commons.math3.linear$ArrayRealVector#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 25.559322033898304,
        "org.apache.commons.math3.linear$ArrayRealVector#subtract(org.apache.commons.math3.linear.RealVector)": 102.23728813559322,
        "org.apache.commons.math3.linear$ArrayRealVector#toArray()": 149.82758620689654,
        "org.apache.commons.math3.linear$ArrayRealVector#toString()": 0.0,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 1.9661016949152543,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3.9322033898305087,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 1.9661016949152543,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3.9322033898305087,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 0.9830508474576272,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 1.9661016949152543,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 0.9830508474576272,
        "org.apache.commons.math3.linear$ArrayRealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(int,int,org.apache.commons.math3.FieldElement[][],boolean)": 34.40677966101695,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.Field,int,int)": 26.54237288135593,
        "org.apache.commons.math3.linear$BlockFieldMatrix#BlockFieldMatrix(org.apache.commons.math3.FieldElement[][])": 34.40677966101695,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.BlockFieldMatrix)": 3.9322033898305087,
        "org.apache.commons.math3.linear$BlockFieldMatrix#add(org.apache.commons.math3.linear.FieldMatrix)": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockFieldMatrix#addToEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockHeight(int)": 40.30508474576271,
        "org.apache.commons.math3.linear$BlockFieldMatrix#blockWidth(int)": 45.220338983050844,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copy()": 0.9830508474576272,
        "org.apache.commons.math3.linear$BlockFieldMatrix#copyBlockPart(org.apache.commons.math3.FieldElement[],int,int,int,int,int,org.apache.commons.math3.FieldElement[],int,int,int)": 2.9491525423728815,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createBlocksLayout(org.apache.commons.math3.Field,int,int)": 26.54237288135593,
        "org.apache.commons.math3.linear$BlockFieldMatrix#createMatrix(int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumn(int)": 4.915254237288136,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnDimension()": 40.30508474576271,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnMatrix(int)": 2.9491525423728815,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getColumnVector(int)": 2.9491525423728815,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getData()": 4.915254237288136,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getEntry(int,int)": 27.52542372881356,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRow(int)": 4.915254237288136,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowDimension()": 41.28813559322034,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowMatrix(int)": 3.9322033898305087,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getRowVector(int)": 2.9491525423728815,
        "org.apache.commons.math3.linear$BlockFieldMatrix#getSubMatrix(int,int,int,int)": 2.9491525423728815,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.BlockFieldMatrix)": 6.88135593220339,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiply(org.apache.commons.math3.linear.FieldMatrix)": 5.898305084745763,
        "org.apache.commons.math3.linear$BlockFieldMatrix#multiplyEntry(int,int,org.apache.commons.math3.FieldElement)": 0.0,
        "org.apache.commons.math3.linear$BlockFieldMatrix#operate(org.apache.commons.math3.FieldElement[])": 2.9491525423728815,
        "org.apache.commons.math3.linear$BlockFieldMatrix#preMultiply(org.apache.commons.math3.FieldElement[])": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarAdd(org.apache.commons.math3.FieldElement)": 3.9322033898305087,
        "org.apache.commons.math3.linear$BlockFieldMatrix#scalarMultiply(org.apache.commons.math3.FieldElement)": 0.9830508474576272,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumn(int,org.apache.commons.math3.FieldElement[])": 3.9322033898305087,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setColumnVector(int,org.apache.commons.math3.linear.FieldVector)": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setEntry(int,int,org.apache.commons.math3.FieldElement)": 4.915254237288136,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRow(int,org.apache.commons.math3.FieldElement[])": 3.9322033898305087,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowMatrix(int,org.apache.commons.math3.linear.FieldMatrix)": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setRowVector(int,org.apache.commons.math3.linear.FieldVector)": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockFieldMatrix#setSubMatrix(org.apache.commons.math3.FieldElement[][],int,int)": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.BlockFieldMatrix)": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockFieldMatrix#subtract(org.apache.commons.math3.linear.FieldMatrix)": 0.9830508474576272,
        "org.apache.commons.math3.linear$BlockFieldMatrix#toBlocksLayout(org.apache.commons.math3.FieldElement[][])": 34.40677966101695,
        "org.apache.commons.math3.linear$BlockFieldMatrix#transpose()": 2.9491525423728815,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.9830508474576272,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor)": 0.9830508474576272,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor,int,int,int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor)": 0.9830508474576272,
        "org.apache.commons.math3.linear$BlockFieldMatrix#walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor,int,int,int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(double[][])": 155.9298245614035,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int)": 46.63793103448276,
        "org.apache.commons.math3.linear$BlockRealMatrix#BlockRealMatrix(int,int,double[][],boolean)": 183.43859649122808,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.BlockRealMatrix)": 3.9322033898305087,
        "org.apache.commons.math3.linear$BlockRealMatrix#add(org.apache.commons.math3.linear.RealMatrix)": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockRealMatrix#addToEntry(int,int,double)": 0.9830508474576272,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockHeight(int)": 189.33333333333334,
        "org.apache.commons.math3.linear$BlockRealMatrix#blockWidth(int)": 197.19298245614036,
        "org.apache.commons.math3.linear$BlockRealMatrix#copy()": 4.915254237288136,
        "org.apache.commons.math3.linear$BlockRealMatrix#copyBlockPart(double[],int,int,int,int,int,double[],int,int,int)": 4.915254237288136,
        "org.apache.commons.math3.linear$BlockRealMatrix#createBlocksLayout(int,int)": 71.20689655172414,
        "org.apache.commons.math3.linear$BlockRealMatrix#createMatrix(int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumn(int)": 21.627118644067796,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnDimension()": 188.35087719298247,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnMatrix(int)": 2.9491525423728815,
        "org.apache.commons.math3.linear$BlockRealMatrix#getColumnVector(int)": 2.9491525423728815,
        "org.apache.commons.math3.linear$BlockRealMatrix#getData()": 78.08620689655173,
        "org.apache.commons.math3.linear$BlockRealMatrix#getEntry(int,int)": 83.55932203389831,
        "org.apache.commons.math3.linear$BlockRealMatrix#getFrobeniusNorm()": 0.9830508474576272,
        "org.apache.commons.math3.linear$BlockRealMatrix#getNorm()": 26.54237288135593,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRow(int)": 4.915254237288136,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowDimension()": 189.33333333333334,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowMatrix(int)": 3.9322033898305087,
        "org.apache.commons.math3.linear$BlockRealMatrix#getRowVector(int)": 2.9491525423728815,
        "org.apache.commons.math3.linear$BlockRealMatrix#getSubMatrix(int,int,int,int)": 4.915254237288136,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.BlockRealMatrix)": 16.71186440677966,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 16.71186440677966,
        "org.apache.commons.math3.linear$BlockRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$BlockRealMatrix#operate(double[])": 46.63793103448276,
        "org.apache.commons.math3.linear$BlockRealMatrix#preMultiply(double[])": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarAdd(double)": 3.9322033898305087,
        "org.apache.commons.math3.linear$BlockRealMatrix#scalarMultiply(double)": 0.9830508474576272,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumn(int,double[])": 7.864406779661017,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockRealMatrix#setColumnVector(int,org.apache.commons.math3.linear.RealVector)": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockRealMatrix#setEntry(int,int,double)": 29.491525423728813,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRow(int,double[])": 3.9322033898305087,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.BlockRealMatrix)": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowMatrix(int,org.apache.commons.math3.linear.RealMatrix)": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockRealMatrix#setRowVector(int,org.apache.commons.math3.linear.RealVector)": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockRealMatrix#setSubMatrix(double[][],int,int)": 1.9661016949152543,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.BlockRealMatrix)": 21.627118644067796,
        "org.apache.commons.math3.linear$BlockRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 25.559322033898304,
        "org.apache.commons.math3.linear$BlockRealMatrix#toBlocksLayout(double[][])": 155.9298245614035,
        "org.apache.commons.math3.linear$BlockRealMatrix#transpose()": 1.4310344827586192,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 15.728813559322035,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 4.915254237288136,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInOptimizedOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 5.898305084745763,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor)": 0.9830508474576272,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor,int,int,int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor)": 0.9830508474576272,
        "org.apache.commons.math3.linear$BlockRealMatrix#walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor,int,int,int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#DefaultRealMatrixPreservingVisitor()": 192.47383720930233,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#end()": 192.47383720930233,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#start(int,int,int,int,int,int)": 186.61337209302326,
        "org.apache.commons.math3.linear$DefaultRealMatrixPreservingVisitor#visit(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$DiagonalMatrix#DiagonalMatrix(double[])": 176.56140350877192,
        "org.apache.commons.math3.linear$DiagonalMatrix#DiagonalMatrix(double[],boolean)": 180.49122807017545,
        "org.apache.commons.math3.linear$DiagonalMatrix#DiagonalMatrix(int)": 174.59649122807016,
        "org.apache.commons.math3.linear$DiagonalMatrix#add(org.apache.commons.math3.linear.DiagonalMatrix)": 0.9830508474576272,
        "org.apache.commons.math3.linear$DiagonalMatrix#addToEntry(int,int,double)": 2.9491525423728815,
        "org.apache.commons.math3.linear$DiagonalMatrix#copy()": 165.75438596491227,
        "org.apache.commons.math3.linear$DiagonalMatrix#createMatrix(int,int)": 1.9661016949152543,
        "org.apache.commons.math3.linear$DiagonalMatrix#ensureZero(double)": 5.898305084745763,
        "org.apache.commons.math3.linear$DiagonalMatrix#getColumnDimension()": 183.43859649122808,
        "org.apache.commons.math3.linear$DiagonalMatrix#getData()": 3.9322033898305087,
        "org.apache.commons.math3.linear$DiagonalMatrix#getDataRef()": 149.05263157894737,
        "org.apache.commons.math3.linear$DiagonalMatrix#getEntry(int,int)": 177.5438596491228,
        "org.apache.commons.math3.linear$DiagonalMatrix#getRowDimension()": 185.40350877192984,
        "org.apache.commons.math3.linear$DiagonalMatrix#multiply(org.apache.commons.math3.linear.DiagonalMatrix)": 150.03508771929825,
        "org.apache.commons.math3.linear$DiagonalMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 158.87719298245614,
        "org.apache.commons.math3.linear$DiagonalMatrix#multiplyEntry(int,int,double)": 2.9491525423728815,
        "org.apache.commons.math3.linear$DiagonalMatrix#operate(double[])": 149.05263157894737,
        "org.apache.commons.math3.linear$DiagonalMatrix#preMultiply(double[])": 0.9830508474576272,
        "org.apache.commons.math3.linear$DiagonalMatrix#setEntry(int,int,double)": 170.66666666666666,
        "org.apache.commons.math3.linear$DiagonalMatrix#subtract(org.apache.commons.math3.linear.DiagonalMatrix)": 0.9830508474576272,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(double[],double[])": 3.9322033898305087,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(double[],double[],double)": 0.0,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(org.apache.commons.math3.linear.RealMatrix)": 48.79545454545455,
        "org.apache.commons.math3.linear$EigenDecomposition#EigenDecomposition(org.apache.commons.math3.linear.RealMatrix,double)": 0.0,
        "org.apache.commons.math3.linear$EigenDecomposition#cdiv(double,double,double,double)": 1.9661016949152543,
        "org.apache.commons.math3.linear$EigenDecomposition#findEigenVectors(double[][])": 49.77272727272727,
        "org.apache.commons.math3.linear$EigenDecomposition#findEigenVectorsFromSchur(org.apache.commons.math3.linear.SchurTransformer)": 2.9491525423728815,
        "org.apache.commons.math3.linear$EigenDecomposition#getD()": 18.5,
        "org.apache.commons.math3.linear$EigenDecomposition#getDeterminant()": 9.830508474576272,
        "org.apache.commons.math3.linear$EigenDecomposition#getEigenvector(int)": 13.76271186440678,
        "org.apache.commons.math3.linear$EigenDecomposition#getImagEigenvalue(int)": 0.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getImagEigenvalues()": 0.0,
        "org.apache.commons.math3.linear$EigenDecomposition#getRealEigenvalue(int)": 7.864406779661017,
        "org.apache.commons.math3.linear$EigenDecomposition#getRealEigenvalues()": 18.677966101694917,
        "org.apache.commons.math3.linear$EigenDecomposition#getSolver()": 13.76271186440678,
        "org.apache.commons.math3.linear$EigenDecomposition#getSquareRoot()": 2.9491525423728815,
        "org.apache.commons.math3.linear$EigenDecomposition#getV()": 23.386363636363637,
        "org.apache.commons.math3.linear$EigenDecomposition#getVT()": 3.9322033898305087,
        "org.apache.commons.math3.linear$EigenDecomposition#hasComplexEigenvalues()": 13.76271186440678,
        "org.apache.commons.math3.linear$EigenDecomposition#transformToSchur(org.apache.commons.math3.linear.RealMatrix)": 2.9491525423728815,
        "org.apache.commons.math3.linear$EigenDecomposition#transformToTridiagonal(org.apache.commons.math3.linear.RealMatrix)": 45.86363636363637,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#EigenDecomposition$Solver(double[],double[],org.apache.commons.math3.linear.ArrayRealVector[])": 13.76271186440678,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#getInverse()": 11.796610169491526,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#isNonSingular()": 13.76271186440678,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#solve(org.apache.commons.math3.linear.RealMatrix)": 1.9661016949152543,
        "org.apache.commons.math3.linear$EigenDecomposition$Solver#solve(org.apache.commons.math3.linear.RealVector)": 1.9661016949152543,
        "org.apache.commons.math3.linear$LUDecomposition#LUDecomposition(org.apache.commons.math3.linear.RealMatrix)": 53.51724137931035,
        "org.apache.commons.math3.linear$LUDecomposition#LUDecomposition(org.apache.commons.math3.linear.RealMatrix,double)": 54.5,
        "org.apache.commons.math3.linear$LUDecomposition#getDeterminant()": 0.9830508474576272,
        "org.apache.commons.math3.linear$LUDecomposition#getL()": 4.915254237288136,
        "org.apache.commons.math3.linear$LUDecomposition#getP()": 4.915254237288136,
        "org.apache.commons.math3.linear$LUDecomposition#getPivot()": 1.9661016949152543,
        "org.apache.commons.math3.linear$LUDecomposition#getSolver()": 46.63793103448276,
        "org.apache.commons.math3.linear$LUDecomposition#getU()": 4.915254237288136,
        "org.apache.commons.math3.linear$LUDecomposition$Solver#LUDecomposition$Solver(double[][],int[],boolean)": 46.63793103448276,
        "org.apache.commons.math3.linear$LUDecomposition$Solver#getInverse()": 21.627118644067796,
        "org.apache.commons.math3.linear$LUDecomposition$Solver#isNonSingular()": 3.9322033898305087,
        "org.apache.commons.math3.linear$LUDecomposition$Solver#solve(org.apache.commons.math3.linear.RealMatrix)": 24.576271186440678,
        "org.apache.commons.math3.linear$LUDecomposition$Solver#solve(org.apache.commons.math3.linear.RealVector)": 24.03448275862069,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#MatrixDimensionMismatchException(int,int,int,int)": 38.33898305084746,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedColumnDimension()": 0.9830508474576272,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getExpectedRowDimension()": 0.9830508474576272,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongColumnDimension()": 0.9830508474576272,
        "org.apache.commons.math3.linear$MatrixDimensionMismatchException#getWrongRowDimension()": 0.9830508474576272,
        "org.apache.commons.math3.linear$MatrixUtils#<clinit>()": 692.9430894308944,
        "org.apache.commons.math3.linear$MatrixUtils#MatrixUtils()": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#bigFractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 14.745762711864407,
        "org.apache.commons.math3.linear$MatrixUtils#blockInverse(org.apache.commons.math3.linear.RealMatrix,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$MatrixUtils#checkAdditionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 32.28779069767442,
        "org.apache.commons.math3.linear$MatrixUtils#checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 649.0406504065041,
        "org.apache.commons.math3.linear$MatrixUtils#checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)": 614.8943089430894,
        "org.apache.commons.math3.linear$MatrixUtils#checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 324.1626016260162,
        "org.apache.commons.math3.linear$MatrixUtils#checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)": 650.0162601626016,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int,int,int)": 50.13559322033898,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int[],int[])": 4.915254237288136,
        "org.apache.commons.math3.linear$MatrixUtils#checkSubtractionCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)": 108.47383720930233,
        "org.apache.commons.math3.linear$MatrixUtils#checkSymmetric(org.apache.commons.math3.linear.RealMatrix,double)": 1.9661016949152543,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.9830508474576272,
        "org.apache.commons.math3.linear$MatrixUtils#createColumnRealMatrix(double[])": 14.706395348837209,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldDiagonalMatrix(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldIdentityMatrix(org.apache.commons.math3.Field,int)": 1.9661016949152543,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.Field,int,int)": 1.9661016949152543,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldMatrix(org.apache.commons.math3.FieldElement[][])": 0.9830508474576272,
        "org.apache.commons.math3.linear$MatrixUtils#createFieldVector(org.apache.commons.math3.FieldElement[])": 0.0,
        "org.apache.commons.math3.linear$MatrixUtils#createRealDiagonalMatrix(double[])": 46.84090909090909,
        "org.apache.commons.math3.linear$MatrixUtils#createRealIdentityMatrix(int)": 60.94915254237288,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(double[][])": 369.1638655462185,
        "org.apache.commons.math3.linear$MatrixUtils#createRealMatrix(int,int)": 149.49709302325581,
        "org.apache.commons.math3.linear$MatrixUtils#createRealVector(double[])": 0.9830508474576272,
        "org.apache.commons.math3.linear$MatrixUtils#createRowFieldMatrix(org.apache.commons.math3.FieldElement[])": 0.9830508474576272,
        "org.apache.commons.math3.linear$MatrixUtils#createRowRealMatrix(double[])": 0.9830508474576272,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealMatrix(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 1.9661016949152543,
        "org.apache.commons.math3.linear$MatrixUtils#deserializeRealVector(java.lang.Object,java.lang.String,java.io.ObjectInputStream)": 1.9661016949152543,
        "org.apache.commons.math3.linear$MatrixUtils#fractionMatrixToRealMatrix(org.apache.commons.math3.linear.FieldMatrix)": 0.9830508474576272,
        "org.apache.commons.math3.linear$MatrixUtils#isSymmetric(org.apache.commons.math3.linear.RealMatrix,double)": 50.75,
        "org.apache.commons.math3.linear$MatrixUtils#isSymmetricInternal(org.apache.commons.math3.linear.RealMatrix,double,boolean)": 52.70454545454545,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealMatrix(org.apache.commons.math3.linear.RealMatrix,java.io.ObjectOutputStream)": 1.9661016949152543,
        "org.apache.commons.math3.linear$MatrixUtils#serializeRealVector(org.apache.commons.math3.linear.RealVector,java.io.ObjectOutputStream)": 1.9661016949152543,
        "org.apache.commons.math3.linear$MatrixUtils#solveLowerTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 0.9830508474576272,
        "org.apache.commons.math3.linear$MatrixUtils#solveUpperTriangularSystem(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealVector)": 0.9830508474576272,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#MatrixUtils$BigFractionMatrixConverter()": 14.745762711864407,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#getConvertedMatrix()": 14.745762711864407,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#start(int,int,int,int,int,int)": 14.745762711864407,
        "org.apache.commons.math3.linear$MatrixUtils$BigFractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.BigFraction)": 14.745762711864407,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#MatrixUtils$FractionMatrixConverter()": 0.9830508474576272,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#getConvertedMatrix()": 0.9830508474576272,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#start(int,int,int,int,int,int)": 0.9830508474576272,
        "org.apache.commons.math3.linear$MatrixUtils$FractionMatrixConverter#visit(int,int,org.apache.commons.math3.fraction.Fraction)": 0.9830508474576272,
        "org.apache.commons.math3.linear$NonSquareMatrixException#NonSquareMatrixException(int,int)": 13.76271186440678,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#NonSymmetricMatrixException(int,int,double)": 1.9661016949152543,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getColumn()": 0.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getRow()": 0.0,
        "org.apache.commons.math3.linear$NonSymmetricMatrixException#getThreshold()": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(int,int)": 30.47457627118644,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#OpenMapRealMatrix(org.apache.commons.math3.linear.OpenMapRealMatrix)": 8.847457627118644,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#add(org.apache.commons.math3.linear.OpenMapRealMatrix)": 1.9661016949152543,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#addToEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#computeKey(int,int)": 29.491525423728813,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#copy()": 1.9661016949152543,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#createMatrix(int,int)": 6.88135593220339,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getColumnDimension()": 29.491525423728813,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getEntry(int,int)": 27.52542372881356,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#getRowDimension()": 29.491525423728813,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.OpenMapRealMatrix)": 3.9322033898305087,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiply(org.apache.commons.math3.linear.RealMatrix)": 3.9322033898305087,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#multiplyEntry(int,int,double)": 0.0,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#setEntry(int,int,double)": 29.491525423728813,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.OpenMapRealMatrix)": 5.898305084745763,
        "org.apache.commons.math3.linear$OpenMapRealMatrix#subtract(org.apache.commons.math3.linear.RealMatrix)": 5.898305084745763,
        "org.apache.commons.math3.linear$RealLinearOperator#RealLinearOperator()": 786.1960526315789,
        "org.apache.commons.math3.linear$RealLinearOperator#isTransposable()": 0.0,
        "org.apache.commons.math3.linear$RealLinearOperator#operateTranspose(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat()": 0.9830508474576272,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": 692.9430894308944,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 759.871052631579,
        "org.apache.commons.math3.linear$RealMatrixFormat#RealMatrixFormat(java.text.NumberFormat)": 759.871052631579,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix)": 17.694915254237287,
        "org.apache.commons.math3.linear$RealMatrixFormat#format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition)": 17.694915254237287,
        "org.apache.commons.math3.linear$RealMatrixFormat#getAvailableLocales()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getColumnSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getFormat()": 752.0710526315789,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance()": 692.9430894308944,
        "org.apache.commons.math3.linear$RealMatrixFormat#getInstance(java.util.Locale)": 759.871052631579,
        "org.apache.commons.math3.linear$RealMatrixFormat#getPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getRowSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#getSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String)": 11.796610169491526,
        "org.apache.commons.math3.linear$RealMatrixFormat#parse(java.lang.String,java.text.ParsePosition)": 15.728813559322035,
        "org.apache.commons.math3.linear$RealVector#RealVector()": 793.8067226890756,
        "org.apache.commons.math3.linear$RealVector#add(org.apache.commons.math3.linear.RealVector)": 3.9322033898305087,
        "org.apache.commons.math3.linear$RealVector#addToEntry(int,double)": 5.898305084745763,
        "org.apache.commons.math3.linear$RealVector#checkIndex(int)": 179.89830508474577,
        "org.apache.commons.math3.linear$RealVector#checkIndices(int,int)": 23.593220338983052,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(int)": 69.79661016949153,
        "org.apache.commons.math3.linear$RealVector#checkVectorDimensions(org.apache.commons.math3.linear.RealVector)": 58.983050847457626,
        "org.apache.commons.math3.linear$RealVector#combine(double,double,org.apache.commons.math3.linear.RealVector)": 8.847457627118644,
        "org.apache.commons.math3.linear$RealVector#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 16.71186440677966,
        "org.apache.commons.math3.linear$RealVector#cosine(org.apache.commons.math3.linear.RealVector)": 16.71186440677966,
        "org.apache.commons.math3.linear$RealVector#dotProduct(org.apache.commons.math3.linear.RealVector)": 27.52542372881356,
        "org.apache.commons.math3.linear$RealVector#equals(java.lang.Object)": 0.0,
        "org.apache.commons.math3.linear$RealVector#getDistance(org.apache.commons.math3.linear.RealVector)": 3.9322033898305087,
        "org.apache.commons.math3.linear$RealVector#getL1Distance(org.apache.commons.math3.linear.RealVector)": 3.9322033898305087,
        "org.apache.commons.math3.linear$RealVector#getL1Norm()": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 3.9322033898305087,
        "org.apache.commons.math3.linear$RealVector#getLInfNorm()": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector#getMaxIndex()": 4.915254237288136,
        "org.apache.commons.math3.linear$RealVector#getMaxValue()": 4.915254237288136,
        "org.apache.commons.math3.linear$RealVector#getMinIndex()": 4.915254237288136,
        "org.apache.commons.math3.linear$RealVector#getMinValue()": 4.915254237288136,
        "org.apache.commons.math3.linear$RealVector#getNorm()": 21.627118644067796,
        "org.apache.commons.math3.linear$RealVector#hashCode()": 0.0,
        "org.apache.commons.math3.linear$RealVector#iterator()": 69.79661016949153,
        "org.apache.commons.math3.linear$RealVector#map(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector#mapAdd(double)": 2.9491525423728815,
        "org.apache.commons.math3.linear$RealVector#mapAddToSelf(double)": 3.9322033898305087,
        "org.apache.commons.math3.linear$RealVector#mapDivide(double)": 6.88135593220339,
        "org.apache.commons.math3.linear$RealVector#mapDivideToSelf(double)": 6.88135593220339,
        "org.apache.commons.math3.linear$RealVector#mapMultiply(double)": 85.52542372881356,
        "org.apache.commons.math3.linear$RealVector#mapMultiplyToSelf(double)": 12.779661016949152,
        "org.apache.commons.math3.linear$RealVector#mapSubtract(double)": 4.915254237288136,
        "org.apache.commons.math3.linear$RealVector#mapSubtractToSelf(double)": 4.915254237288136,
        "org.apache.commons.math3.linear$RealVector#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 24.576271186440678,
        "org.apache.commons.math3.linear$RealVector#outerProduct(org.apache.commons.math3.linear.RealVector)": 4.915254237288136,
        "org.apache.commons.math3.linear$RealVector#projection(org.apache.commons.math3.linear.RealVector)": 13.76271186440678,
        "org.apache.commons.math3.linear$RealVector#set(double)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector#sparseIterator()": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector#subtract(org.apache.commons.math3.linear.RealVector)": 3.9322033898305087,
        "org.apache.commons.math3.linear$RealVector#toArray()": 3.9322033898305087,
        "org.apache.commons.math3.linear$RealVector#unitVector()": 4.915254237288136,
        "org.apache.commons.math3.linear$RealVector#unitize()": 4.915254237288136,
        "org.apache.commons.math3.linear$RealVector#unmodifiableRealVector(org.apache.commons.math3.linear.RealVector)": 27.52542372881356,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 3.9322033898305087,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 7.864406779661017,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 3.9322033898305087,
        "org.apache.commons.math3.linear$RealVector#walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 7.864406779661017,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor,int,int)": 3.9322033898305087,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector#walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor,int,int)": 3.9322033898305087,
        "org.apache.commons.math3.linear$RealVector$1#hasNext()": 69.79661016949153,
        "org.apache.commons.math3.linear$RealVector$1#next()": 69.79661016949153,
        "org.apache.commons.math3.linear$RealVector$1#remove()": 2.9491525423728815,
        "org.apache.commons.math3.linear$RealVector$2#add(org.apache.commons.math3.linear.RealVector)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#addToEntry(int,double)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#append(double)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#append(org.apache.commons.math3.linear.RealVector)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#combine(double,double,org.apache.commons.math3.linear.RealVector)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#combineToSelf(double,double,org.apache.commons.math3.linear.RealVector)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#copy()": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#cosine(org.apache.commons.math3.linear.RealVector)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#dotProduct(org.apache.commons.math3.linear.RealVector)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#ebeDivide(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealVector$2#ebeMultiply(org.apache.commons.math3.linear.RealVector)": 0.0,
        "org.apache.commons.math3.linear$RealVector$2#getDimension()": 5.898305084745763,
        "org.apache.commons.math3.linear$RealVector$2#getDistance(org.apache.commons.math3.linear.RealVector)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#getEntry(int)": 7.864406779661017,
        "org.apache.commons.math3.linear$RealVector$2#getL1Distance(org.apache.commons.math3.linear.RealVector)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#getL1Norm()": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#getLInfDistance(org.apache.commons.math3.linear.RealVector)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#getLInfNorm()": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#getNorm()": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#getSubVector(int,int)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#isInfinite()": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#isNaN()": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#iterator()": 3.9322033898305087,
        "org.apache.commons.math3.linear$RealVector$2#map(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#mapAdd(double)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#mapAddToSelf(double)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#mapDivide(double)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#mapDivideToSelf(double)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiply(double)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#mapMultiplyToSelf(double)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtract(double)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#mapSubtractToSelf(double)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#outerProduct(org.apache.commons.math3.linear.RealVector)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#set(double)": 2.9491525423728815,
        "org.apache.commons.math3.linear$RealVector$2#setEntry(int,double)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#setSubVector(int,org.apache.commons.math3.linear.RealVector)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#sparseIterator()": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#subtract(org.apache.commons.math3.linear.RealVector)": 3.9322033898305087,
        "org.apache.commons.math3.linear$RealVector$2#toArray()": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#unitVector()": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2#unitize()": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2$1#hasNext()": 3.9322033898305087,
        "org.apache.commons.math3.linear$RealVector$2$1#next()": 3.9322033898305087,
        "org.apache.commons.math3.linear$RealVector$2$1#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2$2#hasNext()": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2$2#next()": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$2$2#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2)": 5.898305084745763,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#getValue()": 5.898305084745763,
        "org.apache.commons.math3.linear$RealVector$2$UnmodifiableEntry#setValue(double)": 3.9322033898305087,
        "org.apache.commons.math3.linear$RealVector$Entry#RealVector$Entry(org.apache.commons.math3.linear.RealVector)": 72.7457627118644,
        "org.apache.commons.math3.linear$RealVector$Entry#getIndex()": 72.7457627118644,
        "org.apache.commons.math3.linear$RealVector$Entry#getValue()": 69.79661016949153,
        "org.apache.commons.math3.linear$RealVector$Entry#setIndex(int)": 72.7457627118644,
        "org.apache.commons.math3.linear$RealVector$Entry#setValue(double)": 26.54237288135593,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#RealVector$SparseEntryIterator(org.apache.commons.math3.linear.RealVector)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#advance(org.apache.commons.math3.linear.RealVector$Entry)": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#hasNext()": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#next()": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVector$SparseEntryIterator#remove()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat()": 7.864406779661017,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)": 622.9733893557423,
        "org.apache.commons.math3.linear$RealVectorFormat#RealVectorFormat(java.text.NumberFormat)": 622.9733893557423,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector)": 21.627118644067796,
        "org.apache.commons.math3.linear$RealVectorFormat#format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition)": 21.627118644067796,
        "org.apache.commons.math3.linear$RealVectorFormat#getAvailableLocales()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getFormat()": 1.9661016949152543,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance()": 613.2114845938376,
        "org.apache.commons.math3.linear$RealVectorFormat#getInstance(java.util.Locale)": 622.9733893557423,
        "org.apache.commons.math3.linear$RealVectorFormat#getPrefix()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSeparator()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#getSuffix()": 0.0,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String)": 27.52542372881356,
        "org.apache.commons.math3.linear$RealVectorFormat#parse(java.lang.String,java.text.ParsePosition)": 35.389830508474574,
        "org.apache.commons.math3.linear$SingularMatrixException#SingularMatrixException()": 20.64406779661017,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#TriDiagonalTransformer(org.apache.commons.math3.linear.RealMatrix)": 54.65909090909091,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getHouseholderVectorsRef()": 0.0,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getMainDiagonalRef()": 46.84090909090909,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getQ()": 50.75,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getQT()": 51.72727272727273,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getSecondaryDiagonalRef()": 46.84090909090909,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#getT()": 4.915254237288136,
        "org.apache.commons.math3.linear$TriDiagonalTransformer#transform()": 53.68181818181818,
        "org.apache.commons.math3.optim$AbstractConvergenceChecker#AbstractConvergenceChecker(double,double)": 76.56439393939394,
        "org.apache.commons.math3.optim$AbstractConvergenceChecker#getAbsoluteThreshold()": 57.96022727272727,
        "org.apache.commons.math3.optim$AbstractConvergenceChecker#getRelativeThreshold()": 58.93939393939394,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#BaseMultivariateOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 180.83179723502303,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#checkParameters()": 175.99308755760367,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#getLowerBound()": 140.18663594470044,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#getStartPoint()": 139.21889400921657,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#getUpperBound()": 134.3801843317972,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 175.99308755760367,
        "org.apache.commons.math3.optim$BaseMultivariateOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 175.99308755760367,
        "org.apache.commons.math3.optim$BaseOptimizer#BaseOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 195.34792626728108,
        "org.apache.commons.math3.optim$BaseOptimizer#getConvergenceChecker()": 133.41244239631334,
        "org.apache.commons.math3.optim$BaseOptimizer#getEvaluations()": 37.40686274509804,
        "org.apache.commons.math3.optim$BaseOptimizer#getIterations()": -2.0714285714285716,
        "org.apache.commons.math3.optim$BaseOptimizer#getMaxEvaluations()": -6.431034482758619,
        "org.apache.commons.math3.optim$BaseOptimizer#getMaxIterations()": 0.0,
        "org.apache.commons.math3.optim$BaseOptimizer#incrementEvaluationCount()": 148.8963133640553,
        "org.apache.commons.math3.optim$BaseOptimizer#incrementIterationCount()": 24.576271186440678,
        "org.apache.commons.math3.optim$BaseOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 190.50921658986175,
        "org.apache.commons.math3.optim$BaseOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 190.50921658986175,
        "org.apache.commons.math3.optim$BaseOptimizer$MaxEvalCallback#BaseOptimizer$MaxEvalCallback()": 195.34792626728108,
        "org.apache.commons.math3.optim$BaseOptimizer$MaxEvalCallback#trigger(int)": 7.864406779661017,
        "org.apache.commons.math3.optim$BaseOptimizer$MaxIterCallback#BaseOptimizer$MaxIterCallback()": 195.34792626728108,
        "org.apache.commons.math3.optim$BaseOptimizer$MaxIterCallback#trigger(int)": 0.0,
        "org.apache.commons.math3.optim$InitialGuess#InitialGuess(double[])": 150.83179723502303,
        "org.apache.commons.math3.optim$InitialGuess#getInitialGuess()": 149.86405529953916,
        "org.apache.commons.math3.optim$MaxEval#MaxEval(int)": 164.3801843317972,
        "org.apache.commons.math3.optim$MaxEval#getMaxEval()": 163.41244239631334,
        "org.apache.commons.math3.optim$MaxEval#unlimited()": 0.0,
        "org.apache.commons.math3.optim$MaxIter#MaxIter(int)": 26.54237288135593,
        "org.apache.commons.math3.optim$MaxIter#getMaxIter()": 26.54237288135593,
        "org.apache.commons.math3.optim$MaxIter#unlimited()": 0.0,
        "org.apache.commons.math3.optim$PointValuePair#PointValuePair(double[],double)": 76.39160839160839,
        "org.apache.commons.math3.optim$PointValuePair#PointValuePair(double[],double,boolean)": 76.39160839160839,
        "org.apache.commons.math3.optim$PointValuePair#getPoint()": 50.209790209790214,
        "org.apache.commons.math3.optim$PointValuePair#getPointRef()": 15.838235294117649,
        "org.apache.commons.math3.optim$PointValuePair#writeReplace()": 0.9830508474576272,
        "org.apache.commons.math3.optim$PointValuePair$DataTransferObject#PointValuePair$DataTransferObject(double[],double)": 0.9830508474576272,
        "org.apache.commons.math3.optim$PointValuePair$DataTransferObject#readResolve()": 0.9830508474576272,
        "org.apache.commons.math3.optim$PointVectorValuePair#PointVectorValuePair(double[],double[])": 76.35087719298245,
        "org.apache.commons.math3.optim$PointVectorValuePair#PointVectorValuePair(double[],double[],boolean)": 76.35087719298245,
        "org.apache.commons.math3.optim$PointVectorValuePair#getPoint()": 26.54237288135593,
        "org.apache.commons.math3.optim$PointVectorValuePair#getPointRef()": 51.11864406779661,
        "org.apache.commons.math3.optim$PointVectorValuePair#getValue()": 5.898305084745763,
        "org.apache.commons.math3.optim$PointVectorValuePair#getValueRef()": -5.448275862068964,
        "org.apache.commons.math3.optim$PointVectorValuePair#writeReplace()": 0.9830508474576272,
        "org.apache.commons.math3.optim$PointVectorValuePair$DataTransferObject#PointVectorValuePair$DataTransferObject(double[],double[])": 0.9830508474576272,
        "org.apache.commons.math3.optim$PointVectorValuePair$DataTransferObject#readResolve()": 0.9830508474576272,
        "org.apache.commons.math3.optim$SimpleBounds#SimpleBounds(double[],double[])": 28.38081395348837,
        "org.apache.commons.math3.optim$SimpleBounds#getLower()": 27.40406976744186,
        "org.apache.commons.math3.optim$SimpleBounds#getUpper()": 27.40406976744186,
        "org.apache.commons.math3.optim$SimpleBounds#unbounded(int)": 12.501587301587302,
        "org.apache.commons.math3.optim$SimpleValueChecker#SimpleValueChecker(double,double)": 28.00666666666667,
        "org.apache.commons.math3.optim$SimpleValueChecker#SimpleValueChecker(double,double,int)": 1.9661016949152543,
        "org.apache.commons.math3.optim$SimpleValueChecker#converged(int,org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair)": 26.046666666666667,
        "org.apache.commons.math3.optim$SimpleVectorValueChecker#SimpleVectorValueChecker(double,double)": -0.5344827586206904,
        "org.apache.commons.math3.optim$SimpleVectorValueChecker#SimpleVectorValueChecker(double,double,int)": 2.9491525423728815,
        "org.apache.commons.math3.optim$SimpleVectorValueChecker#converged(int,org.apache.commons.math3.optim.PointVectorValuePair,org.apache.commons.math3.optim.PointVectorValuePair)": -4.46551724137931,
        "org.apache.commons.math3.optim.nonlinear.scalar$GoalType#<clinit>()": 107.42191142191142,
        "org.apache.commons.math3.optim.nonlinear.scalar$GoalType#GoalType(java.lang.String,int)": 107.42191142191142,
        "org.apache.commons.math3.optim.nonlinear.scalar$GradientMultivariateOptimizer#GradientMultivariateOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": -18.224137931034484,
        "org.apache.commons.math3.optim.nonlinear.scalar$GradientMultivariateOptimizer#computeObjectiveGradient(double[])": -19.20689655172414,
        "org.apache.commons.math3.optim.nonlinear.scalar$GradientMultivariateOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": -18.224137931034484,
        "org.apache.commons.math3.optim.nonlinear.scalar$GradientMultivariateOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": -18.224137931034484,
        "org.apache.commons.math3.optim.nonlinear.scalar$MultivariateOptimizer#MultivariateOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 85.1188811188811,
        "org.apache.commons.math3.optim.nonlinear.scalar$MultivariateOptimizer#computeObjectiveValue(double[])": 46.33100233100233,
        "org.apache.commons.math3.optim.nonlinear.scalar$MultivariateOptimizer#getGoalType()": 72.51282051282051,
        "org.apache.commons.math3.optim.nonlinear.scalar$MultivariateOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 84.14918414918414,
        "org.apache.commons.math3.optim.nonlinear.scalar$MultivariateOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 84.14918414918414,
        "org.apache.commons.math3.optim.nonlinear.scalar$ObjectiveFunction#ObjectiveFunction(org.apache.commons.math3.analysis.MultivariateFunction)": 58.93706293706294,
        "org.apache.commons.math3.optim.nonlinear.scalar$ObjectiveFunction#getObjectiveFunction()": 53.11888111888112,
        "org.apache.commons.math3.optim.nonlinear.scalar$ObjectiveFunctionGradient#ObjectiveFunctionGradient(org.apache.commons.math3.analysis.MultivariateVectorFunction)": -18.224137931034484,
        "org.apache.commons.math3.optim.nonlinear.scalar$ObjectiveFunctionGradient#getObjectiveFunctionGradient()": -18.224137931034484,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer#NonLinearConjugateGradientOptimizer(org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula,org.apache.commons.math3.optim.ConvergenceChecker)": -21.17241379310345,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer#NonLinearConjugateGradientOptimizer(org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula,org.apache.commons.math3.optim.ConvergenceChecker,org.apache.commons.math3.analysis.solvers.UnivariateSolver)": 1.9661016949152543,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer#NonLinearConjugateGradientOptimizer(org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula,org.apache.commons.math3.optim.ConvergenceChecker,org.apache.commons.math3.analysis.solvers.UnivariateSolver,org.apache.commons.math3.optim.nonlinear.scalar.gradient.Preconditioner)": -18.224137931034484,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer#checkParameters()": -18.224137931034484,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer#doOptimize()": -19.20689655172414,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer#findUpperBound(org.apache.commons.math3.analysis.UnivariateFunction,double,double)": -19.20689655172414,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": -18.224137931034484,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": -18.224137931034484,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer$1#<clinit>()": -19.20689655172414,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer$Formula#<clinit>()": -18.224137931034484,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer$Formula#NonLinearConjugateGradientOptimizer$Formula(java.lang.String,int)": -18.224137931034484,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer$IdentityPreconditioner#NonLinearConjugateGradientOptimizer$IdentityPreconditioner()": -19.20689655172414,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer$IdentityPreconditioner#precondition(double[],double[])": -20.189655172413794,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer$LineSearchFunction#NonLinearConjugateGradientOptimizer$LineSearchFunction(org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer,double[],double[])": -19.20689655172414,
        "org.apache.commons.math3.optim.nonlinear.scalar.gradient$NonLinearConjugateGradientOptimizer$LineSearchFunction#value(double)": -19.20689655172414,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#AbstractSimplex(double[])": 8.97549019607843,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#AbstractSimplex(double[][])": 6.88135593220339,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#AbstractSimplex(int)": 0.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#AbstractSimplex(int,double)": 6.88135593220339,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#build(double[])": 13.877450980392158,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#createHypercubeSteps(int,double)": 6.88135593220339,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#evaluate(org.apache.commons.math3.analysis.MultivariateFunction,java.util.Comparator)": 13.877450980392158,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#getDimension()": 13.877450980392158,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#getPoint(int)": 13.877450980392158,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#getPoints()": 13.877450980392158,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#getSize()": 13.877450980392158,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#replaceWorstPoint(org.apache.commons.math3.optim.PointValuePair,java.util.Comparator)": 7.209090909090909,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#setPoint(int,org.apache.commons.math3.optim.PointValuePair)": -2.6090909090909093,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$AbstractSimplex#setPoints(org.apache.commons.math3.optim.PointValuePair[])": -6.536363636363636,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#CMAESOptimizer(int,double,boolean,int,int,org.apache.commons.math3.random.RandomGenerator,boolean,org.apache.commons.math3.optim.ConvergenceChecker)": 4.938953488372093,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#checkParameters()": 1.0319767441860463,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#copyColumn(org.apache.commons.math3.linear.RealMatrix,int,org.apache.commons.math3.linear.RealMatrix,int)": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#diag(org.apache.commons.math3.linear.RealMatrix)": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#divide(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": -1.0454545454545454,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#doOptimize()": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#eye(int,int)": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#getStatisticsDHistory()": 0.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#getStatisticsFitnessHistory()": 0.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#getStatisticsMeanHistory()": 0.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#getStatisticsSigmaHistory()": 0.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#initializeCMA(double[])": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#inverse(int[])": -1.0454545454545454,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#log(org.apache.commons.math3.linear.RealMatrix)": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#max(double[])": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#max(org.apache.commons.math3.linear.RealMatrix)": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#min(double[])": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#min(org.apache.commons.math3.linear.RealMatrix)": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#ones(int,int)": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 3.962209302325581,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 3.962209302325581,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#push(double[],double)": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#randn(int)": 0.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#randn1(int,int)": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#repmat(org.apache.commons.math3.linear.RealMatrix,int,int)": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#reverse(int[])": -1.0454545454545454,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#selectColumns(org.apache.commons.math3.linear.RealMatrix,int[])": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#sequence(double,double,double)": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#sortedIndices(double[])": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#sqrt(org.apache.commons.math3.linear.RealMatrix)": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#square(org.apache.commons.math3.linear.RealMatrix)": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#sumRows(org.apache.commons.math3.linear.RealMatrix)": -1.0454545454545454,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#times(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#triu(org.apache.commons.math3.linear.RealMatrix,int)": -1.0454545454545454,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#updateBD(double)": -1.0454545454545454,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#updateCovariance(boolean,org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix,int[],org.apache.commons.math3.linear.RealMatrix)": -1.0454545454545454,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#updateCovarianceDiagonalOnly(boolean,org.apache.commons.math3.linear.RealMatrix)": -29.03448275862069,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#updateEvolutionPaths(org.apache.commons.math3.linear.RealMatrix,org.apache.commons.math3.linear.RealMatrix)": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer#zeros(int,int)": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$DoubleIndex#CMAESOptimizer$DoubleIndex(double,int)": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$DoubleIndex#compareTo(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex)": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$DoubleIndex#equals(java.lang.Object)": 0.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$DoubleIndex#hashCode()": 0.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$FitnessFunction#CMAESOptimizer$FitnessFunction(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer)": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$FitnessFunction#isFeasible(double[])": 0.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$FitnessFunction#penalty(double[],double[])": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$FitnessFunction#repair(double[])": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$FitnessFunction#setValueRange(double)": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$FitnessFunction#value(double[])": -0.9215116279069768,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$PopulationSize#CMAESOptimizer$PopulationSize(int)": 3.962209302325581,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$PopulationSize#getPopulationSize()": 1.0319767441860463,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$Sigma#CMAESOptimizer$Sigma(double[])": 4.938953488372093,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$CMAESOptimizer$Sigma#getSigma()": 1.0319767441860463,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$MultiDirectionalSimplex#MultiDirectionalSimplex(double[])": -8.5,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$MultiDirectionalSimplex#MultiDirectionalSimplex(double[],double,double)": -8.5,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$MultiDirectionalSimplex#MultiDirectionalSimplex(double[][])": 0.9830508474576272,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$MultiDirectionalSimplex#MultiDirectionalSimplex(double[][],double,double)": 0.9830508474576272,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$MultiDirectionalSimplex#MultiDirectionalSimplex(int)": 1.9661016949152543,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$MultiDirectionalSimplex#MultiDirectionalSimplex(int,double)": 1.9661016949152543,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$MultiDirectionalSimplex#MultiDirectionalSimplex(int,double,double)": 0.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$MultiDirectionalSimplex#MultiDirectionalSimplex(int,double,double,double)": 1.9661016949152543,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$MultiDirectionalSimplex#evaluateNewSimplex(org.apache.commons.math3.analysis.MultivariateFunction,org.apache.commons.math3.optim.PointValuePair[],double,java.util.Comparator)": -5.554545454545455,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$MultiDirectionalSimplex#iterate(org.apache.commons.math3.analysis.MultivariateFunction,java.util.Comparator)": -5.554545454545455,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$NelderMeadSimplex#NelderMeadSimplex(double[])": -1.627272727272727,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$NelderMeadSimplex#NelderMeadSimplex(double[],double,double,double,double)": -1.627272727272727,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$NelderMeadSimplex#NelderMeadSimplex(double[][])": 5.898305084745763,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$NelderMeadSimplex#NelderMeadSimplex(double[][],double,double,double,double)": 5.898305084745763,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$NelderMeadSimplex#NelderMeadSimplex(int)": 4.915254237288136,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$NelderMeadSimplex#NelderMeadSimplex(int,double)": 4.915254237288136,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$NelderMeadSimplex#NelderMeadSimplex(int,double,double,double,double)": 0.0,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$NelderMeadSimplex#NelderMeadSimplex(int,double,double,double,double,double)": 4.915254237288136,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$NelderMeadSimplex#iterate(org.apache.commons.math3.analysis.MultivariateFunction,java.util.Comparator)": 7.209090909090909,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer#<clinit>()": -27.06896551724138,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer#PowellOptimizer(double,double)": -28.051724137931036,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer#PowellOptimizer(double,double,double,double)": -30.017241379310345,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer#PowellOptimizer(double,double,double,double,org.apache.commons.math3.optim.ConvergenceChecker)": -27.06896551724138,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer#PowellOptimizer(double,double,org.apache.commons.math3.optim.ConvergenceChecker)": -28.051724137931036,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer#checkParameters()": -27.06896551724138,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer#doOptimize()": -27.06896551724138,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer#newPointAndDirection(double[],double[],double)": -28.051724137931036,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer$LineSearch#PowellOptimizer$LineSearch(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer,double,double)": -27.06896551724138,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer$LineSearch#search(double[],double[])": -28.051724137931036,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$PowellOptimizer$LineSearch$1#value(double)": -28.051724137931036,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$SimplexOptimizer#SimplexOptimizer(double,double)": 12.368131868131869,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$SimplexOptimizer#SimplexOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 15.838235294117649,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$SimplexOptimizer#checkParameters()": 15.838235294117649,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$SimplexOptimizer#doOptimize()": 15.838235294117649,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$SimplexOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 15.838235294117649,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$SimplexOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 15.838235294117649,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$SimplexOptimizer$1#value(double[])": 13.877450980392158,
        "org.apache.commons.math3.optim.nonlinear.scalar.noderiv$SimplexOptimizer$2#compare(org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair)": 13.877450980392158,
        "org.apache.commons.math3.optim.nonlinear.vector$JacobianMultivariateVectorOptimizer#JacobianMultivariateVectorOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 81.26315789473684,
        "org.apache.commons.math3.optim.nonlinear.vector$JacobianMultivariateVectorOptimizer#computeJacobian(double[])": 72.42105263157895,
        "org.apache.commons.math3.optim.nonlinear.vector$JacobianMultivariateVectorOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 77.33333333333333,
        "org.apache.commons.math3.optim.nonlinear.vector$JacobianMultivariateVectorOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 77.33333333333333,
        "org.apache.commons.math3.optim.nonlinear.vector$ModelFunction#ModelFunction(org.apache.commons.math3.analysis.MultivariateVectorFunction)": 75.36842105263158,
        "org.apache.commons.math3.optim.nonlinear.vector$ModelFunction#getModelFunction()": 75.36842105263158,
        "org.apache.commons.math3.optim.nonlinear.vector$ModelFunctionJacobian#ModelFunctionJacobian(org.apache.commons.math3.analysis.MultivariateMatrixFunction)": 74.3859649122807,
        "org.apache.commons.math3.optim.nonlinear.vector$ModelFunctionJacobian#getModelFunctionJacobian()": 74.3859649122807,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#MultivariateVectorOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 81.26315789473684,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#checkParameters()": 77.33333333333333,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#computeObjectiveValue(double[])": 75.36842105263158,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#getTarget()": 76.35087719298245,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#getTargetSize()": 47.186440677966104,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#getWeight()": 75.36842105263158,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 77.33333333333333,
        "org.apache.commons.math3.optim.nonlinear.vector$MultivariateVectorOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 77.33333333333333,
        "org.apache.commons.math3.optim.nonlinear.vector$Target#Target(double[])": 77.33333333333333,
        "org.apache.commons.math3.optim.nonlinear.vector$Target#getTarget()": 77.33333333333333,
        "org.apache.commons.math3.optim.nonlinear.vector$Weight#Weight(double[])": 77.33333333333333,
        "org.apache.commons.math3.optim.nonlinear.vector$Weight#Weight(org.apache.commons.math3.linear.RealMatrix)": 0.0,
        "org.apache.commons.math3.optim.nonlinear.vector$Weight#getWeight()": 77.33333333333333,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#AbstractLeastSquaresOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 81.26315789473684,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#computeCost(double[])": 67.50877192982456,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#computeCovariances(double[],double)": 7.864406779661017,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#computeResiduals(double[])": 74.3859649122807,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#computeSigma(double[],double)": 3.9322033898305087,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#computeWeightedJacobian(double[])": 72.42105263157895,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#getChiSquare()": 50.13559322033898,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#getRMS()": 47.186440677966104,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#getWeightSquareRoot()": 28.948275862068968,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": 77.33333333333333,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": 77.33333333333333,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#setCost(double)": 67.50877192982456,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$AbstractLeastSquaresOptimizer#squareRoot(org.apache.commons.math3.linear.RealMatrix)": 77.33333333333333,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$GaussNewtonOptimizer#GaussNewtonOptimizer(boolean,org.apache.commons.math3.optim.ConvergenceChecker)": -0.5344827586206904,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$GaussNewtonOptimizer#GaussNewtonOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": -8.396551724137932,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$GaussNewtonOptimizer#checkParameters()": -1.5172413793103452,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$GaussNewtonOptimizer#doOptimize()": -1.5172413793103452,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer()": 12.241379310344826,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(double,double,double)": 17.694915254237287,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(double,double,double,double,double)": 30.913793103448278,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(double,org.apache.commons.math3.optim.ConvergenceChecker,double,double,double,double)": 1.9661016949152543,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#LevenbergMarquardtOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": 1.9661016949152543,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#checkParameters()": 29.93103448275862,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#determineLMDirection(double[],double[],double[],double[])": -5.448275862068964,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#determineLMParameter(double[],double,double[],double[],double[],double[])": 28.948275862068968,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#doOptimize()": 29.93103448275862,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#qTy(double[])": 28.948275862068968,
        "org.apache.commons.math3.optim.nonlinear.vector.jacobian$LevenbergMarquardtOptimizer#qrDecomposition(org.apache.commons.math3.linear.RealMatrix)": 28.948275862068968,
        "org.apache.commons.math3.optim.univariate$BracketFinder#BracketFinder()": -23.137931034482758,
        "org.apache.commons.math3.optim.univariate$BracketFinder#BracketFinder(double,int)": -23.137931034482758,
        "org.apache.commons.math3.optim.univariate$BracketFinder#eval(org.apache.commons.math3.analysis.UnivariateFunction,double)": -24.120689655172413,
        "org.apache.commons.math3.optim.univariate$BracketFinder#getEvaluations()": 0.0,
        "org.apache.commons.math3.optim.univariate$BracketFinder#getFHi()": 0.0,
        "org.apache.commons.math3.optim.univariate$BracketFinder#getFLo()": 0.0,
        "org.apache.commons.math3.optim.univariate$BracketFinder#getFMid()": 0.0,
        "org.apache.commons.math3.optim.univariate$BracketFinder#getHi()": -24.120689655172413,
        "org.apache.commons.math3.optim.univariate$BracketFinder#getLo()": -24.120689655172413,
        "org.apache.commons.math3.optim.univariate$BracketFinder#getMaxEvaluations()": 0.0,
        "org.apache.commons.math3.optim.univariate$BracketFinder#getMid()": -26.086206896551722,
        "org.apache.commons.math3.optim.univariate$BracketFinder#search(org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.optim.nonlinear.scalar.GoalType,double,double)": -24.120689655172413,
        "org.apache.commons.math3.optim.univariate$BrentOptimizer#<clinit>()": -12.327586206896552,
        "org.apache.commons.math3.optim.univariate$BrentOptimizer#BrentOptimizer(double,double)": 13.76271186440678,
        "org.apache.commons.math3.optim.univariate$BrentOptimizer#BrentOptimizer(double,double,org.apache.commons.math3.optim.ConvergenceChecker)": -12.327586206896552,
        "org.apache.commons.math3.optim.univariate$BrentOptimizer#best(org.apache.commons.math3.optim.univariate.UnivariatePointValuePair,org.apache.commons.math3.optim.univariate.UnivariatePointValuePair,boolean)": -16.258620689655174,
        "org.apache.commons.math3.optim.univariate$BrentOptimizer#doOptimize()": -15.275862068965518,
        "org.apache.commons.math3.optim.univariate$SearchInterval#SearchInterval(double,double)": 11.796610169491526,
        "org.apache.commons.math3.optim.univariate$SearchInterval#SearchInterval(double,double,double)": -14.293103448275861,
        "org.apache.commons.math3.optim.univariate$SearchInterval#getMax()": -14.293103448275861,
        "org.apache.commons.math3.optim.univariate$SearchInterval#getMin()": -14.293103448275861,
        "org.apache.commons.math3.optim.univariate$SearchInterval#getStartValue()": -14.293103448275861,
        "org.apache.commons.math3.optim.univariate$SimpleUnivariateValueChecker#SimpleUnivariateValueChecker(double,double)": -25.10344827586207,
        "org.apache.commons.math3.optim.univariate$SimpleUnivariateValueChecker#SimpleUnivariateValueChecker(double,double,int)": 1.9661016949152543,
        "org.apache.commons.math3.optim.univariate$SimpleUnivariateValueChecker#converged(int,org.apache.commons.math3.optim.univariate.UnivariatePointValuePair,org.apache.commons.math3.optim.univariate.UnivariatePointValuePair)": -25.10344827586207,
        "org.apache.commons.math3.optim.univariate$UnivariateObjectiveFunction#UnivariateObjectiveFunction(org.apache.commons.math3.analysis.UnivariateFunction)": -13.310344827586206,
        "org.apache.commons.math3.optim.univariate$UnivariateObjectiveFunction#getObjectiveFunction()": -13.310344827586206,
        "org.apache.commons.math3.optim.univariate$UnivariateOptimizer#UnivariateOptimizer(org.apache.commons.math3.optim.ConvergenceChecker)": -12.327586206896552,
        "org.apache.commons.math3.optim.univariate$UnivariateOptimizer#computeObjectiveValue(double)": -15.275862068965518,
        "org.apache.commons.math3.optim.univariate$UnivariateOptimizer#getGoalType()": -15.275862068965518,
        "org.apache.commons.math3.optim.univariate$UnivariateOptimizer#getMax()": -15.275862068965518,
        "org.apache.commons.math3.optim.univariate$UnivariateOptimizer#getMin()": -15.275862068965518,
        "org.apache.commons.math3.optim.univariate$UnivariateOptimizer#getStartValue()": -15.275862068965518,
        "org.apache.commons.math3.optim.univariate$UnivariateOptimizer#optimize(org.apache.commons.math3.optim.OptimizationData[])": -13.310344827586206,
        "org.apache.commons.math3.optim.univariate$UnivariateOptimizer#parseOptimizationData(org.apache.commons.math3.optim.OptimizationData[])": -13.310344827586206,
        "org.apache.commons.math3.optim.univariate$UnivariatePointValuePair#UnivariatePointValuePair(double,double)": -15.275862068965518,
        "org.apache.commons.math3.optim.univariate$UnivariatePointValuePair#getPoint()": -16.258620689655174,
        "org.apache.commons.math3.optim.univariate$UnivariatePointValuePair#getValue()": -15.275862068965518,
        "org.apache.commons.math3.random$BitsStreamGenerator#BitsStreamGenerator()": 1178.985465116279,
        "org.apache.commons.math3.random$BitsStreamGenerator#clear()": 1178.985465116279,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBoolean()": 27.52542372881356,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBytes(byte[])": 19.661016949152543,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextDouble()": 391.7296511627907,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextFloat()": 27.52542372881356,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextGaussian()": 86.98546511627907,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt()": 55.05084745762712,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt(int)": 127.79661016949153,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong()": 47.186440677966104,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong(long)": 0.0,
        "org.apache.commons.math3.random$MersenneTwister#<clinit>()": 136.79941860465115,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister()": 28.38081395348837,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(int)": 62.91525423728814,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(int[])": 0.9830508474576272,
        "org.apache.commons.math3.random$MersenneTwister#MersenneTwister(long)": 46.20338983050848,
        "org.apache.commons.math3.random$MersenneTwister#next(int)": 82.10174418604652,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(int)": 136.79941860465115,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(int[])": 89.91569767441861,
        "org.apache.commons.math3.random$MersenneTwister#setSeed(long)": 88.93895348837209,
        "org.apache.commons.math3.util$CompositeFormat#CompositeFormat()": 0.0,
        "org.apache.commons.math3.util$CompositeFormat#formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)": 92.40677966101696,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat()": 712.4552845528456,
        "org.apache.commons.math3.util$CompositeFormat#getDefaultNumberFormat(java.util.Locale)": 1078.696052631579,
        "org.apache.commons.math3.util$CompositeFormat#parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)": 108.13559322033899,
        "org.apache.commons.math3.util$CompositeFormat#parseFixedstring(java.lang.String,java.lang.String,java.text.ParsePosition)": 106.16949152542372,
        "org.apache.commons.math3.util$CompositeFormat#parseNextCharacter(java.lang.String,java.text.ParsePosition)": 108.13559322033899,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,double,java.text.ParsePosition)": 23.593220338983052,
        "org.apache.commons.math3.util$CompositeFormat#parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition)": 103.22033898305085,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 3343.4124423963135,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 8.847457627118644,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1984.795138888889,
        "org.apache.commons.math3.util$FastMath#abs(float)": 1.9661016949152543,
        "org.apache.commons.math3.util$FastMath#abs(int)": 324.40677966101697,
        "org.apache.commons.math3.util$FastMath#abs(long)": 903.140056022409,
        "org.apache.commons.math3.util$FastMath#acos(double)": 35.389830508474574,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 4.915254237288136,
        "org.apache.commons.math3.util$FastMath#asin(double)": 36.3728813559322,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 4.915254237288136,
        "org.apache.commons.math3.util$FastMath#atan(double)": 24.66176470588235,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 115.83823529411765,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 92.40677966101696,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 4.915254237288136,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 45.220338983050844,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 294.91525423728814,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 19.661016949152543,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9661016949152543,
        "org.apache.commons.math3.util$FastMath#cos(double)": 291.125,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 369.1638655462185,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 33.42372881355932,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 90.44067796610169,
        "org.apache.commons.math3.util$FastMath#exp(double)": 774.6440677966102,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 1016.4745762711865,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 17.694915254237287,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 39.32203389830509,
        "org.apache.commons.math3.util$FastMath#floor(double)": 763.8305084745763,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 77.66101694915254,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9661016949152543,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 72.7457627118644,
        "org.apache.commons.math3.util$FastMath#log(double)": 844.9389534883721,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.9830508474576272,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1079.3575581395348,
        "org.apache.commons.math3.util$FastMath#log10(double)": 55.05084745762712,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 503.3220338983051,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 849.4201388888889,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9661016949152543,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 657.4040697674419,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 11.796610169491526,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 439.7413793103448,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9661016949152543,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 883.1923076923077,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 45.220338983050844,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 14.745762711864407,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.9491525423728815,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 2.9491525423728815,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.9830508474576272,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 412.1162464985995,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 412.1162464985995,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 656.6779661016949,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 201.12280701754386,
        "org.apache.commons.math3.util$FastMath#random()": 18.677966101694917,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.915254237288136,
        "org.apache.commons.math3.util$FastMath#rint(double)": 70.77966101694915,
        "org.apache.commons.math3.util$FastMath#round(double)": 23.593220338983052,
        "org.apache.commons.math3.util$FastMath#round(float)": 0.9830508474576272,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 62.91525423728814,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9661016949152543,
        "org.apache.commons.math3.util$FastMath#signum(double)": 13.76271186440678,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9661016949152543,
        "org.apache.commons.math3.util$FastMath#sin(double)": 382.83053221288515,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 390.640056022409,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 33.42372881355932,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1844.071052631579,
        "org.apache.commons.math3.util$FastMath#tan(double)": 29.491525423728813,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 29.491525423728813,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 14.745762711864407,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3.9322033898305087,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3.9322033898305087,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 252.0344827586207,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 0.9830508474576272,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double)": 309.6162464985995,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 309.6162464985995,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 309.6162464985995,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 309.6162464985995,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 1000.7457627118644,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 995.8305084745763,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1059.8226744186047,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 1178.0087209302326,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 1000.7457627118644,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 1000.7457627118644,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 995.8305084745763,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 995.8305084745763,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 1059.8226744186047,
        "org.apache.commons.math3.util$Incrementor#Incrementor()": 580.3508771929825,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int)": 635.3684210526316,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int,org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback)": 821.4769585253456,
        "org.apache.commons.math3.util$Incrementor#canIncrement()": 1.9661016949152543,
        "org.apache.commons.math3.util$Incrementor#getCount()": 211.7995391705069,
        "org.apache.commons.math3.util$Incrementor#getMaximalCount()": 13.224137931034484,
        "org.apache.commons.math3.util$Incrementor#incrementCount()": 748.8963133640553,
        "org.apache.commons.math3.util$Incrementor#incrementCount(int)": 0.9830508474576272,
        "org.apache.commons.math3.util$Incrementor#resetCount()": 777.9285714285714,
        "org.apache.commons.math3.util$Incrementor#setMaximalCount(int)": 749.8640552995391,
        "org.apache.commons.math3.util$Incrementor$1#trigger(int)": 17.694915254237287,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 0.0,
        "org.apache.commons.math3.util$MathArrays#buildArray(org.apache.commons.math3.Field,int)": 130.74576271186442,
        "org.apache.commons.math3.util$MathArrays#buildArray(org.apache.commons.math3.Field,int,int)": 128.77966101694915,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[])": 397.1525423728813,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[][])": 4.915254237288136,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 48.16949152542373,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 49.152542372881356,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 143.52542372881356,
        "org.apache.commons.math3.util$MathArrays#checkPositive(double[])": 388.3050847457627,
        "org.apache.commons.math3.util$MathArrays#checkRectangular(long[][])": 4.915254237288136,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 24.03448275862069,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 50.56896551724138,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 5.898305084745763,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": 21.54360465116279,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 2.9491525423728815,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 6.88135593220339,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 0.9830508474576272,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 0.9830508474576272,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 0.9830508474576272,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 0.9830508474576272,
        "org.apache.commons.math3.util$MathArrays#ebeAdd(double[],double[])": 1.9661016949152543,
        "org.apache.commons.math3.util$MathArrays#ebeDivide(double[],double[])": 8.847457627118644,
        "org.apache.commons.math3.util$MathArrays#ebeMultiply(double[],double[])": 1.9661016949152543,
        "org.apache.commons.math3.util$MathArrays#ebeSubtract(double[],double[])": 1.9661016949152543,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 2.9491525423728815,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 4.915254237288136,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.9830508474576272,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.9830508474576272,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 71.76271186440678,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 73.72881355932203,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 11.796610169491526,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": 10.813559322033898,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": 23.593220338983052,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#scale(double,double[])": 0.9830508474576272,
        "org.apache.commons.math3.util$MathArrays#scaleInPlace(double,double[])": 0.9830508474576272,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 8.847457627118644,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 8.847457627118644,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 7.864406779661017,
        "org.apache.commons.math3.util$MathArrays$2#<clinit>()": 143.52542372881356,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 148.4406779661017,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 148.4406779661017,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 0.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 16.71186440677966,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 0.9830508474576272,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 1094.8943089430893,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 85.52542372881356,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 3.9322033898305087,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 3.9322033898305087,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 1.9661016949152543,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 1.9661016949152543,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 47.186440677966104,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 37.355932203389834,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 54.067796610169495,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 4.915254237288136,
        "org.apache.commons.math3.util$Pair#Pair(java.lang.Object,java.lang.Object)": 475.9930875576037,
        "org.apache.commons.math3.util$Pair#Pair(org.apache.commons.math3.util.Pair)": 0.0,
        "org.apache.commons.math3.util$Pair#equals(java.lang.Object)": 0.9830508474576272,
        "org.apache.commons.math3.util$Pair#getFirst()": 91.42372881355932,
        "org.apache.commons.math3.util$Pair#getKey()": 329.4825174825175,
        "org.apache.commons.math3.util$Pair#getSecond()": 91.42372881355932,
        "org.apache.commons.math3.util$Pair#getValue()": 238.13888888888889,
        "org.apache.commons.math3.util$Pair#hashCode()": 0.9830508474576272,
        "org.apache.commons.math3.util$Precision#<clinit>()": 1273.430894308943,
        "org.apache.commons.math3.util$Precision#Precision()": 0.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 76.1590909090909,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 50.13559322033898,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 158.87719298245614,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 469.02272727272725,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 844.5686274509804,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 0.9830508474576272,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 78.64406779661017,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 132.71186440677965,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 51.11864406779661,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 0.9830508474576272,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 77.66101694915254,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsWithRelativeTolerance(double,double,double)": 0.9830508474576272,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 0.9830508474576272,
        "org.apache.commons.math3.util$Precision#round(double,int)": 0.9830508474576272,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 0.9830508474576272,
        "org.apache.commons.math3.util$Precision#round(float,int)": 0.9830508474576272,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 0.9830508474576272,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 0.9830508474576272
    },
    "Math-7": {
        "org.apache.commons.math3.analysis.solvers$AbstractUnivariateSolver#AbstractUnivariateSolver(double)": 168.3548387096774,
        "org.apache.commons.math3.analysis.solvers$AbstractUnivariateSolver#AbstractUnivariateSolver(double,double)": 10.65625,
        "org.apache.commons.math3.analysis.solvers$AbstractUnivariateSolver#AbstractUnivariateSolver(double,double,double)": 8.71875,
        "org.apache.commons.math3.analysis.solvers$AllowedSolution#<clinit>()": 31.903225806451616,
        "org.apache.commons.math3.analysis.solvers$AllowedSolution#AllowedSolution(java.lang.String,int)": 31.903225806451616,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#BaseAbstractUnivariateSolver(double)": 178.03225806451613,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#BaseAbstractUnivariateSolver(double,double)": 10.65625,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#BaseAbstractUnivariateSolver(double,double,double)": 189.6451612903226,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#computeObjectiveValue(double)": 178.03225806451613,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getAbsoluteAccuracy()": 165.4516129032258,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getEvaluations()": 46.5,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getFunctionValueAccuracy()": 164.48387096774192,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getMax()": 177.06451612903226,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getMaxEvaluations()": 0.0,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getMin()": 177.06451612903226,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getRelativeAccuracy()": 157.70967741935485,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#getStartValue()": 136.41935483870967,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#incrementEvaluationCount()": 180.93548387096774,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#isBracketing(double,double)": 2.90625,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#isSequence(double,double,double)": 5.8125,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#setup(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 181.90322580645162,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double)": 4.84375,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 134.48387096774192,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 180.93548387096774,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#verifyBracketing(double,double)": 38.75,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#verifyInterval(double,double)": 6.78125,
        "org.apache.commons.math3.analysis.solvers$BaseAbstractUnivariateSolver#verifySequence(double,double,double)": 132.5483870967742,
        "org.apache.commons.math3.analysis.solvers$BracketingNthOrderBrentSolver#BracketingNthOrderBrentSolver()": 7.75,
        "org.apache.commons.math3.analysis.solvers$BracketingNthOrderBrentSolver#BracketingNthOrderBrentSolver(double,double,double,int)": 4.84375,
        "org.apache.commons.math3.analysis.solvers$BracketingNthOrderBrentSolver#BracketingNthOrderBrentSolver(double,double,int)": 1.9375,
        "org.apache.commons.math3.analysis.solvers$BracketingNthOrderBrentSolver#BracketingNthOrderBrentSolver(double,int)": -4.870967741935484,
        "org.apache.commons.math3.analysis.solvers$BracketingNthOrderBrentSolver#doSolve()": -4.870967741935484,
        "org.apache.commons.math3.analysis.solvers$BracketingNthOrderBrentSolver#getMaximalOrder()": 0.96875,
        "org.apache.commons.math3.analysis.solvers$BracketingNthOrderBrentSolver#guessX(double,double[],double[],int,int)": -6.806451612903224,
        "org.apache.commons.math3.analysis.solvers$BracketingNthOrderBrentSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution)": 1.9375,
        "org.apache.commons.math3.analysis.solvers$BracketingNthOrderBrentSolver#solve(int,org.apache.commons.math3.analysis.UnivariateFunction,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution)": -11.64516129032258,
        "org.apache.commons.math3.analysis.solvers$BracketingNthOrderBrentSolver$1#<clinit>()": -13.580645161290324,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#UnivariateSolverUtils()": 0.0,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 4.84375,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#bracket(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double,int)": 5.8125,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#forceSide(int,org.apache.commons.math3.analysis.UnivariateFunction,org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver,double,double,double,org.apache.commons.math3.analysis.solvers.AllowedSolution)": 4.84375,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#isBracketing(org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 38.75,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#isSequence(double,double,double)": 5.8125,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#midpoint(double,double)": 7.75,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#solve(org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 3.875,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#solve(org.apache.commons.math3.analysis.UnivariateFunction,double,double,double)": 95.90625,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#verifyBracketing(org.apache.commons.math3.analysis.UnivariateFunction,double,double)": 38.75,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#verifyInterval(double,double)": 210.93548387096774,
        "org.apache.commons.math3.analysis.solvers$UnivariateSolverUtils#verifySequence(double,double,double)": 136.41935483870967,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 169.53125,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 189.875,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 2.90625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.65625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 52.3125,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 840.875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 8.71875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 1.9375,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 684.90625,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 13.5625,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 62.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 89.125,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 59.09375,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(java.lang.Number)": 29.0625,
        "org.apache.commons.math3.exception$MaxCountExceededException#MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 29.0625,
        "org.apache.commons.math3.exception$MaxCountExceededException#getMax()": 12.59375,
        "org.apache.commons.math3.exception$NoBracketingException#NoBracketingException(double,double,double,double)": 10.65625,
        "org.apache.commons.math3.exception$NoBracketingException#NoBracketingException(org.apache.commons.math3.exception.util.Localizable,double,double,double,double,java.lang.Object[])": 10.65625,
        "org.apache.commons.math3.exception$NoBracketingException#getFHi()": 0.0,
        "org.apache.commons.math3.exception$NoBracketingException#getFLo()": 0.0,
        "org.apache.commons.math3.exception$NoBracketingException#getHi()": 0.0,
        "org.apache.commons.math3.exception$NoBracketingException#getLo()": 0.0,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 8.71875,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 19.375,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 47.46875,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 78.46875,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 46.5,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 72.65625,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 35.84375,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 142.40625,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 97.84375,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 230.5625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.90625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.90625,
        "org.apache.commons.math3.exception$TooManyEvaluationsException#TooManyEvaluationsException(java.lang.Number)": 22.28125,
        "org.apache.commons.math3.ode$AbstractIntegrator#AbstractIntegrator()": 0.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#AbstractIntegrator(java.lang.String)": 129.6451612903226,
        "org.apache.commons.math3.ode$AbstractIntegrator#acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double)": 106.41935483870967,
        "org.apache.commons.math3.ode$AbstractIntegrator#addEventHandler(org.apache.commons.math3.ode.events.EventHandler,double,double,int)": -14.548387096774192,
        "org.apache.commons.math3.ode$AbstractIntegrator#addEventHandler(org.apache.commons.math3.ode.events.EventHandler,double,double,int,org.apache.commons.math3.analysis.solvers.UnivariateSolver)": -10.677419354838708,
        "org.apache.commons.math3.ode$AbstractIntegrator#addStepHandler(org.apache.commons.math3.ode.sampling.StepHandler)": 91.90322580645162,
        "org.apache.commons.math3.ode$AbstractIntegrator#clearEventHandlers()": 16.46875,
        "org.apache.commons.math3.ode$AbstractIntegrator#clearStepHandlers()": 11.625,
        "org.apache.commons.math3.ode$AbstractIntegrator#computeDerivatives(double,double[],double[])": 113.19354838709677,
        "org.apache.commons.math3.ode$AbstractIntegrator#getCurrentSignedStepsize()": 42.625,
        "org.apache.commons.math3.ode$AbstractIntegrator#getCurrentStepStart()": 19.375,
        "org.apache.commons.math3.ode$AbstractIntegrator#getEvaluations()": 8.71875,
        "org.apache.commons.math3.ode$AbstractIntegrator#getEventHandlers()": 4.84375,
        "org.apache.commons.math3.ode$AbstractIntegrator#getMaxEvaluations()": 0.0,
        "org.apache.commons.math3.ode$AbstractIntegrator#getName()": 19.375,
        "org.apache.commons.math3.ode$AbstractIntegrator#getStepHandlers()": 10.65625,
        "org.apache.commons.math3.ode$AbstractIntegrator#initIntegration(double,double[],double)": 113.19354838709677,
        "org.apache.commons.math3.ode$AbstractIntegrator#integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[])": 121.90322580645162,
        "org.apache.commons.math3.ode$AbstractIntegrator#sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double)": 117.06451612903226,
        "org.apache.commons.math3.ode$AbstractIntegrator#setEquations(org.apache.commons.math3.ode.ExpandableStatefulODE)": 113.19354838709677,
        "org.apache.commons.math3.ode$AbstractIntegrator#setMaxEvaluations(int)": 129.6451612903226,
        "org.apache.commons.math3.ode$AbstractIntegrator#setStateInitialized(boolean)": 113.19354838709677,
        "org.apache.commons.math3.ode$AbstractIntegrator$1#compare(org.apache.commons.math3.ode.events.EventState,org.apache.commons.math3.ode.events.EventState)": -14.548387096774192,
        "org.apache.commons.math3.ode$EquationsMapper#EquationsMapper(int,int)": 125.7741935483871,
        "org.apache.commons.math3.ode$EquationsMapper#extractEquationData(double[],double[])": 120.93548387096774,
        "org.apache.commons.math3.ode$EquationsMapper#getDimension()": 122.87096774193549,
        "org.apache.commons.math3.ode$EquationsMapper#getFirstIndex()": 3.875,
        "org.apache.commons.math3.ode$EquationsMapper#insertEquationData(double[],double[])": 113.19354838709677,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#ExpandableStatefulODE(org.apache.commons.math3.ode.FirstOrderDifferentialEquations)": 117.06451612903226,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#addSecondaryEquations(org.apache.commons.math3.ode.SecondaryEquations)": 3.875,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#computeDerivatives(double,double[],double[])": 113.19354838709677,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#getCompleteState()": 113.19354838709677,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#getPrimary()": 3.875,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#getPrimaryMapper()": 114.16129032258064,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#getPrimaryState()": 131.75,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#getPrimaryStateDot()": 0.0,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#getSecondaryMappers()": 113.19354838709677,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#getSecondaryState(int)": 3.875,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#getSecondaryStateDot(int)": 0.0,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#getTime()": 117.06451612903226,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#getTotalDimension()": 113.19354838709677,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#setCompleteState(double[])": 133.6875,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#setPrimaryState(double[])": 117.06451612903226,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#setSecondaryState(int,double[])": 3.875,
        "org.apache.commons.math3.ode$ExpandableStatefulODE#setTime(double)": 117.06451612903226,
        "org.apache.commons.math3.ode$ExpandableStatefulODE$SecondaryComponent#ExpandableStatefulODE$SecondaryComponent(org.apache.commons.math3.ode.SecondaryEquations,int)": 3.875,
        "org.apache.commons.math3.ode.events$EventHandler$Action#<clinit>()": -9.70967741935484,
        "org.apache.commons.math3.ode.events$EventHandler$Action#EventHandler$Action(java.lang.String,int)": -9.70967741935484,
        "org.apache.commons.math3.ode.events$EventState#EventState(org.apache.commons.math3.ode.events.EventHandler,double,double,int,org.apache.commons.math3.analysis.solvers.UnivariateSolver)": -9.70967741935484,
        "org.apache.commons.math3.ode.events$EventState#evaluateStep(org.apache.commons.math3.ode.sampling.StepInterpolator)": -9.70967741935484,
        "org.apache.commons.math3.ode.events$EventState#getConvergence()": 0.0,
        "org.apache.commons.math3.ode.events$EventState#getEventHandler()": -10.677419354838708,
        "org.apache.commons.math3.ode.events$EventState#getEventTime()": -13.580645161290324,
        "org.apache.commons.math3.ode.events$EventState#getMaxCheckInterval()": 0.0,
        "org.apache.commons.math3.ode.events$EventState#getMaxIterationCount()": 0.0,
        "org.apache.commons.math3.ode.events$EventState#reinitializeBegin(org.apache.commons.math3.ode.sampling.StepInterpolator)": -9.70967741935484,
        "org.apache.commons.math3.ode.events$EventState#reset(double,double[])": -16.483870967741936,
        "org.apache.commons.math3.ode.events$EventState#stepAccepted(double,double[])": -9.70967741935484,
        "org.apache.commons.math3.ode.events$EventState#stop()": -10.677419354838708,
        "org.apache.commons.math3.ode.events$EventState$1#value(double)": -12.612903225806452,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#AdaptiveStepsizeIntegrator(java.lang.String,double,double,double,double)": 66.74193548387096,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#AdaptiveStepsizeIntegrator(java.lang.String,double,double,double[],double[])": 13.5625,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#filterStep(double,boolean,boolean)": 69.64516129032258,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#getCurrentStepStart()": 23.25,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#getMaxStep()": 67.70967741935483,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#getMinStep()": 67.70967741935483,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#initializeStep(boolean,int,double[],double,double[],double[],double[],double[])": 70.61290322580645,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#resetInternalState()": 80.29032258064517,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double)": 74.48387096774194,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#setInitialStepSize(double)": 2.90625,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#setStepSizeControl(double,double,double,double)": 66.74193548387096,
        "org.apache.commons.math3.ode.nonstiff$AdaptiveStepsizeIntegrator#setStepSizeControl(double,double,double[],double[])": 13.5625,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853Integrator#<clinit>()": 0.9354838709677438,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853Integrator#DormandPrince853Integrator(double,double,double,double)": -1.9677419354838719,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853Integrator#DormandPrince853Integrator(double,double,double[],double[])": 2.90625,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853Integrator#estimateError(double[][],double[],double[],double)": -2.93548387096774,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853Integrator#getOrder()": 0.9354838709677438,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853StepInterpolator#<clinit>()": 0.9354838709677438,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853StepInterpolator#DormandPrince853StepInterpolator()": 0.9354838709677438,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853StepInterpolator#DormandPrince853StepInterpolator(org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator)": -2.93548387096774,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853StepInterpolator#computeInterpolatedStateAndDerivatives(double,double)": -5.838709677419356,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853StepInterpolator#doCopy()": -2.93548387096774,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853StepInterpolator#doFinalize()": -2.93548387096774,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853StepInterpolator#readExternal(java.io.ObjectInput)": 0.96875,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853StepInterpolator#reinitialize(org.apache.commons.math3.ode.AbstractIntegrator,double[],double[][],boolean,org.apache.commons.math3.ode.EquationsMapper,org.apache.commons.math3.ode.EquationsMapper[])": -2.93548387096774,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853StepInterpolator#storeTime(double)": -2.93548387096774,
        "org.apache.commons.math3.ode.nonstiff$DormandPrince853StepInterpolator#writeExternal(java.io.ObjectOutput)": 0.96875,
        "org.apache.commons.math3.ode.nonstiff$EmbeddedRungeKuttaIntegrator#EmbeddedRungeKuttaIntegrator(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double,double)": 21.258064516129032,
        "org.apache.commons.math3.ode.nonstiff$EmbeddedRungeKuttaIntegrator#EmbeddedRungeKuttaIntegrator(java.lang.String,boolean,double[],double[][],double[],org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator,double,double,double[],double[])": 12.59375,
        "org.apache.commons.math3.ode.nonstiff$EmbeddedRungeKuttaIntegrator#getMaxGrowth()": 0.96875,
        "org.apache.commons.math3.ode.nonstiff$EmbeddedRungeKuttaIntegrator#getMinReduction()": 0.96875,
        "org.apache.commons.math3.ode.nonstiff$EmbeddedRungeKuttaIntegrator#getSafety()": 0.96875,
        "org.apache.commons.math3.ode.nonstiff$EmbeddedRungeKuttaIntegrator#integrate(org.apache.commons.math3.ode.ExpandableStatefulODE,double)": 29.0,
        "org.apache.commons.math3.ode.nonstiff$EmbeddedRungeKuttaIntegrator#setMaxGrowth(double)": 33.83870967741936,
        "org.apache.commons.math3.ode.nonstiff$EmbeddedRungeKuttaIntegrator#setMinReduction(double)": 33.83870967741936,
        "org.apache.commons.math3.ode.nonstiff$EmbeddedRungeKuttaIntegrator#setSafety(double)": 33.83870967741936,
        "org.apache.commons.math3.ode.nonstiff$RungeKuttaStepInterpolator#RungeKuttaStepInterpolator()": 83.19354838709677,
        "org.apache.commons.math3.ode.nonstiff$RungeKuttaStepInterpolator#RungeKuttaStepInterpolator(org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator)": 68.6774193548387,
        "org.apache.commons.math3.ode.nonstiff$RungeKuttaStepInterpolator#readExternal(java.io.ObjectInput)": 7.75,
        "org.apache.commons.math3.ode.nonstiff$RungeKuttaStepInterpolator#reinitialize(org.apache.commons.math3.ode.AbstractIntegrator,double[],double[][],boolean,org.apache.commons.math3.ode.EquationsMapper,org.apache.commons.math3.ode.EquationsMapper[])": 71.58064516129032,
        "org.apache.commons.math3.ode.nonstiff$RungeKuttaStepInterpolator#shift()": 71.58064516129032,
        "org.apache.commons.math3.ode.nonstiff$RungeKuttaStepInterpolator#writeExternal(java.io.ObjectOutput)": 7.75,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#AbstractStepInterpolator()": 85.12903225806451,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#AbstractStepInterpolator(double[],boolean,org.apache.commons.math3.ode.EquationsMapper,org.apache.commons.math3.ode.EquationsMapper[])": 50.375,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#AbstractStepInterpolator(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator)": 71.58064516129032,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#allocateInterpolatedArrays(int)": 132.5483870967742,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#copy()": 71.58064516129032,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#doFinalize()": 76.53125,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#evaluateCompleteInterpolatedState()": 114.16129032258064,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#finalizeStep()": 73.51612903225806,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#getCurrentTime()": 98.67741935483872,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#getGlobalCurrentTime()": 106.41935483870967,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#getGlobalPreviousTime()": 106.41935483870967,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#getInterpolatedDerivatives()": 52.3125,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#getInterpolatedSecondaryDerivatives(int)": 0.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#getInterpolatedSecondaryState(int)": 0.0,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#getInterpolatedState()": 114.16129032258064,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#getInterpolatedTime()": 52.3125,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#getPreviousTime()": 94.80645161290323,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#isForward()": 108.35483870967741,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#readBaseExternal(java.io.ObjectInput)": 10.65625,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#reinitialize(double[],boolean,org.apache.commons.math3.ode.EquationsMapper,org.apache.commons.math3.ode.EquationsMapper[])": 71.58064516129032,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#setInterpolatedTime(double)": 121.90322580645162,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#setSoftCurrentTime(double)": -14.548387096774192,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#setSoftPreviousTime(double)": -14.548387096774192,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#shift()": 121.90322580645162,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#storeTime(double)": 121.90322580645162,
        "org.apache.commons.math3.ode.sampling$AbstractStepInterpolator#writeBaseExternal(java.io.ObjectOutput)": 11.625,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 3335.7741935483873,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 8.71875,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1974.1612903225807,
        "org.apache.commons.math3.util$FastMath#abs(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#abs(int)": 319.6875,
        "org.apache.commons.math3.util$FastMath#abs(long)": 878.6774193548387,
        "org.apache.commons.math3.util$FastMath#acos(double)": 34.875,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 4.84375,
        "org.apache.commons.math3.util$FastMath#asin(double)": 35.84375,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 4.84375,
        "org.apache.commons.math3.util$FastMath#atan(double)": 36.8125,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 126.90625,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 91.0625,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 4.84375,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 44.5625,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 255.4516129032258,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 19.375,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cos(double)": 274.80645161290323,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 353.19354838709677,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 32.9375,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 89.125,
        "org.apache.commons.math3.util$FastMath#exp(double)": 763.375,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 965.7741935483871,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 17.4375,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 38.75,
        "org.apache.commons.math3.util$FastMath#floor(double)": 717.0645161290323,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 76.53125,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 71.6875,
        "org.apache.commons.math3.util$FastMath#log(double)": 856.375,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1052.8709677419354,
        "org.apache.commons.math3.util$FastMath#log10(double)": 54.25,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 496.0,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 839.9677419354839,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 634.8064516129032,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 11.625,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 428.6774193548387,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 898.03125,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 44.5625,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 14.53125,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 395.7741935483871,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 395.7741935483871,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 611.5806451612904,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 214.09375,
        "org.apache.commons.math3.util$FastMath#random()": 18.40625,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.84375,
        "org.apache.commons.math3.util$FastMath#rint(double)": 69.75,
        "org.apache.commons.math3.util$FastMath#round(double)": 23.25,
        "org.apache.commons.math3.util$FastMath#round(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 62.0,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9375,
        "org.apache.commons.math3.util$FastMath#signum(double)": 13.5625,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#sin(double)": 366.741935483871,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 374.48387096774195,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 32.9375,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1814.483870967742,
        "org.apache.commons.math3.util$FastMath#tan(double)": 29.0625,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 29.0625,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 14.53125,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 244.80645161290323,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double)": 326.46875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 326.46875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 326.46875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 326.46875,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 950.2903225806451,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 945.4516129032259,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1033.516129032258,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#<clinit>()": 1150.6129032258063,
        "org.apache.commons.math3.util$FastMathLiteralArrays#FastMathLiteralArrays()": 0.0,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracA()": 950.2903225806451,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpFracB()": 950.2903225806451,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntA()": 945.4516129032259,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadExpIntB()": 945.4516129032259,
        "org.apache.commons.math3.util$FastMathLiteralArrays#loadLnMant()": 1033.516129032258,
        "org.apache.commons.math3.util$Incrementor#Incrementor()": 554.483870967742,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int)": 608.6774193548387,
        "org.apache.commons.math3.util$Incrementor#Incrementor(int,org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback)": 813.8387096774194,
        "org.apache.commons.math3.util$Incrementor#canIncrement()": 1.9375,
        "org.apache.commons.math3.util$Incrementor#getCount()": 222.8125,
        "org.apache.commons.math3.util$Incrementor#getMaximalCount()": 44.5625,
        "org.apache.commons.math3.util$Incrementor#incrementCount()": 741.258064516129,
        "org.apache.commons.math3.util$Incrementor#incrementCount(int)": 0.96875,
        "org.apache.commons.math3.util$Incrementor#resetCount()": 770.2903225806451,
        "org.apache.commons.math3.util$Incrementor#setMaximalCount(int)": 742.2258064516129,
        "org.apache.commons.math3.util$Incrementor$1#trigger(int)": 17.4375,
        "org.apache.commons.math3.util$MathUtils#MathUtils()": 0.0,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double)": 16.46875,
        "org.apache.commons.math3.util$MathUtils#checkFinite(double[])": 0.96875,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object)": 1069.3225806451612,
        "org.apache.commons.math3.util$MathUtils#checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 84.28125,
        "org.apache.commons.math3.util$MathUtils#copySign(byte,byte)": 3.875,
        "org.apache.commons.math3.util$MathUtils#copySign(int,int)": 3.875,
        "org.apache.commons.math3.util$MathUtils#copySign(long,long)": 1.9375,
        "org.apache.commons.math3.util$MathUtils#copySign(short,short)": 1.9375,
        "org.apache.commons.math3.util$MathUtils#hash(double)": 46.5,
        "org.apache.commons.math3.util$MathUtils#hash(double[])": 36.8125,
        "org.apache.commons.math3.util$MathUtils#normalizeAngle(double,double)": 53.28125,
        "org.apache.commons.math3.util$MathUtils#reduce(double,double,double)": 4.84375,
        "org.apache.commons.math3.util$Precision#<clinit>()": 1246.4193548387098,
        "org.apache.commons.math3.util$Precision#Precision()": 0.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,double)": 93.0,
        "org.apache.commons.math3.util$Precision#compareTo(double,double,int)": 49.40625,
        "org.apache.commons.math3.util$Precision#equals(double,double)": 174.375,
        "org.apache.commons.math3.util$Precision#equals(double,double,double)": 481.46875,
        "org.apache.commons.math3.util$Precision#equals(double,double,int)": 820.6129032258065,
        "org.apache.commons.math3.util$Precision#equals(float,float)": 0.96875,
        "org.apache.commons.math3.util$Precision#equals(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equals(float,float,int)": 77.5,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double)": 130.78125,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,double)": 50.375,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(double,double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float)": 76.53125,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,float)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsIncludingNaN(float,float,int)": 0.0,
        "org.apache.commons.math3.util$Precision#equalsWithRelativeTolerance(double,double,double)": 0.96875,
        "org.apache.commons.math3.util$Precision#representableDelta(double,double)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(double,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#round(float,int,int)": 0.96875,
        "org.apache.commons.math3.util$Precision#roundUnscaled(double,double,int)": 0.96875
    },
    "Math-8": {
        "org.apache.commons.math3.distribution$AbstractRealDistribution#AbstractRealDistribution()": 0.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#AbstractRealDistribution(org.apache.commons.math3.random.RandomGenerator)": 606.741935483871,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#cumulativeProbability(double,double)": 43.59375,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#getSolverAbsoluteAccuracy()": 1.9375,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#inverseCumulativeProbability(double)": 107.53125,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#probability(double)": 0.0,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#probability(double,double)": 46.5,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#reseedRandomGenerator(long)": 23.25,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#sample()": 74.59375,
        "org.apache.commons.math3.distribution$AbstractRealDistribution#sample(int)": 13.5625,
        "org.apache.commons.math3.distribution$AbstractRealDistribution$1#value(double)": 95.90625,
        "org.apache.commons.math3.distribution$DiscreteDistribution#DiscreteDistribution(java.util.List)": -31.0,
        "org.apache.commons.math3.distribution$DiscreteDistribution#DiscreteDistribution(org.apache.commons.math3.random.RandomGenerator,java.util.List)": -10.677419354838708,
        "org.apache.commons.math3.distribution$DiscreteDistribution#getSamples()": 11.625,
        "org.apache.commons.math3.distribution$DiscreteDistribution#probability(java.lang.Object)": 2.90625,
        "org.apache.commons.math3.distribution$DiscreteDistribution#reseedRandomGenerator(long)": 0.0,
        "org.apache.commons.math3.distribution$DiscreteDistribution#sample()": -29.064516129032256,
        "org.apache.commons.math3.distribution$DiscreteDistribution#sample(int)": -31.0,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#DiscreteRealDistribution(double[],double[])": -19.387096774193548,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#DiscreteRealDistribution(org.apache.commons.math3.random.RandomGenerator,double[],double[])": -19.387096774193548,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#cumulativeProbability(double)": 0.96875,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#density(double)": 0.96875,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#getNumericalMean()": 1.9375,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#getNumericalVariance()": 1.9375,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#getSupportLowerBound()": 0.96875,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#getSupportUpperBound()": 0.96875,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#isSupportConnected()": 0.96875,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#isSupportLowerBoundInclusive()": 0.96875,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#isSupportUpperBoundInclusive()": 0.96875,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#probability(double)": 1.9375,
        "org.apache.commons.math3.distribution$DiscreteRealDistribution#sample()": 0.96875,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 167.59375,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 187.9375,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 2.90625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.65625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 52.3125,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 819.5625,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 8.71875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 668.4375,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 13.5625,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 62.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 89.125,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 59.09375,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 15.5,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 0.96875,
        "org.apache.commons.math3.exception$NotANumberException#NotANumberException()": 12.59375,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(java.lang.Number,java.lang.Object[])": 6.78125,
        "org.apache.commons.math3.exception$NotFiniteNumberException#NotFiniteNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 17.4375,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 19.375,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 11.625,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 47.46875,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 78.46875,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 45.53125,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 71.6875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)": 32.9375,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 127.875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getBoundIsAllowed()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooLargeException#getMax()": 0.96875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 97.84375,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 230.5625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.90625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.90625,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)": 39.71875,
        "org.apache.commons.math3.exception$OutOfRangeException#OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)": 188.90625,
        "org.apache.commons.math3.exception$OutOfRangeException#getHi()": 0.96875,
        "org.apache.commons.math3.exception$OutOfRangeException#getLo()": 0.96875,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int)": 647.3870967741935,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,int)": 364.25,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,int[])": 1016.0967741935483,
        "org.apache.commons.math3.random$AbstractWell#AbstractWell(int,int,int,int,long)": 706.21875,
        "org.apache.commons.math3.random$AbstractWell#setSeed(int)": 5.8125,
        "org.apache.commons.math3.random$AbstractWell#setSeed(int[])": 1016.0967741935483,
        "org.apache.commons.math3.random$AbstractWell#setSeed(long)": 959.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#BitsStreamGenerator()": 1109.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#clear()": 1109.0,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBoolean()": 27.125,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextBytes(byte[])": 19.375,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextDouble()": 468.35483870967744,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextFloat()": 27.125,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextGaussian()": 104.625,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt()": 34.875,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextInt(int)": 35.84375,
        "org.apache.commons.math3.random$BitsStreamGenerator#nextLong()": 27.125,
        "org.apache.commons.math3.random$RandomDataGenerator#RandomDataGenerator()": 968.6774193548387,
        "org.apache.commons.math3.random$RandomDataGenerator#RandomDataGenerator(org.apache.commons.math3.random.RandomGenerator)": 589.96875,
        "org.apache.commons.math3.random$RandomDataGenerator#getNatural(int)": 23.25,
        "org.apache.commons.math3.random$RandomDataGenerator#getRan()": 667.46875,
        "org.apache.commons.math3.random$RandomDataGenerator#getSecRan()": 17.4375,
        "org.apache.commons.math3.random$RandomDataGenerator#initRan()": 664.5625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextBeta(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextBinomial(int,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextCauchy(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextChiSquare(double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextExponential(double)": 12.59375,
        "org.apache.commons.math3.random$RandomDataGenerator#nextF(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextGamma(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextGaussian(double,double)": 19.375,
        "org.apache.commons.math3.random$RandomDataGenerator#nextHexString(int)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextHypergeometric(int,int,int)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextInt(int,int)": 66.84375,
        "org.apache.commons.math3.random$RandomDataGenerator#nextLong(long,long)": 64.90625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPascal(int,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPermutation(int,int)": 23.25,
        "org.apache.commons.math3.random$RandomDataGenerator#nextPoisson(double)": 21.3125,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSample(java.util.Collection,int)": 11.625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureHexString(int)": 11.625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureInt(int,int)": 3.875,
        "org.apache.commons.math3.random$RandomDataGenerator#nextSecureLong(long,long)": 14.53125,
        "org.apache.commons.math3.random$RandomDataGenerator#nextT(double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextUniform(double,double)": 116.25,
        "org.apache.commons.math3.random$RandomDataGenerator#nextUniform(double,double,boolean)": 116.25,
        "org.apache.commons.math3.random$RandomDataGenerator#nextWeibull(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#nextZipf(int,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeed()": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeed(long)": 661.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeedSecure()": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#reSeedSecure(long)": 10.65625,
        "org.apache.commons.math3.random$RandomDataGenerator#setSecureAlgorithm(java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.math3.random$RandomDataGenerator#shuffle(int[],int)": 23.25,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl()": 968.6774193548387,
        "org.apache.commons.math3.random$RandomDataImpl#RandomDataImpl(org.apache.commons.math3.random.RandomGenerator)": 589.0,
        "org.apache.commons.math3.random$RandomDataImpl#getDelegate()": 2.90625,
        "org.apache.commons.math3.random$RandomDataImpl#nextBeta(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextBinomial(int,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextCauchy(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextChiSquare(double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextExponential(double)": 12.59375,
        "org.apache.commons.math3.random$RandomDataImpl#nextF(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextGamma(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextGaussian(double,double)": 12.59375,
        "org.apache.commons.math3.random$RandomDataImpl#nextHexString(int)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextHypergeometric(int,int,int)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextInt(int,int)": 43.59375,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.IntegerDistribution)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextInversionDeviate(org.apache.commons.math3.distribution.RealDistribution)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextLong(long,long)": 64.90625,
        "org.apache.commons.math3.random$RandomDataImpl#nextPascal(int,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextPermutation(int,int)": 11.625,
        "org.apache.commons.math3.random$RandomDataImpl#nextPoisson(double)": 21.3125,
        "org.apache.commons.math3.random$RandomDataImpl#nextSample(java.util.Collection,int)": 11.625,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureHexString(int)": 11.625,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureInt(int,int)": 3.875,
        "org.apache.commons.math3.random$RandomDataImpl#nextSecureLong(long,long)": 14.53125,
        "org.apache.commons.math3.random$RandomDataImpl#nextT(double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double)": 108.5,
        "org.apache.commons.math3.random$RandomDataImpl#nextUniform(double,double,boolean)": 0.0,
        "org.apache.commons.math3.random$RandomDataImpl#nextWeibull(double,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#nextZipf(int,double)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed()": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#reSeed(long)": 655.84375,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure()": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#reSeedSecure(long)": 10.65625,
        "org.apache.commons.math3.random$RandomDataImpl#setSecureAlgorithm(java.lang.String,java.lang.String)": 0.0,
        "org.apache.commons.math3.random$Well19937c#Well19937c()": 647.3870967741935,
        "org.apache.commons.math3.random$Well19937c#Well19937c(int)": 73.625,
        "org.apache.commons.math3.random$Well19937c#Well19937c(int[])": 0.96875,
        "org.apache.commons.math3.random$Well19937c#Well19937c(long)": 664.5625,
        "org.apache.commons.math3.random$Well19937c#next(int)": 120.93548387096774,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 0.0,
        "org.apache.commons.math3.util$MathArrays#buildArray(org.apache.commons.math3.Field,int)": 128.84375,
        "org.apache.commons.math3.util$MathArrays#buildArray(org.apache.commons.math3.Field,int,int)": 126.90625,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[])": 369.09375,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[][])": 4.84375,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 47.46875,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 48.4375,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 140.46875,
        "org.apache.commons.math3.util$MathArrays#checkPositive(double[])": 360.375,
        "org.apache.commons.math3.util$MathArrays#checkRectangular(long[][])": 4.84375,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 54.25,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 80.40625,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 5.8125,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": 39.71875,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 2.90625,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 6.78125,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#ebeAdd(double[],double[])": 1.9375,
        "org.apache.commons.math3.util$MathArrays#ebeDivide(double[],double[])": 8.71875,
        "org.apache.commons.math3.util$MathArrays#ebeMultiply(double[],double[])": 1.9375,
        "org.apache.commons.math3.util$MathArrays#ebeSubtract(double[],double[])": 1.9375,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 2.90625,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 4.84375,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.96875,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.96875,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 70.71875,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 72.65625,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 11.625,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": 10.65625,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": -8.741935483870968,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 8.71875,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 8.71875,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 7.75,
        "org.apache.commons.math3.util$MathArrays$2#<clinit>()": 140.46875,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 145.3125,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 145.3125,
        "org.apache.commons.math3.util$Pair#Pair(java.lang.Object,java.lang.Object)": 470.2903225806452,
        "org.apache.commons.math3.util$Pair#Pair(org.apache.commons.math3.util.Pair)": 0.0,
        "org.apache.commons.math3.util$Pair#equals(java.lang.Object)": 0.96875,
        "org.apache.commons.math3.util$Pair#getFirst()": 89.125,
        "org.apache.commons.math3.util$Pair#getKey()": 324.16129032258067,
        "org.apache.commons.math3.util$Pair#getSecond()": 89.125,
        "org.apache.commons.math3.util$Pair#getValue()": 233.19354838709677,
        "org.apache.commons.math3.util$Pair#hashCode()": 0.96875
    },
    "Math-9": {
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(int,int)": 165.65625,
        "org.apache.commons.math3.exception$DimensionMismatchException#DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)": 186.0,
        "org.apache.commons.math3.exception$DimensionMismatchException#getDimension()": 2.90625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException()": 10.65625,
        "org.apache.commons.math3.exception$MathArithmeticException#MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 50.375,
        "org.apache.commons.math3.exception$MathArithmeticException#getContext()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathArithmeticException#getMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 817.625,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getContext()": 8.71875,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getLocalizedMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalArgumentException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$MathIllegalNumberException#MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])": 665.53125,
        "org.apache.commons.math3.exception$MathIllegalNumberException#getArgument()": 13.5625,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException()": 62.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(java.lang.Throwable,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 0.0,
        "org.apache.commons.math3.exception$MathIllegalStateException#MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 88.15625,
        "org.apache.commons.math3.exception$MathIllegalStateException#getContext()": 58.125,
        "org.apache.commons.math3.exception$MathIllegalStateException#getLocalizedMessage()": 0.96875,
        "org.apache.commons.math3.exception$MathIllegalStateException#getMessage()": 0.0,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int)": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 15.5,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getDirection()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getIndex()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getPrevious()": 0.96875,
        "org.apache.commons.math3.exception$NonMonotonicSequenceException#getStrict()": 0.96875,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(java.lang.Number)": 17.4375,
        "org.apache.commons.math3.exception$NotPositiveException#NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 11.625,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(java.lang.Number)": 46.5,
        "org.apache.commons.math3.exception$NotStrictlyPositiveException#NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)": 78.46875,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException()": 45.53125,
        "org.apache.commons.math3.exception$NullArgumentException#NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])": 71.6875,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)": 94.9375,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)": 227.65625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getBoundIsAllowed()": 2.90625,
        "org.apache.commons.math3.exception$NumberIsTooSmallException#getMin()": 2.90625,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#Line(org.apache.commons.math3.geometry.euclidean.threed.Line)": 0.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#Line(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": -5.838709677419356,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#closestPoint(org.apache.commons.math3.geometry.euclidean.threed.Line)": 7.75,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#contains(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 10.65625,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#distance(org.apache.commons.math3.geometry.euclidean.threed.Line)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 12.59375,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#getAbscissa(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 6.78125,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#getDirection()": -22.29032258064516,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#getOrigin()": 0.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#intersection(org.apache.commons.math3.geometry.euclidean.threed.Line)": 6.78125,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#isSimilarTo(org.apache.commons.math3.geometry.euclidean.threed.Line)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#pointAt(double)": 11.625,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": -5.838709677419356,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#revert()": -31.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#toSpace(org.apache.commons.math3.geometry.Vector)": 11.625,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#toSubSpace(org.apache.commons.math3.geometry.Vector)": 6.78125,
        "org.apache.commons.math3.geometry.euclidean.threed$Line#wholeLine()": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#<clinit>()": 124.80645161290323,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,double)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,double,double)": 124.80645161290323,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 3.8387096774193523,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": -1.0,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 7.75,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#Vector3D(double[])": 4.84375,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#add(double,org.apache.commons.math3.geometry.Vector)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#add(org.apache.commons.math3.geometry.Vector)": 16.46875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#angle(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 4.84375,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#crossProduct(org.apache.commons.math3.geometry.Vector)": 30.03125,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 26.15625,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance(org.apache.commons.math3.geometry.Vector)": 14.53125,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 1.9375,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance1(org.apache.commons.math3.geometry.Vector)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceInf(org.apache.commons.math3.geometry.Vector)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceSq(org.apache.commons.math3.geometry.Vector)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#distanceSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#dotProduct(org.apache.commons.math3.geometry.Vector)": 14.483870967741936,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#dotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)": 6.78125,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#equals(java.lang.Object)": 26.15625,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getAlpha()": 2.90625,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getDelta()": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNorm()": 57.15625,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNorm1()": 1.9375,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNormInf()": 1.9375,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getNormSq()": -4.870967741935484,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getSpace()": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getX()": 81.375,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getY()": 81.375,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getZ()": 82.34375,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#getZero()": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#hashCode()": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#isInfinite()": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#isNaN()": 29.0625,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#negate()": -28.096774193548388,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#normalize()": 4.84375,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#orthogonal()": 20.34375,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#scalarMultiply(double)": 8.71875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#subtract(double,org.apache.commons.math3.geometry.Vector)": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#subtract(org.apache.commons.math3.geometry.Vector)": 12.548387096774192,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#toArray()": -30.032258064516128,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#toString()": 0.96875,
        "org.apache.commons.math3.geometry.euclidean.threed$Vector3D#toString(java.text.NumberFormat)": 0.96875,
        "org.apache.commons.math3.util$FastMath#<clinit>()": 3304.8064516129034,
        "org.apache.commons.math3.util$FastMath#FastMath()": 0.0,
        "org.apache.commons.math3.util$FastMath#IEEEremainder(double,double)": 8.71875,
        "org.apache.commons.math3.util$FastMath#abs(double)": 1979.15625,
        "org.apache.commons.math3.util$FastMath#abs(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#abs(int)": 319.6875,
        "org.apache.commons.math3.util$FastMath#abs(long)": 899.96875,
        "org.apache.commons.math3.util$FastMath#acos(double)": 34.875,
        "org.apache.commons.math3.util$FastMath#acosh(double)": 4.84375,
        "org.apache.commons.math3.util$FastMath#asin(double)": 35.84375,
        "org.apache.commons.math3.util$FastMath#asinh(double)": 4.84375,
        "org.apache.commons.math3.util$FastMath#atan(double)": 36.8125,
        "org.apache.commons.math3.util$FastMath#atan(double,double,boolean)": 125.9375,
        "org.apache.commons.math3.util$FastMath#atan2(double,double)": 90.09375,
        "org.apache.commons.math3.util$FastMath#atanh(double)": 4.84375,
        "org.apache.commons.math3.util$FastMath#cbrt(double)": 44.5625,
        "org.apache.commons.math3.util$FastMath#ceil(double)": 284.8125,
        "org.apache.commons.math3.util$FastMath#copySign(double,double)": 19.375,
        "org.apache.commons.math3.util$FastMath#copySign(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#cos(double)": 306.125,
        "org.apache.commons.math3.util$FastMath#cosQ(double,double)": 383.625,
        "org.apache.commons.math3.util$FastMath#cosh(double)": 32.9375,
        "org.apache.commons.math3.util$FastMath#doubleHighPart(double)": 88.15625,
        "org.apache.commons.math3.util$FastMath#exp(double)": 741.09375,
        "org.apache.commons.math3.util$FastMath#exp(double,double,double[])": 976.5,
        "org.apache.commons.math3.util$FastMath#expm1(double)": 17.4375,
        "org.apache.commons.math3.util$FastMath#expm1(double,double[])": 38.75,
        "org.apache.commons.math3.util$FastMath#floor(double)": 788.5625,
        "org.apache.commons.math3.util$FastMath#getExponent(double)": 77.5,
        "org.apache.commons.math3.util$FastMath#getExponent(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#hypot(double,double)": 71.6875,
        "org.apache.commons.math3.util$FastMath#log(double)": 840.875,
        "org.apache.commons.math3.util$FastMath#log(double,double)": 0.96875,
        "org.apache.commons.math3.util$FastMath#log(double,double[])": 1070.46875,
        "org.apache.commons.math3.util$FastMath#log10(double)": 56.1875,
        "org.apache.commons.math3.util$FastMath#log1p(double)": 467.90625,
        "org.apache.commons.math3.util$FastMath#main(java.lang.String[])": 0.0,
        "org.apache.commons.math3.util$FastMath#max(double,double)": 862.1875,
        "org.apache.commons.math3.util$FastMath#max(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#max(int,int)": 650.03125,
        "org.apache.commons.math3.util$FastMath#max(long,long)": 0.96875,
        "org.apache.commons.math3.util$FastMath#min(double,double)": 457.25,
        "org.apache.commons.math3.util$FastMath#min(float,float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#min(int,int)": 869.9375,
        "org.apache.commons.math3.util$FastMath#min(long,long)": 33.90625,
        "org.apache.commons.math3.util$FastMath#nextAfter(double,double)": 14.53125,
        "org.apache.commons.math3.util$FastMath#nextAfter(float,double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(double)": 2.90625,
        "org.apache.commons.math3.util$FastMath#nextUp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#polyCosine(double)": 427.21875,
        "org.apache.commons.math3.util$FastMath#polySine(double)": 427.21875,
        "org.apache.commons.math3.util$FastMath#pow(double,double)": 620.0,
        "org.apache.commons.math3.util$FastMath#pow(double,int)": 212.15625,
        "org.apache.commons.math3.util$FastMath#random()": 18.40625,
        "org.apache.commons.math3.util$FastMath#reducePayneHanek(double,double[])": 4.84375,
        "org.apache.commons.math3.util$FastMath#rint(double)": 68.78125,
        "org.apache.commons.math3.util$FastMath#round(double)": 23.25,
        "org.apache.commons.math3.util$FastMath#round(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath#scalb(double,int)": 62.96875,
        "org.apache.commons.math3.util$FastMath#scalb(float,int)": 1.9375,
        "org.apache.commons.math3.util$FastMath#signum(double)": 13.5625,
        "org.apache.commons.math3.util$FastMath#signum(float)": 1.9375,
        "org.apache.commons.math3.util$FastMath#sin(double)": 398.15625,
        "org.apache.commons.math3.util$FastMath#sinQ(double,double)": 405.90625,
        "org.apache.commons.math3.util$FastMath#sinh(double)": 32.9375,
        "org.apache.commons.math3.util$FastMath#sqrt(double)": 1783.516129032258,
        "org.apache.commons.math3.util$FastMath#tan(double)": 29.0625,
        "org.apache.commons.math3.util$FastMath#tanQ(double,double,boolean)": 29.0625,
        "org.apache.commons.math3.util$FastMath#tanh(double)": 14.53125,
        "org.apache.commons.math3.util$FastMath#toDegrees(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#toRadians(double)": 3.875,
        "org.apache.commons.math3.util$FastMath#ulp(double)": 276.09375,
        "org.apache.commons.math3.util$FastMath#ulp(float)": 0.96875,
        "org.apache.commons.math3.util$FastMath$CodyWaite#FastMath$CodyWaite(double)": 323.5625,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getK()": 323.5625,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemA()": 323.5625,
        "org.apache.commons.math3.util$FastMath$CodyWaite#getRemB()": 323.5625,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#<clinit>()": 962.9375,
        "org.apache.commons.math3.util$FastMath$ExpFracTable#FastMath$ExpFracTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#<clinit>()": 957.125,
        "org.apache.commons.math3.util$FastMath$ExpIntTable#FastMath$ExpIntTable()": 0.0,
        "org.apache.commons.math3.util$FastMath$lnMant#<clinit>()": 1055.9375,
        "org.apache.commons.math3.util$FastMath$lnMant#FastMath$lnMant()": 0.0,
        "org.apache.commons.math3.util$MathArrays#MathArrays()": 0.0,
        "org.apache.commons.math3.util$MathArrays#buildArray(org.apache.commons.math3.Field,int)": 128.84375,
        "org.apache.commons.math3.util$MathArrays#buildArray(org.apache.commons.math3.Field,int,int)": 126.90625,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[])": 369.09375,
        "org.apache.commons.math3.util$MathArrays#checkNonNegative(long[][])": 4.84375,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[])": 47.46875,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 48.4375,
        "org.apache.commons.math3.util$MathArrays#checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)": 140.46875,
        "org.apache.commons.math3.util$MathArrays#checkPositive(double[])": 360.375,
        "org.apache.commons.math3.util$MathArrays#checkRectangular(long[][])": 4.84375,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[])": 54.25,
        "org.apache.commons.math3.util$MathArrays#copyOf(double[],int)": 80.40625,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[])": 5.8125,
        "org.apache.commons.math3.util$MathArrays#copyOf(int[],int)": 39.71875,
        "org.apache.commons.math3.util$MathArrays#distance(double[],double[])": 2.90625,
        "org.apache.commons.math3.util$MathArrays#distance(int[],int[])": 6.78125,
        "org.apache.commons.math3.util$MathArrays#distance1(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distance1(int[],int[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distanceInf(double[],double[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#distanceInf(int[],int[])": 0.96875,
        "org.apache.commons.math3.util$MathArrays#ebeAdd(double[],double[])": 1.9375,
        "org.apache.commons.math3.util$MathArrays#ebeDivide(double[],double[])": 8.71875,
        "org.apache.commons.math3.util$MathArrays#ebeMultiply(double[],double[])": 1.9375,
        "org.apache.commons.math3.util$MathArrays#ebeSubtract(double[],double[])": 1.9375,
        "org.apache.commons.math3.util$MathArrays#equals(double[],double[])": 2.90625,
        "org.apache.commons.math3.util$MathArrays#equals(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(double[],double[])": 4.84375,
        "org.apache.commons.math3.util$MathArrays#equalsIncludingNaN(float[],float[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.96875,
        "org.apache.commons.math3.util$MathArrays#isMonotonic(java.lang.Comparable[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)": 0.96875,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double)": 38.677419354838705,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double)": 40.61290322580645,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double,double,double,double,double,double,double,double)": 11.625,
        "org.apache.commons.math3.util$MathArrays#linearCombination(double[],double[])": 10.65625,
        "org.apache.commons.math3.util$MathArrays#normalizeArray(double[],double)": 1.9375,
        "org.apache.commons.math3.util$MathArrays#safeNorm(double[])": 0.0,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],double[][])": 8.71875,
        "org.apache.commons.math3.util$MathArrays#sortInPlace(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,double[][])": 8.71875,
        "org.apache.commons.math3.util$MathArrays$1#compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)": 7.75,
        "org.apache.commons.math3.util$MathArrays$2#<clinit>()": 140.46875,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#<clinit>()": 145.3125,
        "org.apache.commons.math3.util$MathArrays$OrderDirection#MathArrays$OrderDirection(java.lang.String,int)": 145.3125
    },
    "Time-1": {},
    "Time-10": {},
    "Time-11": {},
    "Time-12": {},
    "Time-13": {},
    "Time-14": {},
    "Time-15": {},
    "Time-17": {},
    "Time-18": {},
    "Time-19": {},
    "Time-2": {},
    "Time-20": {},
    "Time-3": {},
    "Time-4": {},
    "Time-6": {},
    "Time-7": {},
    "Time-8": {},
    "Time-9": {}
}